/***************************************************************************
 *                                                                         *
 * Library     : ram_cont                                                  *
 * Description : Control the size of the RAM Disc                          *
 * History     : 91-03-05 ans                                              *
 *               Started Library                                           *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 * Import Libraries                                                        *
 ***************************************************************************/

#include "kernel.h"
#include "os.h"               
#include "swis.h"
#include "werr.h"
 
/***************************************************************************
 * Macro's                                                                 *
 ***************************************************************************/

#define RAMDISC 5
#define NULL    0
             
/***************************************************************************
 * Exported Functions                                                      *
 ***************************************************************************/
                      
/* -------------------------- ramcontrol_amounttomove ----------------------
 *
 * Description : calculate the extension or contraction required by the 
 *               RAMDISC
 *
 * Parameters  : int rmin require size of RAM DISC
 * Return      : Integer of amount of bytes to extend ( +ve )
 * Other Info  : Internal Function       
 *
 */

int ramcontrol_amounttomove ( int rmin )
{
_kernel_oserror  *e;
_kernel_swi_regs  r;
int               rsize;
                                                      
     if ( ( e = _kernel_swi ( OS_ReadRAMFsLimits , &r , &r ) ) != NULL )
     {
      werr ( 0 , "%s" , e->errmess );
      return -1;
     }

     rsize = r.r[1] - r.r[0]; /* present sizr of RAMDISC ......... */

 return (rmin - rsize);   /* size to extend RAMDISC .............. */
}

/* ----------------------------- ramcontrol_readramsize --------------------
 *
 * Description : Reads the Ram Disc Size
 * 
 * Parameters  : None...
 * Return      : integer ram disc size
 * Other Info  : None...
 *
 */

int ramcontrol_readramsize ( void )
{
_kernel_oserror  *e;
_kernel_swi_regs  r;
                                  
   r.r[0]      = RAMDISC;          
   
   if ( ( e = _kernel_swi ( OS_ReadDynamicArea , &r , &r ) ) != NULL )
   {
    werr ( 0 , "%s" , e->errmess );
    return -1;
   }      

return r.r[1];
}


/* ------------------------- ramcontrol_requestramsize ---------------------
 *
 * Description : requests the ram disc size
 *
 * Parameters  : int rsize - ram size 
 * Return      : None...            
 * Other Info  : External Function
 *
 */

void ramcontrol_requestramsize ( int rsize )
{
_kernel_swi_regs  r;
_kernel_oserror  *e;
int               rext;

  rext         = ramcontrol_amounttomove ( rsize );

  if ( rext > 0 )
  {
   r.r[0]       = RAMDISC;
   r.r[1]       = rext;
   if ( ( e = _kernel_swi ( OS_ChangeDynamicArea , &r , &r ) ) != NULL )
    werr         ( 0 , "%s" , e->errmess);   
  }     

}
    
/* --------------------------- ramcontrol_setramsize -----------------------
 *
 * Description : requests the ram disc size
 *
 * Parameters  : int rsize - ram size 
 * Return      : None...            
 * Other Info  : External Function
 *
 */

void ramcontrol_setramsize ( int rsize )
{
_kernel_swi_regs  r;
_kernel_oserror  *e;
int               rext;

   rext         = ramcontrol_amounttomove ( rsize );

   r.r[0]       = RAMDISC;
   r.r[1]       = rext;
 
   if ( ( e = _kernel_swi ( OS_ChangeDynamicArea , &r , &r ) ) != NULL )
    werr         ( 0 , "%s" , e->errmess);   

}
                                    
/* end of Ram_Cont.c */
