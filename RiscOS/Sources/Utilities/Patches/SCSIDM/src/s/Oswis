        TTL                                             > s.SWIs
        ; ---------------------------------------------------------------------

a1      RN      0
a2      RN      1
a3      RN      2
a4      RN      3
v1      RN      4
v2      RN      5
v3      RN      6
v4      RN      7
v5      RN      8     ;
v6      RN      9     ;
fp      RN      11    ; 10
ip      RN      12    ; 11
sp      RN      13    ; 12
sl      RN      10    ; 13
lk      RN      14    ;
pc      RN      15    ;

link    RN      lk

r0      RN      0
r1      RN      1
r2      RN      2
r3      RN      3
r4      RN      4
r5      RN      5
r6      RN      6
r7      RN      7
r8      RN      8
r9      RN      9
r10     RN      10
r11     RN      11
r13     RN      13
r14     RN      14

lr      RN      14

        ; ---------------------------------------------------------------------

        AREA    SWIs,CODE,REL,PIC,READONLY

        ; ---------------------------------------------------------------------

        ; int SWIcall(unsigned int SWInumber,struct SWI_regset *regset) ;
|SWIcall|
        STMFD   sp!,{a2-v6,ip,lk}

        ; build the SWI instruction
        ORR     a3,a1,#&00020000        ; no error return bit set (bit 17)
        ORR     a3,a3,#&EF000000        ; "SWIAL" instruction
        STR     a3,action_SWI

        ; load up the registers from the structure
        MOV     ip,a2
        LDMIA   ip,{a1-v6}

        ; perform the desired SWI
action_SWI
        SWI     &000000         ; empty SWI, filled above

        ; save the registers back into the structure
        STMIA   ip,{a1-v6}

        MOV     a1,#0           ; OK (no error)
        MOVVS   a1,#-1          ; failed (error)

        LDMFD   sp!,{a2-v6,ip,pc}^

        ; ---------------------------------------------------------------------

        EXPORT  |SWIcall|

        ; ---------------------------------------------------------------------
        END
