/*
 * $Header$
 * $Source$
 *
 * Copyright (c) 1989 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.2  90/05/25  11:01:33  kwelton
 * removed define for MINADFS, replaced it with MINSCSIFS & MINRISCIX.
 * new definition OPTICALMED: expected medium type for optical drives.
 * 
 * Revision 1.1  89/04/06  11:22:01  kwelton
 * Initial revision
 * 
 * 
 */

/*
 * scsidm - program to provide low level SCSI disk management
 *
 * this segment, dmcmds.h:
 *
 * defines for SCSI commands
 *
 */

	/* SCSI command codes & command block sizes */
#define REQSEN	0x0603		/* request sense */
#define FORMAT	0x0604		/* format unit */
#define REASGN	0x0607		/* reassign blocks */
#define NEREAD	0x0608		/* non-extended read data */
#define NEWRITE	0x060a		/* non-extended write data */
#define INQUIRE	0x0612		/* inquiry */
#define MODESEL	0x0615		/* mode select */
#define MODESEN	0x061a		/* mode sense */
#define SDIAG	0x061d		/* send diagnostic */
#define RDCAP	0x0a25		/* read capacity */
#define VERIFY	0x0a2f		/* verify */
#define RDDEF	0x0a37		/* read defect data */

	/* macros for manipulating SCSI commands */
#define GETCMDSIZ(x) (x >> NBBY)
#define GETOPCODE(x) (x & 0xff)

	/* SCSI status codes */
#define STGOOD		0x00		/* command was successful */
#define STCHKCD		0x02		/* command was not successful */
#define STTIMEOUT	0x04		/* no hardware: timed out */
#define STBUSY		0x08		/* device was busy */
#define STRSCNF		0x10		/* reservation conflict */
#define STKILLED	0x20
#define STEXPIRED	0x40		/* timeout before command finished */
#define STABORTED	0x80

#define GETST(x)	(x)

	/* extended sense information */
#define GET_ERRCLASS(x) ((x & 0x70) >> 4)
#define INFOVALID(x)	((x & 0x80) == 0x80)
#define XTSENSERRCLASS	0x07		/* extended sense error class */
#define SKEYMASK	0x0f		/* mask for sense key */
#define INFOKEY		0x06		/* information, not an error */

	/* REQUEST SENSE */
#define NSENBYTES	18		/* max. no. of sense bytes returned */
#define REQSENTIMEO	100		/* timeout (1 second) */

	/* FORMAT */
#define BLDBLEN		4		/* size of bad list data block */
#define FMTTIMEO	NO_TIMEOUT	/* timeout (indefinite) */

	/* REASSIGN BLOCKS */
#define REASNTIMEO	30000		/* timeout (5 minutes) */

	/* READ/WRITE */
#define XFERLIM		64		/* transfer max 64 blocks at a time */
#define RWTIMEO		100		/* timeout (1 second) */

	/* PARTITION */
#define MINSCSIFS	(100 * 1024)	/* min. SCSIFS partition */
#define MINRISCIX	(2 * 1024*1024)	/*  ""  RISCiX    ""     */

	/* INQUIRY */
#define MAXINQ		80		/* max. length of inquiry data */
#define INQTIMEO	100		/* timeout (1 second) */

	/* MODE SELECT */
#define PAGEFORMAT	0x10		/* always conforms to page format */
#define SAVEPAGE	0x01		/* set if page is to be saved */
#define MSLTIMEO	100		/* timeout (1 second) */

	/* MODE SENSE */
#define MDLEN		(1 << 8) - 1	/* max. length of mode data */
#define ALLPAGES	0x3f		/* report all pages */
#define REPCURRENT	0x00		/* report current values */
#define REPCHANGE	0x01		/* report changeable values */
#define REPSAVED	0x03		/* report saved values */
#define MSNTIMEO	100		/* timeout (1 second) */
#define WINNYMED	0		/* medium type for a winchester */
#define OPTICALMED	3		/* medium type for optical memory */
#define PAGNOMSK	0x3f		/* mask for extracting page code */

#ifdef BODGE
#define MDBUFLEN	MDLEN + 20
#else
#define MDBUFLEN	MDLEN
#endif

	/* DIAGNOSTIC */
#define DIAGTYPE	0x04		/* self test, not off-line */
#define SDIAGTIMEO	NO_TIMEOUT	/* timeout (indefinite) */

	/* READ CAPACITY */
#define DCDBLEN		8		/* size of disk capacity data block */
#define DCTIMEO		100		/* timeout (1 second) */

	/* VERIFY */
#define VFYTYPE		0x00		/* do NOT do a byte check */
#define MAXVERIFY	65535		/* max. blocks that can be verified */
#define VFYTIMEO	NO_TIMEOUT	/* timeout (indefinite) */

	/* READ DEFECT DATA */
#define RDDTYPE		0x0d		/* read GLIST, physical sector format */
#define RDDESIZE	8		/* size of an entry in the defect list */
#define RDDTIMEO	100		/* timeout (1 second) */

	/* data structures for defect lists */
typedef struct {
	u_long dl_header;
	u_long *dl_data;
} DefectList;

#define ALLOCUNIT	20	/* no. of blocks to allocate at a time */
