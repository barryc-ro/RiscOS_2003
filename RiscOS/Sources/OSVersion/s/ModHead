; > s.ModHead

	AREA	|Module$Code|,CODE,READONLY,REL

Module_BaseAddr

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:ModHand
        GET     Hdr:Machine.<Machine>
        GET     Hdr:Proc

        ASSERT  (.=Module_BaseAddr)

        DCD     0                               ; Start
        DCD     Init           - Module_BaseAddr
        DCD     Die            - Module_BaseAddr
        DCD     0                               ; Service
        DCD     Title          - Module_BaseAddr
        DCD     Helpstr        - Module_BaseAddr
        DCD     0                               ; Helptable
        DCD     0                               ; SWIbase
        DCD     0                               ; SWIhandler
        DCD     0                               ; SWInames
        DCD     0                               ; SWIdecode
        DCD     0
        DCD     0

; hacky macro used below to check stuff.

	MACRO
$label 	CheckStuff	$var, $default
$label	
 [ :LNOT: :DEF: $var
 			GBLS	$var
 ]
 [ :LEN: $var = 0
$var 			SETS    "$default"
 ]        		
	MEND

; deal with case when variables are not passed down from makefile and when
; muppets pass down duff strings

	CheckStuff	Version, 	"0.00"
	CheckStuff	Date,	 	"01 Jan 1970"
	CheckStuff	Name,		"RISC OS"
	CheckStuff	Build,		""
	
;---------------------------------------------------------------------------

Title   DCB     "OSVersion",0
Helpstr DCB     "OS Version",9,"$Version ($Date)",0
        ALIGN
        
;---------------------------------------------------------------------------
;       Module initialisation point.
;
Init
        Entry
        MOV     r0, #ByteV
        ADR     r1, ByteVHandler
        MOV     r2, #0
        SWI     XOS_Claim
        EXIT

;---------------------------------------------------------------------------
;       ByteV handler.
;
ByteVHandler
        TEQ     r0, #0
        TEQEQ   r1, #0
        MOVNES  pc, lr

        ADR     r0, OSError
        SWI     XOS_GenerateError
        Pull    "pc"
        
OSError DCD     &F7
        DCB     "$Name $Version $Build ($Date)",0
        ALIGN

;---------------------------------------------------------------------------
;       Killing the module.
;
Die
        Entry
        MOV     r0, #ByteV
        ADR     r1, ByteVHandler
        MOV     r2, #0
        SWI     XOS_Claim
        EXITS

        END
