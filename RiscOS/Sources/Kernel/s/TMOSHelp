     TTL ==> s.TMOSHelp

        SUBT    => HelpStrs

 [ International_Help=0
Break_Help
      ;=   "The ",TokenEscapeChar,Token0," key either acts like Escape, or"
     =  "The ",TokenEscapeChar,Token0," key either acts like Escape, "
     =  "or like",TokenEscapeChar,Token2,"Reset key. ", 13
      ;=   " like the Reset key. ",13

Reset_Help
      ;=   "When Reset is pressed, the following "
     =  "When Reset",TokenEscapeChar,Token41,"pressed,"
     =  TokenEscapeChar,Token2,"following  keys have an effect:", 13
     =  "SHIFT causes an autoboot (unless Boot",TokenEscapeChar,Token41
     =  "configured).", 13,"CTRL causes more of",TokenEscapeChar,Token2
     =  "machine",TokenEscapeChar,Token40,"be reset.", 13,"keypad-* ca"
     =  "uses",TokenEscapeChar,Token2,"supervisor"
     =  TokenEscapeChar,Token40,"be run rather than"
     =  TokenEscapeChar,Token2,"configured language.", 13,"See also "
     =  "*Help PowerOn.",  0
      ;=   " keys have an effect:",13
      ;=   "SHIFT causes an autoboot (unless Boot is configured).",13
      ;=   "CTRL causes more of the machine to be reset.",13
      ;=   "keypad-* causes the supervisor to be run rather than the configured"
      ;=   " language.",13
      ;=   "See also *Help PowerOn.",0

PowerOn_Help
      ;=   "When the machine is switched on, the following "
     =  "When",TokenEscapeChar,Token2,"machine",TokenEscapeChar,Token41
     =  "switched on,",TokenEscapeChar,Token2,"following  keys have a"
     =  "n effect:", 13,"R causes",TokenEscapeChar,Token2,"operating "
     =  "system's CMOS RAM",TokenEscapeChar,Token40,"be reset.", 13,"D"
     =  "ELETE causes",TokenEscapeChar,Token38,"the machine's CMOS RAM"
     =  TokenEscapeChar,Token40,"be reset.", 13,"T"
     =  TokenEscapeChar,Token16,"COPY are similar"
     =  TokenEscapeChar,Token40,"R",TokenEscapeChar,Token16,"DELETE,"
     =  " but set",TokenEscapeChar,Token2,"opposite configured sync.", 13
     =  "0",TokenEscapeChar,Token40,"9 on",TokenEscapeChar,Token2,"k"
     =  "eypad reset (just)",TokenEscapeChar,Token2,"configured monit"
     =  "or type. Keypad dot ",TokenEscapeChar,Token19,"configured mod"
     =  "e, sync",TokenEscapeChar,Token16,"monitor type"
     =  TokenEscapeChar,Token40,"Auto.", 13,"See also *Help Reset"
     =  TokenEscapeChar,Token16,"*Help Break.",  0
      ;=   " keys have an effect:",13
      ;=   "R causes the operating system's CMOS RAM to be reset.",13
      ;=   "DELETE causes all the machine's CMOS RAM to be reset.",13
      ;=   "T and COPY are similar to R and DELETE, but set the opposite"
      ;=   " configured sync.",13
      ;=   "0 to 9 on the keypad reset (just)"
      ;=   " the configured monitor type."
      ;=   " Keypad dot sets the configured mode, sync and monitor type to Auto."
      ;=  13,"See also *Help Reset and *Help Break."0

RMEnsure_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," checks that a module"
     =  TokenEscapeChar,Token41,"present",TokenEscapeChar,Token16,"i"
     =  "s",TokenEscapeChar,Token2,"given version, or a more modern o"
     =  "ne. The command",TokenEscapeChar,Token41,"executed if this"
     =  TokenEscapeChar,Token41,"not",TokenEscapeChar,Token2,"case."
     =   13
      ;=   " checks that a module is present and is the given version,"
      ;=   " or a more modern one."
      ;=   " The command is executed if this is not the case.",13
RMEnsure_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"moduletitle> <version "
     =  TokenEscapeChar,Token13,"> [<*command>]",  0
      ;=   " <moduletitle> <version number> [<*command>]",0

Syntax_Help
      ;=   "Symbols used in syntax descriptions:",13
     =  "Symbols used in syntax descrip",TokenEscapeChar,Token9,"s:", 13
     =  "<> mark sec",TokenEscapeChar,Token9,"s",TokenEscapeChar,Token40
     =  "be filled in, eg. <",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,"> indicates that a "
     =  TokenEscapeChar,Token7,TokenEscapeChar,Token11," should be"
     =  " supplied here.", 13,"[] mark op",TokenEscapeChar,Token9,"al"
     =  " sec",TokenEscapeChar,Token9,"s.", 13,"| indicates a choice,"
     =  " e.g. ""A|B"" means ""A or B"".",  0
      ;=   "<> mark sections to be filled in, eg. <filename> indicates"
      ;=   " that a filename should be supplied here.",13
      ;=   "[] mark optional sections.",13
      ;=   "| indicates a choice, e.g. ""A|B"" means ""A or B"".", 0

Quit_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," leaves",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token5," applica",TokenEscapeChar,Token9,"."
     =   13
      ;=   " leaves the current application.",13

GOS_Syntax
Modules_Syntax
Quit_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0, 0
     =  TokenEscapeChar,Token1,  0

RMFaster_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," moves a module from ROM"
     =  TokenEscapeChar,Token40,"RAM.", 13
      ;=   " moves a module from ROM to RAM.",13
RMFaster_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"moduletitle>",  0
      ;=   " <moduletitle>", 0

RMKill_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," kills",TokenEscapeChar,Token16,"d"
     =  "eletes a ",TokenEscapeChar,Token17,".", 13
      ;=   " kills and deletes a relocatable module.",13
RMKill_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"moduletitle>",  0
      ;=   " <moduletitle>", 0

RMLoad_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," loads",TokenEscapeChar,Token16,"i"
     =  "nitialises a ",TokenEscapeChar,Token17,".", 13
      ;=   " loads and initialises a relocatable module.",13
RMLoad_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27,  0
      ;=   " <filename>", 0

RMRun_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," runs a ",TokenEscapeChar,Token17
     =  ".", 13
      ;=   " runs a relocatable module.",13
RMRun_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27,  0
      ;=   " <filename>", 0

RMTidy_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," compacts",TokenEscapeChar,Token2
     =  "RMA",TokenEscapeChar,Token16,"reinitialises"
     =  TokenEscapeChar,Token38,"the modules.", 13
      ;=   " compacts the RMA and reinitialises all the modules.",13
RMTidy_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0, 0
     =  TokenEscapeChar,Token1,  0

RMClear_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," deletes",TokenEscapeChar,Token38
     =  TokenEscapeChar,Token17,"s from",TokenEscapeChar,Token2,"RM"
     =  "A.", 13
      ;=   " deletes all relocatable modules from the RMA.",13
RMClear_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0, 0
     =  TokenEscapeChar,Token1,  0

RMReInit_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," reinitialises a "
     =  TokenEscapeChar,Token17,", reversing",TokenEscapeChar,Token2
     =  "ac",TokenEscapeChar,Token9," of *Unplug if appropriate.", 13
      ;=   " reinitialises a relocatable module,"
      ;=   " reversing the action of *Unplug if appropriate.",13
RMReInit_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"moduletitle>",  0
      ;=   " <moduletitle>", 0

ROMModules_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," lists",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token17,"s ",TokenEscapeChar,Token5,"ly in "
     =  "ROM, along with their status.", 13,"See also *Modules.", 13
      ;=   " lists the relocatable modules currently in ROM, along with"
      ;=   " their status.",13
      ;=   "See also *Modules.",13
ROMModules_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0, 0
     =  TokenEscapeChar,Token1,  0

Set_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," assigns a string value"
     =  TokenEscapeChar,Token40,"a system variable. Other types of va"
     =  "lue can be assigned with *",TokenEscapeChar,Token0,"Eval"
     =  TokenEscapeChar,Token16,"*",TokenEscapeChar,Token0,"Macro.", 13
      ;=   " assigns a string value to a system variable."
      ;=   " Other types of value can be assigned with *",TokenEscapeChar,Token0
      ;=   "Eval and *",TokenEscapeChar,Token0
      ;=   "Macro.",13
Set_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"var",TokenEscapeChar,Token11,"> <va"
     =  "lue>",  0
      ;=   " <varname> <value>", 0

SetMacro_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," assigns a macro value"
     =  TokenEscapeChar,Token40,"a system variable. Other types of va"
     =  "lue can be assigned with *Set",TokenEscapeChar,Token16,"*SetE"
     =  "val.", 13
      ;=   " assigns a macro value to a system variable."
      ;=   " Other types of value can be assigned with *Set and *SetEval.",13
SetMacro_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"var",TokenEscapeChar,Token11,"> <va"
     =  "lue>",  0
      ;=   " <varname> <value>", 0

SetEval_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," evaluates an e"
     =  TokenEscapeChar,Token29,TokenEscapeChar,Token16,"assigns it"
     =  TokenEscapeChar,Token40,"a system variable. Other types of va"
     =  "lue can be assigned with *Set",TokenEscapeChar,Token16,"*SetM"
     =  "acro.", 13,"""*Help Eval"" describes",TokenEscapeChar,Token2,"e"
     =  TokenEscapeChar,Token29," syntax.", 13
      ;=   " evaluates an expression and assigns it to a system variable."
      ;=   " Other types of value can be assigned with *Set and *SetMacro.",13
      ;=   """*Help Eval"" describes the expression syntax.",13
SetEval_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"var",TokenEscapeChar,Token11,"> <e"
     =  TokenEscapeChar,Token29,">",  0
      ;=   " <varname> <expression>", 0

Show_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," lists system variables matching"
     =  TokenEscapeChar,Token2,TokenEscapeChar,Token11," given, or"
     =  TokenEscapeChar,Token38,"system variables if no "
     =  TokenEscapeChar,Token11,TokenEscapeChar,Token41,"specified."
     =  " Variables can be set with *Set, *SetEval",TokenEscapeChar,Token16
     =  "*SetMacro.", 13
      ;=   " lists system variables matching the name given,"
      ;=   " or all system variables if no name is specified."
      ;=   " Variables can be set with *Set, *SetEval and *SetMacro.",13
Show_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"<variablespec>]",  0
      ;=   " [<variablespec>]", 0

Time_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0,TokenEscapeChar,Token32
     =  TokenEscapeChar,Token2,"time",TokenEscapeChar,Token16,"date"
     =  ".", 13
      ;=   " displays the time and date.",13
Time_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0,0
     =  TokenEscapeChar,Token1,  0

Unset_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," deletes a system variable.", 13
      ;=   " deletes a system variable.",13
Unset_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"var",TokenEscapeChar,Token11,">",  0
      ;=   " <varname>", 0

Echo_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," sends a string to"
     =  TokenEscapeChar,Token2,"VDU, after transforma"
     =  TokenEscapeChar,Token9," by GSRead.", 13
     =  TokenEscapeChar,Token14,"string>",  0
      ;=   " sends a string to the VDU, after transformation by GSRead.",13
      ;=   "Syntax: *",TokenEscapeChar,Token0
      ;=   " <string>",0

Ignore_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," ",TokenEscapeChar,Token19
     =  TokenEscapeChar,Token26,"r ignore character.", 13
      ;=   " sets the printer ignore character.",13
Ignore_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"<",TokenEscapeChar,Token13,">]",  0
      ;=   " [<number>]",0

IF_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," condi",TokenEscapeChar,Token9,"a"
     =  "lly executes another command depending on",TokenEscapeChar,Token2
     =  "value of an e",TokenEscapeChar,Token29,".", 13
      ;=   " conditionally executes another command"
      ;=   " depending on the value of an expression.",13
IF_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"e",TokenEscapeChar,Token29,"> THEN "
     =  "<command> [ELSE <command>]",  0
      ;=   " <expression> THEN <command> [ELSE <command>]", 0

Status_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," shows",TokenEscapeChar,Token2,"s"
     =  "elected CMOS RAM op",TokenEscapeChar,Token9,"s. Use "
     =  TokenEscapeChar,Token10,"to set",TokenEscapeChar,Token2,"op"
     =  TokenEscapeChar,Token9,"s.", 13,TokenEscapeChar,Token30,"<"
     =  "op",TokenEscapeChar,Token9,">]",  0
      ;=   " shows the selected CMOS RAM options."
      ;=   " Use *Configure to set the options.",13
      ;=   "Syntax: *",TokenEscapeChar,Token0
      ;=   " [<option>]",0

Unplug_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," stops",TokenEscapeChar,Token2,"g"
     =  "iven ROM module being initialised.", 13,"*"
     =  TokenEscapeChar,Token0," with no argument lists"
     =  TokenEscapeChar,Token2,"unplugged ROM modules.", 13
      ;=   " stops the given ROM module being initialised.",13
      ;=   "*",TokenEscapeChar,Token0
      ;=   " with no argument lists the unplugged ROM modules.",13
Unplug_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"<moduletitle> [<podule "
     =  TokenEscapeChar,Token13,">]]",  0
      ;=   " [<moduletitle> [<podule number>]]",0

RMInsert_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," reverses",TokenEscapeChar,Token2
     =  "effect of *Unplug, but does not reinitialise"
     =  TokenEscapeChar,Token2,"specified ROM module.", 13
      ;=   " reverses the effect of *Unplug, but does not reinitialise"
      ;=   " the specified ROM module.",13
RMInsert_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"moduletitle> [<podule "
     =  TokenEscapeChar,Token13,">]",  0
      ;=   " <moduletitle> [<podule number>]",0

Error_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," generates an error with"
     =  TokenEscapeChar,Token2,"given ",TokenEscapeChar,Token13
     =  TokenEscapeChar,Token16,"text. ", 13
      ;=   " generates an error with the given number and text. ",13
Error_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"<",TokenEscapeChar,Token13,">] <tex"
     =  "t>",  0
      ;=   " [<number>] <text>",0

Eval_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," evaluates an integer or string e"
     =  TokenEscapeChar,Token29,". ", 13,"The e",TokenEscapeChar,Token29
     =  " analyser has",TokenEscapeChar,Token2,"following operators:", 13
     =  "+",  9,  9,  9,"addi",TokenEscapeChar,Token9," or string c"
     =  "oncatena",TokenEscapeChar,Token9, 13,"-, *, /, MOD",  9,  9
     =  "integer opera",TokenEscapeChar,Token9,"s", 13,"=, <, >, <=, "
     =  ">=, <>",  9,"string or integer comparison", 13,">>, <<",  9,  9
     =    9,"arithmetic shift right",TokenEscapeChar,Token16,"left", 13
     =  ">>>",  9,  9,  9,"logical shift right", 13,"STR, VAL",  9,  9
     =  "conversion between strings",TokenEscapeChar,Token16,"integers"
     =   13,"AND, OR, EOR, NOT",  9,"(bitwise) logical operators", 13,"R"
     =  "IGHT, LEFT",  9,  9,"substring extrac",TokenEscapeChar,Token9
     =   13,"LEN",  9,  9,  9,"length of a string", 13, 13,"Bracket"
     =  "s can also be used.",  0
      ;=   " evaluates an integer or string expression. ",13
      ;=   "The expression analyser has the following operators:",13
      ;=   "+",9,9,9,"addition or string concatenation",13
      ;=   "-, *, /, MOD",9,9,"integer operations",13
      ;=   "=, <, >, <=, >=, <>",9,"string or integer comparison",13
      ;=   ">>, <<",9,9,9,"arithmetic shift right and left",13
      ;=   ">>>",9,9,9,"logical shift right",13
      ;=   "STR, VAL",9,9,"conversion between strings and integers",13
      ;=   "AND, OR, EOR, NOT",9,"(bitwise) logical operators",13
      ;=   "RIGHT, LEFT",9,9,"substring extraction",13
      ;=   "LEN",9,9,9,"length of a string",13,13
      ;=   "Brackets can also be used.", 0
Eval_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"e",TokenEscapeChar,Token29,">",  0
      ;=   " <expression>",0

GO_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," [<address>] [; environment]  - g"
     =  "o",TokenEscapeChar,Token40,"address (hexadecimal), "
     =  TokenEscapeChar,Token8,"&8000.  Text after ';'"
     =  TokenEscapeChar,Token41,"environment string.",  0
      ;=   " [<address>] [; environment] "
      ;=   " - go to address (hexadecimal), default &8000. "
      ;=   " Text after ';' is environment string.", 0

GOS_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," enters",TokenEscapeChar,Token2
     =  "supervisor. Use *Quit",TokenEscapeChar,Token40,"exit.",  0
      ;=   " enters the supervisor. Use *Quit to exit.", 0

Append_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," opens an existing "
     =  TokenEscapeChar,Token7,TokenEscapeChar,Token16,"subsequent"
     =  " lines of keyboard input are appended",TokenEscapeChar,Token40
     =  "it, input being terminated by ESCAPE.", 13
      ;=   " opens an existing file and subsequent lines of keyboard input are"
      ;=   " appended to it, input being terminated by ESCAPE.",13
Append_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27,  0
      ;=   " <filename>", 0

Build_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," opens a new "
     =  TokenEscapeChar,Token7,TokenEscapeChar,Token16,"subsequent"
     =  " lines of keyboard input are directed",TokenEscapeChar,Token40
     =  "it, input being terminated by ESCAPE.", 13
      ;=   " opens a new file and subsequent lines of keyboard input are"
      ;=   " directed to it, input being terminated by ESCAPE.",13
Build_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27,  0
      ;=   " <filename>", 0

Close_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," closes",TokenEscapeChar,Token38
     =  TokenEscapeChar,Token7,"s on",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token5," ",TokenEscapeChar,Token4,".", 13
      ;=   " closes all files on the current filing system.",13
Close_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0,0
     =  TokenEscapeChar,Token1,  0

Create_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," reserves space for"
     =  TokenEscapeChar,Token2,TokenEscapeChar,Token11,"d "
     =  TokenEscapeChar,Token7,", op",TokenEscapeChar,Token9,"ally"
     =  " giving it load",TokenEscapeChar,Token16,"execu"
     =  TokenEscapeChar,Token9," addresses. No data"
     =  TokenEscapeChar,Token41,"transferred",TokenEscapeChar,Token40
     =  "the ",TokenEscapeChar,Token7,". Length",TokenEscapeChar,Token16
     =  "addresses are in hexadecimal.", 13
      ;=   " reserves space for the named file, optionally giving it"
      ;=   " load and execution addresses. No data is transferred to the file."
      ;=   " Length and addresses are in hexadecimal.",13
Create_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27," [<length> [<exec addr> [<load addr>"
     =  "]]]",  0
      ;=   " <filename> [<length> [<exec addr> [<load addr>]]]", 0

Delete_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," tries",TokenEscapeChar,Token40,"d"
     =  "elete",TokenEscapeChar,Token2,TokenEscapeChar,Token11,"d "
     =  TokenEscapeChar,Token7,", returning an error if"
     =  TokenEscapeChar,Token2,TokenEscapeChar,Token7," does not "
     =  "exist.", 13,"See also *Remove",TokenEscapeChar,Token16,"*Wipe"
     =  ".", 13
      ;=   " tries to delete the named file, returning an error if the file"
      ;=   " does not exist.",13
      ;=   "See also *Remove and *Wipe.",13
Delete_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27,  0
      ;=   " <filename>", 0

Dump_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0,TokenEscapeChar,Token32
     =  TokenEscapeChar,Token2,"contents of",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token7," as a hex",TokenEscapeChar,Token16,"A"
     =  "SCII dump. The ",TokenEscapeChar,Token7," offset"
     =  TokenEscapeChar,Token16,"start address are in hexadecimal.", 13
      ;=   " displays the contents of the file as a hex and ASCII dump."
      ;=   " The file offset and start address are in hexadecimal.",13
Dump_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27," [<",TokenEscapeChar,Token7," offs"
     =  "et> [<start address>]]",  0
      ;=   " <filename> [<file offset> [<start address>]]", 0

Exec_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," <",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,"> directs",TokenEscapeChar,Token2,"o"
     =  "perating system",TokenEscapeChar,Token40,"take further input "
     =  "from",TokenEscapeChar,Token2,"given ",TokenEscapeChar,Token7
     =  ".", 13,"*",TokenEscapeChar,Token0," with no "
     =  TokenEscapeChar,Token7,TokenEscapeChar,Token11," causes"
     =  TokenEscapeChar,Token2,"exec ",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token40,"be closed.", 13
      ;=   " <filename> directs the operating system to take further input"
      ;=   " from the given file.",13
      ;=   "*",TokenEscapeChar,Token0
      ;=   " with no filename causes the exec file to be closed.",13
Exec_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"<",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,">]",  0
      ;=   " [<filename>]", 0

FX_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," r0 [[,] r1 [[,] r2]] calls OS_By"
     =  "te.",  0
      ;=   " r0 [[,] r1 [[,] r2]] calls OS_Byte.", 0

FX_Syntax
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," needs 1",TokenEscapeChar,Token40
     =  "3 numeric ",TokenEscapeChar,Token36,"s.",  0
      ;=   " needs 1 to 3 numeric parameters.", 0

Key_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," ",TokenEscapeChar,Token19,"func"
     =  TokenEscapeChar,Token9," keys.", 13
      ;=   " sets the function keys.",13
Key_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token14,"key",TokenEscapeChar,Token13,"> [<v"
     =  "alue>]",  0
      ;=   " <keynumber> [<value>]", 0

List_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0,TokenEscapeChar,Token32
     =  TokenEscapeChar,Token2,"contents of",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token7," in",TokenEscapeChar,Token2,"confi"
     =  "gured GSRead format. Each line",TokenEscapeChar,Token41,"prec"
     =  "eded with a line ",TokenEscapeChar,Token13,".", 13,"See also "
     =  "*Print",TokenEscapeChar,Token16,"*Type.", 13
      ;=   " displays the contents of the file in the configured GSRead format."
      ;=   " Each line is preceded with a line number.",13
      ;=   "See also *Print and *Type.",13
List_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"-File] <",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,"> [-TabExpand]",  0
      ;=   " [-File] <filename> [-TabExpand]", 0

Load_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," with no specified address loads"
     =  TokenEscapeChar,Token2,TokenEscapeChar,Token11,"d "
     =  TokenEscapeChar,Token7," at its own load address. If a load "
     =  "address (hexadecimal)",TokenEscapeChar,Token41,"specified, it"
     =  " will be used instead.", 13
      ;=   " with no specified address loads the named file at its own"
      ;=   " load address. If a load address (hexadecimal) is specified,"
      ;=   " it will be used instead.",13
Load_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27," [<load addr>]",  0
      ;=   " <filename> [<load addr>]", 0

Print_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0,TokenEscapeChar,Token32
     =  TokenEscapeChar,Token2,"contents of a ",TokenEscapeChar,Token7
     =  " by sending each byte",TokenEscapeChar,Token40,"the VDU.", 13
     =  "See also *List",TokenEscapeChar,Token16,"*Type.", 13
      ;=   " displays the contents of a file by sending each byte to the VDU.",13
      ;=   "See also *List and *Type.",13
Print_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27,  0
      ;=   " <filename>", 0

Opt_Help
         ;=       "*"
     =  "*",TokenEscapeChar,Token0," controls various "
     =  TokenEscapeChar,Token4," ac",TokenEscapeChar,Token9,"s.", 13
     =  "Opt 1 <n>", 31,"Set",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token4," message level (for Load/Save/Create"
     =  "):", 13,  9,"0",  9,"No ",TokenEscapeChar,Token4," messages"
     =   13,  9,"1",  9,"File",TokenEscapeChar,Token11," "
     =  TokenEscapeChar,Token26,"d", 13,  9,"2",  9,"File"
     =  TokenEscapeChar,Token11,",hexadecimal addresses"
     =  TokenEscapeChar,Token16,"length ",TokenEscapeChar,Token26,"d"
     =   13,  9,"3",  9,"File",TokenEscapeChar,Token11,",datestamp"
     =  TokenEscapeChar,Token16,"length ",TokenEscapeChar,Token26,"d"
     =   13,"Opt 4 <n>", 31,"Set",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token4," boot op",TokenEscapeChar,Token9,":"
     =   13,  9,"0",  9,"No boot ac",TokenEscapeChar,Token9, 13,  9
     =  "1",  9,"*Load boot ",TokenEscapeChar,Token7, 13,  9,"2",  9
     =  "*Run boot ",TokenEscapeChar,Token7, 13,  9,"3",  9,"*Exec "
     =  "boot ",TokenEscapeChar,Token7, 13
         ;=       TokenEscapeChar,Token0
         ;=       " controls various filing system actions."
         ;=       13,"Opt 1 <n>",31
         ;=       "Set the filing system message level (for Load/Save/Create):"
         ;=       13,9,"0",9,"No filing system messages"
         ;=       13,9,"1",9,"Filename printed"
         ;=       13,9,"2",9,"Filename,hexadecimal addresses and length printed"
         ;=       13,9,"3",9,"Filename,datestamp and length printed"
         ;=       13,"Opt 4 <n>",31
         ;=       "Set the filing system boot option:"
         ;=       13,9,"0",9,"No boot action"
         ;=       13,9,"1",9,"*Load boot file"
         ;=       13,9,"2",9,"*Run boot file"
         ;=       13,9,"3",9,"*Exec boot file"
         ;=       13
Opt_Syntax
         ;=       "Syntax: *"
     =  TokenEscapeChar,Token30,"<x> [[,] <y>]]",  0
         ;=       TokenEscapeChar,Token0
         ;=       " [<x> [[,] <y>]]",0

Remove_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," tries",TokenEscapeChar,Token40,"d"
     =  "elete",TokenEscapeChar,Token2,TokenEscapeChar,Token11,"d "
     =  TokenEscapeChar,Token7," without returning an error if"
     =  TokenEscapeChar,Token2,TokenEscapeChar,Token7," does not "
     =  "exist.", 13,"See also *Delete",TokenEscapeChar,Token16,"*Wipe"
     =  ".", 13
      ;=   " tries to delete the named file without returning an error"
      ;=   " if the file does not exist.",13
      ;=   "See also *Delete and *Wipe.",13
Remove_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token27,  0
      ;=   " <filename>", 0

Save_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," copies",TokenEscapeChar,Token2
     =  "given area of memory",TokenEscapeChar,Token40,"the "
     =  TokenEscapeChar,Token11,"d ",TokenEscapeChar,Token7,". Leng"
     =  "th",TokenEscapeChar,Token16,"addresses are in hexadecimal.", 13
     =  TokenEscapeChar,Token27," <start addr> <end addr> [<exec addr"
     =  "> [<load addr>]]", 13, 31, 31, 31, 31," or *"
     =  TokenEscapeChar,Token0," <",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,"> <start addr> + <length> [<exec add"
     =  "r> [<load addr>]]",  0
      ;=   " copies the given area of memory to the named file."
      ;=   " Length and addresses are in hexadecimal.",13
      ;=   "Syntax: *",TokenEscapeChar,Token0
      ;=   " <filename> <start addr>"
      ;=   " <end addr> [<exec addr> [<load addr>]]",13
      ;=   31, 31, 31, 31, " or *",TokenEscapeChar,Token0
      ;=   " <filename> <start addr>"
      ;=   " + <length> [<exec addr> [<load addr>]]", 0

Shadow_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," makes subsequent mode changes us"
     =  "e",TokenEscapeChar,Token2,"other screen bank.", 13
      ;=   " makes subsequent mode changes use the other screen bank.",13
Shadow_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"0|1]",  0
      ;=   " [0|1]", 0

Spool_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," <",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,"> opens a new ",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token16,"causes subsequent VDU output"
     =  TokenEscapeChar,Token40,"be directed",TokenEscapeChar,Token40
     =  "it, subject to",TokenEscapeChar,Token2,TokenEscapeChar,Token5
     =  " *fx 3 status.", 13,"*",TokenEscapeChar,Token0," with no "
     =  TokenEscapeChar,Token7,TokenEscapeChar,Token11," causes"
     =  TokenEscapeChar,Token2,"spool ",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token40,"be closed.", 13
      ;=   " <filename> opens a new file and causes subsequent VDU output"
      ;=   " to be directed to it, subject to the current *fx 3 status.",13
      ;=   "*",TokenEscapeChar,Token0
      ;=   " with no filename causes the spool file to be closed.",13
Spool_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"<",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,">]",  0
      ;=   " [<filename>]", 0

SpoolOn_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," <",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,"> opens an existing "
     =  TokenEscapeChar,Token7,TokenEscapeChar,Token16,"causes sub"
     =  "sequent VDU output",TokenEscapeChar,Token40,"be appended"
     =  TokenEscapeChar,Token40,"it, subject to",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token5," *fx 3 status.", 13,"*"
     =  TokenEscapeChar,Token0," with no ",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11," causes",TokenEscapeChar,Token2,"s"
     =  "pool ",TokenEscapeChar,Token7,TokenEscapeChar,Token40,"be "
     =  "closed.", 13
      ;=   " <filename> opens an existing file and causes subsequent VDU output"
      ;=   " to be appended to it, subject to the current *fx 3 status.",13
      ;=   "*",TokenEscapeChar,Token0
      ;=   " with no filename causes the spool file to be closed.",13
SpoolOn_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"<",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,">]",  0
      ;=   " [<filename>]", 0

TV_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," [<vertical posi"
     =  TokenEscapeChar,Token9,"> [[,] <interlace>]] "
     =  TokenEscapeChar,Token19,"posi",TokenEscapeChar,Token9," of"
     =  TokenEscapeChar,Token2,"display on",TokenEscapeChar,Token2
     =  "screen.",  0
      ;=   " [<vertical position> [[,] <interlace>]]"
      ;=   " sets the position of the display on the screen.", 0

TV_Syntax
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," needs 0",TokenEscapeChar,Token40
     =  "2 ",TokenEscapeChar,Token36,"s.",  0
      ;=   " needs 0 to 2 parameters.", 0

Type_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0,TokenEscapeChar,Token32
     =  TokenEscapeChar,Token2,"contents of",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token7," in",TokenEscapeChar,Token2,"confi"
     =  "gured GSRead format.", 13,"See also *List",TokenEscapeChar,Token16
     =  "*Print.", 13
      ;=   " displays the contents of the file"
      ;=   " in the configured GSRead format.",13
      ;=   "See also *List and *Print.",13
Type_Syntax
      ;=   "Syntax: *",TokenEscapeChar,Token0
     =  TokenEscapeChar,Token30,"-File] <",TokenEscapeChar,Token7
     =  TokenEscapeChar,Token11,"> [-TabExpand]",  0
      ;=   " [-File] <filename> [-TabExpand]", 0

Help_Help
      ;=   "*",TokenEscapeChar,Token0
     =  "*",TokenEscapeChar,Token0," <subjects> attempts"
     =  TokenEscapeChar,Token40,"give useful informa"
     =  TokenEscapeChar,Token9," on",TokenEscapeChar,Token2,"selec"
     =  "ted topics. Special keywords include:", 13,"Commands",  9,"Lis"
     =  "t",TokenEscapeChar,Token38,"the available utility commands", 13
     =  "FileCommands",  9,"List all",TokenEscapeChar,Token2
     =  TokenEscapeChar,Token4,"-specific commands", 13,"Modules",  9
     =    9,"List",TokenEscapeChar,Token2,"module titles", 13,"Synta"
     =  "x",  9,  9,"Explain",TokenEscapeChar,Token2,"syntax message"
     =  " format",  0
      ;=   " <subjects> attempts to give useful information"
      ;=   " on the selected topics. Special keywords include:",13
      ;=   "Commands", 9, "List all the available utility commands",13
      ;=   "FileCommands", 9
      ;=   "List all the filing system-specific commands",13
      ;=   "Modules", 9, 9, "List the module titles",13
      ;=   "Syntax", 9, 9, "Explain the syntax message format",0
 |
Break_Help      DCB     "HUTMBRK", 0
Reset_Help      DCB     "HUTMRES", 0
PowerOn_Help    DCB     "HUTMPOW", 0
RMEnsure_Help   DCB     "HUTMRME", 0
RMEnsure_Syntax DCB     "SUTMRME", 0
Syntax_Help     DCB     "HUTMSYN", 0
Quit_Help       DCB     "HUTMQUI", 0
GOS_Syntax      DCB     "SUTMGOS", 0
Modules_Syntax  DCB     "SUTMMOD", 0
Quit_Syntax     DCB     "SUTMQUI", 0
RMFaster_Help   DCB     "HUTMRMF", 0
RMFaster_Syntax DCB     "SUTMRMF", 0
RMKill_Help     DCB     "HUTMRMK", 0
RMKill_Syntax   DCB     "SUTMRMK", 0
RMLoad_Help     DCB     "HUTMRML", 0
RMLoad_Syntax   DCB     "SUTMRML", 0
RMRun_Help      DCB     "HUTMRRN", 0
RMRun_Syntax    DCB     "SUTMRRN", 0
RMTidy_Help     DCB     "HUTMRMT", 0
RMTidy_Syntax   DCB     "SUTMRMT", 0
RMClear_Help    DCB     "HUTMRMC", 0
RMClear_Syntax  DCB     "SUTMRMC", 0
RMReInit_Help   DCB     "HUTMRMR", 0
RMReInit_Syntax DCB     "SUTMRMR", 0
ROMModules_Help   DCB   "HUTMROM", 0
ROMModules_Syntax DCB   "SUTMROM", 0
Set_Help        DCB     "HUTMSET", 0
Set_Syntax      DCB     "SUTMSET", 0
SetMacro_Help   DCB     "HUTMSTM", 0
SetMacro_Syntax DCB     "SUTMSTM", 0
SetEval_Help    DCB     "HUTMSTE", 0
SetEval_Syntax  DCB     "SUTMSTE", 0
Show_Help       DCB     "HUTMSHO", 0
Show_Syntax     DCB     "SUTMSHO", 0
Time_Help       DCB     "HUTMTIM", 0
Time_Syntax     DCB     "SUTMTIM", 0
Unset_Help      DCB     "HUTMUNS", 0
Unset_Syntax    DCB     "SUTMUNS", 0
Echo_Help       DCB     "HUTMECH", 0
Ignore_Help     DCB     "HUTMIGN", 0
Ignore_Syntax   DCB     "SUTMIGN", 0
IF_Help         DCB     "HUTMIF", 0
IF_Syntax       DCB     "SUTMIF", 0
Status_Help     DCB     "HUTMSTA", 0
Unplug_Help     DCB     "HUTMUNP", 0
Unplug_Syntax   DCB     "SUTMUNP", 0
RMInsert_Help   DCB     "HUTMRMI", 0
RMInsert_Syntax DCB     "SUTMRMI", 0
Error_Help      DCB     "HUTMERR", 0
Error_Syntax    DCB     "SUTMERR", 0
Eval_Help       DCB     "HUTMEVL", 0
Eval_Syntax     DCB     "SUTMEVL", 0
GO_Help         DCB     "HUTMGO", 0
GOS_Help        DCB     "HUTMGOS", 0
Append_Help     DCB     "HUTMAPP", 0
Append_Syntax   DCB     "SUTMAPP", 0
Build_Help      DCB     "HUTMBUI", 0
Build_Syntax    DCB     "SUTMBUI", 0
Close_Help      DCB     "HUTMCLO", 0
Close_Syntax    DCB     "SUTMCLO", 0
Create_Help     DCB     "HUTMCRE", 0
Create_Syntax   DCB     "SUTMCRE", 0
Delete_Help     DCB     "HUTMDEL", 0
Delete_Syntax   DCB     "SUTMDEL", 0
Dump_Help       DCB     "HUTMDMP", 0
Dump_Syntax     DCB     "SUTMDMP", 0
Exec_Help       DCB     "HUTMEXE", 0
Exec_Syntax     DCB     "SUTMEXE", 0
FX_Help         DCB     "HUTMFX", 0
FX_Syntax       DCB     "SUTMFX", 0
Key_Help        DCB     "HUTMKEY", 0
Key_Syntax      DCB     "SUTMKEY", 0
List_Help       DCB     "HUTMLST", 0
List_Syntax     DCB     "SUTMLST", 0
Load_Help       DCB     "HUTMLOD", 0
Load_Syntax     DCB     "SUTMLOD", 0
Print_Help      DCB     "HUTMPRI", 0
Print_Syntax    DCB     "SUTMPRI", 0
Opt_Help        DCB     "HUTMOPT", 0
Opt_Syntax      DCB     "SUTMOPT", 0
Remove_Help     DCB     "HUTMREM", 0
Remove_Syntax   DCB     "SUTMREM", 0
Save_Help       DCB     "HUTMSAV", 0
Save_Syntax     DCB     "SUTMSAV", 0
Shadow_Help     DCB     "HUTMSHA", 0
Shadow_Syntax   DCB     "SUTMSHA", 0
Spool_Help      DCB     "HUTMSPL", 0
Spool_Syntax    DCB     "SUTMSPL", 0
SpoolOn_Help    DCB     "HUTMSPO", 0
SpoolOn_Syntax  DCB     "SUTMSPO", 0
TV_Help         DCB     "HUTMTV", 0
TV_Syntax       DCB     "SUTMTV", 0
Type_Help       DCB     "HUTMTYP", 0
Type_Syntax     DCB     "SUTMTYP", 0
Help_Help       DCB     "HUTMHLP", 0
 ]

modules_help1   DCB     "HUTMMOD", 0
commands_helpstr
                DCB     "HUTMCOM", 0
fscommands_helpstr
                DCB     "HUTMFSC", 0
modjack_hstr    DCB     "HUTMMD", 0
modjack_comms   DCB     "HUTMCM", 0
modjack_filecomms
                DCB     "HUTMFS", 0
modjack_confs   DCB     "HUTMCK", 0
modjack_aob     DCB     "HUTMHK", 0

        END
