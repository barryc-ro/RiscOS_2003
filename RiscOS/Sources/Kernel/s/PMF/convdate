; > $.Source.PMF.ConvDate

        MACRO
        CDATT   $mnemonic, $stackoffset, $digits
        ASSERT  (:LEN: "$mnemonic") = 2
        ASSERT  ((CDAT$mnemonic-(CDATBranch+8)) :AND: &FFFFFC03) = 0
        ASSERT  ($stackoffset >=0) :LAND: ($stackoffset < 64)
        LCLA    digits
        [       "$digits"=""
digits  SETA    2
        |
digits  SETA    $digits
        ]
        ASSERT  (digits >= 1) :LAND: (digits <= 3)

        DCB     digits :OR: ($stackoffset :SHL: 2)
        DCB     (CDAT$mnemonic-(CDATBranch+8)) :SHR: 2
        =       "$mnemonic"
        MEND

; *****************************************************************************
;
;       ConvertStandardDateAndTime - Convert from 5-byte cs representation to
;                                    format specified in <SYS$DateFormat>
;
; in:   R0 -> time block
;       [R0, #0..4] = 5-byte centisecond representation
;       R1 -> buffer to accept conversion
;       R2 = size of buffer
;
; out:  V=0 => successful conversion
;       R0 = input value of R1
;       R1 = updated pointer to buffer
;       R2 = updated size of buffer
;
;       V=1 => failed conversion
;       R0 -> error block
;       R1 = input value of R1
;       R2 = input value of R2
;


ConvertStandardDateAndTime ROUT
; KJB 980908 - International version just calls TerrMgr (as documented in PRM!)
        Push    "R3,R14"

        MOV     R3,R2                   ; Territory SWI wants things one register up.
        MOV     R2,R1
        MOV     R1,R0
        MOV     R0,#-1                  ; Use configured territory.
        SWI     XTerritory_ConvertStandardDateAndTime
        Pull    "R3,R14"
        ORRVS   R14, R14, #V_bit        ; set V in R14 for exit
        ExitSWIHandler

; *****************************************************************************
;
;       ConvertDateAndTime - Convert from 5-byte cs representation to
;                            format specified by user
;
; in:   R0 -> time block
;       [R0, #0..4] = 5-byte centisecond representation
;       R1 -> buffer to accept conversion
;       R2 = size of buffer
;       R3 -> format string
;
; out:  V=0 => successful conversion
;       R0 = input value of R1
;       R1 = updated pointer to buffer
;       R2 = updated size of buffer
;
;       V=1 => failed conversion
;       R0 -> error block
;       R1 = input value of R1
;       R2 = input value of R2
;

ConvertDateAndTime ROUT

        Push    "R4,R14"


        MOV     R4,R3                   ; Territory SWI wants things one register up.
        MOV     R3,R2
        MOV     R2,R1
        MOV     R1,R0
        MOV     R0,#-1                  ; Use configured territory.
        SWI     XTerritory_ConvertDateAndTime
        Pull    "R4,R14"
        ORRVS   R14, R14, #V_bit        ; set V in R14 for exit
        ExitSWIHandler

        LTORG

        END
