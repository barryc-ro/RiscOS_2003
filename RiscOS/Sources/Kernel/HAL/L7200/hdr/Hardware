PERIPHERAL_BASE * &80000000
PERIPHERAL_SIZE * &00600000
APB_BASE        * &90000000
APB_SIZE        * &00008000

TIMER_BASE      * &90003000

INT_BASE        * &90001000
IRQLStatus      * &080  ; also &000
IRQHStatus      * &084
IRQLRawStatus   * &090  ; also &004
IRQHRawStatus   * &094
IRQLEnable      * &0A0  ; also &008
IRQHEnable      * &0A4
IRQLEnableSet   * &0A0  ; also &008
IRQHEnableSet   * &0A4
IRQLEnableClear * &0B0  ; also &00C
IRQHEnableClear * &0B4

TIMER1LOAD      * &000 ; R/W
TIMER1VALUE     * &004 ; R
TIMER1CONTROL   * &008 ; R/W
TIMER1CLEAR     * &00C ;   W
TIMER2LOAD      * &020 ; R/W
TIMER2VALUE     * &024 ; R
TIMER2CONTROL   * &028 ; R/W
TIMER2CLEAR     * &02C ;   W

DC_BASE         * &90006000
PMPCON          * &000

MLCD_BASE       * &80048000

MLCDCON         * &000
MPALLSW         * &004
MPALMSW         * &008
MLCDBASE        * &00C
MLCDCAR         * &010
MLCDID          * &014
MLCDTIMING0     * &018
MLCDTIMING1     * &01C

CLCD_BASE       * &80049000

KEYBOARD_BASE   * &90004000
KBDR            * &000
KBDMR           * &004
KBSBSR          * &008
KBKSR           * &010

GPIO_BASE       * &90005000
PADR            * &000
PADDR           * &004
PASBSR          * &008
PAEENR          * &00C
PAESNR          * &010
PAECLR          * &014
PAIMR           * &018
PAINT           * &01C
PEDR            * &080
PEDDR           * &084
PESBSR          * &088
PEEENR          * &08C
PEESNR          * &090
PEECLR          * &094
PEIMR           * &098
PEINT           * &09C

SMIREG_BASE     * &90007000
IOCFG1          * &000
IOCFG2          * &004
IOCFG3          * &008
IOCFG4          * &00C
IOCFG5          * &010
IOSR            * &014

UART1_BASE      * &80044000
UARTDR          * &000
RXSTAT          * &004
H_UBRLCR        * &008
M_UBRLCR        * &00C
L_UBRLCR        * &010
UARTCON         * &014
UARTFLG         * &018
UARTINTSTAT     * &01C
UARTINTMASK     * &020

SYSTEM_BASE     * &80050000

SYS_CONFIG_CURRENT * &000
SYS_CONFIG_NEXT  * &004
SYS_CONFIG_RUN   * &00C
SYS_CONFIG_COMM  * &010
SYS_CONFIG_SDRAM * &014
PICEN   * &10
SYS_CLOCK_ENABLE * &030
SYS_CLOCK_ESYNC  * &034
SYS_CLOCK_SELECT * &038
SYS_STATUS       * &040
SYS_STAT_CLR     * &044
SYS_RESET_REMAP  * &048

SYN_EN          * 1
B18M_EN         * 2
C3M6_EN         * 4
BUART_EN        * 8
C18MU_EN        * 16
FIR_EN          * 32
MIRM_EN         * 64
UARTM_EN        * 128
SIBADC_EN       * 256
ALTD_EN         * 512
CLCLK_EN        * 1024

SDRAMREG_BASE   * &D0000000
SDRAMCFG        * &000
SDRAMRFSH       * &004
SDRAMWBFT       * &008

SDRAMMODE_BASE  * &E0000000

L1121_BASE      * &14000000
DACCR           * &040
DACDR           * &044

AUX_REG_BASE    * &1A000000
AUX_DIAG        * 2
AUX_RTS         * 4
AUX_DTR         * 8
AUX_COL12       * 16
AUX_COL12_DIS   * 32
AUX_COL13       * 64
AUX_COL13_DIS   * 128

MLCD_Width   * 320
MLCD_Height  * 240
MLCD_Refresh * 75
MLCD_Contrast * &70

VFP          * 240-MLCD_Height

SRAM_BASE       * &60000000
SRAM_SIZE       * 5120
SDRAM_BASE      * &F0000000
SDRAM2_BASE     * &F1000000

ScreenBase * SDRAM_BASE

 [ ScreenBase >= SRAM_BASE :LAND: ScreenBase < SRAM_BASE +16384
MLCD_SRAM * 2
 |
MLCD_SRAM * 0
 ]

PLL     * 147
CAS     * 2

 [ PLL = 129
BCLK    * 32256000
 |
BCLK    * 36864000
 ]

PIXPRE  * (BCLK*4)/(MLCD_Refresh*((MLCD_Width*MLCD_Height)+MLCD_Height/2)) - 1

        MACRO
        BUZ     $on
        LDR     R3, =TIMER_BASE
        LDR     R0, [R3, #TIMER1CONTROL]
       [ "$on" = "toggle"
        EOR     R0, R0, #&100
       |
        [ "$on" = "on"
        BIC     R0, R0, #&100
        |
        ORR     R0, R0, #&100
        ]
       ]
        STR     R0, [R3, #TIMER1CONTROL]
        MEND

        MACRO
        DIAG    $on
        MOV     R3, #&1A000000
        [ "$on" = "on"
        MOV     R0, #0
        |
        MOV     R0, #2
        ]
        STRB    R0, [R3]
        MEND


        END
