        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System

        GET     Hdr:OSEntries

        GET     hdr.StaticWS
        GET     hdr.Hardware

        GBLL    TwoExtraCols
TwoExtraCols    SETL {TRUE}

 [ TwoExtraCols
NumCols * 14
 |
NumCols * 12
 ]

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  HAL_MatrixColumns
        EXPORT  HAL_MatrixScan
        EXPORT  Matrix_Init

Matrix_Init
        LDR     a4, KEYBOARD_BASE_Address
        MOV     a1, #0
        STR     a1, [a4, #KBDMR]        ; select Keyboard mode (not GPIO)
        MOV     a1, #1
        STR     a1, [a4, #KBKSR]        ; all pins low
 [ TwoExtraCols
        LDRB    a2, AUX_REG_SoftCopy
        LDR     a4, AUX_REG_Address
        BIC     a2, a2, #AUX_COL12_DIS + AUX_COL12 + AUX_COL13_DIS + AUX_COL13
        STRB    a2, [a4]                ; and the other 2
        STRB    a2, AUX_REG_SoftCopy
 ]
        LDR     a4, GPIO_BASE_Address
        MOV     a1, #0
        STRB    a1, [a4, #PADDR]        ; all GPIO A input
        STRB    a1, [a4, #PAIMR]        ; no interrupts
        MOV     pc, lr

HAL_MatrixColumns
        MOV     a1, #NumCols
        MOV     pc, lr

; Horrifically complicated by the extra 2 lines on the latch.
HAL_MatrixScan
    [ TwoExtraCols
        Push    lr
    ]
        LDR     a4, KEYBOARD_BASE_Address
        LDR     a3, GPIO_BASE_Address
    [ TwoExtraCols
        LDR     a2, AUX_REG_Address
    ]
10      LDRB    ip, [a3, #PADR]         ; wait for all row inputs to go low
        TEQ     ip, #0
        BNE     %BT10
    [ TwoExtraCols
        MRS     lr, CPSR
        ORR     ip, lr, #I32_bit
        MSR     CPSR_c, ip              ; interrupts off while fiddling AUX reg
        LDRB    ip, AUX_REG_SoftCopy
        CMP     a1, #12
        BLT     %FT20

        ; Want to drive one of 12/13
        ORREQ   ip, ip, #AUX_COL13_DIS + AUX_COL12
        ORRNE   ip, ip, #AUX_COL12_DIS + AUX_COL13
        STRB    ip, [a2]                ; activate one of 12/13, tristate other
        MOV     a1, #2
        STR     a1, [a4, #KBKSR]        ; tristate 0-11
        B       %FT30
    ]
        ; Want to drive one of 0-11
20      ADD     a1, a1, #4              ; handles -1 too :)
    [ TwoExtraCols
        ORR     ip, ip, #AUX_COL12_DIS + AUX_COL13_DIS
        STRB    ip, [a2]                ; tristate 12+13
    ]
        STR     a1, [a4, #KBKSR]        ; activate the appropriate column
30
        LDRB    a1, [a3, #PADR]         ; hope it responds in time :)
        MOV     a3, #1
        STR     a3, [a4, #KBKSR]        ; columns 0-11 low again
    [ TwoExtraCols
        BIC     ip, ip, #AUX_COL12_DIS + AUX_COL12 + AUX_COL13_DIS + AUX_COL13
        STRB    ip, [a2]                ; columns 12+13 low
        MSR     CPSR_c, lr              ; restore interrupt state
        Pull    pc
    |
        MOV     pc, lr
    ]

        END
