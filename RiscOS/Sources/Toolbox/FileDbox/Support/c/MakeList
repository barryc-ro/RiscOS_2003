
#include "toolbox.h"
#include "gadgets.h"

#include "ScrollList.h"

#include "Desk.Error2.h"
#include "Desk.Filing.h"

#include "AcornNC.DirScan.h"
#include "MakeList.h"


#ifdef TESTAPP

	#include "MemCheck:MemCheck.h"
	#include "Trace.Trace.h"

	_kernel_oserror *scrolllist_add_item(unsigned int flags,
				ObjectId object_id, ComponentId component_id,
				const char *text, int index)
		{
		Desk_Debug_Printf( Desk_error_PLACE "scrolllist_add_item called with '%s'\n", text);
		return NULL;
		Desk_UNUSED( flags);
		Desk_UNUSED( object_id);
		Desk_UNUSED( component_id);
		Desk_UNUSED( index);
		}

	_kernel_oserror *scrolllist_delete_items(unsigned int flags,
				ObjectId object_id, ComponentId component_id,
				int start_index, int end_index)
		{
		Desk_Debug_Printf( Desk_error_PLACE "scrolllist_delete_items called\n");
		return NULL;
		Desk_UNUSED( flags);
		Desk_UNUSED( object_id);
		Desk_UNUSED( component_id);
		Desk_UNUSED( start_index);
		Desk_UNUSED( end_index);
		}

	int	main( void)
		{
		char*			dir;
		AcornNC_dirscan_sort	sorts[] = { AcornNC_dirscan_sort_NAME, AcornNC_dirscan_sort_NONE};

		Trace_InterceptAllFunctions();

		MemCheck_Init();
		MemCheck_InterceptSCLStringFunctions();
		MemCheck_SetStoreMallocFunctions( 1);
		Desk_Error2_Init_JumpSig();
		Desk_Debug_SetLevel( 2);

		//dir = "<DDD$Dir>.CLibs";
		dir = "<Jules$Dir>.Appsvv";
		FileDbox__MakeList( 0, 0, dir, "*", sorts, AcornNC_dirscan_spritesize_NONE);
		FileDbox__MakeList( 0, 0, dir, "*", sorts, AcornNC_dirscan_spritesize_SMALL);
		FileDbox__MakeList( 0, 0, dir, "*", sorts, AcornNC_dirscan_spritesize_LARGE);
		return 0;
		}
#endif


_kernel_oserror*	FileDbox__MakeList(
				ObjectId			object,
				ComponentId			component,
				const char*			directory,
				const char*			match,
				AcornNC_dirscan_sort*		sorts,
				AcornNC_dirscan_spritesize	spritesize
				)
	{
	AcornNC_dirscan_allfilesblock	allfiles;

	Desk_Error2_Init_JumpSig();

	Desk_Error2_Try	{
		AcornNC_dirscan_fileblock*	file;

		AcornNC_DirScan_FindAll2( directory, &allfiles, sorts, match, spritesize);

		// Clear list
		Desk_Error2_CheckOS( scrolllist_delete_items( 0, object, component, 0, -1));	// -1 means last item.

		for	(
			file = Desk_LinkList_FirstItem( &allfiles.files);
			file;
			file = Desk_LinkList_NextItem( &file->header)
			)
			{
			Desk_Debug_Printf( "File '%s'", file->info.name);

			if ( spritesize != AcornNC_dirscan_spritesize_NONE)	{

				AcornNC_dirscan_filespriteblock*	filesprite = (AcornNC_dirscan_filespriteblock*) file;
				Desk_Debug_Printf( " sprite '%s' %s\n", filesprite->sprite.name, (filesprite->sprite.plothalfsize) ? "sm" : "");

				if ( filesprite->sprite.plothalfsize)
					Desk_Error2_CheckOS( scrolllist_add_item( 4, object, component, file->info.name, NULL, filesprite->sprite.name, -1));
				else
					Desk_Error2_CheckOS( scrolllist_add_item( 0, object, component, file->info.name, NULL, filesprite->sprite.name, -1));
				    	// -1 means last item.
				}

			else	{
				Desk_Error2_CheckOS( scrolllist_add_item( 0, object, component, file->info.name, NULL, NULL, -1));
		   		Desk_Debug_Printf( "\n");
		   		}
			/*
			if ( spritesize != AcornNC_dirscan_spritesize_NONE)	{
				AcornNC_dirscan_filespriteblock*	filesprite = (AcornNC_dirscan_filespriteblock*) file;
				Desk_Debug_Printf( " sprite '%s' %s\n", filesprite->sprite.name, (filesprite->sprite.plothalfsize) ? "sm" : "");
				}
			else	Desk_Debug_Printf( "\n");
			*/
			}

		AcornNC_DirScan_FreeAll( &allfiles);
		}
	Desk_Error2_Catch	{
		AcornNC_DirScan_FreeAll( &allfiles);
		return Desk_Error2_ConvertToOS2();
		}
	Desk_Error2_EndCatch

	return NULL;
	}
