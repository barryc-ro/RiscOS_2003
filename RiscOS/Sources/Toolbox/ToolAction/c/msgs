/* > msgs.c

 * © SJ Middleton, 1995

 * Module based message and error handling

 */

#include <stdarg.h>
#include <stdio.h>

#include "swis.h"

#include "toolaction.h"

#include "msgs.h"

os_error *make_err(int errnum, const char *fmt_token, ...)
{
    va_list ap;
    os_error error;
    char tag[32];

    error.errnum = errnum;

    va_start(ap, fmt_token);

    if (fmt_token == NULL)
    {
        sprintf(tag, "E%02x", errnum & 0x3f);
        fmt_token = msgs_lookup(tag);
    }

    vsprintf(error.errmess, fmt_token, ap);
    va_end(ap);

//    return xmessagetrans_copy_error(&error, NULL);
    return (os_error *)_swix(MessageTrans_CopyError, _IN(0), &error);
}

os_error *make_oomerr(int code, int nbytes)
{
    char tag[8];
    sprintf(tag, "O%d", code);
    return make_err(error_TOOL_ACTION_OUT_OF_MEMORY, NULL, nbytes, msgs_lookup(tag));
}

/* eof errors.c */
