TITLE ToolAction;

AUTHOR "Simon Middleton";

NEEDS OS,Toolbox;

// ----------------------------------------------------------------------------

CONST
  Error_ToolActionOutOfMemory       = .Bits: 0x80E920,
  Error_ToolActionCantCreateIcon    = .Bits: 0x80E921,
  Error_ToolActionCantCreateObject  = .Bits: 0x80E922;

CONST
  ToolAction_GenerateSelectedEvent  = Gadget_Flags: 0x01,
  ToolAction_IsText 	    	    = Gadget_Flags: 0x02 "idents are displayed as text, else are sprite names",
  ToolAction_On 	    	    = Gadget_Flags: 0x04 "Initial state",
  ToolAction_AutoToggle             = Gadget_Flags: 0x08 "Toggle state on every click",
  ToolAction_NoPressedSprite        = Gadget_Flags: 0x10 "Don't use R5 validation command",
  ToolAction_AutoRepeat             = Gadget_Flags: 0x20 "Auto repeat whilst button is held down",
  ToolAction_ShowTransient          = Gadget_Flags: 0x40 "Show object transiently",
  ToolAction_ShowAsPopUp            = Gadget_Flags: 0x80 "Show object aligned to top right of gadget",
  ToolAction_HasFadeSprite          = Gadget_Flags: 0x100 "Has separate sprite for when faded";

TYPE
  ToolAction_Object = .Struct
  (
    .Ref .String: ident_off "Text or sprite name used in off state",
    .Int: ident_off_limit,

    .Ref .String: ident_on "Text or sprite name used in on state",
    .Int: ident_on_limit,

    .Bits: action_no "Toolbox action raised on a click",
    .Ref .String: click_show_name "Toolbox object shown on a click",

    .Bits: adjust_action_no "Toolbox action raised on an adjust click",
    .Ref .String: adjust_click_show_name "Toolbox object shown on an adjust click",

    .Ref .String: ident_fade "Sprite name used in a faded state",
    .Int: ident_fade_limit
  );

TYPE
  ToolAction_ActionSelected = .Struct
  (
    .Bool: on "State of button resulting from click"
  );

CONST
  class_ToolAction = Toolbox_Class: 0x4014,

  action_ToolActionSelected = .Bits: 0x140140,

  ToolAction_SelectedAdjust = .Bits: 0x01,
  ToolAction_SelectedSelect = .Bits: 0x04;

TYPE
  ToolAction_SetIdentFlags  = .Bits;

CONST
  ToolAction_SetIdentOff    = .Int: 0,
  ToolAction_SetIdentOn	    = .Int: 1,
  ToolAction_SetIdentFade   = .Int: 2,
  ToolAction_SetIdentWhich  = ToolAction_SetIdentFlags: 0x0f;

SWI
  ToolAction_SetIdent =
  (  NUMBER 0x44EC6,
     ENTRY
     (  R0 = ToolAction_SetIdentFlags: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140140 "Set the ident string for off or on, depending on the flags",
        R3 = Toolbox_C: cmp,
        R4 -> .String: ident
  )  ),
  ToolAction_GetIdent =
  (  NUMBER 0x44EC6,
     ENTRY
     (  R0 = ToolAction_SetIdentFlags: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140141 "Read the ident string for off or on, depending on the flags",
        R3 = Toolbox_C: cmp,
        R4 = .Ref .String: ident,
        R5 = .Int: size
     ),
     EXIT
     (  R5! = .Int: used
  )  ),

  ToolAction_SetAction =
  (  NUMBER 0x44EC6,
     ENTRY
     (  R0 = .Bits: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140142 "Set the actions to be raised when the gadget is clicked",
        R3 = Toolbox_C: cmp,
        R4 = .Bits: select_action_no,
        R5 = .Bits: adjust_action_no
  )  ),
  ToolAction_GetAction =
  (  NUMBER 0x44EC6,
     ENTRY
     (  R0 = .Bits: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140143 "Read the actions to be raised when the gadget is clicked",
        R3 = Toolbox_C: cmp
     ),
     EXIT
     (  R0! = .Bits: select_action_no,
        R1 = .Bits: adjust_action_no
  )  ),

  ToolAction_SetClickShow =
  (  NUMBER 0x44EC6,
     ENTRY
     (  R0 = .Bits: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140144 "Set the objects to be shown when the gadget is clicked",
        R3 = Toolbox_C: cmp,
        R4 = Toolbox_O: select_show_obj,
        R5 = Toolbox_O: adjust_show_obj
  )  ),
  ToolAction_GetClickShow =
  (  NUMBER 0x44EC6,
     ENTRY
     (  R0 = .Bits: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140145 "Read the objects to be shown when the gadget is clicked",
        R3 = Toolbox_C: cmp
     ),
     EXIT
     (  R0! = Toolbox_O: select_show_obj,
        R1 = Toolbox_O: adjust_show_obj
  )  ),

  ToolAction_SetState =
  (  NUMBER 0x44EC6,
     ENTRY
     (  R0 = .Bits: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140146 "Set the state",
        R3 = Toolbox_C: cmp,
        R4 = .Bool: on
  )  ),
  ToolAction_GetState =
  (  NUMBER 0x44EC6,
     ENTRY
     (  R0 = .Bits: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140147 "Read the state",
        R3 = Toolbox_C: cmp
     ),
     EXIT
     (  R0! = .Bool: on
  )  ),
    
  ToolAction_SetPressed =
  (  NUMBER 0x44EC7,
     ENTRY
     (  R0 = .Bits: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140148 "Set the pressed state",
        R3 = Toolbox_C: cmp,
        R4 = .Bool: pressed
  )  ),
  ToolAction_GetPressed =
  (  NUMBER 0x44EC8,
     ENTRY
     (  R0 = .Bits: flags,
        R1 = Toolbox_O: obj,
        R2 # 0x140149 "Read the pressed state",
        R3 = Toolbox_C: cmp
     ),
     EXIT
     (  R0! = .Bool: pressed
  )  )

// ----------------------------------------------------------------------------
