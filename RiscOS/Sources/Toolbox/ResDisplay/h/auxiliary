/* Title:   auxiliary.h
 * Purpose: support functions for the ResDisplay object class
 * Author:  SNB
 * History: 18-Dec-97: SNB: created
 *
 *
 */

#ifndef __auxiliary_h
#define __auxiliary_h

#include "kernel.h"

#ifndef __toolbox_h
#include "objects.toolbox.h"
#endif

#ifndef __fileinfo_h
#include "objects.fileinfo.h"
#endif

#ifndef __wimp_h
#include "twimp.h"
#endif

#ifndef __mem_h
#include "mem.h"
#endif

#include "main.h"
#include "auxiliary.h"
#include "object.h"
#include "task.h"

#define mem_freek(A) mem_free(A,"ResDisplay")
#define mem_alloc(A) mem_allocate(A,"ResDisplay")
#define FileNameBufferSize 256

extern char             *global_untitled;
extern ObjectID          global_menu;
extern ResDisplayInternal *global_next;
extern int               global_window_count;  /* No. of _displayed_ windows */

extern EventInterest   events_of_interest[];
extern EventInterest   messages_of_interest[];
extern EventInterest   toolbox_events_of_interest[];

/*
extern _kernel_oserror *dialogue_completed (ObjectID object_id);
*/
extern ResDisplayInternal *find_internal (TaskDescriptor *t, ObjectID sub_object_id);
extern ResDisplayInternal *find_internal_window (TaskDescriptor *t, int sub_window_id);
extern _kernel_oserror *show_actual (void);

extern _kernel_oserror *update_display(ResDisplayInternal *, TaskDescriptor *t);

extern _kernel_oserror *aux_add_items(ResDisplayInternal *, _kernel_swi_regs *, TaskDescriptor *t);
extern _kernel_oserror *aux_remove_items(ResDisplayInternal *, _kernel_swi_regs *, TaskDescriptor *t);
extern _kernel_oserror *aux_get_selection(ResDisplayInternal *, _kernel_swi_regs *, TaskDescriptor *t);
extern _kernel_oserror *aux_set_selection(ResDisplayInternal *, _kernel_swi_regs *, TaskDescriptor *t);

extern void aux_free_object(ResDisplayInternal *);

extern _kernel_oserror *aux_write_subtitle(ResDisplayInternal *, const char *);

extern _kernel_oserror *auxiliary_test(_kernel_swi_regs *r);
extern void aux_blast_fonts(TaskDescriptor *t);

#endif
