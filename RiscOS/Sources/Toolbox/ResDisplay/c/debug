/* File:    debug.c
 * Purpose: debugging routines for the Toolbox
 * Author:  Ian Johnson
 * History: 16-Sep-93: IDJ:   created
 *
 */
  
#include "debug.h"

#include "swis.h"
#include "kernel.h"
#include <stdarg.h>
#include <string.h>
#include <stdio.h>
#include <ctype.h>

#include "<syslog$dir>.c-veneer.h.syslog"

static char output_buffer[256];
static char var_val[256] = "";
static char debug_var[256] = "";
static char module_name[256] = "";

extern void debug_dump (void *start, int length)
{
        (void) xsyslog_logdata(module_name, 100, start, length, 0);
}

extern void debug_set_var_name (char *var_name)
{
    strcpy (debug_var, var_name);
    strcpy (module_name, var_name);
    {
            char *ptr = strchr(module_name, '$');
            if (ptr) *ptr = '\0';
    }
}


extern void debug_output (char *allow, char *string, ...)
{
    /*
     * Function to output the given variable list down the tube.  String is a
     * printf format string.  String is only printed if the given allow string
     * appears in the system variable debug_var
     *
     */

    _kernel_swi_regs regs;
    va_list args;

    va_start(args, string);

    regs.r[0] = (int)debug_var;
    regs.r[1] = (int)var_val;
    regs.r[2] = 255;
    regs.r[3] = 0;
    regs.r[4] = 3;                            

    _kernel_swi (OS_ReadVarVal, &regs, &regs);
    var_val[regs.r[2]] = '\0';

    if ((strstr (var_val, allow) != NULL) || !strcmp (allow, "force"))
    {
        strcpy(output_buffer, allow);
        strcat(output_buffer, " ");
        vsprintf (strchr(output_buffer, '\0'), string, args);
        (void) xsyslog_logmessage(module_name, output_buffer, 100);
    }

    va_end(args);
}
