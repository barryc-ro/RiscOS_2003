  ToolboxEvent            event ;

      /*
       * Raise toolbox event
       * /* Hatchet job here - to find out the maximum string length, I use
       *    knowledge of which structures are used...
       * Egads! This code is frogging ugly. Not convinced it's right yet either...
       */

      if (string_length (d->display_field.text) >=
          (sizeof (ToolboxEvent) - sizeof (ToolboxEventHeader) - 4))
      {
        event.hdr.size = sizeof (ToolboxEvent) ; /* It's curved to fit... */
        event.data.words[0] = DisplayField_ValueChanged_TooLong ;
        (void) string_copy_chk ( (char *) &event.data.words[1],
                                 d->display_field.text,
                                 sizeof (ToolboxEvent) - sizeof (ToolboxEventHeader) - 5 ) ;
                                 /* Leave room for terminator! */
        DEBUG debug_output ("display", "DisplayField_SetValue: Truncating string to %d characters\n\r",
                            sizeof (ToolboxEvent) - sizeof (ToolboxEventHeader) - 5) ;
      }
      else
      {
        /* -5 means minus one for the terminator, minus four for the flags */
        event.hdr.size = string_length (d->display_field.text) + sizeof (ToolboxEventHeader) - 5 ;
        event.data.words[0] = 0 ;
        string_copy ( (char *) &event.data.words[1], d->display_field.text ) ;
        DEBUG debug_output ("dislpay", "DisplayField_SetValue: taking a chance, I think it's short enough\n\r") ;
      }

      event.hdr.event_code = DisplayField_ValueChanged ;

      DEBUG debug_output ("display", "DisplayField_SetValue: raising toolbox event\n\r") ;

      regs.r[0] = 0 ; /* Flags */
      regs.r[1] = (int) window ;
      regs.r[2] = (int) gadget ;
      regs.r[3] = (int) &event ;
      if ((e = _kernel_swi (Toolbox_RaiseToolboxEvent, &regs, &regs)) != NULL)
        return (e);
