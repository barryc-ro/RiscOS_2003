/* Title:   object.h
 * Purpose: object list handling for the Generic module
 * Author:  IDJ
 * History: 11-Oct-93: IDJ: created
 *
 */


#ifndef __object_h
#define __object_h


#ifndef __wimp_h
#include "twimp.h"
#endif

#ifndef __window_h
#include "window.h"
#endif



/* 
 * a WindowInternal is the Window module's internal rep'n of a Window, created from
 * a Window template
 */

/*
 * The structure that we give the rest of the window module to keep in
 * its gadget list
 */

typedef struct gadgetinternal {
    struct gadgetinternal  *next;
    struct gadgetinternal  *prev;
    GadgetHeader            gadget_hdr;
    void                   *data;
} GadgetInternal;                

typedef struct
{
        int      flags;
        int      wimp_key_code;
        int      key_event;
        ObjectID key_show;

} KeyBoardShortcutInternal;

typedef struct paneinternal {
    struct paneinternal    *next;
    ObjectID                pane;
    int wimp;
    int type;                     
    int width,height;
    int xoff,yoff;
} PaneInternal;

typedef struct windowinternal
{
        struct windowinternal    *next;
        struct windowinternal    *prev;

/* same as a window template here*/
        int                       flags;                        /* from template */
        char                     *help_message;                 /* interactive help message */
        int                       max_help;                     /* size of buffer for help message */
        char                     *pointer_shape;                /* change pointer to this shape on enter window */
        int                       max_pointer_shape;            /* size of buffer for sprite name for pointer */
        int                       pointer_x_hot;
        int                       pointer_y_hot;                /* pointer hot spots */
        ObjectID                  menu;                         /* menu to display when MENU pressed */
        int                       num_keyboard_shortcuts;
        KeyBoardShortcutInternal *keyboard_shortcuts;           /* mappings of keystrokes to events */
        int                       num_gadgets;
        GadgetInternal           *gadgets;                      /* gadgets in this window, eg action buttons */
        ComponentID               default_focus;                /* gadget to put focus into on show */
        int                       show_event;
        int                       hide_event;
        ObjectID                  ibl,itl,ebl,etl;
        wimp_Window               window;                       /* as expected by Wimp_CreateWindow */

/* extra window module specific data here */
        int                       state;
        int                       wimp_window_handle;           /* handle of "real" window */
        struct windowinternal    *parent;
        PaneInternal             *panes;
        unsigned char             ft,fr,fl,fb;                  /* window furniture height */
        ObjectID                  id;                           /* id passed to us by Toolbox */
        GadgetInternal          **icon_mappings;                /* array of pointers to gadgets
                                                                   corresponding to icons.
                                                                   icon_mappings[i] holds id of
                                                                   gadget for icon number i.
                                                                 */
        int                       num_icon_mappings;


        /* all indirected string data for the window (not gadgets) comes here, laid out as:
                help_message,  (size determined by max_help)
                pointer_shape  (name of sprite to be used for pointer shape)
                title_string   (pointed at by window.title.indirect_text.buffer)
                valid_string   (pointed at by window.title.indirect_text.valid_string)
         */

} WindowInternal;


#endif
