/* Title:   hide.c
 * Purpose: hide a Menu Object
 * Author:  TGR
 * History: 4-Nov-93: TGR: created
 *
 */


#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include "swis.h"

#include "const.h"
#include "macros.h"
#include "objects.toolbox.h"
#include "objects.menu.h"
#include "string32.h"
#include "messages.h"
#include "services.h"
#include "debug.h"
#include "mem.h"

#include "auxiliary.h"

#include "Menu.h"
#include "object.h"
#include "task.h"

#include "hide.h"

extern _kernel_oserror *hide_menu (_kernel_swi_regs *r, TaskDescriptor *t)
{

    /*
     * request to hide an object
     * R0 = 4
     * R1 = Object ID
     * R2 = internal handle returned when Object was created
     * R3 = wimp task handle of caller (use to identify task descriptor)
     * R4 -> user regs R0-R9
     *      R0 =  flags
     *      R1 =  Object ID
     *
     */

    /*
     * Remove the object from view.
     */

   _kernel_oserror   *e;
   _kernel_swi_regs   regs;
   ObjectID           object_id   = (ObjectID) r->r[1];

   if ((global_menu.t == t) && (global_menu.top->hdr.object_id == object_id)) {

      DEBUG debug_output ("h","Menu: hiding menus\n");

      regs.r[1] = -1;

      if ((e = _kernel_swi (Wimp_CreateMenu, &regs, &regs)) != NULL)
         return e;

      return has_been_hidden ();
   }
   return NULL;
}
