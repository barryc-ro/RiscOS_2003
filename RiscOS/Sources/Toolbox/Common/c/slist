#include <stdio.h>

#include "slist.h"
#include "mem.h"

void *slist_add_new(void **_head,int size,char *tag)
{       

   SList *new,**head = (SList **)_head;

   new = mem_allocate(size,tag);
   if (new) {
      new->next = *head;
      *head = new;
   }
   return new;
}

void slist_delete_member(void **_head,void *member)
{

   SList *prev=NULL,*list = (SList *) (*_head),*tst = (SList *)member;
       
   while(list) {
       if (list == tst) {
          if (prev) prev->next = list->next;
          else *_head = (void *) (list->next);
          mem_free(list,"Freeing list member");
          return;

       }

       prev =list;
       list = list->next;
   }                     
}
                 
void *slist_find_member(void **_head,int field, int value)
{

   SList *list = (SList *) (*_head);
       
   while(list) {
       if (list->members[field] == value) break;

       list = list->next;
   }
   return list;
}

void *slist_find_matched_member(void **_head,int (*func)(void *list,int value), int value)
{

   SList *list = (SList *) (*_head);
       
   while(list) {
       if (func(list, value)) break;

       list = list->next;
   }
   return list;
}

void slist_delete_and_call(void **_head,void (*func)(void * d))
{

   SList *next,*list = (SList *) (*_head);
       
   while(list) { 
      func(list);                         
      next = list->next;
      mem_free(list,"Freeing list member");
      list = next;
   }    
   *_head = NULL;                 
}
