; Title:   s.filter_ven
; Purpose: post and prefilter veneers
; Author:  IDJ
; History: 16-Sep-93: IDJ: Created
;

r0      RN      0
r1      RN      1
r2      RN      2
r3      RN      3

r4      RN      4
r5      RN      5
r6      RN      6
r7      RN      7
r8      RN      8
r9      RN      9

r10     RN     10
r11     RN     11
r12     RN     12
r13     RN     13

sl      RN     10
fp      RN     11
ip      RN     12
sp      RN     13
lr      RN     14
pc      RN     15


        IMPORT  |filters_postfilter|
        IMPORT  |filters_prefilter|

        EXPORT  |postfilter_veneer|
        EXPORT  |prefilter_veneer|

        AREA    |C$$Code|, CODE, READONLY

postfilter_veneer

        ; Entry
        ; R0   = reason code
        ; R1  -> event block
        ; R2   = task handle
        ; R12  = "task descriptor"
        ; task paged in

        ; NOTE the returned R0 from filters_postfilter is passed back to the client
        ; 

        STMFD   sp!,    {r1-r9, sl, fp, ip, lr}         ; stack everything in sight (except R0!)

        MOV     sl,     sp, LSR #20
        MOV     sl,     sl, ASL #20                     ; SP_LWM (base of SVC stack)

        LDMIA   sl,     {r4, r5}                        ; save old relocation modifiers

        MOV     r2,     r12                             ; task descriptor passed to filters_postfilter
                                                        ; in R2

        LDR     r12,    [r12, #8]                       ; this is the module's "real" private word
                                                        ; which C code needs to get at the
                                                        ; module's static data

        LDR     r12,    [r12]
        LDMIB   r12,    {fp, r12}                       ; new relocation modifiers
        STMIA   sl,     {fp, r12}

        ADD     sl,     sl, #540                        ; C stack limit stuff

        BL      filters_postfilter                      ; filters_postfilter (int event_code,
                                                        ;                     wimp_pollstr *p,
                                                        ;                     TaskDescriptor *t)
                                                        ; note returned R0 is passed back to
                                                        ; Wimp to indicate whether to pass event
                                                        ; to client

        SUB     sl,     sl, #540

        STMIA   sl,     {r4, r5}                        ; restore old relocation modifiers

        LDMFD sp!,      {r1-r9, sl, fp, ip, pc}^        ; return from filter

prefilter_veneer

        ; Entry
        ; R0   = event mask
        ; R1  -> event block
        ; R2   = task handle
        ; R12  = "task descriptor"

        STMFD   sp!,    {r1-r9, sl, fp, ip, lr}         ; stack everything in sight (except R0!)

        MOV     sl,     sp, LSR #20
        MOV     sl,     sl, ASL #20                     ; SP_LWM (base of SVC stack)

        LDMIA   sl,     {r4, r5}                        ; save old relocation modifiers

        MOV     r2,     r12                             ; task descriptor passed to filters_postfilter
                                                        ; in R2

        LDR     r12,    [r12, #8]                       ; this is the module's "real" private word
                                                        ; which C code needs to get at the
                                                        ; module's static data

        LDR     r12,    [r12]
        LDMIB   r12,    {fp, r12}                       ; new relocation modifiers
        STMIA   sl,     {fp, r12}

        ADD     sl,     sl, #540                        ; C stack limit stuff

        BL      filters_prefilter                       ; filters_prefilter (int mask,
                                                        ;                    wimp_pollstr *p,
                                                        ;                    TaskDescriptor *t)
                                                        ; note that filters_prefilter returns us
                                                        ; the new mask to be used in R0

        SUB     sl,     sl, #540

        STMIA   sl,     {r4, r5}                        ; restore old relocation modifiers

        LDMFD   sp!,    {r1-r9, sl, fp, ip, pc}^        ; return from filter



        END

