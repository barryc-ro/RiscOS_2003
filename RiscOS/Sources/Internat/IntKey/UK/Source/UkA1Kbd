; > <IKHG$Dir>.Source.UkA1Kbd

KeyStruct1 ROUT
        &       KeyTran1-KeyStruct1
        &       (KeyTran1End-KeyTran1) :SHR: 2
        &       InkeyTran-KeyStruct1
        &       ShiftingKeyList-KeyStruct1
        &       SpecialList1-KeyStruct1
        &       SpecialCodeTable1-KeyStruct1
        &       KeyStructInit-KeyStruct1
        &       PendingAltCode1-KeyStruct1
        &       PendingAltSpecial1-KeyStruct1
        &       PadK1NumTran-KeyStruct1-(SpecialList1Pad-SpecialList1)
        &       PadK1CurTran-KeyStruct1-(SpecialList1Pad-SpecialList1)


SpecialList1
        =       SpecialList1End-SpecialList1-1
SpecialList1Pad
        =       K1NumPadSlash, K1NumPadStar, K1NumPadHash
        =       K1NumPad7, K1NumPad8, K1NumPad9, K1NumPadMinus
        =       K1NumPad4, K1NumPad5, K1NumPad6, K1NumPadPlus
        =       K1NumPad1, K1NumPad2, K1NumPad3, K1NumPadEnter
        =       K1NumPad0, K1NumPadDot

        =       K1ShiftLeft, K1ShiftRight, K1CtrlLeft, K1CtrlRight
        =       K1AltLeft, K1AltRight
        =       K1RightMouse, K1CentreMouse, K1LeftMouse
        =       K1CapsLock, K1Tab
        =       K1NumLock, K1ScrollLock, K1Break, K1Pound
        =       K1BackTick, K1NotFitted
K1TopBitSet
        =       K1Digit1, K1Digit2, K1Digit3, K1Digit4
        =       K1Digit5, K1Digit6, K1Digit9, K1Minus
        =       K1LetterR, K1LetterY, K1LetterO, K1LetterP
        =       K1OpenSquare, K1CloseSquare, K1BackSlash, K1LetterA
        =       K1LetterS, K1LetterD, K1LetterF, K1SemiColon
        =       K1Tick, K1LetterZ, K1LetterX, K1LetterC
        =       K1LetterM, K1Comma, K1Dot, K1Slash
        =       K1Space
SpecialList1End
        ALIGN

SpecialCodeTable1
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPadSlash
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPadStar
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPadHash
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad7
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad8
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad9
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPadMinus
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad4
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad5
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad6
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPadPlus
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad1
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad2
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad3
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPadEnter
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPad0
        &       ProcessK1Pad-SpecialCodeTable1          ; K1NumPadDot

        &       ProcessKShift-SpecialCodeTable1         ; K1ShiftLeft
        &       ProcessKShift-SpecialCodeTable1         ; K1ShiftRight
        &       ProcessKCtrl-SpecialCodeTable1          ; K1CtrlLeft
        &       ProcessKCtrl-SpecialCodeTable1          ; K1CtrlRight
        &       ProcessKAlt-SpecialCodeTable1           ; K1AltLeft
        &       ProcessKAlt-SpecialCodeTable1           ; K1AltRight
        &       ProcessKRight-SpecialCodeTable1         ; K1RightMouse
        &       ProcessKCentre-SpecialCodeTable1        ; K1CentreMouse
        &       ProcessKLeft-SpecialCodeTable1          ; K1LeftMouse
        &       ProcessKCaps-SpecialCodeTable1          ; K1CapsLock
        &       ProcessKTab-SpecialCodeTable1           ; K1Tab
        &       ProcessKNum-SpecialCodeTable1           ; K1NumLock
        &       ProcessKScroll-SpecialCodeTable1        ; K1ScrollLock
        &       ProcessKBreak-SpecialCodeTable1         ; K1Break
        &       ProcessK1Pound-SpecialCodeTable1        ; K1Pound
        &       ProcessK1BackTick-SpecialCodeTable1     ; K1BackTick
        &       ProcessK1Pound-SpecialCodeTable1        ; K1NotFitted

        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1
        &       ProcessK1TopBitSet-SpecialCodeTable1


; Keyboard table for UK, Master, Compact

KeyTran1 ROUT

; Column 0

00
        =       &1B, &1B, &1B, &1B      ; Escape
        =       &81, &91, &A1, &B1      ; f1
        =       &82, &92, &A2, &B2      ; f2
        =       &83, &93, &A3, &B3      ; f3
        =       &84, &94, &A4, &B4      ; f4
        =       &85, &95, &A5, &B5      ; f5
        =       &86, &96, &A6, &B6      ; f6
        =       &87, &97, &A7, &B7      ; f7
        =       &88, &98, &A8, &B8      ; f8
        =       &89, &99, &A9, &B9      ; f9
        =       &CA, &DA, &EA, &FA      ; f10 (or is it f0)
        =       &CB, &DB, &EB, &FB      ; f11
        =       &CC, &DC, &EC, &FC      ; f12
        =       &80, &90, &A0, &B0      ; Print
        &       -1                      ; Scroll Lock
        &       -1                      ; Break

; Column 1

10
        &       -1                      ; back tick and ~ (Alt -> ¬ and °)
        &       -1                      ; 1 (Alt -> ¹ and ¡)
        &       -1                      ; 2 (Alt -> ²)
        &       -1                      ; 3 (Alt -> ³)
        &       -1                      ; 4 (Alt -> ¼)
        &       -1                      ; 5 (Alt -> ½)
        &       -1                      ; 6 (Alt -> ¾)
        =       "7&", &07, &07          ; 7
        =       "8*", &08, &08          ; 8
        &       -1                      ; 9 (Shift Alt -> ±)
        =       "0)", &00, &00          ; 0
        &       -1                      ; - (Alt -> soft hyphen ­)
        =       "=+", &FF, &FF          ; =
        &       -1                      ; pound and currency
        =       &08, &08, &08, &08      ; backspace
        =       &CD, &DD, &ED, &FD      ; Insert

; Column 2

20
        =       &1E, &1E, &1E, &1E      ; Home
        =       &9F, &8F, &BF, &AF      ; Page Up
        &       -1                      ; Num Lock
        &       -1                      ; pad /
        &       -1                      ; pad *
        &       -1                      ; pad #
        &       -1                      ; Tab
        =       "qQ", &11, &11          ; Q
        =       "wW", &17, &17          ; W
        =       "eE", &05, &05          ; E
        &       -1                      ; R (Alt -> ¶ and ®)
        =       "tT", &14, &14          ; T
        &       -1                      ; Y (Shift Alt -> ¥)
        =       "uU", &15, &15          ; U
        =       "iI", &09, &09          ; I
        &       -1                      ; O (Alt -> ø and Ø)

; Column 3

30
        &       -1                      ; P (Alt -> þ and Þ)
        &       -1                      ; [ (Alt -> dead acute)
        &       -1                      ; ] (Alt -> dead grave)
        &       -1                      ; \ (Shift Alt -> ¦)
        =       &7F, &7F, &7F, &7F      ; Delete
        =       &8B, &9B, &AB, &BB      ; Copy
        =       &9E, &8E, &BE, &AE      ; Page Down
        &       -1                      ; pad 7
        &       -1                      ; pad 8
        &       -1                      ; pad 9
        &       -1                      ; pad -
        &       -1                      ; Ctrl (left)
        &       -1                      ; A (Alt -> æ and Æ)
        &       -1                      ; S (Alt -> ß and §)
        &       -1                      ; D (Alt -> ð and Ð)
        &       -1                      ; F (Shift Alt -> ª)

; Column 4

40
        =       "gG", &07, &07          ; G
        =       "hH", &08, &08          ; H
        =       "jJ", &0A, &0A          ; J
        =       "kK", &0B, &0B          ; K
        =       "lL", &0C, &0C          ; L
        &       -1                      ; ; (Alt -> dead diaeresis)
        &       -1                      ; ' (Alt -> dead circumflex)
        =       &0D, &0D, &0D, &0D      ; Return
        &       -1                      ; pad 4
        &       -1                      ; pad 5
        &       -1                      ; pad 6
        &       -1                      ; pad +
        &       -1                      ; Shift (left)
        &       -1                      ; pound and currency (key 104)
        &       -1                      ; Z (Alt -> «)
        &       -1                      ; X (Alt -> »)

; Column 5

50
        &       -1                      ; C (Alt -> ¢ and ©)
        =       "vV", &16, &16          ; V
        =       "bB", &02, &02          ; B
        =       "nN", &0E, &0E          ; N
        &       -1                      ; M (Alt -> µ and º)
        &       -1                      ; , (Alt -> dead tilde and ×)
        &       -1                      ; . (Alt -> dead ring and ÷)
        &       -1                      ; / (Alt -> dead cedilla and ¿)
        &       -1                      ; Shift (right)
        =       &8F, &9F, &AF, &BF      ; cursor up
        &       -1                      ; pad 1
        &       -1                      ; pad 2
        &       -1                      ; pad 3
        &       -1                      ; Caps Lock
        &       -1                      ; Alt (left)
        &       -1                      ; space bar (Alt -> non-break-space)

; Column 6

60
        &       -1                      ; Alt (right)
        &       -1                      ; Ctrl (right)
        =       &8C, &9C, &AC, &BC      ; cursor left
        =       &8E, &9E, &AE, &BE      ; cursor down
        =       &8D, &9D, &AD, &BD      ; cursor right

;        &       -1                      ; pad 0
;        &       -1                      ; pad .
;        &       -1                      ; pad Enter

        ASSERT  %10-%00 = 16*4
        ASSERT  %20-%10 = 16*4
        ASSERT  %30-%20 = 16*4
        ASSERT  %40-%30 = 16*4
        ASSERT  %50-%40 = 16*4
        ASSERT  %60-%50 = 16*4
KeyTran1End

; **************************************************************************

TopBitSetTable1
        =       &31, &00, &21, &00, &01, &00, &01, &00          ; 1
        =       &B9, &00, &A1, &00, &00, &03, &00, &03
        =       &32, &00, &40, &00, &00, &00, &00, &00          ; 2
        =       &B2, &00, &00, &03, &00, &03, &00, &03
        =       &33, &00, &23, &00, &03, &00, &03, &00          ; 3
        =       &B3, &00, &00, &03, &00, &03, &00, &03
        =       &34, &00, &24, &00, &04, &00, &04, &00          ; 4
        =       &BC, &00, &00, &03, &00, &03, &00, &03
        =       &35, &00, &25, &00, &05, &00, &05, &00          ; 5
        =       &BD, &00, &00, &03, &00, &03, &00, &03
        =       &36, &00, &5E, &00, &1E, &00, &1E, &00          ; 6
        =       &BE, &00, &00, &03, &00, &03, &00, &03
        =       &39, &00, &28, &00, &09, &00, &09, &00          ; 9
        =       &00, &03, &B1, &00, &00, &03, &00, &03
        =       &2D, &00, &5F, &00, &1F, &00, &1F, &00          ; minus
        =       &AD, &00, &00, &03, &00, &03, &00, &03
        =       &72, &01, &52, &01, &12, &00, &12, &00          ; r
        =       &B6, &00, &AE, &00, &00, &03, &00, &03
        =       &79, &01, &59, &01, &19, &00, &19, &00          ; y
        =       &00, &03, &A5, &00, &00, &03, &00, &03
        =       &6F, &01, &4F, &01, &0F, &00, &0F, &00          ; o
        =       &F8, &00, &D8, &00, &00, &03, &00, &03
        =       &70, &01, &50, &01, &10, &00, &10, &00          ; p
        =       &FE, &00, &DE, &00, &00, &03, &00, &03
        =       &5B, &00, &7B, &00, &1B, &00, &1B, &00          ; [
        =       &02, &02, &00, &03, &00, &03, &00, &03
        =       &5D, &00, &7D, &00, &1D, &00, &1D, &00          ; ]
        =       &01, &02, &00, &03, &00, &03, &00, &03
        =       &5C, &00, &7C, &00, &1C, &00, &1C, &00          ; backslash
        =       &00, &03, &A6, &00, &00, &03, &00, &03
        =       &61, &01, &41, &01, &01, &00, &01, &00          ; a
        =       &E6, &00, &C6, &00, &00, &03, &00, &03
        =       &73, &01, &53, &01, &13, &00, &13, &00          ; s
        =       &DF, &00, &A7, &00, &00, &03, &00, &03
        =       &64, &01, &44, &01, &04, &00, &04, &00          ; d
        =       &F0, &00, &D0, &00, &00, &03, &00, &03
        =       &66, &01, &46, &01, &06, &00, &06, &00          ; f
        =       &00, &03, &AA, &00, &00, &03, &00, &03
        =       &3B, &00, &3A, &00, &00, &03, &00, &03          ; semi-colon
        =       &05, &02, &00, &03, &00, &03, &00, &03
        =       &27, &00, &22, &00, &00, &03, &00, &03          ; tick
        =       &03, &02, &00, &03, &00, &03, &00, &03
        =       &7A, &01, &5A, &01, &1A, &00, &1A, &00          ; z
        =       &AB, &00, &00, &03, &00, &03, &00, &03
        =       &78, &01, &58, &01, &18, &00, &18, &00          ; x
        =       &BB, &00, &00, &03, &00, &03, &00, &03
        =       &63, &01, &43, &01, &03, &00, &03, &00          ; c
        =       &A2, &00, &A9, &00, &00, &03, &00, &03
        =       &6D, &01, &4D, &01, &0D, &00, &0D, &00          ; m
        =       &B5, &00, &BA, &00, &00, &03, &00, &03
        =       &2C, &00, &3C, &00, &00, &03, &00, &03          ; comma
        =       &04, &02, &D7, &00, &00, &03, &00, &03
        =       &2E, &00, &3E, &00, &00, &03, &00, &03          ; dot
        =       &06, &02, &F7, &00, &00, &03, &00, &03
        =       &2F, &00, &3F, &00, &00, &03, &00, &03          ; slash
        =       &07, &02, &BF, &00, &00, &03, &00, &03
        =       &20, &00, &20, &00, &20, &00, &20, &00          ; space
        =       &A0, &00, &A0, &00, &00, &03, &00, &03

ProcessK1TopBitSet      DoTopBit        1

        DoAccent        1, Latin1

PadK1NumTran
        =       "/*#789-456+123",13,"0."
PadK1CurTran
        =       "/*#",&1E,&8F,&9F,"-",&8C,&FF,&8D,"+",&8B,&8E,&9E,13,&CD,&7F
        ALIGN

        END
