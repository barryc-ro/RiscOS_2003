; > s.ExtraRes

; This little module registers a ResourceFS block if found at certain magic
; physical ROM locations. When you need more than 8Mb of ROM...

        AREA    |!!!Module|,CODE,READONLY,PIC

Module_BaseAddr

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:ModHand
        GET     Hdr:Services
        GET     Hdr:Proc
        GET     Hdr:ResourceFS
        GET     VersionASM

        GET     Hdr:NDRDebug

        GBLL    debug
        GBLL    debugxx
        GBLL    hostvdu

debug   SETL    false
debugxx SETL    false
hostvdu SETL    false
FlashAddr  *    &81000000       ; Start of ROM bank 1 - start of on-board Flash
FlashAddr2 *    &80400000       ; 4Mb into ROM bank 0 - inside Boot ROM
FlashAddr3 *    &80800000       ; 8Mb into ROM bank 0 - inside a 12 or 16Mb main ROM
FlashAddr4 *    &81C00000       ; 12Mb into ROM bank 1 - font data on Funai8
MagicWord  *    &E28F0000


; **************** Module code starts here **********************

        ASSERT  (.-Module_BaseAddr) = 0

        DCD     0 ; Messages_Start    - Module_BaseAddr
        DCD     Messages_Init     - Module_BaseAddr
        DCD     Messages_Die      - Module_BaseAddr
        DCD     Messages_Service  - Module_BaseAddr
        DCD     Messages_Title    - Module_BaseAddr
        DCD     Messages_HelpStr  - Module_BaseAddr
        DCD     0
        DCD     0
        DCD     0
        DCD     0
        DCD     0
        DCD     ModuleFlag_32bit

Messages_Title          DCB     "ExtraResources", 0
Messages_HelpStr        DCB     "Extra Resources", 9, "$Module_HelpVersion", 0
                        ALIGN

; *****************************************************************************
;
;       Messages_Init - Initialisation entry
;

Messages_Init
        Entry
        BL      FindResources
        SWIEQ   XResourceFS_RegisterFiles
        CLRV
        EXIT


; *****************************************************************************
;
;       Messages_Die - Die entry
;

Messages_Die
        Entry
        BL      FindResources
        SWIEQ   XResourceFS_DeregisterFiles
        CLRV
        EXIT

; *****************************************************************************
;
;       Messages_Service - Main entry point for services
;
; in:   r1 = service reason code
;       r2 = sub reason code
;       r3-r5 parameters
;
; out:  r1 = 0 if we claimed it
;       r2 preserved
;       r3-r5 = ???
;

ServiceTable
        DCD     0                                       ; flags
        DCD     svc_desktopstarting - Module_BaseAddr
        DCD     Service_ResourceFSStarting
        DCD     0                                       ; terminator

        DCD     ServiceTable - Module_BaseAddr
Messages_Service ROUT
        NOP
        TEQ     r1, #Service_ResourceFSStarting
        MOVNE   pc, lr

; In    r2 -> address inside ResourceFS module to call
;       r3 = workspace pointer for module
; Out   r2 called with r0 -> files, r3 -> workspace

svc_desktopstarting
        Entry   "r0-r5"
        BL      FindResources
        MOVEQ   lr, pc                          ; get return address
        MOVEQ   pc, r2                          ; r2 = address to call
        EXIT

; *****************************************************************************
;
;       FindResources - Locate our data
;
; out:  r0 -> ResourceFS block, if we find it
;       EQ if found
;       NE if not found
;

FindResources
        Entry   "R1,R2"
        LDR     r0, =FlashAddr

        LDR     r1, =MagicWord
        LDR     r2, [r0], #8                    ; they seek it here
        TEQ     r1, r2

        LDRNE   r0, =FlashAddr2
        LDRNE   r2, [r0], #8
        TEQNE   r1, r2                          ; they seek it there

        LDRNE   r0, =FlashAddr3
        LDRNE   r2, [r0], #8
        TEQNE   r1, r2                          ; those frenchies seek it everywhere

        LDRNE   r0, =FlashAddr4
        LDRNE   r2, [r0], #8
        TEQNE   r1, r2                          ; that damned elusive

        ; +8 to skip ResGen code header now done as post-increment on LDRs
        ; ADDEQ r0, r0, #8
        EXIT

      [ debug
        InsertNDRDebugRoutines
      ]

        END
