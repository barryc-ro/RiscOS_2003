/**
 **	Compact-VJE
 **	for KOREAN 
 **/
/* Key Convert Table */
struct	keyconvtable{
	UCHAR	Index;				/* For Hangul Table Index */
	UCHAR	Flag;				/* Hangul Boin Flag ( Boin = 1 / Siin = 0 ) */
	UCHAR	Data[2];			/* Hangul Code */
};

typedef	struct	keyconvtable	KCTABLE;
#if OS2|MSDOS
typedef	KCTABLE far	*PKCTABLE;
#else
typedef	KCTABLE		*PKCTABLE;
#endif

/* KCTABLE's define */
#define	KCI_a	4				/* a/A */
#define	KCI_b	22				/* b/B */
#define	KCI_c	9				/* c/C */
#define	KCI_d	7				/* d/D */
#define	KCI_e	2				/* e */
#define	KCI_E	15				/* E */
#define	KCI_f	3				/* f/F */
#define	KCI_g	13				/* g/G */
#define	KCI_h	19				/* h/H */
#define	KCI_i	23				/* i/I */
#define	KCI_j	24				/* j/J */
#define	KCI_k	25				/* k/K */
#define	KCI_l	26				/* l/L */
#define	KCI_m	20				/* m/M */
#define	KCI_n	21				/* n/N */
#define	KCI_o	27				/* o */
#define	KCI_O	28				/* O */
#define	KCI_p	29				/* p */
#define	KCI_P	30				/* P */
#define	KCI_q	5				/* q */
#define	KCI_Q	16				/* Q */
#define	KCI_r	0				/* r */
#define	KCI_R	14				/* R */
#define	KCI_s	1				/* s/S */
#define	KCI_t	6				/* t */
#define	KCI_T	17				/* T */
#define	KCI_u	31				/* u/U */
#define	KCI_v	12				/* v/V */
#define	KCI_w	8				/* w */
#define	KCI_W	18				/* W */
#define	KCI_x	11				/* x/X */
#define	KCI_y	32				/* y/Y */
#define	KCI_z	10				/* z/Z */
