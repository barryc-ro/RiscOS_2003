/*
**	Compact-VJE
**					vfncdef.h
*/
#if unix
#define	far 
#endif

#if PROTO

#if ROMDIC
void init_rom_address(void );
char *get_rom_rec(short rec);
char *get_rom_address(long offset);
#else
short	LowOpen(char *dicname, short mode);
short	LowClose(short fd);
short	LowRead(short file_num, char *dicmemo, short size);
short	LowSeek(short file_num, long offset, short mode);
#endif
/*************************************************************/
short SrchSram(unsigned char far *yomi,struct kcb_link_type *kcblnk,short mode);
/*************************************************************/
void FTYPE copykb(unsigned char far *a,unsigned char far *b);
short FTYPE kstrcmp(unsigned char far *buf1,unsigned char far *buf2);
short FTYPE chkomoji(short c,short ep);
short	han_zen(unsigned char far *han, unsigned char far *zen);
void	hira_kata(unsigned char far *hira, unsigned char far *kata);
short	zen_han(unsigned char far *zen, unsigned char far *han);
short	FTYPE chk_dakhan(unsigned char c);
void	FTYPE addc2(unsigned char far *d, unsigned char far *s);
short	FTYPE jissj(unsigned char c1, unsigned char far *sjchr, short ktn);
#if CHINA
short	FTYPE Jisgb(unsigned char c1, unsigned char far *sjchr, short ktn);
#endif
#if TAIWAN
short	FTYPE Jisbig5(unsigned char c1, unsigned char far *sjchr, short ktn);
#endif
/*************************************************************/
void FTYPE clrsub(void);
void FTYPE clreva(void);
/*static*/ short FTYPE addkoho(short cnt,unsigned char far *buf,short len,short bno);
/*static*/ short FTYPE ChkKanjiEnd(unsigned char far *buf,short p);
short FTYPE chg_kanji_koho(short p);
/*static*/ short FTYPE next_blk_len(short p);
/*static*/ short FTYPE kaku_sub(short bno,short n,unsigned char far *key,short len);
/*static*/ void FTYPE sft_left_koho(short bunno,short p,short hlen,short dlen);
struct kcard *FTYPE get_koho_card(short bno,short cnt);
void FTYPE restore_buffer(unsigned char far *inbuf);
/*static*/ short FTYPE chg_koho(short bno,unsigned char far *vjeyomi,short yomi_ptr,short yomi_len,short mode);
/*static*/ short FTYPE tanbun(short bno,unsigned char far *vjeyomi,short bun_len);
short FTYPE makkugiri(struct kcb_link_type *kcblnk);
/*static*/ void FTYPE sethflg(struct kcard *ptr,short n,unsigned char ji,struct eva_blk *ptre);
short FTYPE eva1koho(short e);
short FTYPE evakoho(unsigned char *blen);
/*static*/ short FTYPE calcpnt(unsigned char *hin,struct eva_blk *ptre);
/*static*/ void FTYPE eva2bun(short j,short point,short cnj,unsigned char *blen,short fzk_mode);
/*static*/ short FTYPE chkjosi(short c);
short FTYPE chkhinsi(short j,short k);
short FTYPE chkkatu(short jh);
short FTYPE editbuf(unsigned char far *inbuf,short cnvted);
short FTYPE hira_yomi(unsigned char far *hira,unsigned char far *yomi);
void FTYPE yomi_hira(unsigned char far *buf1,unsigned char far *buf2);
short FTYPE chkkigo(unsigned char far *buf,struct kcb_link_type *kcblnk,short hira_ptr,short mode);
short FTYPE add_vir_card(short yomi_ptr,short yomi_len,struct kcb_link_type *kcblnk,unsigned char hinsi);
short FTYPE makekoho(short bno);
/*static*/ short FTYPE srckoho(struct koho_lnk *p_k,short bno,struct temp *w_tmp);
/*static*/ void FTYPE linkcard(struct koho_lnk *p_k,struct temp *w_tmp);
/*static*/ short FTYPE hinsimatch(struct kcard *p_c,short len,struct koho_lnk *p_k);
short FTYPE add_hira_card(short bno);
short FTYPE del_mlt_card(struct card_link_type *pk,short yomi);
/*static*/ struct kcard *FTYPE cmpcard(struct card_link_type *pkc,struct kcard *p,short yomi, short max);
short FTYPE stg10(void);
short FTYPE stg11(void);
short FTYPE stg20(void);
short FTYPE stg21(void);
/*static*/ void FTYPE arg_eva(unsigned char *blen);
/*static*/ void FTYPE set_koho_para(unsigned char *blen);
void FTYPE set_yomipos(short bno,short dyomi);
/*static*/ void FTYPE sft_cur_yomi(short len);
short FTYPE AddHiraCard(struct koho_lnk *ptrk);
#if YUUBIN
/*static*/ short FTYPE CutBunLen(unsigned char *buf,short stpt);
#else
/*static*/ short FTYPE CutBunLen(unsigned char *buf);
#endif
short FTYPE cnvkigo(unsigned char far *ibuf,unsigned char far *obuf,short cnt);
void FTYPE gak_kakko(short kno,unsigned char cnt);
short FTYPE kansuuji(unsigned char far *ibuf,unsigned char far *obuf,short mode);
/*static*/ short FTYPE change1(unsigned char far *ibuf,unsigned char far *obuf,char *suji_tbl,char *keta_tbl, short num);
/*static*/ void FTYPE kurai(short keta,unsigned char far *obuf,char *table);
/*static*/ void FTYPE manokuch(short keta,unsigned char far *obuf,char *table);
/*static*/ short FTYPE change3(unsigned char far *ibuf,unsigned char far *obuf);
/*static*/ short FTYPE change4(unsigned char far *ibuf,unsigned char far *obuf);
short FTYPE bunpou(unsigned char far *yomi,struct kcb_link_type *link,unsigned char o_flag);
/*static*/ void FTYPE copyfzk(struct hinshi_koho far *fk,struct kcard *ptr,unsigned char far *yomi);
short FTYPE bunchk(unsigned char far *work_buf,struct input_inf far *inp,struct hinshi_koho far *fk);
/*static*/ void FTYPE sort(struct hinshi_group far *s,struct hinshi_koho far *d);
short FTYPE srcgobi(short hinshi,unsigned char far *yomi,unsigned char f,struct hinshi_block far *h,struct hinshi_groupf far *hgf, unsigned char far *max_f);
/*static*/ short FTYPE g_fuzok(unsigned char far *work_buf,struct hinshi_block far *h,struct hinshi_group far *hg,short lp_cnt,unsigned char far *f);
/*static*/ void FTYPE fzksrch(unsigned char far *work_buf,short sp,unsigned char far *fuzoku,struct hinshi_group2 far *hg2, unsigned char far *f);
/*static*/ short FTYPE chkcnj(struct hinshi_block far *h,struct hinshi_block far *hg2);
/*static*/ short FTYPE chkcnjs(struct hinshi_block far *h,struct hinshi_block far *hg2);
short FTYPE mltfzk(unsigned char far *work_buf,struct hinshi_groupf far *hgf,struct hinshi_group far *hg,short lp_cnt, unsigned char far *f);
/*static*/ short FTYPE make_dir_ptr(void);
short FTYPE zengaku(short bno,short bno2);
/*static*/ void FTYPE levhenko(void);
/*static*/ void FTYPE levhenko2(void);
/*static*/ void FTYPE chk_max_hnd(struct koho_lnk *ptrk,short kmax);
short FTYPE gakushuu(short *bno);
short FTYPE kougak_wrt(struct koho_lnk *ptrk,short para);
/*static*/ void FTYPE kougaku(struct koho_lnk *ptrk);
/*static*/ void FTYPE hindomov(struct htb far *h,struct koho_lnk *ptrk,short i);
/*static*/ void	FTYPE narabekae(short kcbno, short hykno);
/*static*/ unsigned char *FTYPE skip_field(short no,unsigned char *p);
/*static*/ unsigned char *FTYPE skip_tango(unsigned char *p);
/*static*/ unsigned char *FTYPE skip_yomi(unsigned char *p);
void FTYPE clr_koho(short bunno);
void FTYPE del_pair_koho(short bno);
void FTYPE del_kcb_card(struct koho_lnk *ptr);
void FTYPE del_kcb_and_card(struct kcb_link_type *ptr);
#if YUUBIN
short FTYPE get_yomi_len(unsigned char *buf,short p1,short p2,short stpt);
#else
short FTYPE get_yomi_len(unsigned char *buf,short p1,short p2);
#endif
short FTYPE get_bun_len(char far *buf,short p1,short p2);
short FTYPE get_bunno(short pos);
short FTYPE get_bunno2(short pos);
short FTYPE bunsetu_yomilen(short bno);
short FTYPE bunsetu_bunlen(short bno);
void FTYPE new_bunpnt(short bunno,short hira_yomi_len,short dic_yomi_len);
void FTYPE clrzero(char far *a,short n);
short FTYPE keycmp(unsigned char *s,unsigned char *t);
void FTYPE inikcb(void);
short FTYPE getnewkcb(void);
void FTYPE addkcb(short kcbno,struct kcb_link_type *kp);
short FTYPE gettopkcb(struct kcb_link_type far *kp);
short FTYPE getnextkcb(struct kcb_link_type far *kp);
void FTYPE relkcblnk(struct kcb_link_type far *kp);
void FTYPE inicard(void);
struct kcard *FTYPE getnewcard(short n);
void FTYPE addcard(struct kcard *p,struct card_link_type *cp);
void FTYPE addlnk(struct card_link_type *cp1,struct card_link_type *cp2);
void FTYPE delcurcard(struct card_link_type *cp);
void FTYPE delretcurcard(struct card_link_type *cp);
void FTYPE relcardlnk(struct card_link_type *cp);
void FTYPE settopcard(struct card_link_type *cp);
struct kcard *FTYPE gettopcard(struct card_link_type *cp);
struct kcard *FTYPE getnextcard(struct card_link_type *cp);
short FTYPE srchknj(unsigned char far *kata,struct kcb_link_type *kcblnk,short mode);
short FTYPE srchsram(unsigned char far *kata,struct kcb_link_type *kcblnk,short mode);
short FTYPE srchmem(unsigned char far *yomi,unsigned char far *tan,unsigned char far *hins,unsigned char far *hin);
short FTYPE srchknjx(unsigned char far *kata,struct kcb_link_type *kcblnk,short mode);
/*static*/ short FTYPE wt_jr_cd(struct kcb_link_type *kcblnk,short far *dirtb,short mode,unsigned char far *kata,short nch);
short FTYPE srchidx(char far *keybuf);
short FTYPE srchdir(char far *keybuf);
/*static*/ void FTYPE buf2str(char far *buf,char far *str);
/*static*/ short FTYPE srchdic(unsigned char far *buf,short far *dirtb);
/*static*/ FLAG FTYPE chk_dir(unsigned char far *buf,short len,unsigned char *ptr);
/*static*/ short FTYPE srchtango(unsigned char far *yomi,short *ptr,unsigned char far *yomibuf);
/*static*/ void FTYPE get_record_inf(unsigned char *p,short *len,short *asyuku,short *nokori);
/*static*/ short FTYPE srchkanji(short len,unsigned char far *kanji,unsigned char far *dickanji,short *ptr);
short FTYPE cnv_yomi(unsigned char far *yomi,unsigned char far *vjeyomi,short mode);
/*static*/ short FTYPE get_blocksize(void);
/*static*/ short FTYPE block_bunkatu(unsigned char far *yomi);
/*static*/ short FTYPE get_insblock(unsigned char far *yomi);
/*static*/ short FTYPE head_indx_rep(short req);
/*static*/ short FTYPE line_asyuku(unsigned char far *yomi,unsigned char far *kanji,short hinsi,unsigned char far *bakyomi,short ptr);
/*static*/ void FTYPE set_record(unsigned char far *ptr,short len,short asyuku,short nokori);
short FTYPE wrtrec(short rec,unsigned char far *buf);
short FTYPE redrec(short fd,short rec,unsigned char *buf);
void FTYPE rseek(short fd,short rec);
void FTYPE ChkHyouki(unsigned char far *a,unsigned char far *b);
short FTYPE CntHyouki(unsigned char far *yomi, unsigned char far *kanji, short i, short max);
void FTYPE copylng(unsigned char far *a, unsigned char far *b, short l);
void getdate(unsigned char *);


#else/*PROTO*/


#if ROMDIC
void init_rom_address();
char *get_rom_rec();
char *get_rom_address();
#else
short	LowOpen();
short	LowClose();
short	LowRead();
short	LowSeek();
#endif
/*************************************************************/
short SrchSram();
/*************************************************************/
void FTYPE copykb();
short FTYPE kstrcmp();
short FTYPE chkomoji();
short	han_zen();
void	hira_kata();
short	zen_han();
short	FTYPE chk_dakhan();
void	FTYPE addc2();
short	FTYPE jissj();
#if CHINA
short	FTYPE Jisgb();
#endif
#if TAIWAN
short	FTYPE Jisbig5();
#endif
/*************************************************************/
void FTYPE clrsub();
void FTYPE clreva();
/*static*/ short FTYPE addkoho();
/*static*/ short FTYPE ChkKanjiEnd();
short FTYPE chg_kanji_koho();
/*static*/ short FTYPE next_blk_len();
/*static*/ short FTYPE kaku_sub();
/*static*/ void FTYPE sft_left_koho();
struct kcard *FTYPE get_koho_card();
void FTYPE restore_buffer();
/*static*/ short FTYPE chg_koho();
/*static*/ short FTYPE tanbun();
short FTYPE makkugiri();
/*static*/ void FTYPE sethflg();
short FTYPE eva1koho();
short FTYPE evakoho();
/*static*/ short FTYPE calcpnt();
/*static*/ void FTYPE eva2bun();
/*static*/ short FTYPE chkjosi();
short FTYPE chkhinsi();
short FTYPE chkkatu();
short FTYPE editbuf();
short FTYPE hira_yomi();
void FTYPE yomi_hira();
short FTYPE chkkigo();
short FTYPE add_vir_card();
short FTYPE makekoho();
/*static*/ short FTYPE srckoho();
/*static*/ void FTYPE linkcard();
/*static*/ short FTYPE hinsimatch();
short FTYPE add_hira_card();
short FTYPE del_mlt_card();
/*static*/ struct kcard *FTYPE cmpcard();
short FTYPE stg10();
short FTYPE stg11();
short FTYPE stg20();
short FTYPE stg21();
/*static*/ void FTYPE arg_eva();
/*static*/ void FTYPE set_koho_para();
void FTYPE set_yomipos();
/*static*/ void FTYPE sft_cur_yomi();
short FTYPE AddHiraCard();
#if YUUBIN
/*static*/ short FTYPE CutBunLen();
#else
/*static*/ short FTYPE CutBunLen();
#endif
short FTYPE cnvkigo();
void FTYPE gak_kakko();
short FTYPE kansuuji();
/*static*/ short FTYPE change1();
/*static*/ void FTYPE kurai();
/*static*/ void FTYPE manokuch();
/*static*/ short FTYPE change3();
/*static*/ short FTYPE change4();
short FTYPE bunpou();
/*static*/ void FTYPE copyfzk();
short FTYPE bunchk();
/*static*/ void FTYPE sort();
short FTYPE srcgobi();
/*static*/ short FTYPE g_fuzok();
/*static*/ void FTYPE fzksrch();
/*static*/ short FTYPE chkcnj();
/*static*/ short FTYPE chkcnjs();
short FTYPE mltfzk();
/*static*/ short FTYPE make_dir_ptr();
short FTYPE zengaku();
/*static*/ void FTYPE levhenko();
/*static*/ void FTYPE levhenko2();
/*static*/ void FTYPE chk_max_hnd();
short FTYPE gakushuu();
short FTYPE kougak_wrt();
/*static*/ void FTYPE kougaku();
/*static*/ void FTYPE hindomov();
/*static*/ void	FTYPE narabekae();
/*static*/ unsigned char *FTYPE skip_field();
/*static*/ unsigned char *FTYPE skip_tango();
/*static*/ unsigned char *FTYPE skip_yomi();
void FTYPE clr_koho();
void FTYPE del_pair_koho();
void FTYPE del_kcb_card();
void FTYPE del_kcb_and_card();
#if YUUBIN
short FTYPE get_yomi_len();
#else
short FTYPE get_yomi_len();
#endif
short FTYPE get_bun_len();
short FTYPE get_bunno();
short FTYPE get_bunno2();
short FTYPE bunsetu_yomilen();
short FTYPE bunsetu_bunlen();
void FTYPE new_bunpnt();
void FTYPE clrzero();
short FTYPE keycmp();
void FTYPE inikcb();
short FTYPE getnewkcb();
void FTYPE addkcb();
short FTYPE gettopkcb();
short FTYPE getnextkcb();
void FTYPE relkcblnk();
void FTYPE inicard();
struct kcard *FTYPE getnewcard();
void FTYPE addcard();
void FTYPE addlnk();
void FTYPE delcurcard();
void FTYPE delretcurcard();
void FTYPE relcardlnk();
void FTYPE settopcard();
struct kcard *FTYPE gettopcard();
struct kcard *FTYPE getnextcard();
short FTYPE srchknj();
short FTYPE srchsram();
short FTYPE srchmem();
short FTYPE srchknjx();
/*static*/ short FTYPE wt_jr_cd();
short FTYPE srchidx();
short FTYPE srchdir();
/*static*/ void FTYPE buf2str();
/*static*/ short FTYPE srchdic();
/*static*/ FLAG FTYPE chk_dir();
/*static*/ short FTYPE srchtango();
/*static*/ void FTYPE get_record_inf();
/*static*/ short FTYPE srchkanji();
short FTYPE cnv_yomi();
/*static*/ short FTYPE get_blocksize();
/*static*/ short FTYPE block_bunkatu();
/*static*/ short FTYPE get_insblock();
/*static*/ short FTYPE head_indx_rep();
/*static*/ short FTYPE line_asyuku();
/*static*/ void FTYPE set_record();
short FTYPE wrtrec();
short FTYPE redrec();
void FTYPE rseek();
void FTYPE ChkHyouki();
short FTYPE CntHyouki();
void FTYPE copylng();
void getdate();

#endif /*PROTO*/

