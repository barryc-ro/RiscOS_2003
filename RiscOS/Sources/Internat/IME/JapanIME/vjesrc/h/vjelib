/*
**  	Compact-VJE
**
**			vjelib.h
*/

#define	END_MARK	255			/* End of link */
#define	END_CARD	0			/* End of link */

#define	REG_LIM		204			/* Max douon igigo */
#define	KOHO_MAX		(REG_LIM + 10)	/* Max koho */
#if TANBUN
#define	KCB_MAX		10			/* Max kcb */
#define	KCARD_MAX	160			/* Number of cards */
#define	SCARD_MAX	16			/* Number of special card */
#else
#if TANKANJI_CNV
#define	KCB_MAX		1			/* Max kcb */
#define	KCARD_MAX	200			/* Number of cards */
#define	SCARD_MAX	1			/* Number of special card */
#else
#define	KCB_MAX		60			/* Max kcb. Changed for RISC OS to fix Pace
                                                   fault 1296 (Conversion of long sentences failed)
                                                   - Paul Skirrow, 14 Feb 2000 */
#define	KCARD_MAX	386			/* Number of cards */
#define	SCARD_MAX	64			/* Number of special card */
#endif
#endif
#define	BUNL_MAX	32			/* Max length of a bunsetu */

#define	HEAD_LENGTH	256			/* Kokugo dir total size */
#define	TDIR_SIZE	(1024*6 - 256)		/* Kokugo dic dir buff size */
#ifdef	USER_DIC
#ifdef	UNIX
#define	UTDIR_SIZE	(1024 * 6 - 256)	/* Kokugo dic dir buff size */
#else
#define	UTDIR_SIZE	(1024 - 256) 	/* Kokugo dic dir buff size */
#endif
#endif

#ifdef	USER_DIC
#define	UMAX_BLOCK	(UTDIR_SIZE / 6)
#endif
#define	MAX_BLOCK		(TDIR_SIZE / 6)
#define	HINSI_MAX		128				/* Number of max hinsi */
#define	L_KOHO		sizeof(KH_LINK)	/* Length of a koho 20 */
#define	L_KCB		sizeof(KCB)		/* Length of a kcb 15 */
#define	L_CARD		sizeof(KCARD)		/* Length of a card 16 */
#define	L_SCARD		sizeof(SCARD)		/* Length of a scard 76 */
#define	L_EVA		sizeof(EVA_BLK)	/* Length of a evaluation block 11 */
#define	L_OKF  		sizeof(OKF)	/* Length of a ok flag block 4 */
#define	L_HIB		sizeof(HNS_BLK)	/* Length of a hib */
#define	N_HIB		12		/* Number of Hinshi Infomation Block */
#define	N_HIB2		6		/* Number of Hinshi Infomation Block2 */
#define	N_HIBF		4		/* Number of Hinshi Infomation Block */
#define	N_KOHO		4		/* Number of Fuzokugo koho Block */
#define	DIRTB_SIZE	(16 * 3 + 1)	/* Directory table size */

#define	get_act_koho(n)	(&koho1[(n)])
/*
 *	Koho card (CARD)
 */
struct kcard {
	struct kcard	*nextcard;
	UCHAR	kcbno;
	UCHAR	flg;
	UCHAR	hykno;
	UCHAR	nji;
	UCHAR	hinsi;
	UCHAR	hindo;
	UCHAR	fzk[4];
	UCHAR	ji[4];
};
typedef	struct kcard	KCARD;

/*
 *	Special Card (SCARD)
 */
struct scard {
	struct scard	*nextcard;
	UCHAR	kcbno;
	UCHAR	flg;
	UCHAR	hykno;
	UCHAR	nji;
	UCHAR	hinsi;
	UCHAR	hindo;
	UCHAR	fzk[4];
	UCHAR	ji[64];
};
typedef	struct scard	SCARD;

#ifdef	USER_DIC
/*
 *	Dictionary information
 */
struct dic_inf {
	USHORT	data_rec;
	USHORT	dic_fix;
	USHORT	dir_ptr_max;
	USHORT	rec_byte;
	USHORT	free_lnk;
	USHORT	blk_no;
	USHORT	idx_pos;
	USHORT	idx_size;
	UCHAR	dic_usr_add;
	UCHAR	**dir_ptr;
	UCHAR	*dir;
};
typedef	struct dic_inf	DIC_INF;
#endif

/*
 *	Dictionary information
 */
struct dic_inf {
/*Header Info*/
	short	dic_fix;
	short	BlockSize;
	short	data_rec;
	short	data_pos;
	short	rec_byte;
	short	free_lnk;
	short	blk_no;
	short	idx_pos;
	short	idx_size;
	short	dic_usr_add;
	short	dir_ptr_max;
	UCHAR	edit_date[17];
/*Dic Info*/
	short	open_flg;
	short	dic_rec;
	UCHAR	dicmemo[65];
	short	file_num;

	UCHAR	*dir_ptr[MAX_BLOCK];
#if ROMDIC
	UCHAR   *dir;
	UCHAR   *dic1;
#else
	UCHAR	dir[TDIR_SIZE];
	UCHAR	dic1[TDIC_SIZE];
#endif
};
typedef	struct dic_inf	DIC_INF;

#ifdef	USER_DIC
struct tango_cnt {
	USHORT	yomi_no;
	USHORT	tango_no;
	USHORT	sys_tango_no;
	USHORT	usr_tango_no;
};
typedef	struct tango_cnt	TANGO_CNT;
#endif

typedef	UCHAR	KCB_No;

struct	kcb_link_type {
	KCB_No	next;
	KCB_No	crnt;
	KCB_No	prev;
};
typedef	struct kcb_link_type	KCB_LINK;

struct	card_link_type {
	KCARD	*next;
	KCARD	*crnt;
	KCARD	*prev;
	short	cnt;
};
typedef	struct card_link_type	CARD_LINK;

/*
 *	(Koho)
 */
struct	koho_lnk {
	USHORT	koho_max;			/* Koho max */
	USHORT	koho_cnt;			/* Koho counter */
	UCHAR	flag;			/* yomie deleted */
	UCHAR	bunpnt;			/* Bunsetu start point (jisho yomi code) */
	UCHAR	yomipnt;			/* Bunsetu start point (yomi code) */
	UCHAR	bunlen1;			/* Bunsetu length 1 */
	KCB_LINK	kcbs;
	KCARD	*card;			/* Zenpou counter saidai no card */
	CARD_LINK	cards;
	UCHAR	hinsi;			/* Yuusen hinshi number */
	char	blk;			/* Block counter */
};
typedef	struct koho_lnk	KH_LINK;

/*
 *	(KCB)
 */
struct	koho_cb {
	UCHAR	flg;
	KCB_LINK	kcbs;
	CARD_LINK	cards;
	UCHAR	ji_yomi;
	USHORT	dicrec;
	USHORT	dicadd;
};
typedef	struct koho_cb	KCB;

/*
 *	Evaluation Block (EVA)
 */
struct eva_blk {
	KCARD	*no1card;	/* Zenpou counter saidai no sentou card */
	UCHAR	flg;		/* Sentou card no infomation (2ji meishi) */
	UCHAR	hflg[4];	/* Sentou card no sigma hinshi */
	UCHAR	jimax;	/* Sentou card no saidai jiritugo yomi length */
	UCHAR	no1eva;	/* Sentou card no zenpou counter no max */
	UCHAR	no1bhinsi;/* Kouhou counter saidai no sentou card no hinshi */
	UCHAR	no1beva;	/* Sentou card no kouhou counter no max */
	UCHAR	no1hin;	/* Sentou card no yuusen hinshi */
	UCHAR	no2hin;	/* Kouzoku card no yuusen hinshi */
	UCHAR	no2lng;	/* Kouzoku card no saidai length */
	UCHAR	point;	/* 2 Bunsetu no saidai goukei point */
	KCB_LINK	kcbs;
};
typedef	struct eva_blk	EVA_BLK;

#define	CLR_CARD_LNK(p)	((p)->next = (p)->crnt = (p)->prev = END_CARD)
#define	CLR_KCB_LNK(p)		((p)->next = (p)->crnt = (p)->prev = END_MARK)

struct okf {
	struct kcard	*ptr;
	UCHAR	flg;
};
typedef	struct okf	OKF;

struct	jitbl {
	UCHAR	ji1_cnj;
	UCHAR	ji2_cnj;
	UCHAR	gobi_flg;
	UCHAR	int_hin;
	UCHAR	gobi_no;
	UCHAR	gobi_grp;
};
typedef	struct jitbl	JITBL;


/*
 *	Conversion mode flag <wCnvMode>
 */
#define M_GAKU	0x01
#define M_FUKUGOU	0x02
/*
 *	Mode Flag < mode >
 */
					/* Set    :  Refer : Reset  */
#define	H_CNV		0x01		/* outside:henkanb :        */
#define	H_EDIT		0x02		/* outside:henkanb :        */
#define	H_KIGO		0x04		/* outside:stg     :        */

/*
 *	Control Flag < flg >
 */
#define	EISUU_CNV	0x01
#define	FND_MAX_FZK	0x40
#define	FND_MAX_JI	0x80

/*
 *	Mode Flag < mode >
 */
					/* Set      :  Refer    : Reset  */
#define	ENB_SET		0x01		/* henkan   : wr_jr_cd  : henkan */
#define	ENB_SEB		0x02		/* henkan   :           : henkan */
#define	ENB_KNJ		0x08		/* saihenkan: wt_jr_cd  :        */
#ifdef	USER_DIC
#define	MODE_UDIC	0x10		/* srchknj  : wt_jr_cd  :        */
#endif
#define	FULL_MATCH_ONLY	0x20		/* srchknj  :            : toku_henkan*/
#define	SRC_SAIHENKAN	0x40		/* srchknj  :            : saihenkan*/

/*
 *	Kcb Flag < kcb[i].flg >
 */

#define	KCB_NOT_DIC_CARD	0x08	/* add_vir_card:   */
#define	KCB_FND_NUM		0x10	/* bunpou:   */
#define	KCB_FND_MAX_FZK		0x40	/* bunpou:   */

/*
 *	Card Flag < card[i].flg >
 */
#define	CARD_TAIGEN		0x01	/* ptr->fzk kara copy sareru */
#define	CARD_RENTAI		0x01
#define	CARD_RENYOU		0x02
/*#ifdef	USER_DIC*/
#define	CARD_UDIC		0x04
/*#endif*/
#define	HIRA_KOHO		0x08
#define	CARD_FND_1JI		0x10	/* wr_jr_cd: */
#define	CARD_FND_2JI		0x20	/* wr_jr_cd: */
#define	CARD_DEL			0x40
#define	CARD_SPECIAL		0x80
/*
 * ptr->fzk[]
 */
#define	FZK_TAIGEN		0x20
#define	FZK_RENTAI		0x40
#define	FZK_RENYOU		0x80
#define	FZK_SFT			6

/*
 *	Eva Flag < eva[i].flg >
 */
#define	EVA_FND_2JI		0x04 /* 0x08 -> 0x40 are used by KCB */
#define	EVA_VALID		0x80


/*
 *	Jisho Hinshi Jouhou < jitb[i].flg >
 */
#define	NO_FUZOKU	0x80	/* GOBI N, G+FZK N, JIRITUGO Y */
#define	GOKAN_TAIGEN	0x40	/* GOBI ?, G+FZK Y, JIRITUGO Y */
#define	GOKAN_MIZEN	0x20
#define	GOKANKEI	0x08
#define	GOKAN_JIRITU	0x04	/* GOBI Y, G+FZK N, JIRITUGO Y */
#define	GOKAN_IIKIRI	0x02	/* GOBI Y, G+FZK N, JIRITUGO IIKIRI */
#define	RENYOU_TAIGEN	0x01

/*
 *	Komoji Check Parameter < chkomoji() >
 */
#define	SJI_GF		0x04
#define	SJI_G		0x02
#define	SJI_F		0x01

/*
 *	Katuyoukei Number < Gobi Table Flag >
 */
#define	ILEGAL_END     0x40

/*
 *	Jisho Hinshi Number
 */
#define	KEIYOU		0x01
#define	KEIYOU2		0x08
#define	KEIDOU		0x0b
#define	MEISHI		0x20
#define	SUUSHI		0x2d
#define TANKANJI	0x4f
#define	GODAN_K		0x50
#define	GODAN_G		0x54
#define	GODAN_S		0x56
#define	GODAN_T		0x58
#define	GODAN_N		0x5a
#define	GODAN_B		0x5b
#define	GODAN_M		0x5d
#define	GODAN_R		0x60
#define	GODAN_R_ARU	0x62
#define	GODAN_R_NASARU	0x63
#define	GODAN_W		0x64
#define	GODAN_WN	0x65
#define	K1DAN  		0x66
#define	K1DAN_MEI	0x67
#define	KAHEN		0x68
#define	SAHEN		0x69
#define	ZAHEN		0x6b
#define	SAHEN_SURU	0x6d

/*
 *	Jiritugo Setuzoku Bangou
 */
#define	C_OK		255

/*
 *	Kakari Code
 */
#define	C1_RENTAISI	0    /* 0 0x80 */
#define	C1_JHOSUU	1    /* 0 0x40 */
#define	C1_SUUSHI	2    /* 0 0x20 */
#define	C1_SETMEI	3    /* 0 0x10 */
#define	C1_SETSA 	4    /* 0 0x08 */
#define	C1_SETDO 	5    /* 0 0x04 */
#define	C1_SETKY 	6    /* 0 0x02 */
#define	C1_SETCHI	7    /* 0 0x01 */
#define	C1_SETJIN	8    /* 1 0x80 */
#define	C1_SET_O 	9    /* 1 0x40 */
#define	C1_SET_GO	10   /* 1 0x20 */
#define	C1_SETUBI	11   /* 1 0x10 */
#define	C1_CHIMEI	13   /* 1 0x04 */
#define	C1_SEI  	14   /* 1 0x02 */
#define	C1_NAMAE   	15   /* 1 0x01 */

#define	C1_KANSUU_O	16   /* 2 0x80 */
#define	C1_KANSUU_D	17   /* 2 0x40 */
#define	C1_KANSUU_S	18   /* 2 0x20 */
#define	C1_MEISHIF	19   /* 2 0x10 */
#define	C1_MEISHI2	20   /* 2 0x08 */
#define	C1_DOU_YOU	21   /* 2 0x04 */
#define	C1_RENYOU	22   /* 2 0x02 */
#define	C1_RENTAI	23   /* 2 0x01 */

#define	C1_MEISHI_NFZK	24   /* 3 0x80 */
#define	C1_KUTEN		25   /* 3 0x40 */
#define	C1_KEIYOU		26   /* 3 0x20 */
#define	C1_KEIDOU		27   /* 3 0x10 */
#define	C1_DOUSHI		28   /* 3 0x08 */
#define	C1_FUKUSHI		29   /* 3 0x04 */
#define	C1_MEISHI		30   /* 3 0x02 */


#define	C1P_DOU_YOU		0x04     /* hflg[2] */
#define	C1P_RENYOU		0x02     /* hflg[2] */
#define	C1P_MEISHI_NFZK	0x80     /* hflg[3] */
#define	C1P_KUTEN		0x40     /* hflg[3] */
#define	C1P_KEIYOU		0x20     /* hflg[3] */
#define	C1P_KEIDOU		0x10     /* hflg[3] */
#define	C1P_DOUSHI		0x08     /* hflg[3] */
#define	C1P_FUKUSHI		0x04     /* hflg[3] */
#define	C1P_MEISHI		0x02     /* hflg[3] */
#define	C1P_GAKU		0x01     /* hflg[3] */

/*
 *	Uke Code
 */
#define	C2_JHOSUU	0x80 + 0
#define	C2_SUUSHI	0x80 + 1
#define	C2_SETTOU	0x80 + 2
#define	C2_SEBJIN	0x80 + 3
#define	C2_SEBMEI	0x80 + 4
#define	C2_SEBSA 	0x80 + 5
#define	C2_SEBCHI	0x80 + 6
#define	C2_SEBDO 	0x80 + 7
#define	C2_SMEISHI 	0x80 + 8
#define	C2_CHIMEI 	0x80 + 9
#define	C2_SEI		0x80 + 10
#define	C2_NAMAE 	0x80 + 11
#define	C2_KOYUU  	0x80 + 12
#define	C2_MEISHI	0x80 + 13
#define	C2_KEIYOU	0x80 + 14
#define	C2_KY_O		0x80 + 15
#define	C2_KD_O		0x80 + 16
#define	C2_KD_GO	0x80 + 17
#define	C2_KD		0x80 + 18
#define	C2_DOUSHI	0x80 + 19
#define	C2_MEISHI2	0x80 + 20
#define	C2_SUU_JHO	0x80 + 21
#define	C2_FUKUSHI	0x80 + 22

/*
 *	Naibu Hinsi Group Number
 */
#define	GRP_KANJI		0
#define	GRP_SETTOU		1	/* Recerve */
#define	GRP_SETUBI		2
#define	GRP_MEISHI		3

/*
 *	Naibu Hinsi Number
 */
#define	I_MEISHI		1	/* Hinshi_flg Meishi */
#define	I_KEIYOU		2	/* Hinshi_flg Keiyoushi */
#define	I_KEIDOU		3	/* Hinshi_flg Keiyoudoushi */
#define	I_1DAN			4	/* Hinshi_flg Kamiichi,shimoichi */
#define	I_GODAN_K		5	/* Hinshi_flg Godan kagyou */
#define	I_GODAN_G		6	/* Hinshi_flg Godan Gagyou */
#define	I_GODAN_S		7	/* Hinshi_flg Godan Sagyou */
#define	I_GODAN_T		8	/* TA RA WA A gyou */
#define	I_GODAN_N		9	/* NA BA MA gyou */
#define	I_KAHEN			10	/* Hinshi_flg Kahen */
#define	I_SAHEN			11	/* Hinshi_flg Sahen */
#define	I_ZAHEN			12	/* Hinshi_flg Zahen */
#define	I_RA_TOKU		13	/* Hinshi_flg Ragyou Tokushu */
#define	I_FUKUSHI   		14	/* Hinshi_flg Tokushu Keiyoudoushi */
#define	I_NSAHEN  		15	/* Hinshi_flg Meishi + Suru */
#define	I_KD_TARI		16 	/* Hinshi_flg Keiyoudoushi */

/*
 *	Gobi Katuyou Bangou
 */
#define	G_KEIYOU	1
#define	G_KEIYOU2	2
#define	G_KD_TARI	3
#define	G_KEIDOU	4
#define	G_FUKUSHI	5
#define	G_NSAHEN	6
#define	G_GODAN_G	7
#define	G_GODAN_K	8
#define	G_GODAN_S	9
#define	G_GODAN_T	10
#define	G_GODAN_N	11
#define	G_GODAN_M	12
#define	G_GODAN_R	13
#define	G_GODAN_W	14
#define	G_GODAN_B	15
#define	G_1DAN  	16
#define	G_SAHEN 	17
#define	G_ZAHEN 	18
#define	G_KAHEN 	19
#define	G_YODAN_H	20

/*
 *	Katuyou Kata Number (MAX 64)
 */                             /*5DAN ADJ   KD    SA   ZA MASU */
#define	MIZENKEI	(1  + 0x80) /*     KARO  DARO  SI   ZI MASE */
#define	RENYOUKEI	(2  + 0x80) /*     KU    DE    SI           */
#define	SHUUSHIKEI	(3  + 0x80) /*     I     DA    SURU         */
#define	RENTAIKEI	(4  + 0x80) /*     I     NA    SURU         */
#define	KATEIKEI	(5  + 0x80) /*     KERE  NARA  SURE         */
#define ZZZZZZ	(6  + 0x80)
#define	TAIGEN		(7  + 0x80)
#define	GOKAN		(8  + 0x80)
#define	HENKEI1		(9  + 0x80) /* I   KAXTU DAXTU SE   ZE      */
#define	HENKEI2		(10 + 0x80) /* N   XYUU  NI                 */
#define	HENKEI3		(11 + 0x80) /* XTU                          */
#define	YOU_SHUU	(12 + 0x80)
#define	SHUU_GO		(13 + 0x80)
#define	MIZENKEI2	(14 + 0x80) /* KO              SA         */
#define	YOU_HEN2	(15 + 0x80)
#define	SELF_GEN	(16 + 0x80)
#define	MI_YOU		(17 + 0x80)
#define	MI_KATEI	(18 + 0x80)
#define	MI_MEI		(19 + 0x80)
#define	YOU_KATEI	(20 + 0x80)
#define	YOU_MEI		(21 + 0x80)
#define	YOU_HEN1	(22 + 0x80)
#define	TAI_HEN2	(23 + 0x80)
#define	YOU_HEN3	(24 + 0x80)
#define	YOU_GEN		(25 + 0x80)
#define	YOU_SHUU_KATEI	(26 + 0x80)
#define	SHUU_KATEI	(27 + 0x80)
#define	SHUU_MEI	(28 + 0x80)
#define	SHUU_TAI	(29 + 0x80)
#define	TAI_GO		(30 + 0x80)
#define	KATEI_MEI	(31 + 0x80)
#define	KATEI_HEN1	(32 + 0x80)
#define	KATEI_HEN3	(33 + 0x80)
#define	MEIREIKEI	(34 + 0x80) /*                SEYO/SIRO */
#define	KATEI_HEN2	(35 + 0x80)
#define	MI2_KATEI	(37 + 0x80)
#define	RENTAIKEI2	(38 + 0x80)
#define	RENTAI12	(39 + 0x80)
#define	SHUU_TAI2	(40 + 0x80)
#define	SHUU_HEN1	(41 + 0x80)
#define	SHUU_HEN2	(42 + 0x80)
#define	YOU_GO		(43 + 0x80)
#define	MI_SHUU		(44 + 0x80)
#define	O_YOU		(45 + 0x80)
#define	YOU_SHUU_TAI	(46 + 0x80)
#define	YOU_KA_HEN1		(47 + 0x80)
#define	O_YOU_MI		(48 + 0x80)
#define	YOU_HEN2_GO	(49 + 0x80)
#define	YOU_SHUU_GO	(50 + 0x80)

#define TEMP_SIZE               16                      /* temp size */
struct temp  {
                short   t_pnt;
                CARD_LINK cards;
                };
typedef struct temp     TEMP;

#define L_TEMP          sizeof(TEMP)    /* Length of a w_tmp */

struct htb_ent {
        UCHAR   kcbno;
        UCHAR   cnt;
        UCHAR   chg;
};
typedef struct htb_ent  HTB_ENT;

struct htb {
        HTB_ENT yomi[BUNL_MAX];
};
typedef struct htb      HTB;

