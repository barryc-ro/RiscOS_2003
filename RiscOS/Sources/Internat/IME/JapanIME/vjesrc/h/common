/*
**	Compact-VJE
**			common.h
*/
#if unix
#else
#pragma optimize("t", off)
#endif
#ifndef	EOF
#define	EOF			(-1)
#endif

#define CONST		 	const

#ifndef	NULL
#ifdef	MSDOS
#define	NULL			((char *)0)
#else
#define	NULL			0
#endif
#endif

#define	YES			1
#define	NO			0
#define	ON			YES
#define	OFF			NO
#define	OK			0
#define	ERR			(-1)
#define	PLUS			1
#define	ZERO			0
#define	MINUS		(-1)

#define	EOS			'\0'
#define	TAB			'\t'
#define	CR			'\r'
#define	LF			'\n'
#define	BS			'\b'
#define	ESC			0x1b
#define	DEL			'\177'
#define	BLANK		' '
#define	BELL			'\007'
#define	DAKUTEN		0xde
#define	HANDAKUTEN	0xdf
#define	HATSUON		0xdd

#define	toggle(flag)	((flag) = !(flag))
#define	swap(a, b)	{(a) ^= (b); (b) ^= (a); (a) ^= (a);}
#define	TAB_STEP		8
#define	TAB_STOP(n)	(TAB_STEP - (n) % TAB_STEP)
#define	INC(c, base)	((c) = (++(c) % (base)))
#define	DEC(c, base)	((c) = ((--(c) + (base)) % (base)))

/*
 *	Macros for length prefixed string
 */
#define	Length(s)	/*	(*((unsigned char *)(s))) */ (s[0])
#define	Addchar(s, c)	((s)[++Length(s)] = (c))
#define	Addchar2(s, c)	((s)[++(s)[0]] = (c))

#define	SP(p) 		((UCHAR)(*(p)) + (UCHAR)(*((p) + 1)) * 256)

#if (CHINA || TAIWAN) /* KATO */
#define vjekanji(c)     (0x80 <= ((c) & 0xff))
#else
#define	vjekanji(c)	(0x80 <= (UCHAR)(c) && (UCHAR)(c) <= 0x9f ||\
				 0xe0 <= (UCHAR)(c) && (UCHAR)(c) <= 0xfc)
#endif
#define	max(a,b)		(((a) > (b)) ? (a) : (b))
#define	min(a,b)		(((a) < (b)) ? (a) : (b))
#define	abs(a)		(((a) < 0) ? -(a) : (a))
#define	iscsymf(c)	(isalpha(c) || ((c) == '_'))
#define	iscsym(c)		(isalnum(c) || ((c) == '_'))

#ifdef	MSDOS
#define	Putch		putch
#define	Getch		getch
#else
#define	Putch		putchar
#define	Getch		getchar
#endif

#ifdef	MSDOS
#define	O_R			"rb"
#define	O_W			"w+b"
#define	O_RW			"r+b"
#else
#define	O_R			"r"
#define	O_W			"w+"
#define	O_RW			"r+"
#endif

#ifdef  MSDOS
#define	FAR	far
#else
#define        FAR	
#define        far 	
#endif
typedef	unsigned char	BUFF;
typedef	unsigned short	FLAG;
typedef	unsigned char	UCHAR;
typedef	const unsigned char	CUCHAR;
typedef unsigned short	USHORT;
typedef unsigned long	ULONG;
#define	public	
#define	global	
#define FTYPE	

#if unix
typedef UCHAR *PSZ;
typedef UCHAR *PCH;
#else
typedef UCHAR far *PSZ;
typedef UCHAR far *PCH;
#endif

#ifdef	MSDOS
#define	REG1
#define	REG2
#define	REG3
#define	REG4
#else
#if unix
#define	REG1	
#define	REG2	
#define	REG3	
#define	REG4	
#else
#define	REG1			register
#define	REG2			register
#define	REG3			register
#define	REG4			register
#endif
#endif

