/*
**	Compact-VJE
**
**			henkan1.c
*/
#include	<stdio.h>

#include	"common.h"
#include	"vje.h"
#include	"vjelib.h"
#include	"fuzoku.h"
#include	"vfncdef.h"

extern short	vje_flag;
extern UCHAR	stg, jimax;
extern UCHAR	eva_cnt, eva_cnt2;
extern short	curbunno;
extern BUFF	hira_buf_Q[];
extern BUFF	yomi_buf_Q[], cur_yomi_Q[];
extern DIC_INF	*dicinf;

extern UCHAR	conv_mode;
extern short	enb_atr;
extern KH_LINK	koho1[];

#if !TANKANJI_CNV
/*
 *	Chikuji jidou henkann shori
 *		          inbuf :   shift jis hiragana
 *		            mode : bit0  henshushori ga atta
 *		                 : bit1  kyousei henkan
 *		<exit>       =  1:  end normally
 *		             =  0:  resource fusoku retry fuka
 *		               -1:  retry site imi no aru mono
 *		               -2:  bunsetu suu over
 */
global short	henkanb(inbuf, mode, cnvted)
short	mode, cnvted;
BUFF	far *inbuf;
{
	BUFF	tmp_buf[NUM_CHAR * 2 + 1];
	REG1 short	i;
	REG2 short	j;
	REG3	short	same;
	REG4 short	len;
	UCHAR	oldstg;

#ifdef	USER_DIC
	if (open_flg != 0x03)
#else
	if (dicinf->open_flg == 0)
#endif
		return (-1);
	else if (stg == 255)
		return(0);
	conv_mode = (UCHAR)mode;
	if ((conv_mode & (H_EDIT|H_STR_EDIT)) == 0 && (i = Length(inbuf) - Length(hira_buf_Q)) >= 0) {
		if (i != 0) {
			same = Length(hira_buf_Q) + 1;
			j = 0;
			for (i = same; (UCHAR)i <= Length(inbuf); i++) {
				++j;
				tmp_buf[j] = hira_buf_Q[i] = inbuf[i];
			}
			Length(tmp_buf) = (UCHAR)j;
			Length(hira_buf_Q) = Length(inbuf);
			i = Length(yomi_buf_Q);
			conv_mode |= hira_yomi(tmp_buf, yomi_buf_Q);
			j = Length(yomi_buf_Q) - i;
			copylng(&yomi_buf_Q[i + 1], &cur_yomi_Q[Length(cur_yomi_Q) + 1], j);
			Length(cur_yomi_Q) += j;
		}
	}
	else {
		if (editbuf(inbuf, cnvted) == 0)
			return (1);
	}
	if (curbunno >= BUN_MAX - 1)
		return (-2);
	if (Length(cur_yomi_Q) < 6 && (conv_mode & H_CNV) == 0)
		return (1);
	for (;;) {
		oldstg = stg;
		switch (stg) {
		case 0 :
			enb_atr = ENB_SET | ENB_SEB;
			len = stg10();
			break;
		case 1 :
			len = stg11();
			break;
/*TANBUNSETU*/
#if TANBUN/*TANBUNSETU*/
		case 2 :
			vje_flag = jimax = eva_cnt = eva_cnt2 = 0;
			return (0);
#else/*RENBUN*/
		case 2 :
			enb_atr = ENB_SET|ENB_SEB;
			len = stg20();
			break;
		case 3 :
			len = stg21();
			break;
#endif/**/
		case 255:
			len = -1;
			break;
		}
		if (len <= -1) {
			if (len != -3)
				stg = 255;
			vje_flag = jimax = eva_cnt = eva_cnt2 = 0;
			return (len + 1);
		}
		if ((conv_mode & H_CNV) != 0) {
			if ((UCHAR)len < Length(cur_yomi_Q))
				continue;
			if ((conv_mode & H_CNV) != 0) {
				stg = Length(cur_yomi_Q) = 0;
				clrsub();
			}
		}
		if (stg != oldstg || (stg == 2 && (vje_flag & FND_MAX_JI))) {
			if (Length(cur_yomi_Q) == 0)
				break;
		}
		else
			break;
	}
	return (1);
	

}
#endif/*TANKANJI_CNV*/

#if !TANKANJI_CNV
/*
 *	buffer ga edit sareta
 *		ret: 0: moji ga nai
 */
/*static*/ short	FTYPE editbuf(inbuf, cnvted)
BUFF	far *inbuf;
short	cnvted;
{
	short	same, lim;
	KH_LINK	*ptrk;
	REG1 short	i;
	REG2 short	j;

	del_kcb_card(&koho1[curbunno]);
	if (stg >= 2)
		clreva();
	if (curbunno != 0) {
		if (conv_mode & H_EDIT && cnvted <= koho1[curbunno].yomipnt - 1) {
			if (Length(inbuf) <= 16) /* */
				j = 0;
			else {
				same = kstrcmp(inbuf, hira_buf_Q);
				j = get_bunno(same);
				j = min(j, curbunno);
				j = max(j, 0);
				if (j > 0)
					--j;
			}
			ptrk = get_act_koho(j);
			lim = ptrk->bunpnt;
			for (i = j; i <= curbunno; i++)
				del_pair_koho(i);
			curbunno = j;
			cnvted = 0;
		}
		else
			lim = koho1[curbunno].bunpnt;
	}
	else
		lim = 1;
	copykb(inbuf, hira_buf_Q);
	Length(yomi_buf_Q) = 0;
	conv_mode |= hira_yomi(hira_buf_Q, yomi_buf_Q);
	if (cnvted != 0) {
		same = get_bun_len(hira_buf_Q, 1, cnvted + 1);
		for (i = koho1[curbunno].bunpnt; i <= same; i++) {
			if (yomi_buf_Q[i] < _KUTOUTEN)
				yomi_buf_Q[i] = _KIGO;
		}
	}
	clrsub();
	stg = 0;
	j = Length(yomi_buf_Q) + 1 - lim;
	Length(cur_yomi_Q) = (UCHAR)j; /* */
	if (j != 0) {
		copylng(&yomi_buf_Q[lim], cur_yomi_Q + 1, j);
		return (1);
	}
	else
		return (0);
}
#endif/*TANKANJI_CNV*/

/*
 *	Hiragana-> jisho yomi code
 */
global short	FTYPE hira_yomi(hira, yomi)
UCHAR	far *hira;
UCHAR	far *yomi;
{
	UCHAR	c;
	UCHAR	c2;
	REG3 short	kigo;
	REG1 short	i;
	REG2 short	j;
#if (CHINA || TAIWAN)
	UCHAR	work[4], work2[3], work3[4];
#endif

#if CHINA 
        j = Length(yomi);
        for (i = 1; (UCHAR )i <= Length(hira); i++) {
                c = hira[i];
                c2 = hira[i + 1];
                if (vjekanji(c)) {
                        ++i;
                        if (c == 0xa3) {
/* eisuu de jisyo yomi*/
                                if (0xb0 <= c2 && c2 <= 0xb9){
                                        work[0] = c;
                                        work[1] = c2;
                                        work[2] = 0;
                                        CnvGB2312ToVje(work, work2);
                                        c = work2[1];
                                } else if ((0xc1 <= c2 && c2 <= 0xda) || (0xe1 <= c2 && c2 <= 0xfa)) {
                                        work[0] = c;
                                        work[1] = c2;
                                        work[2] = 0;
                                        CnvGB2312ToVje(work, work2);
                                        c = work2[1];
/* END eisuu de jisyo yomi*/                            }
                                else {
                                        c = _KIGO;
                                }
                        }
                        else
                                c = _KIGO;
                }
/* eisuu de jisyo yomi */
                else if ('0' <= c && c <= '9'){
                        work3[0] = 1;
                        work3[1] = c;
                        han_zen(work3, work);
                        work[ Length(work) + 1 ] = 0;
                        CnvGB2312ToVje(&work[1], work2);
                        c = work2[1];
                } else {
                        work3[0] = 1;
                        work3[1] = c;
                        han_zen(work3, work);
                        work[ Length(work) + 1 ] = 0;
                        CnvGB2312ToVje(&work[1], work2);
                        c = work2[1];
                }
/* END eisuu de jisyoyomi */
                yomi[++j] = c;
        }
        Length(yomi) = (UCHAR)j;
        return(0);

#elif TAIWAN 


        j = Length(yomi);
        for (i = 1; i <= (USHORT)Length(hira); i++) {
                c = hira[i];
                c2 = hira[i + 1];
                if (vjekanji(c)) {
                        ++i;
                        if (c == 0xa2) {
                                if (0xaf <= c2 && c2 <= 0xb8){   /* Big5 0-9 */
                                        work[0] = c;
                                        work[1] = c2;
                                        work[2] = 0;
                                        CnvBig5ToVje(work, work2);
                                        c = work2[1];
                                } else if ((0xcf <= c2 && c2 <= 0xe8) || (0xe9 <= c2 && c2 <= 0xfe)) {
					/* A-Z, a-v */
                                        work[0] = c;
                                        work[1] = c2;
                                        work[2] = 0;
                                        CnvBig5ToVje(work, work2);
                                        c = work2[1];
				}
                                else {
                                        c = _KIGO;
                                }
                        }
                        else if (c == 0xa3) {
                                if (0x40 <= c2 && c2 <= 0x43){   /* w-z */
					/* w-z */
                                        work[0] = c;
                                        work[1] = c2;
                                        work[2] = 0;
                                        CnvBig5ToVje(work, work2);
                                        c = work2[1];
				}
                                else {
                                        c = _KIGO;
                                }
			}
                        else
                                c = _KIGO;
                }
/* eisuu de jisyo yomi */
                else if ('0' <= c && c <= '9'){
                        work3[0] = 1;
                        work3[1] = c;
                        han_zen(work3, work);
                        work[ Length(work) + 1 ] = 0;
                        CnvBig5ToVje(&work[1], work2);
                        c = work2[1];
                } else {
                        work3[0] = 1;
                        work3[1] = c;
                        han_zen(work3, work);
                        work[ Length(work) + 1 ] = 0;
                        CnvBig5ToVje(&work[1], work2);
                        c = work2[1];
                }
/* END eisuu de jisyoyomi */
                yomi[++j] = c;
        }
        Length(yomi) = (UCHAR)j;

        return(0);


#else 

	j = Length(yomi);
	for (i = 1; (UCHAR)i <= Length(hira); i++) {
		c = hira[i];
		c2 = hira[i + 1];
		if (0x80 < c && c < 0xa0 || 0xe0 <= c && c < 0xfd) {
			++i;
			if (c == 0x81) {
				if ((c2 >= 0x41 && c2 <= 0x44) || c2 == 0x48 || c2 == 0x49)
					c = _KUTOUTEN;
				else if (c2 == 0x5b || c2 == 0x5c)
					c = _TYOUON;
				else
					c = _KIGO;
			}
			else if (c == 0x82) {
				if (0x4f <= c2 && c2 <= 0x58) {
#if	YUUBIN
{					char	zen_work[3];
					char	vjeyomi[3];
					zen_work[0] = 2;
					zen_work[1] = c;
					zen_work[2] = c2;
					zen_han(zen_work,vjeyomi);
					c = (UCHAR)(vjeyomi[1] + 0x80);
}
#else
					c = _SUUJI;
#endif
				} else if (0x9f <= c2 && c2 <= 0xf1)
					c = (UCHAR)(c2 - 0x9d);
				else
					c = _KIGO;
			}
			else if (c == 0x83 && c2 == 0x94)
				c = 0x55;
			else
				c = _KIGO;
		}
		else if ('0' <= c && c <= '9') {
#if	YUUBIN
			c = (UCHAR)(c + 0x80);
#else
			c = _HAN_SUUJI;
#endif
		} else
			c = _HANKAKU;
		yomi[++j] = c;
		if (c == _KUTOUTEN)
			kigo = H_CNV;
		else
			kigo = 0;
	}
	Length(yomi) = (UCHAR)j;
	if (j >= 2)
		return (kigo);
	else
		return(0);
#endif /* CHINA , TAIWAN */
}


/*
 *	Jisho yomi code = > hiragana
 */
global void	FTYPE yomi_hira(buf1, buf2)
BUFF	far *buf1;
BUFF	far *buf2;
{
	UCHAR	tmp1[2], tmp2[3];
	REG1 short	i;
	UCHAR	c;

#if CHINA || TAIWAN /* KATO */
        Length(buf2) = 0;
        for (i = 1; (UCHAR )i <= Length(buf1); i++) {
                c = buf1[i];
                if (c > _HAN_SUUJI) {
                        tmp1[0] = 1;
                        tmp1[1] = (UCHAR)(c - 0x80);
                        (void)han_zen(tmp1, tmp2);
                }
                addc2(buf2, &tmp2[1]);
        }

#else /* CHINA,TAIWAN */

	Length(buf2) = 0;
	for (i = 1; (UCHAR)i <= Length(buf1); i++) {
		c = buf1[i];
		if (c <= __N) {
			tmp2[1] = 0x82;
			tmp2[2] = (UCHAR)(c + 0x9d);
		}
		else if (c == _VU) {
			tmp2[1] = 0x83;
			tmp2[2] = 0x94;
		}
		else if (c == _TYOUON) {
			tmp2[1] = 0x81;
			tmp2[2] = 0x5b;
		}
		else {
			tmp1[0] = 1;
			tmp1[1] = (UCHAR)(c - 0x80);
			(void)han_zen(tmp1, tmp2);
		}
		addc2(buf2, &tmp2[1]);
	}
#endif /* CHINA,TAIWAN */
}

/*
 *      GB2312 yomi code - VJE yomi code conversion
 *      <entry> yomi    : yomi(GB2312) area
 *                     Null terminate string
 *              vjeyomi : vje no yomi code area
 *                Null terminate string with byte count
 *      <exit>  return code = 0 : normal return
 *                          = 2 : yomi code length error
 *                          = 3 : vje yomi code error
 */
#if CHINA
global short    CnvGB2312ToVje(yomi, vjeyomi)
UCHAR       yomi[];
UCHAR       vjeyomi[];
{

        UCHAR   zen_work[3], c1, c2; 
        REG1 short      i; 
        REG2 short      j;
        zen_work[0] = 2;

/* China version Kigou & Suuji & A ~ Z & a ~ z code */ 
        for (i = 0, j = 1;(c1 =  yomi[i]) != 0; i += 2, j++) {
                if (i > L_YOMI * 2)            /* length error */
                        return(2);
                c2 = yomi[i + 1];
                /* Kigou & Suuji & A ~ Z & a ~ z code */
                if ( (c1 == 0xa3 && 0xb0 <= c2 && c2 <= 0xb9) ||
                     (c1 == 0xa3 && 0xc1 <= c2 && c2 <= 0xda) ||
                     (c1 == 0xa3 && 0xe1 <= c2 && c2 <= 0xfa) ) {
                                 /* a3b0-a3b9, a3c1-a3da, a3e1-a3fa */
                        zen_work[1] = c1;
                        zen_work[2] = c2;
                        if (zen_han(zen_work, &vjeyomi[j]) == 0) {      /*zenkaku-hankaku convert */
                                c1 = vjeyomi[j + 1];
                                if((0x41 <= c1) && (c1 <= 0x5a))
                                        vjeyomi[j] = c1 + (UCHAR )0xa0;
                                else
                                        vjeyomi[j] = c1 + (UCHAR )0x80;
                        }
                        else
                                return(3);
                }
                else
                        return (3);
        }
        Length(vjeyomi) = (UCHAR) (j - 1);
        vjeyomi[j] = 0;
        return (0);
}
#endif /* CHINA */
/*
 *      VJE yomi code - GB2312 yomi code conversion
 *      <entry> vjeyomi : vje no yomi code area
 *                    Null terminate string with byte count
 *              yomi    : yomi(GB2312) area
 *                Null terminate string
 *      <exit>  return code == 0 : error return
 *                          != 0 : GB2312 yomi code suu
 */
#if CHINA
global short    CnvVjeToGB2312(vjeyomi, yomi)
UCHAR       yomi[];
UCHAR       vjeyomi[];
{
        UCHAR work[3], c1[2];
        REG1 short i;
        REG2 short j;
        for (i = 1, j = 0;(UCHAR) i <= Length(vjeyomi); i++,j += 2){
            switch (vjeyomi[i]){

                case 0x00:
                case 0x01:
                case 0xff:
                    return (0);                 /* code error */
                    break;

                default:
                    if (vjeyomi[i] <= 0x9f)
                        return (0);
                    else if (vjeyomi[i] <= 0xfe){
                        c1[0] = 1;
                        c1[1] = vjeyomi[i] - (UCHAR )0x80;
                        han_zen (c1,work);
                        yomi[j] = work[1];
                        yomi[j+1] = work[2];
                    }
                    else
                        return (0);
                    break;
            }
        }
        yomi[j] = 0;
        return (j-1);
}
#endif /* CHINA */
 

/*
 *      BIG5 yomi code - VJE yomi code conversion
 *      <entry> yomi    : yomi(BIG5) area
 *                     Null terminate string
 *              vjeyomi : vje no yomi code area
 *                Null terminate string with byte count
 *      <exit>  return code = 0 : normal return
 *                          = 2 : yomi code length error
 *                          = 3 : vje yomi code error
 */
#if TAIWAN
global short    CnvBig5ToVje(yomi, vjeyomi)
UCHAR       yomi[];
UCHAR       vjeyomi[];
{

        UCHAR   zen_work[3], c1, c2; 
        REG1 short      i; 
        REG2 short      j;
        zen_work[0] = 2;

/* China version Kigou & Suuji & A ~ Z & a ~ z code */ 
        for (i = 0, j = 1;(c1 =  yomi[i]) != 0; i += 2, j++) {
                if (i > L_YOMI * 2)            /* length error */
                        return(2);
                c2 = yomi[i + 1];
                /* Kigou & Suuji & A ~ Z & a ~ z code */
                if ( (c1 == 0xa2 && 0xaf <= c2 && c2 <= 0xb8) ||
                     (c1 == 0xa2 && 0xcf <= c2 && c2 <= 0xe8) ||
                     (c1 == 0xa2 && 0xe9 <= c2 && c2 <= 0xfe) ||
                     (c1 == 0xa3 && 0x40 <= c2 && c2 <= 0x43) ) {
                        zen_work[1] = c1;
                        zen_work[2] = c2;
                        if (zen_han(zen_work, &vjeyomi[j]) == 0) {      /*zenkaku-hankaku convert */
                                c1 = vjeyomi[j + 1];
                                if((0x41 <= c1) && (c1 <= 0x5a)) /* A->a, a->a */
                                        vjeyomi[j] = c1 + 0xa0;
                                else
                                        vjeyomi[j] = c1 + 0x80;
                        }
                        else
                                return(3);
                }
                else
                        return (3);
        }
        Length(vjeyomi) = (UCHAR) (j - 1);
        vjeyomi[j] = 0;
        return (0);
}
#endif /* TAIWAN */
/*
 *      VJE yomi code - BIG5 yomi code conversion
 *      <entry> vjeyomi : vje no yomi code area
 *                    Null terminate string with byte count
 *              yomi    : yomi(BIG5) area
 *                Null terminate string
 *      <exit>  return code == 0 : error return
 *                          != 0 : BIG5 yomi code suu
 */
#if TAIWAN
global short    CnvVjeToBig5(vjeyomi, yomi)
UCHAR       yomi[];
UCHAR       vjeyomi[];
{
        UCHAR work[3], c1[2];
        REG1 short i;
        REG2 short j;
        for (i = 1, j = 0;(UCHAR) i <= Length(vjeyomi); i++,j += 2){
            switch (vjeyomi[i]){

                case 0x00:
                case 0x01:
                case 0xff:
                    return (0);                 /* code error */
                    break;

                default:
                    if (vjeyomi[i] <= 0x9f)
                        return (0);
                    else if (vjeyomi[i] <= 0xfe){
                        c1[0] = 1;
                        c1[1] = vjeyomi[i] - 0x80;
                        han_zen (c1,work);
                        yomi[j] = work[1];
                        yomi[j+1] = work[2];
                    }
                    else
                        return (0);
                    break;
            }
        }
        yomi[j] = 0;
        return (j-1);
}
#endif /* TAIWAN */
 
