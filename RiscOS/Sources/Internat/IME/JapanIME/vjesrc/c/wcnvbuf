/*
**
**			wcnvbuf.c
**
*/

#include	"common.h"
#include	"vje.h"
#include	"wvje.h"
#include	"basicedt.h"
#include	"vjestr.h"
#include	"wfncdef.h"
#include	"vfncdef.h"

extern BUFF	key_buf_Q[];
extern BUFF	kihon_buf_Q[], kihon_atr_Q[];
extern USHORT	key_pos, key_cnv;
extern USHORT	kihon_max, kihon_pos, kihon_cnv;
extern UCHAR	uKutoutenConversion;

#if	!NOSAIHEN

static void  FTYPE   chk_cnv_code(unsigned char  far *cnv_code_buf);

/*
 *
 *     Convert 1.byte code to KANA (1.BYTE or 2.BYTE)
 *
 *     Calling sequence
 *
 *       rc = cnv_code(mode)
 *
 *        (i)    mode ......... VJEmode
 *
 */
global void	FTYPE 	cnv_code(mode, bdata)
short	mode;		/* VJEmode */
PBD	bdata;
{
 	UCHAR	chk_buf[NUM_CHAR * 2 + 1];	/* cover check buffer */
 	UCHAR	before1, before2;		/* before charcter */
 	UCHAR	half_buf[5];			/* input data buffer */
 	UCHAR	work[9];				/* work for convert */
 	UCHAR	cnv_buf[9];			/* convert data buffer */
 	UCHAR	cnv_atr[9];			/* conver data attribute */
 	UCHAR	save_buf[NUM_CHAR * 2 + 1];	/* save area */
 	UCHAR	save_atr[NUM_CHAR * 2 + 1];	/* atributte save area */
	short	j;
	short	nnfl;
	USHORT	sp, ep, kp;
	USHORT	i;
	short	rc;

	if (kihon_cnv >= kihon_pos)
		return;
	i = 0;
	if ((kihon_atr_Q[kihon_cnv + 1] & M_ROMA_CNT) == 0)
		(void)chk_blk(kihon_cnv);
	if (((kihon_atr_Q[kihon_pos + 1] & M_ROMA_CNT) == 0)
	     && (kihon_pos < Length(kihon_buf_Q))) {
		(void)chk_blk(kihon_pos);
	}
	if ((mode & ZENKAKU_BIT) == 0) {
		j = NONROMAN_BIT;
		for (i = kihon_cnv; i < kihon_pos; i++)
			j &= (kihon_atr_Q[i + 1] & NONROMAN_BIT);
		mode |= j;
	}
	chk_cnv_code(chk_buf);
	mode &= ~(M_ZEN_HAN | M_ROMA_CNT);
	ep = sp = key_cnv;
	kp = kihon_cnv;
	/* save input buffer  */
	for (i = 0; i <= Length(kihon_buf_Q); i++) {
		save_buf[i] = kihon_buf_Q[i];
		save_atr[i] = kihon_atr_Q[i];
	}
	/* start */
	before1 = before2 = 0;
	nnfl    = 0;
	while (sp < key_pos) {
		for (i = 0; i <= (ep - sp); i++)
			half_buf[i + 1] = key_buf_Q[sp + i + 1];
		Length(half_buf) = (UCHAR)(ep - sp + 1);
		rc = 1;
		if ((mode & NONROMAN_BIT) != 0)
			goto next;
		for (i = 0, j = 0; i <= sp; j++)
			i += (save_atr[j + 1] & M_ROMA_CNT);
#if !(CHINA || TAIWAN)
		if ((save_atr[j] & M_ROMA_CNT) == C_ROMA_1) {
			i = -1;
			if ((save_atr[j] & ZENKAKU_BIT) != 0) {
				if ((save_buf[j] == 0x82 && save_buf[j + 1] == 0xf1)
				     || (save_buf[j] == 0x83 && save_buf[j + 1] == 0x93))
					i = 0;
			}
			else {
				if (save_buf[j] == (UCHAR)HATSUON)
					i = 0;
			}
			if (i == 0) {
				half_buf[1] = HATSUON;
				goto next;
			}
		}
#endif /* CHINA || TAIWAN */
		if (chk_buf[j] != 0)
			goto next;		/* not convert */
#if !(CHINA || TAIWAN)
		if (chk_boin(half_buf[Length(half_buf)]) == YES ||
		    nnfl != 0 && ((key_buf_Q[ep + 1] & 0xdf) == 'N' || chk_shin(key_buf_Q[ep + 1]) == NO)) {
			nnfl = 0;
			/* convert */
			rc = han_kata(half_buf, work, 1);
			before1 = work[1];
			before2 = work[2];
			if (before2 == 0x93 &&
			    (half_buf[2] & 0xdf) != 'N'&& half_buf[2] != 0x27 && chk_boin(half_buf[2]) == NO)
				nnfl = (ep - sp);
			if ((mode & KANA_BIT) != 0) {	/* Katakana mode */
				if ((mode & ZENKAKU_BIT) ==  0 && rc == 0) {
					rc = zen_han(work, half_buf);
					for (i = 0; i <= Length(work); i++) {
						cnv_buf[i] = half_buf[i];
						cnv_atr[i] = (UCHAR)(mode | F_HANK);
					}
				}
				else {
					for (i = 0; i <= Length(work); i++)
						cnv_buf[i] = work[i];
				}
			}
			else {				/* Hiragna mode */
				if (rc == 0)
					kata_hira(work, cnv_buf);
			}
			if (rc == 0) {
				if ((mode & ZENKAKU_BIT) != 0) {
					for (i = 1; i <= Length(cnv_buf); i++) {
						if ((i & 0x01) != 0)
							cnv_atr[i] = (UCHAR)(mode | F_ZEN_L);
						else
							cnv_atr[i] = (UCHAR)(mode | F_ZEN_R);
					}
					cnv_atr[3] |= nnfl;
				}
				else
					cnv_atr[2] |= nnfl;
				i = ep - sp + 1 - nnfl;
				cnv_atr[1] |= i;
				nnfl = 0;
			}
		}
#endif /* CHINA || TAIWAN */
		/* check result */
		if (rc != 0) { /* Not convert */
			ep++;
#if !(CHINA || TAIWAN)
			if ((key_buf_Q[ep] & 0xdf) ==  'N')
				nnfl = 1;
			else
				nnfl = 0;
#endif 
			if (ep - sp >= 4 || ep >= key_pos
			     || chk_shin(half_buf[Length(half_buf)]) == NO) {
next:
				if ((mode & ZENKAKU_BIT) != 0) {
#if !(CHINA || TAIWAN)
					if (before1 == 0x83 && before2 != 0) {
						i = chkdak(before2, half_buf[1]);
						if (i != 0) {
							if (i != V_TYP)
								kihon_buf_Q[kp] += (UCHAR)i;
							else {
								kihon_buf_Q[kp] = 0x94;
								kihon_buf_Q[kp - 1] = 0x83;
							}
							kihon_atr_Q[kp]++;
							before2 = 0;
							sp++;
							goto next2;
						}
					}
#endif
					i = 0;
					if ( ( uKutoutenConversion
					                      == 1 ) &&
					     ((bdata->wVjeModeFlag &
					       ZENKAKU_BIT ) == 0 ) &&
					     ((mode                &
					       NONROMAN_BIT) == 0 )  )
						i = 1;	/* ,.- -> kutouten */
#if CHINA
					(void)Jisgb(half_buf[1], cnv_buf, i);
#elif TAIWAN
					(void)Jisbig5(half_buf[1], cnv_buf, i);
#else
					(void)jissj(half_buf[1], cnv_buf, i);
#endif
					before1 = cnv_buf[1];
					before2 = cnv_buf[2];
					if ((mode & KANA_BIT) == 0) {
						Length(cnv_buf) = 2;
						kata_hira(cnv_buf, work);
						for (i = 1; i <= Length(cnv_buf); i++)
							cnv_buf[i] = work[i];
					}
					if ((kihon_max - 1) <= kp)
						goto err_ret;
					kihon_buf_Q[++kp] = cnv_buf[1];
					kihon_atr_Q[kp]   = (UCHAR)(mode | C_ROMA_1 | F_ZEN_L);
					kihon_buf_Q[++kp] = cnv_buf[2];
					kihon_atr_Q[kp]   = (UCHAR)(mode | F_ZEN_R);
					sp++;
				}
				else {
					if (kihon_max <= kp)
						goto err_ret;
					kihon_buf_Q[++kp]  = half_buf[1];
					kihon_atr_Q[kp]    = (UCHAR)(mode | C_ROMA_1 | F_HANK);
					sp++;
				}
#if !(CHINA || TAIWAN)
next2:
#endif
				ep = sp;
			}
			if (ep > key_pos) {
				ep = ++sp;
			}
		}
		if (rc == 0) {		/* convert */
			for (i = 0; i < Length(cnv_buf); i++) {
				if (kihon_max <= (kp + i))
					goto err_ret;
				kihon_buf_Q[kp + i + 1] = cnv_buf[i + 1];
				kihon_atr_Q[kp + i + 1] = cnv_atr[i + 1];
			}
			sp = ++ep;
			kp += Length(cnv_buf);
		}
	}
	/* Restore buffer */
	if (((Length(kihon_buf_Q) - (UCHAR)kihon_pos) + (UCHAR)kp) > (UCHAR)kihon_max)
		goto err_ret;
	ep = kp;		/* save kp */
	for (i = kihon_pos; i < Length(kihon_buf_Q); i++) {
		kihon_buf_Q[++kp] = save_buf[i + 1];
		kihon_atr_Q[kp] = save_atr[i + 1];
	}
	kihon_pos = ep;
	Length(kihon_buf_Q) = Length(kihon_atr_Q) = (UCHAR)kp;

#if !(CHINA || TAIWAN)
	if ((mode & NONROMAN_BIT) == 0)
		cnv_nn();
#endif
	return;
err_ret:
	for (i = 0; i <= Length(save_buf); i++) {
		kihon_buf_Q[i] = save_buf[i];
		kihon_atr_Q[i] = save_atr[i];
	}
}


/*
 *	Check all hira kana or eisuu
 */
static void	FTYPE chk_cnv_code(cnv_code_buf)
UCHAR	far *cnv_code_buf;
{
	short	ptr;
	UCHAR	code1, code2;
	UCHAR	attr;
	USHORT	i;
	short	j;

	for (i = 0; i < NUM_CHAR * 2; i++)
		cnv_code_buf[i] = 0;
	ptr = j = 0;
	for (i = kihon_cnv; i < kihon_pos; i++) {
		code1 = kihon_buf_Q[i + 1];
		code2 = kihon_buf_Q[i + 2];
		attr = kihon_atr_Q[i + 1];
		ptr++;
		if ((attr & ZENKAKU_BIT) != 0) {
			i++;
			if ((code1 != 0x82 || code2 < 0x9f || code2 > 0xfc) &&
			    (code1 != 0x83 || code2 < 0x40 || code2 > 0x9e)) {
				j++;
				cnv_code_buf[i] = code1;
				cnv_code_buf[i + 1] = code2;
			}
		}
		else {
			if (code1 < 0xa6 || code1 > 0xdd || code1 == 0xb0) {
				j++;
				cnv_code_buf[i + 1] = code1;
			}
		}
	}
	if (ptr == j) {
		for (i = 0; i < NUM_CHAR * 2; i++)
			cnv_code_buf[i] = 0;
	}
}

#endif/*NOSAIHEN*/

