/* 
**	Compact-VJE
**
**			bonpou53.c
*/

#include	"common.h"
#include	"vje.h"
#include	"vjelib.h"
#include	"fuzoku.h"
#include	"vfncdef.h"

extern CONST short	kata_tb[];
extern CONST JITBL	jitb[];
extern UCHAR	*g_ent[];
extern UCHAR	*fzk_ent[];
extern UCHAR	*vstb_p[];
extern UCHAR	*fstb_p[];


/*
 *	Gobi kakutoku shori
 *	Input
 *		h.ptr        Refer
 *		h.kubun      Refer
 *		h.hinshi     Refer
 *		h.kata_no    Refer
 *		h.kata       Refer
 *		Output
 *		hgf
 *		ret_inf -2   Illegal end
 *		        -1   Error (gobi nashi)
 *		         0   Gobi nashi (fuzokugo shori kanou)
 *		         1   Gobi ari
 *		         2   GOKAN_IIKIRI
 */

/*
 *	7 Fuzokugo kinshi
 *	6 Gokan taigen (sahen meishi)
 *	5 Gokan mizenkei renyoukei (1dan katuyou)
 *	4 Gokan rentaikei (onaji)
 *	3 Gokankei (keiyoushi / keiyou doushi)
 *	2 Gokan nomi de jiritugo tonaru
 *	1 Gokan iikiri kanou
 *	0 Renyoukei ga taigen ni naru
 */
global short FTYPE srcgobi(hinshi, yomi, o_flag, h, hgf, max_f)
BUFF	far *yomi;
short	hinshi;
UCHAR	o_flag;
HNS_BLK	far *h;
HNS_GRPF far	*hgf;
UCHAR far	*max_f;
{
	REG2 UCHAR	*sp;
	REG1 short	i;
	UCHAR	sch, ech, ch;
	short	ret_inf, mask, flg;
	USHORT	hg_cnt;
	HNS_BLK	far *ptrh;

	ret_inf = -1;
	mask = 0;
	hg_cnt = hgf->cnt;
	flg = jitb[hinshi].gobi_flg;
	sp = g_ent[jitb[hinshi].gobi_no - 1];
	if (hinshi == KAHEN || hinshi == SAHEN_SURU) {
		if (hinshi == KAHEN) {
			i = h->ptr - 1;
			sch = _KI;
			ech = _KO;
		}
		else {
			i = h->ptr - 1;
			if (i > 2 && yomi[i] == _SI && yomi[i-1] == _BE && yomi[i-2] == _SU)
				i -= 2;
			sch = _SA;
			ech = _SE;
		}
		while (i > 0) {
			if ((ch = yomi[i]) >= sch && ch <= ech)
				break;
			--i;
		}
		h->ptr = i; /* 92/2/24 */
	}
	else if (jitb[hinshi].int_hin == I_KEIYOU) {
		if ((ch = yomi[h->ptr - 1]) == _SI || ch == _ZI || ch == _KI)
			mask = 0x80;
		else if (!(ch == _KA || ch == _SA || ch == _TA ||
		    ch == _NA || ch == _MA || ch == _YA || ch == _RA ||
		    ch == _WA))
				mask = 0x40; /* U */
			mask |= 0x20; /* SHI */
	}
	else if (hinshi == GODAN_W || hinshi == GODAN_WN ) {
		if (((ch = yomi[h->ptr - 1]) == _KO || ch == _TO) && h->ptr == 2)
			mask = 0x02; /* KOU TOU */
		else
			mask = 0x04;
	}
	i = h->ptr;
	if ((UCHAR)i > Length(yomi)) {
		*max_f = 0;
		if (flg & GOKAN_IIKIRI)
			ret_inf = 2;
		return (ret_inf);
	}
	while ((ch =(*sp)) != (UCHAR)0xff) {
		if ((UCHAR)i <= Length(yomi) && (yomi[i]) == ch) {
			++i;
			++sp;
			continue;
		}
		else {
			if (ch >= 0x80) { /* yomi totyuu de tb wo fukumu | yomi end de tb wo fukumu */
				if ((*(sp + 1) & (jitb[hinshi].gobi_grp | mask)) == 0)
					goto next;
				if ((UCHAR)i <= Length(yomi)) {
					if (chkomoji(yomi[i], SJI_G) > 0)
						goto next;
				}
				else {
					*max_f = 0;
					if (ch & ILEGAL_END) {
						ret_inf = -2;
						goto next;
					}
				}
				if (hg_cnt < hgf->hmax) {
					ptrh = &hgf->hib[hg_cnt];
					ptrh->ptr = i;
					ptrh->kubun = (UCHAR)((h->kubun & 0xbd) | (ch & F_ILEGAL_END));
					ptrh->hinshi = h->hinshi;
					ptrh->kata_no = (UCHAR)(ch & 0x7f); /* set ILEGAL_END */
					ptrh->kata = kata_tb[ch & 0x3f]; /* mask ILEGAL_END */
					if ((flg & RENYOU_TAIGEN) && (ptrh->kata & 0x0200))
						ptrh->kata |= 0x4000;
					if (o_flag && (ptrh->kata & 0x0200)) {
						ptrh->kata_no = O_YOU;
						ptrh->kata = kata_tb[O_YOU & 0x7f];
					}
					if ((ch = (UCHAR)(*(sp + 2))) >= 0x80 && ch != 0xff) {
						ptrh->kubun = (UCHAR)(ch & 0x7f);
						ptrh->hinshi = *(sp + 3);
					}
					++hg_cnt;
					ret_inf = 1;
				}
			}
			else { /* yomi totyuu de moji ga tigau | yomi end */
				if ((UCHAR)i > Length(yomi)) {
					*max_f = 0;
					if (ret_inf == -1)
						ret_inf = -2;
					break;
				}
				else {
					if (yomi[i] < ch)
						break;
				}
				while (*sp < 0x80)
					++sp;
			}
		}
next:
		sp += 2;
		if ((ch = (*sp)) >= (UCHAR)0x80 && ch != 0xff)
			sp += 2;
		i = h->ptr;
	}
	if (hg_cnt >= hgf->hmax /*|| ret_inf == -2*/) {
		hgf->cnt = hg_cnt;
		return (ret_inf);
	}
	ptrh = &hgf->hib[hg_cnt];
	if (flg & GOKAN_TAIGEN) {
		ptrh->ptr = h->ptr;
		ptrh->kubun = h->kubun;
		ptrh->hinshi = I_MEISHI;
		ptrh->kata = 0x4000;
		++hg_cnt;
		ret_inf = 0;
	}
	else if (flg & (GOKAN_MIZEN | GOKANKEI)) { /* RENYOU_TAIGEN ha fukumareru */
		ptrh->ptr = h->ptr;
		ptrh->kubun = h->kubun;
		ptrh->hinshi = h->hinshi;
		if (flg & GOKAN_MIZEN)
			i = MI_YOU;
		else
			i = GOKAN;
		ptrh->kata_no = (UCHAR)(i & 0x7f);
		ptrh->kata = kata_tb[i & 0x7f];
		if ((flg & RENYOU_TAIGEN) && (ptrh->kata & 0x0200))
			ptrh->kata |= 0x4000;
		if (o_flag && (ptrh->kata & 0x0200)) {
			ptrh->kata_no = O_YOU;
			ptrh->kata = kata_tb[O_YOU & 0x7f];
		}
		if (hg_cnt == 0)
			ret_inf = 0;
		++hg_cnt;
	}
	hgf->cnt = hg_cnt;
	return (ret_inf);
}


/*
 *	Fuzokugo shori
 *	h.ptr		Refer
 *	h.kubun		Set	refer ha chkcnj
 *	h.hinshi		Set	refer ha chkcnj
 *	h.kata_no		Set
 *	h.kata		Set	refer ha chkcnj
 *
 *  ret  != 0: Fuzokugo no tugino pointer
 *         -1: Error
 *         -2: Illegal end
 */
short FTYPE	g_fuzok(work_buf, InH, OutH, lp_cnt, max_f)
UCHAR	far *work_buf;
short	lp_cnt;
HNS_BLK	far *InH;
HNS_GRP	far *OutH;
UCHAR far	*max_f;
{
	short	sts, next_ch;
	UCHAR	*fuzoku, max_ff;
	HNS_BLK	h2;
	HNS_BLK far *ptrh;
	HNS_GRP2	WorkH;
	HNS_GRPF	hgf;
	USHORT	cnt;
	short	err, maxfcnt;

	if (--lp_cnt == 0)
		return (-1);
	if (work_buf[InH->ptr] >= _TYOUON)
		return(-1);
	if ((fuzoku = fzk_ent[work_buf[InH->ptr]]) == 0)
		return (-1);
	WorkH.cnt = 0;
	WorkH.hmax = N_HIB2;
	hgf.hmax = N_HIBF;
	sts = -1;
	maxfcnt = 0;
	fzksrch(work_buf, InH->ptr, fuzoku, &WorkH, &max_ff);
	if (max_ff == 0) {
		*max_f = 0;
		sts = -2;
	}
	for (cnt = 0; cnt < WorkH.cnt; cnt++) {
		ptrh = &WorkH.hib[cnt];
		if (chkcnj(InH, ptrh) != 0) {
			++maxfcnt;
			continue;
		}
		if (ptrh->kubun & F_JIRITU)
			ptrh->hinshi = jitb[ptrh->kata_no & 0x7f].int_hin;
		copylng((UCHAR far *)ptrh, (UCHAR far *)&h2, L_HIB);
		if ((UCHAR)h2.ptr > Length(work_buf) || work_buf[h2.ptr] >= (UCHAR)_KUTOUTEN) {
			if (!(h2.kubun & F_ILEGAL_END)) {
				if (OutH->cnt < N_HIB) {
					copylng((UCHAR far *)&h2, (UCHAR far *)&OutH->hib[OutH->cnt], L_HIB);
					++OutH->cnt;
					*max_f = 0;
					return (h2.ptr);
				}
			}
			else {
				if (sts == -1) /* 92/9/17 */
					sts = -2;
			}
			continue;
		}
		else {
			if (h2.kubun & F_NN)
				continue;
		}
		if (h2.kubun & F_GENKEI) {	/* katuyou ari */
			hgf.cnt = 0;
			err = srcgobi(h2.kata_no, work_buf, 0, &h2, &hgf,&max_ff);
			if (max_ff == 0)
				*max_f = 0;
			if (err >= 0) {
				sts = err;
				(void)mltfzk(work_buf, &hgf, OutH, lp_cnt, &max_ff);
				if (max_ff == 0)
					*max_f = 0;
			}
			else { /* 92/9/17 */
				if (sts == -1)
					sts = err;
			}
			continue;
		}
		h2.kata = kata_tb[h2.kata_no & 0x7f];
		if ((chkomoji((next_ch = work_buf[h2.ptr]), SJI_G)) > 0)
			continue;
		err = g_fuzok(work_buf, &h2, OutH, lp_cnt, &max_ff);
		if (max_ff == 0)
			*max_f = 0;
		if (sts == -1)
			sts = err; /* set -2 */
		else if (err > sts)
			sts = err;
		if (!((h2.kubun & (F_SHUUJYOSHI | F_ILEGAL_END)) || next_ch == __N)) {
			if (OutH->cnt < N_HIB) {
				copylng((UCHAR far *)&h2, (UCHAR far *)&OutH->hib[OutH->cnt], L_HIB);
				++OutH->cnt;
			}
			else
				return (-1);
		}
	}
	if (max_ff == 2) {
		if (maxfcnt == (short)WorkH.cnt)
			*max_f = 1;
	}
	return (sts);
}

/*
 *	Search fuzokugo table
 */
void	FTYPE fzksrch(work_buf, sp, fuzoku, hg2, max_ff)
UCHAR	far *work_buf;
UCHAR  far  *fuzoku;
short	sp;
HNS_GRP2 far	*hg2;
UCHAR 	far *max_ff;
{
	short	cnt, f_chr, b_chr;
	HNS_BLK	far *ptrh;
	REG1 short	i;
	REG2 short	j;

	*max_ff = 2;
	cnt = 0;
	j = 1;
	i = sp+1;
	do {
		f_chr = fuzoku[j];
		if ((UCHAR)i <= Length(work_buf))
			b_chr = work_buf[i];
		else
			b_chr = 0;
		if (b_chr == f_chr) {
			++i;
			++j;
		}
		else {
			if (f_chr >= 0x80) {
				if ((UCHAR) i > Length(work_buf)) {
					if (fuzoku[j] & 0x42)
						*max_ff = 0;
				}
				ptrh = &hg2->hib[cnt];
				ptrh->ptr = i;
				ptrh->kubun = (UCHAR)(fuzoku[j] & 0x7f);
				ptrh->hinshi = fuzoku[j + 1];
				ptrh->kata_no = (UCHAR)(fuzoku[j + 2] & 0x7f);
				j += 3+1;
				if (++cnt >= N_HIB2)
					break;
				i = sp+1;
			}
			else {
				if (f_chr > b_chr) {
					if (b_chr == 0)
						*max_ff = 0;
					break;
				}
				i = sp+1;
				while ((fuzoku[j]) < 0x80)
					++j;
				j += 3+1;
			}
		}
	} while (fuzoku[j - 1] != 0xff);
	hg2->cnt = cnt;
}


/*
 *	Setuzoku check
 *	Return 0: setuzoku ok
 */
short	FTYPE chkcnj(h, hg2)
REG2 HNS_BLK far *h;
REG4 HNS_BLK far *hg2;
{
	REG3 short	save;
	REG1 short	err;

	err = 1;
	if (chkcnjs(h, hg2) == 0)
		return (0);
	if ((h->kubun & F_JIRITU) && (h->kata & 0x4000)) {
		save = h->hinshi;
		h->hinshi = I_MEISHI;
		if (chkcnjs(h, hg2) == 0)
			err = 0;
		h->hinshi = (UCHAR)save;
	}
	return (err);
}


short	FTYPE chkcnjs(h, hg2)
HNS_BLK	far *h;
HNS_BLK far *hg2;
{
	UCHAR	*pt;
	short	err, pos;
	REG1 short	kata;
	REG2 short	mae;

	err = 1;
	if (h->hinshi == 0)
		return(err);
	if (h->kubun & F_JIRITU)
		mae = 0;
	else if (h->kubun & F_KATUYOU)
		mae = 1;
	else
		mae = 2;
	pos = hg2->hinshi * 3 - 3 + mae;
	if ((hg2->kubun & 0x07) == 0)
		pt = fstb_p[pos];
	else
		pt = vstb_p[pos];
	if (pt == 0)
		return (err);
	if ((*pt & 0x7f) == 0) {
		if (mae == 0)
			kata = *(pt + h->hinshi) & 0x7f;
		else {
			kata = *(pt + ((h->hinshi - 1) / 2) + 1);
			if (((h->hinshi - 1) % 2) == 0)
				kata = kata >> 4;
			kata &= 0x0f;
		}
		if (kata_tb[kata] & h->kata)
			err = 0;
	}
	else {
		if (h->hinshi != I_MEISHI && (kata_tb[*pt & 0x7f] & h->kata) == 0)
			return (err);
		kata = *(pt + ((h->hinshi - 1) / 8) + 1);
		kata = kata << ((h->hinshi - 1) % 8);
		if (kata & 0x80)
			err = 0;
	}
	return (err);
}


/*
 *	Multiple fuzokugo check
 *
 *	ret: 0: Normal end
 *	    -1: Error
 *	    -2: Illegal end
 */
global short	FTYPE mltfzk(work_buf, hgf, hg, lp_cnt, max_f)
UCHAR	far *work_buf;
HNS_GRP	far *hg;
HNS_GRPF far	*hgf;
short	lp_cnt;
UCHAR far	*max_f;
{
	short	pt, sts, stsmem;
	HNS_BLK	far *ptrh;
	REG1 short	cnt;
	REG2 short	cp;
	UCHAR	max_f1;

	stsmem = -1;	/* Set error */
	cnt = hgf->cnt;
	for (cp = 0; cp < cnt; cp++) {
		ptrh = &hgf->hib[cp];
		if ((UCHAR)(pt = ptrh->ptr) <= Length(work_buf)) {
			max_f1 = 1;
			sts = g_fuzok(work_buf, ptrh, hg, lp_cnt, &max_f1);
   			if (max_f1 == 0)
				*max_f = 0;
			if (sts <= 0) {
				if (stsmem == -1)
					stsmem = sts;
				if (chkomoji(work_buf[pt], SJI_G)) /* xa->xo xya xyo, nn, xyu */
					continue;
				else {
					if (ptrh->kubun & F_ILEGAL_END)
						continue;
				}
			}
		}
		else if (ptrh->kubun & F_ILEGAL_END)
			continue;
		if (hg->cnt < N_HIB) {
			copylng((UCHAR far *)ptrh, (UCHAR far *)&hg->hib[hg->cnt++], L_HIB);
			if (stsmem < 0) /* 92/9/17 */
				stsmem = 0;
		}
		else
			return (-1);
	}
	return (stsmem);
}


