#include	"common.h"
#include	"vjestr.h"

#if !(CHINA || TAIWAN)
CONST char	dakuon_table [MAX_TABLE]={
	Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N|A_V, Q_N|A_N, Q_N|A_N,
	Q_N|A_N, Q_N|A_N, Q_N|A_D, Q_D|A_N, Q_N|A_D, Q_D|A_N, Q_N|A_D, Q_D|A_N,
	Q_N|A_D, Q_D|A_N, Q_N|A_D, Q_D|A_N, Q_N|A_D, Q_D|A_N, Q_N|A_D, Q_D|A_N,
	Q_N|A_D, Q_D|A_N, Q_N|A_D, Q_D|A_N, Q_N|A_D, Q_D|A_N, Q_N|A_D, Q_D|A_N,
	Q_N|A_D, Q_D|A_N, Q_N|A_N, Q_N|A_D, Q_D|A_N, Q_N|A_D, Q_D|A_N, Q_N|A_D,

	Q_D|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_D|A_H, Q_D|A_N,
	Q_H|A_N, Q_N|A_D|A_H, Q_D|A_N, Q_H|A_N, Q_N|A_D|A_H, Q_D|A_N, Q_H|A_N, Q_N|A_D|A_H,
	Q_D|A_N, Q_H|A_N, Q_N|A_D|A_H, Q_D|A_N, Q_H|A_N, Q_N|A_N, Q_N|A_N, Q_E|A_N,
	Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N,
	Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N,
	Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_N|A_N, Q_D|A_N, Q_N|A_N, Q_N|A_N
};
#endif /* CHINA || TAIWAN) */

#if CHINA /* jis to gb2312 conversion table */
CONST UCHAR    Jisgbtb[] ={
        0xa1, 0x80, 0xa1, 0x81, 0xa2, 0x81, 0xa3, 0x81, /* 0x20 - 0x23 */
        0xa4, 0x81, 0xa5, 0x81, 0xa6, 0x81, 0xa7, 0x81,
        0xa8, 0x81, 0xa9, 0x81, 0xaa, 0x81, 0xab, 0x81,
        0xac, 0x81, 0xad, 0x81, 0xa3, 0x80, 0xaf, 0x81,
        0xb0, 0x81, 0xb1, 0x81, 0xb2, 0x81, 0xb3, 0x81, /* 0x30 - 0x33 */
        0xb4, 0x81, 0xb5, 0x81, 0xb6, 0x81, 0xb7, 0x81,
        0xb8, 0x81, 0xb9, 0x81, 0xba, 0x81, 0xbb, 0x81,
        0xbc, 0x81, 0xbd, 0x81, 0xbe, 0x81, 0xbf, 0x81,
        0xc0, 0x81, 0xc1, 0x81, 0xc2, 0x81, 0xc3, 0x81, /* 0x40 - 0x43 */
        0xc4, 0x81, 0xc5, 0x81, 0xc6, 0x81, 0xc7, 0x81,
        0xc8, 0x81, 0xc9, 0x81, 0xca, 0x81, 0xcb, 0x81,
        0xcc, 0x81, 0xcd, 0x81, 0xce, 0x81, 0xcf, 0x81,
        0xd0, 0x81, 0xd1, 0x81, 0xd2, 0x81, 0xd3, 0x81, /* 0x50 - 0x53 */
        0xd4, 0x81, 0xd5, 0x81, 0xd6, 0x81, 0xd7, 0x81,
        0xd8, 0x81, 0xd9, 0x81, 0xda, 0x81, 0xdb, 0x81,
        0xa2, 0x80, 0xdd, 0x81, 0xde, 0x81, 0xdf, 0x81,
        0xe0, 0x81, 0xe1, 0x81, 0xe2, 0x81, 0xe3, 0x81, /* 0x60 - 0x63 */
        0xe4, 0x81, 0xe5, 0x81, 0xe6, 0x81, 0xe7, 0x81,
        0xe8, 0x81, 0xe9, 0x81, 0xea, 0x81, 0xeb, 0x81,
        0xec, 0x81, 0xed, 0x81, 0xee, 0x81, 0xef, 0x81,
        0xf0, 0x81, 0xf1, 0x81, 0xf2, 0x81, 0xf3, 0x81, /* 0x70 - 0x73 */
        0xf4, 0x81, 0xf5, 0x81, 0xf6, 0x81, 0xf7, 0x81,
        0xf8, 0x81, 0xf9, 0x81, 0xfa, 0x81, 0xfb, 0x81,
        0xfc, 0x81, 0xfd, 0x81, 0xfe, 0x81, 0x00, 0x00
};

#elif TAIWAN

CONST UCHAR    Jisbig5tb[] ={
        0x40, 0x80, 0x49, 0x80, 0xaa, 0x80, 0xad, 0x80, /* 0x20 - 0x23 */
        0x43, 0x81, 0x48, 0x81, 0xae, 0x80, 0xac, 0x80,
        0x5d, 0x80, 0x5e, 0x80, 0xaf, 0x80, 0xcf, 0x80,
        0x41, 0x80, 0xd0, 0x80, 0x44, 0x80, 0xfe, 0x80,
        0xaf, 0x81, 0xb0, 0x81, 0xb1, 0x81, 0xb2, 0x81, /* 0x30 - 0x33 */
        0xb3, 0x81, 0xb4, 0x81, 0xb5, 0x81, 0xb6, 0x81,
        0xb7, 0x81, 0xb8, 0x81, 0x51, 0x80, 0x52, 0x80,
        0xd5, 0x80, 0xd7, 0x80, 0xd6, 0x80, 0x48, 0x80,
        0x49, 0x81, 0xcf, 0x81, 0xd0, 0x81, 0xd1, 0x81, /* 0x40 - 0x43 */
        0xd2, 0x81, 0xd3, 0x81, 0xd4, 0x81, 0xd5, 0x81,
        0xd6, 0x81, 0xd7, 0x81, 0xd8, 0x81, 0xd9, 0x81,
        0xda, 0x81, 0xdb, 0x81, 0xdc, 0x81, 0xdd, 0x81,
        0xde, 0x81, 0xdf, 0x81, 0xe0, 0x81, 0xe1, 0x81, /* 0x50 - 0x53 */
        0xe2, 0x81, 0xe3, 0x81, 0xe4, 0x81, 0xe5, 0x81,
        0xe6, 0x81, 0xe7, 0x81, 0xe8, 0x81, 0x65, 0x80,
        0x44, 0x81, 0x66, 0x80, 0x73, 0x80, 0xc4, 0x80,
        0xab, 0x80, 0xe9, 0x81, 0xea, 0x81, 0xeb, 0x81, /* 0x60 - 0x63 */
        0xec, 0x81, 0xed, 0x81, 0xee, 0x81, 0xef, 0x81,
        0xf0, 0x81, 0xf1, 0x81, 0xf2, 0x81, 0xf3, 0x81,
        0xf4, 0x81, 0xf5, 0x81, 0xf6, 0x81, 0xf7, 0x81,
        0xf8, 0x81, 0xf9, 0x81, 0xfa, 0x81, 0xfb, 0x81, /* 0x70 - 0x73 */
        0xfc, 0x81, 0xfd, 0x81, 0xfe, 0x81, 0x40, 0x82,
        0x41, 0x82, 0x42, 0x82, 0x43, 0x82, 0x61, 0x80,
        0x55, 0x80, 0x62, 0x80, 0xe3, 0x80, 0x00, 0x00
};

CONST UCHAR	big5kigou1[] ={ /* 0x40 - 0x70 */
		0x20, 0x2c, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, /*40*/
		0x3f, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, /*50*/
		0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x29, 0x00,
		0x00, 0x7b, 0x7d, 0x00, 0x00, 0x5b, 0x5d, 0x00, /*60*/
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x00, /*70*/
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	};
CONST UCHAR	big5kigou2[] ={ /* 0xa0 - 0xf0 */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*a0*/
		0x00, 0x00, 0x22, 0x60, 0x27, 0x23, 0x26, 0x2a,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*b0*/
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, /*c0*/
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b,
		0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*d0*/
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, /*e0*/
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*f0*/
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00,
	};

#else  /* Japan */

/*
 * This table covers 0x20 -> 0xdf
 * 0 byte low byte of kanji
 * 1 byte 
 *   MSB  7 : 1 conversion enable
 *        6 : + handakuten 
 *        5 : + dakuten
 *        4 : u (+ dakuten)
 *        3 : 
 *        2 : 
 *    1 & 0 : low digit in kanji high byte
 * kanji = (0x80 + (byte1 & 0x03))*256 + byte0
 */

CONST UCHAR	jissjtb[] ={
	0x40, 0x80, 0x49, 0x80, 0x68, 0x80, 0x94, 0x80, /* 0x20 - 0x23 */
	0x90, 0x80, 0x93, 0x80, 0x95, 0x80, 0x66, 0x80,
	0x69, 0x80, 0x6a, 0x80, 0x96, 0x80, 0x7b, 0x80,
	0x43, 0x80, 0x7c, 0x80, 0x44, 0x80, 0x5e, 0x80,
	0x4f, 0x81, 0x50, 0x81, 0x51, 0x81, 0x52, 0x81, /* 0x30 - 0x33 */
	0x53, 0x81, 0x54, 0x81, 0x55, 0x81, 0x56, 0x81,
	0x57, 0x81, 0x58, 0x81, 0x46, 0x80, 0x47, 0x80,
	0x83, 0x80, 0x81, 0x80, 0x84, 0x80, 0x48, 0x80,
	0x97, 0x80, 0x60, 0x81, 0x61, 0x81, 0x62, 0x81, /* 0x40 - 0x43 */
	0x63, 0x81, 0x64, 0x81, 0x65, 0x81, 0x66, 0x81,
	0x67, 0x81, 0x68, 0x81, 0x69, 0x81, 0x6a, 0x81,
	0x6b, 0x81, 0x6c, 0x81, 0x6d, 0x81, 0x6e, 0x81,
	0x6f, 0x81, 0x70, 0x81, 0x71, 0x81, 0x72, 0x81, /* 0x50 - 0x53 */
	0x73, 0x81, 0x74, 0x81, 0x75, 0x81, 0x76, 0x81,
	0x77, 0x81, 0x78, 0x81, 0x79, 0x81, 0x6d, 0x80,
	0x8f, 0x80, 0x6e, 0x80, 0x4f, 0x80, 0x51, 0x80,
	0x65, 0x80, 0x81, 0x81, 0x82, 0x81, 0x83, 0x81, /* 0x60 - 0x63 */
	0x84, 0x81, 0x85, 0x81, 0x86, 0x81, 0x87, 0x81,
	0x88, 0x81, 0x89, 0x81, 0x8a, 0x81, 0x8b, 0x81,
	0x8c, 0x81, 0x8d, 0x81, 0x8e, 0x81, 0x8f, 0x81,
	0x90, 0x81, 0x91, 0x81, 0x92, 0x81, 0x93, 0x81, /* 0x70 - 0x73 */
	0x94, 0x81, 0x95, 0x81, 0x96, 0x81, 0x97, 0x81,
	0x98, 0x81, 0x99, 0x81, 0x9a, 0x81, 0x6f, 0x80,
	0x62, 0x80, 0x70, 0x80, 0x60, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x80 - 0x83 */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x90 - 0x93 */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x40, 0x80, 0x42, 0x80, 0x75, 0x80, 0x76, 0x80, /* 0xa0 - 0xa3 */
	0x41, 0x80, 0x45, 0x80, 0x92, 0x82, 0x40, 0x82,
	0x42, 0x82, 0x44, 0x82, 0x46, 0x82, 0x48, 0x82,
	0x83, 0x82, 0x85, 0x82, 0x87, 0x82, 0x62, 0x82,
	0x5b, 0x80, 0x41, 0x82, 0x43, 0x82, 0x45, 0xb2, /* 0xb0 - 0xb3 */
	0x47, 0x82, 0x49, 0x82, 0x4a, 0xa2, 0x4c, 0xa2,
	0x4e, 0xa2, 0x50, 0xa2, 0x52, 0xa2, 0x54, 0xa2,
	0x56, 0xa2, 0x58, 0xa2, 0x5a, 0xa2, 0x5c, 0xa2,
	0x5e, 0xa2, 0x60, 0xa2, 0x63, 0xa2, 0x65, 0xa2, /* 0xc0 - 0xc3 */
	0x67, 0xa2, 0x69, 0x82, 0x6a, 0x82, 0x6b, 0x82,
	0x6c, 0x82, 0x6d, 0x82, 0x6e, 0xe2, 0x71, 0xe2,
	0x74, 0xe2, 0x77, 0xe2, 0x7a, 0xe2, 0x7d, 0x82,
	0x7e, 0x82, 0x80, 0x82, 0x81, 0x82, 0x82, 0x82, /* 0xd0 - 0xd3 */
	0x84, 0x82, 0x86, 0x82, 0x88, 0x82, 0x89, 0x82,
	0x8a, 0x82, 0x8b, 0x82, 0x8c, 0x82, 0x8d, 0x82,
	0x8f, 0x82, 0x93, 0x82, 0x4a, 0x80, 0x4b, 0x80
};

CONST UCHAR	katakana[] = {
		0xa7,0xb1,0xa8,0xb2,0xa9,0xb3,0xaa,0xb4,
		0xab,0xb5,0xb6,0xb6,0xb7,0xb7,0xb8,0xb8,
		0xb9,0xb9,0xba,0xba,0xbb,0xbb,0xbc,0xbc,
		0xbd,0xbd,0xbe,0xbe,0xbf,0xbf,0xc0,0xc0,
		0xc1,0xc1,0xaf,0xc2,0xc2,0xc3,0xc3,0xc4,
		0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xca,
		0xca,0xcb,0xcb,0xcb,0xcc,0xcc,0xcc,0xcd,
		0xcd,0xcd,0xce,0xce,0xce,0xcf,0xd0,ERR,
		0xd1,0xd2,0xd3,0xac,0xd4,0xad,0xd5,0xae,
		0xd6,0xd7,0xd8,0xd9,0xda,0xdb,0xdc,0xdc,
		ERR, ERR, 0xa6,0xdd,0xb3,0xb6,0xb9
	};
CONST UCHAR	kigou[] ={
		0x20, 0xa4, 0xa1, 0x2c, 0x2e, 0xa5, 0x3a, 0x3b,
		0x3f, 0x21, 0xde, 0xdf, 0x00, 0x00, 0x00, 0x5e,
		0x7e, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x2f, 0x00,
		0x7e, 0x00, 0x7c, 0x00, 0x00, 0x60, 0x27, 0x00,
		0x22, 0x28, 0x29, 0x00, 0x00, 0x5b, 0x5d, 0x7b,
		0x7d, 0x00, 0x00, 0x00, 0x00, 0xa2, 0xa3, 0x00,
		0x00, 0x00, 0x00, 0x2b, 0x2d, 0x00, 0x00, 0x00,
		0x00, 0x3d, 0x00, 0x3c, 0x3e, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c,
		0x24, 0x00, 0x00, 0x25, 0x23, 0x26, 0x2a, 0x40
	};

#endif /* CHINA , TAIWAN */
