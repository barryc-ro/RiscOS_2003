/*
**	Compact-VJE
**
**			special5.c
**						$Date$
*/
#include	<stdio.h>
#include	"common.h"
#include	"vje.h"
#include	"vjelib.h"
#include	"vfncdef.h"

extern short	curbunno;
extern short	vje_flag;
extern BUFF	yomi_buf_Q[];
extern BUFF	cur_yomi_Q[];
extern BUFF	hira_buf_Q[];
extern KCB	c_kcb[];
extern KH_LINK	koho1[];

#if TANKANJI_CNV


/*
 *	Eisuji Convert Proc
 *	<exit> =  1:  End Normally
 *	       =  0:  Resource Fusoku Retry Fuka
 *	         -1:  Retry Site imi no aru mono
 */
global int	tankan_cnv(key)
BUFF	far *key;
{
	UCHAR	work_buf[NUM_CHAR * 2 + 1];
	REG1 short	i;
	REG2 KH_LINK	*ptrk;

	clear();				/* Control Blcok clear	*/
	copylng(&key[1], (UCHAR far *)&work_buf[1], Length(key));
	Length(work_buf) = (UCHAR)Length(key);
	hira_yomi(work_buf, yomi_buf_Q, 0);
	copykb(yomi_buf_Q, cur_yomi_Q); 
	copykb(work_buf, hira_buf_Q);
	ptrk = koho1;
	if ((i = srchknj(yomi_buf_Q, &ptrk->kcbs, FULL_MATCH_ONLY|ENB_KNJ | ENB_SET | ENB_SEB)) >= 1) {
		if (i == 1 || i >= 4)
			return (0);
		else
			return (-1);
	}
	ptrk->bunlen1 = Length(yomi_buf_Q);
	if (makekoho(0) != 0) {
		return (0);
	}
	curbunno = 1;
	set_yomipos(curbunno, Length(yomi_buf_Q));
	vje_flag |= EISUU_CNV;
	return (1);
}
#endif

global void	FTYPE set_yomipos(bno, dyomi)
short	bno, dyomi;
{
short	yomi;
REG1	KH_LINK	*ptr1;
REG2	KH_LINK	*ptrb1;

	ptrb1 = &koho1[bno - 1];
	ptr1 = &koho1[bno];
#if YUUBIN
	yomi = get_yomi_len(yomi_buf_Q, ptrb1->bunpnt, ptrb1->bunpnt + (UCHAR)dyomi,ptrb1->yomipnt);
#else
	yomi = get_yomi_len(yomi_buf_Q, ptrb1->bunpnt, ptrb1->bunpnt + (UCHAR)dyomi);
#endif
	ptr1->bunpnt = ptrb1->bunpnt + (UCHAR)dyomi;
	ptr1->yomipnt = ptrb1->yomipnt + (UCHAR)yomi;
	ptr1->bunlen1 = 0;
}
