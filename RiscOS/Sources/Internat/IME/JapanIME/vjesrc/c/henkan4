/*
**	Compact-VJE
**
**			henkan4.c
*/
#include	"common.h"
#include	"vje.h"
#include	"vjelib.h"
#include	"fuzoku.h"
#include	"vfncdef.h"


#define M_YUUSEN_HINSI		  1
#define M_HINDO				 10

#if	FUK_YUSEN
#define	HINDO_BIT_FLAG		0x0f			/* 2 bits hindo flag */
#else
#define	HINDO_BIT_FLAG		0x07			/* 2 bits hindo flag */
#endif

extern KH_LINK  koho1[];
extern KCB	  c_kcb[];
extern CONST JITBL	jitb[];
extern BUFF	yomi_buf_Q[];
extern BUFF	cur_yomi_Q[];
extern BUFF	hira_buf_Q[];
extern UCHAR	hira_gak;

#if FUK_YUSEN
extern	short	wCnvMode ;
#endif
/********************************************************
* make koho link					*
*		<IN>	bno	 curnbunno					  *
*	EXIT	0:	end normally			*
*		not 0:  error					 	*
*********************************************************/
global short  FTYPE makekoho(bno)
REG1	short	bno;
{
static	TEMP 	w_tmp[TEMP_SIZE];
	short	err;
	if ((err = srckoho(&koho1[bno],bno,w_tmp)) != 0)
		return(err);
	linkcard(&koho1[bno],w_tmp);

	if (add_hira_card(bno) < 0)
		return(-1);
	
	koho1[bno].koho_max -= del_mlt_card(&koho1[bno].cards, koho1[bno].yomipnt);
	return(0);
}

/****************************************************************
* make card link by kcb link order								*
*	EXIT	0:	end normally									*
*			1:	no kcb link error return						*
*****************************************************************/
short  FTYPE srckoho(p_k,bno,w_tmp)
short	bno;
REG1 KH_LINK  *p_k;
TEMP *w_tmp;
{
	UCHAR bunlen,fzkf, hindo;
	UCHAR   k, len,  ret, top;
	short	   point, j, cnt ;
static	KCB		*p_kc;
	KCARD			  *p_c;
 
	clrzero((char far *)w_tmp,L_TEMP*TEMP_SIZE);
	cnt=0;
	hira_gak = 0;
	bunlen = (UCHAR)(p_k->bunlen1 & 0x3f);
	p_k->cards.crnt = END_CARD;
	
	if (( top = k = (UCHAR)gettopkcb(&p_k->kcbs)) == END_MARK)
		 	return(1);		/* no kcb link error return */
	do {  /* kcb */
		p_kc = &c_kcb[k];
		if ((p_c = (KCARD *)gettopcard(&p_kc->cards)) == END_CARD)
			continue;
		do {
			for (j = 0; j < 4; j++) {					/* find same card of fuzokugo */
				fzkf = p_c->fzk[j];
				if ((len = (UCHAR)(fzkf & ~(FZK_RENYOU|FZK_RENTAI))) == bunlen) {
					p_c->flg &= ~(CARD_RENYOU|CARD_RENTAI);
					p_c->flg |= ((fzkf & (FZK_RENYOU|FZK_RENTAI)) >> FZK_SFT);
					delcurcard(&p_kc->cards);

			/*--------------- point keisan ----*/
					/*   p_kc->flg |= KCB_DONT_DEL;(for 3 bunsetu)*/
#if TANKANJI_CNV
					ret = 0;
#else /*TANKANJI_CNV*/
#if FUK_YUSEN
					ret  =  (UCHAR) hinsimatch(p_c, len, p_k);
#else
					if (p_k->hinsi != 0xff)
						ret  =  (UCHAR) hinsimatch(p_c, len, p_k);
					else
						ret  =  0;
#endif
#endif/*TANKANJI_CNV*/
					hindo = (UCHAR)(p_c->hindo & HINDO_BIT_FLAG);
					if ((p_k->hinsi & 0x7f) == C1_SUUSHI && ret == 1 
					&& p_c->nji == 2 && p_c->ji[0] == 0x91 && p_c->ji[1] == 0xe6)
						point = 15;
					else if (p_k->hinsi == C2_JHOSUU && ret == 1) 
						point = 15;
					else
						point = ret * /*2*/8 + hindo;
#if FUK_YUSEN
					if (ret == 0) {
						if (hindo > 0x07) {
							if (Length(cur_yomi_Q) != bunlen)
								point += (0x07 + 1)/2;
							else
								point += 0x07 + 1;
						}
					}
#endif
					if (point > 15)
						point=15;
					addcard(p_c, &w_tmp[point].cards);
					cnt++;
					break;
				}	 
				else if (len == 0)
					break;
			}
		} while((p_c = (KCARD*) getnextcard(&p_kc->cards)) != END_CARD);
		relcardlnk(&p_kc->cards);
	} while((k = (UCHAR)getnextkcb(&p_k->kcbs)) != END_MARK);
	if (cnt == 0)
		return(-1);
	p_k->koho_max = cnt;
	p_k->koho_cnt = 0;			/* koho_cnt buffer clear */
	return(0);
}

/*------------------------------------------------------------------*/
/*	link card by w_tmp[]										*/
/*------------------------------------------------------------------*/
void FTYPE linkcard(p_k,w_tmp)
KH_LINK *p_k;
TEMP *w_tmp;
{
    short i;

	for (i = TEMP_SIZE - 1; i >= 0; i--) {
		if (w_tmp[i].cards.next == END_CARD)
			continue;
		addlnk(&w_tmp[i].cards, &p_k->cards);
	} 

}

#if !TANKANJI_CNV
/*********************************************************
*	HINSHI CHECK						 *
**********************************************************/
short FTYPE hinsimatch(p_c, len, p_k)
REG1  KCARD	*p_c;
short	len;
KH_LINK  *p_k;
{
short	ret;
UCHAR	hinsi, cmp;

#if FUK_YUSEN
	if (p_k->hinsi == 0xff) {
		if (wCnvMode & M_FUKUGOU) {
			if (len > (short)c_kcb[p_c->kcbno].ji_yomi)
				return(0);
			hinsi = jitb[p_c->hinsi].ji1_cnj;
			if (hinsi == C1_CHIMEI || hinsi == C1_SEI || hinsi == C1_NAMAE)
				return(1);
		}
		else
			return(0);
	}
#else
	if (p_k->hinsi == 0xff)
		return(0);
#endif

	hinsi = p_c->hinsi;
	cmp = p_k->hinsi;
	if (p_k->hinsi & 0x80) {
		if (len > (short)c_kcb[p_c->kcbno].ji_yomi) { /* fuzokugo ari */
			if (cmp == C2_SUUSHI)
				return(0);
		}
		if (cmp == C2_MEISHI2) {
			if (p_c->flg & CARD_FND_2JI)
				return(1);
			else
				return(0);
		}
		hinsi = jitb[hinsi].ji2_cnj;
#if FUK_YUSEN
		if (wCnvMode & M_FUKUGOU) {
			if (len > (short)c_kcb[p_c->kcbno].ji_yomi)
				return(0);
		}
#endif
	}
	else {
#if FUK_YUSEN
		if (wCnvMode & M_FUKUGOU) {
			if (len > (short)c_kcb[p_c->kcbno].ji_yomi )
				return(0);
			hinsi = jitb[hinsi].ji1_cnj;
			if (hinsi == C1_CHIMEI || hinsi == C1_SEI || hinsi == C1_NAMAE)
				return(1);
			return (0);
		}
#endif
		hinsi = jitb[hinsi].ji1_cnj;
		if (cmp >= C1_MEISHI2 && cmp <= C1_RENTAI) { /* DOU_YOU RENYOU */
			ret = 0;
			if (cmp == C1_MEISHI2) {
				if (p_c->flg & CARD_FND_2JI)
					ret = 1;
			}
			else if (cmp == C1_DOU_YOU) {
				if (hinsi == C1_DOUSHI && (p_c->flg & CARD_RENYOU))
					ret = 1;
			}
			else if (cmp == C1_RENYOU) {
				if (p_c->flg & CARD_RENYOU)
					ret = 1;
			}
			else {
				if (p_c->flg & CARD_RENTAI)
					ret = 1;
			}
			return(ret);
		}
		else if (len > (short)c_kcb[p_c->kcbno].ji_yomi) { /* fuzokugo ari */
			if (cmp >= C1_SUUSHI && cmp <= C1_KANSUU_S)
				return(0);
			if (cmp == C1_MEISHIF && len == c_kcb[p_c->kcbno].ji_yomi + 1)
				return(1);
		}
		else {
			if (cmp == C1_KANSUU_O || cmp == C1_KANSUU_D)
				cmp = C1_KANSUU_S;
			else if (cmp == C1_MEISHI_NFZK && hinsi != C1_KEIYOU)
				return(1);
		}
	}
	if (hinsi == cmp)
		return(1);
	else
		return(0);
}

#endif/*TANKANJI_CNV*/

/*
 *  ret -1: error
 *      0:  no hiragana card
 *
 */

short	FTYPE add_hira_card(bno)
short	bno;
{
static CARD_LINK lnk;
UCHAR flg;
short len, yomi_len;
REG1	KH_LINK *ptrk;
REG2	KCARD *ptr;
KCARD *ptr0;
	ptrk = &koho1[bno];
	ptr0 = (KCARD *)gettopcard(&ptrk->cards);
	len = c_kcb[ptr0->kcbno].ji_yomi;

#if YUUBIN
	yomi_len = get_yomi_len(yomi_buf_Q, ptrk->bunpnt, ptrk->bunpnt + len, ptrk->yomipnt);
#else
	yomi_len = get_yomi_len(yomi_buf_Q, ptrk->bunpnt, ptrk->bunpnt + len);
#endif
	if((ptr = (KCARD *)getnewcard(yomi_len)) == END_CARD)
		return (-1);
	flg = ptr->flg;
	copylng((UCHAR far *)ptr0, (UCHAR far *)ptr, L_CARD);
	ptr->hykno = 0;
	ptr->hindo = 0; /* 91/10/17 */
	ptr->flg = (UCHAR)(flg);
	ptr->nextcard = END_CARD;
	copylng(&hira_buf_Q[ptrk->yomipnt], ptr->ji, yomi_len);
	ptr->nji = (UCHAR) yomi_len;
	++ptrk->koho_max;
		lnk.next = ptr;
		lnk.crnt = lnk.prev = END_CARD;
		addlnk(&lnk, &ptrk->cards);
	return(0);
}


