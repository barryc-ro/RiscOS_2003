/*
**	Compact-VJE
**
**			libsub.c
*/

#include	"common.h"
#include	"vje.h"
#include	"vjelib.h"
#include	"fuzoku.h"
#include	"vfncdef.h"


/*
 *	Copy string
 */
global void FTYPE copylng(a, b, n)
REG1 unsigned char far	*a;
REG2 unsigned char far	*b;
short	n;
{
	while (n--)
		*b++ = *a++;
}

/*
 *	Copy
 */
global void FTYPE copykb(a, b)
UCHAR far	*a;
UCHAR far	*b;
{
	REG3	short	i;

	i = Length(a);
	*b++ = *a++;		/* ! */
	while (i--)		/* ! */
		*b++ = *a++;	/* ! */
}

/*
 *	Kanji string compare
 */
global short FTYPE	kstrcmp(buf1, buf2)
UCHAR	far *buf1;
UCHAR	far *buf2;
{
	REG1 short	i;
	REG2 UCHAR	c;

	for (i = 1; (UCHAR)i <= Length(buf1); i++) {
		if ((UCHAR)i > Length(buf2))
			break;
		if ((c = buf1[i]) != buf2[i])
			break;
#if CHINA /* KATO */
                if (0x81 <= c) {
#else
		if (0x81 <= c && c <= 0x9f || 0xe0 <= c && c <= 0xfc) {
#endif
			if (buf1[i + 1] != buf2[i + 1])
				break;
			++i;
		}
	}
	return (i);
}

/*
 *	Komoji check
 *   entry   none: a, i, u, e, o, ya, yo
 *	       SJI_G:     n, yu
 *	       SJI_F: -, n
 *   return: 0: gaitou komoji dehanai
 *	        1: komoji
 */
global short FTYPE	chkomoji(c, ep)
short	c;
short	ep;
{
	if (c == _XA || c == _XI || c == _XU || c == _XE || c == _XO || c == _XYA || c == _XYO)
		return (1);
	else if ((ep & SJI_GF) && c == __N)
		return (1);
	else if ((ep & SJI_G) && c == _XYU)
		return (1);
	else if ((ep & SJI_F) && c == _TYOUON)
		return (1);
	else
		return (0);
}


