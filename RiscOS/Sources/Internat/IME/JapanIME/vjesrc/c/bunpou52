/*
**	Compact-VJE
**
**			bunpou52.c
*/

#include	"common.h"
#include	"vje.h"
#include	"vjelib.h"
#include	"fuzoku.h"
#include	"vfncdef.h"

extern CONST short	kata_tb[];
extern CONST JITBL	jitb[];

/*
 *          Bunpou check             bunsetu check
 *	Length(work_buf) == inp->ptr de call siteha ikenai
 *	Return information
 *	 0:	Fuzokugo nashi
 *	-1:	Setuzoku error
 *	-2:	Illegal end
 *	Fk
 *	         Tugino yomi no kaishi pointer
 */
global short	FTYPE bunchk(work_buf, inp, fk)
UCHAR	far *work_buf;
INPUT_INF	far *inp;
HNS_KH	far *fk;
{
	HNS_BLK h;
	HNS_GRP hg;
	HNS_GRPF hgf;
	UCHAR	max_f;
	short	ji_inf, sts, sts2;
	REG1 short	i;
	REG2 HNS_BLK	far *ptrh;

	fk->max_fzk = max_f = 1;
	fk->cnt = 0;
	if (inp->hinshi == SUUSHI && work_buf[inp->ptr+1] == _KA)
		return (0);
	if (((ji_inf = jitb[inp->hinshi].gobi_flg) & NO_FUZOKU) != 0)
		return (0);
	hg.cnt = hgf.cnt = 0;
	sts = 0;
	hg.hmax = N_HIB;
	hgf.hmax = N_HIBF;
	for (i = 0; i < N_HIB; i++)
		hg.hib[i].ptr = -1;
	/* katuyou ga aru hinshi ha gobi check */
	if (jitb[inp->hinshi].gobi_no != 0) {
		h.ptr = inp->ptr + 1;
		h.kubun = F_JIRITU | F_GENKEI | F_KATUYOU;
		if ((ji_inf & GOKANKEI) && (ji_inf & GOKAN_IIKIRI) == 0)
			h.kubun |= F_ILEGAL_END;
		h.hinshi = jitb[inp->hinshi].int_hin;
		if ((sts = srcgobi(inp->hinshi, work_buf, inp->flag, &h, &hgf, &max_f)) == -1 || sts == 2) {
			fk->max_fzk = max_f;
			if (sts == 2)
				sts = 0;
			return (sts);			/* ... setsuzoku error */
		}
		else if (sts == -2) {
			if (ji_inf & GOKAN_TAIGEN)
				goto FZK_CHK;
			else {
				fk->max_fzk = max_f;
				return(sts);
			}
		}
		sts = mltfzk(work_buf, &hgf, &hg, 13, &max_f);
	} /*	Katuyou ga nai hinshi */
	else {
FZK_CHK:
		ptrh = &hgf.hib[0];
		ptrh->ptr = inp->ptr + 1;
		ptrh->kubun = (F_JIRITU | F_GENKEI | F_KATUYOU);
		ptrh->hinshi = jitb[inp->hinshi].int_hin;
		if (ptrh->hinshi == I_FUKUSHI) {
			ptrh->kata_no = 0;
			ptrh->kata = 0;
		}
		else {
			ptrh->kata_no = (TAIGEN & 0x7f);
			ptrh->kata = kata_tb[TAIGEN & 0x7f];
		}
		++hgf.cnt;
		if ((UCHAR)ptrh->ptr <= Length(work_buf))
			sts2 = mltfzk(work_buf, &hgf, &hg, 13, &max_f);
		else {
			sts2 = 0;
			max_f = 0;
		}
		if ((sts == -2 && sts2 == -1) || sts2 == -2)
			sts = -2;
	}
	fk->max_fzk = max_f;
	if (hg.cnt != 0) {
		sort(&hg, fk);
		if (Length(work_buf) >= (UCHAR)fk->hib[0].ptr
		     && work_buf[fk->hib[0].ptr] == (UCHAR)_KUTOUTEN)
			++fk->hib[0].ptr;
		if (fk->cnt != 0)
			sts = fk->hib[0].ptr - inp->ptr - 1;
		else
			sts = 0;
	}
	else if (sts == -1) {
		fk->cnt = 0;
		if (ji_inf & GOKAN_IIKIRI)
			sts = 0;
	}
	return (sts);
}


/*
 *	Sort
 */
void	FTYPE sort(s, d)
HNS_GRP	far *s;
HNS_KH	far *d;
{
	short	k, val, zen_val, tmp;
	REG1 short	i;
	REG2 short	j;

	i = zen_val = 0;
	while (i < 4) {
		val = -1;
		for (j = 0; j < N_HIB; j++) {
			if ((s->hib[j].kubun & F_ILEGAL_END) != 0) {
				s->hib[j].ptr = -1;
				continue;
			}
			if ((tmp = s->hib[j].ptr) > val) {
				val = tmp;
				k = j;
			}
		}
		if (val == -1)
			break;
		if (val != zen_val) {
			copylng((UCHAR far *)&s->hib[k], (UCHAR far *)&d->hib[i++], L_HIB);
			zen_val = val;
		}
		s->hib[k].ptr = -1;
	}
	d->cnt = i;
}

