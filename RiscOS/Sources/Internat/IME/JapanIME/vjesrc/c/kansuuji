/*
**	Compact-VJE
**
**			kansuuji.c
*/

#include	"common.h"
#include	"vje.h"
#include	"vjelib.h"
#include	"fuzoku.h"
#include	"vfncdef.h"

#define	is_kugiri(c)		((c) == 5 || (c) == 9 || (c) == 13)

#if 0/*unix*/
extern UCHAR	suji_tbl0[];
extern UCHAR	suji_tbl1[];
extern UCHAR	keta_tbl0[];
extern UCHAR	keta_tbl1[];
extern UCHAR	comma[];

/*
 */
global short	FTYPE kansuuji(ibuf, obuf, mode)
BUFF	far *ibuf;
BUFF	far *obuf;
REG1 short	mode;
{
UCHAR	work[NUM_CHAR * 2 + 1];
	Length(obuf) = 0;
	switch (mode) {
	case 0 :
		copykb(ibuf, obuf);
		return (OK);
	case 1 :
		return (change1(ibuf, obuf, suji_tbl0, keta_tbl0, 1));
	case 2 :
		return (change1(ibuf, obuf, suji_tbl1, keta_tbl1, 0));
	case 3 :
		return (change3(ibuf, obuf));
	case 4 :
		if (change4(ibuf, obuf) != OK)
			return(ERR);
		zen_han(obuf, work);
		copykb(work, obuf);
		return(OK);
	case 5 :
		return (change4(ibuf, obuf));
	default :
		return (ERR);
	}
}


/*
 */
static short	FTYPE change1(ibuf, obuf, suji_tbl, keta_tbl, num)
REG1 BUFF far	*ibuf;
REG2 BUFF far	*obuf;
char	*suji_tbl, *keta_tbl;
short	num;
{
	FLAG	d_flag, z_flag;
	REG3 short	ketasu;
	REG4 short	suji;

	if ((ketasu = Length(ibuf) / 2) > 16)
		return (ERR);
	else {
		d_flag = NO;
		z_flag = YES;
		for (; ketasu > 0; ketasu--) {
			ibuf += 2;
			suji = *ibuf - 0x4f;
			if (suji == 0) {
				if (is_kugiri(ketasu)) {
					if (d_flag) {
						manokuch(ketasu, obuf, keta_tbl);
						d_flag = NO;
					}
				}
			}
			else {
				if (ketasu % 4 < 2 || suji != num)
					addc2(obuf, &suji_tbl[suji * 2]);
				kurai(ketasu, obuf, keta_tbl);
				d_flag = !is_kugiri(ketasu);
				z_flag = NO;
			}
		}
		if (z_flag) {
			Length(obuf) = 0;
			addc2(obuf, suji_tbl);
		}
		return (OK);
	}
}


/*
 */
static void	FTYPE kurai(keta, obuf, table)
short	keta;
BUFF	far *obuf;
char	*table;
{

	if (keta % 4 == 1)
		manokuch(keta, obuf, table);
	else
		addc2(obuf, table + ((keta + 2) % 4) * 2);
}


/*
 */
static void	FTYPE manokuch(keta, obuf, table)
short	keta;
BUFF	far *obuf;
char	*table;
{
	if (is_kugiri(keta))
		addc2(obuf, table + keta / 2 + 4);
}


/*
 */
static short	FTYPE change3(ibuf, obuf)
REG1 BUFF far	*ibuf;
REG2 BUFF far	*obuf;
{
	REG3	short	ketasu;

	ketasu = Length(ibuf) / 2;
	for (ibuf += 2; ketasu-- > 0; ibuf += 2)
		addc2(obuf, &suji_tbl0[(*ibuf - 0x4f) * 2]);
	return (OK);
}


/*
 */
static short	FTYPE change4(ibuf, obuf)
REG1 BUFF far	*ibuf;
REG2 BUFF far	*obuf;
{
	REG3	short	ketasu;

	if ((ketasu = Length(ibuf) / 2) > 24)
		return (ERR);
	else {
		for (++ibuf; ketasu-- > 0; ibuf += 2) {
			addc2(obuf, ibuf);
			if (ketasu % 3 == 0 && ketasu != 0)
				addc2(obuf, comma);
		}
		return (OK);
	}
}

#endif/*unix*/
