/*****************************************************************************
* $Id$
* $Name$
*
* Author: Rob Thornburrow
* Project: Bethany (333)
*
* ----------------------------------------------------------------------------
* Copyright [2001] Pace Micro Technology PLC.  All rights reserved.
*
* The copyright in this material is owned by Pace Micro Technology PLC
* ("Pace").  This material is regarded as a highly confidential trade secret
* of Pace.  It may not be reproduced, used, sold, or in any other way exploited
* or transferred to any third party without the prior written permission of
* Pace.
*
* ----------------------------------------------------------------------------
* Purpose: This file will parse the environment variable LocaleList and
*          create an assembler source file containing the country codes
*          of the supported locales.
*
*          This must be run before the Messages module is built as the
*          Messages module includes the generated file.
*
* ----------------------------------------------------------------------------
* History: See source control system log
*
*****************************************************************************/


/*****************************************************************************
* Include header files
*****************************************************************************/
/* Include Standard headers */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#include <ctype.h>

#include "shared.h"

/*****************************************************************************
* FUNCTIONS
*****************************************************************************/

static void write_territory_number(const char *name, unsigned long terr_num, void *fileh)
{
  (void) fprintf(fileh, "\tDCB\t&%02lx\t\t; %s\n", terr_num, name);
}

static bool write_locale_list(const char *filename)
{
  FILE *asmfile;

  if ((asmfile = fopen(filename, "w")) == NULL) {
    report(EXIT_FAILURE, err_SERIOUS_ERROR, "Failed to create output file %s\n", filename);
  }

  fprintf(asmfile, "; > %s\n", filename);

  fputs(
    ";\n"
    "; THIS FILE IS AUTOMATICALLY GENERATED BY THE BUILD PROCESS - DO NOT MODIFY!\n"
    ";\n"
    "; If you do need to make a modification, do it to the LocaleChk source file\n"
    "; otherwise any changes will be lost during the next build.\n"
    "\n"
    "TerritoryList\n",
    asmfile);

  if (!parse_territories(NULL, write_territory_number, asmfile)) {
    report(EXIT_FAILURE, err_SERIOUS_ERROR, "Unable to parse territory list");
  }

  fputs(
    "\tDCB\t&FF\t\t; list terminator\n"
    "\tALIGN\n\n"
    "\tEND\n",
    asmfile);

  if (fclose(asmfile)) {
    report(EXIT_FAILURE, err_SERIOUS_ERROR, "Failed to write output file %s\n", filename);
  }

  return (true);
}

int main(int argc, char *argv[])
{
  const char *filename;

  shared_init(argc, argv);
  filename = argc > 1 ? argv[1] : "s.LocaleList";

  if (!write_locale_list(filename))
  {
    printf("Failed to write ^.s.LocaleList\n");
    exit(EXIT_FAILURE);
  }
  return 0;
}


/*****************************************************************************
* END OF FILE
*****************************************************************************/
