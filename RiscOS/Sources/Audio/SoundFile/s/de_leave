; > s.de_leave

                GET     hdr:ListOpts
                GET     hdr:Macros
                GET     hdr:APCS.<APCS>
		GET	hdr.soundfile

; r0 -> input data (word-aligned)
; r1 -> output data (word-aligned)
; r2 = number of bytes
; r3 -> sound format
; r14 = return address

; update r0 and r1 on output
; preserve all other registers

		AREA	|snd$$ASM|,CODE,READONLY

		EXPORT	check_interleave

; on input to check_interleave r0,r1,r3-r11 are stacked
; r0 and r1 have been updated for amount processed
; other registers are trashed

; original input was
; r0 -> input data (word-aligned)
; r1 -> output data (word-aligned)
; r2 = number of bytes
; r3 -> SoundFile_Format
; r14 = return address

; say we had interleave of 2
; data would be arranged (L1 = 2 bytes)

;   0    4    8    12   16
;   L1L2 R1R2 L3L4 R3R4

; need to translate to
;   L1R1 L2R2 L3R3 L4R4

; interleave       = 2 (r9)
; interleave bytes = 4 (r10)

; or
;   0    4    8    12   16
;   L1L2 L3L4 R1R2 R3R4 L5L6 L7L8 R5R6 R7R8

; need to translate to
;   L1R1 L2R2 L3R3 L4R4 L5R5 L6R6 L7R7 L8R8

; interleave       = 4 (r9)
; interleave bytes = 8 (r10)


check_interleave
		; get soundfile_format ptr
                LDR     r3, [sp, #2*4]

		; if mono then exit
		LDRB	r4, [r3, #SoundFile_Format_n_channels]
		CMP	r4, #1
		BEQ	%ft99

		; if no interleave then exit
		LDRB	r9, [r3, #SoundFile_Format_channel_interleave]
		CMP	r9, #1					; r9 = interleave (samples)
		BEQ	%ft99

		; make 16bit mask
		MOV	r11, #&ff				; r11 = mask
		ORR	r11, r11, #&ff00

		; restore original i/p and o/p and count
		MOV	r2, r1			; save updated output ptr
		LDMIA	sp, {r0,r1}
		SUB	r2, r2, r1		; get bytes output
		MOV	r2, r2, LSR #2		; n sample pairs to process

		MOV	r10, r9, ASL #1		; r10 = interleave in bytes

		; outer loop
10		MOV	r3, r9			; r3 = interleave value (inner loop counter)

		; inner loop
20		LDR	r4, [r0], r10		; 2 lefts + jump to second block r4 = L2L1
		LDR	r5, [r0], #4		; 2 rights                       r5 = R2R1

		AND	r6, r4, r11		; left 1	r6 = 00L1
		ORR	r6, r6, r5, LSL #16	; right 1	r6 = R1L1

		BIC	r7, r5, r11		; right 2	r7 = R200
		ORR	r7, r7, r4, LSR #16	; left 2	r7 = R2L2

		STMIA	r1!, {r6,r7}		; write LRLR

		; inner loop end
		SUBS	r3, r3, #2		; done 2 samples
		SUBGT	r0, r0, r10
		BGT	%bt20

		; outer loop end
		SUBS	r2, r2, r9		; done 'interleave' sample pairs in loop
		BGT	%bt10



		; exit keeping changed r0,r1 and restoring rest
99              ADD     sp, sp, #3*4
                Return  "v1-v6,sl,fp"

		END

eof s.de_leave
