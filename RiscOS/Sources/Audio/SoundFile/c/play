/* > play.c

 * © SJ Middleton, 1995

 */

#include "sf.h"

/* ----------------------------------------------------------------------------------------- */

extern void snd_E8To16(const void *in, void *out, int nsamples);
extern void snd_Mu8To16(const void *in, void *out, int nsamples);
extern void snd_A8To16(const void *in, void *out, int nsamples);

extern void snd_S8To16(const void *in, void *out, int nsamples);
extern void snd_U8To16(const void *in, void *out, int nsamples);

extern void snd_S12To16(const void *in, void *out, int nsamples);
extern void snd_U12To16(const void *in, void *out, int nsamples);

extern void snd_S16To16(const void *in, void *out, int nsamples);
extern void snd_U16To16(const void *in, void *out, int nsamples);

extern void snd_R16To16(const void *in, void *out, int nsamples);
extern void snd_UR16To16(const void *in, void *out, int nsamples);

typedef void (*soundfile_simple_convert_fn)(const void *in, void *out, int nbytes);

static soundfile_simple_convert_fn simple_to16_function[] =
{
    snd_S8To16, snd_U8To16,
    snd_E8To16, snd_E8To16,
    snd_Mu8To16, snd_Mu8To16,
    snd_A8To16, snd_A8To16,
    snd_S12To16, snd_U12To16,
    snd_S16To16, snd_U16To16,
    snd_R16To16, snd_UR16To16
};

void *get_to16_handler(soundfile_format *fmt)
{
    return (void *)simple_to16_function[fmt->data_format*2 + (fmt->flags & soundfile_DATA_IS_UNSIGNED ? 1 : 0)];
}

/* ----------------------------------------------------------------------------------------- */

/*
 * Data load description
 * r0 = stream handle
 * r1 = buffer
 * r2 = buffer size
 * r3 = sample offset to read from
 * On exit
 * r2 = buffer size used
 * r3 = actual sample offset of start of buffer (before or equal to that asked for)
 */

/*
os_error *default_data_load_handler(os_register_block *r)
{
    return stream_read((stream_id *)r->registers[0], (byte *)r->registers[1], r->registers[2], r->registers[3], &r->registers[3]);
}
 */

/*
 * To 16 description
 * r0 = src buffer
 * r1 = dst buffer
 * r2 = n bytes in src buffer
 * r3 -> soundfile_format
 * On exit
 * r0,r1 updated
 */

/* eof play.c */
