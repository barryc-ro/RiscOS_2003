/* > utils.c

 * © SJ Middleton, 1992

 */

#include <ctype.h>
#include <stdlib.h>
#include <string.h>

#include "utils.h"

/* --------------------------------------------------------------------- */

char *strdup(const char *s)
{
    char *s1 = NULL;
    if (s)
    {
        s1 = malloc(strlen(s) + 1);
        if (s1)
            strcpy(s1, s);
    }
    return s1;
}

char *strupr(char *s1)
{
    if (s1)
    {
        char *s = s1;
        int c;
        while ((c = *s) != '\0')
            *s++ = toupper(c);
    }
    return s1;
}

/* --------------------------------------------------------------------- */

/*
 * Read bytes from any alignment and return as an integer.
 */

int get_bytes(const void *a, int nbytes)
{
    char    buffer[4];
    int     i,
            pos_nbytes = nbytes < 0 ? - nbytes : nbytes,
            *ib = (int *)buffer;

    *ib = 0;

    for (i = 0; i < pos_nbytes; i++)
        buffer[nbytes < 0 ? -nbytes-i-1 : i] = ((char *)a)[i];

    return *ib;
}

/* --------------------------------------------------------------------- */

void ll_unlink(struct ll_header **base, struct ll_header *hdr)
{
    if (hdr->prev)
    	hdr->prev->next = hdr->next;
    else if (*base == hdr)
    	*base = hdr->next;

    if (hdr->next)
    	hdr->next->prev = hdr->prev;
}

void ll_link(struct ll_header **pbase, struct ll_header *hdr)
{
    struct ll_header *base = *pbase;
    hdr->next = base;
    if (base)
    	base->prev = hdr;
    *pbase = hdr;
}

/* --------------------------------------------------------------------- */

/* eof utils.c */
