/* > sf.h

 * © SJ Middleton, 1995

 */

#ifndef __sf_h
#define __sf_h

#ifndef __stream_h
# include "stream.h"
#endif

#ifndef soundfile_H
# include "soundfile.h"
#endif

/* -------------------------------------------------------------------------------------------------- */

/*
 * Ptr to this structure is returned as a soundfile_id.
 */

#define CONTEXT_ID      ('S' + ('N'<<8) + ('D'<<16)+ ('F'<<24))

typedef struct sf_context
{
    struct sf_context	    *prev;
    struct sf_context	    *next;

    int                     id;	    	    /* CONTEXT_ID - to check ptr is real */
    stream_context          stream;
    soundfile_format	    format;
    osgbpb_info_stamped     file_info;
} sf_context;

/* -------------------------------------------------------------------------------------------------- */

/* SWI handling functions */

/* From open.c */

extern os_error *sf_open(bits flags, const void *data, soundfile_format *format_out, sf_context **id_out, soundfile_stream **stream_out);
extern os_error *sf_close(bits flags, sf_context *sf);
extern os_error *sf_read_data(bits flags, sf_context *sf, byte **buffer_addr, int *nbytes_addr, int *index_addr);
extern void *sf_misc_op_return_table(int data_format);

extern os_error *sf_check(sf_context *sf);
extern os_error *sf_close_all(void);
extern os_error *sf_can_kill(void);

extern int bytes_to_samples(const soundfile_format *fmt, int nbytes);
extern int samples_to_bits(const soundfile_format *fmt, int nsamples);

/* -------------------------------------------------------------------------------------------------- */

/* From play.c */

extern void *get_to16_handler(soundfile_format *fmt);

/* -------------------------------------------------------------------------------------------------- */

#endif

/* eof sf.h */
