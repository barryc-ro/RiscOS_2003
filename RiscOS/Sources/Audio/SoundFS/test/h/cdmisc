/* File:    main.h
 * Purpose: Main definitions for CDFS
 * Author:  Timothy Roddis
 * History: 16-Oct-95: TGR: created
 */

/* #pragma include_only_once*/

#ifndef __maindefs_h
#define __maindefs_h

#include "defines.h"
#include "msgs.h"

/***********************************************************************************************
 * OS related definitions                                                                      *
 ***********************************************************************************************/

#define OS_ErrorNumberBitMask                 ((1U<<24)-1)

#define OS_Error_SWINotKnown                  0x1e6

#define OS_Byte_ReadCMOSRAM                   161
#define OS_Byte_WriteCMOSRAM                  162

#define CMOS_CDFSLocation                     138

#define OS_UpCall_MediaNotPresent             1
#define OS_UpCall_MediaNotKnown               2
#define OS_UpCall_MediaSearchEnd              4

#define OS_UpCall_Media_Changed                0
#define OS_UpCall_Media_NotWanted             -1

#define OS_FSControl_SetCurrentDir            0
#define OS_FSControl_SetLibrary               1
#define OS_FSControl_SetTemporaryFileSystem   11
#define OS_FSControl_AddFileSystem            12
#define OS_FSControl_SelectFS                 14
#define OS_FSControl_RemoveFileSystem         16
#define OS_FSControl_RestoreCurrentFileSystem 19
#define OS_FSControl_Canonicalise             37
#define OS_FSControl_UnsetCurrentDir          43
#define OS_FSControl_UnsetUserRoot            44
#define OS_FSControl_UnsetLibrary             45
#define OS_FSControl_SetDirPath               53
#define OS_FSControl_ReadDirPath              54

#define OS_FSControl_Special_Current          0
#define OS_FSControl_Special_Previous         1
#define OS_FSControl_Special_UserRoot         2
#define OS_FSControl_Special_Library          3

#define Service_FSRedeclare                   0x40
#define Service_CloseFile                     0x68
#define Service_DiscDismounted                0x7d

#define OS_Find_CloseFile                     0

#define OS_ReadUnsignedFlags_RestrictRangeR2  (1U<<29)
#define OS_ReadUnsignedFlags_RestrictRange255 (1U<<30)
#define OS_ReadUnsignedFlags_CheckTerminator  (1U<<31)

typedef char OS_UTC[5];

/***********************************************************************************************
 * FileSwitch & File System Definitions                                                        *
 ***********************************************************************************************/

#define FS_DirectorySeparator                '.'
#define FS_RootDirectoryIdentifier           '$'
#define FS_NameAndDiscSpecSeparator          ':'

#define FS_NameAndDiscSpecSeparatorString    ":"

#define FS_MaxPathnameLength                 256

extern const char FS_DirectoryDelimiterString[];
extern const char FS_Library[];

#define FS_Library_Length                    8

#define FS_DiscNameDelimiterString FS_DirectoryDelimiterString

#define FS_TruncateLength                    10

/* Rogue filetype value for filetype not found (when dealing with extensions) */

#define FS_FileType_NotFound                 (-1)
#define FS_FileType_Data                      0xffd

#define FS_LoadAddr_DateStampIndicator       0xfff00000U
#define FS_LoadAddr_DateStampBitMask         0xfff00000U
#define FS_LoadAddr_FileTypeShift            8
#define FS_LoadAddr_UTCBitMask               0xff

/* fileswitch object types */

#define FS_ObjectType_NotFound               0
#define FS_ObjectType_File                   1
#define FS_ObjectType_Directory              2

/* fileswitch protection bits (attributes) */

#define FS_Attribs_OwnerRead                 (1)
#define FS_Attribs_OwnerWrite                (1U<<1)
#define FS_Attribs_OwnerExecute              (1U<<2)
#define FS_Attribs_OwnerLocked               (1U<<3)
#define FS_Attribs_PublicRead                (1U<<4)
#define FS_Attribs_PublicWrite               (1U<<5)
#define FS_Attribs_PublicLocked              (1U<<7)

/* fileswitch openfile entry point information word values */

#define FS_OpenFile_IW_WritePermitted        (1U<<31)
#define FS_OpenFile_IW_ReadPermitted         (1U<<30)
#define FS_OpenFile_IW_DirectoryObject       (1U<<29)
#define FS_OpenFile_IW_UnbufferedOSGPB       (1U<<28)
#define FS_OpenFile_IW_Interactive           (1U<<27)

typedef struct _information_block {

   int   filing_system_name;
   int   startup_text;
   int   fsentry_open;
   int   fsentry_get_bytes;
   int   fsentry_put_bytes;
   int   fsentry_args;
   int   fsentry_close;
   int   fsentry_file;
   int   information_word;
   int   fsentry_func;
   int   fsentry_gbpb;
   int   extra_info_word;
} FS_InformationBlock;

#define FS_IW_SpecialFieldsSuported    (1U<<31)
#define FS_IW_InteractiveStreams       (1U<<30)
#define FS_IW_NullLengthNamesSupported (1U<<29)
#define FS_IW_CallOpenNonExistentFiles (1U<<28)
#define FS_IW_InformFSOfFlushes        (1U<<27)
#define FS_IW_SupportsFSEntry_File9    (1U<<26)
#define FS_IW_SupportsFSEntry_Func20   (1U<<25)
#define FS_IW_Reserved                 (1U<<24)
#define FS_IW_ImageFilingSystem        (1U<<23)
#define FS_IW_UseURDandLibSymbols      (1U<<22)
#define FS_IW_NeedNotStoreDirectories  (1U<<21)
#define FS_IW_DoNotUseFile255          (1U<<20)
#define FS_IW_DoNotUseFile0            (1U<<19)
#define FS_IW_UseFSEntry_Func9         (1U<<18)
#define FS_IW_ExtraFilingSystemWord    (1U<<17)
#define FS_IW_FilingSystemIsReadOnly   (1U<<16)

#define FS_IW_MaxNumberOfFilesOpen     (1U<<8)
#define FS_IW_FilingSystemNumber       (1U)

/* Filing System Extra Information Word (FSEW) */

#define FS_EW_SupportsFSEntry_Func34   (1U)
#define FS_EW_CallFSToDoCat            (1U<<1)
#define FS_EW_CallFSToDoEx             (1U<<2)
   /* ... the remainder is reserved */

typedef struct _fs_entry_func_15_record {
   unsigned int load_addr;
   unsigned int exec_addr;
   unsigned int length;
   unsigned int attribs;
   unsigned int object_type;
   char         name[1];
} FSEntry_Func15_Rec, *FSEntry_Func15_Ptr;

typedef struct _fs_enty_func_19_record {
   unsigned int load_addr;
   unsigned int exec_addr;
   unsigned int length;
   unsigned int attribs;
   unsigned int object_type;
   unsigned int system_internal_name;
   OS_UTC       utc;
   char         name[1];
} FSEntry_Func19_Rec, *FSEntry_Func19_Ptr;

/* Entry point reason codes not supported for a read-only FS */

#define FSEntry_File_Save              0
#define FSEntry_File_WriteCatInfo      1
#define FSEntry_File_WriteLoadAddr     2
#define FSEntry_File_WriteExecAddr     3
#define FSEntry_File_WriteAttribs      4
#define FSEntry_File_DeleteObject      6
#define FSEntry_File_CreateObject      7
#define FSEntry_File_CreateDirectory   8

#define FSEntry_Func_SetFSOptions      7
#define FSEntry_Func_RenameObject      8
#define FSEntry_Func_SetAccessRights   9
#define FSEntry_Func_AddDefect         24
#define FSEntry_Func_WriteBootOption   28
#define FSEntry_Func_NameImage         31
#define FSEntry_Func_StampImage        32

/***********************************************************************************************
 * TypeMapper Definitions                                                                      *
 ***********************************************************************************************/

 /* SWIs - remove later */

 #define TypeMap_ExtensionToType                0x4be40

/***********************************************************************************************
 * Various Colour Book definitions, XA etc.                                                    *
 ***********************************************************************************************/

#define TOC_DiscType_RedOrYellowBook            0
#define TOC_DiscType_CDI                       (0x10)
#define TOC_DiscType_CDROMXA                   (0x20)

#define RedBook_MaxTracks                       99


/***********************************************************************************************
 * High Sierra Definitions                                                                     *
 ***********************************************************************************************/

extern const char HiSierra_PVD_StandardIdentifier[];   /* "CDROM" without terminator */

#define HiSierra_PVD_StandardIdentifierLength    5

#define HiSierra_PVD_StandardIdentifierOffset    9
#define HiSierra_PVD_SystemIdentifierOffset     16
#define HiSierra_PVD_VolumeIdentifierOffset     48
#define HiSierra_PVD_LogicalBlockSizeOffset    136
#define HiSierra_PVD_PathTableSizeOffset       140
#define HiSierra_PVD_RootDirRecOffset          180
#define HiSierra_PVD_VolumeSetIdentifierOffset 214

#define HiSierra_DirRec_InterleaveGapOffset    26
#define HiSierra_DirRec_FlagsOffset            24

/***********************************************************************************************
 * ISO 9660 Definitions                                                                        *
 ***********************************************************************************************/

#define ISO9660_LogicalSectorSize            2048

#define ISO9660_SessionOffsetForPVD           16

#define ISO9660_StartYearOffset              1900

/* Offset to big-endian values */

/* PVD = Primary Volume Descriptor */

#define ISO9660_PVD_VolDescriptTypeOffset       0
#define ISO9660_PVD_StandardIdentifierOffset    1
#define ISO9660_PVD_VolDescriptVersionOffset    6
#define ISO9660_PVD_SystemIdentifierOffset      8
#define ISO9660_PVD_VolumeIdentifierOffset     40
#define ISO9660_PVD_VolumeSpaceSizeOffset      84
#define ISO9660_PVD_LogicalBlockSizeOffset    130
#define ISO9660_PVD_PathTableSizeOffset       132
#define ISO9660_PVD_PathTableAddressOffset    148
#define ISO9660_PVD_RootDirRecOffset          156

#define ISO9660_PVD_StandardIdentifierLength    5
#define ISO9660_PVD_VolumeIdentifierLength     32

/* This next value should, in fact, be 34, but some discs (eg. Dinosaurs! [CMM CD 101])
   are incorrectly mastered in this respect */

#define ISO9660_PVD_RootDirRecLength           256

extern const char ISO9660_PVD_StandardIdentifier[]; /* "CD001" without terminator */

/* M-type path table ('though just as true for L-type) */

#define ISO9660_PathTable_DirIdentLenOffset   0
#define ISO9660_PathTable_EARLenOffset        1
#define ISO9660_PathTable_ExtentAddrOffset    2
#define ISO9660_PathTable_ParentDirNoOffset   6

#define ISO9660_Directory_FirstDirRecLen      34

/* The big-endian values are used */

#define ISO9660_DirRec_RecordLenOffset         0
#define ISO9660_DirRec_EARLenOffset            1
#define ISO9660_DirRec_ExtentAddrOffset        6
#define ISO9660_DirRec_DataLenOffset          14
#define ISO9660_DirRec_DateOffset             18
#define ISO9660_DirRec_FlagsOffset            25
#define ISO9660_DirRec_UnitSizeOffset         26
#define ISO9660_DirRec_InterleaveGapOffset    27
#define ISO9660_DirRec_SequenceNoOffset       30
#define ISO9660_DirRec_FileIdentLenOffset     32
#define ISO9660_DirRec_FileIdentOffset        33

#define ISO9660_DirRec_MinLength              34

#define ISO9660_DirecRec_MaxLength            255


/* See ISO 9660 Table 10 pg 20 of first edition. Flags are existence, directory,
   associated fie, record, protection, reserved, multi-extent */

#define ISO9660_DirRec_Flags_Hidden           1
#define ISO9660_DirRec_Flags_Directory        (1U<<1)
#define ISO9660_DirRec_Flags_AssociatedFile   (1U<<2)
#define ISO9660_DirRec_Flags_RecordFormat     (1U<<3)
#define ISO9660_DirRec_Flags_Protection       (1U<<4)
#define ISO9660_DirRec_Flags_MultiExtent      (1U<<5)

#define ISO9660_DirRec_Separator1             '.'
#define ISO9660_DirRec_Separator2             ';'

typedef struct _iso9660_date {
   char        years;
   char        months;
   char        days;
   char        hours;
   char        minutes;
   char        seconds;
   signed char offset;
} ISO9660_Date;

/***********************************************************************************************
 * CD-I Definitions                                                                            *
 ***********************************************************************************************/

extern const char CDI_PVD_StandardIdentifier[];   /* "CD-I " without terminator */

#define CDI_PVD_StandardIdentifierLength     5

#define CDI_PathTable_NameSizeOffset         0
#define CDI_PathTable_EARLenOffset           1
#define CDI_PathTable_DirBlockAddrOffset     2
#define CDI_PathTable_ParentDirNumberOffset  6
#define CDI_PathTable_DirNameOffset          8

#define CDI_SysUse_OwnerIDOffset             0
#define CDI_SysUse_AttributesOffset          4
#define CDI_SysUse_FileNumberOffset          8

#define CDI_SysUseLength                     10

#define CDI_SysUseAttribs_DigitalAudio       (1U<<14)
#define CDI_SysUseAttribs_Directory          (1U<<15)

/***********************************************************************************************
 * CD-ROM/XA Definitions                                                                       *
 ***********************************************************************************************/

extern const char XA_PVD_IdentifyingSignature[]; /* "CD-XA001" without terminator*/

#define XA_PVD_IdentifyingSignatureOffset    1024

#define XA_PVD_IdentifyingSignatureLength    8

#define XA_SysUse_OwnerIDOffset              0
#define XA_SysUse_AttributesOffset           4
#define XA_SysUse_SignatureOffset            6
#define XA_SysUse_FileNumberOffset           8

/* The following is BIG-ENDIAN */

#define XA_SysUse_Signature                  (('X'<<8)|'A')

#define XA_SysUseLength                      14

#define XA_SysUseAttribs_IncludesForm1       (1U<<11)
#define XA_SysUseAttribs_IncludesForm2       (1U<<12)
#define XA_SysUseAttribs_Interleaved         (1U<<13)
#define XA_SysUseAttribs_DigitalAudio        (1U<<14)
#define XA_SysUseAttribs_Directory           (1U<<15)

extern const char XABridge_PVD_SystemIdentifier[];

#define XABridge_PVD_SystemIdentifierLength  17

/***********************************************************************************************
 * General Definitions for the next three categories                                           *
 ***********************************************************************************************/

 #define CD_InfoFile_MagicNumberLength       8

/***********************************************************************************************
 * Video CD Definitions                                                                        *
 ***********************************************************************************************/

#define VideoCD_MusicFile                    "MPEGAV.MUSIC01/DAT"
#define VideoCD_AVFile                       "MPEGAV.AVSEQ01/DAT"
#define VideoCD_InfoFile                     "VCD.INFO/VCD"

#define VideoCD_InfoFileLocation             150

#define VideoCD_InfoFile_MagicNumber         "VIDEO_CD"

/***********************************************************************************************
 * Photo CD Definitions                                                                        *
 ***********************************************************************************************/

#define PhotoCD_InfoFile                     "PHOTO_CD.INFO/PCD"

#define PhotoCD_InfoFile_MagicNumber         "PHOTO_CD"

/***********************************************************************************************
 * Enhanced Music CD Definitions                                                               *
 ***********************************************************************************************/

#define EnhancedCD_InfoFile                  "CDPLUS.INFO/CDP"

#define EnhancedCD_InfoFile_MagicNumber      "CD_PLUS "

/***********************************************************************************************
 * ISOFORM Definitions                                                                         *
 ***********************************************************************************************/

extern const char ISOFORM_SysUse_Archimedes[]; /* "ARCHIMEDES" without terminator */

#define ISOFORM_SysUse_ArchimedesLength      10

#define ISOFORM_SysUse_LoadAddrOffset        10
#define ISOFORM_SysUse_ExecAddrOffset        14
#define ISOFORM_SysUse_FileAttribOffset      18

#define ISOFORM_SysUseLength                 32

#define ISOFORM_SysUseAttribs_PlingFile      (1<<8)

/***********************************************************************************************
 * CDManager Definitions                                                                       *
 ***********************************************************************************************/

/* SWIs and reason codes: */

#define CDMgr_SWIChunkBase                   0x4b740

#define CDMgr_Version                        (CDMgr_SWIChunkBase)
#define CDMgr_GetSupported                   (CDMgr_SWIChunkBase + 1)
#define CDMgr_ReadTOC                        (CDMgr_SWIChunkBase + 2)
#define CDMgr_DriveOp                        (CDMgr_SWIChunkBase + 3)
#define CDMgr_ReadData                       (CDMgr_SWIChunkBase + 4)
#define CDMgr_AudioOp                        (CDMgr_SWIChunkBase + 5)
#define CDMgr_ConvertBlockToMSF              (CDMgr_SWIChunkBase + 6)
#define CDMgr_ConvertMSFToBlock              (CDMgr_SWIChunkBase + 7)
#define CDMgr_MiscOp                         (CDMgr_SWIChunkBase + 8)
#define CDMgr_CallDeviceDriver               (CDMgr_SWIChunkBase + 9)

#define CDMgr_ReadTOCFlags_ReturnTrackInfo   (1U<<31)
#define CDMgr_ReadTOCFlags_ReturnSessionInfo (1U<<30)

#define CDMgr_DriveOp_GetSequenceNumber      0
#define CDMgr_DriveOp_GetPhysicalLocation    1
#define CDMgr_DriveOp_DriveStatus            2
#define CDMgr_DriveOp_GetDriveSpeed          3
#define CDMgr_DriveOp_SetDriveSpeed          4
#define CDMgr_DriveOp_GetVolume              5
#define CDMgr_DriveOp_SetVolume              6
#define CDMgr_DriveOp_OpenDrawer             7
#define CDMgr_DriveOp_CloseDrawer            8
#define CDMgr_DriveOp_GetLockedStatus        9
#define CDMgr_DriveOp_LockDrive              10
#define CDMgr_DriveOp_UnlockDrive            11
#define CDMgr_DriveOp_EnumerateDrives        12
#define CDMgr_DriveOp_BusyTimeOut            13

#define CDMgr_ReadDataFlags_Continuous       (1U<<31)

#define CDMgr_ReadData_User                  0
#define CDMgr_ReadData_Raw                   1

#define CDMgr_AudioOp_PlayFromAddress        0
#define CDMgr_AudioOp_PlayTracks             1
#define CDMgr_AudioOp_Stop                   2
#define CDMgr_AudioOp_Pause                  3
#define CDMgr_AudioOp_Resume                 4
#define CDMgr_AudioOp_ScanForward            5
#define CDMgr_AudioOp_ScanReverse            6
#define CDMgr_AudioOp_AudioStatus            7

#define CDMgr_Convert_TimeCodePackedFormat   (1U<<31)

#define CDMgr_MiscOp_WhichDisc               0
#define CDMgr_MiscOp_GiveSectorDataMode      1
#define CDMgr_MiscOp_Seek                    2
#define CDMgr_MiscOp_Address                 3

#define CDMgr_CallDeviceDriver_NoTransfer    0
#define CDMgr_CallDeviceDriver_Read          1
#define CDMgr_CallDeviceDriver_Write         3


#define CDMgr_Support_CoreAudio              (1U)
#define CDMgr_Support_AudioVolume            (1U<<1)
#define CDMgr_Support_AudioScan              (1U<<2)
#define CDMgr_Support_OrangeBook             (1U<<3)
#define CDMgr_Support_MotorDrawer            (1U<<4)
#define CDMgr_Support_ReadAudio              (1U<<5)
#define CDMgr_Support_Mode2Form2             (1U<<6)
#define CDMgr_Support_BackgroundXFer         (1U<<7)
#define CDMgr_Support_ContinuousXFer         (1U<<8)
#define CDMgr_Support_Read_ECC_EDC           (1U<<9)
#define CDMgr_Support_Read_BlankBits         (1U<<10)
#define CDMgr_Support_Read_Header            (1U<<11)
#define CDMgr_Support_Read_Subheader         (1U<<12)

#define CDMgr_ReadTOC_ReturnTrackInfo        (1U<<31)
#define CDMgr_ReadTOC_ReturnSessionInfo      (1U<<30)

typedef struct _cdmgr_track_info_rec {
   unsigned int address;
   unsigned int audio_mode;
} CDMgr_ReadTOC_TrackInfoRec, *CDMgr_ReadTOC_TrackInfoPtr;

typedef struct _cdmgr_read_toc_block {
   unsigned int                disc_size;
   unsigned int                disc_type;
   unsigned int                first_track;
   unsigned int                last_track;
   unsigned int                first_session;
   unsigned int                last_session;
} CDMgr_ReadTOC_Rec, *CDMgr_ReadTOC_Ptr;

#define CDMgr_DataMode_Invalid               (-1)
#define CDMgr_DataMode_ZeroSector            0
#define CDMgr_DataMode_Mode1                 1
#define CDMgr_DataMode_Mode2                 2
#define CDMgr_DataMode_Mode1OrMode2Form1     (0x10000)

#define CDMgr_AudioModeFlags_Data            (1U<<2)

#define CDMgr_SWIBase                        0x4b740

#define CDMgr_ErrorBase                      0x80E200

#define CDMgr_Error_MediaChanged             (CDMgr_ErrorBase)
#define CDMgr_Error_NotPresent               (CDMgr_ErrorBase + 1)
#define CDMgr_Error_BecomingReady            (CDMgr_ErrorBase + 2)
#define CDMgr_Error_NotResponding            (CDMgr_ErrorBase + 3)
#define CDMgr_Error_WrongSectorMode          (CDMgr_ErrorBase + 6)
#define CDMgr_Error_ShortBuffer              (CDMgr_ErrorBase + 9)
#define CDMgr_Error_DriveNotKnown            (CDMgr_ErrorBase + 10)

/***********************************************************************************************
 * Miscellaneous Macros                                                                        *
 ***********************************************************************************************/

/* The next two are not used */

#define M_byteswap_word(B, A) { \
   unsigned int __a; __a = (A); \
   (B) = (__a >> 24) | (__a << 24) | ((__a & 0xff00U) << 8) | ((__a & 0xff0000U) >> 8);   }

#define M_byteswap_short(B, A) { \
   unsigned short __a; __a = (A); \
   (B) = (__a >> 8) | (__a << 8);                                                         }

/* not word-aligned loads are handled by the following macros */

/* loadxxxx_xxxxendian load the non-byte aligned B into A */

#if FALSE
#define M_loadword_bigendian(A, B) { \
   char * __b = (char *)(B); \
   (A) = ((unsigned)(*__b) << 24) | (*(__b+1) << 16) | (*(__b+2) << 8) | *(__b+3);}
#else /* A pedantic version of the above to try and circumvent an apparent compiler fault */

#define M_loadword_bigendian(A, B) { \
   volatile char *__b = (char *)(B); \
   unsigned int __a = 0; \
   __a  = ((unsigned int)(__b[0])) << 24; \
   __a |= ((unsigned int)(__b[1])) << 16; \
   __a |= ((unsigned int)(__b[2])) << 8; \
   __a |= ((unsigned int)(__b[3])); \
   (A) = __a; \
}
#endif

#define M_loadword_littleendian(A, B) { \
   char * __b = (char *)(B); \
   (A) = (unsigned)*__b | (*(__b+1) << 8) | (*(__b+2) << 16) | (*(__b+3) << 24);}

#define M_loadshort_bigendian(A, B) { \
   char * __b = (char *)(B); \
   (A) = (*__b << 8) | *(__b+1);}

#define M_loadshort_littleendian(A, B) { \
   char *__b = (char *)(B); \
   (A) = *__b | (*(__b+1) << 8);}

/* store B into the non byte-aligned A */

#define M_storeword_littleendian(A, B) { \
   char *__a = (char *)(A); \
   unsigned int __b  = (unsigned int)(B); \
   __a[0] =  __b        & 0xff; \
   __a[1] = (__b >>  8) & 0xff; \
   __a[2] = (__b >> 16) & 0xff; \
   __a[3] = (__b >> 24) & 0xff;}


/***********************************************************************************************
 * CDFS Definitions                                                                            *
 ***********************************************************************************************/

#ifdef TESTFS

#define CDFS_FileSystemString                "TEST"
#define CDFS_FileSystemName_Length           4
#define CDFS_FSNumber                        127U

#else

#define CDFS_FileSystemString                "CDFS"
#define CDFS_FileSystemName_Length           4
#define CDFS_FSNumber                        37U

#endif

/* Actually defined in cdfs */

extern const char CDFS_FileSystemName[];     /* CDFS_FileSystemString */
extern const char CDFS_MediumType[];         /* "CDROM" */


#define CDFS_MapSpaceToChar                  '_'
#define CDFS_MapSeparator1ToChar             '/'
#define CDFS_MapIllegalToChar                '?'
#define CDFS_MapCharToPling                  '_'
#define CDFS_PrefixToNumericalDiscname       '_'

#define CDFS_MaxFileNameComponentLength      256

#ifdef STARTUP_TEXT
#define CDFS_StartupText                     (CDFS_FileSystemName)
#endif

#define CDFS_DiscTypeFlags_MultiSession      1
#define CDFS_DiscTypeFlags_CDROM             (1U<<1)
#define CDFS_DiscTypeFlags_CDI               (1U<<2)
#define CDFS_DiscTypeFlags_XA_TOC            (1U<<3)
#define CDFS_DiscTypeFlags_XA_PVD            (1U<<4)
#define CDFS_DiscTypeFlags_CDIBridge         (1U<<5)
#define CDFS_DiscTypeFlags_VideoCD           (1U<<6)
#define CDFS_DiscTypeFlags_PhotoCD           (1U<<7)
#define CDFS_DiscTypeFlags_EnhancedAudioCD   (1U<<8)
#define CDFS_DiscTypeFlags_HiSierra          (1U<<9)

#define CDFS_NumDiscInfoRecords              32

#define CDFS_DirInfoFlags_Interleaved        (1U<<31)

/* Timeout values in centiseconds */

#define CDFS_UpCall_TimeoutValue             200

#define CDFS_DriveTimeoutValue               20

#define CDFS_CMOS_Zero                       4
#define CDFS_CMOS_RangeMin                   5
#define CDFS_CMOS_Default                    7
#define CDFS_CMOS_RangeMax                   12

#define CDFS_CMOS_RangeCorrection            2

/***********************************************************************************************
 * SWIs                                                                                        *
 ***********************************************************************************************/

#define CDFS_SWIChunkBase                    0x4be00

#define CDFS_LogicalBlockSize                CDFS_SWIChunkBase
#define CDFS_LocateFile                      (CDFS_SWIChunkBase + 1)
#define CDFS_ISODirectoryRecord              (CDFS_SWIChunkBase + 2)
#define CDFS_DiscType                        (CDFS_SWIChunkBase + 3)
#define CDFS_CurrentDrive                    (CDFS_SWIChunkBase + 4)


/***********************************************************************************************
 * Error Numbers                                                                               *
 ***********************************************************************************************/

/* !!! Remove comments in the following and subtract error base from each error number */

/* CDFS specific */

#define CDFS_ErrorBase                      (0x10000 + (CDFS_FSNumber<<8))

#define Error_UnSupported                   (PROG_ERR|CDFS_ErrorBase)
#define Error_ReadOnly                      (CDFS_ErrorBase + 1) /* CDFS is read only */
#define Error_AudioDisc                     (CDFS_ErrorBase + 2) /* */
#define Error_NotCDFSObject                 (CDFS_ErrorBase + 4)
#define Error_NotFile                       (CDFS_ErrorBase + 5) /* Object is not a file */
#define Error_MultiMatchedDiscName          (CDFS_ErrorBase + 7) /* Multi matches for discname */
#define Error_MemAlloc                      (PROG_ERR|CDFS_ErrorBase + 8) /* Out of Memory */
#define Error_Mode2Form2                    (CDFS_ErrorBase + 9) /* Cannot read mode 2 form 2 */
#define Error_Interleaved                   (CDFS_ErrorBase + 0xb)

/* Filecore-like errors (see PRM V.3 II-590 - II-591) */

#define Error_DriveNotKnown                 (CDFS_ErrorBase + 0xac)
#define Error_TooManyFiles                  (CDFS_ErrorBase + 0xc0)
#define Error_DriveEmpty                    (CDFS_ErrorBase + 0xd3)
#define Error_DiscNotFound                  (CDFS_ErrorBase + 0xd4) /* &D4 - Disc Not Found */
#define Error_DiscNotPresent                (CDFS_ErrorBase + 0xd5) /* &D5 - Disc Not Present */
#define Error_ObjectNotFound                (CDFS_ErrorBase + 0xd6) /* &D6 - Object Not Found */
#define Error_BadFormat                     (CDFS_ErrorBase + 0xd7) /* &D7  */


/***********************************************************************************************
 * Types (internal)                                                                            *
 ***********************************************************************************************/

typedef struct _disc_info_record {
   signed   int    drive_no;
   signed   int    sequence_no;
   unsigned int    epoch;   /* The 'age' of this disc record - ie. when it was last accessed */
   unsigned int    type;
   unsigned int    root_dir_addr;
   unsigned int    root_dir_size;
   unsigned int    whichdisc;
   unsigned short  logical_block_size;
   char            name[ISO9660_PVD_VolumeIdentifierLength+1]; /* To include terminator if necessary */
} DiscInfoRec, *DiscInfoPtr;


/* The attributes field of the following has been removed, but could be put in if Extended
   Attribute Record support is added */

typedef struct _directory_info {
   unsigned int    object_type; /* often: 0 not found, 1 file, 2 directory */
   unsigned int    attribs; /* RISC OS attributes */
   unsigned int    dir_rec_length;
   void           *dir_rec_ptr; /* Only CDFS_ISODirectoryRecord & _LocateFile use this */
   unsigned int    load_addr;
   unsigned int    exec_addr;
   unsigned int    disc_addr; /* LBA */
   unsigned int    size;
   unsigned int    flags; /* ISO 9660 attributes + interleaved flag */
   char            name[FS_MaxPathnameLength];
} DirInfoRec, *DirInfoPtr;

typedef char SectorBuffer[ISO9660_LogicalSectorSize];

typedef struct _file_open_block {
   struct _file_open_block  *next;
   int                       file_start_addr;
   int                       fileswitch_handle;
   DiscInfoPtr               disc_info;
} FileOpenRec, *FileOpenPtr;


/***********************************************************************************************
 * Globals                                                                                     *
 ***********************************************************************************************/

extern unsigned int     global_no_directory_buffers;
extern unsigned int     global_no_disc_info_records;
extern unsigned int     global_current_drive;
extern FileOpenPtr      global_files_open;


#endif
