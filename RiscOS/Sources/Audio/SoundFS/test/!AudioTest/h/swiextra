/* File:    swiextra.h
 * Purpose: Extra SWI stuff
 * Author:  Timothy Roddis
 * History: 8-Dec-96: TGR: created
 */

#include "swis.h"

/* WARNING! WARNING! WARNING!
 * SWIs, and therefore __swi functions corrupt R14 in supervisor mode (eg. in modules)
 */


/* First OS stuff */

#define OS_Args_ReadExtent                      2
#define OS_Args_WriteExtent                     3
#define OS_Args_ReadAllocatedSize               4
#define OS_Args_ReadEOFStatus                   5
#define OS_Args_Ioctl                           9
#define OS_Args_Info                          254

#define OS_Args_Info_DirectoryFlag              (1U<<5)

#define OS_Byte_EnDisableCursorEdit             4
#define OS_Byte_ReadKeyboard                  129
#define OS_Byte_ReadCMOSRAM                   161
#define OS_Byte_WriteCMOSRAM                  162
#define OS_Byte_RdWrTabValue                  219
#define OS_Byte_EnDisableEscape               229

typedef struct _os_byte_return {
   int r0;
   int r1;
   int r2;
} OS_Byte_Return;

OS_Byte_Return __value_in_regs __swi (OS_Byte|XOS_Bit) os_byte (int r0, int r1, int r2);

#define OS_Device_ExpansionCardIRQ             13
//#define OS_Device_AD1816IRQ                   (-1)
//#define OS_Device_MPU401

#define OS_DynamicArea_Create                    0
#define OS_DynamicArea_Remove                    1
#define OS_DynamicArea_Info                      2
#define OS_DynamicArea_Enumerate                 3
#define OS_DynamicArea_Renumber                  4


#define OS_DynamicArea_NotBufferableFlag         (1U<<4)
#define OS_DynamicArea_NotCacheableFlag          (1U<<5)
#define OS_DynamicArea_DoublyMappedFlag          (1U<<6)
#define OS_DynamicArea_NotDraggableFlag          (1U<<7)
#define OS_DynamicArea_ParticularPhysPagesFlag   (1U<<8)

#define OS_ErrorNumberBitMask                    ((1U<<24)-1)

#define OS_Error_SWINotKnown                  0x1e6

#define OS_File_CreateTyped                     11
#define OS_File_Load                            12

#define OS_Find_Close                         0x00
#define OS_Find_OpenRead                      0x40
#define OS_Find_CreateReadWrite               0x80
#define OS_Find_OpenReadWrite                 0xc0

#define OS_Find_PathString                       1
#define OS_Find_PathVariable                     2
#define OS_Find_NoPath                           3

#define OS_FSControl_Rename                     25

#define OS_GBPB_WriteCurrentPos                  2
#define OS_GBPB_ReadCurrentPos                   4
#define OS_GBPB_FullInfo                        11

enum os_gbpb_full { /* integer indexes for OS_GBPB 10-12 */
  OS_GBPB_Full_Load, OS_GBPB_Full_Exec, OS_GBPB_Full_Length,
  OS_GBPB_Full_Attrib, OS_GBPB_Full_ObjType
};

#define OS_Plot_MoveRelative                     0
#define OS_Plot_PlotRelative_FCol                1
#define OS_Plot_PlotRelative_Inverse             2
#define OS_Plot_PlotRelative_BCol                3
#define OS_Plot_MoveAbsolute                     4
#define OS_Plot_PlotAbsolute_FCol                5
#define OS_Plot_PlotAbsolute_Inverse             6
#define OS_Plot_PlotAbsolute_BCol                7

#define OS_Plot_SolidLine                        0
#define OS_Plot_TriangleFill                    80
#define OS_Plot_RectangleFill                   96
#define OS_Plot_CircleFill                     152
#define OS_Plot_CircularArc                    160
#define OS_Plot_SegmentFill                    168
#define OS_Plot_SectorFill                     176

void __swi (OS_Plot|XOS_Bit) os_plot (unsigned int plot_type, int x, int y);

#define OS_ReadModeVariable_ModeFlags            0
#define OS_ReadModeVariable_NColour              3
#define OS_ReadModeVariable_XEigFactor           4
#define OS_ReadModeVariable_YEigFactor           5
#define OS_ReadModeVariable_Log2BPP              9
#define OS_ReadModeVariable_XWindLimit          11
#define OS_ReadModeVariable_YWindLimit          12

#define OS_ReadModeVariable_TrueColFlag          (1U<<7)

#define OS_ReadUnsigned_RestrictRangeR2Flag      (1U<<29)
#define OS_ReadUnsigned_RestrictRange255Flag     (1U<<30)
#define OS_ReadUnsigned_CheckTerminatorFlag      (1U<<31)

#define OS_ScreenMode_SelectMode                 0
#define OS_ScreenMode_ReadMode                   1

#define OS_SetColour_Background                  (1U<<4)

void __swi (OS_SetColour|XOS_Bit) os_set_colour (unsigned int flags, int colour_no);

#define OS_SpriteOp_InitSpriteArea               9
#define OS_SpriteOp_CreateSprite                15
#define OS_SpriteOp_PutSprite                   28
#define OS_SpriteOp_ReadInfo                    40
#define OS_SpriteOp_SwitchOPToSprite            60
#define OS_SpriteOp_ReadSaveAreaSize            62

#define OS_SpriteOp_UserSpriteArea               (1U<<8)


typedef struct _sprite_control_block {

   unsigned int  total_size;
   unsigned int  no_sprites;
   int           sprite1_offset;
   int           first_free_offset;

} OS_SpriteControlBlock;

/* The unknown SWI vector number */

#define OS_UKSWIV                               0x18

void __swi (OS_WriteC|XOS_Bit) os_write_c (char c);
unsigned int  __swi (OS_Write0|XOS_Bit) os_write_0 (char *ptr);

/* General sort of stuff */

typedef struct _coords {

   int x, y;

} Coords;

/* After the above, everything else in alphabetical order (if possible) */

#define DMA_QueueTransfer_WriteFlag              (1U)
#define DMA_QueueTransfer_CircleFlag             (1U<<1)
#define DMA_QueueTransfer_SyncFlag               (1U<<2)

#define Font_ScanString_UseR5Flag                (1U<<5)
#define Font_ScanString_UseR0Flag                (1U<<8)
#define Font_ScanString_ReturnBBoxFlag           (1U<<18)

#define Font_Paint_UseOSUnits                    (1U<<4)

typedef struct _font_bbox {
   Coords       space_offset;
   Coords       letter_offset;
   unsigned int split_char;
   Coords       bottom_left;
   Coords       top_right;
} Font_BBox;

#define Joystick_Read_8bit                       (0U<<8)
#define Joystick_Read_16bit                      (1U<<8)

