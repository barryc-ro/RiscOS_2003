                ;           ;
                AREA        |!!!Module$$Header|, CODE, READONLY

                GET     Hdr:ListOpts
                GET     Hdr:Macros
                GET     Hdr:System
                GET     Hdr:Services
                GET     Hdr:ModHand
                GET     Hdr:HostFS
;                GET     Hdr:Debug    \ a bit too aasmy
;                GET     Hdr:NdrDebug /
                GET     Hdr:DDVMacros
                GET     Hdr:UpCall
                GET     Hdr:MsgTrans
                GET     Hdr:ResourceFS
                GET     Hdr:DeviceFS

                GET         a.debuga
                GET         a.Version
                GET         a.swiextra
                GET         a.defs+ws
                GET         a.fs

                IMPORT      fs_entry
                IMPORT      __RelocCode

                ENTRY

        [ debug
        ! 0,"Including debug code"
        ]

module_base_addr
                DCD         0 ; Module_Start   - module_base_addr
                DCD         module_init     - module_base_addr
                DCD         module_final    - module_base_addr
                DCD         module_service  - module_base_addr
                DCD         module_title    - module_base_addr
                DCD         module_help_str - module_base_addr
                DCD         0 ; Module_HC_Table- module_base_addr
;                DCD         -1 ; Guarantee SWI chunk invalid

module_title
                DCB         ModName, 0
module_help_str
                DCB         ModName, 9, VString, "(", Date, ")", 0

                ALIGN

;----------------------------------------------------------------------------


module_init ROUT
                STMFD       sp!, {r7, lr}

                LDR         r2, [r12]
                TEQ         r2, #0   ; Warm start?
                BNE         %FT10    ; Yes, so skip workspace claim

                BL          __RelocCode

                MOV         r0, #OS_Module_Claim
                MOV         r3, #WorkspaceSize
                SWI         XOS_Module

                LDMVSFD     sp!, {r7, pc}

 [ standalonemessages
                ADR     r0, resourcefsfiles
                SWI     XResourceFS_RegisterFiles   ; ignore errors (starts on Service_ResourceFSStarting)
 ]
                LDMVSFD     sp!, {r7, pc}

 [ debug
                debuga_outs "SoundFS: workspace at "
                debuga_outx r2
                debuga_outnl
 ]

                STR         r2, [r12]
10
                MOV         r0, #0
                STR         r0, [r2, #TxStreamList] ; blank stream list
                STR         r0, [r2, #Flags]
  [ ReentryLock
                STR         r0, [r2, #Lock]
 ]
 [ debug
                STR         r0, [r2, #DeviceHandle]
                STR         r0, [r2, #BufferEntry]
                STR         r0, [r2, #BufferR12]
                STR         r0, [r2, #WorkspaceSize]
 ]

                BL          register_driver

                MOVVS       r0, #OS_Module_Free
                MOVVS       r2, r4
                SWIVS       XOS_Module

                LDMFD       sp!, {r7, pc}

;----------------------------------------------------------------------------

device_table
                DCD         device_name - device_table
                DCD         DeviceFS_List_Buffered :OR: DeviceFS_List_PsuedoFS
                DCD         0 ; no RX buffer in this implementation
                DCD         0 ; ditto
                DCD         Buffer_Create_WordAlignedFlag ; Buffer_Create_NotDormantFlag
                DCD         TxBufferSize
                DCD         0 ; reserved field
                DCD         0 ; next device name offset (end of table)

device_name
                DCB         ModName, 0

                ALIGN

;----------------------------------------------------------------------------

module_final ROUT
;                MOV         r1, lr
                STMFD       sp!, {lr}

                LDR         r2, [r12]

                BL          deregister_driver_and_tidyup

                MOV         r0, #OS_Module_Free
;                LDR         r2, [r12]
                SWI         XOS_Module
                ;           ;
 [ standalonemessages
                ADR     R0, resourcefsfiles
                SWI     XResourceFS_DeregisterFiles
 ]
                LDMFD       sp!, {pc}

;                MOV         pc, r1

;----------------------------------------------------------------------------
                GBLS    conditionalgetbodge
 [ standalonemessages
;                GBLS    ApplicationName
;ApplicationName SETS    "Buffers"
conditionalgetbodge SETS "GET a.ResFiles"
resourcefsfiles
 |
conditionalgetbodge SETS ""
 ]
                $conditionalgetbodge
 [ standalonemessages
                DCD     0
 ]
;----------------------------------------------------------------------------

module_service  ROUT

                TEQ         r1, #Service_DeviceFSStarting
                TEQNE       r1, #Service_DeviceFSDying
                MOVNES      pc, lr

                TEQ         r1, #Service_DeviceFSStarting
                BNE         %FT50

                STMFD       sp!, {r0-r7, lr}
 [ debug
                debuga_outs "SoundFS: DeviceFSStarting"
                debuga_outnl
 ]
                LDR         r2, [r12]
                BL          register_driver
                LDMFD       sp!, {r0-r7, pc}^
50
                STMFD       sp!, {r0-r2, lr}
 [ debug
                debuga_outs "SoundFS: DeviceFSDying"
                debuga_outnl
 ]
                LDR         r2, [r12]
                BL          deregister_driver_and_tidyup
 [ debug
                debuga_outs "SoundFS: returned after deregistering"
                debuga_outnl
 ]
                LDMFD       sp!, {r0-r2, pc}^

;----------------------------------------------------------------------------

register_driver ROUT
                ;           ;
                STMFD       sp!, {lr}
                MOV         r7, #&7fffffff; NOT -1 'cause DeviceFS is so good
                MOV         r6, #0
                MOV         r5, #0
                MOV         r4, r2
                MOV         r3, #0
                LDR         r2, =fs_entry
                LDR         r1, =device_table
 [ CallbackHack
                MOV         r0, #DeviceFS_Register_SupportsIOCTLFlag :OR: DeviceFS_Register_MonitorTransfers;:OR: DeviceFS_Register_DuplexFlag
 |
                MOV         r0, #DeviceFS_Register_SupportsIOCTLFlag
 ]

 [ debug
 [ {TRUE}
                debuga_outx    r0
                debuga_outchar 32
                debuga_outx    r1
                debuga_outchar 32
                debuga_outx    r2
                debuga_outchar 32
                debuga_outx    r3
                debuga_outchar 32
                debuga_outx    r4
                debuga_outchar 32
                debuga_outx    r5
                debuga_outchar 32
                debuga_outx    r6
                debuga_outchar 32
                debuga_outx    r7
                debuga_outnl
 |
                debuga_outs    "SoundFS: registering entry point "
                debuga_outx    r2
                debuga_outchar &2c
                debuga_outnl
 ]
 ]

                SWI         XDeviceFS_Register
                STRVC       r0, [r4, #DeviceHandle]

 [ debug
                debuga_outs    "SoundFS: device driver handle "
                debuga_outx    r0
                debuga_outs    ", PC "
                debuga_outx    pc
                debuga_outnl
 ]

                LDMFD       sp!, {pc} ; do NOT preserve flags

;----------------------------------------------------------------------------

deregister_driver_and_tidyup ROUT

                STMFD       sp!, {lr}
 [ debug
                debuga_outs    "SoundFS: deregister drivers using workspace @"
                debuga_outx r2
                debuga_outnl
 ]
                LDR         r0, [r2, #DeviceHandle]
                SWI         XDeviceFS_Deregister


                LDR         r1, [r2, #TxStreamList]

 [ debug
                debuga_outs    "SoundFS: tidy up, last starts @"
                debuga_outx    r1
                debuga_outnl
 ]
40
                TEQ         r1, #0
                BEQ         %FT60
                LDR         r0, [r1,  #FS_ProcessHandler]
 [ debug
                debuga_outs "SoundFS: process handler being removed, "
                debuga_outx r0
                debuga_outnl
 ]

                SWI         XSharedSound_RemoveHandler
                LDR         r1, [r1, #FS_StreamNext]
                B           %BT40
60
 [ debug
                debuga_outs "SoundFS: finished tidying up"
                debuga_outnl
 ]
                LDMFD       sp!, {pc} ; do NOT preserve flags

                END
