   10DEFPROCModule
   20LOCAL er$
   30er$="Module"
   40PRINT "PROCModule"
   50[OPT I%
   70.module%     \ Module header
   90   EQUD  0  \ Not an application
  100   EQUD  initCode%-module%
  110   EQUD  finalCode%-module%
  120   EQUD  0  \  No service calls
  130   EQUD  title%-module%
  140   EQUD  help%-module%
  150   EQUD  commandTable%-module%
  160.swiBaseNum%
  170   EQUD  swiBase% \ SWI Base number
  180   EQUD  swiHandler%-module%
  190   EQUD  swiTable%-module%  \ SWI Decode table
  200   EQUD  0  \ SWI Decode code
  220.copyr% EQUS copyRight$
  230.title% EQUS title$+CHR$(0):ALIGN
  240.help%  EQUS "Additional 16 Bit Sound Support"+CHR$(9)+version$+date$+CHR$(0):ALIGN
  270\
  280.initCode%
  300   STMDB R13!,{R0-R12,R14}
  320   BL    startMem%               \ Get memory
  330   BVS   initMemError%
  350   \ R10 = private word
  360   \ R12 = memory pointer [R10]
  380   BL    initWorkspace%          \ Initialise workspace
  400   BL    installDefaultDriver%   \ Preferably Sound_LinearHandler or ChannelHandler
  420   LDMIA R13!,{R0-R12,PC}^
  430\
  450.initMemError%
  460   LDMIA R13!,{R0-R12,R14}
  470   ADR   R0,initMemErrMesg%
  480   ORRS  PC,R14,#Overflow_Flag
  490\
  500.initMemErrMesg%
  510    EQUD  &1E6
  520    EQUS  "Not enough memory for "+title$
  530    EQUB  0
  540    ALIGN
  550\
  570\ -------------------------------------------------
  590.finalCode%
  610   STMDB R13!,{R0-R12,R14}
  630   LDR   R12,[R12]          \ Get work area
  650   BL    releaseDriver%
  670   LDMIA R13!,{R0-R12,PC}^
  680\
  690\ -------------------------------------------------
  710.serviceCode%      \ Not used
  730   MOV   PC,R14
  760\ -----------------  * Comands
  780.commandTable%
  790   EQUD 0   \ No more commands
  810\ -----------------  SWI'S
  830.swiTable%
  840    EQUS swiName$
  850    EQUB 0
  860    EQUS "InstallHandler"
  870    EQUB 0
  880    EQUS "RemoveHandler"
  890    EQUB 0
  900    EQUS "HandlerInfo"
  910    EQUB 0
  920    EQUS "HandlerVolume"
  930    EQUB 0
  940    EQUS "HandlerSampleType"
  950    EQUB 0
  960    EQUS "HandlerPause"
  970    EQUB 0
  980    EQUS "SampleRate"
  990    EQUB 0
 1000    EQUS "InstallDriver"
 1010    EQUB 0
 1020    EQUS "RemoveDriver"
 1030    EQUB 0
 1040    EQUS "DriverInfo"
 1050    EQUB 0
 1060    EQUS "DriverVolume"
 1070    EQUB 0
 1080    EQUS "DriverMixer"
 1090    EQUB 0
 1100    EQUS "CheckDriver"
 1110    EQUB 0
 1120    EQUS "ControlWord"
 1130    EQUB 0
 1140    EQUS "HandlerType"
 1150    EQUB 0
 1170    EQUB 0
 1180    ALIGN
 1200\
 1210.swiHandler%
 1230    MOV   R10,R12
 1240    LDR   R12,[R12]    \ R12 = pointer to RMA data block
 1250    CMP   R11,#(EndOfJumpTable% - jumpTable%)/4
 1260    ADDCC PC,PC,R11,LSL #2
 1270    B     UnknownSWIerror%
 1290.jumpTable%
 1310    B     swiInstallHandler%          ;  OK
 1320    B     swiRemoveHandler%           ;  OK
 1340    B     swiHandlerInfo%             ;  OK
 1350    B     swiHandlerVolume%           ;  OK
 1370    B     swiHandlerSampleType%       ;  not in this version
 1380    B     swiHandlerPause%            ;  not in this version
 1400    B     swiSampleRate%              ;  OK
 1420    B     swiInstallDriver%           ;  OK
 1430    B     swiRemoveDriver%            ;  OK
 1440    B     swiDriverInfo%              ;  OK
 1450    B     swiDriverVolume%            ;  OK
 1460    B     swiDriverMixer%             ;  OK
 1470    B     driverCheck%                ;
 1480    B     swiControlWord%             ;
 1500    B     swiHandlerType%             ;
 1530.EndOfJumpTable%
 1540.UnknownSWIerror%
 1550    ADR   R0,errMesg%
 1560    ORRS  PC,R14,#Overflow_Flag
 1570.errMesg%
 1580    EQUD  &1E6
 1590    EQUS  "Unknown module operation"
 1600    EQUB  0
 1610    ALIGN
 1630]
 1640ENDPROC
