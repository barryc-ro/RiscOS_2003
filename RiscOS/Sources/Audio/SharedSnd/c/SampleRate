   10DEFPROCSampleRate
   20LOCAL er$
   30er$="Sample Rate"
   40PRINT "PROCSampleRate"
   50[OPT I%
   70\ ------------------------------- Sample rate routines ----------------------
   90.newRate%  \ Used from handler routine to sort out details
  100           \ R0 = New frequency
  120   STMDB R13!,{R0-R12,R14}
  140   \ Need new sample period in R1
  160    LDR   R6,rateConst%
  170    MOV   R2,R0
  180    BL    clockCalc%
  200    MOV   R1,R3   \ Return sample period in R1
  230\   LDR   R3,rateConst%   \ R3.R2
  240\   MOV   R2,#0
  250\   MOV   R4,R0    \ DIV frequency
  260\
  270\   BL    div      \ R3 = Sample period
  280\
  290\   MOV   R1,R3
  310   BL    newSampleRateSet%
  330   LDMIA R13!,{R0-R12,PC}
  370\ ------------------
  410.newSampleRate% \ The sample rate has changed,  sort it out
  420                \ On entry R0 = 0 to read, >0 to set new rate = R0
  440   STMDB R13!,{R0-R12,R14}
  460   BL    sampleRate%  \ Returns R0 = frequency, R1 = period
  480   LDR   R2,[R12,#work_SampleFrequency%] \ Has the rate changed?
  490   CMP   R0,R2
  500   BEQ   newSampleRateExit%  \ Nothing to do
  520   BL    stopSound%        \ Stop play and wait for fill to finish
  540   STR   R0,[R12,#work_SampleFrequency%]  \ Store frequency
  550   STR   R1,[R12,#work_SamplePeriod%]     \ Store sample period
  570   \     then calculate the fractional step for each handler
  590   ADD   R1,R12,#work_handlerTable%   \ Get handler table
  610   MOV   R6,#handlerMax%              \ Count
  630.newSampleRateLoop%
  650   LDR   R0,[R1,#handler_Address%]    \ Is there a handler here?
  660   CMP   R0,#0
  670   BEQ   newSampleRateNext%
  690   LDR   R0,[R1,#handler_SampleFrequency%]
  700   CMP   R0,#0
  710   BEQ   newSampleRateNext%                    \ No rate stored
  730   BL    sampleRateFraction%
  750   STR   R0,[R1,#handler_Fraction%]
  770.newSampleRateNext%
  790   ADD   R1,R1,#handlerTableLen%
  800   SUBS  R6,R6,#1
  810   BNE   newSampleRateLoop%
  830   BL    startSound%       \ Start sound again
  850.newSampleRateExit%
  870    LDMIA R13!,{R0-R12,PC}
  890\ ---------
  910.newSampleRateSet%
  930    STMDB R13!,{R14}
  950   STR   R0,[R12,#work_SampleFrequency%]  \ Store frequency
  960   STR   R1,[R12,#work_SamplePeriod%]     \ Store sample period
  980   \     then calculate the fractional step for each handler
 1000   ADD   R1,R12,#work_handlerTable%   \ Get handler table
 1020   MOV   R6,#handlerMax%              \ Count
 1040.newSampleRateSetLoop%
 1060   LDR   R0,[R1,#handler_Address%]    \ Is there a handler here?
 1070   CMP   R0,#0
 1080   BEQ   newSampleRateSetNext%
 1100   LDR   R0,[R1,#handler_SampleFrequency%]
 1110   CMP   R0,#0
 1120   BEQ   newSampleRateSetNext%                    \ No rate stored
 1140   BL    sampleRateFraction%
 1160   STR   R0,[R1,#handler_Fraction%]
 1180.newSampleRateSetNext%
 1200   ADD   R1,R1,#handlerTableLen%
 1210   SUBS  R6,R6,#1
 1220   BNE   newSampleRateSetLoop%
 1240   LDMIA R13!,{PC}
 1270\ ---------
 1290.sampleRate%        \ Set or read sample rate
 1310                    \ On entry:
 1320                    \ R0 = 0 to read
 1330                    \    > 0 for sample frequency required
 1340                    \ On exit:
 1350                    \ R0 = current frequency      (provided by driver)
 1360                    \ R1 = current sample period  (calculated by shared sound)
 1380    STMDB R13!,{R2-R12,R14}
 1400    BL    driverSampleRate%                \ Get current rate from driver
 1410    CMP   R0,#0                            \ Failed if 0
 1420    BEQ   sampleRateExit%
 1440    \ R0  will return sample frequency.....
 1460    \ Now calculate sample period
 1480\    LDR   R3,rateConst%   \ R3.R2
 1490\    MOV   R2,#0
 1500\    MOV   R4,R0    \ DIV frequency
 1510\
 1520\    BL    div
 1540    LDR   R6,rateConst%
 1550    MOV   R2,R0
 1560    BL    clockCalc%
 1580    MOV   R1,R3   \ Return sample period in R1
 1600.sampleRateExit%
 1620    LDMIA R13!,{R2-R12,PC}
 1640\----------
 1660.sampleRateFraction%    \ Get the fractional step required for given rate and current rate
 1670                        \ On entry:
 1680                        \   R0 = Frequency required
 1690                        \ On exit:
 1700                        \   R0 = Fraction in 8.24
 1710    STMDB R13!,{R1-R12,R14}
 1730    LDR   R2,[R12,#work_SampleFrequency%]    \ Current frequency
 1740    MOV   R6,R0                              \ Frequency required
 1760    BL    clockCalc%       \ Returns fraction in R3
 1780    MOV   R0,R3            \ Return in R0
 1800    LDMIA R13!,{R1-R12,PC}
 1820\ ------------------
 1840.rateConst%   EQUD &3D090000
 1850\
 1870.clockCalc% \ Calculate  fraction count
 1880            \ Pass rate in R6, actual rate in R2
 1890  STMDB R13!,{R14}
 1910  MOV R9,R2      \ Store actual rate
 1920  MOV R4,R2      \ actual rate ready for next calculation
 1940  MOV R2,#0      \ Calculate whole part
 1950  MOV R3,R6
 1960  \ R4=actual rate
 1970  BL div
 1980  MOV R10,R3
 1990                \ Calculate fraction
 2000                \ R2 = Remainder from above
 2010  MOV R3,#0
 2020  \ R4=actual rate
 2030  MOV R4,R9
 2040  BL div
 2060  MOV R3,R3,LSR #8 \ 24 Bit fraction
 2070  ADD R3,R3,R10,LSL #24 \ 8 Bit whole part
 2090  LDMIA R13!,{PC}^
 2100\
 2110.div \ Divide R3.R2 by R4 , R3 = result, R2 = remainder
 2120  MOV R5,#32 \ Number of bits in divisor
 2130.dloop
 2140  MOVS  R3,R3,LSL #1
 2150  MOV   R2,R2,LSL #1
 2160  ORRCS R2,R2,#1
 2170  CMPS  R2,R4
 2180  BCC   dnext
 2190  SBC   R2,R2,R4
 2200  ADD   R3,R3,#1
 2210.dnext
 2220  SUBS  R5,R5,#1
 2230  BNE dloop
 2240  MOV PC,R14
 2250\
 2260]
 2270ENDPROC
