; ------------------------- Linear driver --------------------------

; ---------
 [ doDMI
installDMIDriver
	; Set up the registers and table for
	; PowerWAVE_LinearHandler and call installDriver
	STMDB	R13!,{R14}

	ADD	R0,R12,#work_DriverEntryTable  ; Get table address

	ADR	R1,DMIDriverInstall           ; Install entry
	STR	R1,[R0,#driverEntry_Install]

	ADR	R1,DMIDriverRemove            ; Remove entry
	STR	R1,[R0,#driverEntry_Remove]

	ADR	R1,DMIDriverSampleRate        ; Sample rate entry
	STR	R1,[R0,#driverEntry_SampleRate]

	MOV	R1,#0                             ; No volume entry
	STR	R1,[R0,#driverEntry_Volume]

	MOV	R1,#0
	STR	R1,[R0,#driverEntry_Mixer]       ; No mixer entry


	LDR	R1,[R12,#work_privateWord]       ; Parameter

	MOV	R2,#0                             ; Flags

	ADR	R3,DMIDriverName              ; Driver name

 [ debug
	SWI	XOS_WriteS
	= "Install DMI driver.....",0
	ALIGN
	SWI	XOS_NewLine

	SWI	XOS_WriteS
	= " Table = ",0
	ALIGN
	MOV	R10,R0
	BL	printR10

	SWI	XOS_WriteS
	= " Parameter = ",0
	ALIGN
	MOV	R10,R1
	BL	printR10

	SWI	XOS_WriteS
	= " Flags = ",0
	ALIGN
	MOV	R10,R2
	BL	printR10

	SWI	XOS_WriteS
	= " Name = ",0
	ALIGN
	MOV	R10,R3
	BL	printR10
 ]

	BL	installDriver

	LDMIA	R13!,{PC}

; ------

DMIDriverInstall
	; Install driver using PowerWAVE_LinearHandler
	;  R0  = Handler address
	;  R1  = Parameter to pass
	;  R12 = parameter for driver
	;  R14 already on stack
	STMDB R13!,{R1-R12}

	MOV	R5,R0                   ; Temorary store R0 and R1
	MOV	R6,R1

	MOV	R0,#0                   ; Get current handler to see if already installed
	SWI	XPowerWAVE_LinearHandler

 [ debug
	SWI	XOS_WriteS
	= " Current handler = ",0
	ALIGN
	MOV	R10,R1
	BL	printR10
 ]

	CMP	R1,R5                   ; Same handler?
	CMPEQ	R2,R6                   ; Same parameter?

	BEQ	DMIDriverInstallExit ; Jump out 'cos already there

 [ debug
	SWI	XOS_WriteS
	= " Install new handler = ",0
	ALIGN
	MOV	R10,R5
	BL	printR10
 ]

	; Now install new driver
	MOV	R0,#1                   ; Function code install
	MOV	R1,R5                   ; Address
	MOV	R2,R6                   ; Parameter
	SWI	XPowerWAVE_LinearHandler

	MOV	R0,R5                   ; Restore R0 if successful
	MOVVS	R0,#0                   ; Or 0 if error

DMIDriverInstallExit

	LDMIA	R13!,{R1-R12,PC}

; -----------

DMIDriverRemove
	; Remove driver using PowerWAVE_LinearHandler
	;  R14 already on stack

	STMDB	R13!,{R0-R2}

	; To remove handler set new handler to 0
	MOV	R0,#1       ; Function code install
	MOV	R1,#0       ; Null handler
	MOV	R2,#0
	SWI	XPowerWAVE_LinearHandler

	LDMIA	R13!,{R0-R2,PC}

; -----------

DMIDriverSampleRate
	; Choose rate and/or return current rate
	;  R0 = 0 to read
	;     > 0 to set to R0 = frequency
	; On exit:
	;  R0 = current frequency
	STMDB	R13!,{R1-R12}

	CMP	R0,#0
	BEQ	DMIDriverSampleRateRead

	; Set the rate to R0
	; Find the nearest
	MOV	R4,R0              ; R4 = rate required

	MOV	R0,#0              ; Read number of rates available
	SWI	PowerWAVE_SampleRate  ; R1 = number of rates available

	MOV	R5,R1              ; R5 = Upper limit

DMIDriverSampleRateLoop
	MOV	R0,#2              ; Convert from index to rate
	SWI	PowerWAVE_SampleRate  ; R2 = rate
	CMP	R2,R4
	BLT	DMIDriverSampleRateClosest  ; Best rate is between R1 and R5

	CMP	R1,#1              ; Are there any more rates
	MOVNE	R5,R1              ; Change upper limit
	MOVNE	R6,R2              ; Store upper rate
	SUBNE	R1,R1,#1           ; decrement index
	BNE	DMIDriverSampleRateLoop  ; Try again

DMIDriverSampleRateClosest   ; Check for nearest between R1 and R5
	CMP	R1,R5                      ; No range to check
	BEQ	DMIDriverSampleRateSet

	; R2 = lower rate, R1 = index
	; R6 = upper rate, R5 = index
	SUB	R2,R4,R2
	SUB	R6,R6,R4

	CMP	R2,R6       ; Who is nearest
	MOVGT	R1,R5       ; If nearest to R6 then set index to R5

DMIDriverSampleRateSet
	; Chosen index is R1

	MOV	R0,#3              ; Select rate from index in R1
	SWI	PowerWAVE_SampleRate

DMIDriverSampleRateRead
	MOV	R0,#1
	SWI	PowerWAVE_SampleRate  ; Frequency returned in R2

	MOV	R0,R2               ; Return it in R0

	LDMIA	R13!,{R1-R12,PC}

; -----------

DMIDriverName
	= "PowerWAVE Linear Handler",0
	ALIGN
 ]
	END
