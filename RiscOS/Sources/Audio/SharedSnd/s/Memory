XOS_Module	*	&2001E

memoryStartVal
	DCD	memoryStart

 ;----

startMem
	STMDB	sp!,{lr}

	LDR	r3,memoryStartVal

	MOV	r0,#6
	SWI	XOS_Module

	STR	r2,[ws]

	MOVVS	r3,#0     ;  Flag an error - and dont's start module
	BVS	startMemX

	MOV	r10,ws     ; Use r10 as tempory private word pointer, for sound installation
	MOV	ws,r2
	STR	r3,[ws,#work_memSize]
	STR	r10,[ws,#work_privateWord]

startMemX
	LDMIA	sp!,{pc}

 ; -------------------------------- Workspace routines ------------------------

initWorkspace
	STMDB	sp!,{lr}

	; Clear memory
	ADD	r1,ws,#work_privateWord
	ADD	r1,r1,#4
	LDR	r2,memoryStartVal
	ADD	r2,r2,ws
	MOV	r0,#0

initWorkspace_Loop
	STR	r0,[r1],#4
	CMP	r1,r2
	BLT	initWorkspace_Loop

	; Specific values......
	MOV	r0,#0
	STR	r0,[ws,#work_currentDriver] ; No driver installed yet

	STR	r0,[ws,#work_SampleFrequency]
	STR	r0,[ws,#work_SamplePeriod]

	STR	r0,[ws,#work_SoundActive]   ; No sound currently active

	STR	r0,[ws,#work_ControlWord]   ; Control word for Replay

	STR	r0,[ws,#work_ImmediateHandlers]
	STR	r0,[ws,#work_CallBackHandlers]
	STR	r0,[ws,#work_ProcessHandlers]

	; .. Initialise handler table by setting handler_Address entries to 0
	ADD	r0,ws,#work_handlerTable   ; Position of table
	MOV	r1,#handlerMax              ; Number in table
	MOV	r2,#0

initWorkHandlerTableLoop
	STR	r2,[r0,#handler_Address]    ; Store 0 in handler_Address
	ADD	r0,r0,#handlerTableLen      ; Increment to next table entry
	SUBS	r1,r1,#1                     ; Decrement count
	BNE	initWorkHandlerTableLoop    ; Branch to start of loop

	; .. Initialise driver table by setting driver_Address entries to 0
	ADD	r0,ws,#work_driverTable    ; Position of table
	MOV	r1,#driverMax               ; Number in table
	MOV	r2,#0

initWorkDriverTableLoop
	STR	r2,[r0,#driver_Address]     ; Store 0 in handler_Address
	ADD	r0,r0,#driverTableLen       ; Increment to next table entry
	SUBS	r1,r1,#1                     ; Decrement count
	BNE	initWorkDriverTableLoop     ; Branch to start of loop

	MOV	r0,#0
	STR	r0,[ws,#work_callBack_Active]
	STR	r0,[ws,#work_callBack_Count]
	STR	r0,[ws,#work_CallBack_BufferFullCount]
	STR	r0,[ws,#work_CallBack_CurrentSoundBuffer]
	STR	r0,[ws,#work_CallBack_CurrentOutBuffer]

	MOV	r0,#defaultNumCallBackBuffers
	STR	r0,[ws,#work_CallBack_numCallBackBuffers]

	LDMIA	sp!,{pc}

	END
