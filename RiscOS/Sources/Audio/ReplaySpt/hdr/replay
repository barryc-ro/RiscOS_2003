;Assembler header file for Replay
;written by DefMod (Jun 30 1995) on Mon Jun 24 12:35:17 1996
;Simon Middleton

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET OS:Hdr.Types"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_OS
        GBLS    Get_OS
        ]
        [       :LNOT: :DEF: OS_Hdr
Get_OS                          SETS    "GET OS:Hdr.OS"
        |
Get_OS                          SETS    ""
        ]
        $Get_OS

        [       :LNOT: :DEF: Get_OSSpriteOp
        GBLS    Get_OSSpriteOp
        ]
        [       :LNOT: :DEF: OSSpriteOp_Hdr
Get_OSSpriteOp                  SETS    "GET OS:Hdr.OSSpriteOp"
        |
Get_OSSpriteOp                  SETS    ""
        ]
        $Get_OSSpriteOp

        [       :LNOT: :DEF: Replay_Hdr
        GBLS    Replay_Hdr

;Symbols for constants
Error_ReplayBase                *       &80DA20
Error_ReplayBadFile             *       &80DA21
Error_ReplayNoRoom              *       &80DA22
Error_ReplayNoChunkSize         *       &80DA23
Error_ReplayBadSoundTrack       *       &80DA24
Error_ReplayBadSoundType        *       &80DA25
Error_ReplayNoSoundDriver       *       &80DA26
Error_ReplayAlreadyPlaying      *       &80DA27
Error_ReplayOutOfData           *       &80DA28
Error_ReplayNoSoundCode         *       &80DA29
Error_ReplayNoMem               *       &80DA2A
Replay_FileType                 *       &AE7
Replay_StereoReversed           *       &1
Replay_SoundSeekable            *       &2
Replay_SoundTypeNone            *       &0
Replay_SoundTypeStandard        *       &1
Replay_SoundTypeIndirected      *       &2
Replay_SampleRateShift          *       10
Replay_HeaderRelocatedOffsets   *       &1
Replay_VideoTypeNone            *       &0
Replay_VideoTypeMovingLines     *       &1
Replay_VideoType_15bit          *       &2
Replay_VideoType_15bit_211      *       &3
Replay_VideoType_8bit           *       &4
Replay_VideoType_15bit_420      *       &5
Replay_VideoType_15bit_16y1uv   *       &6
Replay_VideoTypeMovingBlocks    *       &7
Replay_VideoType_24bit          *       &8
Replay_VideoType_24bit_211      *       &9
Replay_VideoType_24bit_420      *       &A
Replay_VideoType_24bit_16y1uv   *       &B
Replay_VideoTypeMPEG            *       &C
Replay_VideoTypeMPEGData        *       &D
Replay_VideoTypeUltimotion      *       &E
Replay_VideoTypeIndirected      *       &F
Replay_VideoTypeMovingBlocksHQ  *       &11
Replay_VideoTypeEidosBase       *       &64
Replay_VideoTypeEscape          *       &66
Replay_VideoTypeIrlamBase       *       &C8
Replay_VideoTypeIrlamRTC1       *       &C9
Replay_VideoTypeIrlamMJPEG      *       &CA
Replay_VideoTypeWildVisionBase  *       &12C
Replay_VideoTypeAspexBase       *       &190
Replay_VideoTypeIotaBase        *       &1F4
Replay_VideoTypeIotaAceFilm     *       &1F4
Replay_VideoTypeWarmSilenceBase *       &258
Replay_VideoTypeWarmSilenceAVICram8 *       &258
Replay_VideoTypeWarmSilenceAVICram16 *       &259
Replay_VideoTypeWarmSilenceCVID *       &25A
Replay_VideoTypeWarmSilenceQT_RPZA *       &25B
Replay_VideoTypeWarmSilenceQT_SMC *       &25C
Replay_VideoTypeWarmSilenceAVIUltimotion *       &25D
Replay_VideoTypeWarmSilenceAVI_RGB8 *       &25E
Replay_VideoTypeWarmSilenceAVI_RLE8 *       &25F
Replay_VideoTypeWarmSilenceAVI_RGB24 *       &260
Replay_VideoTypeWarmSilenceQT_RLE8 *       &261
Replay_VideoTypeWarmSilenceFLIC *       &262
Replay_VideoTypeWarmSilenceQT_RLE4 *       &265
Replay_VideoTypeWarmSilenceQT_RLE16 *       &266
Replay_VideoTypeWarmSilenceQT_RLE24 *       &267
Replay_VideoTypeWarmSilenceDL   *       &26E
Replay_VideoTypeWarmSilenceANM  *       &26F
Replay_VideoTypeWarmSilenceQT_VR *       &276
Replay_VideoTypeWarmSilenceUnknown *       &2BB
Replay_VideoTypeSmallBase       *       &320
Replay_VideoTypeHBPBase         *       &320
Replay_VideoTypeHBPLinePack     *       &320
Replay_VideoTypeHBPMovie16To3   *       &322
Replay_HdrLineIdent             *       0
Replay_HdrLineName              *       1
Replay_HdrLineDate              *       2
Replay_HdrLineAuthor            *       3
Replay_HdrLineVideoType         *       4
Replay_HdrLineXSize             *       5
Replay_HdrLineYSize             *       6
Replay_HdrLinePixelDepth        *       7
Replay_HdrLineFrameRate         *       8
Replay_HdrLineSoundType         *       9
Replay_HdrLineSoundRate         *       10
Replay_HdrLineSoundChannels     *       11
Replay_HdrLineSoundPrecision    *       12
Replay_HdrLineFramesPerChunk    *       13
Replay_HdrLineNChunks           *       14
Replay_HdrLineEvenChunkSize     *       15
Replay_HdrLineOddChunkSize      *       16
Replay_HdrLineCatalogueOffset   *       17
Replay_HdrLineSpriteOffset      *       18
Replay_HdrLineSpriteSize        *       19
Replay_HdrLineKeyFrameOffset    *       20
Replay_FrameRateShift           *       10
Replay_VideoParamInt            *       &0
Replay_VideoParamString         *       &1
Replay_OpenType                 *       &3
Replay_OpenTypeFileName         *       &0
Replay_OpenTypeFileHandle       *       &1
Replay_OpenTypeBuffer           *       &2
Replay_ReturnText               *       &10
Replay_ReturnSoundTracks        *       &20
Replay_ReturnCatalogue          *       &40
Replay_ReturnSprite             *       &80
Replay_4BytePalette             *       &100
Replay_CheckVideoInfo           *       &200
Replay_CheckSoundInfo           *       &400
Replay_RelocateOffsets          *       &800
Replay_VideoCodecTemporal       *       &1
Replay_ReadVideoCodecInfoNew    *       &100
Replay_SoundCodecSeekable       *       &1
Replay_SoundCodecVariableSize   *       &2
Replay_SoundCodecMaxSizeShift   *       10
Replay_PollPause                *       &1
Replay_PollMute                 *       &2
Replay_PollExit                 *       &4
Replay_PollStep                 *       &8
Replay_PollCapture              *       &10
Replay_PollInvisible            *       &20
Replay_PollEndLoop              *       &40
Replay_PollNoPaint              *       &80
Replay_SoundCodeNoTiming        *       &1
Replay_SoundCodeQualityCosts    *       &2
Replay_SoundCodeSoundSystemOff  *       &4
Replay_SoundCodeQualityLow      *       &1
Replay_SoundCodeQualityHigh     *       &4
Replay_SoundCodeStereoReversed  *       &1
Replay_SoundCodePlayTiming      *       &1
Replay_SoundCodePlayPlay        *       &2
Replay_SoundCodePlaying         *       &1
Replay_SoundCodeNeedsTiming     *       &2
Replay_SoundCodeUseTo16         *       &4
Replay_SoundCodeConvertInPlace  *       &8
Replay_SoundCodeHadError        *       &10000
Replay_SoundCodeStopped         *       &20000
Replay_SoundCodeActionPause     *       &0
Replay_SoundCodeLoadFromSoundFile *       &100
Replay_AccessLatencyShift       *       16
Replay_ColourMapNoTranslation   *       &FFFFFFFF
Replay_ColourMapDuplicateShorts *       &FFFFFFFE
Replay_ColourMapInterpolate     *       &1
Replay_ColourMapRMA             *       -1

;Symbols for structure offsets and sizes
Replay_SoundTrackFlags          *       Bits

Replay_SoundTrackType           *       Int

Replay_HeaderFlags              *       Bits

Replay_VideoType                *       Int

                                ^       0
Replay_CatalogueChunk_video_offset #       Int
Replay_CatalogueChunk_video_size #       Int
Replay_CatalogueChunk_sound_size #       Int
Replay_CatalogueChunk           *       @

                                ^       0
Replay_SoundTrack_flags         #       Replay_SoundTrackFlags
Replay_SoundTrack_type          #       Replay_SoundTrackType
Replay_SoundTrack_sample_rate   #       Int
Replay_SoundTrack_n_channels    #       Byte
Replay_SoundTrack_n_bits        #       Byte
Replay_SoundTrack_sample_period #       Byte
Replay_SoundTrack_snd_mul       #       Byte
Replay_SoundTrack_max_chunk_size #       Int
Replay_SoundTrack_sound_file    #       11*Char
Replay_SoundTrack               *       @

Replay_VideoParamType           *       Int

                                ^       0
Replay_HeaderOffset_offset      #       Int
                                ^       0
Replay_HeaderOffset_ptr         #       Ptr
Replay_HeaderOffset             *       @

                                ^       0
Replay_Header_sizeof_header     #       Int
Replay_Header_flags             #       Replay_HeaderFlags
Replay_Header_text_description  #       Replay_HeaderOffset
Replay_Header_text_date         #       Replay_HeaderOffset
Replay_Header_text_author       #       Replay_HeaderOffset
Replay_Header_video_type        #       Replay_VideoType
Replay_Header_video_indirected_filename #       Replay_HeaderOffset
Replay_Header_video_colour_space #       Replay_HeaderOffset
Replay_Header_video_size        #       OS_Coord
Replay_Header_video_bits_per_pixel #       Int
Replay_Header_frames_per_chunk  #       Int
Replay_Header_n_chunks          #       Int
Replay_Header_sizeof_catalogue_chunk #       Int
Replay_Header_n_frames          #       Int
Replay_Header_frame_rate        #       Int
Replay_Header_start_timecode    #       Int
Replay_Header_base_timecode     #       Int
Replay_Header_file_info_catalogue_offset #       Int
Replay_Header_file_info_catalogue_size #       Int
Replay_Header_file_info_sprite_offset #       Int
Replay_Header_file_info_sprite_size #       Int
Replay_Header_file_info_key_frame_offset #       Int
Replay_Header_file_info_palette_offset #       Int
Replay_Header_file_info_header_end_offset #       Int
Replay_Header_max_even_chunk_size #       Int
Replay_Header_max_odd_chunk_size #       Int
Replay_Header_n_sound_tracks    #       Int
Replay_Header_sizeof_sound_track #       Int
Replay_Header_video_params      #       Replay_HeaderOffset
Replay_Header_catalogue_chunks  #       Replay_HeaderOffset
Replay_Header_sound_tracks      #       Replay_HeaderOffset
Replay_Header_fetcher_name      #       Replay_HeaderOffset
Replay_Header                   *       @

                                ^       0
Replay_TimebarPaintInfo_pixels_per_frame #       Int
Replay_TimebarPaintInfo_timebar_address #       Int
Replay_TimebarPaintInfo_timebar_height #       Int
Replay_TimebarPaintInfo_fg_colour #       Int
Replay_TimebarPaintInfo_bg_colour #       Int
Replay_TimebarPaintInfo_log2bpp #       Int
Replay_TimebarPaintInfo_max_pixels #       Int
Replay_TimebarPaintInfo         *       @

Replay_ReadFileHeaderFlags      *       Bits

Replay_VideoCodecFlags          *       Bits

                                ^       0
Replay_VideoCodecDim_inc        #       Int
Replay_VideoCodecDim_min        #       Int
Replay_VideoCodecDim_max        #       Int
Replay_VideoCodecDim            *       @

                                ^       0
Replay_VideoCodecInfo_flags     #       Replay_VideoCodecFlags
Replay_VideoCodecInfo_size      #       Int
Replay_VideoCodecInfo_description_offset #       Int
Replay_VideoCodecInfo_author_offset #       Int
Replay_VideoCodecInfo_bits_per_pixel #       Int
Replay_VideoCodecInfo_x         #       Replay_VideoCodecDim
Replay_VideoCodecInfo_y         #       Replay_VideoCodecDim
Replay_VideoCodecInfo_n_colour_spaces #       Int
Replay_VideoCodecInfo           *       @

                                ^       0
Replay_VideoCodec_patch_table_offset #       Int
Replay_VideoCodec_init_entry    #       Int
Replay_VideoCodec_decompress_entry #       Int
Replay_VideoCodec_code          #       Skip
Replay_VideoCodec               *       @

Replay_ReadVideoCodecInfoFlags  *       Bits

Replay_SoundCodecFlags          *       Bits

Replay_ReadSoundCodecInfoFlags  *       Bits

                                ^       0
Replay_SoundCodecInfo_flags     #       Replay_SoundCodecFlags
Replay_SoundCodecInfo_size      #       Int
Replay_SoundCodecInfo_description_offset #       Int
Replay_SoundCodecInfo_author_offset #       Int
Replay_SoundCodecInfo_buffer_size_multiplier #       Int
Replay_SoundCodecInfo_max_sample_size #       Int
Replay_SoundCodecInfo_per_channel_overhead #       Int
Replay_SoundCodecInfo           *       @

Replay_PollFlags                *       Bits

Replay_SoundCodePlayReason      *       Int

Replay_SoundCodeQuality         *       Byte

Replay_SoundCodeStereoFlags     *       Byte

Replay_SoundCodeInterfaceFlags  *       Bits

Replay_SoundCodeInfoFlags       *       Bits

Replay_SoundCodeAction          *       Int

                                ^       0
Replay_SoundPoll_global_flags   #       Replay_PollFlags
Replay_SoundPoll_chunk_time     #       Int
Replay_SoundPoll_frequency_int  #       Int
Replay_SoundPoll_frequency_frac #       Int
Replay_SoundPoll_quality        #       Replay_SoundCodeQuality
Replay_SoundPoll_stereo_flags   #       Replay_SoundCodeStereoFlags
Replay_SoundPoll_reserved_b     #       2*Byte
Replay_SoundPoll_reserved_i     #       11*Int
Replay_SoundPoll                *       @

                                ^       0
Replay_SoundBuffer_count        #       Int
Replay_SoundBuffer_empty        #       Int
Replay_SoundBuffer_start        #       Ptr
Replay_SoundBuffer              *       @

                                ^       0
Replay_SoundCode_play_entry     #       Int
Replay_SoundCode_stop_entry     #       Int
Replay_SoundCode_data_entry     #       Int
Replay_SoundCode_interface_flags #       Replay_SoundCodeInterfaceFlags
Replay_SoundCode_buffer         #       2*Ptr
Replay_SoundCode_reserved       #       3*Int
Replay_SoundCode_samples_played_int #       Int
Replay_SoundCode_samples_played_frac #       Int
Replay_SoundCode_code           #       Skip
Replay_SoundCode                *       @

                                ^       0
Replay_SoundCodeInfo_flags      #       Replay_SoundCodeInfoFlags
Replay_SoundCodeInfo_error      #       Ptr
Replay_SoundCodeInfo_poll       #       Replay_SoundPoll
Replay_SoundCodeInfo_code       #       Replay_SoundCode
Replay_SoundCodeInfo            *       @

Replay_SoundCodeLoadFlags       *       Bits

Replay_AccessFlags              *       Bits

Replay_ReadAccessInfoFlags      *       Bits

                                ^       0
Replay_AccessInfo_sizeof_info   #       Int
Replay_AccessInfo_flags         #       Replay_AccessFlags
Replay_AccessInfo_method        #       Int
Replay_AccessInfo_latency       #       Int
Replay_AccessInfo               *       @

Replay_ColourMapFlags           *       Bits

                                ^       0
Replay_ColourMapInfo_flags      #       Replay_ColourMapFlags
Replay_ColourMapInfo_n_bits     #       Byte
Replay_ColourMapInfo_mag        #       Byte
Replay_ColourMapInfo_index      #       Byte
Replay_ColourMapInfo_usage      #       Byte
Replay_ColourMapInfo_src_colour_space #       12*Char
Replay_ColourMapInfo_n_colours  #       Int
Replay_ColourMapInfo_src_palette #       Ptr
Replay_ColourMapInfo_dst_palette #       Ptr
Replay_ColourMapInfo_data       #       Ptr
Replay_ColourMapInfo_area_number #       Int
Replay_ColourMapInfo_area_size  #       Int
Replay_ColourMapInfo            *       @

                                ^       0
Replay_CallBackRoutineInfo_x_eig #       Int
Replay_CallBackRoutineInfo_y_eig #       Int
Replay_CallBackRoutineInfo_n_colours #       Int
Replay_CallBackRoutineInfo_screen_base #       Ptr
Replay_CallBackRoutineInfo_row_bytes #       Int
Replay_CallBackRoutineInfo_screen_rows #       Int
Replay_CallBackRoutineInfo_mag_y #       Int
Replay_CallBackRoutineInfo_movie_size #       OS_Coord
Replay_CallBackRoutineInfo_frame_rate #       Int
Replay_CallBackRoutineInfo      *       @


;Symbols for SWI's and SWI reason codes
XReplay_RegisterSprites         *       &68B00
Replay_RegisterSprites          *       &48B00
   ;Entry
   ;  R0 -> area (osspriteop_area)
   ;  R1 -> button_offsets (Int)
   ;  R2 -> sprite_names (pointer to String)
   ;  R3 = initial_state (Replay_PollFlags)
   ;Exit
   ;  R0 = routine (pointer to code)

XReplay_DeRegisterSprites       *       &68B01
Replay_DeRegisterSprites        *       &48B01

XReplay_TimebarPaintAddress     *       &68B02
Replay_TimebarPaintAddress      *       &48B02
   ;Entry
   ;  R0 = PixelsPerFrame (Int)
   ;  R1 = TimebarAddress (pointer to Byte)
   ;  R2 = TimebarHeight (Int)
   ;  R3 = FGColour (OS_ColourNumber)
   ;  R4 = BGColour (OS_ColourNumber)
   ;  R5 = Log2BPP (Int)
   ;Exit
   ;  R0 = PaintRoutine (pointer to code)

XReplay_TimebarPaintAddressExtended *       &68B02
Replay_TimebarPaintAddressExtended *       &48B02
   ;Entry
   ;  R0 = &FFFFFFFF
   ;  R1 -> info (Replay_TimebarPaintInfo)
   ;Exit
   ;  R0 = PaintRoutine (pointer to code)

XReplay_Version                 *       &68B03
Replay_Version                  *       &48B03
   ;Exit
   ;  R0 = version (Int)

XReplay_ReadFileHeader          *       &68B04
Replay_ReadFileHeader           *       &48B04
   ;Entry
   ;  R0 = flags (Replay_ReadFileHeaderFlags)
   ;  R1 -> filename (String)
   ;  R2 = header_buffer (pointer to Replay_Header)
   ;  R3 = header_buffer_size (Int)
   ;  R4 = sprite_buffer (pointer to data)
   ;  R5 = sprite_buffer_size (Int)
   ;  R6 = palette_buffer (pointer to data)
   ;  R7 = palette_buffer_size (Int)
   ;Exit
   ;  R3 = header_size_needed (Int)
   ;  R5 = sprite_size_needed (Int)
   ;  R7 = palette_size_needed (Int)

XReplay_ReadVideoCodecInfo      *       &68B05
Replay_ReadVideoCodecInfo       *       &48B05
   ;Entry
   ;  R0 = flags (Replay_ReadVideoCodecInfoFlags)
   ;  R1 = video_type (Int)
   ;  R2 = info_buffer (pointer to Replay_VideoCodecInfo)
   ;  R3 = info_buffer_size (Int)
   ;Exit
   ;  R3 = info_size_needed (Int)

XReplay_ReadVideoCodecInfoNew   *       &68B05
Replay_ReadVideoCodecInfoNew    *       &48B05
   ;Entry
   ;  R0 = &100 :OR: flags (Replay_ReadVideoCodecInfoFlags)
   ;  R1 = video_type (Int)
   ;  R2 -> video_name (String)
   ;  R3 = info_buffer (pointer to Replay_VideoCodecInfo)
   ;  R4 = info_buffer_size (Int)
   ;Exit
   ;  R4 = info_size_needed (Int)

XReplay_ReadSoundCodecInfo      *       &68B06
Replay_ReadSoundCodecInfo       *       &48B06
   ;Entry
   ;  R0 = flags (Replay_ReadSoundCodecInfoFlags)
   ;  R1 = sound_type (Int)
   ;  R2 -> sound_name (String)
   ;  R3 = info_buffer (pointer to Replay_SoundCodecInfo)
   ;  R4 = info_buffer_size (Int)
   ;Exit
   ;  R4 = info_size_needed (Int)

ReplaySoundCode_Load            *       &0
   ;Entry
   ;  R0 = &0 :OR: flags (Replay_SoundCodeLoadFlags)
   ;  R1 = sound_type (Replay_SoundTrackType)
   ;  R2 -> sound_name (String)
   ;  R3 = n_channels (Int)
   ;Exit
   ;  R0 -> info (Replay_SoundCodeInfo)

ReplaySoundCode_Unload          *       &1
   ;Entry
   ;  R0 = &1 :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)

ReplaySoundCode_AttachBuffers   *       &2
   ;Entry
   ;  R0 = &2 :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)
   ;  R2 = buffer (pointer to data)
   ;  R3 = file_buffer_size (Int)
   ;  R4 = build_buffer_size (Int)
   ;  R5 = hw_buffer_size (Int)
   ;Exit
   ;  R2 = buffer_out (pointer to data)

ReplaySoundCode_DetachBuffers   *       &3
   ;Entry
   ;  R0 = &3 :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)

ReplaySoundCode_AttachSoundFile *       &4
   ;Entry
   ;  R0 = &4 :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)
   ;  R2 -> soundfile_format (data)
   ;  R3 = file_handle (OS_f)

ReplaySoundCode_AttachReplay    *       &5
   ;Entry
   ;  R0 = &5 :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)
   ;  R2 -> hdr (Replay_Header)
   ;  R3 = sound_track (Int)
   ;  R4 = file_handle (OS_f)

ReplaySoundCode_DetachLoader    *       &6
   ;Entry
   ;  R0 = &6 :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)

ReplaySoundCode_SetState        *       &7
   ;Entry
   ;  R0 = &7 :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)
   ;  R2 = start_sample (Int)
   ;  R3 = end_sample (Int)
   ;  R4 = n_times_to_play (Int)

ReplaySoundCode_GetState        *       &8
   ;Entry
   ;  R0 = &8 :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)
   ;Exit
   ;  R0 = current_sample (Int)
   ;  R1 = n_times_played (Int)

ReplaySoundCode_SetAction       *       &9
   ;Entry
   ;  R0 = &9 :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)
   ;  R2 = action (Replay_SoundCodeAction)
   ;  R3 = at_sample (Int)

ReplaySoundCode_InitSoundFile   *       &A
   ;Entry
   ;  R0 = &A :OR: flags (Bits)
   ;  R1 -> info (Replay_SoundCodeInfo)
   ;  R2 -> sound_file_id (data)
   ;  R3 = buf_size (Int)
   ;  R4 = rate_adjust (Int)

XReplay_ReadAccessInfo          *       &68B08
Replay_ReadAccessInfo           *       &48B08
   ;Entry
   ;  R0 = flags (Replay_ReadAccessInfoFlags)
   ;  R1 -> file_name (String)
   ;  R2 = info (pointer to Replay_AccessInfo)
   ;  R3 = sizeof_info (Int)
   ;Exit
   ;  R3 = sizeof_info_needed (Int)

        ]
        END
