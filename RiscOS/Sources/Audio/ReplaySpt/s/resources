; > resources.s

; © SJ Middleton, 1995

		GET	hdr:ListOpts
		GET	hdr:Macros
		GET	hdr:System

		GET	hdr:ModHand
		GET	hdr:MsgTrans
		GET	hdr:ResourceFS

		GET	hdr:Proc

		EXPORT	register_resources
		EXPORT	de_register_resources
		EXPORT	re_register_resources

; extern os_error *register_resources(void);
; extern os_error *de_register_resources(void);
; extern void re_register_resources(int code_ptr, int ws_ptr);

		AREA	|Resource$$Code|,CODE,READONLY

; --------------------------------------------------------------------------------------------

 [ :LNOT:ROM
resources_list
		ResourceFile	Resources.UK.Messages, Resources.ReplaySpt.Messages
		DCD	0
 ]
; --------------------------------------------------------------------------------------------

register_resources
 [ ROM
		MOV	r0, #0
		MOV	pc, lr
 |
		MOV	ip, lr
		ADR	r0, resources_list
		SWI	XResourceFS_RegisterFiles
		MOVVC	r0, #0
		MOV	pc, ip
 ]
de_register_resources
 [ ROM
		MOV	r0, #0
		MOV	pc, lr
 |
		MOV	ip, lr
		ADR	r0, resources_list
		SWI	XResourceFS_DeregisterFiles
		MOVVC	r0, #0
		MOV	pc, ip
 ]

re_register_resources
 [ ROM
		MOV	r0, #0
		MOV	pc, lr
 |
		STMFD	sp!, {lr}
		MOV	r3, r1			; ws ptr
		MOV	ip, r0			; code ptr
		ADR	r0, resources_list

		MOV	lr, pc
		MOV	pc, ip

		LDMFD	sp!, {pc}^
 ]

; --------------------------------------------------------------------------------------------

		EXPORT	my_msgs_init
		EXPORT	msgs_close
		EXPORT	my_msgs_lookup
		EXPORT	msgs_cb

; os_error *msgs_init(const char *msgs_file)

my_msgs_init	MOV	ip, lr
		MOV	r2, #0
		MOV	r1, r0

;		LDR	r0, msgs_cb_addr
		StaticBaseFromSL    r3
		ADRVar  r0, r3, msgs_cb

		SWI	XMessageTrans_OpenFile
		MOVVC	r0, #0
		MOVS	pc, ip

; os_error *msgs_close(void)

msgs_close	MOV	ip, lr

;		LDR	r0, msgs_cb_addr
		StaticBaseFromSL    r3
		ADRVar  r0, r3, msgs_cb

		SWI	XMessageTrans_CloseFile
		MOVVC	r0, #0
		MOVS	pc, ip

; char *msgs_lookup(const char *msg_token)

my_msgs_lookup	Entry	"r4-r7"

		MOV	r7, #0
		MOV	r6, #0
		MOV	r5, #0
		MOV	r4, #0
		MOV	r3, #0
		MOV	r2, #0
		MOV	r1, r0
;		LDR	r0, msgs_cb_addr
		StaticBaseFromSL    ip
		ADRVar  r0, ip, msgs_cb

		SWI	XMessageTrans_Lookup
		MOVVC	r0, r2
		ADDVS	r0, r0, #4

		EXITS

;msgs_cb_addr	DCD	msgs_cb
		EXPORTVar       msgs_cb

; --------------------------------------------------------------------------------------------

		AREA	|C$$data|,DATA

msgs_cb		%	4*4

; --------------------------------------------------------------------------------------------

		END

eof resources.s
