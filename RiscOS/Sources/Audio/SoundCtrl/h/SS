/* File:    ss.h
 * Purpose: Sound System H/W details and such
 * Author:  Timothy Roddis
 * History: 1-Sep-97: TGR: created
 */

#ifndef ss_h
#define ss_h

#define AD1816_Podule       1 // 1 = true
#define AD1816_PoduleNo     0

#define AD1816_EnableIRQs   0 /* if you do set this to 1, write IRQ deinstallers at end of xfer */

#if AD1816_Podule
#define AD1816_Base         ((volatile char *)(0x88000000 + (AD1816_PoduleNo<<24)))
//#define AD1816_IRQ          -1 /* /* needs changing */ // what the hell was this supposed to do?
#else
//#define AD1816_Base         (-32767)
#endif

#define AD1816_SBBase       (AD1816_Base + 0x400880)
#define AD1816_AdlibBase    (AD1816_Base + 0x400e20)
#define AD1816_SSBase       (AD1816_Base + 0x400400)
#define AD1816_MIDIBase     (AD1816_Base + 0x400cc0)
#define AD1816_GameBase     (AD1816_Base + 0x400800)

#define AD1816_CSN          0x54

enum { AD1816_LogDev_Codec, AD1816_LogDev_MIDI, AD1816_LogDev_GamePort};

#define AD1816_IRQ          0x5
#define AD1816_IRQType      0x2

#define AD1816_DMA_Playback 0x1

#if AD1816_Podule
#define AD1816_DMA_Capture  0x4
#else
#define AD1816_DMA_Capture  0x2
#endif

#define MIDI_IRQ            0xb
#define MIDI_IRQType        0x2

#define PNP_Addr            (AD1816_Base + 0x4009e4)
#define PNP_Write           (AD1816_Base + 0x4029e4)
#define PNP_Read            (AD1816_Base + 0x400c0c)

#define PNP_DelayTime       1024

#define PNP_ConvertToISA(A) (((unsigned int)(A) & 0xffff)>>2)

//#define PNP_Read_ISA        ((PNP_Read & 0xfff)>>2)

#define PNP_SetReadPort     0x00
#define PNP_Isolate         0x01
#define PNP_CfgCtrl         0x02
#define PNP_Wake            0x03
#define PNP_ResData         0x04
#define PNP_Status          0x05
#define PNP_CSN             0x06
#define PNP_LogDev          0x07

#define PNP_Activate        0x30

#define IO_DescHi(A)        (0x60+((A)<<1))
#define IO_DescLo(A)        (0x61+((A)<<1))

#define IRQ_ReqDesc(A)       (0x70+((A)<<1))
#define IRQ_TypeDesc(A)      (0x71+((A)<<1))

#define DMA_ChanDesc(A)      (0x74+(A))

extern const char PNP_LFSRKey[32];

#define PNP_CfgCtrl_Reset       0x01
#define PNP_CfgCtrl_WaitForKey  0x02
#define PNP_CfgCtrl_ResetCSN    0x04

#define PNP_Isolation_Sequence(A) (0x55<<(A))

#define PNP_Activate_Activate   0x01

/* All bytes appear as low-bytes in words */

#define SS_IndAddr          (AD1816_SSBase + 0)
#define SS_IRQStatus        (AD1816_SSBase + 4)
#define SS_IndData          (AD1816_SSBase + 8)
#define SS_PIODebug         (AD1816_SSBase + 16)
#define SS_PIOStatus        (AD1816_SSBase + 20)
#define SS_PIOData          (AD1816_SSBase + 24) // two byte (little endian)
#define SS_PlayCfg          (AD1816_SSBase + 32)
#define SS_CaptureCfg       (AD1816_SSBase + 36)
#define SS_RawJoystk        (AD1816_SSBase + 48)
#define SS_JoystkCtrl       (AD1816_SSBase + 52)
#define SS_JoystkPos        (AD1816_SSBase + 56)

// A must be a char * pointer, V is an int (short, long or otherwise)

#define SS_Write16(A,V) {int x = (V);*(A) = x;*((A)+4) = x >>8;}

// A must be a char * pointer, V must be a pointer to a int of some kind

#define SS_Read16(A)  (*(A)|(*((A)+4)<<8))

#define SSInd_IRQCtrl        (1)
#define SSInd_PlayRate       (2)
#define SSInd_CaptureRate    (3)
#define SSInd_PlayVol        (4)
#define SSInd_FMVol          (5)
#define SSInd_IIS1Vol        (6)
#define SSInd_IIS0Vol        (7)
#define SSInd_PlayBase       (8)
#define SSInd_PlayCount      (9)
#define SSInd_CaptureBase    (10)
#define SSInd_CaptureCount   (11)
#define SSInd_TimerBase      (12)
#define SSInd_TimerCount     (13)
#define SSInd_MasterVol      (14)
#define SSInd_CDVol          (15)
#define SSInd_SynthVol       (16)
#define SSInd_VidVol         (17)
#define SSInd_LineVol        (18)
#define SSInd_MicPhoneVol    (19)
#define SSInd_ADCCtrl        (20)
#define SSInd_ChipCfg        (32)
#define SSInd_DSPCfg         (33)
#define SSInd_FMRate         (34)
#define SSInd_IIS1Rate       (35)
#define SSInd_IIS0Rate       (36)
#define SSInd_ClkRate        (38)
#define SSInd_PhoneOutVol    (39)
#define SSInd_HWVol          (41)
#define SSInd_DSPMail0       (42)
#define SSInd_DSPMail1       (43)
#define SSInd_PowerTimerCtrl (44)
#define SSInd_VersionID      (45)

/* These use the standard abbreviations in the AD1816A spec
 *
 * NB: I've set these up as 1 bit with separate unshifted bitmasks
 */

/* SSBase + 1 : Interrupt Status */

#define SS_SI                (1U<<0)
#define SS_GI                (1U<<1)
#define SS_RI                (1U<<2)
#define SS_DI                (1U<<3)
#define SS_VI                (1U<<4)
#define SS_TI                (1U<<5)
#define SS_CI                (1U<<6)
#define SS_PI                (1U<<7)

/* SSBase + 8 : Playback Configuration */

#define SS_TRD               (1U<<7) // Transfer Request Disable
#define SS_DAZ               (1U<<6) // DAc Zero
#define SS_PFMT              (1U<<4) // Playback ForMaT
#define SS_PFMT_Mask         (3U<<4)
#define SS_PCL               (1U<<3) // Playback Companded/Linear
#define SS_PST               (1U<<2) // Playback STereo/mono
#define SS_PIO               (1U<<1) // Programmed I/O
#define SS_PEN               (1U<<0) // Playback ENable

/* SSBase + 9 : Capture Configuration */

#define SS_CFMT              (1U<<4) // Capture ForMaT
#define SS_CFMT_Mask         (3U<<4)
#define SS_CCL               (1U<<3) // Capture Companded/Linear
#define SS_CST               (1U<<2) // Capture STereo/mono
#define SS_CIO               (1U<<1) // Programmed I/O
#define SS_CEN               (1U<<0) // Capture ENable


#define SSInd_VMU            (1U<<7) // hw Volume MUte
#define SSInd_VUP            (1U<<6) // hw Volume UP
#define SSInd_VDN            (1U<<5) // hw Volume DowN

#define SSInd_LMVM           (1U<<15) // Left Master Volume Mute
#define SSInd_RMVM           (1U<<7)  // Right Master Volume Mute

#define SSInd_MuteFlag       (1U<<7)
#define SSInd_AutoGainCtrl   (1U<<7)

#define SSInd_PIE            0x8000
#define SSInd_CIE            0x4000
#define SSInd_TIE            0x2000
#define SSInd_TE             0x0080

/* Chip Configuration (SSInd 32) */

#define SSInd_WSE            (1U<<15)
#define SSInd_CDE            (1U<<14)
#define SSInd_CNP            (1U<<12)

#define SS_MaxRate            55200
#define SS_MinRate             4000

#define SS_DMA_MaxTfr         65535

#endif
