; definitions for AD1816A register set


; The Sound System direct registers

                    GBLL AD1816_Podule
AD1816_Podule       SETL {FALSE}

AD1816_PoduleNo     * 0
                    GBLL AD1816_EnableIRQs
AD1816_EnableIRQs   SETL {TRUE}

 [ AD1816_Podule
AD1816_Base         * &88000000 + AD1816_PoduleNo:SHL:24
 |
AD1816_Base         * &0302c000
 ]
AD1816_SBBase       * AD1816_Base+&400880
AD1816_AdlibBase    * AD1816_Base+&400e20
AD1816_SSBase       * AD1816_Base+&400400
AD1816_MIDIBase     * AD1816_Base+&400cc0
AD1816_GameBase     * AD1816_Base+&400800

                    ^ 0

; All 'consecutive' addresses appear as the lower byte of a word

SS_IndAddr          # 4
SS_IRQStatus        # 4
SS_IndData          # 8 ; two-byte little-endian
SS_PIODebug         # 4
SS_PIOStatus        # 4
SS_PIOData          # 4
SS_Reserved1        # 4
SS_PlayCfg          # 4
SS_CaptureCfg       # 4
SS_Reserved2        # 4
SS_Reserved3        # 4
SS_RawJoystk        # 4
SS_JoystkCtrl       # 4
SS_JoystkPos        # 8

; the following is a bit of a cheat to get the right numbers into registers

; The indirect registers ...

                     ^ 0

SSInd_Tmp            # 1
SSInd_IRQCtrl        # 1
SSInd_PlayRate       # 1
SSInd_CaptureRate    # 1
SSInd_PlayLoss       # 1
SSInd_FMLoss         # 1
SSInd_IIS1Loss       # 1
SSInd_IIS0Loss       # 1
SSInd_PlayBase       # 1
SSInd_PlayCount      # 1
SSInd_CaptureBase    # 1
SSInd_CaptureCount   # 1
SSInd_TimerBase      # 1
SSInd_TimerCount     # 1
SSInd_MasterVol      # 1
SSInd_CDVol          # 1
SSInd_SynthVol       # 1
SSInd_VidVol         # 1
SSInd_LineVol        # 1
SSInd_MicPhoneVol    # 1
SSInd_ADCCtrl        # 1
SSInd_ChipCfg        # 1
SSInd_DSPCfg         # 1
SSInd_FMRate         # 1
SSInd_IIS1Rate       # 1
SSInd_IIS0Rate       # 1
SSInd_ClkRate        # 1
SSInd_HWVol          # 1
SSInd_DSPMail0       # 1
SSInd_DSPMail1       # 1
SSInd_PowerTimerCtrl # 1
SSInd_VersionID      # 1


; These use the standard abbreviations in the AD1816A spec
;
; NB: I've set these up as 1 bit with separate unshifted bitmasks
;
;
; SSBase + 8 : Playback Configuration */

SS_SI                * 2_00000001
SS_GI                * 2_00000010
SS_RI                * 2_00000100
SS_DI                * 2_00001000
SS_VI                * 2_00010000
SS_TI                * 2_00100000
SS_CI                * 2_01000000
SS_PI                * 2_10000000

SS_PEN               * 2_00000001
SS_PIO               * 2_00000010
SS_PST               * 2_00000100
SS_PCL               * 2_00001000
SS_PFMT              * 2_00010000
SS_PFMT_Mask         * 2_00000011
SS_DAZ               * 2_01000000
SS_TRD               * 2_10000000

SS_CEN               * 2_00000001
SS_CIO               * 2_00000010
SS_CST               * 2_00000100
SS_CCL               * 2_00001000
SS_CFMT              * 2_00010000
SS_CFMT_Mask         * 2_00000011

SS_TIE      * 2_0010000000000000
SS_TE       * 2_0000000010000000

; SS+13 JoystickControl

SS_JRDY              * 2_10000000
SS_JWRP              * 2_01000000
SS_JSEL_Shift        * 4
SS_JSEL_Mask         * 2_11 
SS_JSEL_AX           * 2_00
SS_JSEL_AY           * 2_01
SS_JSEL_BX           * 2_10
SS_JSEL_BY           * 2_11
SS_JMSK_Shift        * 0
SS_JMSK_Mask         * 2_1111
SS_JMSK_AX           * 2_0001
SS_JMSK_AY           * 2_0010
SS_JMSK_BX           * 2_0100
SS_JMSK_BY           * 2_1000

           ^  0

MPU_Data    # 4
MPU_Command # 0
MPU_Status  # 4

MPU_DRR     * 2_10000000
MPU_DSR     * 2_01000000

MPUCmd_Reset    * &ff
MPUCmd_UARTMode * &3f

	END
