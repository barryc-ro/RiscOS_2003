/*
 * FPTest.c
 *
 * Tests FilePlay module SWI functionality
 *
 * (C) Copyright Acorn NC 1997
 *
 * Author: Jonathan Larmour
 * Date: 13th March 1997
 *
 */

#include <stdio.h>
#include <stdlib.h>

#include "kernel.h"

#define SOUNDPLAY_SWI_CHUNK     0x4EF80
#define SWI_SOUNDPLAY_PLAY      (SOUNDPLAY_SWI_CHUNK + 0)
#define SWI_SOUNDPLAY_STOP      (SOUNDPLAY_SWI_CHUNK + 1)
#define SWI_SOUNDPLAY_CONTROL   (SOUNDPLAY_SWI_CHUNK + 2)
#define SWI_SOUNDPLAY_STATUS    (SOUNDPLAY_SWI_CHUNK + 3)

#define TEST_FILE               "$.jifl.tmp.pulp"

int main()
{
  _kernel_swi_regs regs;
  _kernel_oserror *err;
  int dummy;
  char filename[]=TEST_FILE;

  printf("Starting playback\n");

  regs.r[0] = 0;
  regs.r[1] = (int) &filename[0];

  err=_kernel_swi(SWI_SOUNDPLAY_PLAY, &regs, &regs);
  if (err)
  {
    printf("Error code %d, message \"%s\"\n", err->errnum, err->errmess);
    exit(1);
  }

  dummy=getchar();

  regs.r[0] = 0;
  err=_kernel_swi(SWI_SOUNDPLAY_STATUS, &regs, &regs);
  if (err)
  {
    printf("Error code %d, message \"%s\"\n", err->errnum, err->errmess);
    exit(1);
  }
  printf("Status = %s\n", regs.r[0] ? "Playing" : "Quiet");

  regs.r[0] = 1;
  err=_kernel_swi(SWI_SOUNDPLAY_STATUS, &regs, &regs);
  if (err)
  {
    printf("Error code %d, message \"%s\"\n", err->errnum, err->errmess);
    exit(1);
  }
  printf("File = %s\n", regs.r[0] ? (char *)regs.r[0] : "<None>");

  regs.r[0] = 2;
  err=_kernel_swi(SWI_SOUNDPLAY_STATUS, &regs, &regs);
  if (err)
  {
    printf("Error code %d, message \"%s\"\n", err->errnum, err->errmess);
    exit(1);
  }
  printf("Buffer size = %d\n", regs.r[0]);

  dummy=getchar();

  printf("Setting buffer size to 8192 bytes\n");

  regs.r[0] = 0;
  regs.r[1] = 8192;
  err=_kernel_swi(SWI_SOUNDPLAY_CONTROL, &regs, &regs);
  if (err)
  {
    printf("Error code %d, message \"%s\"\n", err->errnum, err->errmess);
    exit(1);
  }

  regs.r[0] = 2;
  err=_kernel_swi(SWI_SOUNDPLAY_STATUS, &regs, &regs);
  if (err)
  {
    printf("Error code %d, message \"%s\"\n", err->errnum, err->errmess);
    exit(1);
  }
  printf("Buffer size = %d\n", regs.r[0]);

  dummy=getchar();

  printf("Stopping playback\n");
  regs.r[0] = 0;
  err=_kernel_swi(SWI_SOUNDPLAY_STOP, &regs, &regs);
  if (err)
  {
    printf("Error code %d, message \"%s\"\n", err->errnum, err->errmess);
    exit(1);
  }

} /* main */
