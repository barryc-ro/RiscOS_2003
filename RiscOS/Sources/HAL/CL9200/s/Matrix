        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System

        GET     Hdr:OSEntries

        GET     hdr.StaticWS
        GET     hdr.Hardware

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  HAL_MatrixColumns
        EXPORT  HAL_MatrixScan
        EXPORT  Matrix_Init

Matrix_Init
 [ CirrusDevBoard
        LDR     a4, HW_Address
        ADD     a4, a4, #GPIO_BASE - PERIPHERAL_BASE
        MOV     ip, #&AA
        STR     ip, [a4, #GPIOSWLOCK]
        MOV     a1, #&00FF
        STR     a1, [a4, #GPKDDR]
        STR     a1, [a4, #GPKDR]
 ]
        MOV     pc, lr

HAL_MatrixColumns
 [ CirrusDevBoard
        MOV     a1, #8                  ; we actually drive rows :)
 |
        MOV     a1, #0
 ]
        MOV     pc, lr

; COL0 to COL7 are our rows 0-7, and KEY0 to KEY7 are our rows 8-15
HAL_MatrixScan
 [ CirrusDevBoard
        Push    lr
        LDR     a4, HW_Address
        ADD     a4, a4, #GPIO_BASE - PERIPHERAL_BASE
        MRS     lr, CPSR
        ORR     ip, lr, #I32_bit
        MSR     CPSR_c, ip
        MOV     ip, #1
        MOV     a2, ip, LSL a1
        MVN     a1, a2
        MOV     ip, #&AA
        STR     a1, [a4, #GPKDR]                ; ROW<n> low
        STR     ip, [a4, #GPIOSWLOCK]
        STR     a2, [a4, #GPKDDR]               ; ROW<n> output, all other lines inputs
        LDR     ip, KEY_Address
        LDR     a2, [a4, #GPKDR]                ; Read COLs
        LDRB    a3, [ip]                        ; Read KEYs
        MOV     ip, #&AA
        MVN     a1, #0
        STR     ip, [a4, #GPIOSWLOCK]
        STR     a1, [a4, #GPKDDR]               ; All ROWs and COLs outputs
        STR     a1, [a4, #GPKDR]                ; All ROWs and COLs high

        AND     a2, a2, #&FF00
        MOV     a2, a2, LSR #8
        EOR     a2, a2, #&FF
        EOR     a3, a3, #&FF
        ORR     a1, a2, a3, LSL #8
        STR     ip, [a4, #GPIOSWLOCK]
        MOV     ip, #&00FF
        STR     ip, [a4, #GPKDDR]               ; COLs to inputs again
        MSR     CPSR_c, lr
 |
        MOV     a1, #0
 ]
        Pull    pc

        END
