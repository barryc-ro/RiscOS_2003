        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>

        GET     Hdr:OSEntries

        GET     hdr.StaticWS
        GET     hdr.Hardware
        GET     hdr.Video

        GBLL    HWPrio
HWPrio  SETL    {TRUE}

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  Interrupt_Init
        EXPORT  HAL_IRQEnable
        EXPORT  HAL_IRQDisable
        EXPORT  HAL_IRQClear
        EXPORT  HAL_IRQSource
        IMPORT  HAL_IRQClear_Video
        EXPORT  HAL_FIQDisableCode

Interrupt_Init
        LDR     a3, HW_Address
        MVN     a1, #0
        ADD     a3, a3, #INT_BASE-PERIPHERAL_BASE
        STR     a1, [a3, #CLRIRQMSKA]
        STR     a1, [a3, #CLRIRQMSKB]
        STR     a1, [a3, #CLRFIQMSKA]
        STR     a1, [a3, #CLRFIQMSKB]
        MOV     a1, #1:SHL:(38-32) + 1:SHL:(39-32)
        STR     a1, [a3, #IRQTRIGGER]           ; interrupts 38+39 (vsync) are edge triggered
        MOV     a1, #2
        STR     a1, [a3, #IRQSOFT]              ; always want programmed IRQ on for FIQ downgrade
        MOV     a1, #2_1111
        STR     a1, [a3, #IRQPOLB]              ; INT0 to INT3 all active low
 [ HWPrio
        ADR     a1, IRQPriorityTable
        MOV     a2, #11
        ADD     ip, a3, #INTPRI0
05      LDR     a4, [a1], #4
        STR     a4, [ip], #4
        SUBS    a2, a2, #1
        BNE     %BT05
 ]
        MOV     pc, lr

 [ HWPrio
; See Docs.IRQPrio for information on the priority scheme used.

PrioToDevNoMap
        =       46,21,22,23,24,25,26,27
        =       28,64,53,65,66,67,68,40
        =       19,31,32,33,34,35, 1,69
        =       45, 4,70,71,72,73,30,74

PHTable
        DCD     PH_Debug - PHTable
        DCD     PH_UART - PHTable
        DCD     PH_UARTComb - PHTable
        DCD     PH_SPI - PHTable
        DCD     PH_SPIComb - PHTable
        DCD     PH_Raster - PHTable
        DCD     PH_VSync - PHTable
        DCD     PH_Timers - PHTable
        DCD     PH_RTC - PHTable
        DCD     PH_Scan - PHTable
        DCD     PH_Unused - PHTable

        MACRO
        Prio    $a,$b,$c,$d,$e,$f
        DCD     ($a):OR:(($b):SHL:5):OR:(($c):SHL:10):OR:(($d):SHL:15):OR:(($e):SHL:20):OR:(($f):SHL:25)
        MEND
IRQPriorityTable
        Prio    31,22, 9, 9,25,27
        Prio    27,27,27,28,11,11
        Prio    11,11,11,11,29,29
        Prio    23,16,26, 1, 2, 3
        Prio     4, 5, 6, 7, 8,12
        Prio    30,17,18,19,20,21
        Prio    23,28,26,23,15,13
        Prio    13,13,13,24, 0,14
        Prio    12,12,12,14,14,10
        Prio    31,31,31,31,31,31
        Prio    31,31,31,31,31,31
 ]

HAL_IRQEnable
        LDR     a3, HW_Address
        MOV     ip, #1
        CMP     a1, #32
        SUBHS   a1, a1, #32
        MOV     a1, ip, LSL a1
        ADD     a3, a3, #INT_BASE-PERIPHERAL_BASE
        STRLO   a1, [a3, #IRQMASKA]
        STRHS   a1, [a3, #IRQMASKB]
        MOV     pc, lr

HAL_IRQDisable
        LDR     a3, HW_Address
        MOV     ip, #1
        CMP     a1, #32
        SUBHS   a1, a1, #32
        MOV     a1, ip, LSL a1
        ADD     a3, a3, #INT_BASE-PERIPHERAL_BASE
        STRLO   a1, [a3, #CLRIRQMSKA]
        STRHS   a1, [a3, #CLRIRQMSKB]
        MOV     pc, lr

        IMPORT  HAL_IRQClear_Timer

HAL_IRQClear
        LDR     a3, HW_Address

        CMP     a1, #4
        RSBHSS  ip, a1, #8
        BHS     HAL_IRQClear_Timer

        TEQ     a1, #4
        TEQNE   a1, #5
        BEQ     HAL_IRQClear_Timer
        TEQ     a1, #20
        BEQ     HAL_IRQClear_Video

        SUBS    a1, a1, #32
        MOVLO   pc, lr

        MOV     ip, #1
        MOV     a1, ip, LSL a1
        ADD     a3, a3, #INT_BASE-PERIPHERAL_BASE
        STR     a1, [a3, #RAWIRQSTB]
        MOV     pc, lr

 [ HWPrio

HAL_IRQSource
        LDR     a3, HW_Address
        ADD     a3, a3, #INT_BASE-PERIPHERAL_BASE
        LDR     ip, [a3, #INTPYSTATUS]
        ADR     a2, PrioToDevNoMap
        MOVS    ip, ip, LSL #27
        LDRCSB  a1, [a2, ip, LSR #27]
        BCC     NoIRQ
        SUBS    ip, a1, #64
        MOVLO   pc, lr
        ADR     a2, PHTable
        LDR     a1, [a2, ip, LSL #2]
        ADD     pc, a2, a1
NoIRQ   MOV     a1, #64
        MOV     pc, lr

PH_Debug
        LDR     a2, [a3, #MASKIRQSTA]
        TST     a2, #1:SHL:2
        MOVNE   a1, #2
        MOVEQ   a1, #3
        MOV     pc, lr

PH_UART
        LDR     a2, [a3, #MASKIRQSTA]
        ADR     a1, PH_QuickTab
        MOV     a2, a2, LSL #16
        LDRB    a1, [a1, a2, LSR #26]
        ADD     a1, a1, #10
        MOV     pc, lr

PH_UARTComb
        LDR     a2, [a3, #MASKIRQSTB]
        TST     a2, #1:SHL:16
        MOVNE   a1, #48
        MOVNE   pc, lr
        TST     a2, #1:SHL:17
        MOVNE   a1, #49
        MOVNE   pc, lr
        TST     a2, #1:SHL:18
        MOVNE   a1, #50
        MOVEQ   a1, #29
        MOV     pc, lr
PH_SPI
        LDR     a2, [a3, #MASKIRQSTB]
        ADR     a1, PH_QuickTab
        MOV     a2, a2, LSL #19
        LDRB    a1, [a1, a2, LSR #28]
        ADD     a1, a1, #41
        MOV     pc, lr

PH_SPIComb
        LDR     a2, [a3, #MASKIRQSTB]
        TST     a2, #1:SHL:19
        MOVNE   a1, #51
        MOVNE   pc, lr
        TST     a2, #1:SHL:20
        MOVNE   a1, #52
        MOVEQ   a1, #47
        MOV     pc, lr

PH_Raster
        LDR     a2, [a3, #MASKIRQSTA]
        TST     a2, #1:SHL:18
        MOVNE   a1, #18
        MOVNE   pc, lr
        LDR     a2, [a3, #MASKIRQSTB]
        TST     a2, #1:SHL:4
        MOVNE   a1, #36
        MOVEQ   a1, #39
        MOV     pc, lr

PH_VSync
        LDR     a2, [a3, #MASKIRQSTA]
        TST     a2, #1:SHL:20
        MOVNE   a1, #20
        MOVEQ   a1, #38
        MOV     pc, lr

PH_Timers
        LDR     a2, [a3, #MASKIRQSTA]
        ADR     a1, PH_QuickTab
        MOV     a2, a2, LSL #23
        LDRB    a1, [a1, a2, LSR #28]
        ADD     a1, a1, #5
        MOV     pc, lr

PH_RTC
        LDR     a2, [a3, #MASKIRQSTA]
        TST     a2, #1:SHL:9
        MOVNE   a1, #9
        MOVEQ   a1, #37
        MOV     pc, lr

PH_Scan
        LDR     a2, [a3, #MASKIRQSTA]
        TST     a2, #1:SHL:16
        MOVNE   a1, #16
        MOVEQ   a1, #17
        MOV     pc, lr

PH_Unused
        LDR     a2, [a3, #MASKIRQSTA]
        TST     a2, #1:SHL:0
        MOVNE   a1, #0
        MOVNE   pc, lr
        LDR     a2, [a3, #MASKIRQSTB]
        ADR     a1, PH_QuickTab
        TST     a2, #2_1111:SHL:22
        MOVNE   a2, a2, LSL #6
        LDRB    a1, [a1, a2, LSR #26]
        ADDNE   a1, a1, #54
        ADDEQ   a1, a1, #60
        MOV     pc, lr

PH_QuickTab
        GBLA    val
val     SETA    0
        WHILE   val < 64
 [ (val :AND: 1) <> 0
        =       0
 |
  [ (val :AND: 2) <> 0
         =       1
  |
   [ (val :AND: 4) <> 0
          =       2
   |
    [ (val :AND: 8) <> 0
           =       3
    |
     [ (val :AND: 16) <> 0
            =       4
     |
      [ (val :AND: 32) <> 0
             =       5
      |
             =       255
      ]
     ]
    ]
   ]
  ]
 ]
val     SETA    val+1
        WEND


 |

HAL_IRQSource
        LDR     a3, HW_Address
        ADD     a3, a3, #INT_BASE-PERIPHERAL_BASE
        MOV     a1, #0
        LDR     ip, [a3, #MASKIRQSTA]
05      MOVS    ip, ip, LSR #1
        MOVCS   pc, lr
        BEQ     %FT30
        ADD     a1, a1, #1
        B       %BT05
30      MOV     a1, #32
        LDR     ip, [a3, #MASKIRQSTB]
10      MOVS    ip, ip, LSR #1
        MOVCS   pc, lr
        ADD     a1, a1, #1
        BNE     %BT10
        MOV     a1, #64
        MOV     pc, lr

 ]

HAL_FIQDisableCode
        ADR     a2, FIQOff_Code
        LDMIA   a2!, {a3,a4,ip}
        STMIA   a1!, {a3,a4,ip}
        LDR     ip, HW_Address
        LDMIA   a2!, {a3,a4}
        ADD     ip, ip, #INT_BASE-PERIPHERAL_BASE
        STMIA   a1!, {a3,a4,ip}
        MOV     pc, lr

FIQOff_Code
        LDR     r8, FIQOff_INT_BASE
        MVN     r9, #0
        STR     r9, [r8, #CLRFIQMSKA]
        STR     r9, [r8, #CLRFIQMSKB]
        SUBS    pc, lr, #4
FIQOff_INT_BASE
FIQOff_Code_End

        END
