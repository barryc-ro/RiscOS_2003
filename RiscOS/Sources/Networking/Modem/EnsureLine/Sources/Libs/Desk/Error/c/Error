/*
    ####             #    #     # #
    #   #            #    #       #          The FreeWare C library for
    #   #  ##   ###  #  # #     # ###             RISC OS machines
    #   # #  # #     # #  #     # #  #   ___________________________________
    #   # ####  ###  ##   #     # #  #
    #   # #        # # #  #     # #  #    Please refer to the accompanying
    ####   ### ####  #  # ##### # ###    documentation for conditions of use
    ________________________________________________________________________

    File:    Error.c
    Author:  Copyright © 1992 Jason Williams
             Improved by Philip Colmer
    Version: 0.19 (13 Jul 1993)
    Purpose: Centralised error handling functions
    Mods:    7 Apr 1992 - JCW - Added Desk_Error_OutOfMemory
            30 Apr 1993 - JCW - Fixed (Wimp_ReportError prototype changed)
            14 Jun 1993 - PJC - Allowed Desk_Error_Report(Fatal) to take
                                variable arguments
            13 Jul 1993 - PJC - Added varargs to "Internal" versions of above
*/


#include <stdarg.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include "Desk.Error.h"
#include "Desk.WimpSWIs.h"
#include "Desk.Event.h"
#include "Desk.BackTrace.h"
#include "Desk.Debug.h"



extern void Desk_Error_Report(int errornum, const char *report, ...)
{
  va_list va;
  Desk_os_error    error;
  Desk_error_flags eflags;

  va_start(va, report);
  vsprintf(error.errmess, report, va);
  va_end(va);
  error.errnum = errornum;

  eflags.value = 1;
  Desk_Wimp_ReportError(&error, eflags.value, Desk_Event_taskname);
	
	Desk_Debug_Printf( Desk_error_PLACE "Desk_Error_Report*: %i, '%s'\n", error.errnum, error.errmess);
	#ifdef DeskLib_DEBUG
		Desk_BackTrace_OutputToStreamWithPrefix( stderr, "Desk_Error_Report* ");
	#endif
}



extern void Desk_Error_ReportFatal(int errornum, const char *report, ...)
{
  va_list va;
  char errmess[256];

  va_start(va, report);
  vsprintf(errmess, report, va);
  va_end(va);

  Desk_Error_Report(errornum,
     "%s has suffered a fatal internal error (%s) and must quit immediately",
     Desk_Event_taskname, errmess);
  exit(1);
}

