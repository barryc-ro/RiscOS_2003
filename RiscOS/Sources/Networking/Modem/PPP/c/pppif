#include "kernel.h"
#include "swis.h"
#include <sys/syslog.h>

#include "socklib.h"

#include "if_ppp.h"
#include "pppif.h"

_kernel_oserror *pppif_getspeeds(int unit, const int **table, int *no_speeds)
{
    const static int ro310_table[15]=
                               {75*2, 150*2, 300*2, 1200*2, 2400*2, 4800*2, 9600*2,
                                19200*2, 50*2, 110*2, (int)(134.5*2), 600*2, 1800*2,
                                3600*2, 7200*2};

    _kernel_oserror *e;

    e=_swix(ppp_softc[unit].sc_swino, _IN(0)|_OUTR(1,2), 9, table, no_speeds);

    if (e)
    {
        if (e->errnum==0x13581) /* Unknown SerialOp */
        {
            /* Assume RISC OS 3.10 speeds */
            e=0;
            *table=ro310_table;
            *no_speeds=15;
        }
        else
            return e;
    }

    return 0;
}

_kernel_oserror *pppif_setspeed(int unit, int speed, int *oldspeed)
{
    _kernel_oserror *e;
    int flags=_INR(0,1);

    if (oldspeed)
        flags|=_OUT(1);

    e=_swix(ppp_softc[unit].sc_swino, flags, 5, speed, oldspeed);

    if (!e)
        e=_swix(ppp_softc[unit].sc_swino, _INR(0,1), 6, speed);

    return e;
}

_kernel_oserror *pppif_getspeed(int unit, int *speed)
{
    return _swix(ppp_softc[unit].sc_swino, _INR(0,1)|_OUT(1), 5, -1, speed);
}

_kernel_oserror *pppif_setstatus(int unit, unsigned eor, unsigned and, unsigned *oldstatus)
{
    int flags=_INR(0,2);

    if (oldstatus)
        flags|=_OUT(1);

    return _swix(ppp_softc[unit].sc_swino, flags, 0, eor, and, oldstatus);
}

_kernel_oserror *pppif_setformat(int unit, int format, int *oldformat)
{
    int flags=_INR(0,2);

    if (oldformat)
        flags|=_OUT(1);

    return _swix(ppp_softc[unit].sc_swino, flags, 1, format, oldformat);
}
