; File:    asmutils.s
; Purpose: Control IRQs
; Author:  Ben Laughton
; History:
;
; 1997-08-19: BAL
; Created (code by KB)
;
; 1999-05-17: BAL
; Added user_mode_donothing, taken from Internet module

	GET	Hdr:ListOpts
	GET	Hdr:Macros
	GET	Hdr:System

	AREA	|C$$Code|, CODE, READONLY

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; irqs_off
;
; Disable IRQs. Once IRQs are disabled,  we cannot/must not be reentered.
;
; Returns a value indicating the state of interrupts prior to calling here.
;
		EXPORT	irqs_off[LEAF]
irqs_off	ROUT

	AND	r0, lr, #I_bit
	ORRS	pc, lr, #I_bit

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; ensure_irqs_on:
;
; Ensure that interrupts are enabled. Returns a value that,  when passed
; to restore_irqs,  will restore the state prior to enabling interrupts.
;
		EXPORT	irqs_on[LEAF]
irqs_on		ROUT

	AND	r0, lr, #I_bit
	BICS	pc, lr, #I_bit

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; restore_irqs etc:
;
; Restore interrupts to the state they were in prior to a call to
; splhi,  using the value returned by splhi.
;
		EXPORT	irqs_restore[LEAF]

irqs_restore	ROUT

	BIC	lr, lr, #I_bit
	ORRS	pc, lr, r0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; _kernel_oserror *  user_mode_donothing (void)
;
; Force the processor into user mode and call a SWI to allow transient
; callbacks to go off.
;

		EXPORT	user_mode_donothing[LEAF]
user_mode_donothing ROUT

	STMFD r13!,{lr}

	; Execute a SWI in user mode to trigger callbacks
	TEQP	pc, #0			; To user mode
	MOV	r0, #0
	MOV	r1, #1
	SWI	XOS_Byte		; Read OS version
	SWI	XOS_EnterOS		; Back to SVC mode

	LDMFD r13!,{pc}^

	END
