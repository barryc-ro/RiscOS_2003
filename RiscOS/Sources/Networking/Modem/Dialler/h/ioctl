/* File:    ioctl.h
 * Purpose: Interface to Dual Serial module
 * Author:  Ben Laughton
 * History:
 *
 * 1996-12-16: BAL
 * Created.
 */

#ifndef ioctl_h
#define ioctl_h

/* =============================================================================
 * Include header files
 */

/* CLib */
#include "kernel.h"




/* =============================================================================
 * Define contants
 */

#define OSArgs_IOCtl 0x9      /* New reason code for SWI OS_Args */
#define DeviceCall_IOCtl 0xE  /* New reason code for SWI DeviceFS_CallDevice */

/* IOCtl reason codes */
enum
{
    IOCtl_baud_rate = 1,
    IOCtl_data_format,
    IOCtl_handshaking,
    IOCtl_buffer_size,
    IOCtl_buffer_threshold,
    IOCtl_control_lines,
    IOCtl_fifo_trigger_level,
    IOCtl_number_baud_rates,
    IOCtl_baud_rate_from_index,
    IOCtl_flush_stream
};

/* Bit masks for setting / reading data length */
#define IOCtl_data_length_5 (0x00000005)
#define IOCtl_data_length_6 (0x00000006)
#define IOCtl_data_length_7 (0x00000007)
#define IOCtl_data_length_8 (0x00000008)

/* Bit masks for setting / reading number of start / stop bits */
#define IOCtl_stop_bits_1 (0x00000100)
#define IOCtl_stop_bits_2 (0x00000200)

/* Bit masks for setting / reading parity */
#define IOCtl_no_parity   (0x00000000)
#define IOCtl_even_parity (0x00010000)
#define IOCtl_odd_parity  (0x00020000)

/* Bit masks for setting / reading handshaking */
#define IOCtl_no_handshake       (0)
#define IOCtl_rts_cts_handshake  (1)
#define IOCtl_xon_xoff_handshake (2)
#define IOCtl_dtr_dsr_handshake  (3)

/* Bit masks for setting / reading control lines */
#define IOCtl_control_lines_writable (0x0000ffff)

#define IOCtl_control_line_DTR   (0x00000001)
#define IOCtl_control_line_RTS   (0x00000002)
#define IOCtl_control_line_CTS   (0x00010000)
#define IOCtl_control_line_DSR   (0x00020000)
#define IOCtl_control_line_RI    (0x00040000)
#define IOCtl_control_line_DCD   (0x00080000)
#define IOCtl_control_line_FIFOs (0x00100000)

/* Bit masks to set data read / write */
#define IOCtl_read  (0x1)
#define IOCtl_write (0x2)




/* =============================================================================
 * Declare new types
 */

typedef struct
{
    unsigned int reason   : 16; /* ioctl reason code */
    unsigned int group    : 8;  /* ioctl group code */
    unsigned int reserved : 6;  /* should be zero */
    unsigned int read     : 1;  /* read flag */
    unsigned int write    : 1;  /* write flag */
    unsigned int data;          /* actual data */
} ioctl_t;




/* =============================================================================
 * Declare function prototypes
 */

extern _kernel_oserror* xosargs_ioctl (const int serial_file,
                                       const int group,
                                       const int reason,
                                       const int wr_flags,
                                       const unsigned int data_in,
                                       unsigned int *const data_out);

#endif
