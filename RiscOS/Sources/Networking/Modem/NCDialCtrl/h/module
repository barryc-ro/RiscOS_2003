/*###########################################################################*
*                                                                            *
* FILE:    module.h                                                          *
*                                                                            *
* PROJECT: NCDialCtrl module - Funai                                         *
*                                                                            *
* PURPOSE: Header file for module source code                                *
*                                                                            *
* VERSION: Version 1.12, Steve Revill 30th/June/1998                         *
*                                                                            *
*###########################################################################*/

#include "defs.h"

extern void osmodfree(char *);
extern char *osmodget(int);
extern void removeticker(void (*irq_entry)(), void *);
extern int  monotonic_time(void);
extern void oscli(char *);
extern char *expand_special(char *temp);

#ifdef BUILD_RESOURCES
  extern void *resources_base(void);
#endif

extern void *pwp;
extern BOOL debug;
extern BOOL online;
extern BOOL doingit;

#define scrap_dial_dir "<Wimp$ScrapDir>.NCDialCtrl"
#define scrap_file_dir "<Wimp$ScrapDir>.NCDialCtrl.Files"
#define scrap_ppp_dir  "<Wimp$ScrapDir>.NCDialCtrl.Files.PPP"
#define scrap_ppp_opts "<Wimp$ScrapDir>.NCDialCtrl.Files.PPP.Options"
#define scrap_pap      "<Wimp$ScrapDir>.NCDialCtrl.Files.PPP.PAPSecrets"
#define scrap_chap     "<Wimp$ScrapDir>.NCDialCtrl.Files.PPP.CHAPSecret"
#define scrap_dial_scr "<Wimp$ScrapDir>.NCDialCtrl.Files.Script"
#define scrap_hang_scr "Resources:$.Resources.NCDialCtrl.Files.Hangup"
/* DiallerB SWI parameters */
#ifndef HARDWARE_MODEM /* HARDWARE_MODEM was not passed in as a build flag. */
  #define device_name    "Devices:$.SoftModem"
#else
  #define device_name    "Devices:$.Modem"
#endif /* HARDWARE_MODEM */

#define dial_speed     115200

/* Define the debug routines as macros (use FALSE for non-debug version) */
#ifdef DEBUG
  #define developing                               /* This product is under construction         */
  #define d_path "IZipFS::OwenZip.$.DebugLog"      /* Output path for echoing the debug messages */
  #define DEBUG_TOP(args)                   \
          {                                 \
            if (debug)                      \
            {                               \
/*               FILE *d_file;                  */\
              _swix(0x104, 0);              \
/*               fprintf(stderr, args);         */\
/*               d_file = fopen(d_path, "a");   */\
/*                 fputc('\n', d_file);         */\
/*                 fprintf(d_file, args);       */\
/*               fclose(d_file);                */\
            }                               \
          }
  #define DEBUG_PRINT(args)                 \
          {                                 \
            if (debug)                      \
            {                               \
/*               FILE *d_file;                  */\
              fprintf(stderr, args);        \
/*               d_file = fopen(d_path, "a");   */\
/*                 fprintf(d_file, args);       */\
/*               fclose(d_file);                */\
            }                               \
          }
  #define DEBUG_ECHO(args)                  \
          {                                 \
            if (debug)                      \
            {                               \
/*               FILE *d_file;                  */\
/*               d_file = fopen(d_path, "a");   */\
/*                 fprintf(d_file, args);       */\
/*               fclose(d_file);                */\
            }                               \
          }
  #define DEBUG_TOPM(args)                  \
          {                                 \
            if (debug)                      \
            {                               \
              _swix(0x104, 0);              \
              fprintf args;                 \
            }                               \
          }
  #define DEBUG_PRINTM(args)                \
          {                                 \
            if (debug)                      \
              {                             \
                fprintf args;               \
              }                             \
          }
  #define DEBUG_ECHOM(args)                 \
          {                                 \
            if (debug)                      \
            {                               \
/*               FILE *d_file;                  */\
/*               d_file = fopen(d_path, "a");   */\
/*                 fprintf args;                */\
/*               fclose(d_file);                */\
            }                               \
          }
#else
  #define DEBUG_TOP(args)
  #define DEBUG_TOPM(args)
  #define DEBUG_PRINT(args)
  #define DEBUG_PRINTM(args)
  #define DEBUG_ECHO(args)
  #define DEBUG_ECHOM(args)
#endif
