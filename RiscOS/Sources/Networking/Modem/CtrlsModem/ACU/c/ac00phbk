/****************************************************************************
/
/     Copyright 1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ac00phbk.c
/
/     Module Version:   ACU 5.00
/
/     Function:         Contains the core routines for the Phonebook
/                       ACU submodule.
/
/     Product:          Phonebook ACU Core Code
/
/     History:
/
/
/        Created:       8/31/95.
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/
#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"

#include "par_def.h"
#include "par_pro.h"

#include "phbk_def.h"
#include "phbk_mem.h"
#include "phbk_pro.h"

#include "v25_def.h"
#include "ee_def.h"
#include "mt_pro.h"

void plus_phbk_write_e(ubyte *);    
void plus_phbk_r_eq(void);     
void plus_phbk_w_eq(void);     
void plus_phbk_read_e(ubyte *);     
void plus_phbk_find_e(ubyte *);     
void plus_phbk_find_eq(void);
void plus_phbk_index_first(void);
void plus_phbk_index_last(void);
void plus_phbk_index_next(void);
void plus_phbk_index_prev(void);
void plus_phbk_index_null(void);
void plus_me_error_e(ubyte *);      
void plus_me_error_eq(void);     
void plus_me_error_q(void);

void acu_phbk_init(void)
{
   phbk_init();
}

/******************************************************************************
/
/              Parser Structure for PHONEBOOK AT Commands
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
PARSE_CMD_TABLE_STRUCT phonebook_commands[]=
{
    (ubyte *) "+CPBW=?",  plus_phbk_w_eq,       NO_PARAM,      NO_FLAGS, 
    (ubyte *) "+CPBW=",   plus_phbk_write_e,    CONST_STRING,  NO_FLAGS, 
    (ubyte *) "+CPBR=?",  plus_phbk_r_eq,       NO_PARAM,      NO_FLAGS, 
    (ubyte *) "+CPBR=",   plus_phbk_read_e,     CONST_STRING,  NO_FLAGS,
    (ubyte *) "+CPBF=?",  plus_phbk_find_eq,    NO_PARAM,      NO_FLAGS,
    (ubyte *) "+CPBF=",   plus_phbk_find_e,     CONST_STRING,  NO_FLAGS, 
    (ubyte *) "+CPBI=F?", plus_phbk_index_first,NO_PARAM,      NO_FLAGS,
    (ubyte *) "+CPBI=L?", plus_phbk_index_last, NO_PARAM,      NO_FLAGS, 
    (ubyte *) "+CPBI=N?", plus_phbk_index_next, NO_PARAM,      NO_FLAGS, 
    (ubyte *) "+CPBI=P?", plus_phbk_index_prev, NO_PARAM,      NO_FLAGS, 
    (ubyte *) "+CPBI=E?", plus_phbk_index_null, NO_PARAM,      NO_FLAGS,
    (ubyte *) "+CMEE=?",  plus_me_error_eq,     NO_PARAM,      NO_FLAGS,
    (ubyte *) "+CMEE=",   plus_me_error_e,      BYTE_NUMERIC,  NO_FLAGS, 
    (ubyte *) "+CMEE?",   plus_me_error_q,      NO_PARAM,      NO_FLAGS, 
    END_OF_PARSE_TABLE
};

/*******************************************************************************
/
/     Routine:       set_acu_phbk_cmds
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This Routine enables parsing of Phonebook AT
/                      commands.  These are commands defined by the
/                      Phonebook specification.
/
/     Input Parameters:   state - OFF (0) to disable, ON (otherwise) to enable.
/
/     Output Parameters: None
/
/     Global Variables Changed:  None
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void set_acu_phbk_cmds(ubyte state)
{
   if (state == OFF)
      at_parser_tables(DISABLE_TABLE,phonebook_commands);
   else
      at_parser_tables(ENABLE_TABLE,phonebook_commands);
}

/******************************************************************************
/
/     Routine:       plus_phbk_write_e
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBW="
/
/     Input Parameters: cmd_param_ptr - Pointer to the AT command's parameter:
/
/     Output Parameters: none
/
/     Global Variables Changed: phbk_parsed_index
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_write_e(ubyte *cmd_param_ptr)
{
   ubyte number_count, text_count, *scan_ptr, *last_comma;
   ubyte index, done_clearing, error;
   ubyte temp_num_array[PHBK_NUMBER_SIZE], temp_text_array[PHBK_TEXT_SIZE];
   uword eeprom_size, eeprom_addr;

   /* Compute the ASCII to decimal numeric value */
   phbk_parsed_index = 0;
   while ((*cmd_param_ptr >= '0') && (*cmd_param_ptr <= '9'))
   {
      phbk_parsed_index = ((phbk_parsed_index * 10) + (*cmd_param_ptr++ - '0'));
   }

   /* If a value of 255 is entered, clear out phonebook */
   if (phbk_parsed_index == CLEAR_ALL_ENTRIES)
   {
      done_clearing = FALSE;
      index = phbk_head_of_list;
      eeprom_size = sizeof(struct phbk_bcd_entry_struct);

      while ((!done_clearing) && (index != EMPTY_LIST))
      {
         /* Clear in RAM and in EEPROM */
         phonebook_entry[index-1].in_use = FALSE;
         eeprom_addr = ((PHBK_BASE + (eeprom_size * (index-1))) + PHBK_EE_INUSE_ADDR);
         error = modem_write_data(eeprom_addr,1,&phonebook_entry[index-1].in_use);
      
         if (phonebook_entry[index-1].next != index)
            index = phonebook_entry[index-1].next;
         else
            done_clearing = TRUE;
      }
   
      phbk_last_accessed = INVALID;

      /* Clear the head index in EEPROM */
      phbk_head_of_list = EMPTY_LIST;
      eeprom_addr = PHBK_FIRST_ENTRY;
      error = modem_write_data(eeprom_addr,1,&phbk_head_of_list);
      return;
   }
   /* Valid indices of 1-100 only */
   else if ((phbk_parsed_index > phbk_max_entries) || (phbk_parsed_index == 0))
   {
      phbk_error(INVALID_INDEX);
      return;
   }

   if (*cmd_param_ptr == ',')
   {
      /* Need to mark the final comma in the command line in
         order to distinguish from a comma delimiter from 
         a pause in the phone number field */
      *cmd_param_ptr++;
      scan_ptr = cmd_param_ptr;
      while (*scan_ptr != '\0')
      {
         if (*scan_ptr == ',')
            last_comma = scan_ptr;

         scan_ptr++;
      }

      /* Get the Phone number string from the command line */
      /* initialize the count and skip the trailing comma  */
      /* Watch for pointer math in initial WHILE statement when porting */
      number_count = 0;
      while (cmd_param_ptr != last_comma)
      {
         if (((*cmd_param_ptr >= '0') && (*cmd_param_ptr <= '9')) ||
               (*cmd_param_ptr == '-') || (*cmd_param_ptr == '*') ||
               (*cmd_param_ptr == 'W') || (*cmd_param_ptr == '!') ||
               (*cmd_param_ptr == ',') || (*cmd_param_ptr == '(') ||
               (*cmd_param_ptr == ')')) 
         {
            /* Skip the dashes and parens in the phone number field */
            if ((*cmd_param_ptr != '-') && (*cmd_param_ptr != '(') &&
                (*cmd_param_ptr != ')'))
               temp_num_array[number_count++] = *cmd_param_ptr;

            *cmd_param_ptr++;
         }
         else
         {
            phbk_error(OPERATION_NOT_ALLOWED);
            return;
         }
      }

      /* Parse the text string into the phone book, all chars valid */
      /* skip the remaining comma on the command line */
      *cmd_param_ptr++;
      text_count = 0;
      while (*cmd_param_ptr != '\0')
      {
         if (*cmd_param_ptr != '"')
         {
            /* Convert to all caps for sorting */
            if ((*cmd_param_ptr >= 'a') && (*cmd_param_ptr <= 'z'))
               *cmd_param_ptr -= 0x20;
            temp_text_array[text_count++] = *cmd_param_ptr++;
         }
         else
            *cmd_param_ptr++;
      }

      /* Check the counts and make sure that they are within the limits */
      if ((text_count > PHBK_TEXT_SIZE) || (number_count > PHBK_NUMBER_SIZE))
      {
         phbk_error(OPERATION_NOT_ALLOWED);
         return;
      }
      else
      {
         /* Terminate the strings in the arrays */
         temp_num_array[number_count] = '\0';

         if (text_count < PHBK_TEXT_SIZE)
            temp_text_array[text_count] = '\0';

         /* Build the entries in the structure */
         phbk_a_to_BCD(temp_num_array);
         phbk_store_atext(temp_text_array);

         /* Write the corresponding entry and index here */
         phbk_write_entry(phbk_parsed_index,temp_text_array);
      }
   }
   else if (*cmd_param_ptr == '\0')
      /* Delete the corresponding index here */
      phbk_delete_entry(phbk_parsed_index); 
   else
      phbk_error(INVALID_INDEX);
}

/******************************************************************************
/
/     Routine:       plus_phbk_r_eq 
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBW=? AND AT+CPBR=?"
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_r_eq(void)
{
   ubyte temp_array[6];

   /* Store the canned message along with the variable values */
   output_info((ubyte *)"+CPBR: 1-100,",STORED_NUM);
   phbk_d_to_a(2,phbk_number_length,&temp_array[0]);
   temp_array[2] = ',';
   phbk_d_to_a(2,phbk_text_length,&temp_array[3]);
   temp_array[5] = '\0';
   output_info(temp_array,NUMERIC_FORM);

}
/******************************************************************************
/
/     Routine:       plus_phbk_w_eq 
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBW=? 
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_w_eq(void)
{
   ubyte temp_array[6];

   /* Store the canned message along with the variable values */
   output_info((ubyte *)"+CPBW: 1-100,",STORED_NUM);
   phbk_d_to_a(2,phbk_number_length,&temp_array[0]);
   temp_array[2] = ',';
   phbk_d_to_a(2,phbk_text_length,&temp_array[3]);
   temp_array[5] = '\0';
   output_info(temp_array,NUMERIC_FORM);

}

/******************************************************************************
/
/     Routine:       plus_phbk_read_e 
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBR="
/
/     Input Parameters: cmd_param_ptr - Pointer to the AT command's parameter:
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_read_e(ubyte *cmd_param_ptr)
{
   ubyte read_array[PHBK_READ_SIZE];
   ubyte index_count, index_value, cmd_sent;

   index_count = 0;
   cmd_sent = FALSE;
   while (*cmd_param_ptr != '\0')
   {
      index_value = 0;

      /* Parse the command line for single or multiple indicies */
      while ((*cmd_param_ptr != ',') && (*cmd_param_ptr != '\0'))
      {
         if ((*cmd_param_ptr >= '0') && (*cmd_param_ptr <= '9'))
            index_value = ((index_value * 10) + (*cmd_param_ptr++ - '0'));
         else
         {
            phbk_error(INVALID_INDEX);
            return;
         }
      }
      
      /* Do not want to skip if the next char is a NULL EOS */
      if (*cmd_param_ptr == ',')
         *cmd_param_ptr++;

      /* Put the indices into a temp array for searching information */
      /* and check to see if the this index value is a valid one */
      if ((index_value > phbk_max_entries) || (index_count > phbk_max_entries) ||
          (index_value == 0) || (phonebook_entry[index_value-1].in_use == FALSE))
      {
         phbk_error(INVALID_INDEX);
         return;
      }
      else
      {
         /* Only send output (+CPBR: once) to the DTE */
         if (!cmd_sent)
         {
            output_info((ubyte *)"+CPBR: ",VERBOSE_FORM);
            cmd_sent = TRUE;
         }

         /* The corresponding entries are stored in the index-1
             value of the phonebook entry structure, since the
             valid indicies are 1-100 */
         phbk_read_entry(index_value, read_array);
         output_info(d_to_a(index_value),UNFORMATTED);
         output_info(read_array,NUMERIC_FORM);
      }
   }

   /* Adjust the last accessed for the next reference. 1 is added
      because the indices of the phonebook start at 1 not 0 */
   phbk_last_accessed = index_value;
}

/******************************************************************************
/
/     Routine:       plus_phbk_find_e 
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBF="
/
/     Input Parameters: cmd_param_ptr - Pointer to the AT command's parameter:
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_find_e(ubyte *cmd_param_ptr)
{
   ubyte index, *temp_ptr, *entry_ptr, done_comparing, complete_list_chkd;
   ubyte cmd_sent, read_array[PHBK_READ_SIZE];

   /* If the phonebook is empty, return with error,
      otherwise, return the index of the last alphabetic index */
   if (phbk_head_of_list == EMPTY_LIST)
      phbk_error(NOT_FOUND);
   else
   {
      /* Index is equal to the first element in the linked list */
      index = phbk_head_of_list;
      cmd_sent = FALSE;
      complete_list_chkd = FALSE;

      while (!complete_list_chkd)
      {
         /* Set one temp pointer to the entry and one to the string
            in the command line, then compare for equality */
         entry_ptr = (ubyte *)&phonebook_entry[index-1].text;
         temp_ptr = cmd_param_ptr;
         done_comparing = FALSE;

         while (!done_comparing)
         {
            /* Convert to all caps for string search */
            if ((*temp_ptr >= 'a') && (*temp_ptr <= 'z'))
               *temp_ptr -= 0x20;

            if (*temp_ptr == '"')
               *temp_ptr++;
            else if (*temp_ptr == '\0')
            {
               /* DONE - strings the same, send output (+CPBF once) to DTE */
               done_comparing = TRUE;
               if (!cmd_sent)
               {
                  output_info((ubyte *)"+CPBF: ",VERBOSE_FORM);
                  cmd_sent = TRUE;
               }

               phbk_read_entry(index, read_array);
               output_info(d_to_a(index),UNFORMATTED);
               output_info(read_array,NUMERIC_FORM);
            }
            else if (*temp_ptr != *entry_ptr)
               done_comparing = TRUE;
            else
            {
               /* Strings are same - so far */
               *temp_ptr++;
               *entry_ptr++;
            }
         }

         /* If the index is equal to the next field in the structure,
            this was the final element and search is complete */
         if (phonebook_entry[index-1].next == index)
            complete_list_chkd = TRUE;
         else
            index = phonebook_entry[index-1].next;
      }

      /* No corresponding matches found */
      if (!cmd_sent)
         phbk_error(NOT_FOUND);
   }
}

/******************************************************************************
/
/     Routine:       plus_phbk_find_eq
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBF=?"
/
/     Input Parameters: cmd_param_ptr - Pointer to the AT command's parameter:
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_find_eq(void)
{
   ubyte temp_array[6];

   output_info((ubyte *)"+CPBF: ",STORED_NUM);
   phbk_d_to_a(2,phbk_number_length,&temp_array[0]);
   temp_array[2] = ',';
   phbk_d_to_a(2,phbk_text_length,&temp_array[3]);
   temp_array[5] = '\0';
   output_info(temp_array,NUMERIC_FORM);
}

/******************************************************************************
/
/     Routine:       plus_phbk_index_first
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBI=F?"
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_index_first(void)
{
   /* If the phonebook is empty, return with error,
      otherwise, return the index of the first alphabetic index */
   if (phbk_head_of_list == EMPTY_LIST)
      phbk_error(NOT_FOUND);
   else
      output_info(d_to_a(phbk_head_of_list),VERBOSE_FORM);
}

/******************************************************************************
/
/     Routine:       plus_phbk_index_last
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBI=L?"
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_index_last(void)
{
   ubyte found,index;

   found = FALSE;

   /* If the phonebook is empty, return with error,
      otherwise, return the index of the last alphabetic index */
   if (phbk_head_of_list == EMPTY_LIST)
      phbk_error(NOT_FOUND);
   else
   {
      index = phbk_head_of_list;
      while (!found)
      {
         /* if phonebook entry next field points to itself,
            it is the last alphabetic entry in the linked list */
         if (phonebook_entry[index-1].next == index)
         {
            output_info(d_to_a(phonebook_entry[index-1].next),VERBOSE_FORM);
            found = TRUE;
         }
         else
            /* not found, get the next index in the linked list */
            index = phonebook_entry[index-1].next;
      }
   }
}

/******************************************************************************
/
/     Routine:       plus_phbk_index_next
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBI=N?"
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_index_next(void)
{
   ubyte index;

   if (phbk_last_accessed == INVALID)
      phbk_error(OPERATION_NOT_ALLOWED);
   else
   {
      index = phbk_last_accessed;

      /* This is the last entry in the phonebook, report error */
      if (phonebook_entry[index-1].next == index)
         phbk_error(NOT_FOUND);
      else
         output_info(d_to_a(phonebook_entry[index-1].next),VERBOSE_FORM);
   }
}

/******************************************************************************
/
/     Routine:       plus_phbk_index_prev
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBI=P?"
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_index_prev(void)
{
   if (phbk_last_accessed == INVALID)
      phbk_error(OPERATION_NOT_ALLOWED);
   else
   {
      /* This is the last entry in the phonebook, report error */
      if (phbk_head_of_list == phbk_last_accessed)
         phbk_error(NOT_FOUND);
      else
         output_info(d_to_a(phonebook_entry[phbk_last_accessed-1].previous),
                           VERBOSE_FORM);
   }
}

/******************************************************************************
/
/     Routine:       plus_phbk_index_null
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CPBI=E?"
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_phbk_index_null(void)
{
   phbk_empty_entry();
}

/******************************************************************************
/
/     Routine:       plus_me_error_e  
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CMEE="
/
/     Input Parameters: cmd_param_ptr - Pointer to the AT command's parameter:
/
/     Output Parameters: none
/
/     Global Variables Changed: error_ocurred, phbk_cmee_flag
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_me_error_e(ubyte *cmd_param_ptr)
{
   if (*cmd_param_ptr > 1)
      error_occurred = TRUE;
   else
      phbk_cmee_flag = *cmd_param_ptr;
}

/******************************************************************************
/
/     Routine:       plus_me_error_eq 
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CMEE=?"
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_me_error_eq(void)
{
   output_info((ubyte *)"+CMEE: 10,11,12,13,14,100", VERBOSE_FORM);
}

/******************************************************************************
/
/     Routine:       plus_me_error_q  
/
/     Author:        RSA
/
/     Creation Date: 8/31/1995.
/
/     Description:   This routine is called to implement the Phonebook command:
/                   "AT+CMEE?"
/
/     Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users:         PARSE_CMD_TABLE_STRUCT phonebook_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_me_error_q(void)
{
   output_info((ubyte *)"+CMEE: ", STORED_NUM);
   output_info(d_to_a(phbk_cmee_flag),NUMERIC_FORM); 
}


