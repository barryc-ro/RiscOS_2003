/****************************************************************************
/
/    Copyright 1988,1989,1990,1991,1992,1993,1994. All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/
/    This document contains material confidential to RSA its contents must
/    not be revealed, used or disclosed to anyone or company with out
/    written permission by RSA.  The information contained herein is solely
/    for the use of RSA.
/
/    File:          ac00lib2.c
/
/    Module Version: ACU 4.02
/
/    Function: This file contains misc Routines for the ACU code.
/
/    Product:  ACU core code
/
/    History:  ac00lib2.c v3.90
/                       ac00lib2.c v3.91
/
/         Created: 1/21/92
/                       1/12/93
/
/         ---------------------------------------------------------
/         -              Modifications            -
/         ---------------------------------------------------------
/
/         Author & Date: RSA
/         Description:
/         Reason:
/
*****************************************************************************/
#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"
#include "mt_pro.h"
#include "v25_pro.h"
#include "edf.dte"
#include "edf.dce_line"

void process_wait(void);
void enable_acu_on_terminal(void);
void disable_acu_on_terminal(void);
void ignore(void);
void idle_test_bg(void);
ubyte *d_to_a(ubyte num);

extern void disable_int(void);
extern void enable_int(void);
extern ubyte count_for_msec_timer;
extern ubyte one_hundred_microsec;
extern void acu_timer(void);
extern void process_one_msec(void);
extern ubyte display_msg_one_time;
extern ubyte dsp_timer;


/*******************************************************************************
/
/    Routine: process_wait
/
/    Author : RSA
/
/    Creation Date: 05/07/91
/
/    Description : This Routine is called in the ACU where there is a delay
/               in processing.
/
/    Input Parameters: none
/
/    Output Parameters: none
/
/    Global Variables Changed:  None
/
/    Users:    output_info, tone_char, pulse_char
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/    Author & Date: RSA
/    Description:
/    Reason:
/
*******************************************************************************/
void process_wait(void)
{
    //acu_timer(); /*KJBD*/

/*mrm5996*/
/*The base timer for serial and parallel mode are the same for the new musket
chip.
*/

/*
if PARALLEL_MODE == 1
*/

#ifndef __riscos
     if ( count_for_msec_timer >= 2)
	  {
	  	 disable_int();
		 count_for_msec_timer -= 2;
		 enable_int();
		 process_one_msec();

	  }

/*one_hundred_microsec used to be 100 m sec but it changed to 500 m sec*/


	  if (one_hundred_microsec >= 20)
	  {
	  	 disable_int();
		 one_hundred_microsec -= 20;
		 enable_int();
     	 acu_timer();
	  }
#endif

	  if(display_msg_one_time)
		 dsp_timer =0;

	  mmu_open_acu_pg
	  process_acu_timer();
	  mmu_restore_stored_pg

	  /*modem_watchdog();*/ /* ramn 9/20/96 */

/*
endif
*/

/*mrm5996*/
/*The base timer for serial and parallel mode are the same for the new musket
chip.
*/

#if 0

if SERIAL_MODE == 1


		  if ( count_for_msec_timer >= 10) /*22296shujin, old 10*/
		  {
			disable_int();
			count_for_msec_timer = 0;
			enable_int();
			process_one_msec();

		  }

		  if (one_hundred_microsec >= 100)
		  {
			disable_int();
			one_hundred_microsec = 0;
			enable_int();
     		acu_timer();
		  }

		if(display_msg_one_time)

			dsp_timer =0;

	mmu_open_acu_pg
	process_acu_timer();
	mmu_restore_stored_pg

	modem_watchdog();
endif
#endif

}

/*******************************************************************************
/
/    Routine: enable_acu_on_terminal
/
/    Author : RSA
/
/    Creation Date: 05/07/91
/
/    Description : This Routine switches the control of the terminal I/O
/               Routines from the DTE to the ACU.
/
/    Input Parameters: none
/
/    Output Parameters: none
/
/    Global Variables Changed:  None
/
/    Users:    status_check, check_on_line_functions, hang_up, test_online
/         master_init
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/    Author & Date: RSA
/    Description:
/    Reason:
/
*******************************************************************************/
void enable_acu_on_terminal(void)
{
    acu_io_enable();
    acu_to_clear();
    acu_from_clear();
    dte_disable();
}

/*******************************************************************************
/
/    Routine: disable_acu_on_terminal
/
/    Author : RSA
/
/    Creation Date: 05/07/91
/
/    Description : This Routine switches the control of the terminal I/O
/               Routines from the ACU to the DTE.
/
/    Input Parameters: none
/
/    Output Parameters: none
/
/    Global Variables Changed:  result_message_sent
/
/    Users:    at_O, and_T,  status_check, wait_for_test_connect, acu_connect
/         leased_line_init, status_check_ll
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/    Author & Date: RSA
/    Description:
/    Reason:
/
*******************************************************************************/
void disable_acu_on_terminal(void)
{
/*   If any information has been sent to the terminal, the switching of the
	interrupt control needs to be delayed until it has all been sent */
	if (result_message_sent == TRUE)
	{
		result_message_sent = FALSE;

		while (acu_to_num() > 0)
			process_wait();

		while (!check_all_sent())
			process_wait();
	}

	/*modem_serial_echo(OFF);*/ /* ramn 9/20/96 */
	acu_reset_port();
	acu_io_disable();

	   modem_disable_interrupts();
	   dte_enable();
	   modem_enable_interrupts();
}

/*******************************************************************************
/
/    Routine: ignore
/
/    Author : RSA
/
/    Creation Date: 06/17/91
/
/    Description : This Routine will do nothing.
/
/    Input Parameters: None
/
/    Output Parameters: none
/
/    Global Variables Changed:  None
/
/    Users: all state tables
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/    Author & Date: RSA
/    Description:
/    Reason:
/
*******************************************************************************/
void ignore(void)
{
}

/*******************************************************************************
/
/    Routine: idle_test_bg
/
/    Author : RSA
/
/    Creation Date: 05/07/91
/
/    Description : This Routine will look for test timeout , characters
/               from DTE, or carrier loss while an Local Analog loopback
/               with self test or Remote Digital loopback with self test
/               is being performed.
/
/    Input Parameters: none
/
/    Output Parameters: none
/
/    Global Variables Changed:  None
/
/    Users:    idle_bg, parse_bg
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/    Author & Date: RSA
/    Description:
/    Reason:
/
*******************************************************************************/
void idle_test_bg(void)
{
	mmu_open_acu_pg

	flash_mr();

/*   If s18 time limit is reached then terminate the test   */
	if ((timer_activated) && (timer2 == 0))
		build_event(E_HANGUP,OK);

/*   Send out self test message    */
	if ((test_in_progress == RDL_SELF_TEST) || (test_in_progress == ALB_SELF_TEST))
		acu_self_test();

	mmu_restore_stored_pg
}


/*******************************************************************************
/
/    Routine: d_to_a
/
/    Author : RSA
/
/    Creation Date: 05/07/91
/
/    Description : This Routine converts a decimal number to an ASCII
/               string.
/
/    Input Parameters: ubyte num - number to be converted
/
/    Output Parameters: ubyte *pt - pointer to the ASCII string
/
/    Global Variables Changed:  None
/
/    Users:    output_result_message(), and_V(), at_I(), at_quest(),
/         check_forbidden_list(), check_delayed_list(),
/         output_test_message()
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/    Author & Date: RSA
/    Description:
/    Reason:
/
*******************************************************************************/
ubyte *d_to_a(ubyte num)
{
	ubyte i = 3;

	do {
		i--;
		pt[i] = num % 10;
		pt[i] = pt[i] + '0';
		num = num / 10;
	} while (i != 0);

	pt[3] = 0;
	return ((ubyte *)&pt[0]);
}

/*******************************************************************************
/
/    Routine: d_to_a
/
/    Author : RSA
/
/    Creation Date: 05/07/91
/
/    Description : This Routine converts a decimal number to an ASCII
/               string.
/
/    Input Parameters: ubyte num - number to be converted
/
/    Output Parameters: ubyte *pt - pointer to the ASCII string
/
/    Global Variables Changed:  None
/
/    Users:    output_result_message(), and_V(), at_I(), at_quest(),
/         check_forbidden_list(), check_delayed_list(),
/         output_test_message()
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/    Author & Date: RSA
/    Description:
/    Reason:
/
*******************************************************************************/
ubyte *d_to_a_two(ubyte num)
{
	ubyte i = 2;

	do {
		i--;
		pt[i] = num % 10;
		pt[i] = pt[i] + '0';
		num = num / 10;
	} while (i != 0);

	pt[2] = 0;
	return ((ubyte *)&pt[0]);
}
