/****************************************************************************
/
/	Copyright 1988,1989,1990,1991,1992,1993,1994. All Rights Reserved by:
/	    RSA
/	    7701 Six Forks Road
/	    Suite 120
/	    Raleigh, NC  27615
/	    (919) 846-7171
/
/
/	This document contains material confidential to RSA its contents must
/	not be revealed, used or disclosed to anyone or company with out
/	written permission by RSA.  The information contained herein is solely
/	for the use of RSA.
/
/	File:		ac00rt.c
/
/	Module Version: ACU 4.02
/
/	Function:	This file contains the control code for the ACU state
/			RETRAIN.
/
/	Product:	ACU core code
/
/	History:	ac00rt.c v3.90
/                       ac00rt.c v3.91    
/
/		Created: 1/21/92
/                       1/12/92
/
/		---------------------------------------------------------
/		-			Modifications			-
/		---------------------------------------------------------
/
/		Author & Date:	RSA
/		Description:
/		Reason:
/
*****************************************************************************/
#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "v25_def.h"
#include "v25_mem.h"
#include "acu_pro.h"
#include "mt_pro.h"
#include "ll_pro.h"

void retrain_bg(void);
void retrain_pstn_bg(void);
/*void adjust_dte_112(void);*/ /* ramn 9/20/96 */


/*******************************************************************************
/
/	Routine: retrain_bg
/
/	Author : RSA
/
/	Creation Date: 06/17/91
/
/	Description : This Routine will process the retrain function.
/
/	Input Parameters: None
/
/	Output Parameters: none
/
/	Global Variables Changed:  None
/
/	Users: modem_bg
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date:	RSA
/	Description:
/	Reason:
/
*******************************************************************************/
void retrain_bg(void)
{
	switch (st_retrain.type)
	{
		case AT_PSTN:
			retrain_pstn_bg();
			break;

		case LEASED_LINE:
			/*retrain_ll_bg();*/  /* ramn 9/23/96 */
			break;
	}
}



/*******************************************************************************
/
/	Routine: retrain_pstn_bg
/
/	Author : RSA
/
/	Creation Date: 07/17/91
/
/	Description : This Routine will perform the retrain function for
/		      the type AT_PSTN and V25_PSTN.
/
/	Input Parameters: None
/
/	Output Parameters: none
/
/	Global Variables Changed:  s[1]
/
/	Users: retrain_bg
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date:	RSA 
/	Description: 
/	Reason: 
/
*******************************************************************************/
void retrain_pstn_bg(void)
{
	ubyte temp_baud;

/*	Retrain or test has been completed	*/
	if (modem_status == CONNECTED_STATUS)
	{

/*	Flag that the modem is no longer retraining	*/
		st_retrain.state = S_IDLE;

		temp_baud = modem_baud;
		get_modem_baud_and_mode();

		if (modem_baud != temp_baud)
		{

/*	If line baud rate has changed the modem must disconnect if running
	DIRECT mode or \J1 has been issued
*/
			if ((operating_mode == DIRECT) || (bps_adjust == TRUE))
			{
				build_event(E_HANGUP,NO_CARRIER);
				return;
			}
			else
			{

/*	Reset line baud rate to the new value detected by retrain	*/
				system_set_line_baud();
				/*adjust_dte_112();*/ /* ramn 9/20/96 */
			}
		}

/*     When retrain is over, if running CCITT direct mode, adjust cts to follow rts */

		if (operating_mode == DIRECT)
		{
			if (v25bis_active)
			{
				if (modem_dte_RTS_status() || (RTS_always_on))
				{
					modem_dte_cts(ON);
					CTS_up_flag = TRUE;
					CTS_turn_on_flag = FALSE;
				}
				else
				{
				       modem_dte_cts(OFF);
				       CTS_up_flag = FALSE;
				       CTS_turn_on_flag = TRUE;
				}
				cts_timer = 0;
			}
			else
				modem_dte_cts(ON);
		}
	}

/*	If remote test or retrain failed then disconnect	*/
	else if (modem_status == IDLE_STATUS)
	{

/*	Flag that the modem is no longer retraining	*/
		st_retrain.state = S_IDLE;
		build_event(E_HANGUP,NO_CARRIER);
	}
}


/*******************************************************************************
/
/	Routine: adjust_dte_112
/
/	Author : RSA
/
/	Creation Date: 07/17/91
/
/	Description : This Routine is called to adjust the DTE circuit 112
/		      according to what speed the modem is connected at.
/
/	Input Parameters: None
/
/	Output Parameters: none
/
/	Global Variables Changed:  None
/
/	Users: retrain_pstn_bg
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date:	RSA 
/	Description: 
/	Reason: 
/
*******************************************************************************/
#if 0 /* ramn 9/20/96 */
void adjust_dte_112(void)
{
	switch (modem_mode)
	{
		case V32BIS:
			if (modem_baud == BPS14400)
				modem_dte_112(ON);
			else
				modem_dte_112(OFF);
			break;

		case V32:
		case V32_TCM:
			if (modem_baud == BPS9600)
				modem_dte_112(ON);

/*	4800 baud	*/
			else
				modem_dte_112(OFF);
			break;

		case V22:
		case V22BIS:
			if (modem_baud == BPS2400)
				modem_dte_112(ON);

/*	1200 or 600 baud  */
			else
				modem_dte_112(OFF);
			break;

		default: modem_dte_112(OFF);
			break;
	}
}
#endif
