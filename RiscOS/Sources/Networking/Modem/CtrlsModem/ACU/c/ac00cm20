/****************************************************************************
/
/   Copyright 1988,1989,1990,1991,1992,1993,1994.
/   All Rights Reserved by:
/       RSA
/       7701 Six Forks Road
/       Suite 120
/       Raleigh, NC  27615
/       (919) 846-7171
/
/   This document contains material confidential to RSA its contents must
/   not be revealed, used or disclosed to anyone or company with out
/   written permission by RSA.  The information contained herein is solely
/   for the use of RSA.
/
/   File:           ac00cm20.c
/
/   Module Version: ACU 4.??
/
/   Function:       This file contains the action routines for the
/                   FAX Class 2.0 AT commands.
/
/   Product:        ACU core code
/
/   History:
/
/       Created:    12/16/95
/
/       ---------------------------------------------------------
/       -                   Modifications                       -
/       ---------------------------------------------------------
/
/       Author & Date:  RSA
/       Description:
/       Reason:
/
*****************************************************************************/
#include "sys_def.h"
#include "acu_def.h"
#include "acu_fax.h"
#include "fax_pro.h"
#include "par_def.h"
#include "par_pro.h"

/* Local Prototypes */
void acu_set_fax20_commands(ubyte state);

#if 0

void plus_FDT20_eq(void);
void plus_FDT20(ubyte *parm_ptr);
void plus_FDR20_eq(void);
void plus_FDR20(ubyte *parm_ptr);
void plus_FKS_eq(void);
void plus_FKS(ubyte *parm_ptr);
void plus_FCC_eq(void);
void plus_FCC_e(ubyte *parm_ptr);
void plus_FCC_q(void);
void plus_FIS_eq(void);
void plus_FIS_e(ubyte *parm_ptr);
void plus_FIS_q(void);
void plus_FCS_q(void);
void plus_FLI_eq(void);
void plus_FLI_e(ubyte *parm_ptr);
void plus_FLI_q(void);
void plus_FPI_eq(void);
void plus_FPI_e(ubyte *parm_ptr);
void plus_FPI_q(void);
void plus_FLP_eq(void);
void plus_FLP_e(ubyte *parm_ptr);
void plus_FLP_q(void);
void plus_FSP_eq(void);
void plus_FSP_e(ubyte *parm_ptr);
void plus_FSP_q(void);
void plus_FNR_eq(void);
void plus_FNR_e(ubyte *parm_ptr);
void plus_FNR_q(void);
void plus_FIE_eq(void);
void plus_FIE_e(ubyte *parm_ptr);
void plus_FIE_q(void);
void plus_FPS_eq(void);
void plus_FPS_e(ubyte *parm_ptr);
void plus_FPS_q(void);
void plus_FBO_eq(void);
void plus_FBO_e(ubyte *parm_ptr);
void plus_FBO_q(void);
void plus_FEA_eq(void);
void plus_FEA_e(ubyte *parm_ptr);
void plus_FEA_q(void);
void plus_FNS_eq(void);
void plus_FNS_e(ubyte *parm_ptr);
void plus_FNS_q(void);
void plus_FCR20_eq(void);
void plus_FCR20_e(ubyte *parm_ptr);
void plus_FCR20_q(void);
void plus_FBU_eq(void);
void plus_FBU_e(ubyte *parm_ptr);
void plus_FBU_q(void);
void plus_FRQ_eq(void);
void plus_FRQ_e(ubyte *parm_ptr);
void plus_FRQ_q(void);
void plus_FCT_eq(void);
void plus_FCT_e(ubyte *parm_ptr);
void plus_FCT_q(void);
void plus_FHS_q(void);
void plus_FRY_eq(void);
void plus_FRY_e(ubyte *parm_ptr);
void plus_FRY_q(void);
void plus_FMS_eq(void);
void plus_FMS_e(ubyte *parm_ptr);
void plus_FMS_q(void);
void plus_FFC_eq(void);
void plus_FFC_e(ubyte *parm_ptr);
void plus_FFC_q(void);
void plus_FBS_q(void);
void plus_FCQ20_eq(void);
void plus_FCQ20_e(ubyte *parm_ptr);
void plus_FCQ20_q(void);
void plus_FMR(void);


/******************************************************************************
/
/              Parser Structure for FAX Class 2.0 AT commands
/
/  -------------------------------------------------------------
/  -                       Modifications                       -
/  -------------------------------------------------------------
/
/  Author & Date: RSA
/  Description:
/  Reason:
/
*******************************************************************************/
PARSE_CMD_TABLE_STRUCT fax20_commands []=
{
/*   FAX Class 2.0 commands controled by the ACU (see ac00cmfx.c)
 *
 *   "+FCLASS=?",   plus_FCLASS_eq, NO_PARAM,       SEMICOL_END,
 *   "+FCLASS=",    plus_FCLASS_e,  BYTE__NUMERIC,  SEMICOL_END,
 *   "+FCLASS?",    plus_FCLASS_q,  NO_PARAM,       SEMICOL_END,
 *   "+FIP=?",  plus_FIP_eq,     NO_PARAM,       SEMICOL_END,
 *   "+FIP",    plus_FIP,        NO_PARAM,       SEMICOL_END,
 *   "+FAA=?",  plus_FAA_eq,     NO_PARAM,       SEMICOL_END,
 *   "+FAA=",   plus_FAA_e,      BYTE_NUMERIC,   SEMICOL_END,
 *   "+FAA?",   plus_FAA_q,      NO_PARAM,       SEMICOL_END,
 *   "+FMI?",   plus_FMI,        NO_PARAM,       SEMICOL_END,
 *   "+FMM?",   plus_FMM,        NO_PARAM,       SEMICOL_END,
 *   "+FLO=?",  plus_FLO_eq,     NO_PARAM,       SEMICOL_END,
 *   "+FLO=",   plus_FLO_e,      BYTE_NUMERIC,   SEMICOL_END,
 *   "+FLO?",   plus_FLO_q,      NO_PARAM,       SEMICOL_END,
 *   "+FPR=?",  plus_FPR_eq,     NO_PARAM,       SEMICOL_END,
 *   "+FPR=",   plus_FPR_e,      NO_PARAM,       SEMICOL_END,
 *   "+FPR?",   plus_FPR_q,      NO_PARAM,       SEMICOL_END,
 *   "+FPP=?",  plus_FPP_eq,     NO_PARAM,       SEMICOL_END,
 *   "+FPP=",   plus_FPP_e,      NO_PARAM,       SEMICOL_END,
 *   "+FPP?",   plus_FPP_q,      NO_PARAM,       SEMICOL_END,
 */
    (ubyte *)"+FDT=?",  plus_FDT20_eq, NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FDT",    plus_FDT20,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FDR=?",  plus_FDR20_eq, NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FDR",    plus_FDR20,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FKS=?",  plus_FKS_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FKS",    plus_FKS,      NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FBS?",   plus_FBS_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FBO=?",  plus_FBO_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FBO=",   plus_FBO_e,    BYTE_NUMERIC, SEMICOL_END,
    (ubyte *)"+FBO?",   plus_FBO_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FBU=?",  plus_FBU_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FBU=",   plus_FBU_e,    BYTE_NUMERIC, SEMICOL_END,
    (ubyte *)"+FBU?",   plus_FBU_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FCC=?",  plus_FCC_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FCC=",   plus_FCC_e,    COMPOUND_BYTE,SEMICOL_END,
    (ubyte *)"+FCC?",   plus_FCC_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FIS=?",  plus_FIS_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FIS=",   plus_FIS_e,    COMPOUND_BYTE, SEMICOL_END,
    (ubyte *)"+FIS?",   plus_FIS_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FCS?",   plus_FCS_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FLI=?",  plus_FLI_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FLI=",   plus_FLI_e,    FORMATTED_STRING, SEMICOL_END,
    (ubyte *)"+FLI?",   plus_FLI_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FPI=?",  plus_FPI_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FPI=",   plus_FPI_e,    FORMATTED_STRING, SEMICOL_END,
    (ubyte *)"+FPI?",   plus_FPI_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FLP=?",  plus_FLP_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FLP=",   plus_FLP_e,    BYTE_NUMERIC, SEMICOL_END,
    (ubyte *)"+FLP?",   plus_FLP_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FSP=?",  plus_FSP_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FSP=",   plus_FSP_e,    BYTE_NUMERIC, SEMICOL_END,
    (ubyte *)"+FSP?",   plus_FSP_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FNR=?",  plus_FNR_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FNR=",   plus_FNR_e,    COMPOUND_BYTE, SEMICOL_END,
    (ubyte *)"+FNR?",   plus_FNR_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FIE=?",  plus_FIE_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FIE=",   plus_FIE_e,    BYTE_NUMERIC, SEMICOL_END,
    (ubyte *)"+FIE?",   plus_FIE_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FPS=?",  plus_FPS_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FPS=",   plus_FPS_e,    BYTE_NUMERIC, SEMICOL_END,
    (ubyte *)"+FPS?",   plus_FPS_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FEA=?",  plus_FEA_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FEA=",   plus_FEA_e,    BYTE_NUMERIC, SEMICOL_END,
    (ubyte *)"+FEA?",   plus_FEA_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FNS=?",  plus_FNS_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FNS=",   plus_FNS_e,    FORMATTED_STRING, SEMICOL_END,
    (ubyte *)"+FNS?",   plus_FNS_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FCQ=?",  plus_FCQ20_eq, NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FCQ=",   plus_FCQ20_e,  COMPOUND_BYTE, SEMICOL_END,
    (ubyte *)"+FCQ?",   plus_FCQ20_q,  NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FCR=?",  plus_FCR20_eq, NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FCR=",   plus_FCR20_e,  BYTE_NUMERIC, SEMICOL_END,
    (ubyte *)"+FCR?",   plus_FCR20_q,  NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FRQ=?",  plus_FRQ_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FRQ=",   plus_FRQ_e,    COMPOUND_BYTE_HEX, SEMICOL_END,
    (ubyte *)"+FRQ?",   plus_FRQ_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FCT=?",  plus_FCT_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FCT=",   plus_FCT_e,    BYTE_HEX,     SEMICOL_END,
    (ubyte *)"+FCT?",   plus_FCT_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FHS?",   plus_FHS_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FRY=?",  plus_FRY_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FRY=",   plus_FRY_e,    BYTE_HEX,     SEMICOL_END,
    (ubyte *)"+FRY?",   plus_FRY_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FMS=?",  plus_FMS_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FMS=",   plus_FMS_e,    BYTE_NUMERIC, SEMICOL_END,
    (ubyte *)"+FMS?",   plus_FMS_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FFC=?",  plus_FFC_eq,   NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FFC=",   plus_FFC_e,    COMPOUND_BYTE,SEMICOL_END,
    (ubyte *)"+FFC?",   plus_FFC_q,    NO_PARAM,     SEMICOL_END,
    (ubyte *)"+FMR?",   plus_FMR,      NO_PARAM,     SEMICOL_END,
    END_OF_PARSE_TABLE
};

#endif
/*******************************************************************************
/
/      Routine:        acu_set_fax20_commands
/
/      Author:         RSA
/
/      Creation Date:  04/07/95
/
/      Description:    This Routine enables/disables parsing of FAX class 2.0
/                      AT commands.
/
/      Input Parameters:   state - OFF (0) to disable, ON (otherwise) to enable.
/
/      Output Parameters: None
/
/      Global Variables Changed:  None
/
/      Users:
/
/      -------------------------------------------------------------
/      -                        Modifications                        -
/      -------------------------------------------------------------
/
/      Author & Date:    RSA
/      Description:
/      Reason:
/
*******************************************************************************/
void acu_set_fax20_commands(ubyte state)
{
   ubyte type;

   if (state == ON)
       type = ENABLE_TABLE;
   else
       type = DISABLE_TABLE;
/*
   at_parser_tables(type,fax20_commands);
*/
}
#if 0
/******************************************************************************
/
/   Routine:        plus_FDT20_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                   "AT+FDT=?"
/                   The +FDT command is used to start fax page transmission.
/                   This routine will respond OK, so show support of the +FDT
/                       command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FDT20_eq(void)
{
    acu_fax_query(FAX20_FDT_QUERY);
}


/******************************************************************************
/
/   Routine:        plus_FDT20
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                   "AT+FDT"
/                   The +FDT command is used to start fax page transmission.
/                   This routine starts a fax page transmission.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FDT20(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FDT_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FDR20_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                   "AT+FDR=?"
/                   The +FDR command is used to start fax page transmission.
/                   This routine will respond OK, so show support of the +FDR
/                       command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FDR20_eq(void)
{
    acu_fax_query(FAX20_FDR_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FDR20
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                   "AT+FDR"
/                   The +FDR command is used to start fax page receiption.
/                   This routine starts a fax page transmission.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FDR20(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FDR_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FKS_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FKS=?"
/                   The +FKS command is used to abort a fax page.
/                   This routine respond OK, so show support of the +FKS
/                       command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FKS_eq(void)
{
    acu_fax_query(FAX20_FKS_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FKS
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FKS"
/                   The +FKS command is used to abort a fax page.
/                   This routine will abort a fax in progress.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FKS(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FKS_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FCC_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCC=?"
/                   The +FCC command is used to set the fax DCE capabilities.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FCC=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCC_eq(void)
{
    acu_fax_query(FAX20_FCC_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FCC_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCC=<value>"
/                   The +FCC command is used to set the fax DCE capabilities.
/                   This action routine will set the fax DCE capabilities.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCC_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FCC_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FCC_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCC?"
/                   The +FCC command is used to set the fax DCE capabilities.
/                   This routine will output an ASCII string representing
/                       the current values of the "AT+FCC=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCC_q(void)
{
    acu_fax_query(FAX20_FCC_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FIS_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FIS=?"
/                   The +FIS command is used to set the fax Session Parameters.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FIS=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FIS_eq(void)
{
    acu_fax_query(FAX20_FIS_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FIS_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FIS=<value>"
/                   The +FIS command is used to set the fax Session Parameters.
/                   This action routine will set the fax Session Parameters.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FIS_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FIS_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FIS_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FIS?"
/                   The +FIS command is used to set the fax Session Parameters.
/                   This routine will output an ASCII string representing
/                       the current values of the "AT+FIS=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FIS_q(void)
{
    acu_fax_query(FAX20_FIS_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FCS_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCS?"
/                   The +FCS command is used to request the Fax Session Results.
/                   This routine will output an ASCII string representing
/                       the current Result values.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCS_q(void)
{
    acu_fax_query(FAX20_FCS_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FLI_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FLI=?"
/                   The +FLI command is used to set the Local ID String.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FLI=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FLI_eq(void)
{
    acu_fax_query(FAX20_FLI_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FLI_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FLI=<value>"
/                   The +FLI command is used to set the Local ID String.
/                   This action routine will set the Local ID String.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FLI_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FLI_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FLI_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FLI?"
/                   The +FLI command is used to set the Local ID String.
/                   This routine will output an ASCII string representing
/                       the Local ID String.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FLI_q(void)
{
    acu_fax_query(FAX20_FLI_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FPI_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FPI=?"
/                   The +FPI command is used to set the Local Polling ID String.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FPI=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FPI_eq(void)
{
    acu_fax_query(FAX20_FPI_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FPI_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FPI=<value>"
/                   The +FPI command is used to set the Local Polling ID String.
/                   This action routine will set the Local Polling ID String.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FPI_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FPI_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FPI_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FPI?"
/                   The +FPI command is used to set the Local Polling ID String.
/                   This routine will output an ASCII string representing
/                       the current Local Polling ID String.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FPI_q(void)
{
    acu_fax_query(FAX20_FPI_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FLP_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FLP=?"
/                   The +FLP command is used to Inciate Document to Poll Parm.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FLP=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FLP_eq(void)
{
    acu_fax_query(FAX20_FLP_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FLP_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FLP=<value>"
/                   The +FLP command is used to Inciate Document to Poll Parm.
/                   This action routine will set the Doc. to Poll Parm.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FLP_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FLP_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FLP_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FLP?"
/                   The +FLP command is used to Inciate Document to Poll Parm.
/                   This routine will output an ASCII string representing
/                       the current Document to Poll Parmameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FLP_q(void)
{
    acu_fax_query(FAX20_FLP_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FSP_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FSP=?"
/                   The +FSP command is used to set the Request to Poll Parm.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FSP=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FSP_eq(void)
{
    acu_fax_query(FAX20_FSP_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FSP_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FSP=<value>"
/                   The +FSP command is used to set the Request to Poll Parm.
/                   This action routine will set the Request to Poll Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FSP_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FSP_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FSP_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FSP?"
/                   The +FSP command is used to set the Request to Poll Parm.
/                   This routine will output an ASCII string representing
/                       the current Request to Poll Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FSP_q(void)
{
    acu_fax_query(FAX20_FSP_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FNR_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FNR=?"
/                   The +FNR command is used to set the Negotiation Parameters.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FNR=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FNR_eq(void)
{
    acu_fax_query(FAX20_FNR_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FNR_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FNR=<value>"
/                   The +FNR command is used to set the Negotiation Parameters.
/                   This action routine will set the Negotiation Parameters.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FNR_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FNR_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FNR_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FNR?"
/                   The +FNR command is used to set the Negotiation Parameters.
/                   This routine will output an ASCII string representing
/                       the current Negotiation Parameters.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FNR_q(void)
{
    acu_fax_query(FAX20_FNR_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FIE_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FIE=?"
/                   The +FIE command is used to set the Interrupt Enable Parm.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FIE=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FIE_eq(void)
{
    acu_fax_query(FAX20_FIE_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FIE_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FIE=<value>"
/                   The +FIE command is used to set the Interrupt Enable Parm.
/                   This action routine will set the Interrupt Enable Parm.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FIE_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FIE_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FIE_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FIE?"
/                   The +FIE command is used to set the Interrupt Enable Parm.
/                   This routine will output an ASCII string representing
/                       the current Interrupt Enable Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FIE_q(void)
{
    acu_fax_query(FAX20_FIE_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FPS_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FPS=?"
/                   The +FPS command is used to set the Page Status Parameter.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FPS=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FPS_eq(void)
{
    acu_fax_query(FAX20_FPS_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FPS_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FPS=<value>"
/                   The +FPS command is used to set the Page Status Parameter.
/                   This action routine will set the Page Status Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FPS_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FPS_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FPS_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FPS?"
/                   The +FPS command is used to set the Page Status Parameter.
/                   This routine will output an ASCII string representing
/                       the current Page Status Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FPS_q(void)
{
    acu_fax_query(FAX20_FPS_REQUEST);
}


/******************************************************************************
/
/   Routine:        plus_FBO_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FBO=?"
/                   The +FBO command is used to set the Phase C Data Bit Order.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FBO=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FBO_eq(void)
{
    acu_fax_query(FAX20_FBO_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FBO_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FBO=<value>"
/                   The +FBO command is used to set the Phase C Data Bit Order.
/                   This action routine will set the Phase C Data Bit Order.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FBO_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FBO_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FBO_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FBO?"
/                   The +FBO command is used to set the Phase C Data Bit Order.
/                   This routine will output an ASCII string representing
/                       the current Phase C Data Bit Order setting.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FBO_q(void)
{
    acu_fax_query(FAX20_FBO_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FEA_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FEA=?"
/                   The +FEA command is used to set the EOL Alignment Parameter.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FEA=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FEA_eq(void)
{
    acu_fax_query(FAX20_FEA_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FEA_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FEA=<value>"
/                   The +FEA command is used to set the EOL Alignment Parameter.
/                   This action routine will set the EOL Alignment Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FEA_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FEA_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FEA_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FEA?"
/                   The +FEA command is used to set the EOL Alignment Parameter.
/                   This routine will output an ASCII string representing
/                       the current EOL Alignment Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FEA_q(void)
{
    acu_fax_query(FAX20_FEA_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FNS_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FNS=?"
/                   The +FNS command is used to set Non-Standard Frame FIF Parm.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FNS=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FNS_eq(void)
{
    acu_fax_query(FAX20_FNS_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FNS_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FNS=<value>"
/                   The +FNS command is used to set Non-Standard Frame FIF Parm.
/                   This action routine will set the -Standard Frame FIF
/                       Parmameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FNS_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FNS_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FNS_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FNS?"
/                   The +FNS command is used to set Non-Standard Frame FIF Parm.
/                   This routine will output an ASCII string representing
/                       current Non-Standard Frame FIF Parameters.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FNS_q(void)
{
    acu_fax_query(FAX20_FNS_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FCR20_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCR=?"
/                   The +FCR command is used to set the Receive Capability Parm.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FCR=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCR20_eq(void)
{
    acu_fax_query(FAX20_FCR_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FCR_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCR=<value>"
/                   The +FCR command is used to set the Receive Capability Parm.
/                   This action routine will set the Receive Capability
/                       Parmameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCR20_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FCR_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FCR20_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCR?"
/                   The +FCR command is used to set the Receive Capability Parm.
/                   This routine will output an ASCII string representing
/                       the curretn Receive Capability Parmameters.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCR20_q(void)
{
    acu_fax_query(FAX20_FCR_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FBU_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FBU=?"
/                   The +FBU command is used to set the HDLC Frame Report Parm.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FBU=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FBU_eq(void)
{
    acu_fax_query(FAX20_FBU_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FBU_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FBU=<value>"
/                   The +FBU command is used to set the HDLC Frame Report Parm.
/                   This action routine will set the HDLC Frame Report
/                       Parmameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FBU_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FBU_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FBU_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FBU?"
/                   The +FBU command is used to set the HDLC Frame Report Parm.
/                   This routine will output an ASCII string representing
/                       the currennt HDLC Frame Report Parameter settings.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FBU_q(void)
{
    acu_fax_query(FAX20_FBU_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FRQ_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FRQ=?"
/                   The +FRQ command is used to set the Rx Quality levels.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FRQ=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FRQ_eq(void)
{
    acu_fax_query(FAX20_FRQ_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FRQ_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FRQ=<value>"
/                   The +FRQ command is used to set the Rx Quality levels.
/                   This action routine will set the Rx Quality levels.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FRQ_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FRQ_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FRQ_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FRQ?"
/                   The +FRQ command is used to set the Rx Quality levels.
/                   This routine will output an ASCII string representing
/                       the current Rx Quality levels.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FRQ_q(void)
{
    acu_fax_query(FAX20_FRQ_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FCT_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCT=?"
/                   The +FCT command is used to set the Phase C time-out Parm.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FCT=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCT_eq(void)
{
    acu_fax_query(FAX20_FCT_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FCT_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCT=<value>"
/                   The +FCT command is used to set the Phase C time-out Parm.
/                   This action routine will set the Phase C time-out Parmameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCT_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FCT_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FCT_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCT?"
/                   The +FCT command is used to set the Phase C time-out Parm.
/                   This routine will output an ASCII string representing
/                       the current value of the Phase C time-out Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCT_q(void)
{
    acu_fax_query(FAX20_FCT_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FHS_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FHS?"
/                   The +FHS command is used to get the Call Termination
/                       Status Parameter.
/                   This routine will output an ASCII string representing
/                       the current Call Termination Status Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FHS_q(void)
{
    acu_fax_query(FAX20_FHS_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FRY_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FRY=?"
/                   The +FRY command is used to set the ECM Retry Value.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FRY=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FRY_eq(void)
{
    acu_fax_query(FAX20_FRY_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FRY_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FRY=<value>"
/                   The +FRY command is used to set the ECM Retry Value.
/                   This action routine will set the ECM Retry Value.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FRY_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FRY_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FRY_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FRY?"
/                   The +FRY command is used to set the ECM Retry Value.
/                   This routine will output an ASCII string representing
/                       the current value of the ECM Retry Value.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FRY_q(void)
{
    acu_fax_query(FAX20_FRY_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FMS_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FMS=?"
/                   The +FMS command is used to set the Minimum Phase C Speed.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FMS=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FMS_eq(void)
{
    acu_fax_query(FAX20_FMS_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FMS_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FMS=<value>"
/                   The +FMS command is used to set the Minimum Phase C Speed.
/                   This action routine will set the Minimum Phase C Speed.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FMS_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FMS_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FMS_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FMS?"
/                   The +FMS command is used to set the Minimum Phase C Speed.
/                   This routine will output an ASCII string representing
/                       the current Minimum Phase C Speed setting.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FMS_q(void)
{
    acu_fax_query(FAX20_FMS_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FFC_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FFC=?"
/                   The +FFC command is used to set the Format Conversion Parm.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FFC=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FFC_eq(void)
{
    acu_fax_query(FAX20_FFC_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FFC_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FFC=<value>"
/                   The +FFC command is used to set the Format Conversion Parm.
/                   This action routine will set the Format Conversion Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FFC_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FFC_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FFC_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FFC?"
/                   The +FFC command is used to set the Format Conversion Parm.
/                   This routine will output an ASCII string representing
/                       the current Format Conversion Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FFC_q(void)
{
    acu_fax_query(FAX20_FFC_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FBS_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FBS?"
/                   The +FBS command is used to get the DTE Buffer Size.
/                   This routine will output an ASCII string representing
/                       the current DTE Bufer Size.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FBS_q(void)
{
    acu_fax_query(FAX20_FBS_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FCQ20_eq
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCQ=?"
/                   The +FCQ command is used to set the Copy Quality Parameter.
/                   This routine will output an ASCII string representing
/                       the allowed values for the "AT+FCQ=<value>" command.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCQ20_eq(void)
{
    acu_fax_query(FAX20_FCQ_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_FCQ20_e
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCQ=<value>"
/                   The +FCQ command is used to set the Copy Quality Parameter.
/                   This action routine will set the Copy Quality Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                <value> is an 8 bit integer.
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCQ20_e(ubyte *parm_ptr)
{
    acu_fax_command(parm_ptr,FAX20_FCQ_COMMAND);
}

/******************************************************************************
/
/   Routine:        plus_FCQ20_q
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                    "AT+FCQ?"
/                   The +FCQ command is used to set the Copy Quality Parameter.
/                   This routine will output an ASCII string representing
/                       the current Copy Quality Parameter.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FCQ20_q(void)
{
    acu_fax_query(FAX20_FCQ_REQUEST);
}

/******************************************************************************
/
/   Routine:        plus_FMR
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to implement the FAX command:
/                       "AT+FMR?"
/                   The +FMR command is used to Request the DCE Revision.
/                   This routine will output an ASCII string representing
/                       the DCE Revision.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT fax20_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_FMR(void)
{
    acu_fax_query(FAX20_FMR_REQUEST);
}

#endif


