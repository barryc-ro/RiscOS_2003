/****************************************************************************
/
/   Copyright 1993,1994,1995.
/   All Rights Reserved by:
/       RSA
/       7701 Six Forks Road
/       Suite 120
/       Raleigh, NC  27615
/       (919) 846-7171
/
/   This document contains material confidential to RSA its contents must
/   not be revealed, used or disclosed to anyone or company with out
/   written permission by RSA.  The information contained herein is solely
/   for the use of RSA.
/
/   File:           ac00cmv1.c
/
/   Module Version: ACU 4.??
/
/   Function:       This file contains the action routines for the
/                   TIA/EIA IS 101 Digital Voice AT command set.
/                   Note that this specification also includes some
/                   FAX AT commands (i.e., AT+FCLASS=8 sets voice mode).
/
/   Product:        ACU core code
/
/   History:        Extracted from ac00cp.c
/
/       Created:    2/9/95
/
/       ---------------------------------------------------------
/       -                   Modifications                       -
/       ---------------------------------------------------------
/
/       Author & Date:  RSA
/       Description:
/       Reason:
/
/  Author & Date: RSA 6/2/1995.
/  Description: Added .h header dependency.
/  Reason: Needed for the new voice parsing and execution.
/
*****************************************************************************/
#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"
#include "acu_vce.h"
#include "vce_pro.h"
#include "fp_pro.h"
#include "par_def.h"
#include "par_pro.h"


/* Local prototypes */
void set_voice_tia_at_cmds(ubyte state);
void plus_VRX_query(void);
void plus_VRX_exec(ubyte *parm_ptr);
void plus_VTS_query(void);
void plus_VTS_exec(ubyte *parm_ptr);
void plus_VTX_query(void);
void plus_VTX_exec(ubyte *parm_ptr);

#if 0 /* ramn 8/19/96 */
void plus_VXT_query(void);
void plus_VXT_exec(ubyte *parm_ptr);
#endif

void plus_VGR_query(void);
void plus_VGR_exec(ubyte *parm_ptr);
void plus_VGT_query(void);
void plus_VGT_exec(ubyte *parm_ptr);
void plus_VIT_query(void);
void plus_VIT_exec(ubyte *parm_ptr);
void plus_VLS_query(void);
void plus_VLS_exec(ubyte *parm_ptr);
void plus_VRA_query(void);
void plus_VRA_exec(ubyte *parm_ptr);
void plus_VRA_reqs(void);
void plus_VRN_query(void);
void plus_VRN_exec(ubyte *parm_ptr);
void plus_VRN_reqs(void);
void plus_VSD_query(void);
void plus_VSD_exec(ubyte *parm_ptr);
void plus_VSM_query(void);
void plus_VSM_exec(ubyte *parm_ptr);
void plus_VTD_query(void);
void plus_VTD_exec(ubyte *parm_ptr);
void plus_VEM_query(void);
void plus_VEM_exec(ubyte *parm_ptr);
void plus_VBT_query(void);
void plus_VBT_exec(ubyte *parm_ptr);

/* ramn 10/10/95 */
void plus_VGR_reqs(void);
void plus_VGT_reqs(void);
void plus_VIT_reqs(void);
void plus_VSD_reqs(void);
void plus_VSM_reqs(void);
void plus_VTD_reqs(void);
void plus_VEM_reqs(void);
void plus_VBT_reqs(void);
void plus_VLS_reqs(void); 		/* ramn 1/12/96 */


void tele_emul_reqs(void);  		/* ramn 2/23/96 */
void tele_emul_exec(ubyte *parm_ptr);	/* ramn 2/23/96 */
void tele_emul_query(void);		/* ramn 2/23/96 */

void plus_VGS_query(void); /* ramn 2/29/96 */
void plus_VGS_exec(ubyte *parm_ptr) ;	/* ramn 2/29/96 */
void plus_VGS_reqs(void); /* ramn 2/29/96 */

void plus_VGM_query(void);		/* ramn 2/29/96 */
void plus_VGM_exec(ubyte *parm_ptr);	/* ramn 2/29/96 */
void plus_VGM_reqs(void);		/* ramn 2/29/96 */


void pnd_VSPS_query(void);		/* ramn 3/19/96 */
void pnd_VSPS_exec(ubyte *parm_ptr);	/* ramn 3/19/96 */
void pnd_VSPS_reqs(void);			/* ramn 3/19/96 */


/* ramn 10/10/95 */

/* External ACU voice routines used locally */
extern void acu_config_voice(void);
extern void acu_vce_command_error(void);
/*mrm11195*/
extern ubyte dte_mode; 
#include "..\io\dteequ.h" /* ramn 10/10/95 */

/************************************************************************
/
/   Parser Command Table for TIA Voice AT commands
/
************************************************************************/
PARSE_CMD_TABLE_STRUCT voice_tia_commands []=
{
/* commented by ramn on 10/10/95 */
/*    (ubyte *) "+VRX=?", plus_VRX_query,    NO_PARAM,       SEMICOL_END, */
/*    (ubyte *) "+VRX=",  plus_VRX_exec,     BYTE_NUMERIC,   SEMICOL_END, */
    (ubyte *) "+VRX",   plus_VRX_exec,     NO_PARAM,       SEMICOL_END, 

    (ubyte *) "+VTS=?", plus_VTS_query,    NO_PARAM,       SEMICOL_END,
/*  (ubyte *) "+VTS=",  plus_VTS_exec,     DIAL_STRING,    SEMICOL_END,  */
    (ubyte *) "+VTS=",  plus_VTS_exec,     COMPOUND_DTMF,  SEMICOL_END, 

/*    (ubyte *) "+VTX=?", plus_VTX_query,    NO_PARAM,       SEMICOL_END, */
/*    (ubyte *) "+VTX=",  plus_VTX_exec,     BYTE_NUMERIC,   SEMICOL_END, */
    (ubyte *) "+VTX",   plus_VTX_exec,     NO_PARAM,       SEMICOL_END, 

/*    (ubyte *) "+VXT=?", plus_VXT_query,    NO_PARAM,       SEMICOL_END, */
/*    (ubyte *) "+VXT=",  plus_VXT_exec,     COMPOUND_BYTE,  SEMICOL_END, */

    (ubyte *) "+VGR=?", plus_VGR_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VGR=",  plus_VGR_exec,     BYTE_NUMERIC,   SEMICOL_END, 
	 (ubyte *) "+VGR?",     plus_VGR_reqs,   NO_PARAM,                SEMICOL_END, /*ramn 10/10/95*/

    (ubyte *) "+VGT=?", plus_VGT_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VGT=",  plus_VGT_exec,     BYTE_NUMERIC,   SEMICOL_END, 
	 (ubyte *) "+VGT?",     plus_VGT_reqs,           NO_PARAM,                SEMICOL_END, /*ramn 10/10/95*/

    (ubyte *) "+VIT=?", plus_VIT_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VIT=",  plus_VIT_exec,     BYTE_NUMERIC,   SEMICOL_END, 
	 (ubyte *) "+VIT?",     plus_VIT_reqs,           NO_PARAM,                SEMICOL_END, /*ramn 10/10/95*/

    (ubyte *) "+VLS=?", plus_VLS_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VLS=",  plus_VLS_exec,     BYTE_NUMERIC,   SEMICOL_END, 
    (ubyte *) "+VLS?",  plus_VLS_reqs,     NO_PARAM,       SEMICOL_END, /* ramn 1/12/96 */

    (ubyte *) "+VRA=?", plus_VRA_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VRA=",  plus_VRA_exec,     BYTE_NUMERIC,   SEMICOL_END, 
    (ubyte *) "+VRA?",  plus_VRA_reqs,     NO_PARAM,       SEMICOL_END, 

    (ubyte *) "+VRN=?", plus_VRN_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VRN=",  plus_VRN_exec,     BYTE_NUMERIC,   SEMICOL_END, 
    (ubyte *) "+VRN?",  plus_VRN_reqs,     NO_PARAM,       SEMICOL_END, 

    (ubyte *) "+VSD=?", plus_VSD_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VSD=",  plus_VSD_exec,     COMPOUND_BYTE,  SEMICOL_END, 
	 (ubyte *) "+VSD?",  plus_VSD_reqs,     NO_PARAM,       SEMICOL_END, /*ramn 10/10/95*/

    (ubyte *) "+VSM=?", plus_VSM_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VSM=",  plus_VSM_exec,     COMPOUND_WORD,  SEMICOL_END, 
	 (ubyte *) "+VSM?",  plus_VSM_reqs,     NO_PARAM,       SEMICOL_END, /*ramn 10/10/95*/

    (ubyte *) "+VTD=?", plus_VTD_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VTD=",  plus_VTD_exec,     BYTE_NUMERIC,   SEMICOL_END, 
	 (ubyte *) "+VTD?",  plus_VTD_reqs,     NO_PARAM,       SEMICOL_END, /*ramn 10/10/95*/

    (ubyte *) "+VEM=?", plus_VEM_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VEM=",  plus_VEM_exec,     LONG_HEX,       SEMICOL_END, 
	 (ubyte *) "+VEM?",  plus_VEM_reqs,     NO_PARAM,       SEMICOL_END, /*ramn 10/10/95*/

    (ubyte *) "+VBT=?", plus_VBT_query,    NO_PARAM,       SEMICOL_END, 
    (ubyte *) "+VBT=",  plus_VBT_exec,     COMPOUND_WORD,  SEMICOL_END, 
	 (ubyte *) "+VBT?",  plus_VBT_reqs,     NO_PARAM,       SEMICOL_END, /*ramn 10/10/95*/

	 (ubyte *) "+VSP=?",  tele_emul_query,	 NO_PARAM,   	  SEMICOL_END, /*ramn 2/23/96*/
	 (ubyte *) "+VSP=",   tele_emul_exec, 	 BYTE_NUMERIC,   SEMICOL_END, /*ramn 2/23/96*/
	 (ubyte *) "+VSP?",   tele_emul_reqs, 	 NO_PARAM,   	  SEMICOL_END, /*ramn 2/23/96*/

	 (ubyte *) "+VGS=?",  plus_VGS_query,	 NO_PARAM,   	  SEMICOL_END, /*ramn 2/29/96*/
	 (ubyte *) "+VGS=",   plus_VGS_exec, 	 BYTE_NUMERIC,   SEMICOL_END, /*ramn 2/29/96*/
	 (ubyte *) "+VGS?",   plus_VGS_reqs, 	 NO_PARAM,   	  SEMICOL_END, /*ramn 2/29/96*/

	 (ubyte *) "+VGM=?",  plus_VGM_query,	 NO_PARAM,   	  SEMICOL_END, /*ramn 2/29/96*/
	 (ubyte *) "+VGM=",   plus_VGM_exec, 	 BYTE_NUMERIC,   SEMICOL_END, /*ramn 2/29/96*/
	 (ubyte *) "+VGM?",   plus_VGM_reqs, 	 NO_PARAM,   	  SEMICOL_END, /*ramn 2/29/96*/

	 (ubyte *) "#vsps=?",  pnd_VSPS_query,	 NO_PARAM,   	  SEMICOL_END, /*ramn 3/19/96*/
	 (ubyte *) "#vsps=",   pnd_VSPS_exec, 	 BYTE_NUMERIC,   SEMICOL_END, /*ramn 3/19/96*/
	 (ubyte *) "#vsps?",   pnd_VSPS_reqs, 	 NO_PARAM,   	  SEMICOL_END, /*ramn 3/19/96*/

    END_OF_PARSE_TABLE
};


/*******************************************************************************
/
/      Routine:        set_voice_tia_at_cmds
/
/      Author:         RSA
/
/      Creation Date:  12/16/94
/
/      Description:    This Routine enables parsing of VOICE TIA AT commands.
/                      These are commands defined by the TIA IS101 specification.
/
/      Input Parameters:   state - OFF (0) to disable, ON (otherwise) to enable.
/
/      Output Parameters: None
/
/      Global Variables Changed:  None
/
/      Users:
/
/      -------------------------------------------------------------
/      -                        Modifications                        -
/      -------------------------------------------------------------
/
/      Author & Date:    RSA
/      Description:
/      Reason:
/
*******************************************************************************/
void set_voice_tia_at_cmds(ubyte state)
{
   if (state == OFF)
       at_parser_tables(DISABLE_TABLE,voice_tia_commands);
   else
       at_parser_tables(ENABLE_TABLE,voice_tia_commands);
}


/******************************************************************************
/
/   Routine:        acu_vce_command
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to exercise VOICE AT commands parsed
/                   by the ACU.  This routine serves as the ACU to VOICE
/                   interface for executable VOICE commands.
/
/   Input Parameters: which_command - Which VOICE command to execute
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: All commands in this file.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
/  Author & Date: RSA 6/2/1995.
/  Description: Added the assignment send_ok = FALSE.
/  Reason: When going online in voice mode, we need to send CONNECT but NOT
/           OK.
/
*******************************************************************************/
void acu_vce_command(uword which_command,ubyte *param_ptr)
{
    ubyte *response_ptr,result;

    response_ptr = 0;
    result = 0;

    /* Update VOICE w/the latest configuration before every command */
    acu_config_voice();

    /* Pass the command up to voice */
    switch (voice_execute_command(which_command, param_ptr, &response_ptr))
    {
	 	case VOICE_CONTINUE_PARSING:
	   break;

		case VOICE_GOTO_ONLINE_COMMAND:
		    on_line_command = TRUE;

	   	 /* Stop the OK result code from going back to the terminal.  The
			voice code has already send back a response */
		    /*send_ok = FALSE;*/ 	/* ramn 1/16/96 */
	   break;

		case VOICE_GOTO_OFFLINE_COMMAND:
		    on_line_command = FALSE;
	   break;

		case VOICE_GO_ONLINE:
		    build_event(E_CONNECT,CONN_VOICE);
/* Start Change 6/2/1995. */
		    if (response_ptr)
		    {
		      /* send_ok = FALSE;*/ /* ramn 1/16/96 */
		       /*mrm11195*/
		       /* 
	   	    enable and then disbale the acu so we 
	      	 can display the connect message
		       */
		       enable_acu_on_terminal();		/* ramn 10/10/95 */

	   	    /* output_info(response_ptr, UNFORMATTED); 	*/ /* ramn 1/16/96 */
				output_info(response_ptr, (ubyte)sr14.verbose_form); 	/* ramn 1/16/96 */

		       while (acu_to_num())		/* ramn 10/10/95 */
					;
				 while (!check_all_sent())	/* ramn 10/10/95 */
					;
	       
		       disable_acu_on_terminal();	/* ramn 10/10/95 */
	   	    dte_mode = T_VOICE;	/* ramn 10/10/95 */
		    }   
/* End Change 6/2/1995. */
		    return;

		case VOICE_ERROR:
		    acu_vce_command_error();
	   break;

		default:
		    /* keh is this correct? */
		    if (response_ptr)
	   	    /* output_info(response_ptr, UNFORMATTED); 	*/ /* ramn 1/16/96 */
				output_info(response_ptr, (ubyte)sr14.verbose_form); 	/* ramn 1/16/96 */
	   break;
    }
}


/******************************************************************************
/
/   Routine:        acu_vce_query
/
/   Author:         RSA
/
/   Creation Date:  12/16/95
/
/   Description:    This routine is called to exercise VOICE AT Request commands
/                   parsed by the ACU.  This routine serves as the ACU to VOICE
/                   interface for VOICE request commands.
/
/   Input Parameters: which_command - Which VOICE command to execute
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: All commands in this file.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void acu_vce_query(uword which_command)
{
    ubyte *response_ptr,result;

    response_ptr = 0;
    result = 0;

    /* Update VOICE w/the latest configuration before every command */
    acu_config_voice();

    /* Pass the command up to VOICE */
    result = voice_execute_command(which_command, UNUSED, &response_ptr);

    /* Display any command result */
    if (result == VOICE_ERROR)
	acu_vce_command_error();
    else
/*	output_info(response_ptr, UNFORMATTED); */
	output_info(response_ptr, (ubyte)sr14.verbose_form);     /* ramn 1/16/96 */
}


/******************************************************************************
/
/   Routine:        plus_VRX_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VRX=?"
/                   The +VRX command is used to start data Receiption.
/                   This routine responds OK, to verify command support.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
#if 0
void plus_VRX_query(void)
{
}
#endif

/******************************************************************************
/
/   Routine:        plus_VRX_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VRX"
/                   The +VRX command is used to start Data receiption.
/                   This routine initiates the data mode.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
/  Author & Date: RSA 6/6/1995.
/  Description: Corrected this procedure.
/  Reason: Need the parm_ptr parameter for the +VRX parsing.
/
*******************************************************************************/
void plus_VRX_exec(ubyte *parm_ptr)
{
/* Start Change 6/6/1995. */
/*    if (*parm_ptr == 0)
*        acu_vce_command(VRX_COMMAND,UNUSED);
*    else
*        acu_vce_command_error();
*/
    acu_vce_command(VRX_COMMAND,parm_ptr);
/* End Change 6/6/1995. */

}

/******************************************************************************
/
/   Routine:        plus_VTS_query
/
/   Author:         RSA
/ 
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VTS=?"
/                   The +VTS command is used send tones.
/                   This routine responds with the valid command input to the
/                   terminal.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VTS_query(void)
{
    acu_vce_query(VTS_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_VTS_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VTS="
/                   The +VTS command is used send tones.
/                   This routine initiates the tones.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VTS_exec(ubyte *parm_ptr)
{
    acu_vce_command(VTS_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VTX_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VTX=?"
/                   The +VTX command is used enter Voice Transmit State.
/                   This routine responds with the valid command input to the
/                   terminal (Noting).
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
#if 0
void plus_VTX_query(void)
{
}
#endif

/******************************************************************************
/
/   Routine:        plus_VTX_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VTX="
/                   The +VTX command is used enter Voice Transmit State.
/                   This routine will move Voice to the Transmit State.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
/  Author & Date: RSA 6/2/1995.
/  Description: Corrected this procedure.
/  Reason: Need the parm_ptr parameter for the +VTX parsing.
/
*******************************************************************************/
void plus_VTX_exec(ubyte *parm_ptr)
{
/* Start Change 6/2/1995. */
/*    if (*parm_ptr == 0)
	acu_vce_command(VTX_COMMAND,UNUSED);
    else
	acu_vce_command_error();
*/
	acu_vce_command(VTX_COMMAND,parm_ptr);
/* End Change 6/2/1995. */
}

/******************************************************************************
/
/   Routine:        plus_VXT_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VXT=?"
/                   The +VXT command is used to Translate voice data.
/                   This routine responds with the valid command input to the
/                   terminal (Noting).
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
#if 0 /* ramn 8/19/96 */
void plus_VXT_query(void)
{
/* Start Change 6/14/1995. */
/*    acu_vce_query(VXT_QUERY); */
   acu_vce_command_error();
/* End Change 6/14/1995. */
}
#endif

/******************************************************************************
/
/   Routine:        plus_VXT_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VXT="
/                   The +VXT command is used to Translate voice data.
/                   This routine will Translate voice data.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
/  Author & Date: RSA 6/2/1995.
/  Description: Corrected parameter 1 in passed into acu_vce_command()
/  Reason: +VXT not +VTX
/
/  Author & Date: RSA 6/14/1995.
/  Description: Removed the +VXT command.
/  Reason: Rockwell DSP cannot do translation command.
/
*******************************************************************************/
#if 0  /* ramn 8/19/96 */
void plus_VXT_exec(ubyte *parm_ptr)
{
/* Start Change 6/14/1995. */
/* Start Change 6/2/1995. */
/*    acu_vce_command(VXT_COMMAND,parm_ptr); */
   parm_ptr=0;
   acu_vce_command_error();
/* End Change 6/2/1995. */

}
#endif

/******************************************************************************
/
/   Routine:        plus_VGR_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VGR=?"
/                   The +VGR command is used set recieve gain level.
/                   This routine responds with the valid command input to the
/                   terminal (Noting).
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VGR_query(void)
{
    acu_vce_query(vgr_query);
}

/******************************************************************************
/
/   Routine:        plus_VGR_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VGR="
/                   The +VGR command is used set recieve gain level.
/                   This routine sets the recieve gain level.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VGR_exec(ubyte *parm_ptr)
{
    acu_vce_command(VGR_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VGT_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VGT=?"
/                   The +VGT command is used set transmit gain level.
/                   This routine responds with the valid command input to the
/                   terminal (Noting).
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VGT_query(void)
{
    acu_vce_query(vgt_query);
}

/******************************************************************************
/
/   Routine:        plus_VGT_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VGT="
/                   The +VGT command is used set transmit gain level.
/                   This routine sets the transmit gain level.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VGT_exec(ubyte *parm_ptr)
{
    acu_vce_command(VGT_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VIT_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VIT=?"
/                   The +VIT command is used set the inactivity timer.
/                   This routine responds with the valid command input to the
/                   terminal (Noting).
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VIT_query(void)
{
    acu_vce_query(VIT_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_VIT_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VIT="
/                   The +VIT command is used set the inactivity timer.
/                   This routine programs the inactivity timer.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VIT_exec(ubyte *parm_ptr)
{
    acu_vce_command(VIT_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VLS_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VLS=?"
/                   The +VLS command is used select the DCE line connection.
/                   This routine responds with the valid command input to the
/                   terminal.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VLS_query(void)
{
    acu_vce_query(VLS_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_VLS_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VLS="
/                   The +VLS command is used select the DCE line connection.
/                   This routine sets the DCE line connection.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VLS_exec(ubyte *parm_ptr)
{
    acu_vce_command(VLS_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VRA_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VRA=?"
/                   The +VRA command is used set the Ringback goes Away timer.
/                   This routine responds with the valid command input to the
/                   terminal (nothing).
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VRA_query(void)
{
    acu_vce_query(vra_query);
}

/******************************************************************************
/
/   Routine:        plus_VRA_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VRA="
/                   The +VRA command is used set the Ringback goes Away timer.
/                   This routine programs the Ringback goes Away timer.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VRA_exec(ubyte *parm_ptr)
{
    acu_vce_command(VRA_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VRA_reqs
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VRA?"
/                   The +VRA command is used set the Ringback goes Away timer.
/                   This routine shows the user the current timer value.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VRA_reqs(void)
{
    acu_vce_query(VRA_REQUEST);
}


/******************************************************************************
/
/   Routine:        plus_VRN_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VRN=?"
/                   The +VRN command is used set the No Ring timer.
/                   This routine responds with the valid command input to the
/                   terminal (nothing).
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VRN_query(void)
{
    acu_vce_query(vrn_query);
}

/******************************************************************************
/
/   Routine:        plus_VRN_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VRN="
/                   The +VRN command is used set the No Ring timer.
/                   This routine programs the No Ring timer.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VRN_exec(ubyte *parm_ptr)
{
    acu_vce_command(VRN_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VRN_reqs
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VRN?"
/                   The +VRN command is used set the No Ring timer.
/                   This routine shows the current value of No Ring timer.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VRN_reqs(void)
{
    acu_vce_query(VRN_REQUEST);
}


/******************************************************************************
/
/   Routine:        plus_VSD_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VSD=?"
/                   The +VSD command is used set the Silence Detection.
/                   This routine responds with the valid command input to the
/                   terminal (nothing).
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VSD_query(void)
{
    acu_vce_query(vsd_query);
}

/******************************************************************************
/
/   Routine:        plus_VSD_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VSD="
/                   The +VSD command is used set the Silence Detection.
/                   This routine programs the Silence Detection.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VSD_exec(ubyte *parm_ptr)
{
    acu_vce_command(VSD_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VSM_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VSM=?"
/                   The +VSM command is used set the Compression Method.
/                   This routine responds with the valid command input to the
/                   terminal. 
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VSM_query(void)
{
    acu_vce_query(VSM_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_VSM_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VSM="
/                   The +VSM command is used set the Compression Method.
/                   This routine sets the Compression Method.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VSM_exec(ubyte *parm_ptr)
{
    acu_vce_command(VSM_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VTD_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VTD=?"
/                   The +VTD command is used set the Tone Duration Timer.
/                   This routine responds with the valid command input to the
/                   terminal. 
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VTD_query(void)
{
    acu_vce_query(VTD_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_VTD_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VTD="
/                   The +VTD command is used set the Tone Duration Timer.
/                   This routine sets the Tone Duration Timer.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VTD_exec(ubyte *parm_ptr)
{
    acu_vce_command(VTD_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VEM_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VEM=?"
/                   The +VEM command is used set the Event Mask.
/                   This routine responds with the valid command input to the
/                   terminal. 
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VEM_query(void)
{
    acu_vce_query(VEM_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_VEM_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VEM="
/                   The +VEM command is used set the Event Mask.
/                   This routine sets the Event Mask.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VEM_exec(ubyte *parm_ptr)
{
    acu_vce_command(VEM_COMMAND,parm_ptr);
}

/******************************************************************************
/
/   Routine:        plus_VBT_query
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VBT=?"
/                   The +VBT command is used set the Buffer Threshhold.
/                   This routine responds with the valid command input to the
/                   terminal. 
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/                                (unused).
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VBT_query(void)
{
    acu_vce_query(VBT_QUERY);
}

/******************************************************************************
/
/   Routine:        plus_VBT_exec
/
/   Author:         RSA
/
/   Creation Date:  2/16/95
/
/   Description:    This routine is called to implement the TIA Voice command:
/                   "AT+VBT="
/                   The +VBT command is used set the Buffer Threshhold.
/                   This routine sets the Buffer Threshhold.
/
/   Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void plus_VBT_exec(ubyte *parm_ptr)
{
    acu_vce_command(VBT_COMMAND,parm_ptr);
}

/*****************************************************************************
*
*       the following routines are added by ramn 
* on 10/10/95
*       
*       These are routines that will execute the following commands
*       +VGR?
*       +VGT?
*       +VIT?
*       +VSD?
*       +VSM?
*       +VTD?
*       +VEM?
*       +VBT?
*			+VLS?
*
*****************************************************************************/
void plus_VGR_reqs(void)
{
    acu_vce_query(vgr_request);
}

void plus_VGT_reqs(void)
{
    acu_vce_query(vgt_request);
}

void plus_VIT_reqs(void)
{
    acu_vce_query(vit_request);
}

void plus_VSD_reqs(void)
{
    acu_vce_query(vsd_request);
}

void plus_VSM_reqs(void)
{
    acu_vce_query(vsm_request);
}

void plus_VTD_reqs(void)
{
    acu_vce_query(vtd_request);
}

void plus_VEM_reqs(void)
{
    acu_vce_query(vem_request);
}

void plus_VBT_reqs(void)
{
    acu_vce_query(vbt_request);
}

void plus_VLS_reqs(void)  		/* ramn 1/12/96 */
{
    acu_vce_query(vls_request);
}


void tele_emul_reqs(void)  		/* ramn 2/23/96 */
{
    acu_vce_query(TELE_EMUL_REQS);
}

void tele_emul_exec(ubyte *parm_ptr)	/* ramn 2/23/96 */
{
    acu_vce_command(TELE_EMUL_COMMAND,parm_ptr);
}


void tele_emul_query(void)		/* ramn 2/23/96 */
{
    acu_vce_query(TELE_EMUL_QUERY);
}



void plus_VGS_query(void) /* ramn 2/29/96 */
{
    acu_vce_query(vgs_query);
}

void plus_VGS_exec(ubyte *parm_ptr)	/* ramn 2/29/96 */
{
    acu_vce_command(vgs_command,parm_ptr);
}

void plus_VGS_reqs(void) /* ramn 2/29/96 */
{
    acu_vce_query(vgs_request);
}


void plus_VGM_query(void)		/* ramn 2/29/96 */
{
    acu_vce_query(vgm_query);
}

void plus_VGM_exec(ubyte *parm_ptr)	/* ramn 2/29/96 */
{
    acu_vce_command(vgm_command,parm_ptr);
}


void plus_VGM_reqs(void)		/* ramn 2/29/96 */
{
    acu_vce_query(vgm_request);
}

void pnd_VSPS_query(void)		/* ramn 3/19/96 */
{
    acu_vce_query(vsps_query);
}


void pnd_VSPS_exec(ubyte *parm_ptr)	/* ramn 3/19/96 */
{
    acu_vce_command(vsps_command,parm_ptr);
}


void pnd_VSPS_reqs(void)			/* ramn 3/19/96 */
{
    acu_vce_query(vsps_request);
}
