/****************************************************************************
/
/     Copyright 1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ac00elib.c
/
/     Module Version:   ACU 5.00
/
/     Function:         ACU ETC Driver library routines.
/
/     Product:          ACU ETC Driver.
/
/     History:          V1.00 (7/1/94)  - Initial shippment
/                       V1.01 (11/2/94) - Initial release.
/
/        Created:       7/1/94
/
/     ----------------------------------------------------------
/     -                   Modifications                        -
/     ----------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*****************************************************************************/

#include "sys_def.h"        /* Global system defines */
#include "acu_edef.h"       /* ACU ETC defines */
#include "acu_emem.h"       /* ACU ETC Driver variable prototypes */

#include "acu_def.h"        /* ACU global defines */
#include "acu_mem.h"        /* ACU variable prototypes */

/* Local prototypes */
void etc_config_acu_parms(void);
void etc_set_max_DCE_rate(void);


/****************************************************************************
/
/     Routine:          etc_config_acu_parms
/
/     Author:           RSA
/
/     Creation Date:    7/1/94
/
/     Description:      This routine will configure the ACU's global
/                       variables for ETC.
/
/     Input Parameters: None
/
/     Output Parameters: None
/
/     Global Variables Changed: None
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:  RSA
/     Description:
/     Reason:
/
*****************************************************************************/
void etc_config_acu_parms(void)
{
   /* Configure standard ACU AT dialer parameters for ETC */
   /* Set S-Registers per ETC */
   s[7] = ETC_TIME__NO_ANSWER_TIMEOUT;
   s[10] = ETC_TIME__NO_CARRIER_DISC;

   /* Configure standard ACU V.42 parameters for ETC */
   /* Set MNP and LAP-M commands per ETC */
   slN = LAPM_RELIABLE;
   hyK = NO_MNP_PERFERED;
   hyJ = ENABLE_V42_DETECTION;
   selective_retrans = ENABLE_SREJECTS;
   slA = FRAME_SIZE__32BYTES;
}



/****************************************************************************
/
/       Routine:            etc_set_max_DCE_rate
/
/       Author:             RSA
/
/       Creation Date:
/
/       Description:        This routine will configure the ACU's for ETC's
/                           maximum V.32bis DCE rate.
/
/                           ETC specifies the "AT%B" command to set the maximum
/                           V.32bis rate.  But the ACU already uses the standard
/                           Hayes compatible S-Register 37 for this task, so
/                           this routine is used to map the ETC command to the
/                           Hayes command.
/
/       Input Parameters:   None
/
/       Output Parameters:  None
/
/       Global Variables Changed:  None
/
/       Users:
/
/       -------------------------------------------------------------
/       -                       Modifications                       -
/       -------------------------------------------------------------
/
/       Author & Date:  RSA
/       Description:
/       Reason:
/
*****************************************************************************/
void etc_set_max_DCE_rate(void)
{
   /* Force S-37 to what ETC's max V.32bis rate is */
   switch (perB)
   {
      case BPS4800:
         s[37] = S37_4800_BPS;
         break;

      case BPS7200:
         s[37] = S37_7200_BPS;
         break;

      case BPS9600:
         s[37] = S37_9600_BPS;
         break;

      case BPS12000:
         s[37] = S37_12000_BPS;
         break;

      default:
         case BPS14400:
            /* Default for S37 is last autobaud rate, NOT max DCE rate */
            if (perB == ETC_MAX_DCE_RATE)
               s[37] = S37_LAST_AUTOBAUD_RATE;
            else
               s[37] = S37_14400_BPS;
            break;
   }
}
