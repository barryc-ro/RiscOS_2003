/****************************************************************************
/
/     Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ac00mem.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains the memory definitions for the
/                       ACU code.
/
/     Product:          ACU core code
/
/     History:          ac00mem.c v3.90
/                       ac00mem.c v3.91
/                       ac00mem.c v3.94
/                       ac00mem.c v3.95
/                       ac00mem.c v3.96
/
/        Created:       10/7/91
/                       10/8/91
/                       12/04/91
/                       1/21/92
/                       1/12/93
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/
#include "sys_def.h"
#include "acu_def.h"
#include "homolig1.h"

ubyte last_modem_status;/* Contains the value of the last status from the modem */
ubyte modem_baud;       /* Value of the modem baud rate */
ubyte modem_mode;       /* Value of the modem connect mode */
/*MRM22696*/
ubyte N;

ubyte dte_DTR_flag;     /* Indicates status of DTR pin */
ubyte dte_baud;         /* Value of the DTE baud rate */
ubyte last_baud;        /* Value of the last DTE baud rate */
ubyte dte_init_baud;    /* Value of baud rate to inititlize the DTE with */
ubyte overspeed;        /* Determines if overspeed is selected or not   */
ubyte DTR_valid_up_flag;/* Set when DTR goes off. Reset by ACU when it is seen */
ubyte look_for_DTR_high_to_low; /* Set to look for an on to off transition of DTR */
ubyte DTR_high_to_low;  /* Flags when transition occurred   */
ubyte look_for_DTR_low_to_high; /* Set to look for an off to on transition of DTR */
ubyte DTR_low_to_high;  /* Flags when transition occurred   */
ubyte CTS_turn_on_flag; /* Set to look for transition of CTS */
ubyte CTS_up_flag;      /* Flags state of CTS */
ubyte acu_got_dte_break;/* Flags when a break is received from the terminal */
ubyte DTR_always_on;    /* DTR line is ignored and always assumed to be high */
ubyte RTS_always_on;    /* RTS line is ignored and always assumed to be high */
ubyte mr_on_flag;       /* Flag which denotes the state of the MR led   */

ubyte escape_mode;

 /***** MNP variables *****/
ubyte slA;
uword mnp_stream_size;  /* MNP block size - \A */
ubyte stream_size_256;  /* Enabled block size of 256 - \A */
ubyte perA;
ubyte acu_autoreliable_char;  /* Auto-reliable fallback character - %A */
ubyte slC;
ubyte acu_autoreliable_flag;  /* Set auto-reliable buffer - \C */
ubyte break_length;           /* Length of break - \B*/
ubyte slG;
ubyte DCE_flowctrl;           /* Set modem to modem flow control - \G */
ubyte bps_adjust;             /* Denotes if serial port bps rate is adjusted to line rate - \J */
ubyte slK;
ubyte break_type;          /* Type of break processing - \K */
ubyte slL;                 /* Line Connect Speed */
ubyte acu_mnp_service_type;/* MNP is either in stream or block mode - \L */
ubyte mnp_service_level;   /* Type of MNP service - \N */
ubyte speed_matching;      /* Enables speed matching - \N */
ubyte mnp_autorel_time;    /* Length of time to detect auto-reliable connection - \N */
ubyte slN;
ubyte operating_mode;      /* Type of operating mode used in connected state - \N */
ubyte slQ;
ubyte terminal_DTE_flowctrl;/* Type of terminal to modem flow control - \Q */
ubyte modem_DTE_flowctrl;  /* Type of modem to terminal flow control - \Q */
ubyte slT;
uword inactivity_timer;    /* Length of the inactivity timer - \T */
ubyte slV;                 /* Flags if modified result codes are sent to DTE - \V */
ubyte slX;
ubyte pass_flowctrl;       /* Set xon/xoff pass through - \X */
ubyte reconfigure;         /* Flag to reconfigure system */
ubyte selective_retrans;   /* Indicates if selective retransmission option is enabled */
ubyte loopback_test;       /* Indicates if loop back test option is enabled */
ubyte v42_enable;          /* Indicates if loop back test option is enabled */
ubyte hyC;                /* 2/23/96 shujin */
ubyte hyJ;
ubyte detection_enable;    /* Indicates if the detection process is enabled */
ubyte mnp_preferred;       /* Indicates if mnp preferred option is enabled */
ubyte quH;                 /* Set V42bis compression control - "H */
ubyte btlz_comp_control;   /* Parameter passed to v42 to set V42 compression type */
ubyte quO;                 /* Set V42bis compression string length - "O */
ubyte btlz_string_len;     /* Parameter passed to v42 compression string length */
uword  btlz_dict_size;     /* Parameter passed to v42, btlz compression dictionary size */

ubyte astA,astB,andF,andI,perB;  /* AT command vars for ETC */

ubyte terminal_DTE_xoff_char; /* Value of the XOFF character from terminal to modem */
ubyte terminal_DTE_xon_char;  /* Value of the XON character from terminal to modem */
ubyte modem_DTE_xoff_char;    /* Value of the XOFF character from modem to terminal */
ubyte modem_DTE_xon_char;     /* Value of the XON character from modem to terminal */
ubyte retry_limit;            /* Number of times to retransmit something - \O */
ubyte acu_mnp_service_class;
ubyte mnp_optimization;
ubyte perC;
ubyte mnp_compression;

/*   AT Command variables   */
ubyte current_register;       /* Current index of the array of registers - Sn */
ubyte RLSD_reflects_CD_temp;  /* temporary variable */
ubyte v32_retrain;            /* Carrier detection method for V.32   */
ubyte receive_threshold;      /* Receive threshold passed to modem_set_parameters      */

struct atB_struct atB;        /* Value of ATB command */

ubyte DSR_only_at_handshaking;/* Type of DSR control while connected   */
ubyte dial_pause_time;        /* Time used for the pause (,) dial modifier   */
ubyte comm_mode;              /* Type of communication mode selected   */

ubyte mnp_advanced_commands;
ubyte automode,autofallback;
ubyte valueX,slD,slI,perE,slO,slU,slY,slZ,atW;

   /***** FLAGS *****/
ubyte error_occurred;   /* Indicates if error occured during command execution */
ubyte error_flag;       /* Indicates if error occured during dialing */
ubyte valid_char;       /* Indicates if a character in the command buffer is valid or not */
ubyte send_ok;          /* Indicates if OK result code should be sent to DTE */
ubyte on_line_command;  /* Indicates if ACU is in on line command mode */
ubyte busy_detect;      /* Flags if busy is detected during originate */
ubyte timer_activated;  /* Flags if timer is used to terminate test */
ubyte self_test_error_count;  /* Number of errors received during self test */
ubyte test_in_progress;       /* Flags if test is in progress */

ubyte cmd_line[CMD_LINE_SIZE];   /* Buffer for the entered commands */
ubyte *acu_dial_string_ptr;      /* Points to the current dial string */
ubyte pt[PT_SIZE];
ubyte temp_array[DEFAULT_SIZE];  /* Array used in reading and writing eeprom   */

ubyte *cmd_ptr;      /* Pointer used to add and delete characters in command line buffer */
ubyte idle_char;     /* Character received in IDLE state, needs to be an A or a to change states */
ubyte R_mode;        /* Flags if the R modifier is encountered */
ubyte return_to_idle;      /* Flags if the ; modifier is encountered */
ubyte result_message_sent; /* Flags if a result message is sent to the DTE */
ubyte bypass_break;        /* if DTE can send break or not, \K command */
ubyte long_space_disconnect; /* long space disconnect detection */
ubyte trellis;             /* V.32 trellis coding enabled/disabled */

struct ACU_state st_idle, st_parse, st_orig, st_answ, st_online,
       st_hangup, st_test, st_retrain;

ubyte state_type[STATE_MAX];

void (*current_bg)(void);       /* Pointer to the routine to be performed */

void (*acu_proc)(void);    /* Pointer to the routine to be performed */

ubyte acu_state;           /* State of the ACU control code   */
ubyte previous_acu_state;  /* Stores ACU_STATE during self-test */
ubyte previous_idle_type;  /* Stores state_type[S_IDLE] during self-test */

struct ACU_event event_buffer[NUMBER_OF_EVENT_BUFFERS];
struct ACU_event *acu_event;/* Pointer to event structure   */
struct ACU_que event_que;

uword acu_10msec_timer;    /* ACU background 10 msec timer tick   */
uword acu_100msec_timer;   /* ACU background 100 msec timer tick   */
uword acu_1sec_timer;      /* ACU background 1 sec timer tick   */
uword acu_1min_timer;      /* ACU background 1 min timer tick   */
uword timer1;              /* ACU Program timer */
uword timer2;              /* ACU Program timer */
uword timer3;              /* Modem Program timer */
uword timer5;              /* Modem Program timer */
ubyte timer100mS;          /* ACU interrupt 100 msec timer tick     */
ubyte timer1sec;           /* ACU interrupt 1 sec timer tick      */
ubyte timer1min;           /* ACU interrupt 1 min timer tick      */
ubyte dtr_timer1sec;       /* DTR one second timer*/
ubyte dtr_timer;           /* DTR 10ms timer */
ubyte cts_timer;           /* CTS 10ms timer */
ubyte dial_timer;          /* Pulse and tone dialing 1ms timer */

#if INTERNATIONAL_CODE == 1
ubyte shunt_timer;            /* MH110697 */
ubyte shunt_timer_en;
ubyte in_pulse_dial;        /* MH121697 */
#endif

uword delay_to_exec;       /* Delay from <CR> until command execution */
uword dialtone_wait_limit; /* Length of time to wait for dialtone */
uword length_of_dialtone;  /* Length of dialtone needed to be detected */
//uword inter_digit_delay;   /* Delay between pulsed characters   */
uword flash_time;          /* Length of on hook and off hook periods */
uword mod_dialtone_length; /* Length of dialtone to detect in dial modifier W */
uword mod_quiet_answ_length;/* Length of quiet answer to detect in dial modifier @ */
uword answ_tone_delay;     /* Delay before sending answer tone */
uword time_between_rings;  /* Max time allowed between rings */
ubyte long_space_send_time;/* Length of the break for long space disconnect   */
uword RDL_response_time;   /* Time ACU will wait for a RDL response from the remote modem   */
uword ALB_response_time;   /* Time ACU will wait for carrier to be present during ALB tests*/

ubyte make_time;           /* pulse time */
ubyte break_time;          /* interpulse time */


/*   System Interface   */
ubyte last_async_sync;     /* Last status returned by system_info*/
ubyte system_status;       /* Status returned by system_bg*/
ubyte last_status;         /* Last status returned by system_bg*/
ubyte acu_parity;
ubyte char_size;           /* Character size passed to modem task   */
ubyte acu_data_bits;       /* Number of data bits */
ubyte acu_stop_bits;       /* Number of stop bits */

ubyte at_parity;           /* Parity determined by AT   */
ubyte at_char_size;        /* Character size passed to modem task   */
ubyte at_data_bits;        /* Number of data bits determined by AT */
ubyte at_stop_bits;        /* Number of stop bits determined by AT*/

ubyte hook;                /* Flags if modem is on hook or not */
ubyte oh_on_flag;          /* Flags if OH lamp is on or not */
ubyte user_initiated_hangup;/* Flags if ATH was entered or hang up due to DTR dropping */
ubyte delay_before_hangup; /* Waiting for the protocol to disconnect */
ubyte at_h_command;        /* Flags if hang up due to ATH */
ubyte at_z_command;        /* Flags if hang up due to ATZ */

ubyte acu_loop;            /* Flag for control loop */

ubyte switch_to_leased_line;  /* Tells the ACU to go to the Leased Line after it has finished*/
ubyte look_for_signal;        /* flag used in quiet_answer and wait_for_dial_tone*/
ubyte line_signal_seen;       /* Indicates if line energy has been detected on the line */
ubyte modifier_type;          /* Type of dial modifier for process_modifier() */
ubyte hangup_result_type;     /* Type of result code passed to hang_up(); */
ubyte detect_disconnect_tone; /* Flags if 400hz tone detection is enabled or disabled */
ubyte tone_disconnect;        /* Indicates modem hung up due to 400hz tone   */

/*   Calling Tone variable */
ubyte calling_tone;        /* enables/disables V25 calling tone */

ubyte out_put_col;         /* Selects the language to be used of result codes */

ubyte self_test_char_rx;   /* Flags if characters were received during self test */

struct configure acu_cfg;
ubyte connect_type;        /* Parameter passed to modem_connect indicating
                              the type of connection to attempt   */
ubyte fax_class;              /* Class of Fax selected   */
ubyte fax_adaptive_answer;    /* Value of +FAA command        */
ubyte fax_port_rate;          /* fixed dte port rate while fax_class == 2.0 */
ubyte fax_packet_protocol;    /* packet protocol enabled/disabled via +FPP */
ubyte fax_connected;          /* Indicates an active fax connection */
ubyte fax_command_hangup;     /* Indicates fax hangup with an ATH/ATZ command */
ubyte terminate_packet_protocol;/* turn off packet protocol at end of response*/
ubyte dont_echo;              /* Prevent echoing of AT commands */
ubyte alt_fax_flow_control;   /* Flow control type for a fax connection set by \Q and &K   */
ubyte dont_autobaud;          /* Prevents autobaud from being turned on during */
ubyte new_dte_baud;           /* Temporary variable for the dte baud rate */
ubyte fax_flow_control;       /* Flow control type for a fax connection +FLO   */

ubyte v32bis_enable;          /* Reflects the offline value of s110   */
ubyte andK;                   /* value of &K   */
ubyte acu_32bit_crc_enab;     /* Enables/disables V.42 32-bit CRC     */
ubyte acu_mnp10_enab;         /* Indicates if MNP 10 operation is selected   */
ubyte acu_cellular_enab;      /* Indicates if MNP 10 cellular operation is selected   */
ubyte acu_fallforward_enab;   /* Indicates if MNP 10 fallforward operation is selected   */
ubyte acu_fallback_enab;      /* Indicates if MNP 10 fallback operation is selected   */
uword acu_wait_for_cd_time;   /* Value of s7 in 10 msecs   */
uword acu_cd_recov_time;      /* Value of s9 in 10 msecs   */
uword acu_cd_loss_time;       /* Value of s10 in 10 msecs    */
uword acu_mnp10_rates;        /* Indicates MNP 10 possible line rates */
ubyte v42_running_mnp10;      /* Indicates if MNP 10 is currently running   */
ubyte prnM;                   /* Indicates value of the )M command   */
ubyte hyK;                    /* Indicates value of the -K command   */
ubyte hyQ;                    /* Indicates value of the -Q command   */
ubyte link_negot;             /* Indicates the initial connect speed *H command   */
ubyte dial_J;                 /* Indicates value of the J dial modifier      */
ubyte dial_K;                 /* Indicates value of the K dial modifier   */
ubyte quM;                    /* Indicates value of the "M command */

ubyte voice_port_rate;        /* Value of the forced baud rate by the voice commands */
ubyte voice_inactivity_timer_on;
ubyte voice_caller_id;        /* Value of the caller ID command */
ubyte hook_control;           /* Indicates the operation to be performed when
                                   the selected connection fails */
ubyte voice_cmd_set;          /* Type of voice command set selected */
ubyte *message_ptr;           /* Pointer used to return information to the terminal
                                   from another module */
ubyte voice_flow_control;
ubyte acu_cntrld_hangup;      /* If the hangup is controled by another module */
ubyte acu_hangup_line;        /* go on hook, or not during hangup phase */
ubyte voice_dist_ring_active;
ubyte voice_dist_ring_time;
ubyte voice_dist_ring_intvl;
ubyte voice_ring_timer;
ubyte voice_dist_ring_sent;
ubyte voice_ctl_tone_on;
ubyte voice_ctl_tone_off;
ubyte voice_dist_ctl_active;
ubyte voice_dist_ctl_intvl;
ubyte voice_dist_ctl_sent;
ubyte voice_ring_rpt_timer;

ubyte s[NUM_S_REGS];
struct SREG14 sr14,*sr14_ptr;
struct SREG16 sr16,*sr16_ptr;
struct SREG21 sr21,*sr21_ptr;
struct SREG22 sr22,*sr22_ptr;
struct SREG23 sr23,*sr23_ptr;
struct SREG27 sr27,*sr27_ptr;
struct SREG114 sr114,*sr114_ptr;
struct SREG116 sr116,*sr116_ptr;

ubyte escape_received;

ubyte number_of_pulses;          /* Pulse count for Pulse dialing */
ubyte dial_flag;                 /* Pulse/Tone dialing misc. flag */
ubyte test_hangup_msg;           /* Special message for test modes */

ubyte dsvd_enabled;
ubyte av8o,av8a,av8b,av8cf;

ubyte av8lapm_en;

ubyte aorig_rqst;
ubyte aorig_fbk;
ubyte aans_fbk;
ubyte atrans_idle;
ubyte aframed_idle;
ubyte aframed_un_ov;
ubyte ahd_auto;
ubyte acrc_type;
ubyte anrzi_en;
ubyte asyn1;
ubyte asyn2;

uword itf_buffer_size;
uword itf_buffer_count;
uword itf_xoff_val;
uword itf_xon_val;
uword itf_xoff_min;
uword itf_xoff_max;
uword itf_xon_min;
uword itf_xon_max;
ubyte ext_DspMemErrorFlag; /* for 56k, jlin 01/20/97 */

#if CUSTOMER35 == TRUE
long CheckDigLineTimer;
#endif
