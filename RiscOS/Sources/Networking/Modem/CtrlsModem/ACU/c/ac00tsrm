/****************************************************************************
/
/	Copyright 1988,1989,1990,1991,1992,1993,1994. All Rights Reserved by:
/	    RSA
/	    7701 Six Forks Road
/	    Suite 120
/	    Raleigh, NC  27615
/	    (919) 846-7171
/
/
/	This document contains material confidential to RSA its contents must
/	not be revealed, used or disclosed to anyone or company with out
/	written permission by RSA.  The information contained herein is solely
/	for the use of RSA.
/
/	File:		ac00tsrm.c
/
/	Module Version: ACU 4.02
/
/	Function:	This file contains action routines for the AT command
/			remote loop test mode
/
/	Product:	ACU core code
/
/	History:	ac00tsrm.c v3.90
/			ac00tsrm.c v3.91
/
/		Created: 9/18/91
/			3/10/92
/
/		---------------------------------------------------------
/		-			Modifications			-
/		---------------------------------------------------------
/
/		Author & Date:	RSA
/		Description:
/		Reason:
/
*****************************************************************************/
#include "sys_def.h"

#include "acu_def.h"
#include "acu_mem.h"
#include "ds_def.h"
#include "ds_mem.h"
#include "acu_pro.h"
#include "mt_pro.h"
#include "edf.v42"
#include "edf.dte"
#include "edf.dce_line"

void test_rmt_at_bg(void);
void proc_test_rmt_at(void);
void start_at_test(void);
void rmt_test_hangup(void);



/*******************************************************************************
/
/	Routine: start_at_test
/
/	Author : RSA
/
/	Creation Date: 07/16/91
/
/	Description : This Routine will change the state to TEST.
/
/	Input Parameters: None
/
/	Output Parameters: none
/
/	Global Variables Changed:  st_test.type, st_test.state
/
/	Users: st_idle_at[],
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date:	RSA
/	Description:
/	Reason:
/
*******************************************************************************/
void start_at_test(void)
{
    /* Initialize TEST sub-state machine */
    st_test.state = TEST_INIT;

    /* If the test was intiated by the remote modem */
    if (acu_event->parm == RMT_TEST)
    {
        st_test.type = RMT_AT_TEST;

        /*modem_dte_test(ON);*/ /* ramn 9/20/96 */      /* Circuit 142		*/
        /*modem_b2l_led(ON);*/ /* ramn 9/20/96 */ /* Led b2l			*/
    }
    /* Else the test was intiated locally (acu_event->parm == LOCAL_TEST) */
    else
    {
        st_test.type = AT_TEST;

        /*	Need to save the IDLE type so it can be restored when the test
            is terminated */
        previous_idle_type = st_idle.type;
    }

/* start change keh 3/22/95 => always save idle type */
    previous_idle_type = st_idle.type;
/* end change keh 3/22/95 => always save idle type */
}


/******************************************************************************
/
/	Routine: test_rmt_at_bg
/
/	Author : RSA
/
/	Creation Date: 08/22/91
/
/	Description : This Routine will process the background functions during
/		      a LDL requested by the remote modem.
/
/	Input Parameters: None
/
/	Output Parameters: none
/
/	Global Variables Changed:  None
/
/	Users:	test_bg
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date:	RSA
/	Description:
/	Reason:
/
*******************************************************************************/
void test_rmt_at_bg(void)
{
    flash_mr();

    /* Check for end of Remote test */
/* start change keh 3/23/95 => test for idle and drop states */
/*    if (modem_status == CONNECTED_STATUS) */
		if ((modem_status != REMOTE_TEST_STATUS) ||
           (modem_status != RETRAINING_STATUS))
/* end change keh 3/23/95 => test for idle and drop states */
    {
        /* Clear data path of any test characters */
        line_from_clear();
        dte_to_clear();

        /* Update LEDs */
        /*modem_mr_led(ON);*/ /* ramn 9/20/96 */

#if 0	/* ramn 9/20/96 */
		  modem_dte_test(OFF);    /* Circuit 142 */
        modem_b2l_led(OFF);     /* Led b2l */
#endif

        /* What state before the remote test? */
        if (previous_acu_state == S_IDLE)
            build_event(E_IDLE,UNUSED);
        else if (previous_acu_state == S_PARSE)
            build_event(E_PARSE,UNUSED);
        else
            build_event(E_CONNECT,UNUSED);
    }
}


/*******************************************************************************
/
/	Routine: proc_test_rmt_at
/
/	Author : RSA
/
/	Creation Date: 08/22/91
/
/	Description : This Routine will process the state table for the
/		      LDL requested by the remote modem.
/
/	Input Parameters: None
/
/	Output Parameters: none
/
/	Global Variables Changed:  None
/
/	Users:	proc_test
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date:	RSA
/	Description:
/	Reason:
/
*******************************************************************************/
void proc_test_rmt_at(void)
{
    acu_state = st_test_rmt_at[acu_event->type].new_state;
    acu_proc = st_test_rmt_at[acu_event->type].fnc_ptr;
}

/*******************************************************************************
/
/	ROUTINE: rmt_test_hangup
/
/	Author : RSA
/
/	Creation Date: 10/3/91
/
/	Description : This routine will process a hangup event when the
/		      modem is in the Remote Test State.
/
/	PARAMETERS IN: None
/
/	PARAMETERS OUT: none
/
/	Global Variables Changed:  None
/
/	Users:	st_test_rmt_at[]
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date: RSA
/	Description:
/	Reason:
/
*******************************************************************************/
void rmt_test_hangup(void)
{
    /* Configure HANGUP state variables */
    st_hangup.type = st_online.type;
/* start change 1/16/94 keh => no stalled loops for OS support */
    st_hangup.state = HANGUP_INIT;
/* end change 1/16/94 keh => no stalled loops for OS support */

    hangup_result_type = (ubyte)acu_event->parm;

#if 0 /* ramn 9/20/96 */
    modem_dte_test(OFF);    /* Circuit 142 */
    modem_b2l_led(OFF);     /* Led b2l	   */
#endif
}

