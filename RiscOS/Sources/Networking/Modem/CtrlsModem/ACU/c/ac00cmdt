/****************************************************************************
/
/   Copyright 1988,1989,1990,1991,1992,1993,1994.
/   All Rights Reserved by:
/       RSA
/       7701 Six Forks Road
/       Suite 120
/       Raleigh, NC  27615
/       (919) 846-7171
/
/   This document contains material confidential to RSA its contents must
/   not be revealed, used or disclosed to anyone or company with out
/   written permission by RSA.  The information contained herein is solely
/   for the use of RSA.
/
/   File:           ac00cmdt.c
/
/   Module Version: ACU 4.??
/
/   Function:       This file contains the action AT Command Parse tables
/                   for the following AT command sets:
/                       BASIC (ACU operation)
/                       DATA  (V.42,MNP,...)
/
/   Product:        ACU core code
/
/   History:
/
/       Created:    2/9/95
/
/       ---------------------------------------------------------
/       -                   Modifications                       -
/       ---------------------------------------------------------
/
/       Author & Date:  RSA
/       Description:
/       Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_pro.h"
#include "par_def.h"
#include "par_pro.h"

/* Local prototypes */
void set_acu_at_cmds(ubyte);
void set_acu_data_cmds(ubyte);

/************************************************************************
/
/   Parser Command Table for General ACU Commands
/
************************************************************************/
PARSE_CMD_TABLE_STRUCT acu_commands []=
{
    (ubyte *)"A",  at_A,     NO_PARAM,     NO_FLAGS, /* Answer */
    (ubyte *)"D",  at_D,     DIAL_STRING,  NO_FLAGS, /* Dial comand */
    (ubyte *)"E",  at_E,     BYTE_NUMERIC, NO_FLAGS, /* Offline command echo */
    (ubyte *)"H",  at_H,     BYTE_NUMERIC, NO_FLAGS, /* Hook relay */
    (ubyte *)"I",  at_I,     BYTE_NUMERIC, NO_FLAGS, /* Identification */
    (ubyte *)"L",  at_L,     BYTE_NUMERIC, NO_FLAGS, /* Speaker volume */
    (ubyte *)"M",  at_M,     BYTE_NUMERIC, NO_FLAGS, /* Speaker control */
    (ubyte *)"P",  at_P,     NO_PARAM,     NO_FLAGS, /* Pulse dial */
    (ubyte *)"Q",  at_Q,     BYTE_NUMERIC, NO_FLAGS, /* Result code display dial */
    (ubyte *)"S",  at_S,     BYTE_NUMERIC, NO_FLAGS, /* S-Register selection */
    (ubyte *)"=",  at_equal, BYTE_NUMERIC, NO_FLAGS, /* S-Register write */
    (ubyte *)"?",  at_quest, NO_PARAM,     NO_FLAGS, /* S-Register read */
    (ubyte *)"T",  at_T,     NO_PARAM,     NO_FLAGS, /* Tone dial */
    (ubyte *)"V",  at_V,     BYTE_NUMERIC, NO_FLAGS, /* Verbose result code */
    (ubyte *)"W",  at_W,     BYTE_NUMERIC, NO_FLAGS, /* Extended result codes */
    (ubyte *)"Z",  at_Z,     BYTE_NUMERIC, NO_FLAGS, /* Recall stored profile */
    (ubyte *)",",  at_comma, NO_PARAM,     NO_FLAGS, /* Command line delay */
    (ubyte *)"&F", and_F,    BYTE_NUMERIC, NO_FLAGS, /* Load Factory defaults */
    (ubyte *)"&W", and_W,    BYTE_NUMERIC, NO_FLAGS, /* Store Active profile */
    (ubyte *)"&Y", and_Y,    BYTE_NUMERIC, NO_FLAGS, /* Power up profile */
#if 0		/* ramn 9/11/96 */
    (ubyte *)"!EE=", bang_EE_e, COMPOUND_BYTE_HEX, NO_FLAGS,
    (ubyte *)"!EE?", bang_EE_q, COMPOUND_BYTE_HEX, NO_FLAGS,
#endif

/*3/08/96 shujin, for pnp */
    (ubyte *) "!P?",  bang_P_q,  NO_PARAM, SEMICOL_END,
    (ubyte *) "!P=?", bang_P_eq, NO_PARAM, SEMICOL_END,
    (ubyte *) "!P=",  bang_P_e,  COMPOUND_BYTE, SEMICOL_END,

#if 0		/* ramn 9/11/96 */
/* shujin 3/23/96 */
    (ubyte *)"!E2=?", bang_E2_eq, NO_PARAM, NO_FLAGS,
    (ubyte *)"!E2=", bang_E2_e, COMPOUND_BYTE, NO_FLAGS,
#endif

/* JT03196 , for comram packet at!c direct access*/
    (ubyte *) "!C=",  bang_C_e,  COMPOUND_BYTE_HEX, SEMICOL_END,
/* SLei added */
    (ubyte *) "*NC",  ast_NC,  BYTE_NUMERIC, SEMICOL_END,

    END_OF_PARSE_TABLE
};

/************************************************************************
/
/   Parser Command Table for AT DATA mode Commands
/
************************************************************************/
PARSE_CMD_TABLE_STRUCT data_commands[] =
{
    /* V.24 */
    (ubyte *)"&C",   and_C,    BYTE_NUMERIC, NO_FLAGS, /* CD Option */
    (ubyte *)"&D",   and_D,    BYTE_NUMERIC, NO_FLAGS, /* DTR Option */
    (ubyte *)"&M",   and_M,    BYTE_NUMERIC, NO_FLAGS, /* Comm mode select */
    (ubyte *)"&Q",   and_Q,    BYTE_NUMERIC, NO_FLAGS, /* Comm mode Option*/
    (ubyte *)"&R",   and_R,    BYTE_NUMERIC, NO_FLAGS, /* RTS/CTS Option */
    (ubyte *)"&S",   and_S,    BYTE_NUMERIC, NO_FLAGS, /* DSR Option */

    /* ACU data commands */
    (ubyte *)"F",   at_F,     BYTE_NUMERIC, NO_FLAGS, /* Online command echo */
    (ubyte *)"O",   at_O,     BYTE_NUMERIC, NO_FLAGS, /* Go online */
    (ubyte *)"Q",   at_Q,     BYTE_NUMERIC, NO_FLAGS, /* Result code display dial */
    (ubyte *)"W",   at_W,     BYTE_NUMERIC, NO_FLAGS, /* Extended result codes */
    (ubyte *)"X",   at_X,     BYTE_NUMERIC, NO_FLAGS, /* Call progress result codes */
    (ubyte *)"Y",   at_Y,     BYTE_NUMERIC, NO_FLAGS, /* Long space disconnect */
    (ubyte *)"&J",  and_J,    BYTE_NUMERIC, NO_FLAGS, /* Aux Relay ctrl */
    (ubyte *)"&P",  and_P,    BYTE_NUMERIC, NO_FLAGS, /* Pulse dial ratio */
    (ubyte *)"&V",  and_V,    BYTE_NUMERIC, NO_FLAGS, /* Settings display */
    (ubyte *)"&Z",  and_Z,    CONST_STRING, NO_FLAGS, /* Store telephone # */
    (ubyte *)"\\I", sl_I,     BYTE_NUMERIC, NO_FLAGS, /* Interface protocol */
    (ubyte *)"\\G", sl_G,     BYTE_NUMERIC, NO_FLAGS, /* DCE flow cntrl */
    (ubyte *)"\\J", sl_J,     BYTE_NUMERIC, NO_FLAGS, /* DTE to DCE rate adjust */
    (ubyte *)"&K",  and_K,    BYTE_NUMERIC, NO_FLAGS, /* Flow control (Hayes) */
    (ubyte *)"\\Q", sl_Q,     BYTE_NUMERIC, NO_FLAGS, /* Flow control (Microcom) */
    (ubyte *)"\\V", sl_V,     BYTE_NUMERIC, NO_FLAGS, /* MNP result codes */
    (ubyte *)"\\X", sl_X,     BYTE_NUMERIC, NO_FLAGS, /* Pass-through flow cntrl */
    (ubyte *)"-C",  hy_C,     BYTE_NUMERIC, NO_FLAGS, /* Data calling tone */
    (ubyte *)"%T",  per_T,    BYTE_NUMERIC, NO_FLAGS, /* 400hz hangup tone */

/*mrm22196*/

    (ubyte *)"+MS=", plus_ms,  DIAL_STRING, NO_FLAGS,/*setting the rate,mode and speed*/
    (ubyte *)"+MS?", plus_ms_q,NO_PARAM, SEMICOL_END,

    /* Hayes Data Test Loop Commands */
    /* Must test the special (non numeric) cases first */
    (ubyte *)"&T1A", and_T1A, NO_PARAM,     NO_FLAGS, /* ALB answer mode */
    (ubyte *)"&T1O", and_T1O, NO_PARAM,     NO_FLAGS, /* ALB orig mode */
    (ubyte *)"&T8A", and_T8A, NO_PARAM,     NO_FLAGS, /* ALB answer selftest */
    (ubyte *)"&T8O", and_T8O, NO_PARAM,     NO_FLAGS, /* ALB orig selftest */
    (ubyte *)"&T",   and_T,   BYTE_NUMERIC, NO_FLAGS, /* All other test cases */

    /* Modulation */
    (ubyte *)"B",   at_B,     BYTE_NUMERIC, NO_FLAGS, /* Communication Standard */
    (ubyte *)"C",   at_C,     BYTE_NUMERIC, NO_FLAGS, /* Carrier control Standard */
    (ubyte *)"N",   at_N,     BYTE_NUMERIC, NO_FLAGS, /* Modulation Automode */
    (ubyte *)"%E",  per_E,    BYTE_NUMERIC, NO_FLAGS, /* Autoretrain */
    (ubyte *)"%G",  per_G,    BYTE_NUMERIC, NO_FLAGS, /* Auto speed change */
    (ubyte *)"&B",  and_B,    BYTE_NUMERIC, NO_FLAGS, /* V.32 auto retrain */
    (ubyte *)"&G",  and_G,    BYTE_NUMERIC, NO_FLAGS, /* V.22 guard tone */
    (ubyte *)"&U",  and_U,    BYTE_NUMERIC, NO_FLAGS, /* Trellis */
    (ubyte *)"&X",  and_X,    BYTE_NUMERIC, NO_FLAGS, /* Clock source */

    /* V.42 Commands */
    (ubyte *)"-V",  hy_V,     NO_PARAM,     NO_FLAGS, /* Data Firmware Version */
    (ubyte *)"\\A", sl_A,     BYTE_NUMERIC, NO_FLAGS, /* Data block size */
    (ubyte *)"\\B", sl_B,     BYTE_NUMERIC, NO_FLAGS, /* Send Break */
    (ubyte *)"\\K", sl_K,     BYTE_NUMERIC, NO_FLAGS, /* Break cntrl */
    (ubyte *)"\\N", sl_N,     BYTE_NUMERIC, NO_FLAGS, /* V.42 mode */
/* ramn 6/27/96 */
    (ubyte *)"\\T=", sl_T_eq,     BYTE_NUMERIC, NO_FLAGS, /* Data Link timer */

    (ubyte *)"\\T", sl_T,     BYTE_NUMERIC, NO_FLAGS, /* Data Link timer */
    (ubyte *)"-J",  hy_J,     BYTE_NUMERIC, NO_FLAGS, /* Send ODP */

    /* MNP Commands */
    (ubyte *)"\\C", sl_C,     BYTE_NUMERIC, NO_FLAGS, /* Autoreliable mode */
    (ubyte *)"\\L", sl_L,     BYTE_NUMERIC, NO_FLAGS, /* MNP format */
    (ubyte *)"\\O", sl_O,     NO_PARAM,     NO_FLAGS, /* Originate MNP Link */
    (ubyte *)"\\U", sl_U,     NO_PARAM,     NO_FLAGS, /* Answer MNP link */
    (ubyte *)"\\Y", sl_Y,     NO_PARAM,     NO_FLAGS, /* Switch to MNP mode */
    (ubyte *)"\\Z", sl_Z,     NO_PARAM,     NO_FLAGS, /* Switch to non MNP mode */
    (ubyte *)"%A",  per_A,    BYTE_NUMERIC, NO_FLAGS, /* Autoreliable Char */
    (ubyte *)"%C",  per_C,    BYTE_NUMERIC, NO_FLAGS, /* MNP5 enabled */

    /* V.42bis Commands */
    (ubyte *)"\"H", qu_H,     BYTE_NUMERIC, NO_FLAGS, /* V.42bis enalbed */
    (ubyte *)"\"N", qu_N,     BYTE_NUMERIC, NO_FLAGS, /* dictionary size */
    (ubyte *)"\"O", qu_O,     BYTE_NUMERIC, NO_FLAGS, /* string lenght */

    /* MNP10 Commands */
    (ubyte *)"\"M", qu_M,     BYTE_NUMERIC, NO_FLAGS, /* MNP10 enabled */
    (ubyte *)"*H",  ast_H,    BYTE_NUMERIC, NO_FLAGS, /* link speed */
    (ubyte *)")M",  prn_M,    BYTE_NUMERIC, NO_FLAGS, /* MNP10 cellular */
    (ubyte *)"-Q",  hy_Q,     BYTE_NUMERIC, NO_FLAGS, /* Lowspeed fallback enable */
    (ubyte *)"-B",  hy_B,     NO_PARAM,     NO_FLAGS, /* force downshift */
    (ubyte *)"-U",  hy_U,     NO_PARAM,     NO_FLAGS, /* attempt upshift */
    (ubyte *)"-K",  hy_K,     BYTE_NUMERIC, NO_FLAGS, /* MNP perfered detection */
#ifndef __riscos
    (ubyte *)"*WP=",  str_WP,     BYTE_NUMERIC, NO_FLAGS, /* program mem wait state */
    (ubyte *)"*WD=",  str_WD,     BYTE_NUMERIC, NO_FLAGS, /* data mem wait state */
#endif
/*mrm82796*/
    (ubyte *)"*FID=?",  str_FID, NO_PARAM, NO_FLAGS, /* dsp not resp. id*/

    END_OF_PARSE_TABLE
};



/*******************************************************************************
/
/    Routine: set_acu_at_cmds
/
/    Author : RSA
/
/    Creation Date: 04/13/95
/
/    Description : This Routine is called to program the parser to parse basic
/                  ACU at commands (speaker, hook...)
/
/    Input Parameters: OFF (0) or ON (otherwise)
/
/    Output Parameters: none
/
/    Global Variables Changed: None
/
/    Users:    acu_init
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/       Author & Date: RSA
/       Description:
/       Reason:
/
*******************************************************************************/
void set_acu_at_cmds(ubyte state)
{
   ubyte temp;

   if (state)
	  temp = ENABLE_TABLE;
   else
	  temp = DISABLE_TABLE;

   at_parser_tables(temp,acu_commands);
}


/*******************************************************************************
/
/    Routine: set_acu_data_cmds
/
/    Author : RSA
/
/    Creation Date: 04/13/95
/
/    Description : This Routine is called to program the AT Command Parser to
/                  parse DATA modem commands.
/
/    Input Parameters: OFF (0) or ON (otherwise)
/
/    Output Parameters: none
/
/    Global Variables Changed: None
/
/    Users:    acu_init
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/       Author & Date: RSA
/       Description:
/       Reason:
/
*******************************************************************************/
void set_acu_data_cmds(ubyte state)
{
   ubyte temp;

   if (state)
	  temp = ENABLE_TABLE;
   else
	  temp = DISABLE_TABLE;

   at_parser_tables(temp,data_commands);
}


#if TIES_HAYES_ESCAPE                    /* ciy021596 */

/************************************************************************
/
/   Parser Command Table for TIES escape ACU Commands
/
************************************************************************/
PARSE_CMD_TABLE_STRUCT ties_esc_data_commands []=
{
                                /*   (ubyte *)"A",  at_A,     NO_PARAM,     NO_FLAGS, */ /* Answer */
                                /*   (ubyte *)"D",  at_D,     DIAL_STRING,  NO_FLAGS, */ /* Dial comand */
    (ubyte *)"E",  at_E,     BYTE_NUMERIC, NO_FLAGS, /* Offline command echo */
    (ubyte *)"H",  at_H,     BYTE_NUMERIC, NO_FLAGS, /* Hook relay */
                                /*   (ubyte *)"I",  at_I,     BYTE_NUMERIC, NO_FLAGS, */ /* Identification */
                                /*   (ubyte *)"L",  at_L,     BYTE_NUMERIC, NO_FLAGS, */ /* Speaker volume */
    (ubyte *)"M",  at_M,     BYTE_NUMERIC, NO_FLAGS, /* Speaker control */
                                /*   (ubyte *)"P",  at_P,     NO_PARAM,     NO_FLAGS, */ /* Pulse dial */
    (ubyte *)"Q",  at_Q,     BYTE_NUMERIC, NO_FLAGS, /* Result code display dial */
    (ubyte *)"S",  at_S,     BYTE_NUMERIC, NO_FLAGS, /* S-Register selection */
    (ubyte *)"=",  at_equal, BYTE_NUMERIC, NO_FLAGS, /* S-Register write */
    (ubyte *)"?",  at_quest, NO_PARAM,     NO_FLAGS, /* S-Register read */
                                /*   (ubyte *)"T",  at_T,     NO_PARAM,     NO_FLAGS, */ /* Tone dial */
    (ubyte *)"V",  at_V,     BYTE_NUMERIC, NO_FLAGS, /* Verbose result code */
    (ubyte *)"W",  at_W,     BYTE_NUMERIC, NO_FLAGS, /* Extended result codes */
                                /*   (ubyte *)"Z",  at_Z,     BYTE_NUMERIC, NO_FLAGS, */ /* Recall stored profile */
                                /*   (ubyte *)",",  at_comma, NO_PARAM,     NO_FLAGS, */ /* Command line delay */
                                /*   (ubyte *)"&F", and_F,    BYTE_NUMERIC, NO_FLAGS, */ /* Load Factory defaults */
    (ubyte *)"&W", and_W,    BYTE_NUMERIC, NO_FLAGS, /* Store Active profile */
    (ubyte *)"&Y", and_Y,    BYTE_NUMERIC, NO_FLAGS, /* Power up profile */
                                /*   (ubyte *)"!EE=", bang_EE_e, COMPOUND_BYTE_HEX, NO_FLAGS,  */
                                /*   (ubyte *)"!EE?", bang_EE_q, COMPOUND_BYTE_HEX, NO_FLAGS,  */

    (ubyte *)"&C",   and_C,    BYTE_NUMERIC, NO_FLAGS, /* CD Option */
    (ubyte *)"&D",   and_D,    BYTE_NUMERIC, NO_FLAGS, /* DTR Option */
    (ubyte *)"&M",   and_M,    BYTE_NUMERIC, NO_FLAGS, /* Comm mode select */
    (ubyte *)"&Q",   and_Q,    BYTE_NUMERIC, NO_FLAGS, /* Comm mode Option*/
    (ubyte *)"&R",   and_R,    BYTE_NUMERIC, NO_FLAGS, /* RTS/CTS Option */
    (ubyte *)"&S",   and_S,    BYTE_NUMERIC, NO_FLAGS, /* DSR Option */

    /* ACU data commands */
                                /*   (ubyte *)"F",   at_F,     BYTE_NUMERIC, NO_FLAGS, */ /* Online command echo */
                                /*   (ubyte *)"O",   at_O,     BYTE_NUMERIC, NO_FLAGS, */ /* Go online */
    (ubyte *)"X",   at_X,     BYTE_NUMERIC, NO_FLAGS, /* Call progress result codes */
                                /*   (ubyte *)"Y",   at_Y,     BYTE_NUMERIC, NO_FLAGS, */ /* Long space disconnect */
    (ubyte *)"&J",  and_J,    BYTE_NUMERIC, NO_FLAGS, /* Aux Relay ctrl */
    (ubyte *)"&P",  and_P,    BYTE_NUMERIC, NO_FLAGS, /* Pulse dial ratio */
    (ubyte *)"&V",  and_V,    BYTE_NUMERIC, NO_FLAGS, /* Settings display */
    (ubyte *)"&Z",  and_Z,    CONST_STRING, NO_FLAGS, /* Store telephone # */
                                /*   (ubyte *)"\\I", sl_I,     BYTE_NUMERIC, NO_FLAGS, */ /* Interface protocol */
                                /*   (ubyte *)"\\G", sl_G,     BYTE_NUMERIC, NO_FLAGS, */ /* DCE flow cntrl */
                                /*   (ubyte *)"\\J", sl_J,     BYTE_NUMERIC, NO_FLAGS, */ /* DTE to DCE rate adjust */
    (ubyte *)"&K",  and_K,    BYTE_NUMERIC, NO_FLAGS, /* Flow control (Hayes) */
                                /*   (ubyte *)"\\Q", sl_Q,     BYTE_NUMERIC, NO_FLAGS, */ /* Flow control (Microcom) */
                                /*   (ubyte *)"\\V", sl_V,     BYTE_NUMERIC, NO_FLAGS, */ /* MNP result codes */
                                /*   (ubyte *)"\\X", sl_X,     BYTE_NUMERIC, NO_FLAGS, */ /* Pass-through flow cntrl */
                                /*   (ubyte *)"-C",  hy_C,     BYTE_NUMERIC, NO_FLAGS, */ /* Data calling tone */
                                /*   (ubyte *)"%T",  per_T,    BYTE_NUMERIC, NO_FLAGS, */ /* 400hz hangup tone */

    /* Hayes Data Test Loop Commands */
    /* Must test the special (non numeric) cases first */
                                /*   (ubyte *)"&T1A", and_T1A, NO_PARAM,     NO_FLAGS, */ /* ALB answer mode */
                                /*   (ubyte *)"&T1O", and_T1O, NO_PARAM,     NO_FLAGS, */ /* ALB orig mode */
                                /*   (ubyte *)"&T8A", and_T8A, NO_PARAM,     NO_FLAGS, */ /* ALB answer selftest */
                                /*   (ubyte *)"&T8O", and_T8O, NO_PARAM,     NO_FLAGS, */ /* ALB orig selftest */
                                /*   (ubyte *)"&T",   and_T,   BYTE_NUMERIC, NO_FLAGS, */ /* All other test cases */

    /* Modulation */
                                /*   (ubyte *)"B",   at_B,     BYTE_NUMERIC, NO_FLAGS, */ /* Communication Standard */
                                /*   (ubyte *)"C",   at_C,     BYTE_NUMERIC, NO_FLAGS, */ /* Carrier control Standard */
                                /*   (ubyte *)"N",   at_N,     BYTE_NUMERIC, NO_FLAGS, */ /* Modulation Automode */
                                /*   (ubyte *)"%E",  per_E,    BYTE_NUMERIC, NO_FLAGS, */ /* Autoretrain */
                                /*   (ubyte *)"%G",  per_G,    BYTE_NUMERIC, NO_FLAGS, */ /* Auto speed change */
    (ubyte *)"&B",  and_B,    BYTE_NUMERIC, NO_FLAGS, /* V.32 auto retrain */
    (ubyte *)"&G",  and_G,    BYTE_NUMERIC, NO_FLAGS, /* V.22 guard tone */
    (ubyte *)"&U",  and_U,    BYTE_NUMERIC, NO_FLAGS, /* Trellis */
    (ubyte *)"&X",  and_X,    BYTE_NUMERIC, NO_FLAGS, /* Clock source */

    /* V.42 Commands */
                                /*   (ubyte *)"-V",  hy_V,     NO_PARAM,     NO_FLAGS, */ /* Data Firmware Version */
                                /*   (ubyte *)"\\A", sl_A,     BYTE_NUMERIC, NO_FLAGS, */ /* Data block size */
                                /*   (ubyte *)"\\B", sl_B,     BYTE_NUMERIC, NO_FLAGS, */ /* Send Break */
                                /*   (ubyte *)"\\K", sl_K,     BYTE_NUMERIC, NO_FLAGS, */ /* Break cntrl */
                                /*   (ubyte *)"\\N", sl_N,     BYTE_NUMERIC, NO_FLAGS, */ /* V.42 mode */
                                /*   (ubyte *)"\\T", sl_T,     BYTE_NUMERIC, NO_FLAGS, */ /* Data Link timer */
                                /*   (ubyte *)"-J",  hy_J,     BYTE_NUMERIC, NO_FLAGS, */ /* Send ODP */

    /* MNP Commands */
                                /*   (ubyte *)"\\C", sl_C,     BYTE_NUMERIC, NO_FLAGS, */ /* Autoreliable mode */
                                /*   (ubyte *)"\\L", sl_L,     BYTE_NUMERIC, NO_FLAGS, */ /* MNP format */
                                /*   (ubyte *)"\\O", sl_O,     NO_PARAM,     NO_FLAGS, */ /* Originate MNP Link */
                                /*   (ubyte *)"\\U", sl_U,     NO_PARAM,     NO_FLAGS, */ /* Answer MNP link */
                                /*   (ubyte *)"\\Y", sl_Y,     NO_PARAM,     NO_FLAGS, */ /* Switch to MNP mode */
                                /*   (ubyte *)"\\Z", sl_Z,     NO_PARAM,     NO_FLAGS, */ /* Switch to non MNP mode */
                                /*   (ubyte *)"%A",  per_A,    BYTE_NUMERIC, NO_FLAGS, */ /* Autoreliable Char */
                                /*   (ubyte *)"%C",  per_C,    BYTE_NUMERIC, NO_FLAGS, */ /* MNP5 enabled */

    /* V.42bis Commands */
                                /*   (ubyte *)"\"H", qu_H,     BYTE_NUMERIC, NO_FLAGS, */ /* V.42bis enalbed */
                                /*   (ubyte *)"\"N", qu_N,     BYTE_NUMERIC, NO_FLAGS, */ /* dictionary size */
                                /*   (ubyte *)"\"O", qu_O,     BYTE_NUMERIC, NO_FLAGS, */ /* string lenght */

    /* MNP10 Commands */
                                /*   (ubyte *)"\"M", qu_M,     BYTE_NUMERIC, NO_FLAGS, */ /* MNP10 enabled */
                                /*   (ubyte *)"*H",  ast_H,    BYTE_NUMERIC, NO_FLAGS, */ /* link speed */
                                /*   (ubyte *)")M",  prn_M,    BYTE_NUMERIC, NO_FLAGS, */ /* MNP10 cellular */
                                /*   (ubyte *)"-Q",  hy_Q,     BYTE_NUMERIC, NO_FLAGS, */ /* Lowspeed fallback enable */
                                /*   (ubyte *)"-B",  hy_B,     NO_PARAM,     NO_FLAGS, */ /* force downshift */
                                /*   (ubyte *)"-U",  hy_U,     NO_PARAM,     NO_FLAGS, */ /* attempt upshift */
                                /*   (ubyte *)"-K",  hy_K,     BYTE_NUMERIC, NO_FLAGS, */ /* MNP perfered detection */

    END_OF_PARSE_TABLE
};

/*******************************************************************************
/
/    Routine: set_acu_ties_esc_data_cmds
/
/    Author : Cirrus Logic
/
/    Creation Date: 04/13/95
/
/    Description : This Routine is called to program the ties esc AT Command Parser to
/                  parse ties esc DATA modem commands.
/
/    Input Parameters: OFF (0) or ON (otherwise)
/
/    Output Parameters: none
/
/    Global Variables Changed: None
/
/    Users:    dte_timer
/
/    -------------------------------------------------------------
/    -              Modifications                -
/    -------------------------------------------------------------
/
/       Author & Date:
/       Description:
/       Reason:
/
*******************************************************************************/
void set_acu_ties_esc_data_cmds(ubyte);
void set_acu_ties_esc_data_cmds(ubyte state)
{
   ubyte temp;

   if (state)
      temp = ENABLE_TABLE;
   else
      temp = DISABLE_TABLE;

   at_parser_tables(temp,ties_esc_data_commands);
}



#endif                                  /* ciy021596 */





