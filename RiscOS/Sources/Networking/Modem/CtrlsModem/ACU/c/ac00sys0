/****************************************************************************
/
/     Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ac00sys0.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains the system interface to the V.42
/                       code.
/
/     Product:          ACU core code
/
/     History:          ac00sys.c v3.90
/                       ac00sys.c v3.91
/                       ac00sys.c v3.94
/                       ac00sys.c v3.95
/
/        Created:       11/16/91
/                       12/04/91
/                       1/21/92
/                       1/12/93
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"
#include "mt_pro.h"
#include "edf.v42"
#include "edf.dce_line"
#include "edf.dte"
#include "acu_epro.h"       /* ACU ETC Driver interface routines */
#include "v80_pro.h"

void system_init(void);
void system_info(ubyte *);
void system_start(ubyte start_code);
void system_idle(void);
void system_bg(void);
void system_halt(ubyte);
void system_timer(void);
void system_reset(void);
void system_reconfigure(void);
void system_send_break(ubyte);
void system_send_long_space_disc(void);
ubyte system_rcv_terminal_break(ubyte,uword);
void system_rcv_line_break(void);
void system_rcv_escape(void);
void system_set_line_baud(void);
void system_init_test_link(void);
ubyte system_force_rate(ubyte type);

extern ubyte lapm_timer_tick;       /* Timer tick variable for LAPM */
extern ubyte timer_tick;            /* Timer tick for MNP */

/*******************************************************************************
/
/     Routine:       system_init
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to initialize the V.42, DTE,
/                    and LINE code.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed:  mnp_advanced_commands
/
/     Users:   self_test_init, acu_connect, status_check, sl_O, sl_U, sl_Y
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_init(void)
{

   /* If ASYNC then need to init the system   */
   if (comm_mode == ASYNC)
   {
      /* Set up parameters based on AT commands   */
      mmu_open_acu_pg
      system_set_parameters();
      mmu_restore_stored_pg

      /* Check to see if \O, \U, \Y, or \Z are in effect, if so do not
         initialize DTE code again */
      if (slN == 6)
         v80_dte_init(dte_init_baud, terminal_DTE_flowctrl,modem_DTE_flowctrl);
      else if(mnp_advanced_commands == FALSE)
      {
         dte_init(dte_init_baud,acu_data_bits,acu_stop_bits,acu_parity,terminal_DTE_flowctrl,
            terminal_DTE_xon_char,terminal_DTE_xoff_char,
            modem_DTE_flowctrl,modem_DTE_xon_char,modem_DTE_xoff_char,
            pass_flowctrl,s[2],s[12],escape_mode);
      }
      else
         mnp_advanced_commands = FALSE;

      line_configure(modem_baud,acu_data_bits,acu_stop_bits,acu_parity,
         pass_flowctrl,DCE_flowctrl);

      if (slN == 6)
         V80_configure(atrans_idle,aframed_idle,aframed_un_ov,ahd_auto,
                       acrc_type,anrzi_en,asyn1,asyn2);

      /* If in DIRECT mode, need to install line interrupts for long space
         disconnect */
      if (slN == 6)
         line_init(LINE_V80_SAM);
      else if ((operating_mode == DIRECT) && (!slU))
      {
         line_init(FULLDUP_ASYNC);
      }
      else
      {
         mmu_open_v42_pg
         v42_init(mnp_service_level,acu_mnp_service_class,acu_mnp_service_type,
            break_type,retry_limit,inactivity_timer,
            mnp_autorel_time,speed_matching,selective_retrans,
            mnp_optimization,stream_size_256,mnp_compression,
            modem_baud,break_length,mnp_stream_size,
            acu_autoreliable_flag,acu_autoreliable_char,v42_enable,
            detection_enable,mnp_preferred,loopback_test,btlz_comp_control,
            btlz_dict_size,btlz_string_len,
            acu_32bit_crc_enab, acu_mnp10_enab, acu_cellular_enab,
            acu_fallforward_enab,acu_fallback_enab,
            acu_wait_for_cd_time,acu_cd_recov_time,
            acu_cd_loss_time,acu_mnp10_rates,s[110], acu_ETC_enabled());
         mmu_restore_stored_pg
      }
   }
   /* If sr27.comm_mode is not ASYNC then operating_mode is set to DIRECT */
   else
   {
      operating_mode = DIRECT;
   }
}


/*******************************************************************************
/
/     Routine:       system_start
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to start V.42 as either originator
/                    or answerer.  If V.42 is idle this will cause it to continue
/
/     Input Parameters: ubyte start_code -   0: originate
/                                            1: answer
/                                            2: continue
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   acu_test_init, init_test_link, leased_line_init, sl_O, sl_U
/      sl_Y, at_O, acu_connect, pstn_status_check, ll_status_check
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_start(ubyte start_code)
{
   mmu_open_v42_pg
   v42_start(start_code);
   mmu_restore_stored_pg
}


/*******************************************************************************
/
/     Routine:       system_bg
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to allow V.42 to perform background
/                    functions.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  last_async_sync, last_status, acu_got_dte_break
/                    on_line_command
/
/     Users:   main
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_bg(void)
{
   ubyte ptr[SYSTEM_INFO_SIZE];

   /* Get current V.42 info */
   system_info((ubyte *)&ptr[0]);

   /* See if line type has changed to either ASYNC or SYNC   */
   if (system_status != V42_HALTED)
   {
      if (ptr[OFFSET_ASYNC_SYNC] != last_async_sync)
      {
         last_async_sync = ptr[OFFSET_ASYNC_SYNC];
         modem_char(last_async_sync,char_size,overspeed);
      }

      v42_running_mnp10 = ptr[OFFSET_NEGOT_MNP10];
   }

   last_status = system_status;

   /* Process V.24 background code  */
   mmu_open_v42_pg
   system_status = v42_bg();
   mmu_restore_stored_pg

   /* Process changes in the local event background */
   if (system_status != last_status)
      build_event(E_SYS_STAT,system_status);

   if (system_status == V42_CONNECTING)
   {
      if ((acu_got_dte_break == TRUE) && (slU == TRUE))
      {
         /* Need to set operating mode to DIRECT so that system_bg() will
            not be called in main() */
         operating_mode = DIRECT;
         system_reset();
         acu_got_dte_break = FALSE;
         build_event(E_MSG,OK);
         build_event(E_IDLE,UNUSED);
         on_line_command = TRUE;
      }
   }
}


/*******************************************************************************
/
/     Routine:       system_reconfigure
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to allow V.42 to be reconfigured
/                    during a connection.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   sl_K, at_O,
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_reconfigure(void)
{
   /* Set the parameters based on AT commands */
   mmu_open_acu_pg
   reconfigure_system_parameters();
   mmu_restore_stored_pg

   /* Configure ports for ASYNC data */
   if ((operating_mode != DIRECT) || (sr27.comm_mode == ASYNC) ||
       (operating_mode != V80_SAM))
   {
      dte_reconfigure(dte_init_baud,acu_data_bits,acu_stop_bits,acu_parity,terminal_DTE_flowctrl,
         terminal_DTE_xon_char,terminal_DTE_xoff_char,
         modem_DTE_flowctrl,modem_DTE_xon_char,modem_DTE_xoff_char,
         pass_flowctrl,s[2],s[12],escape_mode);

/* start change keh 6/26/96 => id#138 */
       /* Check if line speed changed during/after detection */
       if (modem_baud != modem_get_baud_rate())
           modem_baud = modem_get_baud_rate();
/* end change keh 6/26/96 => id#138 */

       line_configure(modem_baud,acu_data_bits,acu_stop_bits,acu_parity,
           pass_flowctrl,DCE_flowctrl);

      /* Reconfigure Error Correction too? */
      if (reconfigure)
      {
         mmu_open_v42_pg
         v42_reconfigure(break_type,break_length,inactivity_timer,
            retry_limit,mnp_stream_size,selective_retrans,
            loopback_test,modem_baud);
         mmu_restore_stored_pg
      }
   }
}

/*******************************************************************************
/
/     Routine:       system_reset
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to reset V.42 and the LINE code.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   master_init, init_ALB_test, leased_line_init, sl_O, sl_U
/      sl_Y, terminate_RLD_test, terminate_ALB_test, orig_init_modem
/      answ_init_modem, online_chk_char, ll_status_check, hang_up
/      ll_hang_up
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
/* ramn 7/24/96 */
extern ubyte sp_match;
extern ubyte mnp_sync;
extern ubyte lapm_sync;

void system_reset(void)
{
   mmu_open_v42_pg
   v42_reset();
   mmu_restore_stored_pg

   line_reset();

	sp_match=0;	/* ramn 7/24/96 */
	mnp_sync=0;
	lapm_sync=0;

   /* This ACU/MNP10 variable disables the Modem Task from running
      when MNP10 is active, so this variable should also be reset
      after the system is reset.  This allows the MT to run during
      the DROP phase */
   v42_running_mnp10 = FALSE;
}


/*******************************************************************************
/
/     Routine:       system_halt
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to halt V.42 .
/
/     Input Parameters: ubyte halt_code - 0: Fall back to speed
/                                         255: halt
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   sl_Z, hangup_connection, init_backup_sequence,
/                    init_recovery_sequence
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_halt(ubyte halt_code)
{
   mmu_open_v42_pg
   v42_halt(halt_code);
   mmu_restore_stored_pg
}


/*******************************************************************************
/
/     Routine:       system_timer
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to process the V.42 timers
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  lapm_timer_tick, timer_tick
/
/     Users:   acu_timer
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_timer(void)
{
   /* Update V.42 timer vars */
   lapm_timer_tick++;
   timer_tick++;
}


/*******************************************************************************
/
/     Routine:       system_send_break
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to make V.42 send a break.
/
/     Input Parameters: ubyte break_length - 0 to 255 msec
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   sl_B
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_send_break(ubyte break_length)
{
   if (operating_mode != DIRECT)
   {
      mmu_open_v42_pg
      v42_tbrk(break_length,dte_from_num());
      mmu_restore_stored_pg
   }
   else
   {
      line_to_break(EXP_NONDEST,break_length);
   }
}


/*******************************************************************************
/
/     Routine:       system_send_long_space_disc
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to cause the LINE code to send a
/                    4 sec break for long space disconnect.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   hang_up
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_send_long_space_disc(void)
{
   line_to_break(EXP_NONDEST,long_space_send_time);
}


/*******************************************************************************
/
/     Routine:       system_rcv_terminal_break
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to by the DTE code to inform the
/                    ACU code that a break was received from the terminal.
/
/     Input Parameters: ubyte brk_time - Length of received break.
/                         uword char_recvd - Number of receive characters
/
/     Output Parameters: ubyte ret_val - value returned from v42_tbrk()
/                               0 - Do nothing
/                               1 - Clear the DTE receive and transmit buffers.
/
/     Global Variables Changed:  acu_got_dte_break, ESC_RXD, bypass_break
/
/     Users:   DTE I/O code
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
ubyte system_rcv_terminal_break(ubyte brk_time,uword char_recvd)
{
   ubyte ret_val = 0;

   /* If \U command is in progress, flag to end   */
   if (slU == TRUE)
   {
      acu_got_dte_break = TRUE;
      return (ret_val);
   }

   if (acu_state == S_ONLINE)
   {
      /* If \K0, \K2, or \K4 is in effect the go to online command mode */
      if (bypass_break == TRUE)
      {
         system_rcv_escape();
         bypass_break = FALSE;
      }
      /* Else notify error correction code that break was received from
         the terminal */
      else
      {
         mmu_open_v42_pg
         ret_val = v42_tbrk(brk_time,char_recvd);
         mmu_restore_stored_pg
      }
   }

   return (ret_val);
}


/*******************************************************************************
/
/     Routine:       system_rcv_line_break
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to inform the ACU code that a
/                    break with length equal to 1.6 secs was received.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  long_space_disconnect
/
/     Users:   line_timer
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_rcv_line_break(void)
{
   long_space_disconnect = TRUE;
}


/*******************************************************************************
/
/     Routine:       system_rcv_escape
/
/     Author:        RSA
/
/     Creation Date: 8/10/93
/
/     Description:   This Routine is called to inform the ACU code that an
/                    escape sequence was detected by the DTE IO module.
/
/     Input Parameters: None
/
/     Output Parameters: None
/
/     Global Variables Changed:  escape_received
/
/     Users:   dte_timer (in DTE IO module)
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_rcv_escape(void)
{
   if (escape_mode & GUARD_TIME_MASK)
      escape_received = TRUE;
}


/*******************************************************************************
/
/     Routine:       system_idle
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to place V.42 into an idle state.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   test_online, test_online_idle, online_at_esc
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_idle(void)
{
   mmu_open_v42_pg
   v42_idle();
   mmu_restore_stored_pg
}


/*******************************************************************************
/
/     Routine:       system_info
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to receive status information about
/                    the V.42 code.
/
/     Input Parameters: ubyte *ptr - pointer to information block
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   pstn_status_check, ll_status_check, output_results
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_info(ubyte *ptr)
{
   mmu_open_v42_pg
   v42_info(ptr);
   mmu_restore_stored_pg
}


/*******************************************************************************
/
/     Routine:       system_set_line_baud
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine is called to set the baud rate on the line.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   at_O
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_set_line_baud(void)
{
   line_configure(modem_baud,acu_data_bits,acu_stop_bits,acu_parity,
      pass_flowctrl,DCE_flowctrl);
   line_set_tx_baud();

   /* Inform the V.42 code of the change in line speed */
   mmu_open_v42_pg
   v42_reconfigure(break_type,break_length,inactivity_timer,
      retry_limit,mnp_stream_size,selective_retrans,
      loopback_test,modem_baud);
   mmu_restore_stored_pg
}

/*******************************************************************************
/
/     Routine:       system_init_test_link
/
/     Author:        RSA
/
/     Creation Date: 05/07/91
/
/     Description:   This Routine will initialize and start a Speed Matching
/                    connection if there is no direct mode
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   wait_for_test_connection, init_RDL_test
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_init_test_link(void)
{
   /* Set DCE port */
   line_configure(modem_baud,acu_data_bits,acu_stop_bits,acu_parity,
      DISABLED,DISABLED);

   mmu_open_v42_pg
   v42_init(NO_MNP,acu_mnp_service_class,acu_mnp_service_type,
      IGNORE,retry_limit,DISABLED,
      DISABLED,ENABLED,selective_retrans,
      mnp_optimization,stream_size_256,mnp_compression,
      modem_baud,break_length,mnp_stream_size,
      DISABLED,acu_autoreliable_char,DISABLED,
      DISABLED,DISABLED,loopback_test,btlz_comp_control,
      btlz_dict_size,btlz_string_len,
      acu_32bit_crc_enab, acu_mnp10_enab, acu_cellular_enab,
      acu_fallforward_enab,acu_fallback_enab,acu_wait_for_cd_time,
      acu_cd_recov_time, acu_cd_loss_time,acu_mnp10_rates,s[110],
      DISABLED);

   v42_start(ORIGINATE);

   /* NOTE: v42_bg must() be called in the background until a Speed Matching
      connection has been established.  This is done through test_bg() */

   mmu_restore_stored_pg
}


/*******************************************************************************
/
/     Routine:       system_get_parms
/
/     Author:        RSA
/
/     Creation Date: 12/02/91
/
/     Description:   This Routine is called to determine the values of certain
/                    system parameters.
/
/     Input Parameters: ubyte *ptr - pointer to the array used to return the
/                    values of the parameters.
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:   check_error_count() (MT)
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void system_get_parms(ubyte *info_ptr)
{
   ubyte temp;
   ubyte ptr[SYSTEM_INFO_SIZE];

   /* Determine if a protocol is running   */
   if ((system_status == V42_LAPM) || (system_status == V42_MNP))
      temp = TRUE;
   else
      temp = FALSE;

   system_info((ubyte *)&ptr[0]);

   *info_ptr++ = temp;
   *info_ptr++ = ptr[OFFSET_LINE_ERRORS];
   *info_ptr++ = ptr[OFFSET_NUM_PACKETS];
}

/*******************************************************************************
/
/     Routine:       system_force_rate
/
/     Author:        RSA
/
/     Creation Date: 01/03/92
/
/     Description:   This Routine is called to force the V.42 code to either
/                    upshift or downshift the line speed.
/
/     Input Parameters: ubyte type - direction of change
/                                   0 = Lower the speed
/                                   1 = Raise the speed
/
/     Output Parameters: ubyte status of the rate change
/                             0 - OK
/                             1 - MNP 10 not negotiated
/
/     Global Variables Changed:  None
/
/     Users: hy_B(), hy_U()
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
ubyte system_force_rate(ubyte type)
{
   ubyte temp;

   mmu_open_v42_pg
   temp = v42_mnp10_force_rate(type);
   mmu_restore_stored_pg
   return (temp);
}
