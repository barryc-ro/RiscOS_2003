extern void InitiateDTMFLevel(void);

void Per_TT(ubyte *parm_ptr)
{
   ubyte type_of_test;
   ubyte tone_ptr, alb_ptr, fax_ptr;

   type_of_test = NULL;
   tone_ptr = alb_ptr = fax_ptr = NULL;

   switch (*parm_ptr)
   {
         /***********************/
         /* ALL KINDS OF TONES  */
         /***********************/

         case 0x00:  /* DTMF 0 */
            tone_ptr = 0;  
            type_of_test = TONE_TEST ;
            break;

         case 0x01:  /* DTMF 1 */
            tone_ptr = 1;  
            type_of_test = TONE_TEST ;
            break;

         case 0x02:  /* DTMF 2 */
            tone_ptr = 2;  
            type_of_test = TONE_TEST ;
            break;

         case 0x03:  /* DTMF 3 */
            tone_ptr = 3;  
            type_of_test = TONE_TEST ;
            break;

         case 0x04:  /* DTMF 4 */
            tone_ptr = 4;  
            type_of_test = TONE_TEST ;
            break;

         case 0x05:  /* DTMF 5 */
            tone_ptr = 5;  
            type_of_test = TONE_TEST ;
            break;

         case 0x06:  /* DTMF 6 */
            tone_ptr = 6;  
            type_of_test = TONE_TEST ;
            break;

         case 0x07:  /* DTMF 7 */
            tone_ptr = 7;  
            type_of_test = TONE_TEST ;
            break;

         case 0x08:  /* DTMF 8 */
            tone_ptr = 8;  
            type_of_test = TONE_TEST ;
            break;

         case 0x09:  /* DTMF 9 */
            tone_ptr = 9;  
            type_of_test = TONE_TEST ;
            break;

         case 0x0A:  /* DTMF "*" */
            tone_ptr = 10;  
            type_of_test = TONE_TEST ;
            break;

         case 0x0B:  /* DTMF "#" */
            tone_ptr = 11;  
            type_of_test = TONE_TEST ;
            break;

         case 0x0C:  /* DTMF A */
            tone_ptr = 12;  
            type_of_test = TONE_TEST ;
            break;

         case 0x0D:  /* DTMF B */
            tone_ptr = 13;  
            type_of_test = TONE_TEST ;
            break;

         case 0x0E:  /* DTMF C */
            tone_ptr = 14;  
            type_of_test = TONE_TEST ;
            break;

         case 0x0F:  /* DTMF D */
            tone_ptr = 15;  
            type_of_test = TONE_TEST ;
            break;

         case 0x10:  /* v.21 channel 1 mark, 980 Hz */
            tone_ptr = 16;  
            type_of_test = TONE_TEST ;
            break;

         case 0x11:  /* v.21 channel 2 mark, 1650 Hz */
            tone_ptr = 17;  
            type_of_test = TONE_TEST ;
            break;

         case 0x12:  /* v.23 backward channel mark, 390 Hz */
            tone_ptr = 18;  
            type_of_test = TONE_TEST ;
            break;

         case 0x13:  /* v.23 forward channel mark, 1300 Hz */
            tone_ptr = 19;  
            type_of_test = TONE_TEST ;
            break;


         case 0x19:  /* v.21 channel 1 space, 1180 Hz */
            tone_ptr = 20;  
            type_of_test = TONE_TEST ;
            break;

         case 0x1A:  /* v.21 channel 2 space, 1850 Hz */
            tone_ptr = 21;  
            type_of_test = TONE_TEST ;
            break;

         case 0x1B:  /* v.23 backward channel space, 450 Hz */
            tone_ptr = 22;  
            type_of_test = TONE_TEST ;
            break;

         case 0x1C:  /* v.23 forward channel space, 2100 Hz */
            tone_ptr = 23;  
            type_of_test = TONE_TEST ;
            break;

         case 0x30:  /* Silence */
            tone_ptr = 24;  
            type_of_test = TONE_TEST ;
            break;

         case 0x31:  /* v.25 answer tone, 2100 Hz */
            tone_ptr = 25;  
            type_of_test = TONE_TEST ;
            break;

         case 0x32:  /* Guard tone, 1800 Hz */
            tone_ptr = 26;  
            type_of_test = TONE_TEST ;
            break;

         case 0x33:  /* v.25 calling tone, 1300 Hz */
            tone_ptr = 27;  
            type_of_test = TONE_TEST ;
            break;

         case 0x34:  /* fax calling tone, 1100 Hz */
            tone_ptr = 28;  
            type_of_test = TONE_TEST ;
            break;
                                                             
         /**************************/
         /* ALL KINDS OF ALB TESTS */
         /**************************/

         case 0x15:           /* V.22 ALB, originate */
            alb_ptr = 0; 
            type_of_test = ALB_TEST; 
            break;
         
         case 0x16:  /* V.22bis ALB, originate */
            alb_ptr = 1;  
            type_of_test = ALB_TEST; 
            break; 

         case 0x17:  /* V.22 ALB, answer */
            alb_ptr = 2;  
            type_of_test = ALB_TEST; 
            break; 

         case 0x18:  /* V.22bis ALB, answer */
            alb_ptr = 3;  
            type_of_test = ALB_TEST; 
            break; 

         case 0x20:  /* V.32 ALB, 9600, originate */
            alb_ptr = 4;  
            type_of_test = ALB_TEST; 
            break; 

         case 0x21:  /* V.32bis ALB, orig */
            alb_ptr = 5;  
            type_of_test = ALB_TEST; 
            break; 

         case 0x60:  /* V.34 ALB, 2400 bps */
            alb_ptr = 6;  
            type_of_test = ALB_TEST; 
            break; 

         case 0x61:  /* V.34 ALB, 4800 bps */
            alb_ptr = 7;  
            type_of_test = ALB_TEST; 
            break; 

         case 0x62:  /* V.34 ALB, 7200 bps */
            alb_ptr = 8;  
            type_of_test = ALB_TEST; 
            break; 

         case 0x63:  /* V.34 ALB, 9600 bps */
            alb_ptr = 9;  
            type_of_test = ALB_TEST; 
            break; 

         case 0x64:  /* V.34 ALB, 12000 bps */
            alb_ptr = 10; 
            type_of_test = ALB_TEST; 
            break; 

         case 0x65:  /* V.34 ALB, 14400 bps */
            alb_ptr = 11; 
            type_of_test = ALB_TEST; 
            break; 

         case 0x66:  /* V.34 ALB, 16800 bps */
            alb_ptr = 12; 
            type_of_test = ALB_TEST; 
            break; 

         case 0x67:  /* V.34 ALB, 19200 bps */
            alb_ptr = 13; 
            type_of_test = ALB_TEST; 
            break; 

         case 0x68:  /* V.34 ALB, 21600 bps */
            alb_ptr = 14; 
            type_of_test = ALB_TEST; 
            break; 

         case 0x69:  /* V.34 ALB, 24000 bps */
            alb_ptr = 15; 
            type_of_test = ALB_TEST; 
            break; 

         case 0x6A:  /* V.34 ALB, 26400 bps */
            alb_ptr = 16; 
            type_of_test = ALB_TEST; 
            break; 

         case 0x6B:  /* V.34 ALB, 28800 bps */
            alb_ptr = 17; 
            type_of_test = ALB_TEST; 
            break; 

         /**************************/
         /* ALL KINDS OF FAX TESTS */
         /**************************/

         case 0x40:  /* Fax configure v.21, 300 */
            fax_ptr = 0;  
            type_of_test = FAX_TEST ;
            break;

         case 0x41:  /* Fax configure v.27, 2400 */
            fax_ptr = 1;  
            type_of_test = FAX_TEST ;
            break;

         case 0x42:  /* Fax configure v.27, 4800 */
            fax_ptr = 2;  
            type_of_test = FAX_TEST ;
            break;

         case 0x43:  /* Fax configure v.29, 7200 */
            fax_ptr = 3;  
            type_of_test = FAX_TEST ;
            break;

         case 0x44:  /* Fax configure v.29, 9600 */
            fax_ptr = 4;  
            type_of_test = FAX_TEST ;
            break;

         case 0x45:  /* Fax configure v.17, 7200, long train */
            fax_ptr = 5;  
            type_of_test = FAX_TEST ;
            break;

         case 0x46:  /* Fax configure v.17, 7200, short train */
            fax_ptr = 6;  
            type_of_test = FAX_TEST ;
            break;

         case 0x47:  /* Fax configure v.17, 9600, long train */
            fax_ptr = 7;  
            type_of_test = FAX_TEST ;
            break;

         case 0x48:  /* Fax configure v.17, 9600, short train */
            fax_ptr = 8;  
            type_of_test = FAX_TEST ;
            break;

         case 0x49:  /* Fax configure v.17, 12000, long train */
            fax_ptr = 9;  
            type_of_test = FAX_TEST ;
            break;

         case 0x4A:  /* Fax configure v.17, 12000, short train */
            fax_ptr = 10;  
            type_of_test = FAX_TEST ;
            break;

         case 0x4B:  /* Fax configure v.17, 14400, long train */
            fax_ptr = 11;  
            type_of_test = FAX_TEST ;
            break;

         case 0x4C:  /* Fax configure v.17, 14400, short train */
            type_of_test = FAX_TEST;
            fax_ptr = 12; 
            break;

         /***********************/
         /* NOT A VALID COMMAND */
         /***********************/
         default:       
            error_occurred = TRUE;
            return;
   }

   off_hook();                   /* go off hook */
   switch (type_of_test)
   {
      case TONE_TEST:

            InitiateTransmitLevel(0);
            InitiateDTMFLevel(); 

            current_command [0] = 0x7c;   /* send tone now */
               current_command [1] = 0x00;
               current_command [2] = 0x06;
            current_command [3] = 0x00;
            current_command [4] = tone_constants[tone_ptr][1];
             current_command [5] = tone_constants[tone_ptr][0];
            current_command [6] = tone_constants[tone_ptr][3];
            current_command [7] = tone_constants[tone_ptr][2];
            current_command [8] = 0x01;
            current_command [9] = 0x00;
               ack_or_response = 0;
            send_pkt_to_dsp();
            break;

      case ALB_TEST:
            current_command [0] = 0x64;   /* send  */
            current_command [1] = 0x00;
            current_command [2] = 0x04;
            current_command [3] = 0x00;
            current_command [4] = alb_constants[alb_ptr][0];
            current_command [5] = alb_constants[alb_ptr][1];
            current_command [6] = 0x00;
            current_command [7] = 0x00;

            ack_or_response = 0;
            send_pkt_to_dsp();   
 
            current_command [0] = 0x6E;   /* send PACKET_MODEM_ALB */
            current_command [1] = 0x00;
            current_command [2] = 0x04;
            current_command [3] = 0x00;
            current_command [4] = alb_constants[alb_ptr][2];
            current_command [5] = alb_constants[alb_ptr][3];
            current_command [6] = alb_constants[alb_ptr][4];
            current_command [7] = 0x00;

            ack_or_response = 0;
            send_pkt_to_dsp();   
            break;

      case FAX_TEST:
            current_command [0] = 0x68;
               current_command [1] = 0x00;
               current_command [2] = 0x04;
            current_command [3] = 0x00;
            current_command [4] = 0x07;
             current_command [5] = 0x0b;
             current_command [6] = 0x20;
             current_command [7] = 0x00;
               ack_or_response = 0;
            send_pkt_to_dsp();

            current_command [0] = 0x73;   
            current_command [1] = 0x00;
            current_command [2] = 0x02;
            current_command [3] = 0x00;
            current_command [4] = fax_constants[fax_ptr][0];
            current_command [5] = fax_constants[fax_ptr][1];

            ack_or_response = 0;
            send_pkt_to_dsp();   

            break;
   }

   while(!acu_from_num())
     ; 

   switch (type_of_test)
   {
      case ALB_TEST:
         break;

      case TONE_TEST:
            current_command [0] = 0x7c;      /* turn off the tones */
               current_command [1] = 0x00;
               current_command [2] = 0x06;
            current_command [3] = 0x00;
            current_command [4] = 0x00;
             current_command [5] = 0x00;
            current_command [6] = 0x00;
            current_command [7] = 0x00;
            current_command [8] = 0x00;
            current_command [9] = 0x00;

               ack_or_response = 0;
            send_pkt_to_dsp();
            break;

      case FAX_TEST:
            break;
    }

   on_hook(); 

   current_command [0] = 0x60;   /* send Modem Init Packet */
   current_command [1] = 0x00;
   current_command [2] = 0x00;
   current_command [3] = 0x00;
   ack_or_response = 0;
   send_pkt_to_dsp();

   init_call_progress(0);
   return;    
}                                /* end of routine Per_TT */

