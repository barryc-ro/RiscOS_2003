/* Direct crc16 implementation */

#include <stdio.h>

#ifndef SEEK_END
#define SEEK_END 2
#endif

static unsigned long CRC() ;

int main(argc, argv)
int argc ;
char *argv[] ;
{unsigned long crc = 0 ;
 FILE *f ;

 if ((f = fopen(argv[1], "r+b")) == NULL) {
    perror(argv[0]) ;
    return(1) ;
    }

 for (;;) {
    int ch = getc(f) ;

    if (ch == EOF)
       break;
    crc = CRC(ch, crc);
    }

    crc = crc >> 16 ;

    fseek(f,0L,SEEK_END) ;

    putc((char)((crc >> 8) & 0xff),f) ;
    putc((char)(crc & 0xff),f) ;
    fclose(f);

    printf("CRC = %04lx\n", crc);

    return 0;
}


#define POLY 0x80050000      /* x^16 + x^15 + x^2 + 1 */

static unsigned long CRC(ch, crc)
int ch ;
unsigned long crc ;
{unsigned bit ;
 unsigned long poly = POLY ;

 for (bit = 8 ; bit != 0; bit--) {
    long local = crc ^ ((long)ch << 24) ;

    crc <<= 1 ;
    ch <<= 1 ;
    if (local < 0)
       crc ^= poly ;
    }
 return crc ;
 }
