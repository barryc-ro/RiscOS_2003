
;***************************************************************************
;*   FILE:     pcmcia.s
;*
;*   PCMCIA code and CIS ( card info structure )
;*
;*   5/12/96 - shujin - 2/5/98
;***************************************************************************

       AREA |pcmcia|, CODE, READONLY

       EXPORT  pcmcia_code
       EXPORT  START_OF_CIS
       INCLUDE powerup.h	; ramn 8/14/96

       KEEP


COR      EQU     &FFC504
CCSR     EQU     &FFC508
ESRO     EQU     &FFC50C

;mrm8596
IDMS     EQU     &FFC540

PRPCBR0  EQU     &00FFC520     ;Base reg, low 16 bits
PRPCBR1  EQU     &00FFC524     ;Base reg, upper 8 bits

CLK_SEL_STAT_REG EQU &900FD	; addr in CP space ; ramn 8/14/96

;pcmcia interface in musket CL-MD4451C, CIS is handled by host bus controller

pcmcia_code
;for new musket, 24 bit base addr for RDS or CIS, bus controller driven
       ldr     r1,=START_OF_CIS
       ldr     r0,=PRPCBR0             ;low 16 bits
       str     r1,[r0]                 ;prpcbr0 is 16 bit reg
       ldr     r0,=PRPCBR1             ;high 8 bits
       mov     r1,r1,lsr #16           ;shift right 16 bits,
       strb    r1,[r0]



;mrm8596
;problem with driving the speaker

       ldr     r0,=IDMS
       mov     r1,#&02
       strb    r1,[r0]


;ramn 8/14/96
;
; reset dsp here
		ldr    r0,=GPR2
		mov    r1,#&0022		;DSP Reset
		str    r1,[r0]

		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop

;
; clear reset dsp here
		ldr    r0,=GPR2
		mov    r1,#&0020		;clear DSP Reset
		str    r1,[r0]

; select the PLL output and then put pll to sleep
; hence the dsp has not clock ie dsp in sleep mode

	ldr 	r0,=CLK_SEL_STAT_REG
	mov	r1,#0
	strb	r1,[r0]
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop


	ldr 	r0,=CLK_SEL_STAT_REG
	mov	r1,#2
	strb	r1,[r0]



;disable cache if card not configured this will consume less power
;disable cache before going to low power state
          	LDR    	R0, =CacheConfigurationReg
	        MOV    	R1,#&00
	       	STR    	R1,[R0]

		nop
		nop
		nop
		nop
		nop
		nop
;
;load 0 to lpramem, take rams to low power state
		ldr	r0,=LPRAMEN
		mov	r1,#0
		strb	r1,[r0]
;

wait_card_enabled

       ldr     r0,=COR
       ldrb    r1,[r0]
       and     r1,r1,#&20              ;card EN bit
       cmp     r1,#&20
       bne     wait_card_enabled

;put the rams back in high power mode
		ldr	r0,=LPRAMEN
		mov	r1,#01
		strb	r1,[r0]

;prepare to clear Tag rams
		MOV     R0,#00000000
		MOV     R1,#00000000
		MOV     R2,#00000000
		MOV     R3,#00000000
		MOV     R4,#00000000
		MOV     R5,#00000000
		MOV     R6,#00000000
		MOV     R7,#00000000

		LDR     R9,=&FFB400
		LDR     R8,=&FFB000

;clear the Tag rams
clr_not_done1
	        STMIA   R8!,{R0-R7}
        	CMP     R8,R9
	        BNE     clr_not_done1

;enable the cache
        	LDR     R0, =CacheConfigurationReg
        	LDR     R1,[R0]
        	ORR     R1,R1,#BothCacheRamsAsCache
        	STR     R1,[R0]

; reset dsp here
		ldr    r0,=GPR2
		mov    r1,#&0022		;DSP Reset
		str    r1,[r0]

		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop

;
; clear reset dsp here
		ldr    r0,=GPR2
		mov    r1,#&0020		;clear DSP Reset
		str    r1,[r0]

		nop
		nop
		nop
		nop
		nop



       mov     r15,r14                 ;return  to powerup.s

;code end


;----------------------------------------------------------
; The following table is for PCMCIA card CIS configuration
;-----------------------------------------------------------

START_OF_CIS

   DCB &01 ; CISTPL_DEVICE;  ; device info tuple
      DCB &00  ; as fill
   DCB &02 ; TPL_LINK;       ; num of bytes left in this tuple
      DCB &00  ; as fill
   DCB &00 ; DTYPE_NULL ;    ; No valid device info
      DCB &00  ; as fill
   DCB &FF ;                 ; Device info field end of marker
      DCB &00  ; as fill



   DCB &15 ; CISPTPL_VERS_1; ; level 1 version/product
      DCB &00  ; as fill
   DCB &2A ; TPL_LINK;       ; offset to next tuple
      DCB &00  ; as fill
   DCB &05 ; TPLLV1_MAJOR;   ; major version number
      DCB &00  ; as fill
   DCB &01 ; TPLLV1_MINOR;   ; for PCMCIA release 2.0 or 2.01
      DCB &00  ; as fill
;
; manufacturer's name given in ascii
;for 56k
   DCB "C I R R U S   L O G I C   5 6 K     M O D E M "

;for 33.6
;   DCB "C I R R U S   L O G I C   3 3 . 6   M O D E M "

	DCB &00                      ; termination byte
      DCB &00  ; as fill

   DCB "C L - M D 5 6 X X "           ; product no. in ascii, for 56k
;   DCB "C L - M D 3 4 X X "           ; product no. in ascii, for 33.6

   DCB &00                   ; termination
      DCB &00  ; as fill
;
   DCB "5 . 4 1 "                ; product revision is 541
;   DCB "3 . 0 7 "                ; product revision is 2.30

   DCB &00                   ; termination
      DCB &00  ; as fill

   DCB &FF                   ; chain termination
      DCB &00  ; as fill


   DCB &20 ; CISTPL_MANFID   ; Manufacturer Id Tuple
      DCB &00  ; as fill
   DCB &04 ; TPL_LINK
      DCB &00  ; as fill
   DCB &4E ; TPLMID_MANF     ; lsb of manf id
      DCB &00  ; as fill
   DCB &01 ;                 ; msb of manf id
      DCB &00  ; as fill
   DCB &88 ; TPLMID_CARD     ; Manufacturer info, product code
      DCB &00  ; as fill
   DCB &00                   ;                    revision info
      DCB &00  ; as fill
;
;
   DCB &21 ; CISTPL_FUNCID   ; Function Id Tuple
      DCB &00  ; as fill
   DCB &02 ; TPL_LINK
      DCB &00  ; as fill
   DCB &02 ; TPLFID_FUNCTION ; 2 = serial i/o port
      DCB &00  ; as fill
   DCB &01 ; TPLFID_SYSINT   ; POST bit=1, Config card during system init
      DCB &00  ; as fill

;                            ; ROM  bit=0, no expansion ROM
; no ft extension tuple (22)
;
   DCB &1A ; CONF            ; Configuration tuple
      DCB &00  ; as fill
   DCB &05 ; CISTPL_LINK
      DCB &00  ; as fill
   DCB &01 ; TPCC_SZ         ; 2 bytes base addr reg, 1 byte config mask
      DCB &00  ; as fill

   DCB &30      ;24 ; TPCC_LAST       ; index num of last entry in card config table,ok
      DCB &00  ; as fill

   DCB &00 ; TPCC_RADR       ; LSB of the base addr of config reg
      DCB &00  ; as fill
   DCB &01 ; TPCC_RADR       ; MSB of
      DCB &00  ; as fill
   DCB &13 ; TPCC_RMSK       ; mask indicating the presence of config regs
      DCB &00  ; as fill
;

; bit 0: COR , configuration option reg
; bit 1: CCSR, Card configuration & status reg
;? bit 4: ESRO, Extended status reg


   DCB &1B ; CISTPL_CE      ; configuration entry tuple; configuration 1
      DCB &00  ; as fill
   DCB &13 ;old &18         ; link to next tuple
      DCB &00  ; as fill
   DCB &E0 ; TPCE_INDX      ; interface config byte follows, default entry
      DCB &00  ; as fill
   DCB &81 ; TPCE_IF        ; IO interface, wait suported
      DCB &00  ; as fill
   DCB &9D ; TPCE_FS        ; feature sel byte, Vcc, timing, IO, IRQ, misc.
      DCB &00  ; as fill
;
   DCB &5F ; TPCE_PD        ; power description structure
      DCB &00  ; as fill
   DCB &55                  ; nominal voltage 5 V
      DCB &00  ; as fill
   DCB &4D                  ; MIN voltage 4.5 V
      DCB &00  ; as fill
   DCB &5D                  ; MAX voltage 5.5 V
      DCB &00  ; as fill

   DCB &26                  ; Static Current 200 mA, see spec. p. c-29
      DCB &00  ; as fill
   DCB &36                  ; AVG Current 300 mA
      DCB &00  ; as fill
   DCB &35                  ; Power Down current 30 mA
      DCB &00  ; as fill

;;   DCB &01                 ; VPP1 Power Descriptor
;;   DCB &8E8E ; VPP1 Nominal 12 V
;;   DCB &7D7D ; VPP1 not required during sleep

;
   DCB &FC ; TPCE_TD        ;timing description byte, only wait time present
      DCB &00  ; as fill
   DCB &14                  ; 12 micro seconds is max wait time
      DCB &00  ; as fill
;
   DCB &AA ; TPCE_IO        ; IO description byte; 8 bit data,10 bits addr
      DCB &00  ; as fill
   DCB &60                  ; 1 range, IO address is 2 bytes
      DCB &00  ; as fill
   DCB &F8                  ; IO addr low byte
      DCB &00  ; as fill
   DCB &03                  ; IO addr high byte
      DCB &00  ; as fill
   DCB &07                  ; length of range is 8 bytes
      DCB &00  ; as fill
;
   DCB &24                  ;Int description byte = IRQ 4, level mode
      DCB &00  ; as fill

;;   DCB &30                ; int req description, level and mask enabled
;;   DCB &B8                  ; IRQ 3,4,5,7
;;   DCB &1C                  ; IRQ 10,11,12

;
   DCB &28 ; TPCE_MI        ;misc. desc. byte = power down, speaker enable
      DCB &00  ; as fill
;
;
   DCB &1B ; CISTPL_CE      ; card config table entry; Configuration 2
      DCB &00  ; as fill
   DCB &07                  ; link
      DCB &00  ; as fill
   DCB &21 ; TPCE_INDEX     ; set card for COM 2 IO address
      DCB &00  ; as fill
   DCB &08 ; TPCE_FS        ;feature selection byte; IO space only
      DCB &00  ; as fill
   DCB &AA ; TPCE_IO        ; 8 bit IO and 10 bit IO addr space
      DCB &00  ; as fill
   DCB &60                  ; 1 range, IO addr= 2 bytes
      DCB &00  ; as fill
   DCB &F8                  ; lower byte of starting addr
      DCB &00  ; as fill
   DCB &02                  ; higher byte of starting addr
      DCB &00  ; as fill
   DCB &07                  ; length of range = 8 bytes
      DCB &00  ; as fill
;
   DCB &1B ; CISTPL_CE      ; card config table entry; Configuration 3
      DCB &00  ; as fill
   DCB &07                  ; link to next tuple
      DCB &00  ; as fill
   DCB &22 ; TPCE_INDEX     ; set card for COM3 address
      DCB &00  ; as fill
   DCB &08 ; TPCE_FS        ; feature selection byte, only IO space
      DCB &00  ; as fill
   DCB &AA ; TPCE_IO        ; 8 bit IO and 10 bit IO address
      DCB &00  ; as fill
   DCB &60                  ; 1 range, IO address is 2 bytes
      DCB &00  ; as fill
   DCB &E8                  ; lower byte of IO address
      DCB &00  ; as fill
   DCB &03                  ; Higher byte of IO address
      DCB &00  ; as fill
   DCB &07                  ; length of range is 8 bytes
      DCB &00  ; as fill
;
   DCB &1B ; CISTPL_CE      ; card config table entry; Configuration 4
      DCB &00  ; as fill
   DCB &07                  ; link to next tuple
      DCB &00  ; as fill
   DCB &23 ; TPCE_index     ;
      DCB &00  ; as fill
   DCB &08 ; TPCE_FS        ; feature selection byte; only IO space
      DCB &00  ; as fill
   DCB &AA ; TPCE_IO        ; 8 bit IO and 10 bit IO address
      DCB &00  ; as fill
   DCB &60                  ; 1 range; IO address is 2 bytes
      DCB &00  ; as fill
   DCB &E8                  ; lower byte of IO address
      DCB &00  ; as fill
   DCB &02                  ; higher byte of IO address
      DCB &00  ; as fill
   DCB &07                  ; length of range = 8 bytes
      DCB &00  ; as fill
;
   DCB &1B ; CISTPL_CE (ADDR DEC DISABLE)
      DCB &00  ; as fill
   DCB &06 ; TPL_LINK
      DCB &00  ; as fill
   DCB &24 ; TPCE_INDX      ;
      DCB &00  ; as fill
   DCB &18 ; TPCE_FS        ; feature selection byte; i/o and IRQ
      DCB &00  ; as fill
   DCB &23 ; TPCE_IO        ; I/O description byte, 3 addr link, no range
      DCB &00  ; as fill
;
   DCB &30                  ; int req description, level and mask enabled
      DCB &00  ; as fill
   DCB &B8                  ; IRQ 3,4,5,7
      DCB &00  ; as fill
   DCB &1C                  ; IRQ 10,11,12
      DCB &00  ; as fill
;in fact, HBA take care which IRQ be used, we can even ask for IRQ 0-15.
;

; 1/14/98, better format for tuple displaying, by cisinfo.exe
   DCB &1B
      DCB &00  ; as fill
   DCB &03
      DCB &00  ; as fill
   DCB &30
      DCB &00  ; as fill
   DCB &08
      DCB &00  ; as fill
   DCB &23
      DCB &00  ; as fill
;

   DCB &FF
      DCB &00  ; as fill
   DCB &00
      DCB &00  ; as fill
   DCB &FF
      DCB &00  ; as fill
   DCB &FF
      DCB &00  ; as fill



;   DCB &14 ;                ;no link tuple
 ;     DCB &00  ; as fill
  ; DCB &00 ;TPL_LINK
   ;   DCB &00  ; as fill
;
;   DCB &FF ; CITPL_END      ; end of tuple chain.
 ;     DCB &00  ; as fill




END_OF_CIS


       ALIGN                    ; make the boundary is 32 bits boundary


       END
