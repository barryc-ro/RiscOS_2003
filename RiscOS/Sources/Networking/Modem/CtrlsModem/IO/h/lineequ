/****************************************************************************
/
/    Copyright, 1988 - 1995.     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/
/    This document contains material confidential to RSA its contents must
/    not be revealed, used or disclosed to anyone or company with out
/    written permission by RSA.  The information contained herein is solely
/    for the use of RSA.
/
/    File:        lineequ.h
/
/    Version:    1.0    
/
/    Function:    This file contains the constant and structure 
/            definitions for the DCE line I/O code.
/
/    Product:    First Flight    
/
/    Platform:    Merlin/Cutlass DSP, Intel/Win95 CP
/            
/
/    History:    None
/
/    Created:     January 30, 1995
/
/    ---------------------------------------------------------
/    -            Modifications            -
/    ---------------------------------------------------------
/
/
/    Author & Date:    RSA  
/    Description:
/
*****************************************************************************/

/*** Relevent ASCII Character values ***/
#define XON_CHAR 0x11
#define XOFF_CHAR 0x13
#define SYN_CHAR 0x16
#define DLE_CHAR 0x10
#define STX_CHAR 0x02 
#define ETX_CHAR 0x03

/* RJM100796 */
/* V.80 support */
#define INIT_MNP_ASYNC     0x00
#define INIT_MNP_SYNC      0x01
#define INIT_SP_MATCHING   0x02
#define INIT_LAPM          0x03
#define INIT_V80_SAM       0x04

#define ASYNC_PORT    0
#define SYNC_PORT     1
#define BIT_SYNC_PORT 2
#define DETECT_PORT   3

#define DCE_BUFFER_SIZE 512
#define DCE_NEAR_EMPTY 0x100 
#define DCE_NEAR_FULL 0x100 

/*** the 4 possible dte_to_break() types ***/
#define EXPEDITED_DESTRUCTIVE  0x1
#define EXPEDITED_NONDESTRUCTIVE 0x2
#define NONEXPEDITED_NONDESTRUCTIVE 0x3
#define IGNORE 0x0

/* Default BREAK time */
#define DCE_BREAK_TIME  22       /* 22 * 10 miliSecs = 220 mSec */

/*** flow control conditions ***/
#define XON_AND_XOFF    0x1
#define RTS_AND_CTS     0x2


    /*** MNP Async States ***/
#define TXA_SYN_C        0x0
#define TXA_SYNDLE_C     0x3
#define TXA_STX_C        0x6
#define TXA_DATA_C        0x9
#define TXA_DLE_ETX_C     0x12
#define TXA_CRC_C        0x15
#define TXA_DONE_C        0x18

#define RXA_SYN_C        0x0
#define RXA_SYNDLE_C     0x3
#define RXA_STX_C        0x6
#define RXA_DATA_C        0x9
#define RXA_DLEDATA_C     0x12
#define RXA_CRC_C_LOW       0x15
#define RXA_CRC_C_HIGH   0x18

    /*** Return Status for Block I/O ***/
#define BAD_BLOCK       0x1

    /*** v42 fallback defines ***/
#define FALLBACK_TIMEOUT         0x0
#define RXED_FALLBACK_CHAR       0x1
#define FALLBACK_OVERFLOW        0x2
#define ENABLE_AUTO_CHAR_DETECT  0x2
#define ENABLE_AUTO_TIMER        0x1 

/********* LAPM constants **************/
#define LAPM_FULL_PACKET         133 
#define LAPM_CRC_ERROR           0x1

typedef struct lapm_struct {
    struct lapm_struct *next_frame;
    word count;
    ubyte error;
    ubyte status;
    ubyte data[ LAPM_FULL_PACKET ];
    } LAPM_PACKET_TYPE;

/********* MNP constants **************/
#define MNP_MAX_FRAME_SIZE    266

typedef struct mnp_packet {
    ubyte status;
    ubyte junk;
    uword count;
    ubyte data[ MNP_MAX_FRAME_SIZE ];
    } MNP_PACKET_TYPE;

/********* V.42 Detection constants **************/
#define DETECTION_ORIG    0
#define STATUS_DETECTION_TURNOFF  0xFF

/* RJM100796 */
/* V.80 timer definitions */
#define HUNT_DISABLE_WAIT_TIME     5         /*  50ms */

