/****************************************************************************
/
/   Copyright 1988, 1989, 1990, 1991, 1992, 1993, 1994.  All Rights
/   Reserved by:
/   RSA
/   7701 Six Forks Road
/   Suite 120
/   Raleigh, NC  27615
/   (919) 846-7171
/
/   This document contains material confidential to RSA. Its contents
/   must not be revealed, used or disclosed to anyone or company without
/   written permission by RSA. The information contained herein is solely
/   for the use of RSA.
/
/   File:                print.c
/
/   Module Version:
/
/   Function:
/
/   Product:
/
/   -----------------------------------------------------------
/   -                       Modifications                     -
/   -----------------------------------------------------------
/
/   Author & Date:     RSA
/   Description:
/   Reason:
/
****************************************************************************/

/* Some general functions */
#include "sys_def.h"

/* Local Prototypes */
void TraceInit(void);
void PrintMsg(char *);
void PrintOutChars( char *str );
void outchar(unsigned char);
void outhex( unsigned char);
void outhex_cr_lf( unsigned char);

#ifdef DEBUG_PORT
extern ulong MySystemTimer;
extern ubyte DebugPortOutput;
#endif

#define UARTBASE     0x000B0000L
#define DLL_REG      (UARTBASE + 0x00 )
#define DLM_REG      (UARTBASE + 0x01 )
#define THR_REG      (UARTBASE + 0x00 )
#define FCR_REG      (UARTBASE + 0x02 )
#define LCR_REG      (UARTBASE + 0x03 )
#define MCR_REG      (UARTBASE + 0x04 )
#define LSR_REG      (UARTBASE + 0x05 )
#define XMTR_EMPTY   0x20

#define B19200       0x0C
#define B38400       0x06
#define B57600       0x04
#define B115200      0x02
#define B226400      0x01
#define BAUD_RATE    B38400   //B115200

void TraceInit(void)
{
#ifdef DEBUG_PORT
   *(ubyte *)LCR_REG |= 0x80;          /* Enable DLAB */
   *(ubyte *)DLM_REG = 0;
   *(ubyte *)DLL_REG = BAUD_RATE;
   *(ubyte *)LCR_REG &= ~0x80;         /* Disable DLAB */

   *(ubyte *)LCR_REG = 0x03;           /* Set to 8-N-1               */
   *(ubyte *)FCR_REG = 0x00;           /* Disable FIFO and Flush     */
   *(ubyte *)MCR_REG = 0x07;           /* Set OUT1 + RTS + DTR -> ON */

   PrintMsg( "Trace Initialized!" );
#endif
}

void PrintOutChars( char *str )
{
#ifdef DEBUG_PORT
   while( *str != '\0' )
   {
      outchar( *str );
      str++;
   }
#endif
}

void outchar( unsigned char data )
{
#ifdef DEBUG_PORT
   volatile ubyte lsr_reg; /* Stop optimizer */
   /* Musket DUART is memory mapped @ 0xB0000 */

   if (DebugPortOutput == TRUE)
   {
      /* Write data into UART TX Register (THR) */
      *(ubyte *)UARTBASE = data;

      /*
         Read UART Line Status Register (LSR) waiting
         for Xmitr to empty .
      */
      while( 1 )
      {
          lsr_reg = *(ubyte *)LSR_REG;
          if( lsr_reg & XMTR_EMPTY )
              break;
      }
   }
#endif
}

void outhex( unsigned char data )
{
#ifdef DEBUG_PORT
	ubyte low, high;

	low = (data & 0x0f) + 0x30;
	high = ((data & 0x0f0) >> 4) + 0x30;

	if (low > 0x39)
		low += 7;

	if (high > 0x39)
		high += 7;

	outchar (high);
	outchar (low);
#endif
}


void outhex_cr_lf( unsigned char data )
{
#ifdef DEBUG_PORT
   outhex(data);
   outchar(0x0D);
   outchar(0x0A);
#endif
}


#ifdef DEBUG_PORT
void PrintTimer()
{
   #if (PRINT_TIMER == 1)
   ulong y;

   y = (MySystemTimer >> 16) & 0x0ff;
   outhex(y);
   y = (MySystemTimer >> 8) & 0x0ff;
   outhex(y);
   y = (MySystemTimer) & 0x0ff;
   outhex(y);
   outchar(' ');
   #endif
}
#endif

void PrintLapm(ubyte Type, ubyte *Error, ubyte *Len, ubyte *Data)
{
#ifdef BUILD_DLM
	ubyte x;

   PrintTimer();

	if (Type == 0)
	{
		outchar ('R');
		outchar ('x');
		if (*Error != 0)
		{
			outhex(*Error);
		}
	}
	else
	{
		outchar ('T');
		outchar ('x');
	}
	outchar('(');
	outhex(*Len);
	outchar (')');
	outchar (':');
	x = *Len;
	x = 3;
	while(x != 0)
	{
		outhex(*Data);
		outchar(' ');
		Data++;
		x--;
	}
	outchar('\r');
	outchar('\n');
#endif
}



void PrintLapmXid(char *Msg, ulong Data)
{
#ifdef BUILD_DLM
	ubyte x;
	ulong y;

   PrintTimer();
	PrintOutChars(Msg);

		y = Data>>24;
		x = (ubyte)y;
		outhex(x);
		y = Data>>16;
		x = (ubyte)y;
		outhex(x);
		y = Data>>8;
		x = (ubyte)y;
		outhex(x);
		y = Data;
		x = (ubyte)y;
		outhex(x);

	outchar('\r');
	outchar('\n');
#endif
}



void PrintMsgData( char *str, ubyte DataByte )
{
#ifdef DEBUG_PORT
   PrintTimer();
   while( *str != '\0' )
   {
      outchar( *str );
      str++;
   }
	outhex(DataByte);
	outchar('\r');
	outchar('\n');
#endif
}


void PrintMsg( char *str )
{
#ifdef DEBUG_PORT
   PrintTimer();
   while( *str != '\0' )
   {
      outchar( *str );
      str++;
   }
	outchar('\r');
	outchar('\n');
#endif
}
