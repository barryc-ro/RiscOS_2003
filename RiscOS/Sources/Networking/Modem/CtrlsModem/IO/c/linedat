/****************************************************************************
/
/	Copyright, 1988 - 1995.     All Rights Reserved by:
/	    RSA
/	    7701 Six Forks Road
/	    Suite 120
/	    Raleigh, NC  27615
/	    (919) 846-7171
/
/
/	This document contains material confidential to RSA its contents must
/	not be revealed, used or disclosed to anyone or company with out
/	written permission by RSA.  The information contained herein is solely
/	for the use of RSA.
/
/	File:		linedat.c
/
/	Version:	1.0
/
/	Function:	This file contains the variable declarations for the
/			DCE line I/O code.
/
/	Product:	Line I/O code.
/
/	Platform:	Merlin/Cutlass DSP, Intel/Microsoft CP
/
/
/	History:	linedat.c
/
/	Created: 	January 30, 1995
/
/	---------------------------------------------------------
/	-			Modifications			-
/	---------------------------------------------------------
/	Author & Date:	RSA
/	Description:
/
*****************************************************************************/

#include "sys_def.h"
#include "lineequ.h"            /* line constant defs */


/* v42 flags */
ubyte auto_fallback_flag=0;
			/* When used as a flag :
			 *  0 = No fallback condition
			 *  1 = timed out
			 *  2 = autoreliable fallback character
			 *  3 = 200 chars received without detection
			 *
			 * When a parameter passed to v42_falling_back_to_speed:
			 *  0 = timed out
			 *  1 = autoreliable fallback character
			 *  2 = 200 chars received without detection
			 */

	/*** dce timer variables ***/
ubyte auto_seconds=0;
uword auto_fallback_timer=0;

	/*** dce buffer variables ***/
ubyte dce_rx_buffer[DCE_BUFFER_SIZE]; 	 /* buffer allocation */
uword dce_rx_remove=0;			             /* buffer pointer */
uword dce_rx_insert=0;			             /* buffered pointer */
uword dce_rx_count=0;			             /* # of chars in buffer */
ubyte dce_tx_buffer[DCE_BUFFER_SIZE];
uword dce_tx_remove=0;
uword dce_tx_insert=0;
uword dce_tx_count=0;

	/*** dce break variables ***/
uword dce_tx_break_psn=0;		     /* pointer to break in tx data buffer */
ubyte dce_tx_break_count=0;    	  /* break duration counter in 0.1 sec units */
ubyte dce_tx_break_pending=0;     /* break pending, TRUE or FALSE */
ubyte dce_rx_break_running=FALSE; /*received a NULL char, may be break state */

	/*** dce status variables ***/
ubyte dce_rx_suspended=0;
ubyte dce_tx_interrupt_expected=0;

	/*** line flow control variables ***/
ubyte dce_pass_through_flow_cntl=0;
ubyte modem_to_modem_flow_cntl=0;
ubyte modem_to_modem_xon_char=0;
ubyte modem_to_modem_xoff_char=0;

	/*** SCC line parameter variables ***/
ubyte dce_baud_rate=0;
ubyte dce_data_bits=0;
ubyte dce_stop_bits=0;
ubyte dce_parity=0;

	/*** v42 protocol identifiers ***/
ubyte sp_match=0;
ubyte mnp_sync=0;
ubyte lapm_sync=0;

	/*** LAPM protocol variables ***/
LAPM_PACKET_TYPE * lapm_tx_packet_ptr=0;   /* ptr to start of LAPM Packet */
LAPM_PACKET_TYPE * lapm_rx_packet_ptr=0;
ubyte * lapm_tx_data_ptr=0;   /* ptr to data location of LAPM Packet */
ubyte * lapm_rx_data_ptr=0;

	/*** MNP protocol variables ***/
MNP_PACKET_TYPE * mnp_tx_packet_ptr=0;   /* ptr to start of MNP ASYNC Packet */
MNP_PACKET_TYPE * mnp_rx_packet_ptr=0;
ubyte * mnp_tx_data_ptr=0;   /* ptr to data location of MNP ASYNC Packet */
ubyte * mnp_rx_data_ptr=0;
ubyte tx_state=0; 	/* state of MNP ASYNC Packet */
ubyte rx_state=0;
uword tx_crc=0; 		/* CRC value of MNP ASYNC Packet */
uword rx_crc=0;

/* Sync mode character counts */
uword tx_char_count=0;
uword rx_char_count=0;
ubyte rx_extra_chars=0; /* count number of char's over limit */

   	/*** V.42 Detection variables ***/
uword detection_time=0;
ubyte detection_enabled=0;
ubyte detection_adp_code=0;
ubyte detection_start_code=0;
ubyte detection_tx_char=0;
ubyte last_adp_rx=0;
ubyte next_adp_flag=0;
ubyte odp_rx_flag=0;
ubyte last_odp_rx=0;
ubyte odp_rx_count=0;
ubyte adp_send_count=0;
ubyte detection_result_code=0;
ubyte detection_result_flag=0;
ubyte detection_tx_enabled=0;
ubyte detection_tx_timer=0;
ubyte detection_mnp_extend =0;
ubyte detection_turnoff_flag = FALSE;

ubyte line_bg_error_flags=0;
ubyte scc_used_dp_async_clocks=0;

ubyte detection_lapm_flag_count=0;

/* CP waiting for DSP to finish xmitting frame and CRC */
ubyte line_hdlc_waiting_CRC_sent=0;

/* if TRUE, line_init has been called, reset to FALSE when line_reset called */
ubyte line_io_enabled = FALSE;

/* globals for length and status read during lineint and used during int's */
ubyte dce_length_semaphore;
ubyte dce_status_semaphore;

/* Var's used to "spoof" the DCE code to llok like INT Enable Reg has TX IE */
ubyte dce_tx_enabled;

/* RJM100796 */
/* V.80 variables */
ubyte current_sub_mode;
ubyte v80_sam;
ubyte trans_idle;
ubyte framed_idle;
ubyte framed_un_ov;
ubyte hd_auto;
ubyte crc_type;
ubyte nrzi_en;
ubyte syn1;
ubyte syn2;
ubyte hunt_mode_en;
ubyte tx_abort_state;
uword last_flag_count;
ubyte em_tx_state;
ubyte dce_tx_underrun;
ubyte dce_rx_overrun;
ubyte dce_tx_eof;
ubyte dce_tx_resumed;
uword flag_count_timer;
uword hunt_end_wait_timer;

/* RJM111396 */
/* V.80 Support */
uword v80_frame_count=0;
uword v80_pframe_count=0;


