/****************************************************************************
/
/	Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/      All Rights Reserved by:
/	    RSA
/	    7701 Six Forks Road
/	    Suite 120
/	    Raleigh, NC  27615
/	    (919) 846-7171
/
/
/	This document contains material confidential to RSA its contents must
/	not be revealed, used or disclosed to anyone or company with out
/	written permission by RSA.  The information contained herein is solely
/	for the use of RSA.
/
/	File:		   vcvlink.c 
/
/	Version:	   1.0	
/
/	Function:	This file contains DCE initialization vcv I/O code 
/
/	Product: 	'C' Line VoiceView I/O
/
/	Platform:	Hitachi H8
/
/	History:	   vcvlinit.asm 
/
/	Created: 	December 14, 1994
/
/	---------------------------------------------------------
/	-			Modifications			-
/	---------------------------------------------------------
/
/
/	Author & Date:	
/	Description:
/  Reason:
/
/  Author & Date: RSA 5/15/1995.
/  Description: Removed the vcv_null_underrun function from the file.
/  Reason: The interface with the vcv code is not needed anymore.
/
*****************************************************************************/

#include "sys_def.h"			/* system defines */
#include "iohw_equ.h"			/* First Flight defines */
#include "lineequ.h"			/* DCE defines */
#include "vcv_def.h"
#include "vcvedf.h"			/* vcv externals used */
#include "local.h"             /* typedefs for DSP drivers */
#include "icd_msgs.h"			/* ICD packet id's */

#include "dsp_drv.h"
#include "mt_codef.h"			/* modem task, supplies send_packet_to_dsp */
#include "linelink.h"

void vcv_line_init(ubyte, ubyte,ubyte);
void vcv_line_reset(void);

/******************************************************************************
/
/	Routine:	vcv_line_init
/
/	Author: 	RSA
/
/	Creation Date:	December 14, 1994
/
/	Description:	This routine will initialize the DCE vcv code
/
/	Input Parameters: 
/			 ubyte: vcv line type:
/				0 = data vcv operations
/				1 = hdlc vcv operations
/
/			 ubyte: vcv line direction:
/				0 = vcv receive operations
/				1 = vcv transmit operations
/
/	Output Parameters: None
/
/	Global Variables Changed:  All DCE variables are initialized
/
/	Users:	
/
/	*************************************************************
/	*			Modifications			    *
/	*************************************************************
/
/	Author & Date:	RSA
/	Description:
/       Reason:
/
/  Author & Date: RSA 5/15/1995.
/  Description: Added the assigment to vcv_null_underrun_on to false.
/  Reason: Needed for the underrunning with null characters during vcv
/          data mode
/
/  Author & Date: RSA 6/21/1995.
/  Description: Added the call to enable the interrupts on the H8.
/  Reason: They were not being enable correctly.
/
*****************************************************************************/
void vcv_line_init(ubyte line_type, ubyte line_direction, ubyte buf_size)
{
	 if ( line_type == VCV_HDLC_MODE ) /* HDLC operation */
	 {
	 	line_disable_interrupts();
	
		vcv_dce_enabled = TRUE;
		vcv_dce_mode = 1; /* set global to HDLC */

       /* Set up data buffers */
		tx_char_count = 0;
		vcv_tx_packet_ptr = 0;
		vcv_tx_data_ptr = 0;
		rx_char_count = 0;
		vcv_rx_packet_ptr = 0;
		vcv_rx_data_ptr = 0;
		
       /* Set up status variables */
		line_bg_error_flags = 0;
       line_hdlc_waiting_CRC_sent = FALSE;
       line_io_enabled = TRUE;
       dspdrv_ping_cram_intr();  /* kick start Merlin */

		line_enable_interrupts();

       /* Set up SCC */
		line_port_init(SYNC_PORT);
	 }
	 else /* VCV_DATA_MODE */
	 {
       /*************************************************************/
       /* VoiceView TX DATA Mode, idle w/ MARKs until first data underrun,
           then idle w/ SPACEs. No CRC to send. */
       /* VoiceView RX DATA Mode, sync up on 0xFF and return all data to
                   the vcv code. No CRC to chec. */
       /*************************************************************/

       /* Set Fax global to DATA */
	 	line_disable_interrupts();
	
	 	vcv_dce_enabled = TRUE;
		vcv_dce_mode = 0;   

       /* Set up data buffers */
		dce_rx_remove = 0;		
		dce_rx_insert = 0;	
		dce_rx_count = 0;
		dce_tx_remove = 0;
		dce_tx_insert = 0;		
		dce_tx_count = 0;	

		/* No chars lost yet */
		vcv_lost_chars = 0;

       /* Set up status variables */
		dce_tx_interrupt_expected = FALSE;
       line_hdlc_waiting_CRC_sent = FALSE;
	 	
       line_io_enabled = TRUE;
	    dspdrv_ping_cram_intr();  /* kick start Merlin */
       		  
		line_enable_interrupts();

       /* Set up SCC */
		line_port_init(BIT_SYNC_PORT);

	 }

#if 0
   ubyte bufsize;

	line_disable_interrupts();

	bufsize = buf_size;

	vcv_dce_enabled = TRUE;

/* Start Change 5/15/1995. */
   vcv_null_underrun_on = FALSE;
/* End Change 5/15/1995. */

   /* HDLC operation */
	if (line_type == VCV_HDLC_MODE)
   {
      /* Set the vcv interrupt vector here */
      line_select_vector(VOICEVIEW_VECTOR);

		vcv_dce_mode = 1; /* set VoiceView global to HDLC */

      /* Set up data buffers */
		tx_char_count = 0;
		vcv_tx_packet_ptr = 0;
		vcv_tx_data_ptr = 0;
		rx_char_count = 0;
		vcv_rx_packet_ptr = 0;
		vcv_rx_data_ptr = 0;
		
      /* Set up status variables */
		line_bg_error_flags = 0;
		vcv_hdlc_tx_state = TXA_VCV_SOM;

		vcv_line_port_init(line_direction); 

	}
	else /* VCV_DATA_MODE */
	{
            while(1);
	}
/* Start Change 6/21/1995. */
	line_enable_interrupts();
/* End Change 6/21/1995. */
#endif
}

/******************************************************************************
/
/	Routine:	vcv_line_reset
/
/	Author: 	RSA
/
/	Creation Date:	December 14, 1994
/
/	Description:	This routine will halt vcv control over the line side of
/			the modem for a take over by the ACU
/
/	Input Parameters: None
/
/	Output Parameters: None
/
/	Global Variables Changed:  vcv_dce_enabled 
/
/	Users:	
/
/	*************************************************************
/	*			Modifications			    *
/	*************************************************************
/
/	Author & Date:	RSA
/	Description:
/       Reason:
/
*****************************************************************************/
void vcv_line_reset(void)
{
   /* With Merlin/Hook don't need to reset/disable UART.*/
	
   line_disable_interrupts(); 

	vcv_dce_enabled = FALSE;
   line_io_enabled = FALSE;

	line_enable_interrupts();
}

/******************************************************************************
/
/	Routine:	vcv_line_info
/
/	Author: 	RSA
/
/	Creation Date:	December 14, 1994
/
/	Description:	This routine will fill a table with info on the line 
/			side buffer for the vcv data mode.
/
/	Input Parameters: (ubyte *) pointer to table
/
/	Output Parameters: None
/
/	Global Variables Changed: None
/
/	Users:	
/
/	*************************************************************
/	*			Modifications			    *
/	*************************************************************
/
/	Author & Date:	RSA
/	Description:
/  Reason:
/
*****************************************************************************/
void vcv_line_info(ubyte *list_address)
{
	register uword *word_ptr;

	word_ptr = (uword *)list_address;

	*word_ptr++ = DCE_BUFFER_SIZE;
	*word_ptr++ = DCE_NEAR_FULL;
	*word_ptr++ = DCE_NEAR_EMPTY;
	*word_ptr++ = dce_rx_count;

}

/******************************************************************************
/
/	Routine:	vcv_line_flag
/
/	Author: 	RSA
/
/	Creation Date:	December 14, 1994
/
/	Description:	This routine will return an indication of flag
/                       detection since the last call to vcv_line_init.
/
/	Input Parameters: None
/
/	Output Parameters: None
/
/	Global Variables Changed:  vcv_dce_enabled 
/
/	Users:	
/
/	*************************************************************
/	*			Modifications			    *
/	*************************************************************
/
/	Author & Date:	RSA
/	Description:
/       Reason:
/
*****************************************************************************/
ubyte vcv_line_flag(void)
{
        return(TRUE);
}

/******************************************************************************
/
/	Routine:	vcv_line_lost_chars
/
/	Author: 	RSA
/
/	Creation Date:	December 14, 1994
/
/	Description:	This routine will return an indication of flag
/                       detection since the last call to vcv_line_init.
/
/	Input Parameters: None
/
/	Output Parameters: None
/
/	Global Variables Changed:  vcv_dce_enabled 
/
/	Users:	
/
/	*************************************************************
/	*			Modifications			    *
/	*************************************************************
/
/	Author & Date:	RSA
/	Description:
/       Reason:
/
*****************************************************************************/
uword vcv_line_lost_chars(void)
{
        return(vcv_lost_chars);
}

