#include "sys_def.h"

ubyte idle_flag;

void dte_enable(void);
void dte_enable(void)
{
}
void dte_disable(void);
void dte_disable(void)

{
}

void dte_init(ubyte, ubyte, ubyte,\
         ubyte, ubyte, ubyte,\
         ubyte, ubyte, ubyte,\
         ubyte, ubyte, ubyte,\
         ubyte, ubyte);

void dte_reconfigure(ubyte, ubyte, ubyte,\
         ubyte, ubyte, ubyte,\
         ubyte, ubyte, ubyte,\
         ubyte, ubyte, ubyte,\
         ubyte, ubyte);

uword dte_from_num(void);

void dte_from_clear(void);

void dte_to_clear(void);

char dte_from_char(void);

uword dte_to_free(void);

void dte_to_char (ubyte ch );

void dte_to_break (ubyte type, ubyte length);

void dte_timer (void);

void dte_falling_back_to_speed (void);

void dte_end_falling_back_to_speed (void);

void dte_reset(void);

uword dte_from_block_num(void);
void dte_from_block_update(word);
ubyte *dte_from_block_pointer(void);

uword dte_to_block_free(void);
void dte_to_block_update(word);
ubyte *dte_to_block_pointer(void);

void dte_dest_break_clear(void);


void dte_init(ubyte a, ubyte b, ubyte c,\
         ubyte d, ubyte e, ubyte f,\
         ubyte g, ubyte h, ubyte i,\
         ubyte j, ubyte k, ubyte l,\
         ubyte m, ubyte n)
{
    a = b = c = d = e = f = g = h = i = j = k = l = m = n;
}

void dte_reconfigure(ubyte a, ubyte b, ubyte c,\
         ubyte d, ubyte e, ubyte f,\
         ubyte g, ubyte h, ubyte i,\
         ubyte j, ubyte k, ubyte l,\
         ubyte m, ubyte n)
{
    a = b = c = d = e = f = g = h = i = j = k = l = m = n;
}

uword dte_from_num(void)
{
    return(0);
}

void dte_from_clear(void)
{
}

void dte_to_clear(void)
{
}

char dte_from_char(void)
{
    return(0);
}

uword dte_to_free(void)
{
    return(0);
}

void dte_to_char (ubyte ch )
{
    ch = 0;
}

void dte_to_break (ubyte type, ubyte length)
{
    type = length;
}

void dte_timer (void)
{
}

void dte_falling_back_to_speed (void)
{
}

void dte_end_falling_back_to_speed (void)
{
}

void dte_reset(void)
{
}

uword dte_from_block_num(void)
{
    return(0);
}

void dte_from_block_update(word one)
{
    one = 0;
}

ubyte *dte_from_block_pointer(void)
{
    return(0);
}

uword dte_to_block_free(void)
{
    return(0);
}

void dte_to_block_update(word one)
{
    one = 0;
}

ubyte *dte_to_block_pointer(void)
{
    return(0);
}

void dte_dest_break_clear(void)
{
}

