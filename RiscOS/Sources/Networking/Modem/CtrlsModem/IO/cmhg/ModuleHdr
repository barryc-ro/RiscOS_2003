#include "VersionNum"

title-string:	SoftModemCLMD3450

help-string:	CL-MD3450_Modem Module_MajorVersion_CMHG Module_MinorVersion_CMHG

date-string:    Module_Date_CMHG

initialisation-code: module_initialise

finalisation-code: module_finalise

service-call-handler:  module_service &45 &70

generic-veneers:  devicefs_entry/devicefs_handler,
		  callevery_veneer/callevery_handler,
		  podule_int_veneer/podule_int_handler,
                  timer1_veneer/timer1_handler

vector-handlers:  tickerv_veneer/tickerv_handler

;command-keyword-table:  module_command
;                  PktTrace(min-args:0, max-args:0, add-syntax:,
;                           help-text: "*PktTrace prints the Software Modem's packet trace\r",
;                           invalid-syntax: "Syntax: *PktTrace"),
;                  ModemStats(min-args:0, max-args:0, add-syntax:,
;                             help-text: "*ModemStats prints statistics about the Software Modem\r",
;                             invalid-syntax: "Syntax: *ModemStats"),
;                  StackDump(min-args:0, max-args:0, add-syntax:,
;                            help-text: "*StackDump dumps previously recorded a SVC stack snapshot\r",
;                            invalid-syntax: "Syntax: *StackDump"),
;		  ResetDSP(min-args:0, max-args:0, add-syntax:,
;                            help-text: "*ResetDSP resets the Controllerless Modem's DSP\r",
;			    invalid-syntax: "Syntax: *ResetDSP"),
;
;		  PokeDSP(min-args:2, max-args:2, add-syntax:,
;			  help-text: "*PokeDSP pokes the DSP's memory\r",
;                          invalid-syntax: "Syntax: *PokeDSP <address> <value>\r"),
;
;		  PeekDSP(min-args:1, max-args:1, add-syntax:,
;			  help-text: "*PeekDSP peeks the DSP's memory\r",
;                          invalid-syntax: "Syntax: *PeekDSP <address>\r")
;
