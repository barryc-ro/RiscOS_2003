/****************************************************************************
/
/   Copyright 1988,1989,1990,1991,1992,1993,1994, 1995.
/        All Rights Reserved by:
/	 RSA
/	 7701 Six Forks Road
/	 Suite 120
/	 Raleigh, NC  27615
/	 (919) 846-7171
/
/
/   This document contains material confidential to RSA its contents must
/   not be revealed, used or disclosed to anyone or company with out
/   written permission by RSA.	The information contained herein is solely
/   for the use of RSA.
/
/   File:	vv00prlb.c
/
/   Version:	1.00
/
/   Function:	This file contains the misc routines for the VoiceView
/               parse code.
/
/   Product:	
/
/   History:
/
/   Created: 
/
/   ---------------------------------------------------------
/   -		 Modifications		  -
/   ---------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*****************************************************************************/
#include "sys_def.h"
#include "vcv_def.h"
#include "vcv_mem.h"
#include "vcv_cpro.h"

ubyte vcv_get_next_char(ubyte **);
void vcv_unget_char(ubyte **, ubyte);
void vcv_store_hex_byte(ubyte, ubyte *);
void vcv_hex_d_to_a(ubyte, ubyte *, ubyte *);
ubyte vcv_parse_hex_a_to_d(ubyte *);

/******************************************************************************
/
/   Routine: vcv_get_next_char
/
/   Author: RSA
/
/   Creation Date: 9/30/94
/
/   Description: This Routine returns the next character in the command
/                buffer. It will also convert any lower case characters
/                to uppercase.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/
/   Output Parameters: ubyte    character pointed to by the command_ptr_ptr
/
/   Global Variables Changed: command_ptr_ptr
/
/   Users: vcv_parse sub functions
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
ubyte vcv_get_next_char(ubyte **command_ptr_ptr)
{
    if (**command_ptr_ptr >= 'a' && **command_ptr_ptr <= 'z')
        return(*(*command_ptr_ptr)++ - 'a' + 'A');
    else
        return(*(*command_ptr_ptr)++);
}

/******************************************************************************
/
/   Routine: vcv_unget_char
/
/   Author: RSA
/
/   Creation Date: 9/30/94
/
/   Description: This Routine will move the command pointer back the
/                indicated number of characters.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                     ubyte     num
/                               number of times to decrement the command pointer.
/
/   Output Parameters: ubyte    character pointed to by the command_ptr_ptr
/
/   Global Variables Changed: command_ptr_ptr
/
/   Users: vcv_parse sub functions
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -----------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
void vcv_unget_char(ubyte **command_ptr_ptr, ubyte num)
{
    *command_ptr_ptr -= num;
}
/******************************************************************************
/
/   Routine: vcv_parse_a_to_d
/
/   Author: RSA
/
/   Creation Date: 09/22/92
/
/   Description: This Routine converts an ASCII characters to their
/                decimal value.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/
/   Output Parameters: ubyte    decimal value
/
/   Global Variables Changed: None
/
/   Users: vcv_parse sub functions
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
ubyte vcv_parse_a_to_d(ubyte **command_ptr_ptr)
{
    uword data_byte;
    ubyte ch;

    vcv_error_occurred = FALSE;
    data_byte = 0;  /* initialize return value */
    ch = vcv_get_next_char(command_ptr_ptr); /* get the first char */
    while (ch >= '0' && ch <= '9')  /* is it in range */
    {
        data_byte = (data_byte * 10) + (ch - '0'); /* translate and add */

        if (data_byte > 255) /* have we overrun */
        {
            vcv_error_occurred = TRUE; /* error indication */
            return((ubyte)data_byte); /* return unused value */
        }
        ch = vcv_get_next_char(command_ptr_ptr); /* get next char */
    }

    vcv_unget_char(command_ptr_ptr, 1);   /* return unused character */
    return((ubyte)data_byte);   /* respond with converted value */
}

/******************************************************************************
/
/   Routine: vcv_parse_hex_a_to_d
/
/   Author: RSA
/
/   Creation Date: 09/22/92
/
/   Description: This Routine converts an ASCII characters to their
/                hex value.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/
/   Output Parameters: ubyte    hex value
/
/   Global Variables Changed: None
/
/   Users: vcv_parse sub functions
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
ubyte vcv_parse_hex_a_to_d(ubyte *command_ptr_ptr)
{
    uword data_byte;
    ubyte ch;

    vcv_error_occurred = FALSE;
    data_byte = 0;  /* initialize return value */

    ch = *command_ptr_ptr++; /* get the first char */
    /*while a character is in range */
    while ((ch >= '0' && ch <= '9') || (ch >= 'A' && ch <= 'F'))
    {
        data_byte <<= 4; /* multiply by a magnitude */
        /* translate and add new value */
        data_byte |= (ch >= '0' && ch <= '9') ? ch - '0' : ch - 'A' + 10;

        if (data_byte > 0xff) /* if overrun */
        {
             vcv_error_occurred = TRUE; /* indicate an error */
             return((ubyte)data_byte); /* return unused value */
        }
        ch = *command_ptr_ptr++; /* get next character */
    }

    command_ptr_ptr--;   /* return unused character */
    return((ubyte)data_byte);   /* respond with converted value */
}

/******************************************************************************
/
/   Routine: vcv_store_hex_byte
/
/   Author: RSA
/
/   Creation Date: 09/21/92
/
/   Description: This routine receives a decimal number and a string pointer.
/                It converts the number to hex ASCII and stores it in the
/                string.
/
/   Input Parameters: ubyte     decimal number
/                     ubyte **  string_ptr_ptr   
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: vcv_execute_command() request commands.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
void vcv_store_hex_byte(ubyte data_byte, ubyte *string_ptr_ptr)
{
    ubyte upper_char, lower_char;

    /* translate the data byte into an ASCII equivalent */
    vcv_hex_d_to_a(data_byte, &upper_char, &lower_char);
    *string_ptr_ptr++ = upper_char;
    *string_ptr_ptr++ = lower_char;
}

/******************************************************************************
/
/   Routine: vcv_hex_d_to_a
/
/   Author: RSA
/
/   Creation Date: 09/21/92
/
/   Description: This routine receives a decimal number and returns an
/                equivalent two hex ASCII character representation.
/
/   Input Parameters: ubyte decimal number
/
/   Output Parameters: ubyte    most significant ASCII character
/                      ubyte    least significant ASCII character
/
/   Global Variables Changed: none
/
/   Users: 
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
void vcv_hex_d_to_a(ubyte data_char, ubyte *upper_char_ptr, ubyte *lower_char_ptr)
{
    ubyte temp_char;

    /* get the upper nible */
    temp_char = (data_char >> 4) & 0x0F;
    /* translate into ASCII */
    *upper_char_ptr = temp_char < 10 ? temp_char + '0' : temp_char - 10 + 'A';
    /* get the lower nible */
    temp_char = data_char & 0x0F;
    /* translate into ASCII */
    *lower_char_ptr = temp_char < 10 ? temp_char + '0' : temp_char - 10 + 'A';
}


