/******************************************************************************
/
/   Copyright 1994, 1995
/   All Rights Reserved by :
/   RSA
/   7701 Six Forks Road
/   Suite 120
/   Raleigh, NC  27615
/   (919) 846-7171
/
/   This document contains material confidential to RSA. Its contents
/   must not be revealed, used or disclosed to anyone or company without
/   written permission by RSA. The information contained herein is solely
/   for the use of RSA.
/
/   File     : dv02de06.h
/
/   Version  : 1.00
/
/   Function : This file contains the defines for the Voice data pump code
/              for the Rockwell RCV144DPL
/
/   Product  : Voice Core Code
/
/   Platform : Hitachi H8
/
/   History  : 
/
/   Created  : 01/13/95 
/
/   -----------------------------------------------------------
/   -                       Modifications                     -
/   -----------------------------------------------------------
/
/   Author & Date : RSA 
/   Description   : 
/   Reason        : 
/
/  Author & Date: RSA 5/18/1995.
/  Description: Added the VOICE_VECTOR define.
/  Reason: Needed for the direct jumping to the specific interrupt routines.
/
/  Author & Date: RSA 5/24/1995.
/  Description: Added the define for the tdbe_bit.
/  Reason: Needed for the interrupt routines to rid of the "magic" numbers
/          in the code.
/
/  Author & Date: RSA 6/7/1995.
/  Description: Fix for the 2225hz Bell Answer Tone reporting.
/  Reason: Was not an option in previous versions.
/
******************************************************************************/

/*******************************************************************************
/                                                                              /
/    MODEM TASK MACRO DEFINITIONS                                                   /
/                                                                                        /
*******************************************************************************/
#define dp_vce_and_byte( x, y) (*((ubyte *) x) &= y)
#define dp_vce_or_byte( x, y) (*((ubyte *) x) |= y)
#define dp_vce_out_byte( x, y) (*((ubyte *) x) = y)
#define dp_vce_in_byte( x) (*((ubyte *) x))

/*******************************************************************************
/                                                                                        /
/       ROCKWELL RCV144DPL V.32BIS DATA PUMP HOST REGISTERS                           /
/                                                                                        /
*******************************************************************************/
/* Start Change 5/18/1995. */
#define VOICE_VECTOR    6
/* End Change 5/18/1995. */

#define MODULE_ADDR        0x600000    /* Chip select line */
#define REG_SEP            1            /* Register separation */

#define TX_LOW_BYTE_1ST_WORD        MODULE_ADDR + (0x17*REG_SEP)
#define TX_HIGH_BYTE_1ST_WORD        MODULE_ADDR + (0x10*REG_SEP)

#define RX_LOW_BYTE_1ST_WORD        MODULE_ADDR + (0x16*REG_SEP)
#define RX_HIGH_BYTE_1ST_WORD        MODULE_ADDR + (0x00*REG_SEP)

#define STATUS_CONFIG_INT_REG        MODULE_ADDR + (0x1f*REG_SEP)
#define TX_RX_INT_REG                MODULE_ADDR + (0X1e*REG_SEP)

#define tpdm_reg                        MODULE_ADDR + (0x08*REG_SEP)
#define config_reg                    MODULE_ADDR + (0x12*REG_SEP)
#define ceq_reg                        MODULE_ADDR + (0x05*REG_SEP)
#define tde_reg                        MODULE_ADDR + (0x02*REG_SEP)
#define cden_reg                        MODULE_ADDR + (0x02*REG_SEP)
#define dcden_reg                        MODULE_ADDR + (0x02*REG_SEP)
#define scde_reg                        MODULE_ADDR + (0x02*REG_SEP)
#define sdcde_reg                        MODULE_ADDR + (0x02*REG_SEP)
#define decbits_reg                    MODULE_ADDR + (0x06*REG_SEP)
#define codbits_reg                    MODULE_ADDR + (0x02*REG_SEP)
#define txv_reg                        MODULE_ADDR + (0x11*REG_SEP)
#define rxv_reg                        MODULE_ADDR + (0x11*REG_SEP)
#define txsq_reg                        MODULE_ADDR + (0x05*REG_SEP)
#define vsync_reg                        MODULE_ADDR + (0x0a*REG_SEP)
#define offhook_reg                    MODULE_ADDR + (0x07*REG_SEP)
#define lsb_reg                        MODULE_ADDR + (0x18*REG_SEP)
#define msb_reg                        MODULE_ADDR + (0x19*REG_SEP)
#define dtmf_reg                        MODULE_ADDR + (0x1b*REG_SEP)
#define ri_reg                            MODULE_ADDR + (0x0f*REG_SEP)
#define tone_reg                        MODULE_ADDR + (0x0b*REG_SEP)
#define rts_reg                        MODULE_ADDR + (0x08*REG_SEP)
#define dtr_reg                        MODULE_ADDR + (0x09*REG_SEP)
#define data_reg                        MODULE_ADDR + (0x09*REG_SEP)
#define tlvl_reg                        MODULE_ADDR + (0x13*REG_SEP)
#define dtmfsel_reg                    MODULE_ADDR + (0x09*REG_SEP)
#define hi_addr_reg                    MODULE_ADDR + (0x1d*REG_SEP)
#define lo_addr_reg                    MODULE_ADDR + (0x1c*REG_SEP)
#define memory_access_reg            MODULE_ADDR + (0x1d*REG_SEP)
/* Start Change 6/5/1995. */
#define fifoen_reg               MODULE_ADDR + (0x04*REG_SEP)
/* End Change 6/5/1995. */
/* Start Change 6/8/1995. */
#define vpause_reg               MODULE_ADDR + (0x01*REG_SEP)
/* End Change 6/8/1995. */

/************************************************************************
/                           BIT DEFINITIONS
/                       FOR DATA PUMP REGISTERS
************************************************************************/

#define tpdm_bit            0x40
#define ceq_bit            0x08
#define tde_bit            0x80
#define cden_bit            0x10
#define dcden_bit            0x20
#define scde_bit            0x40
#define sdcde_bit            0x80
#define codecbits_2        0x00
#define codecbits_3        0x01
#define codecbits_4        0x02
#define rxv_bit            0x08
#define txv_bit            0x10
#define newc_bit            0x01
#define txsq_bit            0x10
#define vsync_bit            0x04
#define offhook_bit        0x02
#define tdbia_bit            0x80
#define tdbie_bit            0x20
/* Start Change 5/24/1995. */
#define tdbe_bit            0x04
/* End Change 5/24/1995. */
#define rdbia_bit            0x40
#define rdbie_bit            0x04
#define rdbf_bit            0x01
#define edet_bit            0x80
#define dtdet_bit            0x40
#define dtmfd_bit            0x10
#define ri_bit                0x08
#define tonea_bit            0x80
#define toneb_bit            0x40
#define tonec_bit            0x20
#define atv25_bit            0x10
#define rts_bit            0x01
#define dtr_bit            0x01
#define data_bit            0x04
#define dtmfsel_bit        0x20
#define ram_access_bit    0x80
#define memw_bit            0x20
#define ri_run_bit        0x01

/* Start Change 6/5/1995. */
#define fifoen_bit      0x10
/* End Change 6/5/1995. */

/* Start Change 6/7/1995. */
#define atbel_bit            0x08
/* End Change 6/7/1995. */

/* Start Change 6/8/1995. */
#define vpause_bit      0x20
/* End Change 6/8/1995. */

/* defines for configuration register */
#define dtmf_transmit    0x81
#define dtmf_receiver    0x86
#define single_tone        0x80
#define dual_tone            0x83
#define data_mode            0x76

/* defines for DSP RAM locations */
#define TONE_GEN_1_CONST_LOW        0x0280
#define TONE_GEN_1_CONST_HIGH        0x0281
#define TONE_GEN_2_CONST_LOW        0x0282
#define TONE_GEN_2_CONST_HIGH        0x0283
#define TONE_ON_FOR_DTMF            0x0218
#define INTERDIGIT_DELAY_DTMF        0x0219
#define RANOISE                        0x0a35
#define MTHRESH                        0x0a36
#define SILSPE                            0x0b37
#define SPESIL                            0x0b38
#define MADAPT                            0x0b39
#define ADCS                            0x0bd1
#define RAM_RI_FLAG                    0x0066

/* start change 12/15/95 rjm */
#define TWIST4                   0x0977
#define DEF_TWIST4               0x1300   /* increase acceptable range  */

#define TWIST8                   0x0877
#define DEF_TWIST8               0x2800   /* use std default  */
/* end change 12/15/95 rjm */

/* Possible values for the DTMFW nibble of dtmf_reg */
#define DETECT_DTMF_0                0x00
#define DETECT_DTMF_1                0x01
#define DETECT_DTMF_2                0x02
#define DETECT_DTMF_3                0x03
#define DETECT_DTMF_4                0x04
#define DETECT_DTMF_5                0x05
#define DETECT_DTMF_6                0x06
#define DETECT_DTMF_7                0x07
#define DETECT_DTMF_8                0x08
#define DETECT_DTMF_9                0x09
#define DETECT_DTMF_AST               0x0a
#define DETECT_DTMF_PND               0x0b
#define DETECT_DTMF_A                0x0c
#define DETECT_DTMF_B                0x0d
#define DETECT_DTMF_C                0x0e
#define DETECT_DTMF_D                0x0f
#define TONE_DETECTED_1100HZ        0x0100
#define TONE_DETECTED_2100HZ        0x0200
/* Start Change 6/7/1995. */
#define TONE_DETECTED_2225HZ        0x000
/* End Change 6/7/1995. */

#define TIA_IS_101              1
#define ROCKWELL                2      

/* Defines for DTMF dialing */
#define DTMF_0_CODE             0x0
#define DTMF_1_CODE             0x1
#define DTMF_2_CODE             0x2
#define DTMF_3_CODE             0x3
#define DTMF_4_CODE             0x4
#define DTMF_5_CODE             0x5
#define DTMF_6_CODE             0x6
#define DTMF_7_CODE             0x7
#define DTMF_8_CODE             0x8
#define DTMF_9_CODE             0x9
#define DTMF_ASTRIX_CODE        0x0A
#define DTMF_POUND_CODE         0x0B
#define DTMF_A_CODE             0x0C
#define DTMF_B_CODE             0x0D
#define DTMF_C_CODE             0x0E
#define DTMF_D_CODE             0x0F


#define NO_TONE 0xFF
#define OFF     0
#define ON      1

/* Define for the variable DP_VCE_DATA_DIRECTION */
#define     IDLE              0        /* changed by ramn on 10/10/95 */
#define TRANSMIT_DATA   1
#define RECEIVE_DATA        2

#define DP_VCE_BUFFER_SIZE       512     /* Codec receive and transmit buffer size */
#define DP_VCE_BUFFER_WRAP       0x1FF   /* Mask for the codec insert and remove */


/* Compression methods defined for pn-2986 */
#define DP_COMP_NONE            0
#define DP_COMP_SIGNEDPCM     1
#define DP_COMP_LIN16         2
#define DP_COMP_ALAW            3
#define DP_COMP_ULAW            4
#define DP_COMP_DPCM            5
#define DP_COMP_ADPCM16      6
#define DP_COMP_VSELP         7
#define DP_COMP_RELP            8
#define DP_COMP_CELP            9
#define DP_COMP_CVSD            10
#define DP_COMP_TDHS            11
#define DP_COMP_ADM            12
#define DP_COMP_DM            13
#define DP_COMP_APC            14
#define DP_COMP_ATC            15
#define DP_COMP_SBC            16
#define DP_COMP_GSM            17
#define DP_COMP_LPC            18
#define DP_COMP_EAPDPCM      19
#define DP_COMP_MP_LPC         20
#define DP_COMP_LSLTCQ         21

#define NO_PARM                         0

/* Defines for the command parameter passed to DP_VCE_GET_CAPABILITY */
#define CMD_NUM_COMP_METHODS    0
#define CMD_RCV_GAIN_RANGE         1
#define CMD_RCV_GAIN_DEFAULT      2
#define CMD_TX_VOL_RANGE         3
#define CMD_TX_VOL_DEFAULT         4
#define CMD_LINE_SELECT          5
#define CMD_COMP_DEFAULT         6
#define CMD_SAMP_RATE_DEFAULT      7

/*#define NUMBER_OF_COMP_METHODS  9 */          /* was 2 changed by ramn on 10/10/95 */    
                                                        /* Size of the comp_method_tbl[] and
                                           company_tbl[] arrays */        
#define NUMBER_OF_COMP_METHODS  8 /* ramn 2/19/96 */

#define NUM_OF_BPS              18      /* Number of columns in the bps_tbl[]
                                           array */
#define NUM_OF_RANGES           10      /* Number of columns in the samp_range_tbl[]
                                           array */
#define NUM_OF_TM               10      /* Number of columns in the timing_marks_tbl[]
                                           array */
#define NUM_OF_SIL_SEN          10      /* Number of columns in the silence_sens_tbl[]
                                           array */
#define NUM_OF_SIL_EXP          10      /* Number of columns in the silence_exp_tbl[]
                                           array */
#define SIN_TABLE_SIZE          35      /* Size of the sin_tbl[] array */

#define NUM_TONE_CNG_COEFF      41

/* Compression capability structure */
struct comp_struct
{
    ubyte id;
    ubyte *company;
    ubyte bps_range[NUM_OF_BPS];
    uword samp_range[NUM_OF_RANGES];
    ubyte timing_marks;
    ubyte silence_sen;
    ubyte silence_exp;
    ulong tx_mode_events;
    ulong rx_mode_events;
    ulong idl_mode_events;
};

/****************************************************************************
*
* changed by ramn on 10/10/95
*
* old values shown as comments
*
*****************************************************************************/

/* NOTE: Determine the default from AT&T */
#define RECEIVE_GAIN_DEFAULT    128         /* 18 */
#define RECEIVE_GAIN_LOW        121        /* 0     */
#define RECEIVE_GAIN_HIGH        131        /* 43 */

/* NOTE: Determine the default from AT&T */
#define TRANSMIT_VOL_DEFAULT   128         /* 10 */
#define TRANSMIT_VOL_LOW         121        /* 0     */
#define TRANSMIT_VOL_HIGH         131        /* 43 */


/************ till here by ramn *********************************************/

/* Define for Local Phone relay */
#define LOCAL_PHONE                0xC00025

/* Defines for speaker control */
#define VOL1_BIT                    0x08    
#define VOL1_MASK                    0x0f7
#define VOL2_BIT                    0x04
#define VOL2_MASK                    0x0fb
#define SPK_ON_BIT                0x02
#define SPK_ON_MASK                0x0fd
#define SPK0                        0x01
#define SPK1                        0x02
#define SPKR_PORT_ADDR

/* Bit mapped uword indicating the possible voice I/O devices that are components
   in the possible hardware configurations
    0 - On hook; Local Phone connected to telco
    1 - Off hook; Local phone detecting off hook
    2 - On hook; Local phone connected to DCE
    3 - Off hook; Local phone connected to telco
    4 - On hook; Internal speaker connected to DCE; 
        local phone connected to telco
    5 - Off hook; Internal speaker connected to telco; 
        local phone detecting off hook
    6 - On hook; Internal microphone connected to DCE; 
        local phone connected to telco
    7 - Off hook; Internal microphone and internal speaker connected to telco; 
        local phone detecting off hook
    8 - On hook; External speaker connected to DCE; 
        local phone connected to telco
    9 - Off hook; External speaker connected to telco; 
        local phone detecting off hook
    10- Off hook; Internal microphone and external speaker connected to telco; 
        local phone detecting off hook
    11- On hook; External microphone connected to DCE; 
        local phone connected to telco
    12- Off hook; External microphone and internal speaker connected to telco; 
        local phone detecting off hook
    13- Off hook; External microphone and external speaker connected to telco; 
        local phone detecting off hook
    14- On hook; External microphone and speaker combo connected to DCE; 
        local phone connected to telco
    15- Off hook; External microphone and speaker combo connected to DCE; 
        local phone detecting off hook
*/
/* Start Change 7/28/1995. */
#define VOICE_IO_DEVICES        0xC003                             
/* End Change 7/28/1995. */


/* Defines for the call progress initialization */
#define DETECT_DTMF             0x01
#define DETECT_1100HZ        0x02
#define DETECT_1300HZ        0x04
#define DETECT_2100HZ        0x08
#define DETECT_2225HZ        0x10
#define DETECT_RINGBACK            0x20
#define DETECT_BUSY        0x40
#define DETECT_DIALTONE            0x80

/* Return values for DP_VCE_CALL_PROGRESS() */
#define CALL_PROG_DTMF_0        0
#define CALL_PROG_DTMF_1        1
#define CALL_PROG_DTMF_2        2
#define CALL_PROG_DTMF_3        3
#define CALL_PROG_DTMF_4        4
#define CALL_PROG_DTMF_5        5
#define CALL_PROG_DTMF_6        6
#define CALL_PROG_DTMF_7        7
#define CALL_PROG_DTMF_8        8
#define CALL_PROG_DTMF_9        9
#define CALL_PROG_DTMF_AST      10
#define CALL_PROG_DTMF_PND      11
#define CALL_PROG_DTMF_A        12
#define CALL_PROG_DTMF_B        13
#define CALL_PROG_DTMF_C        14
#define CALL_PROG_DTMF_D        15
#define CALL_PROG_2100HZ        16
#define CALL_PROG_BUSY          17
#define CALL_PROG_1100HZ        18
#define CALL_PROG_DIALTONE      19
#define CALL_PROG_1300HZ        20
#define CALL_PROG_2225HZ        21
#define CALL_PROG_RING_ON       22
#define CALL_PROG_RING_OFF      23
#define CALL_PROG_RING_BACK     24
#define CALL_PROG_DTMF_SHIELD   25
#define CALL_PROG_DTMF_END      26

#define DTMF_MIN_QUALIFIER      3
#define DTMF_TONE_QUALIFIER     5
#define DTMF_QUALIFY_TIME       7       /* 70 ms */

#define LENGTH_1100HZ_TONE_ON   20              /* approx. 0.5 second timer */
#define LENGTH_1100HZ_TONE_OFF  170             /* approx. 3 second timer */
#define RING_OFF_THRESHOLD      40

#define RING_ON_MAX_TIME        200             /* 2.0 s */
#define RING_OFF_MAX_TIME       400             /* 4.0 s */    

#define LENGTH_2100HZ_TONE      10              /* approx. 100 msecs timer */

/* Defines for the calling tone call progress state machine */
#define LOOK_FOR_TONE           0        
#define INIT_TIME_TONE_ON       1
#define LOOK_FOR_SILENCE        2
#define TIME_SILENCE            3

/* Defines for the RING call progress state machine */
#define LOOK_FOR_RINGON         0
#define LOOK_FOR_RINGOFF        1
#define RING_OFF_1_SEC          2

/* Defines for call progress detection */
/* Frequencies are detected once every 30ms so call progress time constants 
   represent a duration of the number multiplied by 10ms */
/*  Busy 0.5s on  0.5s off */
#define BUSY_MIN_TONE_ABSENCE           40              /* 0.40s */
#define BUSY_MIN_TONE_PRESENCE          40              /* 0.40s */
#define BUSY_MAX_TONE_ABSENCE           60              /* 0.60s */
#define BUSY_MAX_TONE_PRESENCE          60              /* 0.60s */

/* Ring 2s on  4s off */
#define RING_BACK_MIN_TONE_ABSENCE      240             /* 2.4s */
#define RING_BACK_MAX_TONE_ABSENCE      520             /* 5.2s */
#define RING_BACK_MIN_TONE_PRESENCE     60              /*  .6s */
#define RING_BACK_MAX_TONE_PRESENCE     320             /* 3.2s */

#define DIAL_TONE_MIN_TIME              200             /* 2.0s */


/* Start Change 6/7/1995. */
/* Defines for silence sensitivity */
#define DP_LEAST_SENS_SILENCE       148
#define DP_MOST_SENS_SILENCE        96 
#define DP_SILENCE_DETC_OFF         0
/* End Change 6/7/1995. */
