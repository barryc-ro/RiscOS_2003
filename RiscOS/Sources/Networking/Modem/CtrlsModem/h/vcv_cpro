/******************************************************************************
/
/        Copyright 1994
/        All Rights Reserved by :
/	 RSA
/	 7701 Six Forks Road
/	 Suite 201
/	 Raleigh, NC  27615
/	 (919) 846-7171
/
/   This document contains material confidential to RSA. Its contents
/   must not be revealed, used or disclosed to anyone or company without
/   written permission by RSA. The information contained herein is solely
/   for the use of RSA.
/
/   File     : vv00cpro.h
/
/   Version  : 1.00
/
/   Function : Contains the external function prototypes for VoiceView module.
/
/   Product  : VoiceView Core Code
/
/   History  :
/
/   Created  : 1/14/93
/
/   -----------------------------------------------------------
/   -			    Modifications		      -
/   -----------------------------------------------------------
/
/       Author & Date: RSA
/       Description:
/       Reason:
/
******************************************************************************/

/* VV00PRLB.C */

extern ubyte vcv_get_next_char(ubyte **);
extern void vcv_unget_char(ubyte **, ubyte);
extern void vcv_store_hex_byte(ubyte, ubyte *);
extern void vcv_hex_d_to_a(ubyte, ubyte *, ubyte *);
extern ubyte vcv_parse_hex_a_to_d(ubyte *);

/* VV00RX.C */
extern ubyte vcv_control_rx(void);
extern void vcv_rx_mi(void);
extern ubyte vcv_return_to_voice(void);
extern ubyte vcv_send_frames_dte(void);
extern ubyte vcv_out_queue(struct vcv_hdlc_packet *);
extern ubyte vcv_get_iframe(void);
extern ubyte vcv_send_supervisory(ubyte, ubyte, ubyte);
extern ubyte vcv_dte_check_cancel(void);

/* VV00TX.C */
extern void vcv_rnr_state(void);
extern ubyte vcv_control_tx(void);
extern ubyte vcv_check_ack(void);
extern ubyte vcv_get_one_frame(void);
extern uword vcv_package_frame(ubyte);

/* VV00EX.C */
/* start change keh 10/4/95 => prototypes of modified AT command file */
#if 0
extern ubyte vcv_execute_command(uword, ubyte *, ubyte **);
extern ubyte vcv_sip_command(void);
extern ubyte vcv_sic_command(void);
extern ubyte vcv_ser_query(ubyte *, ubyte **);
extern void  vcv_sds_command(ubyte *, ubyte **);
extern void  vcv_sqr_command(ubyte *, ubyte **);
extern void  vcv_ssp_command(ubyte *, ubyte **);
extern void  vcv_scd_command(ubyte *, ubyte **);
extern void  vcv_sds_query(void);
extern void  vcv_sqr_query(void);
extern ubyte vcv_ssp_query(void);
extern ubyte vcv_ssr_query(void);
extern ubyte vcv_scd_query(void);
extern void  vcv_ssr_command(ubyte *, ubyte **);
#endif
ubyte vcv_execute_command(uword,ubyte *,ubyte **);
void vcv_ssp_query(void);
void vcv_scd_query(void);
void vcv_ssr_query(void);
ubyte vcv_sip_command(void);
ubyte vcv_ssp_command(ubyte *);
ubyte vcv_scd_command(ubyte *);
ubyte vcv_sqr_command(ubyte *);
void vcv_sqr_query(void);
/* end change keh 10/4/95 => prototypes of modified AT command file */

/* VV00IF.C */
extern ubyte voiceview_bg(ubyte **);
extern void init_vcv(void);
extern void vcv_timer(void);

/* VV00LIB.C */
extern void vcv_schedule_tx_packet(ubyte, ubyte *, ubyte);
extern ubyte *vcv_rx(void);
extern ubyte *vcv_tx(void);
extern ubyte vcv_error(ubyte, ubyte);
extern uword vcv_stored_capabilities(ubyte, uword);
extern ubyte vcv_check_mi(struct vcv_hdlc_packet *);
extern void vcv_get_mi_string(ubyte, ubyte *);
extern void vcv_update_options(void);
extern ubyte vcv_check_options(ubyte, ubyte);
extern void vcv_set_statevars(ubyte, ubyte);
extern void vcv_init_statevars(void);

/* VV00MN.C */
extern ubyte vcv_bg(ubyte **msg);
extern ubyte vcv_tx_startseq_state(void);
extern ubyte vcv_wait_ua_state(void);
extern ubyte vcv_starttone_state(void);
extern ubyte vcv_tx_capquery_state(void);
extern ubyte vcv_rx_capquery_state(void);
extern ubyte vcv_capresp_state(ubyte);
extern ubyte vcv_verify_startseq_state(void);
/* start change keh 9/27/95 add call to reinit VV */
extern void vcv_reset(void);
extern void vcv_dte_config(ubyte,ubyte,ubyte,ubyte);
/* end change keh 9/27/95 add call to reinit VV */

/* MT00VV06.C */
/* start change keh 10/4/95 => prototypes of modified modeme task file */
#if 0
extern void vcv_config_starttone(void);
extern void vcv_config_adsicas(void);
extern ubyte vcv_check_tone(ubyte);
extern void vcv_add_to_frame(ubyte);
extern void vcv_configure_tone_rx(ubyte);
extern void vcv_timer_delay(uword);
extern void vcv_transmitter_on(void);
extern void vcv_transmitter_off(void);
extern void vcv_modem_config(ubyte,ubyte);
extern ubyte vcv_check_CD(void);
extern ubyte vcv_check_flags(void);
#endif
extern void modem_vcv_config_starttone(void);
extern void modem_vcv_config_adsicas(void);
extern void modem_vcv_transmitter(ubyte state);
extern void modem_vcv_configure_tone_rx(ubyte tone);
extern void modem_config_vcv(ubyte mode, ubyte speed);
extern void modem_vcv_timer_delay(uword delay_time);
extern ubyte modem_vcv_check_CD();
extern void modem_init_vcv_call_progress(ubyte type);
extern ubyte modem_vv_call_progress(void);
extern ubyte modem_handset_hook(void);
extern void modem_isolate_handset(ubyte state);
extern void modem_vcv_td_relay(ubyte type);
extern void modem_voiceview_answtone(ubyte state);
/* end change keh 10/4/95 => prototypes of modified modeme task file */
