/****************************************************************************
/
/   Copyright, 1991,1992,1993,1994.       All Rights Reserved by:
/       RSA
/       7701 Six Forks Road
/       Suite 120
/       Raleigh, NC  27615
/       (919) 846-7171
/
/
/   This document contains material confidential to RSA its contents must
/   not be revealed, used or disclosed to anyone or company with out
/   written permission by RSA.  The information contained herein is solely
/   for the use of RSA.
/
/   File: f1x00def.h
/
/   Module Version: 4.03
/
/   Function: This file contains constants and definitions for the class 1 FAX.
/
/   Product: FAX class 1 core code
/
/   History:
/
/   Created: 01/15/92
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
****************************************************************************/

/* Defines for the command parameter passed to fax_execute_cmd() */
#define FAX1_FTS_COMMAND        1
#define FAX1_FRS_COMMAND        2
#define FAX1_FTM_COMMAND        3
#define FAX1_FRM_COMMAND        4
#define FAX1_FTH_COMMAND        5
#define FAX1_FRH_COMMAND        6
#define FAX1_FTM_QUERY          7
#define FAX1_FRM_QUERY          8
#define FAX1_FTH_QUERY          9
#define FAX1_FRH_QUERY          10

/* fax1_execute_command() return codes */
#define GOTO_ONLINE         0
#define CONTINUE_PARSING    1
#define TERMINATE_WITH_ERROR 2
#define NOTA_COMMAND        3

/* fax1_bg() return codes */
#define STAY_ONLINE         0
#define STAY_PARSE          1
#define GOTO_PARSE_OK       2
#define GOTO_PARSE_NO_CARRIER 3
#define GOTO_PARSE_ERROR    4
#define GOTO_HANGUP         5
#define GOTO_ONLINE_BG      6
#define GOTO_PARSE_FCERROR  7

/* fax1 state definitions */
#define IDLE                0
#define CONFIGURE_FTM       1
#define EXECUTE_FTM         2
#define COMPLETE_FTM        3
#define CONFIGURE_FRM       4
#define EXECUTE_FRM         5
#define COMPLETE_FRM        6
#define CONFIGURE_FTH       7
#define EXECUTE_FTH         8
#define COMPLETE_FTH        9
#define CONFIGURE_FRH       10
#define EXECUTE_FRH         11
#define COMPLETE_FRH        12

/* fax2 sub state definitions */
#define INITIALIZE          0
#define WAIT_TO_CONFIGURE   1
#define WAIT_FOR_CTS        2
#define WAIT_FOR_CD         3
#define FLUSH_LINE          4
#define COMPLETE            5
#define WAIT_DLE_ETX        6
#define FLUSH_DTE           7
#define WAIT_FOR_FLAGS      8
#define WAIT_TX_COMPLETE    9

/* defines for fax2_init() passed in parameter */
#define INIT_POWERUP        0       /* called from powerup */
#define INIT_AND_F          1       /* called from AT&F or ATZ command */
#define INIT_FIP            2       /* called from AT+FIP command */

#define DLE                 0x10    /* DLE shielding character */
#define ETX                 0x03    /* end of data control character */
#define DC1                 0x11    /* XON flow control character */
#define DC3                 0x13    /* XOFF flow control character */

/* connect response strings */
#define VERBOSE_CONNECT_STRING  "\r\nCONNECT\r\n"
#define NUMERIC_CONNECT_STRING  "1\r"

#define RX_MODE             0       /* configure for receive operations */
#define TX_MODE             1       /* configure for transmit operations */

#define DATA_MODE           0       /* configure for generic sync data mode */
#define HDLC_MODE           1       /* configure for HDLC control and ECM mode */

#define ANSWER              0       /* answer connection establishment */
#define ORIGINATE           1       /* originate connection establishment */

#define NUMERIC             0       /* numeric response format */
#define VERBOSE             1       /* verbose response format */

#define NO_FLOW_CONTROL     0       /* configure I/O for no flow control */

#define NO_FLOW             1       /* do not configure for flow control */
#define MODEM_TO_APP_FLOW   2       /* configure flow control modem to APP */
#define APP_TO_MODEM_FLOW   3       /* configure flow control APP to modem */

#define FINAL_FRAME_MASK    0x10    /* indicates last packet when ORed w/ CONTROL_VALUE */

#define SILENCE             4       /* line silence indication from modem task */

#define HDLC_BUFFER_COUNT   5       /* number of allocated control HDLC buffers */

#define DATA_CHARS_IN_DCE   2       /* # of chars allowed in DCE buffer while */
                                    /* waiting to detect carrier */
/* start change 2/22/95 rjm */
/* fax1 timing constants */
#define DELAY_HDLC_PROPAGATE 8      /* data pump propagation at V.21 ch2 */
/* start change 2/22/95 rjm */

#define DELAY_DATA_PROPAGATE 5      /* data pump propagation at high speeds */
#define DELAY_TO_CONFIGURE_TX 0     /* time for remote to configure to receive */
#define DELAY_1SECOND_FLAGS 100     /* idle flags in V.21 ch2 for remote PLL */

/*mrm delay to get carrier*/

#define DELAY_IO_PROPEGATE  200       /* time for line I/O to give up packet */

#if 0
define DELAY_IO_PROPEGATE  20       /* time for line I/O to give up packet */
#endif

#define DELAY_BETWEEN_DTE_CHARS 3   /* time after last char for APP to underrun */

/* changed by ramn based on inputs from mohammad was 500 2/12/96 */
#define DELAY_5SECOND_DTE   400     /* five second timer for NULL's */

#define INFO_LENGTH         70      /* command response text information size */

/* fax1 structure definitions */

#define CONTROL_PACKET_SIZE 100     /* control packet size (1 sec at V.21 ch2) */

typedef struct hdlc_buffer_struct
    {
        ubyte status;   /* used in receive mode to indicate error in reception */
        ubyte dummy;    /* unused byte embedded for alignment */
        uword count;    /* number of bytes in the packet */
        ubyte data[CONTROL_PACKET_SIZE];    /* array holding packet contants */
    } hdlc_buffer_type;

