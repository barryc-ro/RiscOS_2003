#
#     Copyright, 1988, 1989, 1990, 1991, 1992, 1993, 1994. 
#     All Rights Reserved by:
#        RSA
#        7701 Six Forks Road
#        Suite 201
#        Raleigh, NC  27615
#        (919) 846-7171
#
#    This document contains material confidential to RSA. Its contents
#    must not be revealed, used or disclosed to anyone or company without
#    written permission by RSA. The information contained herein is solely
#    for the use of RSA.
#
#    EXAMPLE MAKE FILE FOR ACU Module
#
#    (Using OPUS MAKE and Microtec Research Inc. Software Development Tools)
# 
#       USEAGE: 
#       To compile:
#       'make -f faxmf.xxx <make list>' to create the ACU and it's sub-modules
#           where <make list> can be any of the following:
#              fx1 = Fax Class 1
#              fx12 = Fax Class 1 & 2
#              fx12e = Fax Class 1 & 2 & ECM
#              fx12q = Fax Class 1 & 2 & Quality Checking
#              fx12qe = Fax Class 1 & 2 & Quality Checking & ECM
#              fx1220 = Fax Class 1 & 2 & 2.0
#              fx1220e = Fax Class 1 & 2 & 2.0 &ECM
#              fx1220q = Fax Class 1 & 2 & & 2.0 & Quality Checking
#              fx1220qe = Fax Class 1 & 2 & 2.0 & Quality Checking & ECM
#              fx2 = Fax Class 2
#              fx2e = Fax Class 2 & ECM
#              fx2q = Fax Class 2 & Quality Checking
#              fx2qe = Fax Class 2 & Quality Checking & ECM
#              fx220 = Fax Class 2 & 2.0
#              fx220e = Fax Class 2 & 2.0 &ECM
#              fx220q = Fax Class 2 & & 2.0 & Quality Checking
#              fx220qe = Fax Class 2 & 2.0 & Quality Checking & ECM
#              fxstub = Fax Stubed out
#


# Global Header Files required 
GLOBAL_HDR_FILES = sys_def.h fax_pro.h f1x_pro.h f1x_mem.h f1x_def.h \
			    f2x_def.h f2x_mem.h f2x_pro.h f2x_ecd.h

#
#  WHAT ACU TO BUILD
#
FAX = fx00if.o

FAX1 =  f1x00pr.o f1x00cm.o f1x00cl.o f1x00lib.o f1x00mem.o\
	   f1x00ov.o

FAX2 =  f2x00pr.o f2x00cm.o f2x00t30.o f2x00pct.o f2x00pcr.o\
	   f2x00lib.o f2x00mem.o f2x00ov.o f2x00ct.o f2x00cct.o\
	   f2x00ccr.o  f2x00pg.o

FAX20 = f20x00pr.o f20x00cm.o

FAX2QC =  f2x00qc.o f2x00cq.o
	  
FAX2ECM = f2x00cec.o f2x00ecm.o f2x00b0m.o\
		f2x00b1m.o f2x00b2m.o f2x00b3m.o\
		f2x00emm.o f2x00etx.o f2x00bmn.o f2x00cbm.o\
		f2x00erd.o f2x00erx.o f2x00elb.o

FAX1STUB = f1xstb.o

FAX2STUB = f2xstb.o

FAX20STUB = f20xstb.o

FAX2QCSTUB = f2xqcstb.o

FAX2ECMSTUB = f2xecstb.o

FAXSTUB = f1xstb.o f2xstb.o f2xqcstb.o f2xecstb.o

FAXIO =

# Local Flags
DFLAGS  = -3/32bit
CFLAGS  =-APCS 3/NOSWST/NOFP -c  -li -I.\ -Imt\  $(DFLAGS) $(C_DBG_FLAGS)
#CFLAGS  = -zps1 -c  -li -I.\ -Imt\  $(DFLAGS) $(C_DBG_FLAGS)
CC      = $(COMP_TOOL)

useage:
			 @@ echo
			 @@ echo To compile: 
			 @@ echo Type 'make -f acu68k.mkf [make list]' to create the FAX sub-modules
			 @@ echo    where [make list] can be a combination of the following:
			 @@ echo 
			 @@ echo       fx1 = Fax Class 1
			 @@ echo       fx12 = Fax Class 1 & 2
			 @@ echo       fx12e = Fax Class 1 & 2 & ECM
			 @@ echo       fx12q = Fax Class 1 & 2 & Quality Checking
			 @@ echo       fx12qe = Fax Class 1 & 2 & Quality Checking & ECM
			 @@ echo       fx1220 = Fax Class 1 & 2 & 2.0
			 @@ echo       fx1220e = Fax Class 1 & 2 & 2.0 &ECM
			 @@ echo       fx1220q = Fax Class 1 & 2 & & 2.0 & Quality Checking
			 @@ echo       fx1220qe = Fax Class 1 & 2 & 2.0 & Quality Checking & ECM
			 @@ echo       fx2 = Fax Class 2
			 @@ echo       fx2e = Fax Class 2 & ECM
			 @@ echo       fx2q = Fax Class 2 & Quality Checking
			 @@ echo       fx2qe = Fax Class 2 & Quality Checking & ECM
			 @@ echo       fx220 = Fax Class 2 & 2.0
			 @@ echo       fx220e = Fax Class 2 & 2.0 &ECM
			 @@ echo       fx220q = Fax Class 2 & & 2.0 & Quality Checking
			 @@ echo       fx220qe = Fax Class 2 & 2.0 & Quality Checking & ECM
			 @@ echo       fxstub = Fax Stubed out
			 @@ echo 
			 @@ echo Example:   make - faxmf.xxx f1x
			 @@ echo  will compile the FAX Class 1 module
			 @@ echo

fx1: $(FAX) $(FAX1) $(FAX2STUB) $(FAXIO)
#    linktop
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        @@ echo LOAD C:\mcc68k\68000\mcc68kab.lib >> link.cmd
#        @@ echo END >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx1.abs -m > fx1.map

fx12: $(FAX) $(FAX1) $(FAX2) $(FAX20STUB) $(FAX2QCSTUB) $(FAX2ECMSTUB) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QCSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECMSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx12.abs -m > fx12.map

fx12e: $(FAX) $(FAX1) $(FAX2) $(FAX20STUB) $(FAX2QCSTUB) $(FAX2ECM) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QCSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECM:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx12e.abs -m > fx12e.map

fx12q: $(FAX) $(FAX1) $(FAX2) $(FAX20STUB) $(FAX2QC) $(FAX2ECMSTUB) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QC:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECMSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx12q.abs -m > fx12q.map

fx12qe: $(FAX) $(FAX1) $(FAX2) $(FAX20STUB) $(FAX2QC) $(FAX2ECM) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QC:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECM:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx12qe.abs -m > fx12qe.map

fx1220: $(FAX) $(FAX1) $(FAX2) $(FAX20) $(FAX2QCSTUB) $(FAX2ECMSTUB) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QCSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECMSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx1220.abs -m > fx1220.map

fx1220e: $(FAX) $(FAX1) $(FAX2) $(FAX20) $(FAX2QCSTUB) $(FAX2ECM) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QCSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECM:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx1220e.abs -m > fx1220e.map

fx1220q: $(FAX) $(FAX1) $(FAX2) $(FAX20) $(FAX2QC) $(FAX2ECMSTUB) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QC:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECMSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx1220q.abs -m > fx1220q.map

fx1220qe: $(FAX) $(FAX1) $(FAX2) $(FAX20) $(FAX2QC) $(FAX2ECM) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QC:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECM:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx1220qe.abs -m > fx1220qe.map

fx2: $(FAX) $(FAX1STUB) $(FAX2) $(FAX20STUB) $(FAX2QCSTUB) $(FAX2ECMSTUB)\
	$(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QCSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECMSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx2.abs -m > fx2.map

fx2e: $(FAX) $(FAX1STUB) $(FAX2) $(FAX20STUB) $(FAX2QCSTUB) $(FAX2ECM) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QCSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECM:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx2e.abs -m > fx2e.map

fx2q: $(FAX) $(FAX1STUB) $(FAX2) $(FAX20STUB) $(FAX2QC) $(FAX2ECMSTUB) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QC:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECMSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx2q.abs -m > fx2q.map

fx2qe: $(FAX) $(FAX1STUB) $(FAX2) $(FAX20STUB) $(FAX2QC) $(FAX2ECM) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QC:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECM:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx2qe.abs -m > fx2qe.map
	
fx220: $(FAX) $(FAX1STUB) $(FAX2) $(FAX20) $(FAX2QCSTUB) $(FAX2ECMSTUB)\
	   $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QCSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECMSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx220.abs -m > fx220.map

fx220e: $(FAX) $(FAX1STUB) $(FAX2) $(FAX20) $(FAX2QCSTUB) $(FAX2ECM) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QCSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECM:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx220e.abs -m > fx220e.map

fx220q: $(FAX) $(FAX1STUB) $(FAX2) $(FAX20) $(FAX2QC) $(FAX2ECMSTUB) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QC:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECMSTUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx220q.abs -m > fx220q.map

fx220qe: $(FAX) $(FAX1STUB) $(FAX2) $(FAX20) $(FAX2QC) $(FAX2ECM) $(FAXIO)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX1STUB:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX20:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2QC:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAX2ECM:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXIO:S/.*/&$(RETURN)/) >> link.cmd
#        $(LK) -c link.cmd $(LFLAGS) -o fx220qe.abs -m > fx220qe.map

fxstub: $(FAX) $(FAXSTUB)
	   @@ echo $(FAX:S/.*/&$(RETURN)/) >> link.cmd
	   @@ echo $(FAXSTUB:S/.*/&$(RETURN)/) >> link.cmd

#linktop:    
#                @@ echo FORMAT S > link.cmd
#                @@ echo CHIP 68000 >> link.cmd
#                @@ echo LISTABS >> link.cmd
#                @@ echo SECT zerovars=$$2000 >> link.cmd
#                @@ echo SECT startcode=$$400 >> link.cmd
#                @@ echo SECT code=$$400500 >> link.cmd
#                @@ echo SECT reset=$$000000 >> link.cmd
#                @@ echo public ????STACKTOP=$$3fffe >> link.cmd
#                @@ echo ORDER code,literals,strings,const,vars >> link.cmd

hdrs: $(GLOBAL_HDR_FILES)


### OPUS MKMF:  Do not remove this line!  Generated dependencies follow.

f1x00cl.o: f1x_def.h f1x_mem.h f1x_pro.h sys_def.h

f1x00cm.o: f1x_def.h f1x_mem.h f1x_pro.h sys_def.h

f1x00lib.o: f1x_def.h f1x_mem.h f1x_pro.h sys_def.h

f1x00mem.o: f1x_def.h sys_def.h

f1x00ov.o: f1x_def.h sys_def.h

f1x00pr.o: sys_def.h

f20xstb.o: sys_def.h

f2x00ccr.o: f2x_def.h sys_def.h

f2x00cct.o: f2x_def.h sys_def.h

f2x00cm.o: f2x_def.h f2x_mem.h f2x_pro.h sys_def.h

f2x00ct.o: f2x_def.h sys_def.h

f2x00lib.o: f2x_def.h f2x_ecd.h f2x_mem.h f2x_pro.h sys_def.h

f2x00mem.o: f2x_def.h sys_def.h

f2x00ov.o: f2x_def.h sys_def.h

f2x00pcr.o: f2x_def.h f2x_mem.h f2x_pro.h sys_def.h

f2x00pct.o: f2x_def.h f2x_mem.h f2x_pro.h sys_def.h

f2x00pg.o: sys_def.h

f2x00pr.o: sys_def.h

f2x00t30.o: f2x_def.h f2x_mem.h f2x_pro.h sys_def.h

f2xecstb.o: sys_def.h

f2xqcstb.o: sys_def.h

f2xstb.o: sys_def.h

fx00if.o: sys_def.h
