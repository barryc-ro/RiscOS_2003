/****************************************************************************
/
/       Copyright, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995.
/       All Rights Reserved by:
/               RSA
/               7701 Six Forks Road
/               Suite 120
/               Raleigh, NC  27615
/               (919) 846-7171
/
/
/       This document contains material confidential to RSA its contents must
/       not be revealed, used or disclosed to anyone or company with out
/       written permission by RSA.  The information contained herein is solely
/       for the use of RSA.
/
/       File:           MNP_IF.C
/
/       Module Version: 4.02
/
/       Function:       This file contains the MNP10 to MNP interface code.
/
/       Product:        V.42/V.42bis
/
/       History:
/
/           Created: RSA 09/28/92
/                       11/1/94 (V4.01) - Add ETC and MNP10 updates
/
/           ---------------------------------------------------------
/           -                   Modifications                       -
/           ---------------------------------------------------------
/
/           Author & Date:	RSA
/           Description:
/           Reason:
/
*****************************************************************************/
#include "sys_def.h"
#include "mnp_lr.edf"
#include "mnp.edf"
#include "mnp_la.edf"
#include "mnp_lrr.edf"
#include "mnp_lib.edf"
#include "mnp_lt.edf"
#include "mnp_af.edf"
#include "mnp_que.edf"
#include "mnp_comm.edf"

void mpg_mnp_reset(void);
void mpg_start_receive(void);
void mpg_clear_receive_buffers(void);
void mpg_clear_transmit_buffers(void);
void mpg_reset_timeout_timer(void);
void mpg_reset_retries(void);
void mpg_turnoff_autoreliable(void);
void mpg_build_la_init(void);
void mpg_send_la(void);
void mpg_send_lr(void);
ubyte mpg_mnp_build_lr_packet(ubyte *, ubyte *);
ubyte mpg_mnp_empty_lr_packet(ubyte *,ubyte);
ubyte mpg_negot_mnp_parms(void);
ubyte mpg_empty_lrr(void);
void mpg_got_la_info(void);
void mpg_do_inc_dynamic_tx(ubyte);
void mpg_div_dynamic_tx(void);
ubyte mpg_tx_buffer_available(void);
ubyte mpg_inc_ring_ptr(ubyte);
void mpg_init_tx_frame(void);
void mpg_put_empty(ubyte *);
ubyte *mpg_get_process(void);
void mpg_init_dynamic_tx(void);
void mpg_start_tx(void);
void mpg_common_build_lr(ubyte,ubyte);


void mpg_mnp_reset ()
{
	mmu_open_mnp_pg
	mnp_reset();
	mmu_restore_stored_pg
}


void mpg_start_receive()
{
	mmu_open_mnp_pg
	start_receive();
	mmu_restore_stored_pg
}


void mpg_clear_receive_buffers(void)
{
	mmu_open_mnp_pg
	clear_receive_buffers();
	mmu_restore_stored_pg
}


void mpg_clear_transmit_buffers(void)
{
	mmu_open_mnp_pg
	clear_transmit_buffers();
	mmu_restore_stored_pg
}


void mpg_reset_timeout_timer(void)
{
	mmu_open_mnp_pg
	reset_timeout_timer();
	mmu_restore_stored_pg
}


void mpg_reset_retries(void)
{
	mmu_open_mnp_pg
	reset_retries();
	mmu_restore_stored_pg
}


void mpg_turnoff_autoreliable(void)
{
	mmu_open_mnp_pg
	turnoff_autoreliable();
	mmu_restore_stored_pg
}


void mpg_build_la_init(void)
{
	mmu_open_mnp_pg
	build_la_init();
	mmu_restore_stored_pg
}


void mpg_send_la(void)
{
	mmu_open_mnp_pg
	send_la();
	mmu_restore_stored_pg
}


void mpg_send_lr(void)
{
	mmu_open_mnp_pg
	send_lr();
	mmu_restore_stored_pg
}


ubyte mpg_mnp_build_lr_packet(ubyte *ptr_1, ubyte *ptr_2)
{
	ubyte ret_val;

	mmu_open_mnp_pg
	ret_val = mnp_build_lr_packet(ptr_1,ptr_2);
	mmu_restore_stored_pg
	return(ret_val);
}


ubyte mpg_mnp_empty_lr_packet(ubyte *ptr_1,ubyte val_1)
{
	ubyte ret_val;

	mmu_open_mnp_pg
	ret_val = mnp_empty_lr_packet(ptr_1,val_1);
	mmu_restore_stored_pg
	return(ret_val);
}


ubyte mpg_negot_mnp_parms(void)
{
	ubyte ret_val;

	mmu_open_mnp_pg
	ret_val = negot_mnp_parms();
	mmu_restore_stored_pg
	return(ret_val);
}


ubyte mpg_empty_lrr(void)
{
	ubyte ret_val;

	mmu_open_mnp_pg
	ret_val = empty_lrr();
	mmu_restore_stored_pg
	return(ret_val);
}


void mpg_got_la_info(void)
{
	mmu_open_mnp_pg
	got_la_info();
	mmu_restore_stored_pg
}


void mpg_do_inc_dynamic_tx(ubyte val_1)
{
	mmu_open_mnp_pg
	do_inc_dynamic_tx(val_1);
	mmu_restore_stored_pg
}



void mpg_div_dynamic_tx(void)
{
	mmu_open_mnp_pg
	div_dynamic_tx();
	mmu_restore_stored_pg
}


ubyte mpg_tx_buffer_available(void)
{
	ubyte ret_val;

	mmu_open_mnp_pg
	ret_val = tx_buffer_available();
	mmu_restore_stored_pg
	return(ret_val);
}


ubyte mpg_inc_ring_ptr(ubyte val_1)
{
	ubyte ret_val;

	mmu_open_mnp_pg
	ret_val = inc_ring_ptr(val_1);
	mmu_restore_stored_pg
	return(ret_val);
}



void mpg_init_tx_frame(void)
{
	mmu_open_mnp_pg
	init_tx_frame();
	mmu_restore_stored_pg
}


void mpg_put_empty(ubyte *ptr_1)
{
	mmu_open_mnp_pg
	put_empty(ptr_1);
	mmu_restore_stored_pg
}


ubyte *mpg_get_process(void)
{
	ubyte *ret_val;

	mmu_open_mnp_pg
	ret_val = get_process();
	mmu_restore_stored_pg
	return(ret_val);
}


void mpg_init_dynamic_tx(void)
{
	mmu_open_mnp_pg
	init_dynamic_tx();
	mmu_restore_stored_pg
}


void mpg_start_tx(void)
{
	mmu_open_mnp_pg
	start_tx();
	mmu_restore_stored_pg
}


void mpg_common_build_lr(ubyte val1, ubyte val2)
{
	mmu_open_mnp_pg
	common_build_lr(val1, val2);
	mmu_restore_stored_pg
}

