/******************************************************************************
/
/   Copyright 1994, 1995
/   All Rights Reserved by :
/     RSA
/     7701 Six Forks Road
/     Suite 120
/     Raleigh, NC  27615
/     (919) 846-7171
/
/   This document contains material confidential to RSA. Its contents
/   must not be revealed, used or disclosed to anyone or company without
/   written permission by RSA. The information contained herein is solely
/   for the use of RSA.
/
/   File     : vc00if.c
/
/   Version  : 1.00
/
/   Function : Contains the interface routines for the voice module.
/
/   Product  : Voice Core Code
/
/   History  :
/
/   Created  : 1/14/93
/
/   -----------------------------------------------------------
/   -                Modifications              -
/   -----------------------------------------------------------
/
/   Author & Date :
/   Description   :
/   Reason      :
/
******************************************************************************/
#include "sys_def.h"
#include "vce_def.h"
#include "vce_mem.h"
#include "vce_cpro.h"

#include "func_mac.h"

void voice_init(ubyte);
void voice_timer(void);
ubyte voice_bg(ubyte **);
void voice_hangup(void);
/* Start Change 6/19/1995. */
/* ubyte voice_parse(ubyte **, ubyte **); */
/* End Change 6/19/1995. */
void voice_configure(ubyte, ubyte, ubyte, ubyte, ubyte);
void voice_connect(ubyte);
void voice_start(void);
void voice_reset(void);
/* void voice_command_init(ubyte); */ /* commented by ramn on 10/10/95 */
void voice_command_init(void);
void voice_enable_inact_timer(void);
void voice_enable_cadence_rpt(ubyte, ubyte);
void voice_rpt_ctl_cadence(ubyte, ubyte *, ubyte *);

/*******************************************************************************
/
/   Routine: voice_init
/
/   Author: RSA
/
/   Creation Date: 10/7/92
/
/   Description: This routine is called to determine the voice capabilities.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void voice_init(ubyte type)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_init(type);
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}

/*******************************************************************************
/
/   Routine: voice_timer
/
/   Author: RSA
/
/   Creation Date: 10/7/92
/
/   Description: This routine is called to process the voice timers
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void voice_timer(void)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_timer();
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}

/*******************************************************************************
/
/   Routine: voice_bg
/
/   Author: RSA
/
/   Creation Date: 10/26/92
/
/   Description: This routine will process the voice background code.
/
/   Input Parameters: None
/
/   Output Parameters: ubyte status - status of the voice code
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
ubyte voice_bg(ubyte **ptr)
{
    ubyte temp;

    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    temp = vce_bg(ptr);
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */

    return (temp);
}

/*******************************************************************************
/
/   Routine: voice_hangup
/
/   Author: RSA
/
/   Creation Date: 10/26/92
/
/   Description: This routine will hang up the voice code.
/
/   Input Parameters: ubyte type - Type of hangup processing to be performed
/                       0 - Do not reset variables
/                       1 - Reset variables
/
/   Output Parameters: None
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void voice_hangup(void)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_hangup();
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}

/******************************************************************************
/
/   Routine: voice_parse
/
/   Author: RSA
/
/   Creation Date: 11/17/92
/
/   Description: This routine is called from the ACU parser to
/                parse and execute a voice command.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                               The command line pointer should be pointing to
/                               the next character to parse after the "#".
/                               When voice_parse returns, the command line pointer
/                               well have been updated to point to the next
/                               character past the voice command.
/
/                           
/                      ubyte **msg_ptr
/                               Pointer to information string to be sent to the 
/                               terminal.
/
/   Output Parameters: ubyte    function return code
/                      0        Go to online
/                      1        Continue parsing
/                      2        Discard rest of command line
/                               and respond with ERROR message
/
/   Global Variables Changed: 
/
/   Users: ACU parser
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
******************************************************************************/
/* Start Change 6/19/1995. */
/* REMOVED THIS ROUTINE FROM THE SOURCE CODE */
/* The new ACU code calls directly into the voice code and
   this routine along with the complete VC00PG.c file is no
   longer needed with the new ACU. To use older ACU versions:
   Uncomment this code and add the VC00PG.C,VC00RWPR and
   VC00PR.C files back to the makefile */
/* ubyte voice_parse(ubyte **command_ptr_ptr, ubyte **msg_ptr)
*{
*    ubyte return_code, *hold_ptr;
*
*    hold_ptr = *command_ptr_ptr;
*
*    return_code = NOTA_COMMAND;
*
*    *command_ptr_ptr = hold_ptr;
*
*    if (vce_cmd_set == TIA_IS_101)
*    return_code = parse_voice_command_pg(command_ptr_ptr,msg_ptr); 
*   else if (vce_cmd_set == ROCKWELL)
*      return_code = rockwell_parse_pg(command_ptr_ptr,msg_ptr);
*
*    if (return_code == NOTA_COMMAND) 
*        return_code = SYNTAX_ERROR;
*
*    return(return_code);
*
*}
*/
/* End Change 6/19/1995. */

/*******************************************************************************
/
/   Routine: voice_configure
/
/   Author: RSA
/
/   Creation Date: 2/3/1993
/
/   Description: This routine will open the voice page and call vce_configure
/
/   Input Parameters: None
/
/   Output Parameters: None
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void voice_configure(ubyte bps, ubyte cmd_set, ubyte spk_vol,
                     ubyte flow_ctl, ubyte caller_id)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_configure(bps,cmd_set,spk_vol,flow_ctl,caller_id);
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}

/*******************************************************************************
/
/   Routine: voice_connect
/
/   Author: RSA
/
/   Creation Date: 2/12/1993
/
/   Description: This routine will start the voice connection
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void voice_connect(ubyte state)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_connect(state);
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}


/*******************************************************************************
/
/   Routine: voice_start
/
/   Author: RSA
/
/   Creation Date: 2/12/1993
/
/   Description: This routine will start up the voice code.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void voice_start(void)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_start();
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}

/*******************************************************************************
/
/   Routine: voice_reset
/
/   Author: RSA
/
/   Creation Date: 2/16/1993
/
/   Description: This routine will shut down the voice code and force the data
/                pump out of voice operation.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void voice_reset(void)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_reset();
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}

/*******************************************************************************
/
/   Routine: voice_command_init
/
/   Author: RSA
/
/   Creation Date: 3/22/1994.
/
/   Description: This routine calls the voice_cmd_init routine to reset the
/                values of the voice variables for the +VIP acu routine.
/                
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
/* void voice_command_init(ubyte cmd_set)*/ /* commented by ramn on 10/10/95 */
void voice_command_init(void)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
/*    if (cmd_set == ROCKWELL)
        rockwell_cmd_init();
    else if (cmd_set == TIA_IS_101)
*/ /* commented by ramn on 10/10/95 */
        voice_cmd_init();
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}

/*******************************************************************************
/
/   Routine: voice_enable_inact_timer
/
/   Author: RSA
/
/   Creation Date: 3/29/1994.
/
/   Description: This routine calls the vce_enable_inact_timer to
/                start the inactivity timer.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  None
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/
#if 0    /* ramn 9/13/96 */
void voice_enable_inact_timer(void)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_enable_inact_timer();
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}
#endif

/*******************************************************************************
/
/   Routine: voice_enable_cadence_rpt
/
/   Author: RSA
/
/   Creation Date: 3/29/1994.
/
/   Description: This routine will enable reporting the cadence time for
/                ringback, busy, and fast busy.                               
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  none
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/

#if 0    /* ramn 9/13/96 */
void voice_enable_cadence_rpt(ubyte enable, ubyte rpt_time)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_enable_cadence_rpt(enable,rpt_time);
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */
}
#endif

/*******************************************************************************
/
/   Routine: voice_rpt_ctl_cadence
/
/   Author: RSA
/
/   Creation Date: 3/29/1994.
/
/   Description: This routine will interface to report the cadence time for
/                ringback, busy, and fast busy.                               
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  none
/
/   Users:
/
/   -------------------------------------------------------------
/   -            Modifications                -
/   -------------------------------------------------------------
/
/   Author & Date:    RSA
/   Description:
/   Reason:
/
*******************************************************************************/

#if 0    /* ramn 9/13/96 */
void voice_rpt_ctl_cadence(ubyte type, ubyte *tone_on, ubyte *tone_off)
{
    /* mmu_open_voice_pg */ /* ramn 10/10/95 */
    vce_rpt_ctl_cadence(type,tone_on,tone_off);
    /* mmu_restore_stored_pg */ /* ramn 10/10/95 */

}
#endif
