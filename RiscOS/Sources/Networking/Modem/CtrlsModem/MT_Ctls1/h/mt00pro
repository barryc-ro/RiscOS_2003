/****************************************************************************
/
/    Copyright 1988,1989,1990,1991,1992,1993. All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/
/    This document contains material confidential to RSA its contents must
/    not be revealed, used or disclosed to anyone or company with out
/    written permission by RSA.  The information contained herein is solely
/    for the use of RSA.
/
/    File:          mt00pro.h
/
/       Version:        2.00
/
/       Function:       External Function Prototypes
/
/       Product:        Modem Task for AT&T High Speed Modem Data Pump 
/                       Chip Sets
/
/    History:  
/
/       Created: 10/17/91
/
/         ---------------------------------------------------------
/         -              Modifications            -
/         ---------------------------------------------------------
/
/       Author & Date: RSA 7/7/1994.
/       Description: Added new interface routine for voice.
/       Reason: Need for reporting the control tone energy.
/
/
*****************************************************************************/
extern void att_customer_bg(void);
extern void modem_init(void);
extern void modem_task(void);
extern void modem_timer(void);

extern void modem_set_parameters(ubyte min_time,
				 ubyte max_time,
				 ubyte conn_time,
				 ubyte v32_cd_type,
				 ubyte tx_level,
				 ubyte rx_level,
				 ubyte eqm_level);

extern void modem_init_call_progress(ubyte type);
extern ubyte modem_call_progress(void);
extern void modem_speaker_vol(ubyte volume);
extern void modem_speaker(ubyte type);
extern void modem_task(void);
extern void modem_retrain(void);
extern void modem_renegotiate(void);
extern void modem_retrain_enable(ubyte ,ubyte, ubyte);
extern ubyte modem_get_baud_rate(void);
extern ubyte modem_get_mode(void);
extern void modem_serial_direct(ubyte type);
extern void modem_enable_interrupts(void);
extern void modem_disable_interrupts(void);
extern void modem_connect(ubyte Type,
			  ubyte baud_rate,
			  ubyte modem_mode,
			  ubyte clock_source,
			  ubyte leased_line,
			  ubyte auto_mode,
			  ubyte fax_type,
/* start change keh 11/94 => Chagne ETC connect i/f */
/*               ubyte call_tone); */
			  ubyte call_tone,
			  ubyte etc_enabled);
/* end change keh 11/94 => Chagne ETC connect i/f */
extern void modem_tone_on(ubyte tone);
extern void modem_tone_off(void);
extern void modem_alb(ubyte type, ubyte baud, ubyte mode);
extern void modem_send_rdl_release( void );
extern void modem_send_rdl_request( void );
extern void modem_digital_loopback( ubyte type);
extern void modem_rdl_enable( ubyte type);
extern void modem_reset(void);
extern void modem_drop(ubyte);
extern ubyte modem_ram_test(void);
extern ubyte modem_rom_test(void);
extern ubyte modem_read_data(uword offset, uword length, ubyte *ptr);
extern ubyte modem_write_data(uword offset, uword length, ubyte *ptr);
extern ubyte modem_rom_checksum(void);
extern ubyte *modem_product_code(void);
extern ubyte *modem_rom_components(void);
extern ubyte *modem_capability_descript(void);
extern void modem_AA1_relay(ubyte type);
extern void modem_hook_relay(ubyte type);
extern void modem_serial_echo(ubyte type);
extern void modem_dte_test(ubyte type);
extern void modem_dte_112(ubyte type);
extern void modem_dte_117(ubyte type);
extern void modem_dte_ri(ubyte type);
extern void modem_td_relay(ubyte);
extern void modem_char(ubyte mode_select,ubyte char_size,ubyte overspeed);
extern void modem_dte_cts(ubyte type);
extern void modem_dte_dsr(ubyte type);
extern void modem_dte_rlsd(ubyte type);
extern void modem_guard_tone(ubyte);
extern ubyte modem_dte_RTS_status(void);
extern ubyte modem_dte_DTR_status(void);
extern ubyte modem_dte_116_status(void);
extern ubyte modem_dte_CTS_status(void);
extern ubyte modem_check_dsr(void);
extern ubyte modem_check_cts(void);
extern ubyte modem_eeprom_checksum(void);


extern void modem_config_dtmf_dial(ubyte , ubyte);

extern ubyte modem_check_CD(void);    /* returns "Filtered" CD of modem chips */
extern ubyte modem_received_RDL(void);     /* returns the progress of RLD detection */
extern void modem_watchdog(void);          /* process the watchdog timer */
extern void modem_dp_RTS(ubyte);   /* Used to toggle RTS to the data pump  */
extern ubyte modem_dp_CTS_status(void); /* Used to get the status of CTS from the data pump    */

extern ubyte modem_read_dipswitch(uword);
extern void modem_hs_led(ubyte type);
extern void modem_cd_led(ubyte type);
extern void modem_mr_led(ubyte type);
extern void modem_ri_led(ubyte type);
extern void modem_aa_led(ubyte type);
extern void modem_ec_led(ubyte type);
extern void modem_dc_led(ubyte type);
extern void modem_v32_led(ubyte type);
extern void modem_v22bis_led(ubyte type);
extern void modem_v22_led(ubyte type);
extern void modem_v23_led(ubyte type);
extern void modem_v21_led(ubyte type);
extern void modem_cts_led(ubyte type);
extern void modem_test_led(ubyte type);
extern void modem_oh_led(ubyte type);
extern void modem_val_led(ubyte type);
extern void modem_b3_led(ubyte type);
extern void modem_b2r_led(ubyte type);
extern void modem_b2l_led(ubyte type);
extern void modem_pp_rc_led(ubyte type);
extern void modem_tr_led(ubyte type);
extern void modem_shrt_relay(ubyte);
extern void modem_cts_led(ubyte);
extern void modem_pp_rc(ubyte type);
extern ubyte modem_get_ll_status(void);
extern ubyte modem_check_ll(void);
extern void  modem_init_recovery(ubyte);
extern void  modem_set_sync_clocks(ubyte,ubyte);
extern void modem_ram_init(void);
extern void modem_line_select(ubyte);

/* start change keh 8/14/95 => add v.8,v.34 */
/*extern void modem_set_rate_seq(ubyte);*/
extern void modem_set_rate_seq(uword tx_rx,uword rx_only);
/* end  change keh 8/14/95 => add v.8,v.34 */

extern void modem_drop_carrier(void);
extern void modem_go_to_idle(void);
extern void modem_fax_configure(ubyte,ubyte);

extern void modem_update_rate_seq(void);

extern void modem_return_to_idle(void);

extern void mask_current_seq_word(void);
extern ubyte chk_if_v32_line_mode(void);

extern void init_dsp_parms(void);

extern ubyte chk_v22_v22bis_mode(void);
extern void modem_return_to_idle(void);

extern void modem_clear_LAGC0(void); 
extern void modem_set_LAGC0(void);

extern ubyte modem_get_cellular_hardware(void);

/* Start Change 7/7/1994. */
extern void modem_ctl_tone_energy(ubyte *, ubyte *);
/* End Change 7/7/1994. */

/* start change keh 11/94 => Add etc i/f */
extern void modem_ETC_connect( ubyte level,
				   ubyte hardware,
				   ubyte autoadjust,
				   ubyte autorate,
				   ubyte modem_type,
				   ubyte calling_tone,
				   ubyte direction,
				   ubyte automode,
				   uword cd_wait,
				   uword cd_qualify,
				   uword cd_lost);
/* end change keh 11/94 => Add etc i/f */

/* start change keh 10/25/94 => update file for 7/20/94 drc change */
extern void modem_fax_led(ubyte);
/* end change keh 10/25/94 => update file for 7/20/94 drc change */

/* start change keh 8/14/95 => add v.8,v.34 */
extern void modem_v34_configure(
			    ubyte asym_rates,
			    ubyte asym_symbols,
			    ubyte aux_channel_en,
			    ubyte symbol_map,
			    ubyte rx_symbol_map,
			    ubyte option_map
			    );
extern void modem_v34_info(ubyte *buffer_ptr);
extern void modem_v8_configure(
			    ubyte call_function,
			    ubyte lamp_en,
			    ubyte cellular_en
			    );
extern void modem_v8_results(ubyte *buffer_ptr);

/* end change keh 8/14/95 => add v.8,v.34 */

/* start change keh 10/3/95 => add VoiceView */
extern void modem_vcv_config_starttone(void);
extern void modem_vcv_config_adsicas(void);
extern void modem_vcv_transmitter(ubyte state);
extern void modem_vcv_configure_tone_rx(ubyte tone);
extern void modem_config_vcv(ubyte mode, ubyte speed);
extern void modem_vcv_timer_delay(uword delay_time);
extern ubyte modem_vcv_check_CD(void);
extern void modem_init_vcv_call_progress(ubyte type);
extern ubyte modem_vcv_call_progress(void);
extern ubyte modem_handset_hook(void);
extern void modem_isolate_handset(ubyte state);
extern void modem_vcv_td_relay(ubyte type);
extern void modem_voiceview_answtone(ubyte state);
/* end change keh 10/3/95 => add VoiceView */
/*mrm101295*/

extern ubyte ack_or_response;

extern ubyte current_command [];
