/****************************************************************************
/
/   Copyright 1988, 1989, 1990, 1991, 1992, 1993, 1994.  All Rights
/   Reserved by:
/   RSA
/   7701 Six Forks Road
/   Suite 120
/   Raleigh, NC  27615
/   (919) 846-7171
/
/   This document contains material confidential to RSA. Its contents
/   must not be revealed, used or disclosed to anyone or company without
/   written permission by RSA. The information contained herein is solely
/   for the use of RSA.
/
/   File:                audiomsg.h
/
/   Module Version:
/
/   Function:
/
/   Product:
/
/   -----------------------------------------------------------
/   -                       Modifications                     -
/   -----------------------------------------------------------
/
/   Author & Date:     RSA
/   Description:
/   Reason:
/
****************************************************************************/

#if !defined (_AUDIO_IF_)

   #define _AUDIO_IF_

   /* Dependant Header file */
   #include "sys_def.h"

   /* Audio path defintions */
   #define DTMF_TO_TXOUT         0x00
   #define DTMF_TO_EAROUT        0x01
   #define DTMF_TO_TXOUT_EAROUT  0x02
   #define RXDEMOD_TO_EAROUT     0x03
   #define MICIN_TO_TXOUT        0x04
   #define VOICE_RX              0x05
   #define VOICE_TX              0x06
   #define VOICE_RXTX            0x07
   #define DATA_RXTX             0x08
   #define PSTN_VOICE_RXTX       0x09
   #define MODEM_SPEAKER_OFF     0x0A
   #define MODEM_SPEAKER_ON      0x0B

   /* Mode definitions (bit-mapped!!) */
   #define VOICE_MODE            0x01  /* over PSTN or Wireless */
   #define DATA_MODE             0x02  /* over PSTN or Wireless */
   #define PSTN_MODE             0x04  /* VOICE or DATA over    */
   #define WIRELESS_MODE         0x08  /* VOICE or DATA over    */

   /* TONE definitions */
   #define DTMF_DIGIT_0    0x00
   #define DTMF_DIGIT_1    0x01
   #define DTMF_DIGIT_2    0x02
   #define DTMF_DIGIT_3    0x03
   #define DTMF_DIGIT_4    0x04
   #define DTMF_DIGIT_5    0x05
   #define DTMF_DIGIT_6    0x06
   #define DTMF_DIGIT_7    0x07
   #define DTMF_DIGIT_8    0x08
   #define DTMF_DIGIT_9    0x09
   #define DTMF_DIGIT_STAR 0x0A
   #define DTMF_DIGIT_PND  0x0B
   #define DTMF_DIGIT_A    0x0C
   #define DTMF_DIGIT_B    0x0D
   #define DTMF_DIGIT_C    0x0E
   #define DTMF_DIGIT_D    0x0F
   #define SILENCE_TONE    0x10
   #define ALERT_TONE      0x11    /* Cellular tone types              */
   #define INTERCEPT_TONE  0x12
   #define REORDER_TONE    0x13
   #define MAX_NUM_TONES   0x14    /* *** Important - update as req'd  */

   /* AUDIO SLEEP definitions */
   #define WAKE_UP         0x00        /* Wakeup from a sleep state    */
   #define GOTO_SLEEP      0x01        /* h/w sleep                    */
   #define UNUSED_SLEEP    0x02        /* h/w deep sleep               */

/* start change keh 1/27/95 => add Wireless VoiceView i/f */
   /* AUDIO VoiceView definitions */
   #define VV_AUDIO_CONVERSATION     0x00 /* VoiceView conversation state */
   #define VV_AUDIO_DATA_MODE        0x01 /* VoiceView data state */
/* end change keh 1/27/95 => add Wireless VoiceView i/f */



   /* AUDIO msg type definitions */
   #define AUDIO_INIT            0x00    /* +none                        */
   #define AUDIO_GEN_TONE        0x01    /* +data (Tone - see AUDTONES.H)*/
   #define AUDIO_AUDIO_PATH      0x02    /* +data (Path)                 */
   #define AUDIO_SET_RX_VOLUME   0x03    /* +data (Volume level)         */
   #define AUDIO_SET_TX_VOLUME   0x04    /* +data (Volume level)         */
   #define AUDIO_RX_MUTE         0x05    /* +data (on/off state)         */
   #define AUDIO_TX_MUTE         0x06    /* +data (on/off state)         */
   #define AUDIO_MODE            0x07    /* +data (Mode)                 */
   #define AUDIO_HANDSFREE_CTRL  0x08    /* +data (On/Off)               */
   #define AUDIO_SET_ATTENUATORS 0x09    /* +data[7] of values           */
   #define AUDIO_SLEEP           0x0A    /* +data (type of sleep (above)) */
   #define AUDIO_BIAS_RX_VOL     0x0B    /* +data signed byte -10 to 10  */
   #define AUDIO_BIAS_TX_VOL     0x0C    /* +data signed byte -10 to 10  */
/* start change keh 1/27/95 => add Wireless VoiceView i/f */
   #define AUDIO_VOICE_VIEW      0x0D    /* +data signed byte */
/* end change keh 1/27/95 => add Wireless VoiceView i/f */

   /*
      Users of AUDIO would fill in this structure and pass
      it in. It would get interpreted therein and acted
      upon.
   */
   typedef struct {

      ubyte type;                     /* msg type               */
      ubyte data;                     /* holder for data        */

   } AUDIO_CONTROL;

#endif
