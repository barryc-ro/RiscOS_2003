/*********************************************************************
/
/    Copyright, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC 27615
/        (919) 846-7171
/
/    This document contains material confidential to RSA.
/    Its contents must not be revealed, used or disclosed to
/    anyone or company with out written permession by RSA.
/    The information contained herein is solely for the use of RSA.
/
/    File: mt_voice.h
/
/    Version:  1.00
/
/    Function: Cutlass voice packet interface constants.
/
/    Product:  Cutlass / Musket
/    History:
/
/        Created: 12/11/95
/
/        ----------------------------
/        -    Modifications       -
/        ----------------------------
/
/        Author & Date: RSA
/        Description:
/        Reason:
/
*********************************************************************/

#if !defined _MT_VOICE_H_

#define _MT_VOICE_H_

/* PACKET_MODEM_VCE_MODE_INIT */
#define MODE_INITIALIZE                  0
#define MODE_DATA_FAX                    1
#define MODE_REC_PHONE                   2
#define MODE_PLAY_PHONE                  3
#define MODE_REC_LINE                    4
#define MODE_PLAY_LINE                   5
#define MODE_REC_MIC                     6
#define MODE_PLAY_SPEAKER                7
#define MODE_PLAY_HEADSET                8
#define MODE_TELEPHONE_EMULATION         9
#define MODE_CALLER_ID                   10
#define MODE_VCV_PHONE_MONITOR_START     11
#define MODE_VCV_PHONE_DATA_XFER         12
#define MODE_VCV_SPKRPHONE_MONITOR_START 13
#define MODE_VCV_SPKRPHONE_DATA_XFER     14
#define MODE_VCV_HEADSET_MONITOR_START   15
#define MODE_VCV_HEADSET_DATA_XFER       16
#define MODE_DSVD_PHONE                  17
#define MODE_DSVD_SPKRPHONE              18
#define MODE_DSVD_HEADSET                19
#define MODE_SPKRPHONE                   20
#define MODE_SPKRPHONE_HEADSET           21

/* PACKET_MODEM_VCE_REC_PLAYBK_INIT */
#define RATE_4800       0
#define RATE_7200       1
#define RATE_8000       2
#define RATE_9600       3
#define RATE_11025      4

#define COMPRESSION_CL1     0
#define COMPRESSION_LIN2    1
#define COMPRESSION_LIN1    2
#define COMPRESSION_CL2     3       /* 4 is skipped */
#define COMPRESSION_AD3     5
#define COMPRESSION_AD4     6

#define DIRECTION_PLAYBACK  0
#define DIRECTION_RECORD    1

/* PACKET_MODEM_VCE_SET_AUDIO_LEVEL */
#define AUDIO_LEVEL_NEG_18DB   121
#define AUDIO_LEVEL_NEG_15DB   122
#define AUDIO_LEVEL_NEG_12DB   123
#define AUDIO_LEVEL_NEG_9DB    124
#define AUDIO_LEVEL_NEG_6DB    125
#define AUDIO_LEVEL_NEG_3DB    126
#define AUDIO_LEVEL_0DB        127
#define AUDIO_LEVEL_3DB        128
#define AUDIO_LEVEL_6DB        129
#define AUDIO_LEVEL_9DB        130
#define AUDIO_LEVEL_12DB       131

/* PACKET_MODEM_VCE_GPIO_OPERATION */
#ifdef __riscos
#define GPIO_CID_RELAY          0x1
#define GPIO_RING_SIGNAL        0x2
#define GPIO_OFF_HOOK_RELAY     0x4
#define GPIO_SPK_HS_RELAY       0x8
#else
#define GPIO_EXTERNAL_CLOCK     0x1
#define GPIO_RING_SIGNAL        0x2
#define GPIO_OFF_HOOK_RELAY     0x4
#define GPIO_VOICE_RELAY        0x8
#endif

#define GPIO_READ_BYTE          0
#define GPIO_WRITE_OR_BYTE      1
#define GPIO_WRITE_AND_BYTE     2

#define GPIO_BANK_INTERNAL      0
#define GPIO_BANK_EXTERNAL_GPI  1
#define GPIO_BANK_EXTERNAL_GPO  2
#define GPIO_BANK_EXTERNAL_GPIO 3

#ifndef __riscos
#define GPIO_SPK_HS_RELAY       0x2  /* Bit 1 - SPK_nHS - External GPO */
#define GPIO_CID_RELAY          0x4  /* Bit 2 - CID  - External GPO */
#endif
#define GPIO_DSVD_RELAY         0x8  /* Bit 3 - DSVD - External GPO */
#define GPIO_LPOHD_RELAY        0x1  /* Bit 1 - LPOHD - External GPI */
#define GPIO_INIT_VALUE         0xFF /* Turn on all bits (to turn off GPIO) */

/* PACKET_MODEM_VCE_PGC_INIT */
#define AFE1                    0
#define AFE2                    1

/* AFE bit definitions */
#define SPEAKER_MODE_OFF        0
#define SPEAKER_MODE_TX         1
#define SPEAKER_MODE_RX         2
#define SPEAKER_MODE_TX_RX      3
#define OFF                     0
#define MIC                     1

#define SPEAKER_MUTE            0
#define SPEAKER_LOW             1
#define SPEAKER_MEDIUM          2
#define SPEAKER_HIGH            3
#define DEFAULT_SPEAKER_VOLUME  SPEAKER_MEDIUM

#define RECEIVER_GAIN_0DB       0x0
#define RECEIVER_GAIN_6DB       0x1
#define RECEIVER_GAIN_12DB      0x2
#define RECEIVER_GAIN_18DB      0x3
#define DEFAULT_RECEIVER_GAIN   RECEIVER_GAIN_12DB

/* VoiceView generated tones - PACKET_MODEM_SEND_TONE */
#define TONE_START_LOW          2312
#define TONE_START_HIGH         2912
#define TONE_ADSICAS_LOW        2130
#define TONE_ADSICAS_HIGH       2750
#define TONE_DTMF_A_LOW         697
#define TONE_DTMF_A_HIGH        1633
#define TONE_VVANSWER           628
#define TONE_NONE               0
#define TONE_START              1
#define TONE_STOP               0

#define UNKNOWN 0xFF

/* DTMF level settings for starting/stopping tone generation */
#define DTMF_LEVEL_DEFAULT      100       /* -10 dBm  */
#define DTMF_LEVEL_OFF          255       /* DTMF off */

/* Masks for setting PGC hardware (programmable gain control) */
#define MASK_PGC_MIC_ON_AND     0xffff
#define MASK_PGC_MIC_ON_OR      0x000c
#define MASK_PGC_MIC_OFF_AND    0xfff3
#define MASK_PGC_MIC_OFF_OR     0x0000

#define MASK_PGC_SPEAKER_MODE       0xcfff
#define MASK_PGC_SPEAKER_LEVEL      0xf3ff
#define MASK_PGC_RECEIVER_GAIN      0xfcff

#define HANDSET_ENABLE          0
#define HANDSET_ISOLATE         1

/* Register and bit definitions for tone detection */
#define TONE_DETECT_REG         TRANSMIT_STATUS_REG  /* TSR not used anymore */
#define DETECT_BIT_START_LOW    0x01        /* Cutlass TONE_A */
#define DETECT_BIT_START_HIGH   0x02        /* Cutlass TONE_B */
#define DETECT_BIT_ADSICAS_LOW  0x01        /* Cutlass TONE_A */
#define DETECT_BIT_ADSICAS_HIGH 0x02        /* Cutlass TONE_B */
#define DETECT_BIT_VCV_ANSWER   0x01        /* Cutlass TONE_A */

#define DETECT_BIT_LOW          0x01        /* Cutlass TONE_A */
#define DETECT_BIT_HIGH         0x02        /* Cutlass TONE_B */


/* Typedefs */
typedef struct _afe_state
{
  int afe1_mic;
  int afe1_speaker;
  int afe2_mic;
  int afe2_speaker;
} AFE_STATE;


typedef struct _gpio_state
{
  int hook_relay;
  int voice_relay;
  int cid_relay;
  int dsvd_relay;
  int spk_hs_relay;

} GPIO_STATE;


typedef struct _hardware_setup
{
  int hook_relay;
  int voice_relay;
  int cid_relay;
  int dsvd_relay;
  int afe1_mic;
  int afe1_speaker;
  int afe2_mic;
  int afe2_speaker;
  int spk_hs_relay;

} HARDWARE_SETUP;


/* Function prototypes */
extern void  dp_voice_init_mode (ubyte mode);
extern void  dp_voice_set_audio_level (ubyte gain);
extern void  dp_voice_send_tone (uword frequency1, uword frequency2, ubyte duration);
extern void  dp_voice_pgc_init (uword ctid_AND, uword ctid_OR, ubyte afe_id);
extern ubyte dp_voice_set_gpio (ubyte gpio, ubyte direction, ubyte bank);

extern void  set_dsvd_relay (ubyte state);
extern void  set_cid_relay (ubyte state);
extern void  set_voice_relay (ubyte state);
extern void  set_spk_hs_relay (ubyte state);
extern void  gpio_hook_relay (ubyte state);
extern ubyte check_phone_relay (void);

extern void dp_enable_mic (ubyte state, ubyte afe);
extern void dp_speaker_mode (ubyte mode, ubyte afe);
extern void dp_speaker_level (ubyte level, ubyte afe);
extern void dp_receiver_gain (ubyte gain, ubyte afe);
extern void dp_set_hardware_state (ubyte state_parm);

extern void dp_mute_speaker (ubyte mute);
extern void dp_mute_mic (ubyte mute);
extern void dp_audio_path (ubyte path);

extern ubyte get_hook_relay (void);
extern ubyte get_voice_relay (void);
extern ubyte get_cid_relay (void);
extern ubyte get_dsvd_relay (void);
extern ubyte get_phone_relay (void);
extern ubyte get_spk_hs_relay (void);

#endif
