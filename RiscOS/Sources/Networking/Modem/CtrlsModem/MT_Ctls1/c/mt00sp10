/******************************************************************************
/
/     Copyright, 1988, 1989, 1990, 1991, 1992, 1993, 1994. All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA.
/     Its contents must not be revealed, used or disclosed to
/     anyone or company with out written permission by RSA.
/     The information contained herein is solely for the use
/     of RSA.
/
/       File:           mt00sp10.c
/
/       Version:        
/
/       Function:       DSP Packet delivery function
/
/       Product:        Musket
/
/       History: 
/
/       Created:        10/25/95
/        ------------------------------------------------------
/        -               Modifications             -
/        ------------------------------------------------------
/
/    Author & Date:
/    Description:
/    Reason:
/
*******************************************************************************/

#include "sys_def.h"
#include "cp_dsp.h"
#include "MT_CODEF.H"
#include "MT_HWDEF.H"
#include "MT_COPRO.H"
#include "MT_HWPRO.H"
#include "MT_COEXT.H"
#include "DSP_DRV.H"
#include "bldflags.h" 
/* V34 Beta App support */
#include "tracemac.h"

/* waiting for DSP to READ or ACK/RESPOND to our cmd packet */
#define DSP_TIMEOUT       100  
#define ERROR_ON_TIMEOUT    1  

/* process_wait() moved to musket.c from with process_timers()
   V34 Beta App support. Also increased size of DSP RX buffer to
   handle MAX rx'd response packet size.  */

void process_timers(void);
ubyte dsp_response_data[15];

/* V34 Beta App support */
extern ubyte Cdata[MAX_PACKET_SIZE];

/*******************************************************************************
/
/                  send_pkt_to_dsp
/
/    Author:   RSA
/
/    Creation Date: 02/18/94
/
/    Description:   This routine will send the command packet to the dsp
/
/    Input Parameters:
/
/    Output Parameter:   None
/
/    Global Variables Changed:
/
/    Users: (routines that used this)   Many places
/
/    *****************************************************************
/    *                Modifications               *
/    *****************************************************************
/
*******************************************************************************/

void send_pkt_to_dsp()
{
   ubyte i;
   
   #if defined (DEBUG_PORT)
   ubyte len;
   #endif
       
   if( ack_or_response == ACK )
       dsp_cp_packet = PACKET_DP_ACK;

#if defined (DEBUG_PORT)
   /*  Trace packets sent to DSP, but filter out 0x0C, 0x91(polled) */
     if ((current_command[0] != 0x91) && (current_command[0] != 0xC) &&
         (current_command[0] != 0x0E) &&
         (current_command[0] != 0x68))  
//         (current_command[0] != 0x64))
   {
      len = current_command[2] + 4;
      for (i=0; i<len;i++)
      {
         outhex(current_command[i]);
         outchar(' ');
      }
      outchar(0x0D);  /*  CR-LF */
      outchar(0x0A);
  }
#endif
   dsp_timer = DSP_TIMEOUT;

   /* V34 Beta App support */
   /* If packet length is ODD, make it even */
   if (current_command[2] % 2 )
      current_command[2]++;

   while ( dsp_timer )
   { 
       process_timers();  

      if( cp_dsp() == DSP_DONE )
         break;
   }

   /* Did we have trouble */
   if( !dsp_timer )
    {
#if (ERROR_ON_TIMEOUT == 1)
        mt_driver_error_handler(current_command[0]);        
#endif
    }
   
   /* VCV support for poking DSP RAM */
   if( ack_or_response != NO_REPLY )
   {
        dsp_timer = DSP_TIMEOUT;
   
        while ( dsp_timer )
        {    
               process_timers();  
      
            if( dsp_cp() == DSP_DONE )
                break;
   
        }    
   
        /* Did we have trouble */
        if( !dsp_timer )
        {
#if (ERROR_ON_TIMEOUT == 1)
            mt_driver_error_handler(current_command[0]);        
#endif
        }
   }

   for (i=4; i<PACKET_LEN_BYTE; i++)
     current_command[i] = 0;

   update_modem_status();

#ifdef PORT_DEBUG
#if 0 /* put this in if response trace needed */
   if (ack_or_response == RESPONSE)
   {
      PrintOutChars("DSP RSP: ");
      for (i=0; i<8;i++)
      {
         outhex(dsp_response_data[i]);
         outchar(' ');
      }
      outchar(0x0D);  /*  CR-LF */
      outchar(0x0A);
   }   
#endif
#endif
}



