/******************************************************************************
/
/     Copyright, 1988, 1989, 1990, 1991, 1992, 1993, 1994. All Rights Reserved by:
/           RSA
/           7701 Six Forks Road
/           Suite 120
/           Raleigh, NC  27615
/           (919) 846-7171
/
/     This document contains material confidential to R. Scott Associates.
/     its contents must not be revealed, used or disclosed to anyone or
/     company with out written permission by R. Scott Associates.  the
/     information contained herein is solely for the use of R. Scott
/     Associates.
/
/       File:           mt00cust.c
/
/       Version:        1.00
/
/       Function:       Supporting Library Routines
/
/       Product:        Modem Task Driver for Merlin Chip Set
/
/       History:
/
/       Created:        3/01/94
/
/           ------------------------------------------------------
/           -                Modifications                       -
/           ------------------------------------------------------
/
/       Author & Date:
/       Description:
/       Reason:
/
******************************************************************************/
#include  "SYS_DEF.H"
#include  "cp_dsp.h"
#include  "MT_CODEF.H"
#include  "MT_HWDEF.H"
#include  "MT_COPRO.H"
#include  "MT_HWPRO.H"
#include  "MT_COEXT.H"
#include  "mt_macro.h"
#include	 "ptt.h"					/* MH102397 */

/* RJM040396 */
/* J5 support for Host based */
#include "dsp_drv.h"

/* RJM281096 */
/* Dynamic download support */
#include "dsppatch.h"
#include "homolig1.h"

void mt_init(void);
ubyte call_progress(void);
void config_dtmf_dial(ubyte,ubyte);
void set_dtmf_parms(void);
void init_call_progress(ubyte);
void tone_on(ubyte);

/* RJM040396 */
/* VCV support */

extern void dp_init_audio (void);

extern ubyte ring_on; /*22296shujin	*/
extern ubyte ring_was_on_before;

/*  DSP major.minor version number */
ubyte mt_major_dsp_ver;
ubyte mt_minor_dsp_ver;

#if INTERNATIONAL_CODE == 1
extern ubyte Tone_signal_level_lo;
#endif

/*******************************************************************************
/
/                                    mt_init
/
/       Author:         RSA
/
/       Creation Date:  03/01/94
/
/       Description:    This routine will initialize the modem task.  It does
/                       a complete power-up reset on modem task parameters.
/                       It puts modem_state in IDLE state.
/
/       Input Parameters:       None
/
/       Output Parameter:       None
/
/       Global Variables Changed:
/
/       Users: (routines that used this)  modem_init
/
/       *****************************************************************
/       *                         Modifications                         *
/       *****************************************************************
/
*******************************************************************************/
void mt_init(void)
{
   ubyte tmp;

   X2_MuOrA_Law = 0;
   modem_state = IDLE;
   bb_LED_long = 0;

   #if 0
   /*  wake up the DSP  */
   LOAD_MODEM_WAKEUP_DSP
	ack_or_response = ACK;
   send_pkt_to_dsp();

   init_ports();
   #endif

   /*  get the DSP version number  */
   LOAD_MODEM_GET_VERSION
   dsp_cp_packet = PACKET_DP_VERSION_INFO;

	ack_or_response = RESPONSE;
	send_pkt_to_dsp();

   mt_major_dsp_ver = dsp_response_data[2];
   mt_minor_dsp_ver = dsp_response_data[0];

	 LOAD_MODEM_INIT
	 ack_or_response = ACK;
	 send_pkt_to_dsp();

   /*   Set up values dependent on country   */
   default_dtmf_tone_duration     = DEFAULT_DTMF_TONE_DUR;
   default_dtmf_interdigit_delay  = DEFAULT_DTMF_INTERDIG_DELAY;
   dtmf_tone_duration = default_dtmf_tone_duration;
   dtmf_interdigit_delay = default_dtmf_interdigit_delay;
   set_dtmf_parms();

   /*init_default_DAA();*/	/* ramn 9/20/96 */

   set_volume(VOLUME_DEFAULT);
   set_speaker(OFF);

#if INTERNATIONAL_CODE == 1
    set_loc_line_relay(OFF);	/* MH092397 */
    set_safe1_en_relay(ACTIVATE);	/* JL112697 output = Hi */
    set_shunt_relay(ACTIVATE); /* MH112697 */
    Tone_signal_level_lo = 0;
#else
    set_safe1_en_relay(ACTIVATE);	/* JL112697 output = Hi */
#endif

   set_hook_relay(OFF);
   init_call_progress(ON_HOOK);

   /*   set up variables as defaults for %E, S110, %G   */
   mt_reneg_enab= 2;
   mt_fffb      = 0;
   fall_back_en = TRUE;
   fall_frwd_en = FALSE;
   fall_back_attempt = FALSE;
   fall_frwd_attempt = FALSE;
   received_RDL = FALSE;
   check_RDL_flag = FALSE;
   drop_flag = FALSE;


/* RJM040396 */
/* VCV support */
   dp_init_audio();         /* Initialize audio subsystem and hardware */

/* RJM040396 */
/* J5 support for Host based */
   dspdrv_ReadCram(CP_CONTROL, &tmp, 1);
   tmp &= 0xBF;                             /* Reset Bit 6 */
   dspdrv_WriteCram(CP_CONTROL, &tmp, 1);

}

/* RJM040396 */
/* Moved to MUSKET.C from Host based support */
#if 0
/*******************************************************************************
/
/                                  call_progress
/
/       Author:         RSA
/
/       Creation Date:  03/01/94
/
/       Description:    This routine will return the progress of the calling
/                       sequence.  USA only
/
/       Input Parameters:       None
/
/       Output Parameter:       0 - undetermined
/                               1 - dial tone
/                               2 - ring on
/                               3 - busy
/                               4 - silence
/                               5 - ring back
/                               6 - answer tone
/                               7 - ring off
/
/       Global Variables Changed:
/
/       Users: (routines that used this)  modem_call_progress
/
/       *****************************************************************
/       *                         Modifications                         *
/       *****************************************************************
/
/       Author & Date:
/       Description:
/       Reason:
/
*******************************************************************************/
/*22296shujin, for distinctive ring */
ubyte call_progress(void)
{
   ubyte tmp;
   static ringStatus= UNDETERMINED;

   tmp = read_dsp_call_progress_reg();

	if ( ring_on )
	{
	   ringStatus = RING_ON;
      tmp = RING_ON;
	 	return tmp;
	}
	else if ( (ring_on==FALSE) && (ring_was_on_before == TRUE)	)
	{
      tmp = RING_OFF;
      ringStatus = UNDETERMINED;
	 	return tmp;
	}
	else
   {
		if(tmp== RING_ON || tmp==RING_OFF)
		   tmp = UNDETERMINED;

      ringStatus = UNDETERMINED;
  		return tmp;
	}
}
#endif

/*******************************************************************************
/
/                               config_dtmf_dial
/
/       Author:         RSA
/
/       Creation Date:  03/01/94
/
/       Description:    This routine will configure the modem for DTMF dialing
/
/       Input Parameters:       tone_duration
/                               interdigit_delay
/
/       Output Parameter:       None
/
/       Global Variables Changed:       dtmf_tone_duration=to
/                                       dtmf_interdigit_delay
/
/       Users: (routines that used this)  modem_config_dtmf_dial
/
/       *****************************************************************
/       *                         Modifications                         *
/       *****************************************************************
/
/       Author & Date:
/       Description:
/
*******************************************************************************/
void config_dtmf_dial(ubyte tone_duration, ubyte interdigit_delay)
{
    dtmf_tone_duration = tone_duration;
    dtmf_interdigit_delay = interdigit_delay;
    set_dtmf_parms();
}

/*******************************************************************************
/
/                           set_dtmf_parms
/
/       Author:         RSA
/
/       Creation Date:  03/01/94
/
/       Description:    This routine write the DTMF tone duration and
/                       interdigit delay to the module DSP RAM.
/
/       Input Parameters:       None
/
/       Output Parameter:       None
/
/       Global Variables Changed:       INTERDIGIT_DELAY_DTMF
/                                       TONE_DUR_FOR_DTMF
/
/       Users: (routines that used this)    modem_config_dtmf_dial
/
/       *****************************************************************
/       *                         Modifications                         *
/       *****************************************************************
/
/       Author & Date:
/       Description:
/       Reason:
/
*******************************************************************************/
void set_dtmf_parms(void)
{
    /*  The time constants are in units of 1ms */
	LOAD_MODEM_CONFIG_DIAL
	ack_or_response = ACK;
	send_pkt_to_dsp();
}

/*******************************************************************************
/
/                             init_call_progress
/
/       Author:         RSA
/
/       Creation Date:  03/01/94
/
/       Description:    This routine will establish the type of calling
/                       sequence to process.
/
/       Input Parameters:       0 - modem is on hook
/                               1 - modem is off hook and not dialed
/                               2 - modem is off hook and dialed
/
/       Output Parameter:       None
/
/       Global Variables Changed:
/
/       Users: (routines that used this)  modem_init_call_progress
/
/       *****************************************************************
/       *                         Modifications                         *
/       *****************************************************************
/
/       Author & Date:
/       Description:
/       Reason:
/
*******************************************************************************/
void init_call_progress(ubyte prog_mode)

{
   if (prog_mode < 3)
   {
	/*
	current_command [0] = PACKET_MODEM_INIT_CALL_PROGRESS;
	current_command [1] = 0x00;
	current_command [2] = PACKET_MODEM_INIT_CALL_PROGRESS_LEN;
	current_command [3] = 0x00;
	current_command [4] = prog_mode;

	while (error_occured = cp_dsp());
	while (error_occured = dsp_acknowledge_packet());
	*/

	LOAD_MODEM_INIT_CALL_PROGRESS
	ack_or_response = ACK;
	send_pkt_to_dsp();

/* RJM281096 */
/* Dynamic download support */
       if( prog_mode == ON_HOOK )
       {
           /* Re-download the training patch */
			  dsppatch(COMMON_PATCH);
           dsppatch(RETRAIN_PATCH);
       }


   }

#if INTERNATIONAL_CODE == 1
/* MH102397 This routine will have to be changed to allow all
   the countries depending on the country code. */

	   InitiateToneATaps(); /*  MH101697 */
	InitiateThresoldLevel();
#endif

}


/*******************************************************************************
/
/                            tone_on
/
/       Author:         RSA
/
/       Creation Date:  03/01/94
/
/       Description:    This routine will turn on the given digit.
/
/       Input Parameters:       digit_to_dial = digit 0 thru digit 9,
/                                               A, B, C, D, *, #
/       Output Parameter:       None
/
/       Global Variables Changed:       None
/
/       Users: (routines that used this)  modem_tone_on
/
/       *****************************************************************
/       *                         Modifications                         *
/       *****************************************************************
/
/       Author & Date:
/       Description:
/       Reason:
/
*******************************************************************************/
void tone_on(ubyte digit_to_dial)
{

	/*
	current_command [0] = PACKET_MODEM_DIAL_DIGIT;
	current_command [1] = 0x00;
	current_command [2] = PACKET_MODEM_DIAL_DIGIT_LEN;
	current_command [3] = 0x00;
	current_command [4] = digit_to_dial;
	while (error_occured = cp_dsp());
	while (error_occured = dsp_acknowledge_packet());
	*/

    switch(digit_to_dial)
    {
        case '*' :
            digit_to_dial = 0x0e;
            break;

        case '#' :
            digit_to_dial = 0x0f;
            break;

        case 'A' :
        case 'B' :
        case 'C' :
        case 'D' :
            digit_to_dial = digit_to_dial - 'A'+ 10;
            break;
        default:
            digit_to_dial = digit_to_dial - '0';
            break;
     }

	LOAD_MODEM_DIAL_DIGIT
	ack_or_response = ACK;
	send_pkt_to_dsp();

}




