/****************************************************************************
/
/   Copyright, 1991,1992,1993,1994.       All Rights Reserved by:
/       RSA
/       7701 Six Forks Road
/       Suite 120
/       Raleigh, NC  27615
/       (919) 846-7171
/
/
/   This document contains material confidential to RSA its contents must
/   not be revealed, used or disclosed to anyone or company with out
/   written permission by RSA.  The information contained herein is solely
/   for the use of RSA.
/
/   File: f1x00pr.c
/
/   Module Version: 4.03
/
/   Function: This file contains AT commands for the Class 1 578 FAX Module
/
/   Product: Class 1 FAX Module.
/
/   History: fx00pr1.c 3.98
/
/   Created: 2/11/93
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
****************************************************************************/
#include "sys_def.h"

/* Defines for parser response code */
#define SYNTAX_ERROR            2
#define NOTA_COMMAND            3
#define UNUSED                  0

/* Defines for the command parameter passed to fax_execute_cmd() */
#define FAX1_FTS_COMMAND        1
#define FAX1_FRS_COMMAND        2
#define FAX1_FTM_COMMAND        3
#define FAX1_FRM_COMMAND        4
#define FAX1_FTH_COMMAND        5
#define FAX1_FRH_COMMAND        6
#define FAX1_FTM_QUERY          7
#define FAX1_FRM_QUERY          8
#define FAX1_FTH_QUERY          9
#define FAX1_FRH_QUERY          10

/* FAX class 1 parser memory allocation */
ubyte fax1_error_occurred;

extern ubyte fax_execute_command(uword, ubyte *, ubyte **);

ubyte fax1_parse(ubyte **, ubyte **);
static ubyte fax1_FTH(ubyte **, ubyte **);
static ubyte fax1_FTM(ubyte **, ubyte **);
static ubyte fax1_FTS(ubyte **, ubyte **);
static ubyte fax1_FRH(ubyte **, ubyte **);
static ubyte fax1_FRM(ubyte **, ubyte **);
static ubyte fax1_FRS(ubyte **, ubyte **);
static ubyte fax1_parse_a_to_d(ubyte **);
static ubyte fax1_get_next_char(ubyte **);
static void fax1_unget_char(ubyte **, ubyte);

/******************************************************************************
/
/   Routine: fax1_parse
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This routine will parse the Class 1 578 FAX commands.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                               The command line pointer should be pointing to
/                               the next character to parse after the "+F".
/                               When fax_parse returns, the command line pointer
/                               well have been updated to point to the next
/                               character passed the FAX command.
/                     ubyte     **response_ptr_ptr
/                               A pointer to a location where the address of
/                               the response string should be placed.
/
/   Output Parameters: ubyte    function return code
/                               0   Fax, go to online
/                               1   Fax, continue parsing
/                               2   Fax/parser, discard rest of command
/                                   line and respond with ERROR message
/                               3   Parser, not a command
/
/   Global Variables Changed:  None
/
/   Users: fax_parse()
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
ubyte fax1_parse(ubyte **command_ptr_ptr, ubyte **response_ptr_ptr)
{
    ubyte return_code;

    /* look for +FT and +FR */
    switch (fax1_get_next_char(command_ptr_ptr))
    {
        case 'T':                           /* '+FT' */
            /* look for +FTS +FTM and +FTH */
            switch (fax1_get_next_char(command_ptr_ptr))
            {
               case 'S':                    /* '+FTS' */
                    return_code = fax1_FTS(command_ptr_ptr, response_ptr_ptr);
                    break;
               case 'M':                    /* '+FTM' */
                    return_code = fax1_FTM(command_ptr_ptr, response_ptr_ptr);
                    break;
               case 'H':                    /* '+FTH' */
                    return_code = fax1_FTH(command_ptr_ptr, response_ptr_ptr);
                    break;
               default:
                    return_code = NOTA_COMMAND;
                    break;
            }
            break;
        case 'R':                           /* '+FR' */
            /* look for +FRS +FRM and +FRH */
            switch (fax1_get_next_char(command_ptr_ptr))
            {
               case 'S':                    /* '+FRS' */
                    return_code = fax1_FRS(command_ptr_ptr, response_ptr_ptr);
                    break;
               case 'M':                    /* '+FRM' */
                    return_code = fax1_FRM(command_ptr_ptr, response_ptr_ptr);
                    break;
               case 'H':                    /* '+FRH' */
                    return_code = fax1_FRH(command_ptr_ptr, response_ptr_ptr);
                    break;
               default:
                    return_code = NOTA_COMMAND;
                    break;
            }
            break;
        default:
            return_code = NOTA_COMMAND;
            break;
    }
    return(return_code);
}
                
/******************************************************************************
/
/   Routine: fax1_FTS
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This routine implements the +FTS command.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                     ubyte     **response_ptr_ptr
/                               A pointer to a location where the address of
/                               the response string should be placed.
/
/   Output Parameters: ubyte    function return code
/                               0   Fax, go to online
/                               1   Fax, continue parsing
/                               2   Fax/parser, discard rest of command
/                                   line and respond with ERROR message
/                               3   Parser, not a command
/
/   Global Variables Changed: None
/
/   Users: fax1_parse
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
static ubyte fax1_FTS(ubyte **command_ptr_ptr, ubyte **response_ptr_ptr)
{
    ubyte num;

    /* look for +FTS=<Time> */
    if (fax1_get_next_char(command_ptr_ptr) == '=')
    {
        num = fax1_parse_a_to_d(command_ptr_ptr);
        /* is time value in range (0-255) */
        if (!fax1_error_occurred)
            return(fax_execute_command(FAX1_FTS_COMMAND, &num, response_ptr_ptr));
    }
    return(SYNTAX_ERROR);
}
                
/******************************************************************************
/
/   Routine: fax1_FRS
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This routine implements the +FRS command.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                     ubyte     **response_ptr_ptr
/                               A pointer to a location where the address of
/                               the response string should be placed.
/
/   Output Parameters: ubyte    function return code
/                               0   Fax, go to online
/                               1   Fax, continue parsing
/                               2   Fax/parser, discard rest of command
/                                   line and respond with ERROR message
/                               3   Parser, not a command
/
/   Global Variables Changed: None
/
/   Users: fax1_parse
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
static ubyte fax1_FRS(ubyte **command_ptr_ptr, ubyte **response_ptr_ptr)
{
    ubyte num;

    /* look for +FRS=<Time> */
    if (fax1_get_next_char(command_ptr_ptr) == '=')
    {
        num = fax1_parse_a_to_d(command_ptr_ptr);
        /* is time value in range (0-255) */
        if (!fax1_error_occurred)
            return(fax_execute_command(FAX1_FRS_COMMAND, &num, response_ptr_ptr));
    }
    return(SYNTAX_ERROR);
}
                
/******************************************************************************
/
/   Routine: fax1_FTM
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This routine implements the +FTM command.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                     ubyte     **response_ptr_ptr
/                               A pointer to a location where the address of
/                               the response string should be placed.
/
/   Output Parameters: ubyte    function return code
/                               0   Fax, go to online
/                               1   Fax, continue parsing
/                               2   Fax/parser, discard rest of command
/                                   line and respond with ERROR message
/                               3   Parser, not a command
/
/   Global Variables Changed: None
/
/   Users: fax1_parse
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
static ubyte fax1_FTM(ubyte **command_ptr_ptr, ubyte **response_ptr_ptr)
{
    ubyte num;

    /* look for +FTM= */
    if (fax1_get_next_char(command_ptr_ptr) == '=')
    {
        /* look for +FTM=? */
        if (fax1_get_next_char(command_ptr_ptr) == '?')
            return(fax_execute_command(FAX1_FTM_QUERY, UNUSED, response_ptr_ptr));

        fax1_unget_char(command_ptr_ptr, 1);
        num = fax1_parse_a_to_d(command_ptr_ptr);

        /* is modulation value in range */
        if (!fax1_error_occurred && num == 3 || num == 24 || num == 48 ||
            (num >= 72 && num <= 74) || (num >= 96 && num <= 98) ||
            num == 121 || num == 122 || num == 145 || num == 146)
            return(fax_execute_command(FAX1_FTM_COMMAND, &num, response_ptr_ptr));
    }
    return(SYNTAX_ERROR);
}
                
/******************************************************************************
/
/   Routine: fax1_FRM
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This routine implements the +FRM command.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                     ubyte     **response_ptr_ptr
/                               A pointer to a location where the address of
/                               the response string should be placed.
/
/   Output Parameters: ubyte    function return code
/                               0   Fax, go to online
/                               1   Fax, continue parsing
/                               2   Fax/parser, discard rest of command
/                                   line and respond with ERROR message
/                               3   Parser, not a command
/
/   Global Variables Changed: None
/
/   Users: fax1_parse
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
static ubyte fax1_FRM(ubyte **command_ptr_ptr, ubyte **response_ptr_ptr)
{
    ubyte num;

    /* look for +FRM= */
    if (fax1_get_next_char(command_ptr_ptr) == '=')
    {
        /* look for +FRM=? */
        if (fax1_get_next_char(command_ptr_ptr) == '?')
            return(fax_execute_command(FAX1_FRM_QUERY, UNUSED, response_ptr_ptr));

        fax1_unget_char(command_ptr_ptr, 1);
        num = fax1_parse_a_to_d(command_ptr_ptr);

        /* is modulation value in range */
        if (!fax1_error_occurred && num == 3 || num == 24 || num == 48 ||
            (num >= 72 && num <= 74) || (num >= 96 && num <= 98) ||
            num == 121 || num == 122 || num == 145 || num == 146)
            return(fax_execute_command(FAX1_FRM_COMMAND, &num, response_ptr_ptr));
    }
    return(SYNTAX_ERROR);
}

/******************************************************************************
/
/   Routine: fax1_FTH
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This routine implements the +FTH command.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                     ubyte     **response_ptr_ptr
/                               A pointer to a location where the address of
/                               the response string should be placed.
/
/   Output Parameters: ubyte    function return code
/                               0   Fax, go to online
/                               1   Fax, continue parsing
/                               2   Fax/parser, discard rest of command
/                                   line and respond with ERROR message
/                               3   Parser, not a command
/
/   Global Variables Changed: None
/
/   Users: fax1_parse
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
static ubyte fax1_FTH(ubyte **command_ptr_ptr, ubyte **response_ptr_ptr)
{
    ubyte num;

    /* look for +FTH= */
    if (fax1_get_next_char(command_ptr_ptr) == '=')
    {
        /* look for +FTH=? */
        if (fax1_get_next_char(command_ptr_ptr) == '?')
            return(fax_execute_command(FAX1_FTH_QUERY, UNUSED, response_ptr_ptr));

        fax1_unget_char(command_ptr_ptr, 1);
        num = fax1_parse_a_to_d(command_ptr_ptr);

        /* is modulation value in range */
        if (!fax1_error_occurred && num == 3 || num == 24 || num == 48 ||
            (num >= 72 && num <= 74) || (num >= 96 && num <= 98) ||
            num == 121 || num == 122 || num == 145 || num == 146)
            return(fax_execute_command(FAX1_FTH_COMMAND, &num, response_ptr_ptr));
    }
    return(SYNTAX_ERROR);
}

/******************************************************************************
/
/   Routine: fax1_FRH
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This routine implements the +FRH command.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                     ubyte     **response_ptr_ptr
/                               A pointer to a location where the address of
/                               the response string should be placed.
/
/   Output Parameters: ubyte    function return code
/                               0   Fax, go to online
/                               1   Fax, continue parsing
/                               2   Fax/parser, discard rest of command
/                                   line and respond with ERROR message
/                               3   Parser, not a command
/
/   Global Variables Changed: None
/
/   Users: fax1_parse
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
static ubyte fax1_FRH(ubyte **command_ptr_ptr, ubyte **response_ptr_ptr)
{
    ubyte num;

    /* look for +FRH= */
    if (fax1_get_next_char(command_ptr_ptr) == '=')
    {
        /* look for +FRH=? */
        if (fax1_get_next_char(command_ptr_ptr) == '?')
            return(fax_execute_command(FAX1_FRH_QUERY, UNUSED, response_ptr_ptr));

        fax1_unget_char(command_ptr_ptr, 1);
        num = fax1_parse_a_to_d(command_ptr_ptr);

        /* is modulation value in range */
        if (!fax1_error_occurred && num == 3 || num == 24 || num == 48 ||
            (num >= 72 && num <= 74) || (num >= 96 && num <= 98) ||
            num == 121 || num == 122 || num == 145 || num == 146)
            return(fax_execute_command(FAX1_FRH_COMMAND, &num, response_ptr_ptr));
    }
    return(SYNTAX_ERROR);
}

/******************************************************************************
/
/   Routine: fax1_parse_a_to_d
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This Routine converts an ASCII characters to their
/                decimal value.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/
/   Output Parameters: ubyte    decimal value
/
/   Global Variables Changed: None
/
/   Users: fax1_parse sub functions
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
static ubyte fax1_parse_a_to_d(ubyte **command_ptr_ptr)
{
    uword data_byte;
    ubyte ch;

    fax1_error_occurred = FALSE;
    data_byte = 0;  /* initialize return value */
    ch = fax1_get_next_char(command_ptr_ptr); /* get the first char */
    while (ch >= '0' && ch <= '9')  /* is it in range */
    {
        data_byte = (data_byte * 10) + (ch - '0'); /* translate and add */

        if (data_byte > 255) /* have we overrun */
        {
            fax1_error_occurred = TRUE; /* error indication */
            return((ubyte)data_byte); /* return unused value */
        }
        ch = fax1_get_next_char(command_ptr_ptr); /* get next char */
    }

    fax1_unget_char(command_ptr_ptr, 1);   /* return unused character */
    return((ubyte)data_byte);   /* respond with converted value */
}

/******************************************************************************
/
/   Routine: fax1_get_next_char
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This Routine returns the next character in the command
/                buffer. It will also convert any lower case characters
/                to uppercase.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/
/   Output Parameters: ubyte    character pointed to by the command_ptr_ptr
/
/   Global Variables Changed: command_ptr_ptr
/
/   Users: fax1_parse sub functions
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
static ubyte fax1_get_next_char(ubyte **command_ptr_ptr)
{
    /* convert to upper case if needed */
    if (**command_ptr_ptr >= 'a' && **command_ptr_ptr <= 'z')
        return(*(*command_ptr_ptr)++ - 'a' + 'A');
    else
        return(*(*command_ptr_ptr)++);
}

/******************************************************************************
/
/   Routine: fax1_unget_char
/
/   Author: RSA
/
/   Creation Date: 2/11/93
/
/   Description: This Routine will move the command pointer back the
/                indicated number of characters.
/
/   Input Parameters: ubyte     **command_ptr_ptr
/                               A pointer to to a command line pointer.
/                     ubyte     num
/                               number of times to decrement the command pointer.
/
/   Output Parameters: ubyte    character pointed to by the command_ptr_ptr
/
/   Global Variables Changed: command_ptr_ptr
/
/   Users: fax1_parse sub functions
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Descritpion:
/   Reason:
/
*******************************************************************************/
static void fax1_unget_char(ubyte **command_ptr_ptr, ubyte num)
{
    /* decrement the pointer by the number of characters to be returned */
    *command_ptr_ptr -= num;
}

