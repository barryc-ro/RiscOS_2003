/****************************************************************************
/
/   Copyright, 1991,1992,1993,1994.       All Rights Reserved by:
/       RSA
/       7701 Six Forks Road
/       Suite 120
/       Raleigh, NC  27615
/       (919) 846-7171
/
/
/   This document contains material confidential to RSA its contents must
/   not be revealed, used or disclosed to anyone or company with out
/   written permission by RSA.  The information contained herein is solely
/   for the use of RSA.
/
/   File: f2x00ct.c
/
/   Module Version: 4.03
/
/   Function: This file contains constant memory definitions for FAX class 2.
/
/   Product: FAX class 2 core code
/
/   History: f2x00cc.c
/
/   Created: 9/19/92
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
****************************************************************************/
#include "sys_def.h"

#include "f2x_def.h"

/* The following is a set of T.30 parameter negotiation tables. The rows are */
/* the local capabilities and the columbs are the DIS remote capabilities */

/* Bit Rate */
const ubyte fax2_accept_DIS_BR_table[6][16] =
{
{BR_2400,  BR_2400,  BR_2400,  BR_2400,  BR_2400,  BR_2400,  BR_2400,  BR_2400,
 BR_2400,  BR_2400,  BR_2400,  BR_2400,  BR_2400,  BR_2400,  BR_2400,  BR_2400},
{BR_2400,  BR_4800,  BR_4800,  BR_4800,  BR_2400,  BR_2400,  BR_2400,  BR_4800,
 BR_2400,  BR_2400,  BR_2400,  BR_4800,  BR_2400,  BR_2400,  BR_2400,  BR_2400},
{BR_2400,  BR_7200,  BR_4800,  BR_7200,  BR_2400,  BR_2400,  BR_2400,  BR_7200,
 BR_2400,  BR_2400,  BR_2400,  BR_7200,  BR_2400,  BR_2400,  BR_2400,  BR_2400},
{BR_2400,  BR_9600,  BR_4800,  BR_9600,  BR_2400,  BR_2400,  BR_2400,  BR_9600,
 BR_2400,  BR_2400,  BR_2400,  BR_9600,  BR_2400,  BR_2400,  BR_2400,  BR_2400},
{BR_2400,  BR_9600,  BR_4800,  BR_9600,  BR_2400,  BR_2400,  BR_2400,  BR_12000,
 BR_2400,  BR_2400,  BR_2400,  BR_V12000,BR_2400,  BR_2400,  BR_2400,  BR_2400},
{BR_2400,  BR_9600,  BR_4800,  BR_9600,  BR_2400,  BR_2400,  BR_2400,  BR_14400,
 BR_2400,  BR_2400,  BR_2400,  BR_V14400,BR_2400,  BR_2400,  BR_2400,  BR_2400}
};

/* Page Width */
const ubyte fax2_accept_DIS_WD_table[3][4] =
{
    {WD_1728, WD_1728, WD_1728, WD_1728},
    {WD_1728, WD_2048, WD_2048, WD_2048},
    {WD_1728, WD_2048, WD_2432, WD_2432}
};

/* Page Length */
const ubyte fax2_accept_DIS_LN_table[3][4] =
{
    {LN_297, LN_297, LN_297, LN_297},
    {LN_297, LN_364, LN_364, LN_297},
    {LN_297, LN_364, LN_UNL, LN_297}
};

/* Scan Time/Line */
const ubyte fax2_accept_DIS_ST_table[8][8] =
{
{ST_20_20, ST_5_5,   ST_10_10, ST_20_10, ST_40_40, ST_40_20, ST_10_5,  ST_0},
{ST_20_20, ST_5_5,   ST_10_10, ST_20_10, ST_40_40, ST_40_20, ST_10_5,  ST_5_5},
{ST_20_20, ST_10_5,  ST_10_10, ST_20_10, ST_40_40, ST_40_20, ST_10_5,  ST_10_5},
{ST_20_20, ST_10_10, ST_10_10, ST_20_10, ST_40_40, ST_40_20, ST_10_10, ST_10_10},
{ST_20_20, ST_20_10, ST_20_10, ST_20_10, ST_40_40, ST_40_20, ST_20_10, ST_20_10},
{ST_20_20, ST_20_20, ST_20_20, ST_20_20, ST_40_40, ST_40_20, ST_20_20, ST_20_20},
{ST_40_20, ST_40_20, ST_40_20, ST_40_20, ST_40_40, ST_40_20, ST_40_20, ST_40_20},
{ST_40_40, ST_40_40, ST_40_40, ST_40_40, ST_40_40, ST_40_40, ST_40_40, ST_40_40}
};

/* The following is a set of T.30 DCS parameter translate tables. */
/* The index is the DCS configuration parameter and the table value is the */
/* corresponding equivelant class 2 configuration parameter. */

/* Bit Rate */
const ubyte fax2_accept_DCS_BR_table[16] =
{
BR_2400,   BR_9600,  BR_4800,   BR_7200,  BR_14400, BR_2400, BR_12000, BR_2400,
BR_V14400, BR_V9600, BR_V12000, BR_V7200, BR_2400,  BR_2400, BR_2400,  BR_2400
};

/* Page Width */
const ubyte fax2_accept_DCS_WD_table[4] =
{
    WD_1728, WD_2048, WD_2432, WD_1728
};

/* Page Length */
const ubyte fax2_accept_DCS_LN_table[4] =
{
    LN_297, LN_364, LN_UNL, LN_297
};

/* Scan Time/Line */
const ubyte fax2_accept_DCS_ST_table[8] =
{
    ST_20_20, ST_5_5, ST_10_10, ST_40_40, ST_40_40, ST_40_40, ST_40_40, ST_0
};

/* The following is a set of T.30 DIS/DTC parameter translate tables. */
/* The index is the DIS/DTC configuration parameter and the table value is the */
/* corresponding equivelant class 2 configuration parameter. */

/* Bit Rate */
const ubyte fax2_translate_DIS_BR_table[16] =
{
    BR_2400, BR_9600, BR_4800, BR_9600,  BR_2400, BR_2400, BR_2400, BR_14400,
    BR_2400, BR_2400, BR_2400, BR_14400, BR_2400, BR_2400, BR_2400, BR_2400
};

/* Page Width */
const ubyte fax2_translate_DIS_WD_table[4] =
{
    WD_1728, WD_2048, WD_2432, WD_2432
};

/* Page Length */
const ubyte fax2_translate_DIS_LN_table[4] =
{
    LN_297, LN_364, LN_UNL, LN_297
};

/* Scan Time/Line */
const ubyte fax2_translate_DIS_ST_table[8] =
{
    ST_20_20, ST_5_5, ST_10_10, ST_20_10, ST_40_40, ST_40_20, ST_10_5, ST_0
};

/* The following is a set of T.30 class 2 parameter translate tables. */
/* The index is the class 2 configuration parameter and the table value is the */
/* corresponding equivelant DIS/DTC configuration parameter. */

/* Bit Rate */
const ubyte fax2_generate_DIS_BR_table[6] =
{
    DIS_BR_V27_FALL_BACK, DIS_BR_V27, DIS_BR_V27,
    DIS_BR_V27_V29, DIS_BR_V27_V29, DIS_BR_V27_V29_V17
};

/* Page Width */
const ubyte fax2_generate_DIS_WD_table[3] =
{
    DIS_WD_1728, DIS_WD_1728_2048, DIS_WD_1728_2048_2432
};

/* Page Length */
const ubyte fax2_generate_DIS_LN_table[3] =
{
    DIS_LN_297, DIS_LN_297_364, DIS_LN_297_364_UNL
};

/* Scan Time/Line */
const ubyte fax2_generate_DIS_ST_table[8] =
{
    DIS_ST_0, DIS_ST_5_5, DIS_ST_10_5, DIS_ST_10_10,
    DIS_ST_20_10, DIS_ST_20_20, DIS_ST_40_20, DIS_ST_40_40
};

/* The following is a set of T.30 class 2 parameter translate tables. */
/* The index is the class 2 configuration parameter and the table value is the */
/* corresponding equivelant DIS/DTC configuration parameter. */

/* Bit Rate */
const ubyte fax2_generate_DCS_BR_table[10] =
{
    DCS_BR_V27_2400, DCS_BR_V27_4800,
    DCS_BR_V29_7200, DCS_BR_V29_9600, DCS_BR_V33_12000, DCS_BR_V33_14400,
    DCS_BR_V17_7200, DCS_BR_V17_9600, DCS_BR_V17_12000, DCS_BR_V17_14400
};

/* Page Width */
const ubyte fax2_generate_DCS_WD_table[3] =
{
    DCS_WD_1728, DCS_WD_2048, DCS_WD_2432
};

/* Page Length */
const ubyte fax2_generate_DCS_LN_table[3] =
{
    DCS_LN_297, DCS_LN_364, DCS_LN_UNL
};

/* Scan Time/Line */
const ubyte fax2_generate_DCS_ST_table[2][8] =
{
   {DCS_ST_0,  DCS_ST_5,  DCS_ST_10, DCS_ST_10,
    DCS_ST_20, DCS_ST_20, DCS_ST_40, DCS_ST_40},
   {DCS_ST_0,  DCS_ST_5,  DCS_ST_5,  DCS_ST_10,
    DCS_ST_10, DCS_ST_20, DCS_ST_20, DCS_ST_40}
};

/* This table translates the class 2 negotiated baud rate into the */
/* corresponding Modem Task modulation configuration parameter. */
/* The table adjusts for long and short trains as necessary. */
/* The row indicates long or short train and the columbs indicate the baud rate */
const ubyte fax2_modulation_table[2][10] =
{
   {MOD_V27_2400, MOD_V27_4800,
    MOD_V29_7200, MOD_V29_9600, MOD_V17_12000, MOD_V17_14400,
    MOD_V17ST_7200, MOD_V17ST_9600, MOD_V17ST_12000, MOD_V17ST_14400},
   {MOD_V27_2400, MOD_V27_4800,
    MOD_V29_7200, MOD_V29_9600, MOD_V17_12000, MOD_V17_14400,
    MOD_V17_7200, MOD_V17_9600, MOD_V17_12000, MOD_V17_14400}
};

/* This table provides the number of characters needed to be received at the */
/* given baud rate to constitute 1 second of TCF */
const uword fax2_training_count_table[10] =
{
    TCF_2400_COUNT, TCF_4800_COUNT,
    TCF_7200_COUNT, TCF_9600_COUNT, TCF_12000_COUNT, TCF_14400_COUNT,
    TCF_7200_COUNT, TCF_9600_COUNT, TCF_12000_COUNT, TCF_14400_COUNT
};

/* This table provides the minimum number of non-NULL characters that are */
/* allowed in a "good" TCF at a given baud rate */
const ubyte fax2_bad_TCF_table[10] =
{
    BAD_2400_COUNT, BAD_4800_COUNT,
    BAD_7200_COUNT, BAD_9600_COUNT, BAD_12000_COUNT, BAD_14400_COUNT,
    BAD_7200_COUNT, BAD_9600_COUNT, BAD_12000_COUNT, BAD_14400_COUNT
};

/* This table translates from a class 2 post page response value to a */
/* corresponding T.30 FCF value */
const ubyte fax2_ppr_table[6] =
{
    MCF_PACKET, MCF_PACKET, RTN_PACKET, RTP_PACKET, PIN_PACKET, PIP_PACKET
};

/* This table translates from a class 2 post page command value to a */
/* corresponding T.30 FCF value */
const ubyte fax2_ppc_table[6] =
{
    MPS_PACKET, EOM_PACKET, EOP_PACKET,
    PRI_MPS_PACKET, PRI_EOM_PACKET, PRI_EOP_PACKET
};

/* This table converts class 2.0 (592) hangup status values to the */
/* corresponding class 2 (2388) hangup status values */
const ubyte fax2_error_translate_table[164] =
{
     0,  1,  2,  3,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    10, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    20, 21, 22, 23, 24, 25, 26, 27, 28, 20, 20, 20, 20, 20, 20, 20,
    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
    40, 40, 40, 43, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
    50, 51, 52, 53, 54, 55, 56, 57, 58, 50, 50, 50, 50, 50, 50, 50,
    50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
    70, 71, 72, 73, 74, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
    70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
    90, 91, 94, 93, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
    100, 101, 102, 103
};

/* This table converts a given byte to its equivalent bit reversed byte */
const ubyte  fax2_reverse_table[256] =
{
    0x00, 0x80, 0x40, 0xC0, 0x20, 0xA0, 0x60, 0xE0,
    0x10, 0x90, 0x50, 0xD0, 0x30, 0xB0, 0x70, 0xF0,
    0x08, 0x88, 0x48, 0xC8, 0x28, 0xA8, 0x68, 0xE8,
    0x18, 0x98, 0x58, 0xD8, 0x38, 0xB8, 0x78, 0xF8,
    0x04, 0x84, 0x44, 0xC4, 0x24, 0xA4, 0x64, 0xE4,
    0x14, 0x94, 0x54, 0xD4, 0x34, 0xB4, 0x74, 0xF4,
    0x0C, 0x8C, 0x4C, 0xCC, 0x2C, 0xAC, 0x6C, 0xEC,
    0x1C, 0x9C, 0x5C, 0xDC, 0x3C, 0xBC, 0x7C, 0xFC,
    0x02, 0x82, 0x42, 0xC2, 0x22, 0xA2, 0x62, 0xE2,
    0x12, 0x92, 0x52, 0xD2, 0x32, 0xB2, 0x72, 0xF2,
    0x0A, 0x8A, 0x4A, 0xCA, 0x2A, 0xAA, 0x6A, 0xEA,
    0x1A, 0x9A, 0x5A, 0xDA, 0x3A, 0xBA, 0x7A, 0xFA,
    0x06, 0x86, 0x46, 0xC6, 0x26, 0xA6, 0x66, 0xE6,
    0x16, 0x96, 0x56, 0xD6, 0x36, 0xB6, 0x76, 0xF6,
    0x0E, 0x8E, 0x4E, 0xCE, 0x2E, 0xAE, 0x6E, 0xEE,
    0x1E, 0x9E, 0x5E, 0xDE, 0x3E, 0xBE, 0x7E, 0xFE,
    0x01, 0x81, 0x41, 0xC1, 0x21, 0xA1, 0x61, 0xE1,
    0x11, 0x91, 0x51, 0xD1, 0x31, 0xB1, 0x71, 0xF1,
    0x09, 0x89, 0x49, 0xC9, 0x29, 0xA9, 0x69, 0xE9,
    0x19, 0x99, 0x59, 0xD9, 0x39, 0xB9, 0x79, 0xF9,
    0x05, 0x85, 0x45, 0xC5, 0x25, 0xA5, 0x65, 0xE5,
    0x15, 0x95, 0x55, 0xD5, 0x35, 0xB5, 0x75, 0xF5,
    0x0D, 0x8D, 0x4D, 0xCD, 0x2D, 0xAD, 0x6D, 0xED,
    0x1D, 0x9D, 0x5D, 0xDD, 0x3D, 0xBD, 0x7D, 0xFD,
    0x03, 0x83, 0x43, 0xC3, 0x23, 0xA3, 0x63, 0xE3,
    0x13, 0x93, 0x53, 0xD3, 0x33, 0xB3, 0x73, 0xF3,
    0x0B, 0x8B, 0x4B, 0xCB, 0x2B, 0xAB, 0x6B, 0xEB,
    0x1B, 0x9B, 0x5B, 0xDB, 0x3B, 0xBB, 0x7B, 0xFB,
    0x07, 0x87, 0x47, 0xC7, 0x27, 0xA7, 0x67, 0xE7,
    0x17, 0x97, 0x57, 0xD7, 0x37, 0xB7, 0x77, 0xF7,
    0x0F, 0x8F, 0x4F, 0xCF, 0x2F, 0xAF, 0x6F, 0xEF,
    0x1F, 0x9F, 0x5F, 0xDF, 0x3F, 0xBF, 0x7F, 0xFF
};

