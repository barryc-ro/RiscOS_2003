//////////////////////////////////////////////////////////////////////
//
// name: cut_type.h
//
// purpose:  Type definitions for data and program data and address
//
//////////////////////////////////////////////////////////////////////


typedef unsigned long  data_t;
typedef unsigned long  addr_t;

// for address range checking in simulators
typedef struct {
	data_t	data;
	int		ref_type;
	data_t	expression;
} rich_obj_t;


//
// program and data memory widths in characters (for display)
//
#define PA_WIDTH	    	5
#define PD_WIDTH	    	4
#define DA_WIDTH	    	5
#define DD_WIDTH	    	4

#define MAX_PROG_ADDR  		0x3ffff
#define MAX_FP_PROG_ADDR  	0x3ff
#define MAX_DATA_ADDR		0x1ffff
#define DD_MAX					0xffff
#define DA_MAX					MAX_DATA_ADDR
#define PD_MAX					0xffff
#define PA_MAX					MAX_PROG_ADDR
#define MAX_PROG_ADDR_STR 	"3ffff"
#define MAX_DATA_ADDR_STR	"1ffff"

#define MAX_INTERRUPT_ADDR		0x10

//
// format strings for program and data addresses and elements
//
#define PA_FMT_STR		"%05lx"
#define PD_FMT_STR		"%04lx"
#define DA_FMT_STR		"%05lx"
#define DD_FMT_STR		"%04lx"
#define TCL_DD_FMT_STR  "%#04lx"
#define TCL_PD_FMT_STR  "%#04lx"

#define BRK_INSTR_LEN		1
#define FP_BRK_INSTR_LEN	2
#define BRA_INSTR_LEN	2
#define MAX_INSTR_LEN	2

#define FP_BRK_INSTRUCTION {FP_BRA_INSTR, FP_MON_ENTRY}
#define BRK_INSTRUCTION {SWI_INSTR}

// instruction coding for breakpt.cpp and others
#define	BRA_INSTR   0x2400	/* opcode for bra always */
#define	SWI_INSTR   0x3140	/* opcode for software interrupt (breakpoint) */
#define  FP_BRA_INSTR  0x8c00
#define	FP_MON_ENTRY  0xabcd

#ifdef __cplusplus
const int     INITIAL_SWI_LOCATION = (addr_t) 0x7ff7;
const int     BRK_CODE_RELOCATION_AREA = (addr_t) 0x7ff8;
#else
#define   BRK_CODE_RELOCATION_AREA     0x7ff8
#define	  INITIAL_SWI_LOCATION 0x7ff7
#endif

#define	LDR_RESET_VECTOR 0xf78f

#define DSP_CONTROL_CODE_FILE_NAME "cut_mon.l"
#define DSP_SERIAL_CONTROL_CODE_FILE_NAME "cut_232.l"

#define   WCON   0x10   // location of Memory configuration register in program space
#define   BCON   0x11
#define   CCON   0x12
#define   MCON_REG   0x13   	// location of Memory configuration register in program space
#define   KsON_VAL   0x3f00   // default mcon value

// defines used for the expanded memory space in CUT2
#ifdef _cplusplus
const int CUT_USE_MCON_SIGNAL_BIT = 0x8000;
const int CUT_LOW_PADDR_BOUNDARY = 0x8000;
const int CUT_LOW_PADDR_MASK = 0x7fff;
const int CUT_MCON_PADDR_BITS = 0x38000;

const int INTERRUPT_COUNT = 7;
#else
#define CUT_USE_MCON_SIGNAL_BIT  0x8000
#define CUT_LOW_PADDR_BOUNDARY   0x8000
#define CUT_LOW_PADDR_MASK       0x7fff
#define CUT_MCON_PADDR_BITS      0x38000
#define INTERRUPT_COUNT   7
#endif

#define	DEBUGGER_STORAGE 0x800	/* default location of DSP register storage */
