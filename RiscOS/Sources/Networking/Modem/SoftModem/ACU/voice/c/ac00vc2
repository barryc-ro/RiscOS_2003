/*****************************************************************************
/
/     Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ac00vc2.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains ACU specific interface routines to Voice.
/
/     Product:          ACU core code
/
/     History:
/
/        Created:
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"
#include "acu_vce.h"
#include "vce_pro.h"
#include "mt_pro.h"
#include "fp_pro.h"


void initialize_voice(ubyte);
void proc_parse_voice(void);

/*******************************************************************************
/
/     Routine:       initialize_voice
/
/     Author:        RSA
/
/     Creation Date: 10/26/92
/
/     Description:   This routine will initialize the voice code
/
/     Input Parameters: ubyte type - source of initialization
/                       0 - powerup initialization
/                       1 - AT&F or ATZ initialization
/                       2 - AT+VIP initialization
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void initialize_voice(ubyte type)
{
   /* If did not enter +VIP, reset command the resets the class */
   if (type != VOICE_INIT_VIP)
   {
      fax_class = 0;          /* default data mode */
      voice_cmd_set = NO_VOICE;

      /* Enable Parsing of all VOICE ACU commands Disable Parsing of
         all VOICE online commands */
      set_voice_acu_at_cmds(ON);
      set_voice_tia_at_cmds(OFF);
      set_voice_rock_at_cmds(OFF);

      /* Reset to DATA mode (at&f should reset to idle.non_voice) */
      if (type != POWERUP)
         build_event(E_PARSE,CONN_DATA);
   }

   voice_port_rate = 0;
   voice_caller_id = 0;
   hook_control = FALSE;
   dont_autobaud = FALSE;
   new_dte_baud = 0;

   voice_inactivity_timer_on = FALSE;
   acu_cntrld_hangup = FALSE;
   fax_flow_control = XON_XOFF;
   voice_dist_ring_active = FALSE;
   voice_dist_ring_sent = FALSE;
   voice_ring_timer =0;
   voice_dist_ring_intvl = 0;
   voice_dist_ctl_active = FALSE;
   voice_dist_ctl_sent = FALSE;

   /* Initialize voice module */
   if (type != POWERUP)
      voice_init(type);
}


/*******************************************************************************
/
/   State Table:        st_parse_voice
/
/   Author:  RSA
/
/   Creation Date: 06/17/94
/
/   Description:  This table contains the action routines for Voice mode
/                  PARSE states.
/
/   Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
const struct stateTab_struct st_parse_voice[EVT_MAX+1] =
{
/* MSG        */    {S_PARSE,    parse_at_msg},
/* CHAR_RCVD  */    {S_PARSE,    ignore},
/* ORIG       */    {S_ORIG,     parse_orig_voice},
/* ANSW       */    {S_IDLE,     parse_answ_voice},
/* CONNECT    */    {S_ONLINE,   parse_connect_voice},
/* IDLE       */    {S_IDLE,     ignore},
/* RESET      */    {S_IDLE,     hard_reset},
/* SYS_STAT   */    {S_PARSE,    ignore},
/* RING       */    {S_PARSE,    idle_at_ring},
/* DP_CD_OFF  */    {S_PARSE,    ignore},
/* HANGUP     */    {S_IDLE,     online_hangup_voice},
/* RETRAIN    */    {S_PARSE,    ignore},
/* TEST       */    {S_PARSE,    ignore},
/* PARSE      */    {S_PARSE,    parse_voice},
/* V24        */    {S_PARSE,    idle_at_v24},
/* FP         */    {S_PARSE,    proc_fp},
/* ESC_RXD    */    {S_PARSE,    ignore},
};


/*******************************************************************************
/
/     Routine:       proc_parse_voice
/
/     Author:        RSA
/
/     Creation Date: 10/26/92
/
/     Description:   This Routine will process the event by determining the
/                    next state and the action to be performed for the PARSE
/                    state of type VOICE.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void proc_parse_voice(void)
{
   acu_state = st_parse_voice[acu_event->type].new_state;
   acu_proc = st_parse_voice[acu_event->type].fnc_ptr;
}


/*******************************************************************************
/
/     Routine:       acu_voice_cmd_init
/
/     Author:        RSA
/
/     Creation Date: 8/15/95
/
/     Description:   This Routine will process the event by determining the
/                    initialize the voice code to the selected voice type
/                    (IS 101 or Rockwell).  It will also enable the parsing
/                    the respective voice AT commands.
/
/     Input Parameters: type - 0 (NO_VOICE)
/                              1 (TIA_IS_101)
/                              2 (ROCKWELL)
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void acu_voice_cmd_init(ubyte type)
{
   switch (type)
   {
       case TIA_IS_101:
           /* Reset voice every new +fclass=8 command */
           if (voice_cmd_set == NO_VOICE)
           {
               voice_init(VOICE_INIT_CLS_8);
               voice_command_init(TIA_IS_101);
           }

           /* Add new voice AT cmds when under +FCLASS=8 */
           set_voice_tia_at_cmds(ON);
           set_voice_rock_at_cmds(OFF);
           voice_cmd_set = type;
           break;

       case ROCKWELL:
           /* Reset voice every new +fclass=8 command */
           if (voice_cmd_set == NO_VOICE)
               voice_init(VOICE_INIT_CLS_8);

           /* Pass command to Voice module */
           voice_command_init(ROCKWELL);

           /* Add new voice AT cmds when under +FCLASS=8 */
           set_voice_tia_at_cmds(OFF);
           set_voice_rock_at_cmds(ON);
           voice_cmd_set = type;
           break;

       default:
           type = NO_VOICE;

           /* Add ACU voice AT cmds */
           set_voice_acu_at_cmds(ON);

           /* Disable +FCLASS=8 AT cmds under +FCLASS=0 */
           set_voice_tia_at_cmds(OFF);
           set_voice_rock_at_cmds(OFF);
           break;
   }

}


/*******************************************************************************
/
/     Routine:       acu_voice_init
/
/     Author:        RSA
/
/     Creation Date: 10/19/95
/
/     Description:   This Routine serves as the ACU interface to the
/                    Voice module for initialization.
/
/     Input Parameters: type -
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void acu_voice_init(ubyte type)
{
   voice_init(type);
}

/*******************************************************************************
/
/     Routine:       acu_voice_start
/
/     Author:        RSA
/
/     Creation Date: 10/19/95
/
/     Description:   This Routine serves as the ACU interface to the
/                    Voice module for execution.
/
/     Input Parameters: type -
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void acu_voice_start(void)
{
   voice_start();
}



/*******************************************************************************
/
/     Routine:       acu_voice_timer
/
/     Author:        RSA
/
/     Creation Date: 10/19/95
/
/     Description:   This Routine serves as the ACU interface to the
/                    Voice module for execution.
/
/     Input Parameters: type -
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void acu_voice_timer(void)
{
   voice_timer();
}
