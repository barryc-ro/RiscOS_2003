/****************************************************************************
/
/     Copyright 1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ac00cmv1.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains the action routines for the
/                       TIA/EIA IS 101 Digital Voice AT command set.
/                       Note that this specification also includes some
/                       FAX AT commands (i.e., AT+FCLASS=8 sets voice mode).
/
/     Product:          ACU Digital Voice Driver
/
/     History:          Extracted from ac00cp.c
/
/        Created:       2/9/95
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"
#include "acu_vce.h"
#include "vce_pro.h"
#include "fp_pro.h"
#include "par_def.h"
#include "par_pro.h"


/* Local prototypes */
void set_voice_tia_at_cmds(ubyte);
void plus_VRX_eq(void);
void plus_VRX_e(ubyte *);
void plus_VTS_eq(void);
void plus_VTS_e(ubyte *);
void plus_VTX_eq(void);
void plus_VTX_e(ubyte *);
void plus_VXT_eq(void);
void plus_VXT_e(ubyte *);
void plus_VXT_q(void);
void plus_VGR_eq(void);
void plus_VGR_e(ubyte *);
void plus_VGR_q(void);
void plus_VGT_eq(void);
void plus_VGT_e(ubyte *);
void plus_VGT_q(void);
void plus_VIT_eq(void);
void plus_VIT_e(ubyte *);
void plus_VIT_q(void);
void plus_VLS_eq(void);
void plus_VLS_e(ubyte *);
void plus_VLS_q(void);
void plus_VRA_eq(void);
void plus_VRA_e(ubyte *);
void plus_VRA_q(void);
void plus_VRN_eq(void);
void plus_VRN_e(ubyte *);
void plus_VRN_q(void);
void plus_VSD_eq(void);
void plus_VSD_e(ubyte *);
void plus_VSD_q(void);
void plus_VSM_eq(void);
void plus_VSM_e(ubyte *);
void plus_VTD_eq(void);
void plus_VTD_e(ubyte *);
void plus_VTD_q(void);
void plus_VEM_eq(void);
void plus_VEM_e(ubyte *);
void plus_VBT_eq(void);
void plus_VBT_e(ubyte *);
void plus_VBT_q(void);

/************************************************************************
/
/   Parser Command Table for TIA Voice AT commands
/
************************************************************************/
PARSE_CMD_TABLE_STRUCT voice_tia_commands []=
{
    (ubyte *) "+VRX=?", plus_VRX_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VRX=",  plus_VRX_e,     BYTE_NUMERIC,   SEMICOL_END,
    (ubyte *) "+VRX",   plus_VRX_e,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VTS=?", plus_VTS_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VTS=",  plus_VTS_e,     COMPOUND_DTMF,  SEMICOL_END,
    (ubyte *) "+VTX=?", plus_VTX_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VTX=",  plus_VTX_e,     BYTE_NUMERIC,   SEMICOL_END,
    (ubyte *) "+VTX",   plus_VTX_e,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VXT=?", plus_VXT_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VXT=",  plus_VXT_e,     COMPOUND_BYTE,  SEMICOL_END,
    (ubyte *) "+VXT?",  plus_VXT_q,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VGR=?", plus_VGR_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VGR=",  plus_VGR_e,     BYTE_NUMERIC,   SEMICOL_END,
    (ubyte *) "+VGR?",  plus_VGR_q,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VGT=?", plus_VGT_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VGT=",  plus_VGT_e,     BYTE_NUMERIC,   SEMICOL_END,
    (ubyte *) "+VGT?",  plus_VGT_q,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VIT=?", plus_VIT_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VIT=",  plus_VIT_e,     BYTE_NUMERIC,   SEMICOL_END,
    (ubyte *) "+VIT?",  plus_VIT_q,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VLS=?", plus_VLS_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VLS=",  plus_VLS_e,     BYTE_NUMERIC,   SEMICOL_END,
    (ubyte *) "+VLS?",  plus_VLS_q,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VRA=?", plus_VRA_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VRA=",  plus_VRA_e,     BYTE_NUMERIC,   SEMICOL_END,
    (ubyte *) "+VRA?",  plus_VRA_q,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VRN=?", plus_VRN_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VRN=",  plus_VRN_e,     BYTE_NUMERIC,   SEMICOL_END,
    (ubyte *) "+VRN?",  plus_VRN_q,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VSD=?", plus_VSD_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VSD=",  plus_VSD_e,     COMPOUND_BYTE,  SEMICOL_END,
    (ubyte *) "+VSD?",  plus_VSD_q,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VSM=?", plus_VSM_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VSM=",  plus_VSM_e,     COMPOUND_WORD,  SEMICOL_END,
    (ubyte *) "+VTD=?", plus_VTD_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VTD=",  plus_VTD_e,     BYTE_NUMERIC,   SEMICOL_END,
    (ubyte *) "+VTD?",  plus_VTD_q,     NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VEM=?", plus_VEM_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VEM=",  plus_VEM_e,     LONG_HEX,       SEMICOL_END,
    (ubyte *) "+VBT=?", plus_VBT_eq,    NO_PARAM,       SEMICOL_END,
    (ubyte *) "+VBT=",  plus_VBT_e,     COMPOUND_WORD,  SEMICOL_END,
    (ubyte *) "+VBT?",  plus_VBT_q,     NO_PARAM,       SEMICOL_END,
    END_OF_PARSE_TABLE
};


/*******************************************************************************
/
/     Routine:       set_voice_tia_at_cmds
/
/     Author:        RSA
/
/     Creation Date: 12/16/94
/
/     Description:   This Routine enables parsing of VOICE TIA AT commands.
/                    These are commands defined by the TIA IS101 specification.
/
/     Input Parameters:   state - OFF (0) to disable, ON (otherwise) to enable.
/
/     Output Parameters: None
/
/     Global Variables Changed:  None
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void set_voice_tia_at_cmds(ubyte state)
{
   if (state == OFF)
      at_parser_tables(DISABLE_TABLE,voice_tia_commands);
   else
      at_parser_tables(ENABLE_TABLE,voice_tia_commands);
}


/******************************************************************************
/
/     Routine:       acu_vce_command
/
/     Author:        RSA
/
/     Creation Date: 12/16/95
/
/     Description:   This routine is called to exercise VOICE AT commands parsed
/                    by the ACU.  This routine serves as the ACU to VOICE
/                    interface for executable VOICE commands.
/
/     Input Parameters: which_command - Which VOICE command to execute
/                       param_ptr - pointer to command's parameter buffer
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: All commands in this file.
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void acu_vce_command(uword which_command,ubyte *param_ptr)
{
   ubyte *response_ptr,result;

   response_ptr = 0;
   result = 0;

   /* Update VOICE w/the latest configuration before every command */
   acu_config_voice();

   /* Pass the command up to voice */
   switch (voice_execute_command(which_command, param_ptr, &response_ptr))
   {
      case VOICE_CONTINUE_PARSING:
         break;

      case VOICE_GOTO_ONLINE_COMMAND:
         on_line_command = TRUE;
         /* Stop the OK result code from going back to the terminal.  The
            voice code has already send back a response */
         send_ok = FALSE;
         break;

      case VOICE_GOTO_OFFLINE_COMMAND:
         on_line_command = FALSE;
         break;

      case VOICE_GO_ONLINE:
         build_event(E_CONNECT,CONN_VOICE);
         if (response_ptr)
         {
            send_ok = FALSE;
            output_info(response_ptr, UNFORMATTED);
         }
         return;

      case VOICE_ERROR:
         acu_vce_command_error();
         break;

      default:
         if (response_ptr)
            output_info(response_ptr, UNFORMATTED);
         break;
     }
}


/******************************************************************************
/
/     Routine:       acu_vce_query
/
/     Author:        RSA
/
/     Creation Date: 12/16/95
/
/     Description:   This routine is called to exercise VOICE AT Request
/                    commands parsed by the ACU.  This routine serves as
/                    the ACU to VOICE interface for VOICE request commands.
/
/     Input Parameters: which_command - Which VOICE command to execute
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: All commands in this file.
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void acu_vce_query(uword which_command)
{
   ubyte *response_ptr,result;

   response_ptr = 0;
   result = 0;

   /* Update VOICE w/the latest configuration before every command */
   acu_config_voice();

   /* Pass the command up to VOICE */
   result = voice_execute_command(which_command, UNUSED, &response_ptr);

   /* Display any command result */
   if (result == VOICE_ERROR)
      acu_vce_command_error();
   else
      output_info(response_ptr, UNFORMATTED);
}


/******************************************************************************
/
/     Routine:       plus_VRX_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VRX=?"
/                    The +VRX command is used to start data Receiption.
/                    This routine responds OK, to verify command support.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VRX_eq(void)
{
   /* Do nothing: allow parser to send OK */
}

/******************************************************************************
/
/     Routine:       plus_VRX_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VRX"
/                    The +VRX command is used to start Data receiption.
/                    This routine initiates the data mode.
/
/     Input Parameters: pointer to the byte numeric value of the AT comand.
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VRX_e(ubyte *parm_ptr)
{
   acu_vce_command(VRX_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VTS_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VTS=?"
/                    The +VTS command is used send tones.
/                    This routine responds with the valid command input to the
/                    terminal.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VTS_eq(void)
{
   acu_vce_query(VTS_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VTS_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VTS="
/                    The +VTS command is used send tones.
/                    This routine initiates the tones.
/
/     Input Parameters: pointer to the compound DTMF array:
/
/                   Compound parameters (as defined by TIA IS 101) have
/                   the following form:
/                       AT+VTS=,D1,{},{D2,t2},[],[F1,F2,t3]
/
/                   This parameter has the following format in the Parse
/                    Parameter Buffer:
/                      Buffer field #       AT Parmater
/                     0 (DTMF_BUF_END)  -   END of Buffer
/                     1 (DTMF_EMPTY)    -   ,   empty field
/                     2 (DTMF_DIGIT)    -   D1  DTMF digit
/                     3 (EMPTY_BRACES)  -   {}  empty braces
/                     4 (DTMF_BRACES)   -   D2  DTMF digit
/                     5 (TIME_BRACES)   -   t2  DTMF time
/                     6 (EMPTY_BRACKET) -   []  empty brackets
/                     7 (FREQ1_BRACKET) -   F1  frequency1
/                     8 (FREQ2_BRACKET) -   F2  frequency2
/                     9 (TIME_BRACKET)  -   t3  freq. time
/                  0xFF (PREMATURE_END) -   Premature end of multi-parameter
/                                            field
/               Examples:
/               AT+VTS=5,,{2,4}  => [0x2,0x5, 0x1, 0x4,0x4, 0x5,0x04, 0x00]
/               AT+VTS=[f1,f2,t] => [0x7,f1, 0x8,f2, 0x9,t, 0x00]
/               AT+VTS=0         => [0x1,0x0, 0x00]
/               AT+VTS=          => [0x00]
/               AT+VTS=[f],{D}   => [0x7,f,0xFF, 0x4,D,0xFF, 0x00]
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VTS_e(ubyte *parm_ptr)
{
   acu_vce_command(VTS_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VTX_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VTX=?"
/                    The +VTX command is used enter Voice Transmit State.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VTX_eq(void)
{
   /* Do nothing: allow parser to send OK */
}

/******************************************************************************
/
/     Routine:       plus_VTX_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VTX="
/                    The +VTX command is used enter Voice Transmit State.
/                    This routine will move Voice to the Transmit State.
/
/     Input Parameters: pointer to the byte numeric value of the AT comand.
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VTX_e(ubyte *parm_ptr)
{
   acu_vce_command(VTX_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VXT_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VXT=?"
/                    The +VXT command is used to Translate voice data.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VXT_eq(void)
{
   acu_vce_query(VXT_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VXT_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VXT="
/                    The +VXT command is used to Translate voice data.
/                    This routine will Translate voice data.
/
/     Input Parameters: pointer to the compound byte numeric value of
/                       the AT comand.
/
/                   Compound parameters (as defined by TIA/EIA 592) have
/                   the following form:
/                       AT+F=1,2,3,4,5
/
/                   This parameter has the following format in the Parse
/                   Parameter Buffer:
/                       [f,p,f,p,...0] (f=field, p=parameter value, 0 is
/                                       end of parameters)
/                       Examples:
/                       AT+F=5,6,7   => [0x1,0x5, 0x2,0x6, 0x3,0x7, 0x00]
/                       AT+F=,6,,8   => [0x2,0x6, 0x4,0x8, 0x00]
/                       AT+F=0       => [0x1,0x0, 0x00]
/                       AT+F=        => [0x00]
/                       AT+F=300,600 => [0x001,0x012C, 0x002,0x0258, 0x0000]
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VXT_e(ubyte *parm_ptr)
{
   acu_vce_command(VXT_COMMAND,parm_ptr);
}


/******************************************************************************
/
/     Routine:       plus_VXT_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VXT=?"
/                    The +VXT command is used to Translate voice data.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VXT_q(void)
{
   acu_vce_query(VXT_REQUEST);
}

/******************************************************************************
/
/     Routine:       plus_VGR_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VGR=?"
/                    The +VGR command is used set recieve gain level.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VGR_eq(void)
{
   acu_vce_query(VGR_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VGR_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VGR="
/                    The +VGR command is used set recieve gain level.
/                    This routine sets the recieve gain level.
/
/     Input Parameters: pointer to the byte numeric value of the AT comand.
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VGR_e(ubyte *parm_ptr)
{
   acu_vce_command(VGR_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VGR_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VGR?"
/                    The +VGR command is used set recieve gain level.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VGR_q(void)
{
   acu_vce_query(VGR_REQUEST);
}

/******************************************************************************
/
/     Routine:       plus_VGT_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VGT=?"
/                    The +VGT command is used set transmit gain level.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VGT_eq(void)
{
   acu_vce_query(VGT_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VGT_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VGT="
/                    The +VGT command is used set transmit gain level.
/                    This routine sets the transmit gain level.
/
/     Input Parameters: parm_ptr - Pointer to the AT command's parameter:
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VGT_e(ubyte *parm_ptr)
{
   acu_vce_command(VGT_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VGT_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VGT?"
/                    The +VGT command is used to set the TX gain level.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VGT_q(void)
{
   acu_vce_query(VGT_REQUEST);
}


/******************************************************************************
/
/     Routine:       plus_VIT_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VIT=?"
/                    The +VIT command is used set the inactivity timer.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VIT_eq(void)
{
   acu_vce_query(VIT_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VIT_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VIT="
/                    The +VIT command is used set the inactivity timer.
/                    This routine programs the inactivity timer.
/
/     Input Parameters: pointer to the byte numeric value of the AT comand.
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VIT_e(ubyte *parm_ptr)
{
   acu_vce_command(VIT_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VIT_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VIT?"
/                    The +VIT command is used set the inactivity timer.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VIT_q(void)
{
   acu_vce_query(VIT_REQUEST);
}


/******************************************************************************
/
/     Routine:       plus_VLS_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VLS=?"
/                    The +VLS command is used select the DCE line connection.
/                    This routine responds with the valid command input to the
/                    terminal.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VLS_eq(void)
{
   acu_vce_query(VLS_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VLS_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VLS="
/                    The +VLS command is used select the DCE line connection.
/                    This routine sets the DCE line connection.
/
/     Input Parameters: pointer to the byte numeric value of the AT comand.
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VLS_e(ubyte *parm_ptr)
{
   acu_vce_command(VLS_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VLS_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VLS?"
/                    The +VLS command is used select the DCE line connection.
/                    This routine responds with the valid command input to the
/                    terminal.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VLS_q(void)
{
   acu_vce_query(VLS_REQUEST);
}


/******************************************************************************
/
/     Routine:       plus_VRA_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VRA=?"
/                    The +VRA command is used set the Ringback goes Away timer.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VRA_eq(void)
{
   acu_vce_query(VRA_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VRA_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VRA="
/                    The +VRA command is used set the Ringback goes Away timer.
/                    This routine programs the Ringback goes Away timer.
/
/     Input Parameters: pointer to the byte numeric value of the AT comand.
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VRA_e(ubyte *parm_ptr)
{
   acu_vce_command(VRA_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VRA_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VRA?"
/                    The +VRA command is used set the Ringback goes Away timer.
/                    This routine shows the user the current timer value.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VRA_q(void)
{
   acu_vce_query(VRA_REQUEST);
}


/******************************************************************************
/
/     Routine:       plus_VRN_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VRN=?"
/                    The +VRN command is used set the No Ring timer.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VRN_eq(void)
{
   acu_vce_query(VRN_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VRN_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VRN="
/                    The +VRN command is used set the No Ring timer.
/                    This routine programs the No Ring timer.
/
/     Input Parameters: pointer to the byte numeric value of the AT comand.
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VRN_e(ubyte *parm_ptr)
{
   acu_vce_command(VRN_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VRN_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VRN?"
/                    The +VRN command is used set the No Ring timer.
/                    This routine shows the current value of No Ring timer.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VRN_q(void)
{
   acu_vce_query(VRN_REQUEST);
}


/******************************************************************************
/
/     Routine:       plus_VSD_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VSD=?"
/                    The +VSD command is used set the Silence Detection.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VSD_eq(void)
{
   acu_vce_query(VSD_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VSD_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VSD="
/                    The +VSD command is used set the Silence Detection.
/                    This routine programs the Silence Detection.
/
/     Input Parameters: pointer to the compound byte numeric value of
/                       the AT comand.
/
/                   Compound parameters (as defined by TIA/EIA 592) have
/                   the following form:
/                       AT+F=1,2,3,4,5
/
/                   This parameter has the following format in the Parse
/                   Parameter Buffer:
/                       [f,p,f,p,...0] (f=field, p=parameter value, 0 is
/                                       end of parameters)
/                       Examples:
/                       AT+F=5,6,7   => [0x1,0x5, 0x2,0x6, 0x3,0x7, 0x00]
/                       AT+F=,6,,8   => [0x2,0x6, 0x4,0x8, 0x00]
/                       AT+F=0       => [0x1,0x0, 0x00]
/                       AT+F=        => [0x00]
/                       AT+F=300,600 => [0x001,0x012C, 0x002,0x0258, 0x0000]
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VSD_e(ubyte *parm_ptr)
{
   acu_vce_command(VSD_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VSD_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VSD?"
/                    The +VSD command is used set the Silence Detection.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VSD_q(void)
{
   acu_vce_query(VSD_REQUEST);
}


/******************************************************************************
/
/     Routine:       plus_VSM_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VSM=?"
/                    The +VSM command is used set the Compression Method.
/                    This routine responds with the valid command input to the
/                    terminal.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VSM_eq(void)
{
   acu_vce_query(VSM_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VSM_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VSM="
/                    The +VSM command is used set the Compression Method.
/                    This routine sets the Compression Method.
/
/     Input Parameters: pointer to the compound word numeric value of
/                       the AT comand.
/
/                   Compound parameters (as defined by TIA/EIA 592) have
/                   the following form:
/                       AT+F=1,2,3,4,5
/
/                   This parameter has the following format in the Parse
/                   Parameter Buffer:
/                       [f,p,f,p,...0] (f=field, p=parameter value, 0 is
/                                       end of parameters)
/                       Examples:
/                       AT+F=5,6,7   => [0x1,0x5, 0x2,0x6, 0x3,0x7, 0x00]
/                       AT+F=,6,,8   => [0x2,0x6, 0x4,0x8, 0x00]
/                       AT+F=0       => [0x1,0x0, 0x00]
/                       AT+F=        => [0x00]
/                       AT+F=300,600 => [0x001,0x012C, 0x002,0x0258, 0x0000]
/
/                    *Note that all values are of size word for this array*
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VSM_e(ubyte *parm_ptr)
{
   acu_vce_command(VSM_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VTD_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VTD=?"
/                    The +VTD command is used set the Tone Duration Timer.
/                    This routine responds with the valid command input to the
/                    terminal.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VTD_eq(void)
{
   acu_vce_query(VTD_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VTD_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VTD="
/                    The +VTD command is used set the Tone Duration Timer.
/                    This routine sets the Tone Duration Timer.
/
/     Input Parameters: pointer to the byte numeric value of the AT comand.
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VTD_e(ubyte *parm_ptr)
{
   acu_vce_command(VTD_COMMAND,parm_ptr);
}


/******************************************************************************
/
/     Routine:       plus_VTD_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VTD?"
/                    The +VTD command is used Beep Tone Duration timer.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VTD_q(void)
{
   acu_vce_query(VTD_REQUEST);
}

/******************************************************************************
/
/     Routine:       plus_VEM_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VEM=?"
/                    The +VEM command is used set the Event Mask.
/                    This routine responds with the valid command input to the
/                    terminal.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VEM_eq(void)
{
   acu_vce_query(VEM_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VEM_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VEM="
/                    The +VEM command is used set the Event Mask.
/                    This routine sets the Event Mask.
/
/     Input Parameters: pointer to the long numeric value of the AT comand.
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VEM_e(ubyte *parm_ptr)
{
   acu_vce_command(VEM_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VBT_eq
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VBT=?"
/                    The +VBT command is used set the Buffer Threshhold.
/                    This routine responds with the valid command input to the
/                    terminal.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VBT_eq(void)
{
   acu_vce_query(VBT_QUERY);
}

/******************************************************************************
/
/     Routine:       plus_VBT_e
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VBT="
/                    The +VBT command is used set the Buffer Threshhold.
/                    This routine sets the Buffer Threshhold.
/
/     Input Parameters: pointer to the compound word numeric value of
/                       the AT comand.
/
/                   Compound parameters (as defined by TIA/EIA 592) have
/                   the following form:
/                       AT+F=1,2,3,4,5
/
/                   This parameter has the following format in the Parse
/                   Parameter Buffer:
/                       [f,p,f,p,...0] (f=field, p=parameter value, 0 is
/                                       end of parameters)
/                       Examples:
/                       AT+F=5,6,7   => [0x1,0x5, 0x2,0x6, 0x3,0x7, 0x00]
/                       AT+F=,6,,8   => [0x2,0x6, 0x4,0x8, 0x00]
/                       AT+F=0       => [0x1,0x0, 0x00]
/                       AT+F=        => [0x00]
/                       AT+F=300,600 => [0x001,0x012C, 0x002,0x0258, 0x0000]
/
/                    *Note that all values are of size word for this array*
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VBT_e(ubyte *parm_ptr)
{
   acu_vce_command(VBT_COMMAND,parm_ptr);
}

/******************************************************************************
/
/     Routine:       plus_VBT_q
/
/     Author:        RSA
/
/     Creation Date: 2/16/95
/
/     Description:   This routine is called to implement the TIA Voice command:
/                       "AT+VBT?"
/                    The +VBT command is used set the Buffer Threshhold.
/                    This routine responds with the valid command input to the
/                    terminal.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed: none
/
/     Users: PARSE_CMD_TABLE_STRUCT voice_tia_commands[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date:   RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void plus_VBT_q(void)
{
   acu_vce_query(VBT_REQUEST);
}


