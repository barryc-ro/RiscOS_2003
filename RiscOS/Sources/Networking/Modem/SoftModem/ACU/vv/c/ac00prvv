/****************************************************************************
/
/     Copyright 1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ac00prvv.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains the action routines for VOICE VIEW
/                       processing in the PARSE state.
/
/     Product:          ACU core code
/
/     History:          ac00vv2.c
/
/        Created:       8/21/95
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"
#include "acu_vcv.h"

/* Local prototypes */
void proc_parse_vv(void);
void parse_vv_idle(void);
void parse_vv_hangup(void);
void parse_vv_conn(void);


extern void idle_vv_orig(void);
extern void idle_vv_answ(void);
extern void vv_reset_intactivity(void);

/*    State table for PARSE state     */

const struct stateTab_struct st_parse_vv[EVT_MAX+1] =
{
/* MSG        */   {S_PARSE,   parse_at_msg},
/* CHAR_RCVD  */   {S_PARSE,   ignore},
/* ORIG       */   {S_ORIG,    idle_vv_orig},
/* ANSW       */   {S_ANSW,    idle_vv_answ},
/* CONNECT    */   {S_ONLINE,  parse_vv_conn},
/* IDLE       */   {S_IDLE,    parse_vv_idle},
/* RESET      */   {S_IDLE,    hard_reset},
/* SYS_STAT   */   {S_PARSE,   ignore},
/* RING       */   {S_PARSE,   idle_at_ring},
/* DP_CD_OFF  */   {S_PARSE,   ignore},
/* HANGUP     */   {S_HANGUP,  parse_vv_hangup},
/* RETRAIN    */   {S_PARSE,   ignore},
/* TEST       */   {S_PARSE,   ignore},
/* PARSE      */   {S_PARSE,   parse_at_parse},
/* V24        */   {S_PARSE,   idle_at_v24},
/* FP         */   {S_PARSE,   ignore},
/* ESC_RXD    */   {S_PARSE,   ignore},
};


/*******************************************************************************
/
/     Routine:       proc_parse_vv
/
/     Author:        RSA
/
/     Creation Date: 08/21/95
/
/     Description:   This Routine will process events by determining the
/                    next state and the action to be performed for
/                    the PARSE state of type VOICE_VIEW.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: acu_state, acu_proc
/
/     Users: proc_parse
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void proc_parse_vv(void)
{
   acu_state = st_parse_vv[acu_event->type].new_state;
   acu_proc = st_parse_vv[acu_event->type].fnc_ptr;
}


/*******************************************************************************
/
/     Routine:       parse_vv_idle
/
/     Author:        RSA
/
/     Creation Date: 08/21/95
/
/     Description:   This Routine will service the IDLE events in
/                    the PARSE state of type VOICE_VIEW.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: st_idle
/
/     Users: st_parse_vv
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void parse_vv_idle(void)
{
   /* We're active if we parsed an AT command */
   vv_reset_intactivity();

   st_idle.type = VOICE_VIEW;

   /* Don't change idle state if already set */
   if (st_idle.state == VV_IDLE_VOICE_MODE || st_idle.state == VV_IDLE_AUTO_ATTENDANT)
      return;

   /* Set idle sub-state */
   if (!hook || (acu_get_handset_status() == HANDSET_OFF_HOOK))
      st_idle.state = VV_IDLE_VOICE_MODE;
   else
      st_idle.state = VV_IDLE_OFFLINE;
}


/*******************************************************************************
/
/     Routine:       parse_vv_hangup
/
/     Author:        RSA
/
/     Creation Date: 08/21/95
/
/     Description:   This Routine will service the HANGUP events in
/                    the PARSE state of type VOICE_VIEW.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: st_idle, st_hangup, hangup_result_type,
/                              st_parse
/
/     Users: st_parse_vv
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void parse_vv_hangup(void)
{
   /* Set hangup states */
   st_hangup.type = VOICE_VIEW;
   st_hangup.state = HANGUP_PHYSICAL_LINK;
   hangup_result_type = acu_event->parm;

   /* Reset idle and parse states for after hangup */
   if (at_z_command)
      st_parse.type = st_idle.type = AT_OFFLINE;
   else
      st_idle.state = VV_IDLE_OFFLINE;
}


/*******************************************************************************
/
/     Routine:       parse_vv_conn
/
/     Author:        RSA
/
/     Creation Date: 08/21/95
/
/     Description:   This Routine will service the CONNECT events in
/                    the PARSE state of type VOICE_VIEW.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: st_online, send_ok
/
/     Users:
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void parse_vv_conn(void)
{
   send_ok = FALSE;
   st_online.type = VOICE_VIEW;
   st_online.state = VV_ONLINE_WAITING;
}

