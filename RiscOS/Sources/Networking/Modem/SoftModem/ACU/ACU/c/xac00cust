/****************************************************************************
/
/     Copyright 1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ac00cust.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains the entery points for customer
/                       addtions to the coure ACU code.
/
/     Product:          ACU core code
/
/     History:
/
/        Created:       10/5/95
/
/     ----------------------------------------------------------
/     -                   Modifications                        -
/     ----------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"


/*******************************************************************************
/
/     Routine:       acu_customer_init
/
/     Author:        RSA
/
/     Creation Date: 10/05/95
/
/     Description:   This Routine is called every time acu_init is called to
/                    initialize  any cusotmer specific parameters and
/                    flags used in the ACU code.
/
/     Input Parameters: none
/
/     Output Parameters: none
/
/     Global Variables Changed:
/
/     Users: acu_init
/
/       -------------------------------------------------------------
/       -                       Modifications                     -
/       -------------------------------------------------------------
/
/      Author & Date: RSA
/      Description:
/      Reason:
/
*******************************************************************************/
void acu_customer_init(void)
{
}

/*******************************************************************************
/
/     Routine:       acu_customer_reset
/
/     Author:        RSA
/
/     Creation Date: 10/05/95
/
/     Description:   This Routine is called to reinitialize the ACU customer
/                    specific parameters on power up or hard reset.
/
/     Input Parameters: None
/
/     Output Parameters: None
/
/     Global Variables Changed:
/
/     Users:   acu_reset
/
/   -------------------------------------------------------------
/   -                     Modifications                     -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void acu_customer_reset(void)
{
}


/*******************************************************************************
/
/     Routine:       acu_customer_load_defaults
/
/     Author:        RSA
/
/     Creation Date: 10/05/95
/
/     Description:   This Routine is called to reinitialize the ACU customer
/                    AT command paramters (typically due to AT&F)
/
/     Input Parameters: type - POWER_UP (0) or COMMAND (1,2).  Commands to
/                      restore defaults must not configure DTE port data.
/
/     Output Parameters: None
/
/     Global Variables Changed:
/
/     Users:   acu_load_defaults
/
/   -------------------------------------------------------------
/   -                     Modifications                     -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void acu_customer_load_defaults(ubyte type)
{
   /* Some compilers require all vars to be used */
   type=0;
}

/*******************************************************************************
/
/   Routine:            acu_hardware_sleep
/
/   Author:             RSA
/
/   Creation Date:      08/2/95
/
/   Description:        This Routine will set the sleep modes of the
/                       platform's hardware.
/
/   Input Parameters:   sleep_status
/                              0x00 - SLPSTAT_WAKE_UP
/                              0x01 - SLPSTAT_GOTO_SLEEP
/                              0x02 - SLPSTAT_GOTO_UNUSED
/
/                       which_part
/                              0x01 - SLPPART_DATA_PUMP
/                              0x02 - SLPPART_CPU
/                              0x03 - SLPPART_CELLULAR_RADIO
/                              0x04 - SLPPART_AUDIO_BLOCK
/                              0x05 - SLPPART_DTE_USART
/                              0x06 - SLPPART_DCE_USART
/
/   Output Parameters: None
/
/   Global Variables Changed:
/
/   Users:
/
/   -------------------------------------------------------------
/   -                      Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void acu_hardware_sleep(ubyte sleep_status, ubyte which_part)
{
   /* Some compilers require all vars to be used */
   sleep_status = which_part =0;

   /* Implement platform specifc sleep coding */
}


/*******************************************************************************
/
/   Routine:           process_customer_timer
acu_hardware_sleep
/
/   Author:             RSA
/
/   Creation Date:      08/2/95
/
/   Description:        This Routine is an interface to a 0.01 sec timer
/                       to be used at will.
/
/   Input Parameters:   None.
/
/   Output Parameters: None
/
/   Global Variables Changed:
/
/   Users:
/
/   -------------------------------------------------------------
/   -                      Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void process_customer_timer(void)
{
}




