/****************************************************************************
/
/     Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ac00on.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains the control code for the ACU state
/                       ONLINE.
/
/     Product:          ACU core code
/
/     History:          ac00on.c v3.90
/                       ac00on.c v3.93
/                       ac00on.c v3.94
/                       ac00on.c v3.96
/
/        Created:       10/3/91
/                       12/04/91
/                       3/10/91
/                       1/12/93
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/
#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"
#include "ll_pro.h"
#include "v25_pro.h"
#include "mt_pro.h"
#include "wl_pro.h"

void online_bg(void);
void proc_online(void);
void online_at_msg(void);

/*******************************************************************************
/
/     Routine:       online_bg
/
/     Author:        RSA
/
/     Creation Date: 06/24/91
/
/     Description:   This Routine will process the background functions for
/                    the ONLINE state.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users: acu_bg
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void online_bg(void)
{
   switch (st_online.type)
   {
      case PSTN_PHONE:
         /* Intentionally fall through */
      case AT_PSTN:
         /* Perform background processing during data mode */
         online_pstn_bg();
         break;

      case V25_PSTN:
         online_v25_bg();
         online_pstn_bg();
         break;

      case LEASED_LINE:
         /* Perform background processing during lesed line connections */
         online_ll_bg();
         break;

      case VOICE_VIEW:
         online_vv_bg();
         break;

      case FAX_ONLINE:
         /* ACU has no online processing during Fax */
         break;

      case VOICE:
         /* ACU has no online processing during VOICE */
         break;

      case AUTOSYNC_TYPE:
         online_as_bg();
         break;

      /* Intentionally fall through for all Wireless */
      case WIRELESS_DATA:
      case WIRELESS_FAX_ONLINE:
      case WIRELESS_VOICE:
      case WIRELESS_PHONE:
         online_wl_bg();
         break;
   }
}

/*******************************************************************************
/
/     Routine:       proc_online
/
/     Author:        RSA
/
/     Creation Date: 06/24/91
/
/     Description:   This Routine will process the events for the ONLINE
/                    state.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users: auto_dialer
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void proc_online(void)
{
   switch (st_online.type)
   {
      case PSTN_PHONE:
         /* Intentionally fall through */
      case AT_PSTN:
         proc_online_at();
         break;

      case V25_PSTN:
         proc_online_v25();
         break;

      case LEASED_LINE:
         proc_online_ll();
         break;

      case VOICE_VIEW:
         proc_online_vv();
         break;

      case FAX_ONLINE:
         proc_online_fax();
         break;

      case VOICE:
         proc_online_voice();
         break;

      case AUTOSYNC_TYPE:
         proc_online_as();
         break;

      /* Intentionally fall through for all Wireless */
      case WIRELESS_DATA:
      case WIRELESS_FAX_ONLINE:
      case WIRELESS_VOICE:
      case WIRELESS_PHONE:
         proc_online_wl();
         break;
   }
 }

/*******************************************************************************
/
/     Routine:       online_at_msg
/
/     Author:        RSA
/
/     Creation Date: 06/25/91
/
/     Description:   This Routine will output a message to the terminal
/            while in the ONLINE state with type AT_PSTN.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users:         st_online_at[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void online_at_msg(void)
{
   if ((!sr14.disable_result_code) && (acu_event->parm != NONE))
   {
      enable_acu_on_terminal();
      output_result((ubyte)acu_event->parm);
   }
   disable_acu_on_terminal();

   if (acu_event->parm == CONNECT_XXXX)
   {
      modem_cd_led(ON);
      modem_dte_rlsd(ON);
   }

   if (s[112])
   {
      dte_baud = s[112];
      acu_set_tx_baud(dte_baud);
   }
   else if ((bps_adjust) || (operating_mode == DIRECT))
   {
      dte_baud = modem_baud;
      acu_set_tx_baud(modem_baud);
   }
   else
      acu_set_tx_baud(dte_init_baud);

   if (operating_mode == DIRECT)
      modem_serial_direct(DIRECT);
}

