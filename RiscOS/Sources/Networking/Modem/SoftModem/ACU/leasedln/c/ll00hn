/****************************************************************************
/
/     Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             ll00hn.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains the control code for the Leased line
/                       state HANGUP.
/
/     Product:          ACU core code
/
/     History:          ll00hn.c v3.90
/                       ll00hn.c v3.91
/
/        Created:       11/16/91
/                       1/12/93
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "ll_mem.h"
#include "acu_pro.h"
#include "mt_pro.h"

void proc_hangup_ll(void);
void hangup_ll_bg(void);
void proc_ll_hangup(void);


/*******************************************************************************
/
/     Routine:       proc_hangup_ll
/
/     Author:        RSA
/
/     Creation Date: 07/17/91
/
/     Description:   This Routine will process the event by determining the
/                    next state and the action to be performed for the HANGUP
/                    state of type LEASED_LINE.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  acu_state, acu_proc
/
/     Users: proc_hangup
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void proc_hangup_ll(void)
{
   acu_state = st_hangup_ll[acu_event->type].new_state;
   acu_proc = st_hangup_ll[acu_event->type].fnc_ptr;
}


/*******************************************************************************
/
/     Routine:       hangup_ll_bg
/
/     Author:        RSA
/
/     Creation Date: 07/17/91
/
/     Description:   This Routine will perform the backgroung functions for
/                    the HANGUP state of type LEASED_LINE.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  None
/
/     Users: hangup_bg
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void hangup_ll_bg(void)
{
   /* Use the standard at-pstn hangup bg code */
   hangup_at_bg();

   /* Special test for leased line after hangup is complete */
   if (st_hangup.state == HANGUP_COMPLETE)
   {
      /* Build event to start another connection */
      if (sr14.originate_flag == TRUE)
         build_event(E_ORIG,UNUSED);
      else
         build_event(E_ANSW,UNUSED);

      if ((!sr21.RLSD_reflects_CD) && (sr27.comm_mode == ASYNC))
         modem_dte_rlsd(ON);
      else
         modem_dte_rlsd(OFF);

      /* Clear out the acu buffers */
      acu_to_clear();
      acu_from_clear();
   }
}

/*******************************************************************************
/
/     Routine:       proc_ll_hangup
/
/     Author:        RSA
/
/     Creation Date: 07/17/91
/
/     Description:   This Routine will change states to the HANGUP state of
/                    type LEASED_LINE.
/
/     Input Parameters: None
/
/     Output Parameters: none
/
/     Global Variables Changed:  hangup_result_type, st_hangup.type
/
/     Users: st_orig_at[], st_online_at[],
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void proc_ll_hangup(void)
{
   if (user_initiated_hangup)
      st_hangup.type = AT_PSTN;
   else
      st_hangup.type = LEASED_LINE;

   /* Set hangup bg state to initialize */
   st_hangup.state = HANGUP_INIT;
   hangup_result_type = (ubyte)acu_event->parm;
}

