/****************************************************************************
/
/     Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             wl00on.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains code for monitoring a Wireless Modem
/                       connection.
/
/     Product:          ACU core code
/
/     History:          ac00onat.c v4.02
/
/        Created:       1/16/95
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "v25_def.h"
#include "v25_mem.h"
#include "acu_pro.h"
#include "mt_pro.h"
#include "wl_def.h"
#include "wl_pro.h"
#include "wl_mem.h"

/* Local Wireless ONLINE Prototypes */
void wl_online_bg(void);
void online_wl_bg(void);
void proc_online_wl(void);
void online_wl_idle(void);
void online_wl_retrain(void);
void wl_online_retrain_bg(void);


/*******************************************************************************
/
/     Routine:       proc_online_wl
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will process events by determining the
/                    next state and the action to perform for the
/                    ONLINE state of type WIRELESS_DATA.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: acu_state, acu_proc
/
/     Users: proc_online
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void proc_online_wl(void)
{
   switch (st_online.type)
   {
      case WIRELESS_DATA:
      case WIRELESS_PHONE:
         acu_state = st_wl_online[acu_event->type].new_state;
         acu_proc = st_wl_online[acu_event->type].fnc_ptr;
         break;

      case WIRELESS_FAX_ONLINE:
         proc_wl_online_fax();
         break;

      case WIRELESS_VOICE:
         /* TBD */
         break;
   }
}


/*******************************************************************************
/
/     Routine:       online_wl_bg
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will process the background functions for
/                    the ONLINE state of type WIRELESS_DATA.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: None
/
/     Users: online_bg
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void online_wl_bg(void)
{
   switch (st_online.type)
   {
      case WIRELESS_DATA:
         switch (st_online.state)
         {
            case WL_ONLINE_DATA:
               /* Use PSTN bg for escape RX, LS Disc */
               online_pstn_bg();
               wl_online_bg();
               break;

            case WL_ONLINE_RETRAIN:
               wl_online_retrain_bg();
               break;
         }
         break;

      case WIRELESS_FAX_ONLINE:
      case WIRELESS_VOICE:
      case WIRELESS_PHONE:
         /* Only need to monitor the wireless channel */
         wl_online_bg();
         break;
   }
}


/*******************************************************************************
/
/     Routine:       wl_online_bg
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will monitor the cellular channel while
/                    ONLINE cellular data connections.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: None
/
/     Users: online_wl_bg
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void wl_online_bg(void)
{
   /* Check cellular call progress for Base Station messages */
   switch (wireless_call_progress())
   {
      case UNDETERMINED:
      case CONNECTION_ACTIVE:
      case RING_MESSAGE:
      case CONNECTION_BUSY:
      default:
         break;

      case CONNECTION_DROPPED:
         build_event(E_HANGUP,+WDROPPED);
         break;

      case CONNECTION_HANDOFF:

         /* Start a retrain for every handoff */
         modem_retrain();
         st_online.state = WL_ONLINE_RETRAIN;

         /* Set channel hand off time-out (S-Reg. 7) */
         timer1 = s[7] * 100;
         break;
   } /* switch */
}


/*******************************************************************************
/
/     Routine:       wl_online_to_idle
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine is called to process IDLE events while
/                    ONLINE during cellular data connections.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: None
/
/     Users: master_bg
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void wl_online_to_idle(void)
{
   /* Use standard PSTN code for online-to-idle sequence */
   online_pstn_idle();

   /* Force WIRELESS IDLE type (not PSTN) */
   if (st_online.type == WIRELESS_PHONE)
   {
      st_idle.type = AT_WIRELESS_PHONE;
      st_idle.state = WL_IDLE_ONLINE;
   }
   else
   {
      st_idle.type = AT_WIRELESS_DATA;
      st_idle.state = WL_IDLE_ONLINE_DATA;
   }
}


/*******************************************************************************
/
/     Routine:       online_wl_retrain
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine is called to process RETRAIN events while
/                    ONLINE during cellular data connections.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: None
/
/     Users: master_bg
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void online_wl_retrain(void)
{
   /* Use standard PSTN code for online retrain sequences */
   online_pstn_retrain();
}


/*******************************************************************************
/
/     Routine:       wl_online_retrain_bg
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will monitor the cellular channel while
/                    a retrain is occuring durring a cellular data connection.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: None
/
/     Users: online_wl_bg
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void wl_online_retrain_bg(void)
{
   /* If the retrain stalled, hangup */
   if (!timer1)
   {
      build_event(E_HANGUP,WDROPPED);
      return;
   }


   /* Monitor the Wireless channel during the retrain */
   switch (wireless_call_progress())
   {
      case UNDETERMINED:
      case RING_MESSAGE:
      case CONNECTION_BUSY:
      case CONNECTION_HANDOFF:
      default:
         break;

      case CONNECTION_ACTIVE:
         if (modem_status == CONNECTED_STATUS)
            st_online.state = WL_ONLINE_DATA;
         break;

      case CONNECTION_DROPPED:
         build_event(E_HANGUP,WDROPPED);
         break;
   } /* switch */
}


