/****************************************************************************
/
/     Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             wl00or.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains action routines needed for
/                       st_orig_wl_at[].
/
/     Product:          ACU core code
/
/     History:          Original version based on ac00orat.c v4.01
/
/        Created:       1/16/95
/
/        ---------------------------------------------------------
/        -                   Modifications                       -
/        ---------------------------------------------------------
/
/        Author & Date:  RSA
/        Description:
/        Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "acu_pro.h"
#include "mt_pro.h"
#include "wl_def.h"
#include "wl_pro.h"
#include "wl_mem.h"
#include "audio_if.h"

/* Local Cellular ORIG Prototypes */
void proc_wl_orig(void);
void at_wl_online(void);
void orig_at_wl_parse(void);
void orig_wl_at_answ(void);


/*******************************************************************************
/
/     Routine:       proc_wl_orig
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will process events by determining the
/                    next state and the action to be performed for
/                    the ORIG state of type WIRELESS_DATA.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: acu_state, acu_proc
/
/     Users: proc_orig
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void proc_wl_orig(void)
{
   acu_state = st_wl_orig_at[acu_event->type].new_state;
   acu_proc = st_wl_orig_at[acu_event->type].fnc_ptr;
}

/*******************************************************************************
/
/     Routine:       proc_wl_orig_phone
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will process events by determining the
/                    next state and the action to be performed for
/                    the ORIG state of type WIRELESS_PHONE.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: acu_state, acu_proc
/
/     Users: proc_orig
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void proc_wl_orig_phone(void)
{
   acu_state = st_wl_orig_phone[acu_event->type].new_state;
   acu_proc = st_wl_orig_phone[acu_event->type].fnc_ptr;
}

/*******************************************************************************
/
/     Routine:       at_wl_online
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will change states from ORIG to ONLINE.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed:  st_online.type, st_online.state
/
/     Users: st_orig_wl_at[], st_answ_wl_at[], st_parse_wl_at[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void at_wl_online(void)
{
   /* Use the same code as PSTN calls, but force a Wireless state */
   at_pstn_online();

   /* FAX link? */
   if (acu_event->parm == CONN_FAX)
   {
      /* Force ACU into online wireless mode */
      st_online.type = WIRELESS_FAX_ONLINE;
      st_online.state = WL_ONLINE_DATA;
   }
   /* AUTOSYNC link? */
   else if (acu_event->parm == CONN_AUTOSYNC)
   {
      /* No wireless AS yet */
   }
   /* Else DATA link */
   else
   {
      /* Force ACU into online wireless mode */
      st_online.type = WIRELESS_DATA;
      st_online.state = WL_ONLINE_DATA;
   }

   wl_ringing = FALSE;     /* Disable cellular ringing for wl_idle_bg() */
}


/*******************************************************************************
/
/     Routine:       orig_wl_at_parse
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will change states from ORIG to PARSE.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed:   st_parse.type, st_parse.state
/
/     Users:  st_orig_wl_at[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void orig_at_wl_parse(void)
{
   st_parse.type = AT_WIRELESS_DATA;
   st_parse.state = CMD4;
}


/*******************************************************************************
/
/     Routine:       orig_wl_at_answ
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will change states from ORIG to ANSW.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed:   st_answ
/
/     Users:  st_orig_wl_at[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void orig_wl_at_answ(void)
{
   /* Use same code as PSTN, but force answer sub-state to Wireless */
   idle_at_answ();
   st_answ.type = WIRELESS_DATA;
}


/*******************************************************************************
/
/     Routine:       orig_wl_phone_conn
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine will field CONNECT events for the ORIG state
/                    of type WIRELESS_PHONE.
/
/     Input Parameters:   None
/
/     Output Parameters:  None
/
/     Global Variables Changed: st_idle
/
/     Users:  st_orig_wl_at[]
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void orig_wl_phone_conn(void)
{
   st_idle.type = AT_WIRELESS_PHONE;
   st_idle.state = WL_IDLE_ONLINE;

   /* Show user done w/ dialing */
   if (CellCmds.CellularResultCodes == WECR_ENHANCED_CMDS)
      build_event(E_MSG,WIN_USE);
   else
      build_event(E_MSG,OK);
}


/*******************************************************************************
/
/     Routine:       wl_orig_at_msg
/
/     Author:        RSA
/
/     Creation Date: 01/16/95
/
/     Description:   This Routine is called to output a canned message to the
/                    DTE when the ACU is in Wireless ORIG state.  This routine
/                    checks for nnon-wireless messages and routes those to
/                    the standard ACU.
/
/     Input Parameters:  type - which message to send (see ACU_DEF.H)
/
/     Output Parameters: None
/
/     Global Variables Changed: None
/
/     Users: originate and answer state tables
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void wl_orig_at_msg(void)
{
   ubyte msg_type;

   msg_type = acu_event->parm;

   /* Test for messages exclusive to Wireless */
   if ((msg_type >= WLOCKED_OUT) && (msg_type <= WBAD_NAM))
   {
      if ((!sr14.disable_result_code) && (acu_event->parm != NONE))
      {
         wl_output_result(msg_type);
         /* Wait for message to reach the terminal */
#ifndef __riscos
         while (acu_to_num() > 0) ;
         while (!check_all_sent()) ;
#endif
      }
   }
   /* Else send standard messages to ACU ... */
   else
   {
      orig_at_msg();
   }
}



/*******************************************************************************
/
/     Routine:       wl_kb_abort
/
/     Author:        RSA
/
/     Creation Date: 08/21/95
/
/     Description:   This Routine will process the event of keyboard abort for
/                    the wireless modem and phone.
/
/     Input Parameters:  None
/
/     Output Parameters: None
/
/     Global Variables Changed: None
/
/     Users:         originate and answer state tables
/
/     -------------------------------------------------------------
/     -                       Modifications                       -
/     -------------------------------------------------------------
/
/     Author & Date: RSA
/     Description:
/     Reason:
/
*******************************************************************************/
void wl_kb_abort(void)
{
   /* Stop WL DTMF generation */
   dial_timer=0;
   wl_wait_for_DTMF();

   /* Hangup modem */
   build_event(E_HANGUP,WDROPPED);
}




