/****************************************************************************
/
/     Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             v200hn.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains the control code for the V.25 state
/                       HANGUP
/
/     Product:          ACU core code
/
/     History:          v200hn.c v3.90
/                       v200hn.c v3.91
/
/           Created:    11/16/91
/                       1/14/93
/
/           ----------------------------------------------------------
/           -                   Modifications                        -
/           ----------------------------------------------------------
/
/           Author & Date: RSA
/           Description:
/           Reason:
/
*****************************************************************************/

#include "sys_def.h"
#include "acu_def.h"
#include "acu_mem.h"
#include "v25_def.h"
#include "v25_mem.h"
#include "acu_pro.h"
#include "mt_pro.h"
#include "v25_pro.h"

void proc_hangup_v25(void);
void hangup_v25_bg(void);
void proc_v25_hangup(void);
void v25_update_call_status(void);
void v25_no_dialtone(void);
void hangup_v25_idle(void);


/*******************************************************************************
/
/   Routine: proc_hangup_v25
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine will process the event by determining the
/            next state and the action to be performed for the HANGUP
/            state of type V25_PSTN.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  acu_state, acu_proc
/
/   Users: proc_hangup
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void proc_hangup_v25(void)
{
   acu_state = st_hangup_v25[acu_event->type].new_state;
   acu_proc = st_hangup_v25[acu_event->type].fnc_ptr;
}


/*******************************************************************************
/
/   Routine: hangup_v25_bg
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine will perform the backgroung functions for
/            the HANGUP state of type V25_PSTN.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  timer5, v25_wait_for_108_drop
/
/   Users: hangup_bg
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void hangup_v25_bg(void)
{
/*   There must be a 5 second delay between consecutive V.25bis calls for ALCATEL 5/8/91 by T.C. */
   timer5 = 500;

/*   If 108/1 mode and the call failed, wait for DTR to drop before trying the call again */
   if (v25_operating_mode == V25_108_1_MODE)
   {
      if ((!v25_call_connected) && (sr14.originate_flag))
         v25_wait_for_108_drop = TRUE;
   }

   hang_up(((operating_mode == DIRECT) || (operating_mode == NORMAL)) &&
       (tone_disconnect == FALSE));

   if ((v25_operating_mode == V25_108_2_MODE) && (DTR_valid_up_flag))
      build_event(E_PARSE,UNUSED);
   else
      build_event(E_IDLE,UNUSED);

   enable_acu_on_terminal();
   build_event(E_MSG,hangup_result_type);
}


/*******************************************************************************
/
/   Routine: proc_v25_hangup
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine will change states to the HANGUP state of
/            type V25_PSTN.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  hangup_result_type, st_hangup.type
/
/   Users: st_orig_v25[], st_answ_v25[], st_online_v25[]
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void proc_v25_hangup(void)
{
   st_hangup.type = V25_PSTN;
   hangup_result_type = acu_event->parm;

   if (hangup_result_type == VAL)
      v25_clear_all_call_status();

   v25_update_call_status();

   if (hangup_result_type == NO_DIALTONE)
      v25_no_dialtone();
}


/*******************************************************************************
/
/   Routine: v25_update_call_status
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine updates the status of the attempted calls
/            and places the number on the delayed list.  If the call
/            was successful, the delayed status is reset. Otherwise
/            the delayed status is updated.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  v25_delayed_timer[], v25_call_delayed[],
/               v25_successive_calls[]
/
/   Users: proc_v25_hangup
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void v25_update_call_status(void)
{
   if (v25_operating_mode == V25_108_1_MODE)
      return;

   if (!v25_call_connected)
   {
      if (v25_successive_calls[v25_number_called] == 3)
      {
         v25_delay_timer[v25_number_called] = DELAYED_CALL_TIME;
         v25_call_delayed[v25_number_called] = TRUE;
      }
      else
         v25_delay_timer[v25_number_called] = SUCCESSIVE_CALL_TIME;
   }
   else
   {
      v25_successive_calls[v25_number_called] = 0;
      v25_delay_timer[v25_number_called] = 0;
   }
}


/*******************************************************************************
/
/   Routine: v25_no_dialtone
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine updates the "successive call attempts without
/            dial tone detection" automatic call control.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  v25_no_dt_time[], v25_calls_without_dt
/
/   Users: proc_v25_hangup
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Descriptions:
/   Reasons:
/
*******************************************************************************/
void v25_no_dialtone(void)
{
   ubyte newest;

   if (v25_operating_mode == V25_108_1_MODE)
      return;

   modem_disable_interrupts();

   if (v25_calls_without_dt == MAX_CALLS_WITHOUT_DIALTONE)
      return;

   newest = v25_dt_oldest + v25_calls_without_dt;

   if (newest > MAX_CALLS_WITHOUT_DIALTONE -1)
      newest = newest - MAX_CALLS_WITHOUT_DIALTONE;

   v25_no_dt_time[newest] = v25_minute_timer;
   v25_calls_without_dt++;

   modem_enable_interrupts();
}


/*******************************************************************************
/
/   Routine: hangup_v25_idle
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine will change states from the HANGUP V25_PSTN
/            state to the IDLE V25BIS state.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  st_idle.type
/
/   Users: st_hangup_v25[]
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void hangup_v25_idle(void)
{
   st_idle.type = V25BIS;

/*   Turn CTS and RLSD off */
   modem_dte_cts(OFF);
   modem_dte_rlsd(OFF);
}

