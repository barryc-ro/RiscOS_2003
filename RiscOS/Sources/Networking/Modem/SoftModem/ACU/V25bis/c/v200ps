/****************************************************************************
/
/     Copyright 1988,1989,1990,1991,1992,1993,1994,1995.
/     All Rights Reserved by:
/        RSA
/        7701 Six Forks Road
/        Suite 120
/        Raleigh, NC  27615
/        (919) 846-7171
/
/     This document contains material confidential to RSA its contents must
/     not be revealed, used or disclosed to anyone or company with out
/     written permission by RSA.  The information contained herein is solely
/     for the use of RSA.
/
/     File:             v200ps.c
/
/     Module Version:   ACU 5.00
/
/     Function:         This file contains action routines contained in the
/                       st_orig_v25[] and st_answ_v25[]
/
/     Product:          ACU core code
/
/     History:          v200ps.c v3.90
/                       v200ps.c v3.91
/
/           Created:    1/21/92
/                       1/14/93
/
/           ----------------------------------------------------------
/           -                   Modifications                        -
/           ----------------------------------------------------------
/
/           Author & Date: RSA
/           Description:
/           Reason:
/
*****************************************************************************/

#include "sys_def.h"

#include "acu_def.h"
#include "acu_mem.h"
#include "v25_def.h"
#include "v25_mem.h"

#include "acu_pro.h"
#include "mt_pro.h"
#include "v25_pro.h"

void proc_orig_v25(void);
void orig_v25_pstn_bg(void);
void v25_originate_handshaking(void);
void proc_answ_v25(void);
void v25_pstn_online(void);
void v25_successful_call(void);
void v25_pstn_DTR_off(void);


/*******************************************************************************
/
/   Routine: proc_orig_v25
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine will process the event by determining the
/            next state and the action to be performed for the ORIG
/            state of type V25_PSTN.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  acu_state, acu_proc
/
/   Users: proc_orig
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void proc_orig_v25(void)
{
   acu_state = st_orig_v25[acu_event->type].new_state;
   acu_proc = st_orig_v25[acu_event->type].fnc_ptr;
}




/*******************************************************************************
/
/   Routine: orig_v25_pstn_bg
/
/   Author : RSA
/
/   Creation Date: 06/17/91
/
/   Description : This Routine will process the background functions for
/            the ORIG state of type V25_PSTN.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  st_orig_v25.state
/
/   Users: proc_orig
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void orig_v25_pstn_bg(void)
{
   switch (st_orig.state)
   {
      case DELAY_BEFORE_DIALING:

      /*   In this state the ACU will wait before dialing another
         number until V25bis timer has expired.
      */
              if (timer5 == 0)
                 st_orig.state = INIT_ACU_DIAL;
              break;

      case INIT_ACU_DIAL:

      /*   In this state the ACU is being initialized to dial a
         number.
      */
              orig_init_dial();
              break;

      case INIT_ACU_NO_DIAL:

      /*   In this state the ACU is being initialized to make a
         connection.
      */
              orig_init_no_dial();
              break;


      case ORIG_WAIT_FOR_TONE:

      /*   In this state the ACU is waiting for dialtone detection,
         if enabled.
      */
              orig_wait_for_dialtone();
              break;

      case ORIG_DIAL:

      /*   In this state the ACU is processing the dial command
      */
              originate_dial();
              break;

      case INIT_MODEM_ORIG:

      /*   In this state the ACU will make function calls to
         set up the modem task to originate a call
      */
              orig_init_modem();
              break;

      case ORIG_HANDSHAKING:

      /*   In this state the ACU performs handshaking in the
         originate mode.
      */
              v25_originate_handshaking();
              break;

      case PROCESS_DIAL_MOD:

      /*   In this state the ACU will process any dial modifiers
         that takes any length of time
      */
              process_modifiers();
              break;
   }
}

/*******************************************************************************
/
/   Routine: v25_originate_handshaking
/
/   Author : RSA
/
/   Creation Date: 05/07/91
/
/   Description : This Routine is performs the handshaking for the ORIG state.
/            It is waiting for carrier in order to proceed to the
/            ONLINE state.
/
/   Input Parameters: none
/
/   Output Parameters: none
/
/   Global Variables Changed:  busy_detect
/
/   Users:   v25_orig_pstn_bg
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void v25_originate_handshaking(void)
{
   ubyte call_prog_status;

   if (modem_status != IDLE_STATUS)
   {
      if (modem_check_dsr())
         if ((DSR_only_at_handshaking) || (comm_mode != ASYNC))
            modem_dte_dsr(ON);

      call_prog_status = modem_call_progress();

      if (call_prog_status == ANSWER_TONE)
      {
         busy_detect = FALSE;
             modem_dte_cts(OFF);
             modem_dte_rlsd(OFF);
      }

      if (call_prog_status == RINGBACK)
      {
         busy_detect = FALSE;

                        if (!start_ringback_timer)
                            start_ringback_timer = RINGBACK_TIME;
                        if (received_ringback)
                        {
                       build_event(E_HANGUP,CFI_RT);
                            start_ringback_timer = 0;
                            received_ringback = FALSE;
                        }
      }

      if (call_prog_status == NO_ANSWER_TONE)
      {
             busy_detect = FALSE;
             build_event(E_HANGUP,CFI_NT);
      }

      if ((busy_detect == TRUE) && ((sr22.busy_enable)
         && (call_prog_status == BUSY_SIGNAL)))
      {
         build_event(E_HANGUP,CFI_ET);
         return;
      }

      else if (modem_check_CD())
         acu_connect();
   }
   else
      build_event(E_HANGUP,CFI_AB);
}


/*******************************************************************************
/
/   Routine: proc_answ_v25
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine will process the event by determining the
/            next state and the action to be performed for the ANSW
/            state of type V25_PSTN.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  acu_state, acu_proc
/
/   Users: proc_answ
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void proc_answ_v25(void)
{
   acu_state = st_answ_v25[acu_event->type].new_state;
   acu_proc = st_answ_v25[acu_event->type].fnc_ptr;
}


/*******************************************************************************
/
/   Routine: v25_pstn_online
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine will change states from ORIG V25_PSTN or
/            ANSW V25_PSTN to ONLINE V25BIS.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  st_online.state, st_online.type, CTS_up_flag
/               CTS_turn_on_flag, cts_timer
/
/   Users: st_orig_v25[], st_answ_v25[]
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void v25_pstn_online(void)
{
   st_online.state = S_IDLE;
   st_online.type = V25_PSTN;

   if (operating_mode == DIRECT)
   {
      modem_dte_rlsd(ON);

/*   CTS must follow RTS if we are running CCITT direct mode */
      if (modem_dte_RTS_status() || (RTS_always_on))
         modem_dte_cts(ON);
      else
         modem_dte_cts(OFF);
   }
   else
      modem_dte_cts(ON);

   if (modem_dte_CTS_status() == FALSE)
   {
      CTS_up_flag = FALSE;
      CTS_turn_on_flag = TRUE;
   }
   else
   {
      CTS_up_flag = TRUE;
      CTS_turn_on_flag = FALSE;
   }
   cts_timer = 0;

   v25_successful_call();
}

/*******************************************************************************
/
/   Routine: V25_sucessful_call
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine lets V.25bis know that the call was
/            successful.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  v25_call_connected
/
/   Users: v25_pstn_online
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void v25_successful_call(void)
{
   v25_call_connected = TRUE;
}


/*******************************************************************************
/
/   Routine: v25_pstn_DTR_off
/
/   Author : RSA
/
/   Creation Date: 07/17/91
/
/   Description : This Routine will process the event of DTR dropping
/            in the ORIG and ANSW state of type V25_PSTN.
/
/   Input Parameters: None
/
/   Output Parameters: none
/
/   Global Variables Changed:  None
/
/   Users: st_orig_v25[], st_answ_v25[]
/
/   -------------------------------------------------------------
/   -         Modifications             -
/   -------------------------------------------------------------
/
/   Author & Date:   RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void v25_pstn_DTR_off(void)
{
   build_event(E_HANGUP,NONE);
}

