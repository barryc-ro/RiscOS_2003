/****************************************************************************
/
/   Copyright, 1991,1992,1993,1994,1995,1996.
/     All Rights Reserved by:
/       RSA
/       7701 Six Forks Road
/       Suite 120
/       Raleigh, NC  27615
/       (919) 846-7171
/
/
/   This document contains material confidential to RSA its contents must
/   not be revealed, used or disclosed to anyone or company with out
/   written permission by RSA.  The information contained herein is solely
/   for the use of RSA.
/
/   File: fx00if.c
/
/   Module Version: 4.04
/
/   Function: FAX class 1 & 2 interface routing.
/
/   Product: FAX Module.
/
/   History: 4.03
/
/   Created: 01/24/92
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date:
/   Description:
/   Reason:
/
****************************************************************************/
#include "sys_def.h"

/* FAX Module opcode delimiters */
#define FTS_COMMAND         1       /* +FTS first class 1 opcode */
#define FRH_QUERY           10      /* +FRH last class 1 opcode */
#define FBADLIN_COMMAND     100     /* +FBADLIN first class 2 opcode */
#define FWDFC_QUERY         185     /* +FWFC last class 2 opcode */
#define FBO_COMMAND         200     /* +FBO first class 2.0 opcode */
#define FSP_QUERY           271     /* +FSP last class 2.0 opcode */

/* +FCLASS setting is needed to determine which FAX module to call */
ubyte fax12_class;

/* Class 1 entry points */
extern void fax1_init(ubyte);
extern void fax1_configure(ubyte, ubyte, ubyte, ubyte);
extern void fax1_hangup(void);
extern void fax1_timer(void);
extern ubyte *fax1_tx(void);
extern ubyte *fax1_rx(void);
extern ubyte fax1_bg(void);
extern ubyte fax1_execute_command(uword, ubyte *, ubyte **);
extern void fax1_connect(ubyte);

/* Class 2 & 2.0 entry points */
extern void fax2_init(ubyte);
extern void fax2_configure(ubyte, ubyte, ubyte, ubyte);
extern void fax2_hangup(void);
extern void fax2_timer(void);
extern ubyte *fax2_tx(void);
extern ubyte *fax2_rx(void);
extern ubyte fax2_bg(void);
extern ubyte fax2_execute_command(uword, ubyte *, ubyte **);
extern ubyte fax20_execute_command(uword, ubyte *, ubyte **);
extern void fax2_connect(ubyte);

/* FAX Module entry points */
void fax_init(ubyte);
void fax_configure(ubyte, ubyte, ubyte, ubyte);
void fax_hangup(void);
void fax_timer(void);
ubyte *fax_tx(void);
ubyte *fax_rx(void);
ubyte fax_bg(void);
ubyte fax_execute_command(uword, ubyte *, ubyte **);
void fax_connect(ubyte);

/******************************************************************************
/
/   Routine: fax_init
/
/   Author: RSA
/
/   Creation Date: 01/24/92
/
/   Description: This routine is called during powerup initialization and
/                +FIP command execution. The class 1 & 2 fax_init routines
/                are called to allow software initialization.
/
/   Input Parameters: ubyte     init_type
/                     0         powerup initialization
/                     1         AT&F or ATZ initialization
/                     2         AT+FIP initialization
/
/   Output Parameters: none
/
/   Global Variables Changed: fax12_class
/
/   Users: Modem powerup procedure and +FIP execution.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void fax_init(ubyte init_type)
{
    mmu_open_fax_pg
    if (init_type != 2)    /* if not +FIP initialization reset class setting */
        fax12_class = 0;
    fax1_init(init_type);
    fax2_init(init_type);
    mmu_restore_stored_pg
}

/******************************************************************************
/
/   Routine: fax_configure
/
/   Author: RSA
/
/   Creation Date: 12/11/92
/
/   Description: This routine is called to inform the FAX module of
/                environment settings. This routine should be called by
/                the ACU after any environment change, and before the
/                next entry into the FAX module.
/
/   Input Parameters: ubyte     fclass
/                     0         data mode
/                     1         class 1 (TIA-578)
/                     2         class 2 (TIA-PN2388)
/                     2.0       class 2.0 (TIA-592)
/
/                     ubyte     response type
/                     0         numeric
/                     1         verbose
/
/                     ubyte     DTE baudrate
/                     2         300
/                     3         1200
/                     4         2400
/                     5         4800
/                     6         7200
/                     7         9600
/                     8         12000
/                     9         14400
/                     10        16800
/                     11        19200
/                     12        38400
/                     13        57600
/                     14        600
/                     15        115200
/
/                     ubyte     flow control
/                     0         no flow control
/                     1         XON/XOFF
/                     2         CTS/RTS
/                     3         XON/XOFF and CTS/RTS
/
/   Output Parameters: none
/
/   Global Variables Changed: fax12_class
/
/   Users: ACU FAX Driver.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void fax_configure(ubyte fclass, ubyte response_type, ubyte dte_baud,
                   ubyte flow_control)
{
    mmu_open_fax_pg
    fax12_class = fclass;
    fax1_configure(fclass, response_type, dte_baud, flow_control);
    fax2_configure(fclass, response_type, dte_baud, flow_control);
    mmu_restore_stored_pg
}

/******************************************************************************
/
/   Routine: fax_hangup
/
/   Author: RSA
/
/   Creation Date: 01/24/92
/
/   Description: This routine is called during hangup processing
/                to allow the FAX software to properly terminate any
/                ongoing protocols. Call all FAX modules since +FCLASS
/                could have be set to zero before ATH0.
/
/   Input Parameters: none
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: ACU hangup procedure.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void fax_hangup(void)
{
    mmu_open_fax_pg
    fax12_class = 0;
    fax1_hangup();
    fax2_hangup();
    mmu_restore_stored_pg
}

/******************************************************************************
/
/   Routine: fax_timer
/
/   Author: RSA
/
/   Creation Date: 01/24/92
/
/   Description: This routine called from the ACU 10ms process software.
/                It allows FAX to update any ongoing timer processing.
/
/   Input Parameters: none
/
/   Output Parameters: none
/
/   Global Variables Changed: none
/
/   Users: ACU timer processing.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void fax_timer(void)
{
    mmu_open_fax_pg
    if (fax12_class == 1)
        fax1_timer();
    else if (fax12_class == 2 || fax12_class == 20)
        fax2_timer();
    mmu_restore_stored_pg
}

/******************************************************************************
/
/   Routine: fax_tx
/
/   Author: RSA
/
/   Creation Date: 01/24/92
/
/   Description: This routine is called from the FAX DCE/HDLC Module.
/                It indicates the end of an HDLC packet transmission.
/                It expects a pointer to the next HDLC packet to be
/                transmitted, or a NULL pointer indicatting no packets
/                to be transmitted.
/
/   Input Parameters: none
/
/   Output Parameters: ubyte *      function return code
/                      address      HDLC packet
/                      NULL         no packet
/
/   Global Variables Changed: none
/
/   Users: FAX line I/O ISR.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
ubyte *fax_tx(void)
{
    ubyte *return_ptr;

    mmu_open_fax_pg
    if (fax12_class == 1)
        return_ptr = fax1_tx();
    else if (fax12_class == 2 || fax12_class == 20)
        return_ptr = fax2_tx();
    else
        return_ptr = 0; /* fax_rx should not be called when +FCLASS=0 */
    mmu_restore_stored_pg

    return(return_ptr);
}

/******************************************************************************
/
/   Routine: fax_rx
/
/   Author: RSA
/
/   Creation Date: 01/24/92
/
/   Description: This routine is called from the FAX DCE/HDLC Module.
/                It indicates the reception of an HDLC packet.
/                It expects a pointer to the next HDLC buffer to
/                receive a packet into, or a NULL pointer indicatting
/                no buffers available for reception.
/
/   Input Parameters: none
/
/   Output Parameters: ubyte        function return code
/                      address      HDLC packet
/                      NULL         no packet
/
/   Global Variables Changed: none
/
/   Users: FAX line I/O ISR.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
ubyte *fax_rx(void)
{
    ubyte *return_ptr;

    mmu_open_fax_pg
    if (fax12_class == 1)
        return_ptr = fax1_rx();
    else if (fax12_class == 2 || fax12_class == 20)
        return_ptr = fax2_rx();
    else
        return_ptr = 0; /* fax_rx should not be called when +FCLASS=0 */
    mmu_restore_stored_pg

    return(return_ptr);
}

/******************************************************************************
/
/   Routine: fax_bg
/
/   Author: RSA
/
/   Creation Date: 01/24/92
/
/   Description: This routine is called from ACU background processing
/                to allow the FAX software to execute ongoing FAX
/                protocols. A result code will be returned by the
/                FAX software indicating the FAX state and any requests
/                for DTE message response processing.
/
/   Input Parameters: none
/
/   Output Parameters: ubyte    return code
/                      0        Stay online
/                      1        Stay in the parse state
/                      2        Go to parse and respond with
/                               OK message.
/                      3        Go to parse and respond with
/                               NO CARRIER message.
/                      4        Go to parse and respond with
/                               ERROR message.
/                      5        Go to hangup connection
/                      6        Go to online
/                      7        Go to parse and respond with
/                               FCERROR message.
/
/   Global Variables Changed: none
/
/   Users: Modem backgroud loop.
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
ubyte fax_bg(void)
{
    ubyte    return_code;

    mmu_open_fax_pg
    if (fax12_class == 1)
        return_code = fax1_bg();
    else if (fax12_class == 2 || fax12_class == 20)
        return_code = fax2_bg();
    else
        return_code = 1;    /* FAX idle when +FCLASS=0  */
    mmu_restore_stored_pg

    return(return_code);
}


/******************************************************************************
/
/   Routine: fax_execute_command
/
/   Author: RSA
/
/   Creation Date: 12/7/92
/
/   Description: This routine is called from the FAX parsers to execute
/                a FAX command.
/
/   Input Parameters: uword     command
/                     FTS_COMMAND -- FRH_QUERY          Class 1
/                     FBADLIN_COMMAND -- FWDFC_QUERY    Class 2
/                     FBO_COMMAND -- FSP_QUERY          Class 2.0
/
/                     ubyte      *command_parm_ptr
/                                1) Pointer to single parameter or
/                                2) pointer to a list of parameters for compound
/                                   byte parameters with the following format:
/
/                                   AT+F=5,6   => [0x1,0x5, 0x2,0x6, 0x00]
/                                   AT+F=,6,,8 => [0x2,0x6, 0x4,0x8, 0x00]
/                                   AT+F=0     => [0x1,0x0, 0x00]
/                                   AT+F=      => [0x00]
/                                   or
/                                3) pointer to a formatted string with
/                                   the following format:
/
/                                    AT+F="...." -> [\",...,\",\0]
/                                    AT+F="" -> [\",\",\0]
/                                    AT+F=   -> [\0]
/
/                     ubyte     **response_ptr_ptr
/                               A pointer to a location where the address of
/                               the response string should be placed.
/
/   Output Parameters: ubyte    function return code
/                      0        Go to online
/                      1        Continue parsing
/                      2        Discard rest of command line
/                               and respond with ERROR message
/
/   Global Variables Changed: fax12_class
/
/   Users: ACU parser
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
ubyte fax_execute_command(uword command, ubyte *command_parm_ptr,
                          ubyte **response_ptr_ptr)
{
    ubyte return_code;

    mmu_open_faxp_pg
    if (command >= FTS_COMMAND && command <= FRH_QUERY)
        return_code = fax1_execute_command(command, command_parm_ptr, response_ptr_ptr);
    else if (command >= FBADLIN_COMMAND && command <= FWDFC_QUERY)
        return_code = fax2_execute_command(command, command_parm_ptr, response_ptr_ptr);
    else if (command >= FBO_COMMAND && command <= FSP_QUERY)
        return_code = fax20_execute_command(command, command_parm_ptr, response_ptr_ptr);
    else
        return_code = 2;
    mmu_restore_stored_pg

    return(return_code);
}

/******************************************************************************
/
/   Routine: fax_connect
/
/   Author: RSA
/
/   Creation Date: 01/26/92
/
/   Description: This routine will start the class 1 or 2 FAX protocol
/                after a physical connection (phase A) has been established.
/
/   Input Parameters: ubyte     direction
/                     0         answer
/                     1         originate
/
/   Output Parameters: None
/
/   Global Variables Changed:
/
/   Users: ACU connection processing
/
/   -------------------------------------------------------------
/   -                       Modifications                       -
/   -------------------------------------------------------------
/
/   Author & Date: RSA
/   Description:
/   Reason:
/
*******************************************************************************/
void fax_connect(ubyte direction)
{
    mmu_open_fax_pg
    if (fax12_class == 1)
        fax1_connect(direction);
    else if (fax12_class == 2 || fax12_class == 20)
        fax2_connect(direction);
    mmu_restore_stored_pg
}

