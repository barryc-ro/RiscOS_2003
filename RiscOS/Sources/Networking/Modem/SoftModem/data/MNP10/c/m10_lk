/****************************************************************************
/
/       Copyright, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995.
/       All Rights Reserved by:
/               RSA
/               7701 Six Forks Road
/               Suite 120
/               Raleigh, NC  27615
/               (919) 846-7171
/
/
/       This document contains material confidential to RSA its contents must
/       not be revealed, used or disclosed to anyone or company with out
/       written permission by RSA.  The information contained herein is solely
/       for the use of RSA.
/
/       File:           M10_LK.C
/
/       Module Version: 4.02
/
/       Function:       This file contains the MNP 10 code that processes the
/                       LK packet.
/
/       Product:        V.42/V.42bis
/
/       History:
/
/           Created:
/                       11/1/94 (V4.01) - Add ETC and MNP10 updates
/
/           ---------------------------------------------------------
/           -                   Modifications                       -
/           ---------------------------------------------------------
/
/           Author & Date:	RSA
/           Description:
/           Reason:
/
*****************************************************************************/
#include "sys_def.h"
#include "mnp_if.edf"
#include "mnp_def.h"
#include "mnp_stru.h"

extern struct extra_short_buffer_entry lk_send_segment;
extern struct buffer_entry receive_buffer [NUMBER_OF_MNP_BUFFERS];
extern ubyte *transmit_active_frame;	/* PTR TO FRAME CURRENTLY BEING XMITED*/
extern ubyte rcv_working_frame_ptr;	/*PTR TO FRAME REFERENCED BY PDU UTILS*/
extern ubyte mnp10_LMI_recv_seq_num;
extern ubyte mnp10_LMI_nak_request;
extern ubyte mnp10_LMI_RCV_nak_request;
extern ubyte mnp10_LMI_RCV_recv_seq_num;
extern ubyte ack_rcv_sequence_number;	/* LAST RECEIVE SEQUENCE # ACKED      */
extern ubyte la_window; 	       /* ACTUAL WINDOW COUNT		     */
extern ubyte la_receive_sequence;
extern ubyte la_credit_amount;

/*******************************************************************************
/
/	Routine: M10_build_lk
/
/	Author : RSA
/
/	Creation Date: 03/13/92
/
/	Description : This Routine will build the LM packet
/
/	Input Parameters: None
/
/	Output Parameters: None
/
/	Global Variables Changed:  lk_send_segment
/
/	Users: transmit_background(), mnp10_bg(), mnp10_retrain_bg()
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date:	RSA
/	Description:
/	Reason:
/
*******************************************************************************/
void M10_build_lk(void)
{
    lk_send_segment.io_status = 0;
    lk_send_segment.user_flag = 0;
    lk_send_segment.pdu_length = 5;
    lk_send_segment.header_length = 4;
    lk_send_segment.pdu_type = PDU_TYPE_LK;
    lk_send_segment.pdu_data[0] = mnp10_LMI_recv_seq_num | mnp10_LMI_nak_request;
    lk_send_segment.pdu_data[1] = ack_rcv_sequence_number;
    lk_send_segment.pdu_data[2] = la_window;
}

/*******************************************************************************
/
/	Routine: M10_send_lk
/
/	Author : RSA
/
/	Creation Date: 03/13/92
/
/	Description : This Routine will send the LK packet.
/
/	Input Parameters: None
/
/	Output Parameters: None
/
/	Global Variables Changed:  transmit_active_frame
/
/	Users: transmit_background()
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date:	RSA
/	Description:
/	Reason:
/
*******************************************************************************/
void M10_send_lk(void)
{
    transmit_active_frame = &lk_send_segment.io_status;
    mpg_start_tx();
}


/*******************************************************************************
/
/	Routine: mnp10_empty_lk
/
/	Author : RSA
/
/	Creation Date: 03/13/92
/
/	Description : This Routine will process the received LK packet
/
/	Input Parameters: None
/
/	Output Parameters: ubyte process status
/				0    = Process completed OK
/				0xe5 =	Bad count in parm option
/
/	Global Variables Changed: mnp10_LMI_RCV_recv_seq_num,
/				  mnp10_LMI_RCV_nak_request,
/				  la_receive_sequence, la_credit_amount
/
/	Users: mnp_rx_fg()
/
/	-------------------------------------------------------------
/	-			Modifications			    -
/	-------------------------------------------------------------
/
/	Author & Date:	RSA
/	Description:
/	Reason:
/
*******************************************************************************/
ubyte mnp10_empty_lk(void)
{
    uword packet_count;
    ubyte i;

    packet_count = receive_buffer[rcv_working_frame_ptr].header_length;

    if (packet_count >= 2)
    {
	i = receive_buffer[rcv_working_frame_ptr].pdu_data[0];
	mnp10_LMI_RCV_recv_seq_num = i & 0x07f;
	mnp10_LMI_RCV_nak_request  = i & 0x080;

	if (packet_count >= 4)
	{
		la_receive_sequence = receive_buffer[rcv_working_frame_ptr].pdu_data[1];
		la_credit_amount = receive_buffer[rcv_working_frame_ptr].pdu_data[2];
	}
    }
    else
    {
		return(EMPTY_PDU_PARM_COUNT);
    }

    return(OK);
}

