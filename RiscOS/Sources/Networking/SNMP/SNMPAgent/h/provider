/*
 *  SNMP Agent (provider.h)
 *
 * Copyright (C) Element 14 Ltd. 1999
 *
 */
#ifndef provider_h_included
#define provider_h_included

#ifdef __cplusplus
extern "C" {
#endif

/* These header files are exported by SNMPLib */
#ifndef ASN1_H
#  include "asn1.h"
#endif
#ifndef SNMP_H
#  include "snmp.h"
#endif

typedef struct snmp_stat_descriptor snmp_stat_descriptor;

typedef union {
        unsigned long		private_u_long;
        long			private_long;
        unsigned int		private_u_int;
        int			private_int;
       	void 			*private_ptr;
       	void			(*private_fn)(void);
} snmp_stat_private;

struct snmp_stat_descriptor {
        snmp_stat_descriptor	*next;
        int			private_flags;
        snmp_stat_private	private;
        size_t			subtree_depth;
        oid			subtree[MAX_OID_LEN];
};

/* Although CMHG generates a prototype indicating that no parameters
 * are taken or returned from a generic-veneer, this isn't quite right.
 * Actually, they return _kernel_oserror * and they take whatever's in
 * R0-R9 on entry and deliver them to the veneer handler as a
 * _kernel_swi_regs * and the private word pointer in R1.
 */
typedef union {
        void 			(*cmhg_generic_veneer)(void);
        _kernel_oserror *	(*cmhg_generic_veneer_actual)(void);
        _kernel_oserror *	(*assembler_veneer)(void);
} snmp_entry_point;

typedef enum {
        snmp_api_CMHG_GENERIC_VENEER,
        snmp_api_ASSEMBLER_VENEER
} snmp_api_type;

typedef struct snmp_provider {
        int			flags;
        snmp_api_type		api_type;
        int			api_version;
	snmp_stat_descriptor	*stats;
        void			*r12_on_entry;
        snmp_entry_point	*entry_point;
} snmp_provider;

/* Request type will be one of:
 * SNMP_MSG_GET, SNMP_MSG_GETNEXT, SNMP_MSG_SET, SNMP_MSG_GETBULK,
 * SNMP_MSG_REPORT.
 *
 * return_code is anything from snmp.h starting SNMP_ERR_
 *
 *
 */
typedef struct snmp_request_details {
        int			flags;
        int			request_type;
        int			return_code;
        oid			*id;
        oid			*next_id; /* Filled in on output */
} snmp_request_details;

#ifdef __cplusplus
}
#endif

#endif
