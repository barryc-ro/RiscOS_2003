/* File:    error.h
 * Purpose: Interface to error handling facilities
 * Author:  B Laughton
 * History: 10-Dec-96: BAL: created - based on N. Bingham's examples
 */

#ifndef _error_h
#define _error_h

/* =============================================================================
 * Include header files
 */

/* CLib */
#include <kernel.h>
#include <stdlib.h>




/* =============================================================================
 * Define contants
 */

#define ERROR (1)
#define NOERROR (0)

enum
{
    Error_Memory,
    Error_Dispatch,
    Error_UnexpectedResult,
    Error_URIMismatch
};


extern _kernel_oserror error_msg[];



/* =============================================================================
 * Define macros
 */

/* These macros provide a means of checking whether we must
 * call our error handler or not.
 * The second macro causes the program to exit.
 */

#define M_e_check(a) \
if ((a) != NULL) \
{ \
    wimp_error (a); \
}

#define M_e_check_abort(a) \
if ((a) != NULL) \
{ \
    wimp_error (a); \
    exit (EXIT_FAILURE); \
}

#define M_e_error(n) &error_msg[n]



/* =============================================================================
 * Declare function prototypes
 */

extern void wimp_error (_kernel_oserror *const e);

#endif
