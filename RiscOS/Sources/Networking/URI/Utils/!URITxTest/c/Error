/* File:    Error.c
 * Purpose: Error handling routines
 * Author:  B Laughton
 * History: 10-Dec-96: BAL: created
 */




/* =============================================================================
 * Include header files
 */

/* CLib */
#include <kernel.h>
#include <string.h>
#include <swis.h>

/* Toolbox */
#include <tboxlibs/wimplib.h>

#include "global.h"



_kernel_oserror error_msg[] =
{
    {0, "NoMem"},
    {0, "Busy"},
    {0, "BadRes"},
    {0, "BadURI"}
};




/* =============================================================================
 * Declare function prototypes
 */

static char* lookup_message_token (const char *const tag);




/* =============================================================================
 * Define functions
 */

/* -----------------------------------------------------------------------------
+
   wimp_error

   Report an error in a standard WIMP dialogue box

   Inputs
   e: pointer to RISC OS error structure
-
 */

extern void wimp_error (_kernel_oserror *const e)
{
    char *message_text;

    if ((message_text = lookup_message_token (e->errmess)) != NULL)
        strncpy (e->errmess, message_text, sizeof (e->errmess) - 1);

    wimp_report_error ((_kernel_oserror *) e, 0,
                       lookup_message_token("_TaskName"), 0, 0, 0);
}



/* -----------------------------------------------------------------------------
+
   lookup_message_token

   Lookup message token in International messages file, and return the message
   string

   Inputs
   tag: the message token to lookup

   Returns
   pointer to message string or NULL if message couldn't be found
-
 */

static char *lookup_message_token (const char *const tag)
{
    char *message = NULL;


    _swix (MessageTrans_Lookup, _INR (0, 2) | _OUT (2), &g_messages, tag, 0, &message);
    return (message);
}
