/* -*-C-*-
 *
 * $Header$
 * $Source$
 *
 * Copyright(c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * $Log$
 * Revision 1.2  95/01/09  13:44:28  kwelton
 * The header file _swis.h no longer exists, it has been adsorbed into the
 * (new) system version of swis.h.
 *
 * Revision 1.1  95/01/04  09:57:03  kwelton
 * Initial revision
 *
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "kernel.h"
#include "swis.h"

#define NORALLOCDEFINES
#include "ralloc.h"
#include "globals.h"

int do_not_mix_debugging_ralloc = 0;

#define size(b)		(((int *)b)[-1] - 4)	/* Gives size of block */

void *rmalloc(size_t size)
{
    void *p;
    _kernel_oserror *err;

    err = _swix(OS_Module, _IN(0) | _IN(3) | _OUT(2), 6, size, &p);
    if (err)
	return NULL;
    return p;
}

void rfree(void *p)
{
     _swix(OS_Module, _IN(0) | _IN(2), 7, p);
}

void *rrealloc(void *p, size_t size)
{
    _kernel_oserror *err;
    if (!p)
	return rmalloc(size);
    err = _swix(OS_Module, _IN(0) | _IN(2) | _IN(3) | _OUT(2),
		13, p, size - size(p), &p);
    if (err)
	return NULL;
    return p;
}

void *rcalloc(size_t n, size_t m)
{
    void *p = rmalloc(n * m);
    if (p)
	memset(p, 0, (size_t) (n * m));
    return p;
}

char *rstrdup(const char *s)
{
    char *p;
    int l = strlen(s);
    p = rmalloc(l + 1);
    if (p)
	strcpy(p, s);
    return p;
}

/* EOF ralloc.c */
