#if !defined(__errortable_h)              /* Sentry, use file only if it's not already included. */
#define __errortable_h
/*	Project Post (769) - AcornSMTP
	Acorn Risc Technologies
	Copyright © 1997. All Rights Reserved.

	FILE:		errortable.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.07 for RISC OS

	OVERVIEW
	========
	Header file defining errortable structure

	HISTORY
	=======
	19/02/97	0.01	RDW	initial version
	08/07/97	0.02	RDW	Error 21: Failed to open file added
	11/07/97	0.03	RDW	Now exports the global var. which has been moved to a
					source file errortable.c
	08/10/97	0.04	RDW	new type ERRORS added
	17/11/97	0.05	RDW	now uses ERROR_STRUCT macros to save memory
	13/01/98	0.06	RDW	RESOLVERFAILED added
	14/01/98	0.07	RDW	NOSENDER and NORECIPIENT errors added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files                                                       */
/*                                                                            */
/* ************************************************************************** */
#include "allocation.h"


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */
typedef enum
{
  FAILED          = ErrorBase_AcornSMTP,
  INVALIDID,
  NOMOREPROCESSES,
  ALREADYDOINGOP,
  INTERNETERR,
  NOTSUPPORTED,
  FAILEDTOSEND,
  QUEUED,
  FAILEDTOQUEUE,
  CONTIMEDOUT,
  CONRESPTIMEDOUT,
  CONFAILED,
  CONREFUSED,
  NULLADDR,
  NOTUSED1,									/* 14 NOT USED */
  NOSENDER,
  NORECIPIENT,
  NOSPACE,
  NOSPACEFORHDRS,
  NOSPACEFORBODY,
  WRITEFAIL,
  MALLOCFAILED,
  INTERNALERR,
  CONBROKEN,
  RESOLVERFAILED
} ERRORS;


/* ************************************************************************** */
/*                                                                            */
/* Macros                                                                     */
/*                                                                            */
/* ************************************************************************** */
#define ERROR_STRUCT(name,text) \
        struct {ERRORS errnum; char errmess[sizeof(text)+1];} ERR_##name = {name,text}

#define ERROR_EXTERN(name) \
        extern struct {ERRORS errnum; char errmess[1];} ERR_##name
        
#define ERROR(e)  ((_kernel_oserror *)&(ERR_##e))


/* ************************************************************************** */
/*                                                                            */
/* Error Table                                                                */
/*                                                                            */
/* ************************************************************************** */
ERROR_EXTERN(FAILED);
ERROR_EXTERN(INVALIDID);
ERROR_EXTERN(NOMOREPROCESSES);
ERROR_EXTERN(ALREADYDOINGOP);
ERROR_EXTERN(INTERNETERR);
ERROR_EXTERN(NOTSUPPORTED);
ERROR_EXTERN(FAILEDTOSEND);
ERROR_EXTERN(QUEUED);
ERROR_EXTERN(FAILEDTOQUEUE);
ERROR_EXTERN(CONTIMEDOUT);
ERROR_EXTERN(CONRESPTIMEDOUT);
ERROR_EXTERN(CONFAILED);
ERROR_EXTERN(CONREFUSED);
ERROR_EXTERN(NULLADDR);
ERROR_EXTERN(NOTUSED1);
ERROR_EXTERN(NOSENDER);
ERROR_EXTERN(NORECIPIENT);
ERROR_EXTERN(NOSPACE);
ERROR_EXTERN(NOSPACEFORHDRS);
ERROR_EXTERN(NOSPACEFORBODY);
ERROR_EXTERN(WRITEFAIL);
ERROR_EXTERN(MALLOCFAILED);
ERROR_EXTERN(INTERNALERR);
ERROR_EXTERN(CONBROKEN);
ERROR_EXTERN(RESOLVERFAILED);


#endif  /* end of sentry #ifdef */
