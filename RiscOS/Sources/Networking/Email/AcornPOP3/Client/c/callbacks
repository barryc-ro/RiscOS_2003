/*	Project Post (769) - AcornPOP3
	Acorn Risc Technologies
	Copyright © 1996. All Rights Reserved.

	FILE:		callbacks.c
	AUTHOR:		Richard D. Warren
	VERSION:	0.02 for RISC OS

	OVERVIEW
	========
	Source file for implementation of callback functions.

	HISTORY
	=======
	10/10/97	0.01	RDW	Initial version
	17/12/97	0.02	RDW	#include for callx changed to get it from library
*/


/* ************************************************************************** */
/*                                                                            */
/* Include entity files - System                                              */
/*                                                                            */
/* ************************************************************************** */
#include <stdlib.h>
#include "swis.h"


/* ************************************************************************** */
/*                                                                            */
/* Include header files - External Libraries                                  */
/*                                                                            */
/* ************************************************************************** */
#include "callx/callx.h"
#include "debuglib.h"


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "errortable.h"
#include "callbacks.h"


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Constants                                                                  */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes - Private to this file                                 */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Functions                                                                  */
/*                                                                            */
/* ************************************************************************** */

extern _kernel_oserror *CA_handler(_kernel_swi_regs *r, void *pw, void *data)
{
  _kernel_oserror *error = 0;

  if (data)
  {
    CB_DATA          *cb_data = (CB_DATA*)data;
    error = callx_add_callback(cb_data->func, cb_data);
  }
  else
    error = ERROR(INTERNALERR);
    
  return error;
}


/* ************************************************************************** */
/*
   FUNCTION:       set_callback
   DESCRIPTION:    Function to set a callback and attach various data items
   		   to that callback.
   DEPENDENCIES:      			errortable		errortable.h
   		   type			CB_DATA_TYPE		callbacks.h
   		   type			CB_CALLER		callbacks.h
   		   type			CONNECTION_EVENT	callbacks.h
   		   type			callx_handler_fn	callx.h
   		   function		malloc			stdlib.h
   		   function		callx_add_callback	callx.h
   DEPENDED ON BY: function		get_line_FSM		get.c
   INPUT PARAMS:   CB_DATA_TYPE		type			type of data in data parmeter
   		   CB_CALLER		caller			caller that is setting this callback
   		   CONNECTION_EVENT	event			event to pass into called back function func
   		   callx_handler_fn	func			function to callback
   		   void*		data			data to pass within data structure to func
   OUTPUT PARAMS:  NONE
   RETURN VALUE:   			NULL		if successful
   CONSTANTS:      NONE
   VARIABLES:      _kernel_oserror*	error		result to return
   		   CB_DATA*		cb_data		data structure to attach to callback
 */
/* ************************************************************************** */
extern _kernel_oserror* set_callback(callx_handler_fn func, void *data)
{
  dprintf(("", "ENTERED: set_callback\n"));

  return callx_add_callback(func, data);
}


extern _kernel_oserror* register_timeout(int timeout, callx_handler_fn func)
{
  return 0;
}


extern _kernel_oserror *clear_timeout(callx_handler_fn func)
{
  return 0;
}


extern _kernel_oserror *remove_all_callbacks(callx_handler_fn func, void *data)
{
  /* function to remove all callafters/callbacks that are set to call function "func" with data "data" */
  /* at present I hack this by removing all callafters and callbacks in TOTAL, cos of the way POP3
     works, I'll get a way with this as only one thing is going on at a time! */
  _kernel_oserror *error = 0;

  error = callx_remove_all_callafters();
  error = callx_remove_all_callbacks();
  
  return error;
}
     
  
