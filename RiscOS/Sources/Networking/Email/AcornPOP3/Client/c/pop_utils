/*	Project Post (769) - AcornPOP3
	Acorn Risc Technologies
	Copyright © 1996. All Rights Reserved.

	FILE:		pop_utils.c
	AUTHOR:		Richard D. Warren
	VERSION:	0.09 for RISC OS

	OVERVIEW
	========
	Source file for implementation pop related utility functions

	HISTORY
	=======
	20/02/97	0.01	RDW	Initial version
	11/07/97	0.02	RDW	Tidy up when moving to correct build environment
	15/07/97	0.03	RDW	Tidy up
	08/10/97	0.04	RDW	commented out get_line_from_server
	14/10/97	0.05	RDW	destroy_response function added
	04/11/97	0.06	RDW	notify_client function added and WimpMessage and AcornPOP3_WimpMessage added
	18/11/97	0.07	RDW	WimpMessage Message_AcornPOP3_PollWordSet now set to the constant AcornPOP3_SWIChunkBase+0
					This is much better and cleaner
	07/04/98	0.08	RDW	#include "TML_Podule.h" removed
	03/06/98	0.09	RDW	pop3_irqs_off and pop3_restore_irqs added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include "inetlib.h"
#include "socklib.h"


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "common.h"
#include "pop_utils.h"
#include "errortable.h"


/* ************************************************************************** */
/*                                                                            */
/* Constants                                                                  */
/*                                                                            */
/* ************************************************************************** */
#define Message_AcornPOP3_PollWordSet AcornPOP3_SWIChunkBase			// WimpMessage number


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */
typedef struct
{
  AcornPOP3_returned_data *data;
} AcornPOP3_WimpMessage;

typedef struct
{
  struct
  {
    int size;
    int sender;
    int my_ref;
    int your_ref;
    int action_code;
  } hdr;
  union
  {
    int  words[59];
    char bytes[236];
    AcornPOP3_WimpMessage pop3_data;
  } data;
} WimpMessage;


/* ************************************************************************** */
/*                                                                            */
/* External globals                                                           */
/*                                                                            */
/* ************************************************************************** */
extern errno;									// From Internet
extern process_details process1;						// This client's process detail					


/* ************************************************************************** */
/*
   FUNCTION:       positive_response
   DESCRIPTION:    Function to take a server response string and return TRUE
   		   if it is a positive response from the server, else return
   		   FALSE.
   DEPENDENCIES:   function		strncmp			string.h
   DEPENDED ON BY: function		delete_message		deletemsg.c
   		   function		get_list_of_messages	getlistmsg.c
   		   function		get_list_of_uids	getlistuid.c
   		   function		get_message_to_file	getmsgfile.c
   		   function		get_message_to_memory	getmsgmem.c
   		   function		get_number_of_messages	getnummsgs.c
   		   function		logon_USER_PASS		logon.c
   		   function		logout			logout.c
   INPUT PARAMS:   char[]		string			server string response to check
   OUTPUT PARAMS:  NONE
   RETURN VALUE:   BOOL			TRUE			if +ve server response, else
   					FALSE			-ve server response
   CONSTANTS:      NONE
   VARIABLES:      BOOL			result			result to return
 */
/* ************************************************************************** */
extern BOOL positive_response(char string[])
{
  BOOL result = FALSE;
  
  if (string != 0)
  {
    if (strncmp("+OK", string, 3) == 0)
      result = TRUE;
  }

  return result;
}


extern void destroy_response(char **response)
{
  if (response)
  {
    if (*response)
      free(*response);
    *response = 0;
  }
}


_kernel_oserror* notify_client(void *data)
{
  _kernel_oserror *error = 0;
  
  if (process1.flags & REGISTER_WIMPMSG)
  {
    WimpMessage msg;
    _kernel_swi_regs r;
    
    memset(&msg, 0, sizeof(msg));
    msg.hdr.size             = sizeof(WimpMessage)-(sizeof(msg.data.words)-sizeof(msg.data.pop3_data));
    msg.hdr.action_code      = Message_AcornPOP3_PollWordSet;
    msg.data.pop3_data.data  = data;
    
    r.r[0] = 0;
    r.r[1] = (int)&msg;
    r.r[2] = (int)process1.taskhandle;
    r.r[3] = 0;
    r.r[4] = 0;
    
    error = _kernel_swi(TaskModule_SendMessage, &r, &r);
  }
  
  process1.pollword = data;
  
  return error;
}


/* function to make sure irqs are turned off and stores away previous state first */
int pop_irqs_off(void)
{
  int disabled = _kernel_irqs_disabled();
  _kernel_irqs_off();
  return disabled;
}


/* function to restore irqs */
void pop_restore_irqs(int disabled)
{
  if (disabled)
    _kernel_irqs_off();
  else
    _kernel_irqs_on();
}
