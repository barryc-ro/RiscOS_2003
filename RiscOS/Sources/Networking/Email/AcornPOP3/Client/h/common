#if !defined(__common_h)              /* Sentry, use file only if it's not already included. */
#define __common_h
/*	Project Post (769) - AcornPOP3
	Acorn Risc Technologies
	Copyright © 1997. All Rights Reserved.

	FILE:		common.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.07 for RISC OS

	OVERVIEW
	========
	Header file of common and global variables, types and constants

	HISTORY
	=======
	19/02/96	0.01	RDW	initial version
	03/07/97	0.03	RDW	Changing SWI interface and data structs inline with
					Project	Post API standard IDnum is now the address in
					memory that the	returned data structure will be at.
					IDnum in returned structure is now a flags word.
	11/07/97	0.04	RDW	Tidy up when moving to correct build environment
	11/07/97	0.05	RDW	GetUniqueID and GetListOfUniqueIDs SWIs support added
	10/10/97	0.06	RDW	CHARS type added and PROCESS_STATES type added
					state added to process_details structure
	13/10/97	0.07	RDW	added get_context and send_context to process_details structure
	
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
#include "kernel.h"


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */
#ifndef BOOL_DEFINED
#define BOOL_DEFINED
typedef enum { FALSE, TRUE } BOOL;
#endif

typedef enum
{
  LF = 10,
  CR = 13
} CHARS;

typedef enum
{
  TIMEOUT_idle,
  TIMEOUT_default,
  TIMEOUT_connect,
  TIMEOUT_RETRblock,
  TIMEOUT_QUIT,
  TIMEOUT_STAT,
  TIMEOUT_LIST,
  TIMEOUT_RETR,
  TIMEOUT_DELE,
  TIMEOUT_NOOP,
  TIMEOUT_RSET,
  TIMEOUT_TOP,
  TIMEOUT_USER,
  TIMEOUT_PASS,
  TIMEOUT_APOP,
  TIMEOUT_UIDL
} timeout_name;


/* ************************************************************************** */
/*                                                                            */
/* Typedefs - returned data structures                                        */
/*                                                                            */
/* ************************************************************************** */
typedef struct
{
  unsigned int		 flags;
  _kernel_oserror	*error;
  int			 errno;
} AcornPOP3_returned_data;
typedef AcornPOP3_returned_data AcornPOP3_Logon_data;
typedef AcornPOP3_returned_data AcornPOP3_Disconnect_data;
typedef AcornPOP3_returned_data AcornPOP3_DeleteMessage_data;

typedef struct
{
  unsigned int	         flags;
  _kernel_oserror	*error;
  int			 errno;
  unsigned int	         mailbox_size;
  unsigned int	         num_messages;
} AcornPOP3_GetNumOfMessages_data;

typedef struct
{
  unsigned int		 flags;
  _kernel_oserror	*error;
  int			 errno;
  unsigned int		 num_entries;
} AcornPOP3_GetListOfMessages_data;

typedef struct
{
  unsigned int		 flags;
  _kernel_oserror	*error;
  int			 errno;
  unsigned int		 message_size;
} AcornPOP3_GetMessage_data;

typedef struct
{
  unsigned int		 flags;
  _kernel_oserror	*error;
  int			 errno;
  unsigned int		 message_size;
  unsigned int		 num_lines;
} AcornPOP3_GetXLinesOfMessage_data;

typedef struct
{
  unsigned int	         flags;
  _kernel_oserror	*error;
  int			 errno;
  unsigned int	         id;
  char	         	 unique_id[80];
} AcornPOP3_GetUniqueID_data;

typedef struct
{
  unsigned int		 flags;
  _kernel_oserror	*error;
  int			 errno;
  unsigned int		 num_entries;
} AcornPOP3_GetListOfUniqueIDs_data;


/* ************************************************************************** */
/*                                                                            */
/* Constants                                                                  */
/*                                                                            */
/* ************************************************************************** */
#define REGISTER_UNUSED_MASK 0xfffffffd						/* only bit 1 is used at present   */
#define REGISTER_WIMPMSG     0x00000002						/* bit 1 set is send wimp messages */

#define TaskModule_SendMessage 0x0004d300

#define EventV              16
#define Internet_Event      19
#define Event_Enable        14
#define Event_Disable       13
#define Socket_Async_Event  1
#define Socket_Broken_Event 3

#define READBUFLEN          255


/* ************************************************************************** */
/*                                                                            */
/* New types                                                                  */
/*                                                                            */
/* ************************************************************************** */
/*typedef struct
{
  unsigned int		 IDnum;
  _kernel_oserror	*error;
  int			 errno;
  unsigned int		 mailbox_size;
  unsigned int		 num_messages;
  unsigned int		 num_entries;
  unsigned int		 message_size;
  unsigned int		 num_lines;
} return_data;
*/

typedef enum
{
  PROCESSING,
  GET,
  SEND,
  CONNECTING
} PROCESS_STATES;

typedef void* SEND_CONTEXT;
typedef void* GET_CONTEXT;
typedef void* LOGON_CONTEXT;

typedef struct
{
  unsigned int flags;
  int    taskhandle;
  void  *pollword;								// pollword to give client
  int	 socknum;								// socket fd
  char  *read_buf_pos;								// pos in read_buffer
  int    read_buf_size;
  int    read_buf_len;
  char   read_buffer[READBUFLEN];						// read buffer
  AcornPOP3_Logon_data			logon;
  AcornPOP3_Disconnect_data		disconnect;
  AcornPOP3_DeleteMessage_data		deletemessage;
  AcornPOP3_GetNumOfMessages_data	getnumofmessages;
  AcornPOP3_GetListOfMessages_data	getlistofmessages;
  AcornPOP3_GetMessage_data		getmessage;
  AcornPOP3_GetXLinesOfMessage_data	getxlinesofmessage;
  AcornPOP3_GetUniqueID_data		getuniqueid;
  AcornPOP3_GetListOfUniqueIDs_data	getlistofuids;
  PROCESS_STATES                        state;
  SEND_CONTEXT				send_context;
  GET_CONTEXT				get_context;
  LOGON_CONTEXT				logon_context;
} process_details;

typedef struct
{
  unsigned int msg_id;
  unsigned int msg_size;
} MSG_LIST;

typedef struct
{
  unsigned int msg_id;
  char         unique_id[80];
} UID_MSG_LIST;


/* ************************************************************************** */
/*                                                                            */
/* Macros                                                                     */
/*                                                                            */
/* ************************************************************************** */
#define UNUSED(x)  (x=x)


#endif  /* end of sentry #ifdef */
