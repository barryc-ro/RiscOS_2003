#if !defined(__acornpop3_h)              /* Sentry, use file only if it's not already included. */
#define __acornpop3_h
/*	Project Post (769) - AcornPOP3
	Acorn Risc Technologies
	Copyright © 1997. All Rights Reserved.

	FILE:		acornpop3.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.07 for RISC OS

	OVERVIEW
	========
	Header file defining various RiscOS system allocated values for module AcornPOP3
	For use by clients of AcornPOP3 relocatable module

	HISTORY
	=======
	24/02/97	0.01	RDW	initial version
	25/02/97	0.02	RDW	C function prototypes for SWI wrappers added
	03/07/97	0.03	RDW	Changing SWI interface and data structs inline with Project Post API standard
					IDnum is now the address in memory that the returned data structure will be at.
					IDnum in returned structure is now a flags word.
	11/07/97	0.04	RDW	GetUniqueID and GetListOfUniqueIDs SWIs added
	14/07/97	0.05	RDW	Tidy up
	29/01/98	0.06	RDW	BOOL_DEFINED semaphore round BOOL def.
	19/05/98	0.07	RDW	AcornPOP3_UIDL_SIZE added
					_AcornPOP3_GetMessage BOOL delete parameter changed to
					delete_message
					Check for BOOL already defined added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
#include "kernel.h"


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */
#ifndef BOOL_DEFINED
#define BOOL_DEFINED
#ifndef BOOL									// Check for toolbox BOOL defined
typedef enum
{
  FALSE,
  TRUE
} BOOL;
#endif										// BOOL type
#endif


/* ************************************************************************** */
/*                                                                            */
/* Constants                                                                  */
/*                                                                            */
/* ************************************************************************** */
#define ErrorBase_AcornPOP3		0x00810f00
#define AcornPOP3_SWIChunkBase		0x4e540

#define AcornPOP3_Register		0x4e540
#define AcornPOP3_DeRegister		0x4e541
#define AcornPOP3_ReleaseData		0x4e542
#define AcornPOP3_Logon			0x4e543
#define AcornPOP3_Disconnect		0x4e544
#define AcornPOP3_AbortConnection	0x4e545
#define AcornPOP3_Reset			0x4e546
#define AcornPOP3_Echo			0x4e547
#define AcornPOP3_GetNumOfMessages	0x4e548
#define AcornPOP3_GetListOfMessages	0x4e549
#define AcornPOP3_GetMessage		0x4e54a
#define AcornPOP3_GetXLinesOfMessage	0x4e54b
#define AcornPOP3_DeleteMessage		0x4e54c
#define AcornPOP3_GetUniqueID		0x4e54d
#define AcornPOP3_GetListOfUniqueIDs	0x4e54e

#define AcornPOP3_UIDL_SIZE		80


/* ************************************************************************** */
/*                                                                            */
/* Typedefs                                                                   */
/*                                                                            */
/* ************************************************************************** */
typedef struct
{
  unsigned int msg_id;
  unsigned int msg_size;
} MSG_LIST;

typedef struct
{
  unsigned int msg_id;
  char         unique_id[AcornPOP3_UIDL_SIZE];
} UID_MSG_LIST;


/* ************************************************************************** */
/*                                                                            */
/* Typedefs - returned data structures                                        */
/*                                                                            */
/* ************************************************************************** */
typedef struct
{
  unsigned int	   flags;
  _kernel_oserror *error;
  int              errno;
} AcornPOP3_returned_data;
typedef AcornPOP3_returned_data AcornPOP3_Logon_data;
typedef AcornPOP3_returned_data AcornPOP3_Disconnect_data;
typedef AcornPOP3_returned_data AcornPOP3_DeleteMessage_data;

typedef struct
{
  unsigned int	   flags;
  _kernel_oserror *error;
  int              errno;
  unsigned int     mailbox_size;
  unsigned int     num_messages;
} AcornPOP3_GetNumOfMessages_data;

typedef struct
{
  unsigned int	   flags;
  _kernel_oserror *error;
  int              errno;
  unsigned int     num_entries;
} AcornPOP3_GetListOfMessages_data;

typedef struct
{
  unsigned int     flags;
  _kernel_oserror *error;
  int              errno;
  unsigned int     message_size;
} AcornPOP3_GetMessage_data;

typedef struct
{
  unsigned int	   flags;
  _kernel_oserror *error;
  int              errno;
  unsigned int     message_size;
  unsigned int	   num_lines;
} AcornPOP3_GetXLinesOfMessage_data;

typedef struct
{
  unsigned int	   flags;
  _kernel_oserror *error;
  int              errno;
  unsigned int	   id;
  char	           unique_id[80];
} AcornPOP3_GetUniqueID_data;

typedef struct
{
  unsigned int	   flags;
  _kernel_oserror *error;
  int              errno;
  unsigned int     num_entries;
} AcornPOP3_GetListOfUniqueIDs_data;


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes                                                        */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_Register
   DESCRIPTION:    Allows a client/caller to register with the AcornPOP3 module
   		   This is a C function wrapper to call the AcornPOP3_Register
   		   SWI.  On return from this function either a unique id
   		   number will be returned or an error if no more clients can
   		   register with the AcornPOP3 module.  The Unique ID is an
   		   address of a pollword.  Once the pollword is set to non-zero by
   		   AcornPOP3 it will point to the address of a structure
   		   holding returned data.  
   DEPENDENCIES:   NONE
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		pollword_addr	address of pollword
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_Register(unsigned int  *flags,
                                     void         **pollword_addr);

/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_DeRegister
   DESCRIPTION:    Allows a client/caller to deregister from the AcornPOP3 module
   		   This is a C function wrapper to call the AcornPOP3_DeRegister
   		   SWI.  If successful, no error is returned and the pollword
   		   address is set to 0, otherwise an error is returned.
   DEPENDENCIES:   AcornPOP3_Register called successfully once.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		pollword_addr	address of pollword
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_DeRegister(unsigned int  *flags,
				       void         **pollword_addr);
				       
/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_ReleaseData
   DESCRIPTION:    Function to be called once the client is finished with a
   		   block of data that AcornPOP3 has returned to it.  The data
   		   will have been returned by an operation started by one of
   		   the POP3 SWIs.
   DEPENDENCIES:   AcornPOP3_Register called successfully once and one of:
   			AcornPOP3_Logon
   			AcornPOP3_Disconnect
   			AcornPOP3_GetNumofMessages
   			AcornPOP3_GetListOfMessages
   			AcornPOP3_GetMessage
   			AcornPOP3_GetXLinesOfMessage
   			AcornPOP3_Deletemessage
   			AcornPOP3_GetUniqueID
   			AcornPOP3_GetListOfUniqueIDs
   		   has been called successfully and has returned data which is
   		   now finished with.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	pollword address
   		   int			swi_num		The SWI that the data was
   		   					returned by
   		   void*		data		address of the data that
   		   					is finished with
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_ReleaseData(unsigned int *flags,
                                        void         *pollword_addr,
                                        int           swi_num,
                                        void         *data);
					
/* ************************************************************************** */
/*
   FUNCTION:       handle_swi_AcornPOP3_Logon
   DESCRIPTION:    Function to attempt to connect to a POP3 server and login.  The
                   name of the host to connect to is given in the hostname
                   parameter, or if its NULL the system variable
                   Inet$POP3_Default_Servername is checked for
                   a default hostname.  The port parameter gives the port number on
                   the server to connect to, if < 0 then the system variable
                   Inet$POP3_Default_Port is checked
                   for a default port number.  If port number is requested from the
                   system var. and is not found (for whatever reason) default of
                   PORT is used.  username gives the username to use and can't be
                   NULL or a NULLstring.  password gives the password string to
                   use.  If NULL, then no PASS command is sent.  If NULLstring then
                   PASS command is send with a nullstring as the password.  The
                   timeouts are used if >= 0.  If they are -ve, then the system.var
                   settings are used.  For those vars. that are not set the built
                   in values are used.
                   If call is successful, then it returns NULL and a unique ID to
                   identify the returned data with.  Otherwise, a pointer to an
                   error block is returned
   DEPENDENCIES:   AcornPOP3_Register called successfully once.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	address of pollword
   		   char[]		username	username to use
   		   char[]		password	password to use
   		   char[]		hostname	hostname to use
   		   int			port		TCP port number to use
   		   int			timeout_USER	timeout for USER command
   		   int			timeout_PASS	timeout for PASS command
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		unique_id	unique ID for this operation
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_Logon(unsigned int  *flags,
                                  void          *pollword_addr,
                                  char           username[],
                                  char           password[],
                                  char           hostname[],
                                  int            port,
                                  int            timeout_USER,
                                  int            timeout_PASS,
                                  void         **unique_id);
				     
/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_Disconnect
   DESCRIPTION:    Function to disconnect from the POP server.  Uses POP QUIT
		   command and closes the socket.  If the call is successful,
		   then it returns NULL and a unique ID to identify the
		   returned data with.  Otherwise, a pointer to an error block
		   is returned.
   DEPENDENCIES:   AcornPOP3_Register called successfully once.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	address of pollword
   		   int			timeout_QUIT	timeout for QUIT command
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		unique_id	unique ID for this operation
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_Disconnect(unsigned int  *flags,
                                       void          *pollword_addr,
                                       int            timeout_QUIT,
                                       void         **unique_id);
				       
/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_GetNumOfMessages
   DESCRIPTION:    Function to get the number of messages for the current
		   connection.  Uses POP3 STAT command.
   DEPENDENCIES:   AcornPOP3_Register called successfully once and
   		   AcornPOP3_Logon call successfully once.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	address of pollword
   		   int			timeout_STAT	timeout for STAT command
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		unique_id	unique ID for this operation
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_GetNumOfMessages(unsigned int  *flags,
                                             void          *pollword_addr,
                                             int            timeout_STAT,
                                             void         **unique_id);
					     
/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_GetListOfMessages
   DESCRIPTION:    Function to get a list of the messages in a users mailbox on the
		   POP server.  The list is a list of message ids with sizes for
		   each message in bytes.  The size is only a guide as the size on
		   the server may be different due differences in the EOL
		   characters, etc.   GetNumOfMessages should be used first to
		   create MSG_LIST array of correct size which should be passed in,
		   as should the number of elements in the array.  If, during the
		   time of calling GetNumOfMessages and doing this operation
		   more messages have arrived in the mailbox (or even if some have
		   strangely vanished from the mailbox) number will be set on exit
		   to the actual number of messages.
   DEPENDENCIES:   AcornPOP3_Register called successfully once and
   		   AcornPOP3_Logon called successfully once and
   		   AcornPOP3_GetNumOfMessages called successfully.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	address of pollword
   		   MSG_LIST*		list		array of MSG_LIST structs to fill in
   		   unsigned int		num_entries	number of elements in the list array
   		   int			timeout_LIST	timeout for LIST command
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		unique_id	unique ID for this operation
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_GetListOfMessages(unsigned int  *flags,
                                              void          *pollword_addr,
                                              MSG_LIST      *list,
                                              unsigned int   num_entries,
                                              int            timeout_LIST,
                                              void         **unique_id);
					     
/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_GetMessage
   DESCRIPTION:    Function to get a given message from the server into file or
   		   into memory.  If size of message memory block or file free
   		   space on input is too small, then the message block will be
   		   filled up with as much of the message as possible and
   		   size set in the returned data structure through the pollword
   		   mechnanism to the actual size required.  Uses POP RETR command.
		   Set bit0 of flags for FILE, else unset for MEMORY
   DEPENDENCIES:   AcornPOP3_Register called successfully once and
   		   AcornPOP3_Logon call successfully once.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	address of pollword
   		   char*		msg_data	filename or memory address
   		   					to store message data in.
   		   unsigned int		msg_size	size of memory space or
   		   					filespace
   		   unsigned int		msg_id		ID of message to get
   		   BOOL			delete_message  Delete message flag TRUE = yes
   		   int			timeout_RETR	timeout for RETR command
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		unique_id	unique ID for this operation
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_GetMessage(unsigned int  *flags,
                                       void          *pollword_addr,
                                       char          *msg_data,
                                       unsigned int   msg_size,
                                       unsigned int   msg_id,
                                       BOOL           delete_message,
                                       int            timeout_RETR,
                                       void         **unique_id);
				       
/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_GetXLinesOfMessage
   DESCRIPTION:    Function to get the headers and X lines of a given message's
   		   body from the server into file or into memory.  If size of
   		   message memory block or file free space on input is too small,
   		   then the message block will be filled up with as much of the
   		   message as possible and size set in the returned data structure
   		   through the pollword mechnanism to the actual size required.
   		   Uses POP TOP command. Set bit0 of flags for FILE, else unset
   		   for MEMORY.
   DEPENDENCIES:   AcornPOP3_Register called successfully once and
   		   AcornPOP3_Logon call successfully once.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	address of pollword
   		   char*		msg_data	filename or memory address
   		   					to store message data in.
   		   unsigned int		msg_size	size of memory space or
   		   					filespace
   		   unsigned int		msg_id		ID of message to get
   		   unsigned int		lines		No. of lines of msg body to get
   		   int			timeout_TOP	timeout for TOP command
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		unique_id	unique ID for this operation
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_GetXLinesOfMessage(unsigned int  *flags,
                                               void          *pollword_addr,
                                               char          *msg_data,
                                               unsigned int   msg_size,
                                               unsigned int   msg_id,
                                               unsigned int   lines,
                                               int            timeout_TOP,
                                               void         **unique_id);
				               
/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_DeleteMessage
   DESCRIPTION:    Function mark the given message in the mailbox for deletion
   		   from the mailbox on the server.  Uses POP DELE command.
   DEPENDENCIES:   AcornPOP3_Register called successfully once and
   		   AcornPOP3_Logon call successfully once.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	address of pollword
   		   unsigned int		msg_id		ID of message to delete
   		   int			timeout_DELE	timeout for DELE command
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		unique_id	unique ID for this operation
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_DeleteMessage(unsigned int  *flags,
                                          void          *pollword_addr,
                                          unsigned int   msg_id,
                                          int            timeout_DELE,
                                          void         **unique_id);
					  
/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_GetUniqueID
   DESCRIPTION:    Function to get the unique ID string for a given message.
   		   Uses POP3 UIDL command.
   DEPENDENCIES:   AcornPOP3_Register called successfully once and
   		   AcornPOP3_Logon call successfully once.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	address of pollword
   		   unsigned int		msg_id		ID of message to get UID for
   		   int			timeout_UIDL	timeout for UIDL command
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		unique_id	unique ID for this operation
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_GetUniqueID(unsigned int  *flags,
                                        void          *pollword_addr,
                                        unsigned int   msg_id,
                                        int            timeout_UIDL,
                                        void         **unique_id);

/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_GetListOfUniqueIDs
   DESCRIPTION:    Function to get a list of the unique IDs for the messages in
   		   a users mailbox on the POP server.  The list is a list of
   		   message ids with unique IDs for each message.  GetNumOfMessages
   		   should be used first to create a UID_MSG_LIST array of correct
   		   size which should be passed in, as should the number of
   		   elements in the array.  If, during the time of calling
   		   GetNumOfMessages and doing this operation more messages have
   		   arrived in the mailbox (or even if some have strangely
   		   vanished from the mailbox) number will be set on exit
		   to the actual number of messages.
   DEPENDENCIES:   AcornPOP3_Register called successfully once and
   		   AcornPOP3_Logon called successfully once and
   		   AcornPOP3_GetNumOfMessages called successfully.
   DEPENDED ON BY: NONE
   INPUT PARAMS:   unsigned int*	flags		flags word
   		   void*		pollword_addr	address of pollword
   		   MSG_LIST*		list		array of MSG_LIST structs to fill in
   		   unsigned int		num_entries	number of elements in the list array
   		   int			timeout_LIST	timeout for LIST command
   OUTPUT PARAMS:  unsigned int*	flags		flags word
   		   void**		unique_id	unique ID for this operation
   RETURN VALUE:   _kernel_oserror*	NULL		if SWI handled successfully,
   							else ptr to error block
 */
/* ************************************************************************** */
_kernel_oserror *_AcornPOP3_GetListOfUniqueIDs(unsigned int  *flags,
                                               void          *pollword_addr,
                                               UID_MSG_LIST  *list,
                                               unsigned int   num_entries,
                                               int            timeout_UIDL,
                                               void         **unique_id);
					     
/* ************************************************************************** */
/*
   FUNCTION:       _AcornPOP3_GetReturnedData
   DESCRIPTION:    Function to get typecast the pollword contents to the
   		   Acorn_returned_data type.  SHOULD NOT BE CALLED DIRECTLY!
   		   Instead, call one of the Macros below for the correct type
   		   of data.
   DEPENDENCIES:   Call has returned data in the pollword
   DEPENDED ON BY: NONE
   INPUT PARAMS:   void*		pollword_addr	address of pollword
   OUTPUT PARAMS:  NONE
   RETURN VALUE:   AcornPOP3_returned_data*		0 or address of data
 */
/* ************************************************************************** */
AcornPOP3_returned_data *_AcornPOP3_GetReturnedData(void *pollword_addr);


/* ************************************************************************** */
/*                                                                            */
/* Macros - done for functions which are too small an operation to            */
/*          justify the overhead of a function call.                          */
/*                                                                            */
/* ************************************************************************** */
#define _AcornPOP3_LogonData(p)			(AcornPOP3_Logon_data*)_AcornPOP3_GetReturnedData(p)
#define _AcornPOP3_DisconnectData(p)		(AcornPOP3_Disconnect_data*)_AcornPOP3_GetReturnedData(p)
#define _AcornPOP3_DeleteMessageData(p)		(AcornPOP3_DeleteMessage_data*)_AcornPOP3_GetReturnedData(p)
#define _AcornPOP3_GetNumOfMessagesData(p)	(AcornPOP3_GetNumOfMessages_data*)_AcornPOP3_GetReturnedData(p)
#define _AcornPOP3_GetListOfMessagesData(p)	(AcornPOP3_GetListOfMessages_data*)_AcornPOP3_GetReturnedData(p)
#define _AcornPOP3_GetMessageData(p)		(AcornPOP3_GetMessage_data*)_AcornPOP3_GetReturnedData(p)
#define _AcornPOP3_GetXLinesOfMessageData(p)	(AcornPOP3_GetXLinesOfMessage_data*)_AcornPOP3_GetReturnedData(p)
#define _AcornPOP3_GetUniqueIDData(p)		(AcornPOP3_GetUniqueID_data*)_AcornPOP3_GetReturnedData(p)
#define _AcornPOP3_GetListOfUniqueIDsData(p)	(AcornPOP3_GetListOfUniqueIDs_data*)_AcornPOP3_GetReturnedData(p)


#endif  /* end of sentry #ifdef */
