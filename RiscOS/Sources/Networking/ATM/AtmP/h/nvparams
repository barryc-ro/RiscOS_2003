//
#ifndef AtmP_nvparams_h
#define AtmP_nvparams_h

/* File:    nvparams.h
   Purpose: Interface to non-volatile configuration parameter management
   Author:  Ben Laughton

   Copyright 1999 Pace Micro Techology plc.

   This material is the confidential trade secret and proprietary
   information of Pace Micro Techology plc.  It may not be reproduced,
   used sold, or transferred to any third party without the prior
   written consent of Pace Micro Techology plc. All rights reserved.

   History:

   1999-02-18: BAL
   Created.
 */




// =============================================================================
// Function prototype declarations

class NVParams
{
    // Public methods
    public:
        NVParams (const int  podule);

        int   ReadPVC () const;
        void  WritePVC (const int  pvc);

        void  ReadPrimaryServer (unsigned char *  atm_addr) const;
        void  WritePrimaryServer (const unsigned char *  atm_addr);

        int   ReadDynamicARP () const;
        void  WriteDynamicARP (const int  dynamic_arp);

        int   ReadMultiProtoEnc () const;
        void  WriteMultiProtoEnc (const int  multiproto_enc);

        unsigned int  ReadUpstreamBandwidth () const;
        void          WriteUpstreamBandwidth (unsigned int  upstream_bandwidth);

        unsigned int  ReadGateway () const;
        unsigned int  ReadServer () const;
        unsigned int  ReadNetmask () const;

    // Private data
    private:
        unsigned int  podule_cmos;
};

#endif
