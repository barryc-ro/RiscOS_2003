//
#ifndef AtmP_dci_h
#define AtmP_dci_h

/* File:    dci.h
   Purpose: Interface to DCI4 related routines
   Author:  Ben Laughton

   Copyright 1999 Element 14 Ltd.

   This material is the confidential trade secret and proprietary information
   of Element 14 Ltd. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Element 14 Ltd.
   All rights reserved.

   History:

   1990-02-18: BAL
   Inherited.
 */





/* =============================================================================
 * Include header files
 */

// CLib
#include "kernel.h"

// Misc
#include "Email/Common/bool.h"

// TCPIPLibs
extern "C"
{
    #include "sys/types.h"
    #include "sys/dcistructs.h"
    #include "sys/mbuf.h"
}

// Local
//#include "ip.h"




/* =============================================================================
 * Constants definitions
 */

enum
{
    ATM_MTU = 1536,
    // Used to be 9180, but altered because suspected bug in Virata firmware
    // means it can't cope with some large packet sizes.

    ATM_MRU = 9180
};




// =============================================================================
// Class declarations

class IPConnection;




/* =============================================================================
 * Global variable declarations
 */

extern char *  atm_ifname;




/* =============================================================================
 * Function prototype declarations
 */

extern void  dci_init (void);

extern bool  dci_is_our_dib (const Dib *const  test_dib);

extern void  dci_driver_status (const int  status);

extern void  dci_chain_dib (_kernel_swi_regs *const  r);

extern _kernel_oserror *  dci_enumerate_pibs (int  argc, char *  argv[]);

extern int   dci_receive (IPConnection *  connection,
                          struct mbuf *   m,
                          unsigned short  frame_type);

extern int dci_version (_kernel_swi_regs *const  r);

extern int dci_inquire (_kernel_swi_regs *const r);

extern int dci_getmtu (_kernel_swi_regs *const  r);

extern int dci_setmtu (_kernel_swi_regs *const  r);

extern int dci_filter (_kernel_swi_regs *const  r);

extern int dci_transmit (_kernel_swi_regs *const  r);

extern int dci_stats (_kernel_swi_regs *const  r);

extern int dci_readmacadr (_kernel_swi_regs *const  r);

extern void  dci_flush_cache (const IPConnection *  connection);

extern void *  dci_want_frame_type (const int  type);

extern void  dci_send_chain (struct mbuf *    m,
                             void *  p);

#ifdef DEBUGLIB

extern void dump_buf (u_char *  rptr, int pktlen);

extern void dump_mbuf (struct mbuf *m0, int pktlen);

#define ddump_buf  dump_buf
#define ddump_mbuf dump_mbuf

#else

#define ddump_buf(p, l)
#define ddump_mbuf(p, l)

#endif

#endif
