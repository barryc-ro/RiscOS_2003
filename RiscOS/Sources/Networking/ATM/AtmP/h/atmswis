// header file for swis.c

/* Begin-Prologue */
#ifndef ATMSWIS_H
#define ATMSWIS_H
#undef DECLARE
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */

/* Define some standard error types.
   Some of these are UNIX like, but where greater than 128, errno is a RISCOS error number
   In the Lucy driver, all errors were #defined to 1 !! This is really really bad.

#define EINVAL        1
#define ENOPIB 	      1
#define ENOMEM	      1
*/
/* these are errors out of the DCI 4.03 spec */
#define EINVAL        22
#define ENXIO	      6
#define ENOTTY	      25
#define ENETDOWN      50
#define EMSGSIZE      40
#define ENOBUFS	      55
#define EPERM	      1
/* and so are these, but I made the names up */
#define ETXBLOCK     0x20e86
#define EFCLAIMED    0x20e87

struct dci4pi { /* store for DCI4 protocol module info */
    int pi_unit;
    int pi_ftype;  /* frame type */
    int pi_flevel; /* frame level */
    int pi_alevel; /* address level */
    int pi_elevel; /* error level */
    int pi_handle; /* protocol handle */
    void (*pi_handler)(void);
    struct dci4pi *pi_next;
};

DECLARE int atm_inquire(_kernel_swi_regs *);
DECLARE int atm_version(_kernel_swi_regs *);
DECLARE int atm_getmtu(_kernel_swi_regs *);
DECLARE int atm_setmtu(_kernel_swi_regs *);
DECLARE int atm_nullswi(_kernel_swi_regs *);
DECLARE int atm_transmit(_kernel_swi_regs *); /* send a packet, called by protocol stack */
DECLARE int atm_filter(_kernel_swi_regs *); /* claim or release Ethernet frame types */
DECLARE int atm_nullswi(_kernel_swi_regs *);
DECLARE int atm_empty_buf(_kernel_swi_regs *);
DECLARE int atm_endofplay(_kernel_swi_regs *);
DECLARE int atm_startofplay(_kernel_swi_regs *);
DECLARE int atm_readmacadr(_kernel_swi_regs *);
DECLARE int atm_setmacadr(_kernel_swi_regs *);
DECLARE int atm_setbufs(_kernel_swi_regs *);
DECLARE int atm_getstats(_kernel_swi_regs *);
DECLARE int atm_empty_buf(_kernel_swi_regs *);
DECLARE int atm_openconn(_kernel_swi_regs *);
DECLARE int atm_clearconn(_kernel_swi_regs *);
DECLARE void atm_startstream(void);
DECLARE int atm_txframe(_kernel_swi_regs *);

DECLARE struct dci4pi *pibs INIT(0);

/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */
