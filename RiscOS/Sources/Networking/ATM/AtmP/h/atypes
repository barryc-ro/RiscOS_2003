/***********************************************************************
 *                                                                     *
 *            ATYPES.H                                                 *
 *            ========                                                 *
 *                                                                     *
 *    ATMos Kernel basic types file                                    *
 *                                                                     *
 *    (c) Copyright 1995 Advanced Telecommunications Modules Ltd.      *
 *                                                                     *
 *    All kernel interfaces are prototyped using only these basic      *
 *    types supplemented by enums or types derived from these          *
 *                                                                     *
 ***********************************************************************/

#ifndef ATYPES_H
#define ATYPES_H

/***********************************************************************
 *                                                                     *
 *            Types                                                    *
 *            =====                                                    *
 *                                                                     *
 ***********************************************************************/

/*
 *  generic types
 */

typedef unsigned char    BYTE;
typedef long             WORD;
typedef unsigned long    BITS;
typedef int              BOOL;
typedef void            *PTR;

#if 0
#define FALSE 0
#define TRUE (!FALSE)

#ifndef NULL
#define NULL ((PTR)0)
#endif
#endif
/*
 * Types to allow explicitly defined sizes
 */

#ifndef PORTABLE_TYPES
    #define PORTABLE_TYPES

/*     typedef unsigned char U8; */
    typedef signed char S8;
/*     typedef unsigned short U16; */
    typedef signed short S16;
/*     typedef unsigned int U32; */
    typedef signed int S32;

#endif

#define MAXINT (0x7fffffff)
#define MAXPTR (void *)(0xffffffffU)

/*  Return codes from the active queue handlers  */

#define QHANDLER_HANDLED        TRUE
#define QHANDLER_NOT_HANDLED    FALSE

/*  The reply-code bit  */

#define MSG_REPLY_BIT 0x40000000

/*  because of various uncertainties in the C runtime about what
 *  should be defined where, these C runtime types are defined here
 */
#if 0
typedef int size_t;
typedef int fpos_t;
#endif
/*
 *  standard atmos types.  Note that these are not resolved
 *  outside the kernel/message system.
 */

#if 0
typedef struct atmos_pcb *ATMOS_MQID;
typedef struct atmos_pcb *ATMOS_PCBID;
typedef struct atmos_pcb *ATMOS_THREAD;


/*
 *  The ATMos message
 *  =================
 *
 *  This structure defines the parts of the message common to the
 *  message passing software (kernel and messagelib) and the user.
 *
 *  The format of the 'data' is defined by 'Message' definitions in
 *  modules.  This data should *always* be accessed using one of the
 *  MSG_D_XXXX macros to cast it to the correct form
 */

typedef struct message
{
    struct message *link;              /*  link to next message        */
    ATMOS_MQID     src;                /*  queue sending message       */
    ATMOS_MQID     dest;               /*  queue receiving message     */
    BITS           code;               /*  message code                */
    WORD           errno;              /*  error code                  */
    ATMOS_THREAD   src_thread;         /*  source thread               */
    ATMOS_THREAD   dest_thread;        /*  destination thread          */
    BITS           data[25];           /*  the data                    */
}ATMOS_MESSAGE;

/*
 *  prototype cast macro
 *
 *   e.g.  (MESSAGE_T_SEND *)x = mtod(message, MSG_T_SEND *);
 */

#define mtod(_m, _t) (_t)((_m)->data)
#endif

#endif

