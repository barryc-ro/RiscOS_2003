// header file for buffers.c

/* Begin-Prologue */
#ifndef BUFFERS_H
#define BUFFERS_H
#undef DECLARE
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(X) =(X)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */  /* WEIRD NUMBERS ADDED FOR CHRIS */

#define MPEG_PDU_SIZE    2256 /* was 376 */
#define BS_AAL0_SIZE     384 /* was 384 */
#define BS_BUFFER_SIZE   2276 /* was 396 */
#define N_BS_BUFFERS     140 /* was 850 */
#define N_WAIT_B 8

#define FREE_BUFFER_SWI 0x47b07
#define Send_FullBuffer 0x492c1


struct bs_buffer {                             /* Tim's version of events:                      */
    struct bs_buffer *bs_next;		       /* Link: ptr to next buffer                      */
    int     bs_handle;			       /* FreeRoutine: addr. of routine to free buffer  */
    int     bs_flags;			       /* FreeWkSpace: wdpace pointer for free routine  */
    char    *bs_offset;			       /* Start: start address of bitstream buffer data */
    int     bs_len;			       /* Length: length of bitstream buffer in bytes   */
    int     bs_packets;			       /* Packets: no. of unprocessed packets in buffer */
    char    bs_data[BS_BUFFER_SIZE];
};

/* If FreeRoutine is zero, then FreeWkSpace is an XSWI to call instead */

struct bswait {
    struct bs_buffer *w_bufs[N_WAIT_B];
    int w_supply;
    int w_consume;
    int w_inuse;
};

DECLARE struct bswait bsw;




DECLARE void atm_return_empty_buf(struct bs_buffer *);
DECLARE int init_bs_buffers(void);
DECLARE void reinit_bs_buffers(void);
DECLARE void free_bs_buffers(void);
DECLARE struct bs_buffer *get_empty_buffer(void);
DECLARE void save_full_buf(struct bs_buffer *, int);
DECLARE int bs_empty_q_cnt(void);
DECLARE void send_buffers(void);
DECLARE void bswait_init(void);
DECLARE int bswait_supply(struct bs_buffer *);
DECLARE struct bs_buffer *bswait_consume(void);
DECLARE void send_full_buf (struct bs_buffer *, int, int);


DECLARE struct bs_buffer *bs_fullp INIT(0);
DECLARE struct bs_buffer *bs_full_q INIT(0);
DECLARE struct bs_buffer *bs_empty_q INIT(0);
DECLARE struct bs_buffer *bs_emptyp INIT(0);
DECLARE int bs_sent INIT(0);
DECLARE int bs_received INIT(0);
DECLARE int wasempty INIT(0);
DECLARE int bufs_used INIT(0);
DECLARE int bufs_hiwat INIT(0);


/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */

