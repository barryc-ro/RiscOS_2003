// header file for mast.c

/* Begin-Prologue */
#ifndef MAST_H
#define MAST_H
#undef DECLARE
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */


#define MASTTAB_SIZE    16
#define N_TRIES         5
#define MAST_CELLSIZE   40
#define MAST_RXBUFSIZE  4096 /* was 1536 */

#define VCN_BASE        0x4000
#define VCN_BOUND       0x7f
#define VCN_OFFSET      0x80
#define STB_OFFSET      0x100

#define M_FREE          0

#define M_MPEG_AAL0     0x19
#define M_MPEG_AAL5     0x20
/* decide where we want our IP ports to live -
   older diskbricks had them the opposite way around, hence the 'if 1'
*/
#if 1
#define M_LLC           0x21  /* 33 decimal */
#define M_IP            0x38
#else
#define M_LLC           0x38
#define M_IP            0x21
#endif

#define M_BOOTSRV_NEW   0x7f
#define M_BOOTSRV_OLD   0x80
#define M_ECHO		0x81

#define MAST_CONNECT    0
#define MAST_CONNECTACK 1
#define MAST_DISCONNECT 2
#define MAST_BOOTREQ    65
#define MAST_REBOOTREQ  66

#define M_SWITCHED  0x1
#define M_PERMANENT 0x2
#define M_USED      0x4
#define M_PENDING   0x8
#define M_CONNECT   0x10
#define M_LISTEN    0x20
#define M_PURGE	    0x40


#define LLC_MULTIPLEX 1
#define VC_MULTIPLEX  2


struct mast {
    u_char   m_macadr[6];             /* MAST/MAC address of remote host                                                  */
    u_int    m_port;		      /* port number of service on remote host		      			  	  */
    u_int    m_local_port;	      /* port number of local connection/service	      			  	  */
    u_int    m_pvc_vcn;		      /* Virtual Circuit Number if Permanent Virtual Circuit  			  	  */
    u_int    m_originator;	      /* 1 if we did a CONNECT, 0 if we did a LISTEN          			          */
    char     *m_rbuf;		      /* pointer to our service-specific rx buffer (either an MPEG buf or m_rxbuf)	  */
    int      m_offset;		      /* offset of active point in current buffer     	      		  		  */
    int      m_datacount;	      /* count of data passed on this connection (obsolete)   			  	  */
    int      m_datalost;	      /* count of data lost on this connection (not guaranteed)                   	  */
    int      m_status;		      /* current status and flags for this connection				  	  */
    int      m_muxtype;		      /* type of IP multiplexing in use, if this is an IP connection		  	  */
    int      m_streamhandle;	      /* MPEG system stream handle in use on this connection (MPEG_AAL5 video)	  	  */
    u_int    m_socket_handle;	      /* NIC socket handle which refers to this connection   			  	  */
    char     *m_rxbuf;		      /* generic MAST rx buffer. May be referenced by m_rbuf			  	  */
};



DECLARE void clear_masttab(struct mast *);
DECLARE void clear_mast(void);
DECLARE struct mast *mast_user_locate(unsigned char *, unsigned int);
DECLARE struct mast *mast_local_locate(unsigned char *, unsigned int);
DECLARE struct mast *mast_service_locate(unsigned char *, unsigned int);
DECLARE struct mast *mast_mux_locate(unsigned char *, unsigned int);
DECLARE struct mast *mast_handle_locate(unsigned int);
DECLARE struct mast *mast_add(unsigned char *, unsigned int, unsigned int, unsigned int *, unsigned int, unsigned int);
DECLARE struct mast *mast_listen(unsigned char *, unsigned int, unsigned int);
DECLARE struct mast *mast_connect(unsigned char *, unsigned int);
DECLARE struct mast *mast_disconnect(unsigned char *, unsigned int);
DECLARE void mast_circuits(int *, int *);

DECLARE struct mast masttab[MASTTAB_SIZE];


/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */

