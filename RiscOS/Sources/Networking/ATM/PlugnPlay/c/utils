/*	UTILS.C

Project : ATML Panther driver
Module: plug'n'play - downloads firmware image into card

Purpose: various utility bits and pieces


History:

Date      Who     Description of change
===========================================
15/1/97    CP     Header added/history started.

                  Tidied up layout, chnaged to use standard libraries.

***************************************************************************/

#include <swis.h>
#include <kernel.h>
#include "utils.h"
#include "module.h"


unsigned int MonotonicTime(void)
{
  _kernel_swi_regs r;

  _kernel_swi(OS_ReadMonotonicTime, &r, &r);
  return ((unsigned int)(r.r[0]));
}

unsigned int FileStat(char *s)
{
  _kernel_swi_regs r;

  r.r[0] = 17;
  r.r[1] = (int)s;

  _kernel_swi(OS_File, &r, &r);
  return((unsigned int)(r.r[4]));
}


/* 21/1/98:CP:this routine can only guarantee a delay to within -1 cs! Most
of the time it is trying to delay by 1 cs!! Change condition of while loop so
that it only exits when time difference is GREATER than the required interval.  This means that the interval paused is accurate to within +1 cs.
*/

void time_delay(const int timeout)
{
  int time_then;

  time_then = MonotonicTime();

  while((MonotonicTime() - time_then) <= timeout)
     /* NULL LOOP */;

  return;
}

/* search expansion card slots for ATM25 product ID */
int find_my_podule(void)
{
  int n, m;
  _kernel_swi_regs r;


  for(n=0; n < 8; n++)
  {
        r.r[0] = 0x40;
        r.r[1] = (int)&m;
    	r.r[2] = 4;
  	r.r[3] = n;
  	_kernel_swi(XOS_Bit | Podule_ReadInfo, &r, &r);

  	if(m == ATM25_PRODUCT_ID)
  	{
  	   return(n);
  	}
  }

  return(-1);
}
