/*
 * IPConfig (NVRAMConf.h)
 *
 * Copyright (C) Acorn Computers Ltd. 1998
 *
 */

/* This file is a template - it should not be customised unless
 * absolutely necessary.  You must be aware of the consequences
 * of needing this to be different in different projects.
 *
 * You can always overlay the Messages file in ResourceFS (or
 * point IPConfig$Path at an appropriate alternative location
 * before the module is initialised)
 *
 */
#ifndef NVRAMCONF_H_INCLUDED
#define NVRAMCONF_H_INCLUDED

enum cmos_locations_and_associated_constants {
	/* These values are 4-byte IP addresses, stored in consecutive
	 * bytes in network byte order
	 */
        cmos_HOST_IP = 0x1e,
        cmos_SERVER_IP = 0x22,
        cmos_GATEWAY_IP = 0x26,
        cmos_IP_ADDR_1 = 0x2a,
        cmos_DNS_IP = 0x95,

	/* This is a string */
	cmos_BOOT_MOUNT = 0x50,
		cmos_BOOT_MOUNT_SZ = 0x26,

	/* The following values are not byte-wide and are contained
	 * within contiguous bits within a single byte (or are
	 * single-bit).  The code which reads and writes the CMOS RAM
	 * optimises away multiple reads/writes statically, so there
	 * is no performance hit from reading/writing these values
	 * in three operations.
	 */
	cmos_NETMASK = 0x6f,
		cmos_NETMASK_SHIFT = 3,
		cmos_NETMASK_MASK  = 0x1f << cmos_NETMASK_SHIFT,
	cmos_STATIC_FLAG = 0x6f,
		cmos_STATIC_FLAG_BIT_MASK = 0x02,
	cmos_DYNAMIC_FLAG = 0x6f,
		cmos_DYNAMIC_FLAG_BIT_MASK = 0x04

};


typedef struct _ip_data
{
    unsigned char client_ip[4];
    unsigned char server_ip[4];
    unsigned char gateway_ip[4];
    unsigned char addr1_ip[4];
    unsigned char dns_ip[4];
    unsigned char netmask_buffer[4];
    unsigned int  static_flag:1;
    unsigned int  dynamic_flag:1;
    unsigned int  netmask:5;
    char boot_mount[cmos_BOOT_MOUNT_SZ];
    char terminator;
} ip_data;


#ifdef __cplusplus
extern "C" {
#endif

extern int read_cmos_byte(int location);
extern void write_cmos_byte(int location, unsigned int value);
extern void ReadIPCMOS( int location, unsigned char *p );
extern void ReadStringCMOS( int location, char *p, int bufsz );

extern void ReadIPData( ip_data *ip );
extern void WriteIPData( ip_data *ip );

#ifdef __cplusplus
}
#endif

#endif
