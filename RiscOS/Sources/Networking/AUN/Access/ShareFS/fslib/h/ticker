/* $Id$ */

/* Routines to use callbacks to call specified C functions
 * regularly, or after a timeout
 */

typedef void tickerfunc(void);

void CallEvery(tickerfunc *, int);	/* interval must be non-zero */

void CallAfter(tickerfunc *, int);	/* can be zero for soonest
					 * callback */
void RemoveCallEvery(tickerfunc *);
extern void dropper(void);

/* A function can drop back to user mode safely - it will not be reentered,
 * though other tickers may be if the function is taking some time to execute.
 */

/*
 * Call this on exit if you want to check that
 * all tickers have been removed. It will print
 * diagnostics if any remain. This is compiled in 
 * a separate file, so its not compulsory
 */

void ticker_clear(void);

extern int numtickers, havecallback;

#define MAXTICKERS 10

extern struct tickerdetails
{
    tickerfunc *func;
    int interval;
    int count;
} tickers[MAXTICKERS];

extern void tickerafter(void);
extern void tickerback(void);
RETURNMETHOD tickerback_handler(_kernel_swi_regs * r, void *private_word);
RETURNMETHOD tickerafter_handler(_kernel_swi_regs * r, void *private_word);
