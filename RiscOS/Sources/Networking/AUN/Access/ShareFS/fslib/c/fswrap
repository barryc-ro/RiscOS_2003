/* -*-C-*-
 *
 * Copyright (c) 1995 ANT Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.2  95/01/09  13:34:39  kwelton
 * The header file _swis.h no longer exists, it has been adsorbed into the
 * (new) system version of swis.h.
 *
 * Revision 1.1  95/01/04  17:57:23  kwelton
 * Initial revision
 *
 */

/*
 *     Module wrapping for FS
 */

#include "FS.h"

/*
 * This is the finalisation code
 */
void fs_finalise(void)
{
    /*
     * Close your filing system down here and free up all your memory
     * NOW. If you do not then all your filing system's junk is going
     * to be left cluttering up the RMA as this module is just about
     * to be killed.
     */
    fs_terminate();
    Terminate_FileEntrys();
    _swix(Free_DeRegister, _IN(0),
	  FilingSystemInformationWord & 0xFF);	/* Filing system number */
    _swix(OS_FSControl, _INR(0, 1), FSControl_RemoveFilingSystem,
	  FilingSystemName);
}

/*
 * Declare FS to FileSwitch
 */
_kernel_oserror *declare_fs(void)
{
    _kernel_oserror *err;
    int information_block[Information_Block_Size];

    information_block[0] = (int)FilingSystemName - (int) Image_RO_Base;
    information_block[1] = (int)ModuleName - (int) Image_RO_Base;
    information_block[2] = (int)&veneer_fsentry_open - (int) Image_RO_Base;
    information_block[3] = (int)&veneer_fsentry_getbytes - (int) Image_RO_Base;
    information_block[4] = (int)&veneer_fsentry_putbytes - (int) Image_RO_Base;
    information_block[5] = (int)&veneer_fsentry_args - (int) Image_RO_Base;
    information_block[6] = (int)&veneer_fsentry_close - (int) Image_RO_Base;
    information_block[7] = (int)&veneer_fsentry_file - (int) Image_RO_Base;
    information_block[8] = FilingSystemInformationWord;
    information_block[9] = (int)&veneer_fsentry_func - (int) Image_RO_Base;
    information_block[10] = (int)&veneer_fsentry_gbpb - (int) Image_RO_Base;

    err = _swix(OS_FSControl, _INR(0, 3), FSControl_AddFilingSystem,
		Image_RO_Base, (int)information_block - (int)Image_RO_Base,
		private_word);
    if (!err)
	_swix(Free_Register, _INR(0, 2), FilingSystemInformationWord & 0xFF,
	      veneer_fsentry_free, private_word);
    return err;
}

_kernel_oserror *fs_initialise(void)
{
    _kernel_oserror *err;
    err = Initialise_FileEntrys();
    if (!err)
	err = declare_fs();
    return err;
}

void fs_service(_kernel_swi_regs *r)
{
    r = r;
    switch (r->r[1])
    {
      case Service_FSRedeclare:
	declare_fs();
	break;
    }
}

/* EOF fswrap.c */
