; generated by Norcroft RISC OS ARM C vsn 5.06 (Acorn Computers Ltd) [Feb 16 1995]

        AREA |C$$code|, CODE, READONLY
|x$codeseg|

        EXPORT  if_askwhoiam
        EXPORT  if_whoamimns
if_whoamimns
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        LDR      a2,[a1,#&10]
        ORR      a2,a2,#&4000
        STRB     a2,[a1,#&10]
        MOV      a2,a2,ASR #8
        STRB     a2,[a1,#&11]
        LDR      a3,[pc, #L000038-.-8]
        MOV      a4,#0
        MOV      a2,#&4000
        BL       if_askwhoiam
        MOV      a1,#0
        LDMDB    fp,{fp,sp,pc}^
L000038
        EXPORT  revarp_myaddr
        DCD     revarp_myaddr

if_askwhoiam
        STMDB    sp!,{lr}
        LDR      ip,[a1,#&10]
        MOV      ip,ip,LSL #16
        MOV      ip,ip,ASR #16
        TST      ip,#8
        LDMNEIA  sp!,{pc}^
        TST      ip,#2
        ANDNE    a2,ip,a2
        TEQNE    a2,#0
        MOVNE    a2,a4
        LDMNEIA  sp!,{lr}
        ADDNE    pc,a3,#0
        LDMIA    sp!,{pc}^

        IMPORT  ether_sprintf
        IMPORT  printf
        EXPORT  backoff
        IMPORT  timeout
        EXPORT  bootsleep
        IMPORT  untimeout
        IMPORT  if_down
        EXPORT  if_whoamiaddr
if_whoamiaddr
        MOV      ip,sp
        STMDB    sp!,{v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        MOV      v2,a2
        MOV      a1,#0
        LDR      v3,[pc, #L000190-.-8]
        LDR      ip,[sl,#-0]
        ADD      v3,ip,v3
        STR      a1,[v3,#8]
        STR      a1,[v3,#0]
        MOV      v5,#1
        LDR      a1,[v3,#4]
        TEQ      a1,#0
        STREQ    v5,[v3,#4]
        LDR      v6,[pc, #L000194-.-8]
        TEQ      v2,v6
        BNE      |L0000cc.J6.if_whoamiaddr|
        ADD      a1,v1,#&5c
        BL       ether_sprintf
        MOV      a2,a1
        ADD      a1,pc,#L000198-.-8
        BL       printf
|L0000cc.J6.if_whoamiaddr|
        LDR      a1,[v1,#&10]
        ORR      a1,a1,#&4000
        STRB     a1,[v1,#&10]
        MOV      a1,a1,ASR #8
        STRB     a1,[v1,#&11]
        LDR      a1,[v3,#4]
        BL       backoff
        MOV      a3,a1
        LDR      v4,[pc, #L0001b4-.-8]
        MOV      a1,v4
        MOV      a2,#0
        BL       timeout
        LDR      ip,[pc, #L0001b8-.-8]
        TEQ      v2,ip
        TEQNE    v2,v6
        BNE      |L000120.J8.if_whoamiaddr|
        LDR      a3,[pc, #L000038-.-8]
        MOV      a1,v1
        MOV      a4,#1
        MOV      a2,#&4000
        BL       if_askwhoiam
|L000120.J8.if_whoamiaddr|
        LDR      ip,[pc, #L0001bc-.-8]
        TEQ      v2,ip
        TEQNE    v2,v6
        BNE      |L000144.J12.if_whoamiaddr|
        LDR      a3,[pc, #L0001c0-.-8]
        MOV      a1,v1
        MOV      a4,#1
        MOV      a2,#&4000
        BL       if_askwhoiam
|L000144.J12.if_whoamiaddr|
        MOV      a1,v2
        BL       bootsleep
        LDR      a1,[v1,#&10]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,ASR #16
        TST      a1,#&4000
        BEQ      |L0001e0.J16.if_whoamiaddr|
        BIC      a1,a1,#&4000
        STRB     a1,[v1,#&10]
        MOV      a1,a1,ASR #8
        STRB     a1,[v1,#&11]
        LDR      a1,[v3,#8]
        TEQ      a1,#0
        BEQ      |L0001c4.J18.if_whoamiaddr|
        MOV      a1,v4
        MOV      a2,#0
        BL       untimeout
        STR      v5,[v3,#4]!
        B        |L0001d0.J20.if_whoamiaddr|
L000190
        DCD     |x$dataseg|
L000194
        DCD     &c020691b
L000198
        DCB     &09,&20,&50,&68
        DCB     &79,&73,&69,&63
        DCB     &61,&6c,&20,&61
        DCB     &64,&64,&72,&65
        DCB     &73,&73,&20,&69
        DCB     &73,&20,&25,&73
        DCB     &0a,&00,&00,&00
L0001b4
        ;MPORT  bootwakeup
        DCD     bootwakeup
L0001b8
        DCD     &c0206919
L0001bc
        DCD     &c020691a
L0001c0
        EXPORT  bootp_myaddr
        DCD     bootp_myaddr
|L0001c4.J18.if_whoamiaddr|
        LDR      a1,[v3,#4]
        ADD      a1,a1,#1
        STR      a1,[v3,#4]!
|L0001d0.J20.if_whoamiaddr|
        MOV      a1,v1
        BL       if_down
        MVN      a1,#0
        LDMDB    fp,{v1-v6,fp,sp,pc}^
|L0001e0.J16.if_whoamiaddr|
        MOV      a1,v4
        MOV      a2,#0
        BL       untimeout
        MOV      a1,#0
        STR      v5,[v3,#4]!
        LDMDB    fp,{v1-v6,fp,sp,pc}^

        EXPORT  getrand
        IMPORT  __rt_sdiv
backoff
        MOV      ip,sp
        STMDB    sp!,{v1,fp,ip,lr,pc}
        SUB      fp,ip,#4
        SUB      a1,a1,#1
        CMP      a1,#7
        MOVGE    a1,#6
        LDR      a2,[pc, #L000248-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        LDRB     a1,[a2,a1]
        ADD      v1,a1,a1,LSL #3
        ADD      v1,v1,a1,LSL #4
        MOV      v1,v1,LSL #2
        BL       getrand
        MOV      a2,a1
        MOV      a1,v1
        BL       __rt_sdiv
        ADD      v1,v1,v1,LSR #31
        ADD      a1,a2,v1,ASR #1
        LDMDB    fp,{v1,fp,sp,pc}^
L000248
        DCD     |x$dataseg|+&c

        IMPORT  _kernel_swi
        IMPORT  rand
getrand
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        SUB      sp,sp,#&50
        MOV      a3,sp
        ADD      a2,sp,#&28
        MOV      a1,#&42
        ADD      a1,a1,#&20000
        BL       _kernel_swi
        BL       rand
        LDR      a2,[sp,#0]
        BL       __rt_sdiv
        MOV      a1,a2
        LDMDB    fp,{fp,sp,pc}^

        IMPORT  user_mode_donothing
        EXPORT  left_alt_is_pressed
        EXPORT  right_alt_is_pressed
bootsleep
        MOV      ip,sp
        STMDB    sp!,{v1-v3,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        LDR      v2,[pc, #L000190-.-8]
        LDR      ip,[sl,#-0]
        ADD      v2,ip,v2
        LDR      a1,[v2,#0]
        TEQ      a1,#0
        LDMNEDB  fp,{v1-v3,fp,sp,pc}^
        LDR      v3,[pc, #L000194-.-8]
|L0002b0.J4.bootsleep|
        BL       user_mode_donothing
        TEQ      v1,v3
        BNE      |L0002d8.J7.bootsleep|
        BL       left_alt_is_pressed
        TEQ      a1,#0
        BLNE     right_alt_is_pressed
        TEQNE    a1,#0
        MOVNE    a1,#1
        STRNE    a1,[v2,#8]!
        LDMNEDB  fp,{v1-v3,fp,sp,pc}^
|L0002d8.J7.bootsleep|
        LDR      a1,[v2,#0]
        TEQ      a1,#0
        BEQ      |L0002b0.J4.bootsleep|
        LDMDB    fp,{v1-v3,fp,sp,pc}^

bootwakeup
        MOV      a2,#1
        LDR      a1,[pc, #L000190-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        STR      a2,[a1,#0]
        MOVS     pc,lr

        IMPORT  sleep
        EXPORT  if_whoamimask
if_whoamimask
        MOV      ip,sp
        STMDB    sp!,{v1-v3,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        LDR      a1,[a1,#&10]
        ORR      a1,a1,#&8000
        STRB     a1,[v1,#&10]
        MOV      a1,a1,ASR #8
        STRB     a1,[v1,#&11]
        LDR      v2,[pc, #L000390-.-8]
        LDR      ip,[sl,#-0]
        ADD      v2,ip,v2
        MOV      a2,v2
        LDR      v3,[pc, #L000394-.-8]
        MOV      a1,v3
        MOV      a3,#&1f4
        BL       timeout
        LDR      a3,[pc, #L000398-.-8]
        MOV      a1,v1
        MOV      a4,#0
        MOV      a2,#&8000
        BL       if_askwhoiam
        MOV      a1,v2
        MOV      a2,#&1a
        BL       sleep
        LDR      a1,[v1,#&10]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,ASR #16
        TST      a1,#&8000
        BEQ      |L00039c.J4.if_whoamimask|
        BIC      a1,a1,#&8000
        STRB     a1,[v1,#&10]
        MOV      a1,a1,ASR #8
        STRB     a1,[v1,#&11]
        MVN      a1,#0
        LDMDB    fp,{v1-v3,fp,sp,pc}^
L000390
        DCD     whoamimask
L000394
        IMPORT  wakeup
        DCD     wakeup
L000398
        EXPORT  request_netmask
        DCD     request_netmask
|L00039c.J4.if_whoamimask|
        MOV      a2,v2
        MOV      a1,v3
        BL       untimeout
        MOV      a1,#0
        LDMDB    fp,{v1-v3,fp,sp,pc}^

        EXPORT  in_bootpresponse
in_bootpresponse
        MOV      a1,a1,LSL #16
        MOV      a1,a1,LSR #16
        LDR      a2,[pc, #L000190-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        LDR      a2,[a2,#&18]
        TEQ      a1,a2
        MOVNE    a1,#0
        MOVEQ    a1,#1
        MOVS     pc,lr

        IMPORT  bzero
        IMPORT  bcmp
        EXPORT  inet_ntoa
        EXPORT  setriscosvar
        IMPORT  in_control
        EXPORT  bootp_udp_input
bootp_udp_input
        MOV      ip,sp
        STMDB    sp!,{v1-v4,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        MOV      v2,a2
        SUB      sp,sp,#&14c
        MOV      v4,#&12c
        MOV      v3,a1
        ADD      a1,sp,#&20
        MOV      a2,#&12c
        BL       bzero
        ADD      a4,sp,#&20
        MOV      a3,v4
        MOV      a2,v2
        LDR      lr,[pc, #L000448-.-8]
        LDR      ip,[sl,#-0]
        ADD      lr,ip,lr
        MOV      a1,lr
        LDR      ip,[lr,#&84]!
        MOV      lr,pc
        MOV      pc,ip
        ADD      a2,sp,#&3c
        ADD      a1,v3,#&5c
        LDRB     a3,[sp,#&22]
        BL       bcmp
        TEQ      a1,#0
        BEQ      |L00044c.J4.bootp_udp_input|
|L000444.J8.bootp_udp_input|
        LDMDB    fp,{v1-v4,fp,sp,pc}^
L000448
        IMPORT  mbctl
        DCD     mbctl
|L00044c.J4.bootp_udp_input|
        LDR      a1,[sp,#&34]
        BL       inet_ntoa
        MOV      a2,a1
        ADD      a1,pc,#L0004c0-.-8
        BL       setriscosvar
        ADD      a2,sp,#&8c
        ADD      a1,pc,#L0004d0-.-8
        BL       setriscosvar
        MOV      a1,sp
        MOV      a2,#&20
        BL       bzero
        MOV      a1,#2
        STRB     a1,[sp,#&10]
        MOV      a1,#0
        STRB     a1,[sp,#&11]
        LDR      a1,[sp,#&30]
        MOV      a4,v1
        STR      a1,[sp,#&14]
        MOV      a3,sp
        LDR      a2,[pc, #L0004e0-.-8]
        MOV      a1,#0
        BL       in_control
        LDR      a1,[v1,#&10]
        BIC      a1,a1,#&4000
        STRB     a1,[v1,#&10]
        MOV      a1,a1,ASR #8
        STRB     a1,[v1,#&11]
        BL       bootwakeup
        B        |L000444.J8.bootp_udp_input|
L0004c0
        DCB     &49,&6e,&65,&74
        DCB     &24,&42,&6f,&6f
        DCB     &74,&53,&65,&72
        DCB     &76,&65,&72,&00
L0004d0
        DCB     &49,&6e,&65,&74
        DCB     &24,&42,&6f,&6f
        DCB     &74,&46,&69,&6c
        DCB     &65,&00,&00,&00
L0004e0
        DCD     &8020690c

        IMPORT  htons
        IMPORT  in_cksum
        EXPORT  bootp_ip_output
bootp_ip_output
        MOV      ip,sp
        STMDB    sp!,{v1-v5,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        MOV      v2,a2
        SUB      sp,sp,#&10
        MOV      v5,#&14
        LDR      a1,[a1,#8]
        ADD      v3,v1,a1
        LDR      a1,[v3,#0]
        BIC      a1,a1,#&f0
        ORR      a1,a1,#&40
        STR      a1,[v3,#0]
        LDR      a1,[v3,#6]
        AND      a1,a1,#&4000
        STRB     a1,[v3,#6]
        MOV      a1,a1,ASR #8
        STRB     a1,[v3,#7]
        LDR      a2,[pc, #L0005f0-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        LDR      a1,[a2,#2]
        MOV      a1,a1,LSR #16
        ADD      a3,a1,#1
        STR      a3,[a2,#0]
        BL       htons
        STRB     a1,[v3,#4]
        MOV      a1,a1,LSR #8
        STRB     a1,[v3,#5]
        LDR      a1,[v3,#0]
        BIC      a1,a1,#&f
        ORR      a1,a1,#5
        STR      a1,[v3,#0]
        MOV      a1,#2
        STRB     a1,[sp,#0]
        MOV      v4,#0
        STRB     v4,[sp,#1]
        LDR      a1,[v3,#&10]
        STR      a1,[sp,#4]
        LDR      a1,[v3,#2]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,LSR #16
        BL       htons
        STRB     a1,[v3,#2]
        MOV      a1,a1,ASR #8
        STRB     a1,[v3,#3]
        LDR      a1,[v3,#6]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,LSR #16
        BL       htons
        STRB     a1,[v3,#6]
        MOV      a1,a1,ASR #8
        STRB     a1,[v3,#7]
        STRB     v4,[v3,#&a]
        STRB     v4,[v3,#&b]
        MOV      a2,v5
        MOV      a1,v1
        BL       in_cksum
        STRB     a1,[v3,#&a]
        MOV      a1,a1,LSR #8
        STRB     a1,[v3,#&b]
        MOV      a3,sp
        MOV      a2,v1
        MOV      a1,v2
        MOV      lr,pc
        LDR      pc,[v2,#&34]
        LDMDB    fp,{v1-v5,fp,sp,pc}^
L0005f0
        EXPORT  ip_id
        DCD     ip_id

        IMPORT  htonl
        EXPORT  bootp_udp_output
bootp_udp_output
        MOV      ip,sp
        STMDB    sp!,{a1-a4}
        STMDB    sp!,{v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#&14
        MOV      v1,a1
        MOV      v4,a4,LSL #16
        MOV      v4,v4,ASR #16
        LDR      a1,[fp,#&18]
        MOV      v5,a1,LSL #16
        MOV      v5,v5,ASR #16
        MOV      v3,#0
        MOVS     a1,v1
        LDR      v6,[fp,#&14]
        BEQ      |L000640.J5.bootp_udp_output|
|L00062c.J4.bootp_udp_output|
        LDR      a2,[a1,#&c]
        ADD      v3,v3,a2
        LDR      a1,[a1,#0]
        TEQ      a1,#0
        BNE      |L00062c.J4.bootp_udp_output|
|L000640.J5.bootp_udp_output|
        LDR      a4,[pc, #L000448-.-8]
        LDR      ip,[sl,#-0]
        ADD      a4,ip,a4
        MOV      a1,a4
        MOV      a3,#0
        MOV      a2,#&70
        MOV      lr,pc
        LDR      pc,[a4,#&3c]
        MOVS     v2,a1
        BNE      |L00068c.J8.bootp_udp_output|
        MOV      a2,v1
        LDR      a3,[pc, #L000448-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a1,a3
        MOV      lr,pc
        LDR      pc,[a3,#&50]
        MOV      a1,#&37
        LDMDB    fp,{v1-v6,fp,sp,pc}^
|L00068c.J8.bootp_udp_output|
        MOV      a1,#2
        STRB     a1,[v2,#&18]
        LDR      a1,[v2,#&14]
        LDR      a2,[v2,#&10]
        ADD      a1,a2,a1
        SUB      a1,a1,#&1c
        STR      a1,[v2,#8]
        MOV      a1,#&1c
        STR      a1,[v2,#&c]
        STR      v1,[v2,#0]
        LDR      a1,[v2,#8]
        ADD      v1,v2,a1
        MOV      a1,#0
        STR      a1,[v1,#4]
        STR      a1,[v1,#0]
        STRB     a1,[v1,#8]
        MOV      a1,#&11
        STRB     a1,[v1,#9]
        MOV      a1,v3,LSL #16
        MOV      a1,a1,LSR #16
        ADD      a1,a1,#8
        BL       htons
        STRB     a1,[v1,#&a]
        MOV      a1,a1,ASR #8
        STRB     a1,[v1,#&b]
        LDR      a1,[fp,#&c]
        BL       htonl
        STR      a1,[v1,#&c]
        MOV      a1,v6
        BL       htonl
        STR      a1,[v1,#&10]
        MOV      a1,v4
        BL       htons
        STRB     a1,[v1,#&14]
        MOV      a1,a1,LSR #8
        STRB     a1,[v1,#&15]
        MOV      a1,v5
        BL       htons
        STRB     a1,[v1,#&16]
        MOV      a1,a1,LSR #8
        STRB     a1,[v1,#&17]
        LDR      a1,[v1,#&a]
        STRB     a1,[v1,#&18]
        MOV      a1,a1,ASR #8
        STRB     a1,[v1,#&19]
        MOV      a1,#0
        STRB     a1,[v1,#&1a]
        STRB     a1,[v1,#&1b]
        ADD      a1,v3,#&1c
        STRB     a1,[v1,#2]
        MOV      a1,a1,ASR #8
        STRB     a1,[v1,#3]
        LDR      a1,[pc, #L000780-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a1,[a1,#0]
        STRB     a1,[v1,#8]
        MOV      a1,v2
        LDR      a2,[fp,#8]
        LDMDB    fp,{v1-v6,fp,sp,lr}
        B        bootp_ip_output
L000780
        IMPORT  udp_ttl
        DCD     udp_ttl

        IMPORT  time
        IMPORT  bcopy
        IMPORT  strcpy
bootp_myaddr
        MOV      ip,sp
        STMDB    sp!,{v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        MOV      v2,a2
        SUB      sp,sp,#&12c
        ADD      v5,pc,#L000870-.-8
        ADD      v3,pc,#L000870-.-8
        MOV      a1,sp
        MOV      v4,sp
        MOV      a2,#&12c
        BL       bzero
        MOV      v6,#1
        STRB     v6,[sp,#0]
        STRB     v6,[sp,#1]
        MOV      a1,#6
        STRB     a1,[sp,#2]
        MOV      a1,#0
        BL       time
        STR      a1,[sp,#4]
        MOV      a1,v2
        BL       htons
        STRB     a1,[sp,#8]
        MOV      a1,a1,LSR #8
        STRB     a1,[sp,#9]
        ADD      a2,sp,#&1c
        ADD      a1,v1,#&5c
        LDRB     a3,[sp,#2]
        BL       bcopy
        ADD      a1,sp,#&2c
        MOV      a2,v5
        BL       strcpy
        ADD      a1,sp,#&6c
        MOV      a2,v3
        BL       strcpy
        MOV      a2,#&12c
        MOV      a3,v4
        LDR      a4,[pc, #L000448-.-8]
        LDR      ip,[sl,#-0]
        ADD      a4,ip,a4
        MOV      a1,a4
        MOV      lr,pc
        LDR      pc,[a4,#&30]
        MOVS     a2,a1
        MOVEQ    a1,#&37
        BEQ      |L00086c.J9.bootp_myaddr|
        STRB     v6,[a2,#&18]
        LDR      lr,[pc, #L000190-.-8]
        LDR      ip,[sl,#-0]
        ADD      lr,ip,lr
        MVN      a3,#0
        LDR      a4,[lr,#&1c]
        STMDB    sp!,{a3,a4}
        MOV      a2,v1
        MOV      a3,#0
        LDR      a4,[lr,#&18]!
        BL       bootp_udp_output
        ADD      sp,sp,#8
|L00086c.J9.bootp_myaddr|
        LDMDB    fp,{v1-v6,fp,sp,pc}^
L000870
        DCB     &00,&00,&00,&00

        IMPORT  in_makeaddr
revarp_myaddr
        MOV      ip,sp
        STMDB    sp!,{v1-v5,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        SUB      sp,sp,#&30
        MOV      v4,v1
        MOV      v5,#0
        TEQ      a2,#0
        BEQ      |L000900.J4.revarp_myaddr|
        ADD      a1,sp,#&10
        MOV      a2,#&20
        BL       bzero
        ADD      v2,sp,#&20
        MOV      a1,#2
        STRB     a1,[sp,#&20]
        STRB     v5,[sp,#&21]
        MVN      a2,#&ff000000
        MOV      a1,#0
        BL       in_makeaddr
        STR      a1,[sp,#&24]
        LDR      a1,[v4,#&10]
        ORR      a1,a1,#&20
        STRB     a1,[v4,#&10]
        MOV      a1,a1,ASR #8
        STRB     a1,[v4,#&11]
        MOV      a4,v4
        ADD      a3,sp,#&10
        LDR      a2,[pc, #L0004e0-.-8]
        MOV      a1,#0
        BL       in_control
        LDR      a1,[v1,#&64]
        TEQ      a1,#0
        LDRNE    a2,[v2,#4]!
        TEQNE    a1,a2
        BNE      |L000928.J13.revarp_myaddr|
|L000900.J4.revarp_myaddr|
        LDR      a4,[pc, #L000448-.-8]
        LDR      ip,[sl,#-0]
        ADD      a4,ip,a4
        MOV      a1,a4
        MOV      a3,#0
        MOV      a2,#&70
        MOV      lr,pc
        LDR      pc,[a4,#&3c]
        MOVS     v3,a1
        BNE      |L00092c.J9.revarp_myaddr|
|L000928.J13.revarp_myaddr|
        LDMDB    fp,{v1-v5,fp,sp,pc}^
|L00092c.J9.revarp_myaddr|
        MOV      a1,#1
        STRB     a1,[v3,#&18]
        MOV      a1,#&1c
        STR      a1,[v3,#&c]
        LDR      a1,[v3,#&14]
        LDR      a2,[v3,#&10]
        ADD      a1,a2,a1
        SUB      a1,a1,#&1c
        STR      a1,[v3,#8]
        ADD      a1,v3,a1
        MOV      v2,a1
        MOV      a2,#&1c
        BL       bzero
        STRB     v5,[sp,#0]
        STRB     v5,[sp,#1]
        ADD      a2,sp,#2
        MOV      v5,a2
        LDR      a1,[pc, #L000a2c-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        MOV      a3,#6
        BL       bcopy
        ADD      a2,v5,#6
        ADD      a1,v1,#&5c
        MOV      v1,a1
        MOV      a3,#6
        BL       bcopy
        MOV      a1,#&35
        STRB     a1,[sp,#&e]
        MOV      a1,#&80
        STRB     a1,[sp,#&f]
        MOV      a1,#1
        BL       htons
        STRB     a1,[v2,#0]
        MOV      a1,a1,LSR #8
        STRB     a1,[v2,#1]
        MOV      a1,#&800
        BL       htons
        STRB     a1,[v2,#2]
        MOV      a1,a1,LSR #8
        STRB     a1,[v2,#3]
        MOV      a1,#6
        STRB     a1,[v2,#4]
        MOV      a1,#4
        STRB     a1,[v2,#5]
        MOV      a1,#3
        BL       htons
        STRB     a1,[v2,#6]
        MOV      a1,a1,LSR #8
        STRB     a1,[v2,#7]
        ADD      a2,v2,#8
        MOV      a1,v1
        MOV      a3,#6
        BL       bcopy
        ADD      a2,v2,#&12
        MOV      a1,v1
        MOV      a3,#6
        BL       bcopy
        MOV      a3,sp
        MOV      a2,v3
        MOV      a1,v4
        MOV      lr,pc
        LDR      pc,[v4,#&34]
        B        |L000928.J13.revarp_myaddr|
L000a2c
        IMPORT  etherbroadcastaddr
        DCD     etherbroadcastaddr

        IMPORT  ntohs
        EXPORT  revarp_event
        EXPORT  revarpinput
revarpinput
        MOV      ip,sp
        STMDB    sp!,{v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v2,a1
        MOV      v1,a2
        SUB      sp,sp,#&44
        MOV      v5,a1
        LDR      a1,[a2,#8]
        ADD      a1,a1,#4
        STR      a1,[a2,#8]
        LDR      a1,[a2,#&c]
        SUBS     a1,a1,#4
        STR      a1,[a2,#&c]
        BNE      |L000a84.J4.revarpinput|
        LDR      v1,[v1,#0]
        LDR      a3,[pc, #L000448-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a1,a3
        MOV      lr,pc
        LDR      pc,[a3,#&4c]
|L000a84.J4.revarpinput|
        LDR      a1,[v1,#8]
        ADD      v3,v1,a1
        LDR      a1,[v1,#&c]
        CMP      a1,#&1c
        BCC      |L000d10.J8.revarpinput|
        LDR      a1,[v2,#&10]
        TST      a1,#&80
        LDREQ    a1,[v3,#2]
        MOVEQ    a1,a1,LSL #16
        MOVEQ    a1,a1,LSR #16
        BLEQ     ntohs
        TEQEQ    a1,#&800
        BNE      |L000d10.J8.revarpinput|
        LDR      a1,[pc, #L000190-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a1,[a1,#&20]
        TEQ      a1,#0
        BEQ      |L000d10.J8.revarpinput|
        LDR      a1,[v3,#6]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,LSR #16
        BL       ntohs
        ADD      a2,v2,#&5c
        TEQ      a1,#3
        STR      a2,[sp,#&40]
        BEQ      |L000bd8.J18.revarpinput|
        TEQ      a1,#4
        BNE      |L000d10.J8.revarpinput|
        LDR      a1,[v5,#&10]
        TST      a1,#&4000
        BEQ      |L000d10.J8.revarpinput|
        ADD      a1,v3,#&12
        MOV      a3,#6
        LDR      a2,[sp,#&40]
        BL       bcmp
        TEQ      a1,#0
        BNE      |L000b3c.J23.revarpinput|
        ADD      a2,v2,#&64
        ADD      a1,v3,#&18
        MOV      a3,#4
        BL       bcopy
        LDR      a1,[pc, #L000bd0-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        BL       wakeup
|L000b3c.J23.revarpinput|
        ADD      a1,sp,#&18
        MOV      a2,#&20
        BL       bzero
        MOV      a1,#2
        STRB     a1,[sp,#&28]
        MOV      a1,#0
        STRB     a1,[sp,#&29]
        LDR      a1,[v2,#&64]!
        MOV      a4,v5
        STR      a1,[sp,#&2c]
        ADD      a3,sp,#&18
        LDR      a2,[pc, #L0004e0-.-8]
        MOV      a1,#0
        BL       in_control
        LDR      a1,[v5,#&10]
        BIC      a1,a1,#&4000
        STRB     a1,[v5,#&10]
        MOV      a1,a1,ASR #8
        STRB     a1,[v5,#&11]
        ADD      a1,v3,#&e
        ADD      a2,sp,#4
        MOV      a3,#4
        BL       bcopy
        ADD      a1,v3,#&18
        MOV      a2,sp
        MOV      a3,#4
        BL       bcopy
        LDR      a1,[sp,#4]
        LDR      a2,[sp,#0]
        BL       revarp_event
        LDR      a1,[sp,#4]
        BL       inet_ntoa
        MOV      a2,a1
        LDR      a1,[pc, #L000bd4-.-8]
        BL       setriscosvar
        BL       bootwakeup
        B        |L000d10.J8.revarpinput|
L000bd0
        DCD     |x$dataseg|+&20
L000bd4
        DCD     |x$codeseg|+&4c0
|L000bd8.J18.revarpinput|
        LDR      a1,[v5,#&10]
        TST      a1,#&4000
        BNE      |L000d10.J8.revarpinput|
        LDR      a1,[pc, #L000d00-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        MOV      v4,a1
        ADD      v6,a1,#&c80
        CMP      v6,a1
        BLS      |L000c38.J28.revarpinput|
        ADD      a1,v3,#&12
        STR      a1,[sp,#&3c]
|L000c08.J27.revarpinput|
        LDRB     a1,[v4,#&b]
        TST      a1,#4
        BEQ      |L000c2c.J30.revarpinput|
        ADD      a1,v4,#4
        MOV      a3,#6
        LDR      a2,[sp,#&3c]
        BL       bcmp
        TEQ      a1,#0
        BEQ      |L000c38.J28.revarpinput|
|L000c2c.J30.revarpinput|
        ADD      v4,v4,#&10
        CMP      v6,v4
        BHI      |L000c08.J27.revarpinput|
|L000c38.J28.revarpinput|
        CMP      v6,v4
        BLS      |L000d10.J8.revarpinput|
        ADD      a2,sp,#&a
        MOV      v6,a2
        ADD      a1,v3,#8
        MOV      a3,#6
        STR      a1,[sp,#&38]
        BL       bcopy
        ADD      a2,v3,#&18
        MOV      a1,v4
        MOV      a3,#4
        BL       bcopy
        LDR      v4,[v5,#&18]
        TEQ      v4,#0
        BEQ      |L000d10.J8.revarpinput|
|L000c74.J36.revarpinput|
        LDR      a1,[v4,#&20]
        TEQ      a1,v5
        BNE      |L000d04.J39.revarpinput|
        ADD      a2,v3,#&e
        ADD      a1,v4,#4
        MOV      a3,#4
        BL       bcopy
        TEQ      v4,#0
        BEQ      |L000d10.J8.revarpinput|
        MOV      a3,#6
        LDR      a1,[sp,#&40]
        LDR      a2,[sp,#&38]
        BL       bcopy
        ADD      a2,v6,#6
        MOV      a3,#6
        LDR      a1,[sp,#&40]
        BL       bcopy
        MOV      a1,#&35
        STRB     a1,[v6,#&c]
        MOV      a1,#&80
        STRB     a1,[v6,#&d]
        MOV      a1,#4
        BL       htons
        STRB     a1,[v3,#6]
        MOV      a1,a1,LSR #8
        STRB     a1,[v3,#7]
        MOV      a1,#0
        STRB     a1,[sp,#8]
        STRB     a1,[sp,#9]
        MOV      a1,v2
        ADD      a3,sp,#8
        MOV      a2,v1
        MOV      lr,pc
        LDR      pc,[v2,#&34]
        B        |L000d2c.J49.revarpinput|
L000d00
        IMPORT  arptab
        DCD     arptab
|L000d04.J39.revarpinput|
        LDR      v4,[v4,#&24]
        TEQ      v4,#0
        BNE      |L000c74.J36.revarpinput|
|L000d10.J8.revarpinput|
        MOV      a2,v1
        LDR      a3,[pc, #L000448-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a1,a3
        MOV      lr,pc
        LDR      pc,[a3,#&50]
|L000d2c.J49.revarpinput|
        LDMDB    fp,{v1-v6,fp,sp,pc}^

revarp_event
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      a3,#&13
        STR      a3,[sp,#-&28]!
        MOV      a3,#4
        STR      a1,[sp,#8]
        STR      a2,[sp,#&c]
        STR      a3,[sp,#4]
        MOV      a3,sp
        MOV      a2,sp
        MOV      a1,#&22
        ADD      a1,a1,#&20000
        BL       _kernel_swi
        LDMDB    fp,{fp,sp,pc}^

        IMPORT  memcpy
        EXPORT  revarp_broadcastclientaddrs
revarp_broadcastclientaddrs
        MOV      ip,sp
        STMDB    sp!,{v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        SUB      sp,sp,#&10
        MOV      v4,a1
        LDR      v6,[pc, #L000448-.-8]
        LDR      ip,[sl,#-0]
        ADD      v6,ip,v6
        MOV      a1,v6
        MOV      a3,#0
        MOV      a2,#&70
        MOV      lr,pc
        LDR      pc,[v6,#&40]
        MOVS     v3,a1
        BEQ      |L000f0c.J18.revarp_broadcastclientaddrs|
        MOV      a1,#1
        STRB     a1,[v3,#&18]
        MOV      a1,#&1c
        STR      a1,[v3,#&c]
        LDR      a1,[v3,#&14]
        LDR      a2,[v3,#&10]
        ADD      a1,a2,a1
        SUB      a1,a1,#&1c
        STR      a1,[v3,#8]
        ADD      v2,v3,a1
        MOV      a1,#0
        STRB     a1,[sp,#0]
        STRB     a1,[sp,#1]
        ADD      a1,sp,#2
        MOV      v5,a1
        LDR      a2,[pc, #L000a2c-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        MOV      a3,#6
        BL       memcpy
        ADD      a2,v1,#&5c
        MOV      v1,a2
        ADD      a1,v5,#6
        MOV      a3,#6
        BL       memcpy
        MOV      a1,#&35
        STRB     a1,[sp,#&e]
        MOV      a1,#&80
        STRB     a1,[sp,#&f]
        MOV      a1,#1
        BL       htons
        STRB     a1,[v2,#0]
        MOV      a1,a1,LSR #8
        STRB     a1,[v2,#1]
        MOV      a1,#&800
        BL       htons
        STRB     a1,[v2,#2]
        MOV      a1,a1,LSR #8
        STRB     a1,[v2,#3]
        MOV      a1,#6
        STRB     a1,[v2,#4]
        MOV      a1,#4
        STRB     a1,[v2,#5]
        BL       htons
        STRB     a1,[v2,#6]
        MOV      a1,a1,LSR #8
        STRB     a1,[v2,#7]
        MOV      a2,v1
        ADD      a1,v2,#8
        MOV      a3,#6
        BL       memcpy
        MOV      a2,v1
        ADD      a1,v2,#&12
        MOV      a3,#6
        BL       memcpy
        LDR      v1,[v4,#&18]
        TEQ      v1,#0
        BEQ      |L000ed4.J13.revarp_broadcastclientaddrs|
|L000e94.J6.revarp_broadcastclientaddrs|
        LDR      a1,[v1,#&20]
        TEQ      a1,v4
        BNE      |L000ee8.J9.revarp_broadcastclientaddrs|
        ADD      a2,v1,#4
        MOV      v5,a2
        ADD      a1,v2,#&e
        MOV      a3,#4
        BL       memcpy
        MOV      a2,v5
        ADD      a1,v2,#&18
        MOV      a3,#4
        BL       memcpy
        MOV      a1,#0
        STRB     a1,[v2,#&1b]
        TEQ      v1,#0
        BNE      |L000ef8.J12.revarp_broadcastclientaddrs|
|L000ed4.J13.revarp_broadcastclientaddrs|
        MOV      a2,v3
        MOV      a1,v6
        MOV      lr,pc
        LDR      pc,[v6,#&50]
        B        |L000f0c.J18.revarp_broadcastclientaddrs|
|L000ee8.J9.revarp_broadcastclientaddrs|
        LDR      v1,[v1,#&24]
        TEQ      v1,#0
        BNE      |L000e94.J6.revarp_broadcastclientaddrs|
        B        |L000ed4.J13.revarp_broadcastclientaddrs|
|L000ef8.J12.revarp_broadcastclientaddrs|
        MOV      a3,sp
        MOV      a2,v3
        MOV      a1,v4
        MOV      lr,pc
        LDR      pc,[v4,#&34]
|L000f0c.J18.revarp_broadcastclientaddrs|
        LDMDB    fp,{v1-v6,fp,sp,pc}^

        IMPORT  in_netof
        IMPORT  icmp_error
request_netmask
        MOV      ip,sp
        STMDB    sp!,{v1-v4,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        LDR      a4,[pc, #L000448-.-8]
        LDR      ip,[sl,#-0]
        ADD      a4,ip,a4
        MOV      a1,a4
        MOV      a3,#0
        MOV      a2,#&70
        MOV      lr,pc
        LDR      pc,[a4,#&3c]
        TEQ      a1,#0
        LDMEQDB  fp,{v1-v4,fp,sp,pc}^
        MOV      a2,#2
        STRB     a2,[a1,#&18]
        LDR      a2,[a1,#&14]
        LDR      a3,[a1,#&10]
        ADD      a2,a3,a2
        SUB      a2,a2,#&14
        STR      a2,[a1,#8]
        MOV      a2,#&14
        STR      a2,[a1,#&c]
        LDR      a2,[a1,#8]
        ADD      v2,a1,a2
        LDR      a1,[v2,#0]
        BIC      a1,a1,#&f0
        ORR      a1,a1,#&40
        STR      a1,[v2,#0]
        LDR      a1,[v2,#0]
        BIC      a1,a1,#&f
        ORR      a1,a1,#5
        MOV      v3,#0
        STR      a1,[v2,#0]
        STRB     v3,[v2,#1]
        MOV      a1,#&14
        BL       htons
        STRB     a1,[v2,#2]
        MOV      a1,a1,ASR #8
        STRB     a1,[v2,#3]
        STRB     v3,[v2,#4]
        STRB     v3,[v2,#5]
        STRB     v3,[v2,#6]
        STRB     v3,[v2,#7]
        MOV      a1,#&ff
        STRB     a1,[v2,#8]
        STRB     a1,[v2,#9]
        STRB     v3,[v2,#&a]
        STRB     v3,[v2,#&b]
        LDR      a1,[v1,#&64]
        STR      a1,[v2,#&10]
        BL       in_netof
        MVN      a2,#0
        BL       in_makeaddr
        STR      a1,[v2,#&c]
        MOV      a1,#&30
        LDR      v4,[pc, #L00101c-.-8]
        LDR      ip,[sl,#-0]
        ADD      v4,ip,v4
        MOV      a4,v1
        STR      a1,[v4,#0]
        MOV      a1,v2
        MOV      a3,#0
        MOV      a2,#&11
        BL       icmp_error
        STR      v3,[v4,#0]
        LDMDB    fp,{v1-v4,fp,sp,pc}^
L00101c
        IMPORT  send_flags
        DCD     send_flags

        IMPORT  strlen
setriscosvar
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        SUB      sp,sp,#&50
        STR      a1,[sp,#&28]
        STR      a2,[sp,#&2c]
        MOV      a1,a2
        BL       strlen
        ADD      a1,a1,#1
        STR      a1,[sp,#&30]
        CMP      a1,#1
        BGT      |L001054.J4.setriscosvar|
|L001050.J8.setriscosvar|
        LDMDB    fp,{fp,sp,pc}^
|L001054.J4.setriscosvar|
        MOV      a1,#0
        STR      a1,[sp,#&34]
        STR      a1,[sp,#&38]
        MOV      a3,sp
        ADD      a2,sp,#&28
        MOV      a1,#&24
        ADD      a1,a1,#&20000
        BL       _kernel_swi
        B        |L001050.J8.setriscosvar|

        IMPORT  sprintf
inet_ntoa
        MOV      ip,sp
        STMDB    sp!,{a1-a4}
        STMDB    sp!,{v1,fp,ip,lr,pc}
        SUB      fp,ip,#&14
        ADD      a1,fp,#4
        LDRB     a2,[a1,#3]
        AND      a4,a2,#&ff
        LDRB     a2,[a1,#2]
        AND      a3,a2,#&ff
        STMDB    sp!,{a3,a4}
        LDRB     a2,[a1,#1]
        AND      a4,a2,#&ff
        LDRB     a1,[a1,#0]
        AND      a3,a1,#&ff
        LDR      v1,[pc, #L0010d0-.-8]
        LDR      ip,[sl,#-0]
        ADD      v1,ip,v1
        MOV      a1,v1
        ADD      a2,pc,#L0010d4-.-8
        BL       sprintf
        MOV      a1,v1
        LDMDB    fp,{v1,fp,sp,pc}^
L0010d0
        DCD     |x$dataseg|+&24
L0010d4
        DCB     &25,&64,&2e,&25
        DCB     &64,&2e,&25,&64
        DCB     &2e,&25,&64,&00

left_alt_is_pressed
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        SUB      sp,sp,#&50
        MOV      a1,#&79
        STR      a1,[sp,#&28]
        MOV      a1,#&85
        STR      a1,[sp,#&2c]
        MOV      a3,sp
        ADD      a2,sp,#&28
        MOV      a1,#6
        ADD      a1,a1,#&20000
        BL       _kernel_swi
        LDR      a1,[sp,#4]
        LDMDB    fp,{fp,sp,pc}^

right_alt_is_pressed
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        SUB      sp,sp,#&50
        MOV      a1,#&79
        STR      a1,[sp,#&28]
        MOV      a1,#&88
        STR      a1,[sp,#&2c]
        MOV      a3,sp
        ADD      a2,sp,#&28
        MOV      a1,#6
        ADD      a1,a1,#&20000
        BL       _kernel_swi
        LDR      a1,[sp,#4]
        LDMDB    fp,{fp,sp,pc}^

        AREA |C$$data|,DATA

|x$dataseg|

        EXPORT  whoamiaddr
whoamiaddr
        DCD     &00000000

        EXPORT  boot_tries
boot_tries
        DCD     &00000000

        EXPORT  kernel_escape_seen
kernel_escape_seen
        DCD     &00000000
        DCD     &0f0f0a0a
        DCD     &003c1e14

        EXPORT  whoamimask
whoamimask
        DCD     &00000000

BOOTPclient
        DCD     &00000044

BOOTPserver
        DCD     &00000043

revarp
        DCD     &00000001
        %       16
        DCD     &00000000

        EXPORT  udpstat
        AREA udpstat,COMMON,NOINIT
        % 12

        EXPORT  udb
        AREA udb,COMMON,NOINIT
        % 60

        EXPORT  icmpstat
        AREA icmpstat,COMMON,NOINIT
        % 184

        AREA ip_id,COMMON,NOINIT
        % 2

        EXPORT  ipq
        AREA ipq,COMMON,NOINIT
        % 28

        EXPORT  ipstat
        AREA ipstat,COMMON,NOINIT
        % 48

        EXPORT  ipintrq
        AREA ipintrq,COMMON,NOINIT
        % 20

        EXPORT  in_ifaddr
        AREA in_ifaddr,COMMON,NOINIT
        % 4

        EXPORT  rtstat
        AREA rtstat,COMMON,NOINIT
        % 12

        EXPORT  rtnet
        AREA rtnet,COMMON,NOINIT
        % 256

        EXPORT  rthost
        AREA rthost,COMMON,NOINIT
        % 256

        EXPORT  selwait
        AREA selwait,COMMON,NOINIT
        % 4

        EXPORT  boothowto
        AREA boothowto,COMMON,NOINIT
        % 4

        EXPORT  wantin
        AREA wantin,COMMON,NOINIT
        % 4

        EXPORT  panicstr
        AREA panicstr,COMMON,NOINIT
        % 4

        EXPORT  noproc
        AREA noproc,COMMON,NOINIT
        % 4

        EXPORT  swapdev_vp
        AREA swapdev_vp,COMMON,NOINIT
        % 4

        EXPORT  vm_sw_dev
        AREA vm_sw_dev,COMMON,NOINIT
        % 2

        EXPORT  dumplo
        AREA dumplo,COMMON,NOINIT
        % 4

        EXPORT  dumpdev
        AREA dumpdev,COMMON,NOINIT
        % 2

        EXPORT  rootvp
        AREA rootvp,COMMON,NOINIT
        % 4

        EXPORT  rootdev
        AREA rootdev,COMMON,NOINIT
        % 2

        EXPORT  rasize
        AREA rasize,COMMON,NOINIT
        % 4

        EXPORT  rablock
        AREA rablock,COMMON,NOINIT
        % 4

        EXPORT  updlock
        AREA updlock,COMMON,NOINIT
        % 4

        EXPORT  nswap
        AREA nswap,COMMON,NOINIT
        % 4

        EXPORT  physmem
        AREA physmem,COMMON,NOINIT
        % 4

        EXPORT  maxmem
        AREA maxmem,COMMON,NOINIT
        % 4

        EXPORT  curpri
        AREA curpri,COMMON,NOINIT
        % 1

        EXPORT  kmapwnt
        AREA kmapwnt,COMMON,NOINIT
        % 1

        EXPORT  runrun
        AREA runrun,COMMON,NOINIT
        % 4

        EXPORT  runout
        AREA runout,COMMON,NOINIT
        % 1

        EXPORT  runin
        AREA runin,COMMON,NOINIT
        % 1

        EXPORT  mpid
        AREA mpid,COMMON,NOINIT
        % 4

        EXPORT  nswdev
        AREA nswdev,COMMON,NOINIT
        % 4

        EXPORT  nchrdev
        AREA nchrdev,COMMON,NOINIT
        % 4

        EXPORT  nblkdev
        AREA nblkdev,COMMON,NOINIT
        % 4

        EXPORT  cpuspeed
        AREA cpuspeed,COMMON,NOINIT
        % 4

        END
