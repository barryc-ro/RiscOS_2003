; generated by Norcroft RISC OS ARM C vsn 5.06 (Acorn Computers Ltd) [Feb 16 1995]

        AREA |C$$code|, CODE, READONLY
|x$codeseg|

        EXPORT  u_init
u_init
        LDR      a1,[pc, #L000028-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a2,[pc, #L00002c-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        STR      a1,[a2,#0]
        MOV      a2,#0
        STR      a2,[a1,#4]!
        MOVS     pc,lr
L000028
        DCD     proc
L00002c
        DCD     u

        EXPORT  pfind
pfind
        MOV      a1,a1,LSL #16
        MOV      a1,a1,ASR #16
        MOVS     pc,lr

        EXPORT  generate_event
        EXPORT  gsignal
gsignal
        B        generate_event

        EXPORT  psignal
psignal
        B        generate_event

        IMPORT  _kernel_swi
generate_event
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        SUB      sp,sp,#&28
        SUBS     a1,a1,#1
        BPL      |L000064.J4.generate_event|
|L00005c.J5.generate_event|
        MOV      a1,#0
        B        |L0000b8.J19.generate_event|
|L000064.J4.generate_event|
        TEQ      a2,#&d
        MOVEQ    a2,#3
        BEQ      |L000088.J6.generate_event|
        TEQ      a2,#&10
        MOVEQ    a2,#2
        BEQ      |L000088.J6.generate_event|
        TEQ      a2,#&17
        BNE      |L00005c.J5.generate_event|
        MOV      a2,#1
|L000088.J6.generate_event|
        MOV      a3,#&13
        STR      a1,[sp,#8]
        STR      a2,[sp,#4]
        STR      a3,[sp,#0]
        MOV      a3,sp
        MOV      a2,sp
        MOV      a1,#&22
        ADD      a1,a1,#&20000
        BL       _kernel_swi
        TEQ      a1,#0
        BEQ      |L00005c.J5.generate_event|
        MVN      a1,#0
|L0000b8.J19.generate_event|
        LDMDB    fp,{fp,sp,pc}^

        EXPORT  rsignal
rsignal
        MOV      ip,sp
        STMDB    sp!,{v1,fp,ip,lr,pc}
        SUB      fp,ip,#4
        SUB      sp,sp,#&28
        SUBS     a1,a1,#1
        LDMIB    fp,{v1,lr}
        LDR      ip,[fp,#&c]
        BPL      |L0000e4.J4.rsignal|
|L0000dc.J5.rsignal|
        MOV      a1,#0
        B        |L00010c.J11.rsignal|
|L0000e4.J4.rsignal|
        STMIA    sp,{a1-v1,lr}
        STR      ip,[sp,#&18]
        MOV      a3,sp
        MOV      a2,sp
        MOV      a1,#&1d
        ADD      a1,a1,#&60000
        BL       _kernel_swi
        TEQ      a1,#0
        BEQ      |L0000dc.J5.rsignal|
        MVN      a1,#0
|L00010c.J11.rsignal|
        LDMDB    fp,{v1,fp,sp,pc}^

        EXPORT  calleverytick
calleverytick
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      a2,#&1c
        STR      a1,[sp,#-&24]!
        STR      a2,[sp,#-4]!
        LDR      a1,[pc, #L000154-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a1,[a1,#0]
        STR      a1,[sp,#8]
        MOV      a3,sp
        MOV      a2,sp
        MOV      a1,#&1f
        ADD      a1,a1,#&20000
        BL       _kernel_swi
        LDMDB    fp,{fp,sp,pc}^
L000154
        IMPORT  module_wsp
        DCD     module_wsp

        EXPORT  removetickerevent
removetickerevent
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      a2,#&1c
        STR      a1,[sp,#-&24]!
        STR      a2,[sp,#-4]!
        LDR      a1,[pc, #L000154-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a1,[a1,#0]
        STR      a1,[sp,#8]
        MOV      a3,sp
        MOV      a2,sp
        MOV      a1,#&20
        ADD      a1,a1,#&20000
        BL       _kernel_swi
        LDMDB    fp,{fp,sp,pc}^

        EXPORT  init_callout
init_callout
        MOV      a1,#0
        LDR      a2,[pc, #L0001fc-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        STR      a1,[a2,#&f4]
        LDR      a3,[pc, #L000200-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        STR      a1,[a3,#&c]!
        LDR      a3,[pc, #L000204-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a1,#1
        STR      a3,[a2,#&dc]
        LDR      a2,[a2,#&f0]
        CMP      a2,#1
        MOVLES   pc,lr
|L0001e0.J4.init_callout|
        ADD      a4,a3,a1,LSL #4
        SUB      ip,a4,#&10
        ADD      a1,a1,#1
        CMP      a1,a2
        STR      a4,[ip,#&c]!
        BLT      |L0001e0.J4.init_callout|
        MOVS     pc,lr
L0001fc
        DCD     |x$dataseg|
L000200
        DCD     calltodo
L000204
        DCD     callout

        IMPORT  setsoftnet
        EXPORT  tick_handler
tick_handler
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      a1,#0
        LDR      a2,[pc, #L000200-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        LDR      a2,[a2,#&c]
        TEQ      a2,#0
        BEQ      |L000278.J11.tick_handler|
|L000230.J4.tick_handler|
        LDR      a3,[a2,#0]
        CMP      a3,#0
        BLE      |L000248.J7.tick_handler|
        SUBS     a3,a3,#1
        STR      a3,[a2,#0]
        BEQ      |L00025c.J12.tick_handler|
|L000248.J7.tick_handler|
        LDR      a2,[a2,#&c]
        TEQ      a2,#0
        BNE      |L000230.J4.tick_handler|
        TEQ      a1,#0
        BEQ      |L000278.J11.tick_handler|
|L00025c.J12.tick_handler|
        LDR      a1,[pc, #L000280-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a2,[a1,#0]
        ORR      a2,a2,#8
        STR      a2,[a1,#0]
        BL       setsoftnet
|L000278.J11.tick_handler|
        MOV      a1,#1
        LDMDB    fp,{fp,sp,pc}^
L000280
        IMPORT  netisr
        DCD     netisr

        EXPORT  callo_handler
callo_handler
        MOV      ip,sp
        STMDB    sp!,{v1,v2,fp,ip,lr,pc}
        SUB      fp,ip,#4
        LDR      v2,[pc, #L000200-.-8]
        LDR      ip,[sl,#-0]
        ADD      v2,ip,v2
        LDR      v1,[pc, #L0001fc-.-8]
        LDR      ip,[sl,#-0]
        ADD      v1,ip,v1
|L0002a8.J4.callo_handler|
        LDR      a1,[v2,#&c]
        TEQ      a1,#0
        LDMEQDB  fp,{v1,v2,fp,sp,pc}^
        LDR      a2,[a1,#0]
        CMP      a2,#0
        LDMGTDB  fp,{v1,v2,fp,sp,pc}^
        ADD      a4,a1,#8
        LDMIA    a4,{a2,a4}
        LDR      a3,[a1,#4]
        STR      a4,[v2,#&c]
        LDR      a4,[v1,#&dc]
        STR      a4,[a1,#&c]
        STR      a1,[v1,#&dc]
        MOV      a1,a3
        MOV      lr,pc
        MOV      pc,a2
        B        |L0002a8.J4.callo_handler|

        IMPORT  splimp
        EXPORT  panic
        IMPORT  splx
        EXPORT  timeout
timeout
        MOV      ip,sp
        STMDB    sp!,{v1-v4,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v3,a1
        MOV      v2,a2
        MOV      v1,a3
        BL       splimp
        MOV      v4,a1
        CMP      v1,#0
        MOVLE    v1,#1
        LDR      a2,[pc, #L0001fc-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        LDR      a1,[a2,#&dc]
        TEQ      a1,#0
        BNE      |L000340.J6.timeout|
        ADD      a1,pc,#L00035c-.-8
        BL       panic
        MOV      a1,v4
        LDMDB    fp,{v1-v4,fp,sp,lr}
        B        splx
|L000340.J6.timeout|
        LDR      a3,[a1,#&c]
        STR      a3,[a2,#&dc]!
        STMIB    a1,{v2,v3}
        LDR      a3,[pc, #L000200-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        B        |L000380.J9.timeout|
L00035c
        DCB     &74,&69,&6d,&65
        DCB     &6f,&75,&74,&20
        DCB     &74,&61,&62,&6c
        DCB     &65,&20,&6f,&76
        DCB     &65,&72,&66,&6c
        DCB     &6f,&77,&00,&00
|L000374.J8.timeout|
        CMP      a4,#0
        SUBGT    v1,v1,a4
        MOV      a3,a2
|L000380.J9.timeout|
        LDR      a2,[a3,#&c]
        TEQ      a2,#0
        BEQ      |L000398.J12.timeout|
        LDR      a4,[a2,#0]
        CMP      a4,v1
        BLT      |L000374.J8.timeout|
|L000398.J12.timeout|
        STR      a1,[a3,#&c]!
        STR      a2,[a1,#&c]
        STR      v1,[a1,#0]
        TEQ      a2,#0
        LDRNE    a1,[a2,#0]
        SUBNE    a1,a1,v1
        STRNE    a1,[a2,#0]
        MOV      a1,v4
        LDMDB    fp,{v1-v4,fp,sp,lr}
        B        splx

        EXPORT  untimeout
untimeout
        MOV      ip,sp
        STMDB    sp!,{v1,v2,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v2,a1
        MOV      v1,a2
        BL       splimp
        LDR      a3,[pc, #L000200-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        LDR      a2,[a3,#&c]
        TEQ      a2,#0
        BEQ      |L000458.J5.untimeout|
|L0003f0.J4.untimeout|
        LDR      a4,[a2,#8]
        TEQ      a4,v2
        LDREQ    a4,[a2,#4]
        TEQEQ    a4,v1
        BNE      |L000448.J7.untimeout|
        LDR      a4,[a2,#&c]
        TEQ      a4,#0
        BEQ      |L000424.J10.untimeout|
        LDR      ip,[a2,#0]
        CMP      ip,#0
        LDRGT    lr,[a4,#0]
        ADDGT    ip,lr,ip
        STRGT    ip,[a4,#0]
|L000424.J10.untimeout|
        LDR      a4,[a2,#&c]
        STR      a4,[a3,#&c]!
        LDR      a3,[pc, #L0001fc-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        LDR      a4,[a3,#&dc]
        STR      a4,[a2,#&c]
        STR      a2,[a3,#&dc]!
        B        |L000458.J5.untimeout|
|L000448.J7.untimeout|
        MOV      a3,a2
        LDR      a2,[a2,#&c]
        TEQ      a2,#0
        BNE      |L0003f0.J4.untimeout|
|L000458.J5.untimeout|
        LDMDB    fp,{v1,v2,fp,sp,lr}
        B        splx

        IMPORT  __rt_sdiv
        EXPORT  hzto
hzto
        MOV      ip,sp
        STMDB    sp!,{v1,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,#0
        LDR      a2,[a1,#0]
        CMP      a2,#0
        ADDGT    ip,a2,a2,LSL #3
        ADDGT    a2,ip,a2,LSL #4
        ADDGT    v1,v1,a2,LSL #2
        LDR      a2,[a1,#4]!
        CMP      a2,#0
        MOVGT    a1,#&710
        ADDGT    a1,a1,#&2000
        BLGT     __rt_sdiv
        ADDGT    v1,a1,v1
        MOV      a1,v1
        LDMDB    fp,{v1,fp,sp,pc}^

        IMPORT  memcpy
        EXPORT  uiomove
uiomove
        MOV      ip,sp
        STMDB    sp!,{v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v3,a1
        MOV      v2,a2
        MOV      v4,a3
        MOV      v1,a4
        B        |L00054c.J5.uiomove|
|L0004c4.J4.uiomove|
        LDR      v6,[v1,#0]
        LDR      v5,[v6,#4]
        TEQ      v5,#0
        BNE      |L0004f0.J6.uiomove|
        LDR      a1,[v1,#0]
        ADD      a1,a1,#8
        STR      a1,[v1,#0]
        LDR      a1,[v1,#4]
        SUB      a1,a1,#1
        STR      a1,[v1,#4]
        B        |L00054c.J5.uiomove|
|L0004f0.J6.uiomove|
        CMP      v5,v2
        MOVHI    v5,v2
        TEQ      v4,#0
        MOV      a3,v5
        MOVNE    a1,v3
        LDRNE    a2,[v6,#0]
        MOVEQ    a2,v3
        LDREQ    a1,[v6,#0]
        BL       memcpy
        LDR      a1,[v6,#0]
        ADD      a1,a1,v5
        STR      a1,[v6,#0]
        LDR      a1,[v6,#4]
        SUB      a1,a1,v5
        STR      a1,[v6,#4]!
        LDR      a1,[v1,#&10]
        SUB      a1,a1,v5
        STR      a1,[v1,#&10]
        LDR      a1,[v1,#8]
        ADD      a1,a1,v5
        ADD      v3,v3,v5
        SUB      v2,v2,v5
        STR      a1,[v1,#8]
|L00054c.J5.uiomove|
        CMP      v2,#0
        BLE      |L000560.J14.uiomove|
        LDR      a1,[v1,#&10]
        TEQ      a1,#0
        BNE      |L0004c4.J4.uiomove|
|L000560.J14.uiomove|
        MOV      a1,#0
        LDMDB    fp,{v1-v6,fp,sp,pc}^

        EXPORT  copyout
copyout
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      a4,a2
        MOV      a2,a1
        MOV      a1,a4
        BL       memcpy
        MOV      a1,#0
        LDMDB    fp,{fp,sp,pc}^

        EXPORT  copyin
copyin
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      a4,a2
        MOV      a2,a1
        MOV      a1,a4
        BL       memcpy
        MOV      a1,#0
        LDMDB    fp,{fp,sp,pc}^

        EXPORT  ovbcopy
ovbcopy
        CMP      a1,a2
        BCS      |L0005ec.J4.ovbcopy|
        ADD      a1,a1,a3
        ADD      a2,a2,a3
        MOV      a4,a3
        SUB      a3,a3,#1
        CMP      a4,#0
        MOVLES   pc,lr
|L0005d0.J6.ovbcopy|
        LDRB     a4,[a1,#-1]!
        STRB     a4,[a2,#-1]!
        MOV      a4,a3
        SUB      a3,a3,#1
        CMP      a4,#0
        BGT      |L0005d0.J6.ovbcopy|
        MOVS     pc,lr
|L0005ec.J4.ovbcopy|
        MOV      a4,a3
        SUB      a3,a3,#1
        CMP      a4,#0
        MOVLES   pc,lr
|L0005fc.J11.ovbcopy|
        LDRB     a4,[a1],#1
        STRB     a4,[a2],#1
        MOV      a4,a3
        SUB      a3,a3,#1
        CMP      a4,#0
        BGT      |L0005fc.J11.ovbcopy|
        MOVS     pc,lr

panic
        LDR      a2,[pc, #L00067c-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        LDR      a3,[a2,#0]
        TEQ      a3,#0
        MOVNES   pc,lr
        MOV      a3,#1
        STR      a3,[a2,#0]
        MOV      a2,#0
        LDR      a3,[pc, #L000680-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
|L000648.J6.panic|
        LDRB     a4,[a1,#0]
        STRB     a4,[a3,a2]
        LDRB     a4,[a1,#0]
        MOV      a4,a4,LSL #24
        MOVS     a4,a4,ASR #24
        ADD      a1,a1,#1
        BEQ      |L000670.J9.panic|
        ADD      a2,a2,#1
        CMP      a2,#&1e
        BLT      |L000648.J6.panic|
|L000670.J9.panic|
        MOV      a1,#0
        STRB     a1,[a3,a2]
        MOVS     pc,lr
L00067c
        IMPORT  paniced
        DCD     paniced
L000680
        IMPORT  panicbuf
        DCD     panicbuf

        EXPORT  sleeptabinit
sleeptabinit
        LDR      a2,[pc, #L0006c0-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        MOV      a1,a2
        ADD      a3,a2,#&60
        MOV      a2,#0
        CMP      a3,a1
        BLS      |L0006b8.J5.sleeptabinit|
|L0006a4.J4.sleeptabinit|
        STR      a2,[a1,#0]
        STR      a2,[a1,#4]
        ADD      a1,a1,#8
        CMP      a3,a1
        BHI      |L0006a4.J4.sleeptabinit|
|L0006b8.J5.sleeptabinit|
        MOV      a1,#0
        MOVS     pc,lr
L0006c0
        DCD     stable

        IMPORT  escape_seen
        IMPORT  user_mode_donothing
        EXPORT  sleep
sleep
        MOV      ip,sp
        STMDB    sp!,{v1,v2,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        BL       splimp
        LDR      a2,[pc, #L0006c0-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        MOV      v2,a2
        ADD      a2,a2,#&60
        CMP      a2,v2
        BLS      |L000764.J5.sleep|
|L0006f4.J4.sleep|
        LDR      a3,[v2,#0]
        TEQ      a3,#0
        BNE      |L000758.J7.sleep|
        STR      v1,[v2,#0]
        MOV      v1,#0
        STR      v1,[v2,#4]
        BL       splx
        LDR      a1,[v2,#4]
        TEQ      a1,#0
        BNE      |L000748.J10.sleep|
|L00071c.J9.sleep|
        BL       escape_seen
        TEQ      a1,#0
        BEQ      |L000738.J12.sleep|
        STR      v1,[v2,#0]
        STR      v1,[v2,#4]!
        MOV      a1,#1
        LDMDB    fp,{v1,v2,fp,sp,pc}^
|L000738.J12.sleep|
        BL       user_mode_donothing
        LDR      a1,[v2,#4]
        TEQ      a1,#0
        BEQ      |L00071c.J9.sleep|
|L000748.J10.sleep|
        STR      v1,[v2,#0]
        STR      v1,[v2,#4]!
        MOV      a1,#0
        LDMDB    fp,{v1,v2,fp,sp,pc}^
|L000758.J7.sleep|
        ADD      v2,v2,#8
        CMP      a2,v2
        BHI      |L0006f4.J4.sleep|
|L000764.J5.sleep|
        BL       splx
        ADD      a1,pc,#L000778-.-8
        BL       panic
        MVN      a1,#0
        LDMDB    fp,{v1,v2,fp,sp,pc}^
L000778
        DCB     &73,&6c,&65,&65
        DCB     &70,&00,&00,&00

        EXPORT  wakeup
wakeup
        LDR      a3,[pc, #L0006c0-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a2,a3
        ADD      a3,a3,#&60
        CMP      a3,a2
        MOVLSS   pc,lr
        MOV      a4,#1
|L0007a0.J4.wakeup|
        LDR      ip,[a2,#0]
        TEQ      ip,a1
        BNE      |L0007b8.J7.wakeup|
        LDR      ip,[a2,#4]
        TEQ      ip,#0
        STREQ    a4,[a2,#4]
|L0007b8.J7.wakeup|
        ADD      a2,a2,#8
        CMP      a3,a2
        BHI      |L0007a0.J4.wakeup|
        MOVS     pc,lr

        EXPORT  imin
imin
        CMP      a1,a2
        MOVGE    a1,a2
        MOVS     pc,lr

        EXPORT  imax
imax
        CMP      a1,a2
        MOVLE    a1,a2
        MOVS     pc,lr

        EXPORT  min
min
        CMP      a1,a2
        MOVCS    a1,a2
        MOVS     pc,lr

        EXPORT  max
max
        CMP      a1,a2
        MOVLS    a1,a2
        MOVS     pc,lr

        EXPORT  ffs
ffs
        MOV      a2,#0
|L0007fc.J4.ffs|
        TST      a1,#1
        ADDNE    a1,a2,#1
        MOVNES   pc,lr
        MOV      a1,a1,ASR #1
        ADD      a2,a2,#1
        CMP      a2,#&20
        BLT      |L0007fc.J4.ffs|
        MOV      a1,#0
        MOVS     pc,lr

        EXPORT  bcopy
bcopy
        MOV      a4,a2
        MOV      a2,a1
        MOV      a1,a4
        B        memcpy

        IMPORT  memcmp
        EXPORT  bcmp
bcmp
        B        memcmp

        IMPORT  memset
        EXPORT  bzero
bzero
        MOV      a3,a2
        MOV      a2,#0
        B        memset

        EXPORT  ntohl
        EXPORT  htonl
htonl
        B        ntohl

        EXPORT  ntohs
        EXPORT  htons
htons
        B        ntohs

ntohl
        MOV      a3,a1,LSL #24
        AND      a2,a1,#&ff00
        ORR      a3,a3,a2,LSL #8
        AND      a2,a1,#&ff0000
        ORR      a2,a3,a2,LSR #8
        AND      a1,a1,#&ff000000
        ORR      a1,a2,a1,LSR #24
        MOVS     pc,lr

ntohs
        AND      a2,a1,#&ff
        MOV      a2,a2,LSL #8
        AND      a1,a1,#&ff00
        ORR      a1,a2,a1,ASR #8
        MOVS     pc,lr

        IMPORT  splhi
        IMPORT  splrestore
        EXPORT  _insque
_insque
        MOV      ip,sp
        STMDB    sp!,{v1,v2,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v2,a1
        MOV      v1,a2
        BL       splhi
        TEQ      v1,#0
        TEQNE    v2,#0
        LDMEQDB  fp,{v1,v2,fp,sp,lr}
        BEQ      splrestore
        LDR      a2,[v1,#0]
        TEQ      a2,#0
        STRNE    v2,[a2,#4]!
        LDR      a2,[v1,#0]
        STR      a2,[v2,#0]
        STR      v2,[v1,#0]
        STR      v1,[v2,#4]!
        LDMDB    fp,{v1,v2,fp,sp,lr}
        B        splrestore

        EXPORT  _remque
_remque
        MOV      ip,sp
        STMDB    sp!,{v1,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        BL       splhi
        TEQ      v1,#0
        LDMEQDB  fp,{v1,fp,sp,lr}
        BEQ      splrestore
        LDR      a2,[v1,#4]
        TEQ      a2,#0
        LDRNE    a3,[v1,#0]
        STRNE    a3,[a2,#0]
        LDR      a2,[v1,#0]
        TEQ      a2,#0
        LDRNE    a3,[v1,#4]!
        STRNE    a3,[a2,#4]!
        LDMDB    fp,{v1,fp,sp,lr}
        B        splrestore

        EXPORT  callback
callback
        MOV      ip,sp
        STMDB    sp!,{fp,ip,lr,pc}
        SUB      fp,ip,#4
        STR      a1,[sp,#-&28]!
        LDR      a1,[pc, #L000154-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a1,[a1,#0]
        STR      a1,[sp,#4]
        MOV      a3,sp
        MOV      a2,sp
        MOV      a1,#&54
        ADD      a1,a1,#&20000
        BL       _kernel_swi
        TEQ      a1,#0
        MOVEQ    a1,#0
        MVNNE    a1,#0
        LDMDB    fp,{fp,sp,pc}^

        AREA |C$$data|,DATA

|x$dataseg|

        EXPORT  u
u
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000

        EXPORT  proc
proc
        DCD     &00000000
        DCD     &00000000

        EXPORT  callout
callout
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        %       176

        EXPORT  callfree
callfree
        DCD     &00000000

        EXPORT  calltodo
calltodo
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000

        EXPORT  ncallout
ncallout
        DCD     &0000000c

        EXPORT  callo_pending
callo_pending
        DCD     &00000000

        EXPORT  stable
stable
        DCD     &00000000
        DCD     &00000000
        %       88

        EXPORT  cpuspeed
        AREA cpuspeed,COMMON,NOINIT
        % 4

        END
