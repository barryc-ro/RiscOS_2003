/* -*-C-*-
 *
 * $Header$
 * $Source$
 *
 * Copyright(c) 1994 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.4  95/11/14  12:07:55  pwain
 * Check in for JDavies@csd
 *
 * Added AUN_state flag to control AUN REVARP behaviour.
 *
 * Revision 1.3  95/03/31  11:57:32  kwelton
 * Debugging control is now done via CMOS RAM, therefore it is no longer
 * necessary to initialise debugctrl.
 *
 * Revision 1.2  95/03/01  10:06:13  kwelton
 * Added declaration and initialiser of struct ipstat.
 *
 * Revision 1.1  94/12/02  11:38:13  kwelton
 * Initial revision
 *
 */
#include "debug.h"

#include "sys/param.h"
#include "sys/socket.h"
#include "sys/domain.h"
#include "sys/mbuf.h"
#include "sys/kernel.h"

#include "net/route.h"
#include "net/if.h"
#include "net/raw_cb.h"

#include "netinet/in_systm.h"
#include "netinet/in.h"
#include "netinet/in_var.h"
#include "netinet/ip.h"
#include "netinet/ip_var.h"
#include "netinet/ip_icmp.h"
#include "netinet/icmp_var.h"
#include "netinet/in_pcb.h"
#include "netinet/tcp.h"
#include "netinet/tcpip.h"
#include "netinet/tcp_timer.h"
#include "netinet/tcp_var.h"
#include "netinet/udp.h"
#include "netinet/udp_var.h"

struct	ifnet *ifnet;

struct rawcb rawcb;
struct  inpcbhead tcb;
struct  inpcbinfo tcbinfo;
struct	tcpstat tcpstat;
struct	udpstat udpstat;
struct	rtstat	rtstat;
struct	radix_node_head *rt_tables[AF_MAX+1];
struct  route_cb route_cb;

/* setsoft */
int callbackflag;
int callbackerr;
int netisr;

/* something not relevant here - it's 4.4ish */
int	max_linkhdr;			/* largest link-level header */
int	max_protohdr;			/* largest protocol header */
int	max_hdr;			/* largest link+protocol header */
int	max_datalen;			/* MHLEN - max_hdr */
struct socket *ip_mrouter;

/* timing variables */
int hz = 100;
int tick = 1000000 / 100;
volatile struct timeval time;

/* debug control */
#ifdef DEBUG
int debugctrl;
#endif

#ifdef __riscos
/* whoami.whoami.c */
/* whether a Net module variant is using us */
int AUN_state = AUN_INACTIVE;
#endif

/* EOF globdata.c */
