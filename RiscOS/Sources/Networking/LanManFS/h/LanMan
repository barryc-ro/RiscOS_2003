/*
*   LANMAN.H - Definitions for main LanMan client module
*
*   Versions
*
*   07-03-94 INH Original, from FSinC
*
*
*/

/* Constants ------------- */

#define FilingSystemName                "LanMan"
#define Our_FS_Number                   102
#define LanMan_SWI_base                 0x49240
#define SWI_LanMan_OmniOp   (LanMan_SWI_base + 0)
#define SWI_LanMan_FreeOp   (LanMan_SWI_base + 1)
#define SWI_LanMan_NameOp   (LanMan_SWI_base + 2)
#define SWI_LanMan_Transact (LanMan_SWI_base + 3)
#define SWI_LanMan_LogonOp  (LanMan_SWI_base + 4)


#define FSControl_AddFilingSystem       12
#define FSControl_SelectFilingSystem    14
#define FSControl_RemoveFilingSystem    16
#define Information_Block_Size          11

#define INFO_SPECIALFIELD               0x80000000
#define INFO_INTERACTIVE                0x40000000
#define INFO_NULLFILENAMES              0x20000000
#define INFO_OPENNONEXISTENT            0x10000000
#define INFO_ARGS_FLUSH                 0x08000000
#define INFO_FILE_TIME                  0x04000000
#define INFO_FUNC_TEMPFS                0x02000000

#define INFO_SUPPORTS_IMAGE             0x00800000
#define INFO_NO_EXPAND_PATH             0x00400000
#define INFO_NO_STORE_PATHS             0x00200000
#define INFO_AVOID_FILE255              0x00100000
#define INFO_AVOID_FILE0                0x00080000
#define INFO_USE_FUNC9                  0x00040000
#define INFO_EXTRA_INFO                 0x00020000


#define Information_Word                (Our_FS_Number|INFO_FILE_TIME)
#define Service_FSRedeclare             0x40
#define Service_ResourceFSStarting      0x000060
#define ASpace                          ' '


#define NBNSIPCMOS0			0x50
#define NBNSIPCMOS1			0xe4
#define NBNSIPCMOS2			0xe5
#define NBNSIPCMOS3			0xe6



/* Misc bits ------------- */

extern const int *Image_RO_Base;


/* C.LanMan exports ------------- */
/*
        These routines get used by the cmhg generated header.
*/

extern _kernel_oserror *LM_Command( char *, int, int, void * );
extern _kernel_oserror *LM_Swi( int, _kernel_swi_regs *, void * );
extern void LM_Service( int, _kernel_swi_regs *, void * );
extern _kernel_oserror *LM_Initialise( char *, int, void * );
extern _kernel_oserror *LM_Finalise( int fatal, int podule, void *pw );

extern int LM_pw;

extern void LM_Boot(void);
extern int RdCMOS(int);

/* S.Interface exports --------------- */

extern void veneer_fsentry_open( void );
extern void veneer_fsentry_getbytes( void );
extern void veneer_fsentry_putbytes( void );
extern void veneer_fsentry_args( void );
extern void veneer_fsentry_close( void );
extern void veneer_fsentry_file( void );
extern void veneer_fsentry_func( void );
extern void veneer_fsentry_gbpb( void );

extern void Free_ServiceRoutine(void);

extern void CollectCallbacks(void);


