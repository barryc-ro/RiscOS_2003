/*  Dallas Unique ID Device

    The Dallas chip was present on some earlier Ethernet podule cards 
    and used to provide a unique MAC address. It is also an option on the
    Boca 2 board although it is very unlikely that it will ever be fitted
    as the Boca 2 system normally stores the MAC address in the OTP
    (One Time Programmable) area of the EEROM device - the same as the
    DeskLite.
    
    The Dallas chip is never fitted to the DeskLite board and if the
    software attempts to read it then machine freezes (note that this
    happened when a DeskLite starts up with a blank OTP area - it
    fell back to reading the Dallas chip).
    
    Since it is unlikely ever to be needed for the EtherI system
    and since it causes a problem on the DeskLite we are disabling the
    Dallas reads completely by setting DALLAS to FALSE.
    
    If you ever need to use the Dallas chip again you can simply set DALLAS
    to TRUE, but note that the If_en file contains code to read the OTP
    area first and only use the Dallas chip if no valid MAC address is 
    found in the OTP area.
    
    Don't confuse this Dallas chip with the Dallas chip fitted to some
    motherboards to provide a unique machine ID. This Dallas chip is
    only used with the EtherI card (typically fitted on the Etheri podule
    card) to provide a MAC address and is quite distinct from the main
    Dallas chip fitted on some motherboards (note that the standard
    DeskLite and Boca 2 boards have neither Dallas chip fitted).
    
    Paul Skirrow, 26th August 1998
*/

#define DALLAS 0

#if DALLAS

#ifndef _DALLAS_H
#define _DALLAS_H

struct dallas_id {
    unsigned char d_family_code;
    unsigned char d_id[6];
    unsigned char d_crc;
    
    int  d_status;
};

/* Dallas access control */

struct dallas_physical {
    void (*dallas_pull_down_bus) 	( struct dallas_physical *dp );
    void (*dallas_pull_up_bus) 		( struct dallas_physical *dp );
    int  (*dallas_read_bus) 		( struct dallas_physical *dp );
    
    void *sc;
};

#define TRSTL	(500)		/* 480us <= TRSTL <= infinity */
#define TRSTH	(500)		/* 480us <= TRSTH <= infinity */
#define TPDH	(22)		/* 15us  <= TPHD  < 60us */
#define TSLOT	(90)		/* 60us  <= TSLOT < 120us */
#define TLOW0	(90)		/* 60us  <= TLOW0 < 120us */
#define TLOW1	(7)		/* 1us   <= TLOW1 < 15us */
#define TLOWR	(7)		/* 1us   <= TLOWR < 15us */
#define TRDV	(15)		/* 15us */
#define TREC	(1)

/* Commands the dallas module provides */
extern int dallas_id_read ( struct dallas_physical *dp, struct dallas_id *d );

#endif
#endif
