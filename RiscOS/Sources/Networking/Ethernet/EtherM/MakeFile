#	Project NetFax, Gideon and Daytona+
#	Acorn Computers Ltd.
#
#	FILE:		MakeFile
#	AUTHOR:		Richard D. Warren
#	VERSION:	0.01 for RISC OS
#
#	OVERVIEW
#	========
#	Makefile for ANT's EtherM DCI4 Myson device driver
#	Makefile based on BAL's Dialler MakeFile and original ANT makefile
#	
#	HISTORY
#	=======
#	27/01/98	0.01	RDW	Initial version

#
# Paths
#
EXP_HDR	=	<export$dir>
LDIR = 		Resources.<Locale>

#
# Generic options:
#
MKDIR =		cdir
AS =		objasm
CC =		cc
CMHG =		cmhg
CP =		copy
LD =		link
RM =		remove
MODSQZ =	modsqz
WIPE =		-wipe

FLAVOUR=        -D${MACHINE} -DACORN -DNETFAX -DMYSON -DRISCOS -DDEBUG=0 -DVERBOSEDEBUG=0 -UACTIVE_DEBUG -DDO_ASSERTS=1

ASMFLAGS =	-depend !Depend ${THROWBACK}
CFLAGS =	-depend !Depend ${THROWBACK} ${INCLUDES} $(FLAVOUR) -strict -ffah 
CMHGFLAGS =	-depend !Depend ${THROWBACK} -D${MACHINE}_BUILD -DACORN -DNETFAX ${INCLUDES} -p
CPFLAGS =	~cfr~v
WFLAGS =	~c~v

#
# Libraries
#
CLIB =		CLIB:o.stubs
RLIB =		RISCOSLIB:o.risc_oslib
RSTUBS =	RISCOSLIB:o.rstubs
ROMSTUBS =	RISCOSLIB:o.romstubs
ROMCSTUBS =	RISCOSLIB:o.romcstubs
ABSSYM  =	RISC_OSLib:o.c_AbsSym

#
# Include files
#
INCLUDES =	-ITCPIPLibs:,C:

#
# Program specific options:
#
COMPONENT =	EtherM
RAMTARGET =	rm.EtherM
ROMTARGET =	aof.EtherM



#
# Export Paths for Messages module
#


OBJS =\
 o.cmhghdr\
 o.central\
 o.cmos\
 o.data\
 o.dataxfer\
 o.iface\
 o.locate\
 o.misc\
 o.protocol\
 o.selftest\
 o.statextra\
 o.statsupp\
 o.miscasm\
 o.support\
 o.xferasm\
 o.fragttl


#
# Rule patterns
#
.SUFFIXES:	.o .h .s .c .cmhg
.c.o:;		${CC} ${CFLAGS}       -c -zM -zps1 -o $@ $<
.s.o:;		${AS} ${ASMFLAGS}     -o $@ $<
.cmhg.o:;	${CMHG} ${CMHGFLAGS}  -o $@ $<
.cmhg.h:;	${CMHG} ${CMHGFLAGS}  -d $@ $<


all: ${RAMTARGET}
        @echo ${COMPONENT}: all complete

#
# Main rules:
#
ram: ${RAMTARGET}
        @echo ${COMPONENT}: all complete

rom: ${ROMTARGET}
        @echo ${COMPONENT}: rom module built

export:
        @echo ${COMPONENT}: export complete

install_rom: ${ROMTARGET}
        ${CP} ${ROMTARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @echo ${COMPONENT}: rom module installed

resources:
        @echo ${COMPONENT}: resource files copied

clean:
	${WIPE} aof.* ${WFLAGS}
	${WIPE} o.* ${WFLAGS}
	${WIPE} rm.* ${WFLAGS}
	${WIPE} linked ${WFLAGS}
	${WIPE} map ${WFLAGS}
	${RM} ${RAMTARGET}
	@echo ${COMPONENT}: cleaned

#
# Target 
#
${RAMTARGET}: ${OBJS} ${CLIB}
	${LD} -rmf -o $@ ${OBJS} ${LIBS} ${CLIB}
	${MODSQZ} $@

#
# ROM Target (re-linked at ROM Image build time)
#
${ROMTARGET}: ${OBJS} ${ROMCSTUBS}
	${LD} -o $@ -aof ${OBJS} ${LIBS} ${ROMCSTUBS}

#
# Final link for the ROM Image (using given base address)
#
rom_link:
        ${MKDIR} linked
        ${MKDIR} map
        ${LD} -o linked.${COMPONENT} -map -bin -base ${ADDRESS} ${ROMTARGET} ${ABSSYM} > map.${COMPONENT}
        truncate map.${COMPONENT} linked.${COMPONENT}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @echo ${COMPONENT}: rom_link complete


rm.DiallerD: ${OBJSD} ${CLIB}
	${LD} -rmf -o $@ ${OBJSD} ${LIBS} ${CLIB}

# Dynamic dependencies:
