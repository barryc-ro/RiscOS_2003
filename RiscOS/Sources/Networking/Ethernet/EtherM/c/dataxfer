/*1 dataxfer.c -*-C-*- */

#include "all.h"

/*****************************************************************************
 *
 * Buffer memory is handled with two basic routine types. The first positions
 * the pointer in buffer memory (ready for reading or writing, as appropriate)
 * and the second perform accesses (reads or writes).
 *
 * setup_write:
 *
 * Get ready for writing to the specified address in memory.
 */

extern void setup_write(pifstr *pifp, u_int ptr, u_int len)
{
#if VERBOSEDEBUG

    debugstr("setup_write: ptr ");
    debughex(ptr);
    debugstr(" len ");
    debughexcr(len);

#endif

    /* 0.31: clear pending complete interrupt */
    pifp->chip->ISR = my_isr_RDC;

    pifp->chip->RSAR0 = LO(ptr);
    pifp->chip->RSAR1 = HI(ptr);

    pifp->chip->RBCR0 = LO(len);
    pifp->chip->RBCR1 = HI(len);

    pifp->chip->CR = my_cr_RWRITE;
}

/*****************************************************************************
 *
 * setup_read:
 *
 * Get ready for reading from memory.
 */

extern void setup_read(pifstr *pifp, u_int ptr, u_int len)
{
#if VERBOSEDEBUG
    debugstr("setup_read_tx: ptr");
    debughex(ptr);
    debugstr(" len");
    debughexcr(len);
#endif

    /* 0.31: clear pending complete interrupt */
    pifp->chip->ISR = my_isr_RDC;

    pifp->chip->RSAR0 = LO(ptr);
    pifp->chip->RSAR1 = HI(ptr);

    pifp->chip->RBCR0 = LO(len);
    pifp->chip->RBCR1 = HI(len);

    pifp->chip->CR = my_cr_RREAD;
}

extern void kill_dma( pifstr *pifp )
{
    microsecond_delay(10);

    pifp->chip->CR = my_cr_RABORT;
    pifp->chip->RBCR0 = 0;
    pifp->chip->RBCR1 = 0;
    pifp->chip->ISR = my_isr_RDC;

    microsecond_delay(40);
}
