/* -*-C-*-
 *
 * dci4stat.h
 *
 * (C) Copyright ANT Limited 1994. All rights reserved.
 *
 * Contacts:
 *
 * Postal:  ANT Ltd., PO BOX 300, Cambridge, CB1 2EG, UK.
 * Voice:   01223 567808
 * Fax:     01223 567801
 * Email:   Support@ant.co.uk
 *
 * Author:  Borris
 *
 * History:
 *
 *
 */
/*
 * Copyright (C) 1994 ANT Limited., PO BOX 300, Cambridge, England.
 * All rights reserved.
 *
 * Redistribution and use in source code and executable binary forms are
 * permitted provided that: (1) source distributions retain this entire
 * copyright notice and comment, and (2) distributions including
 * executable binaries contain the following acknowledgement:
 *
 * ``This product includes software developed by ANT Limited and its
 * contributors.  Copyright (C) ANT Limited 1994.''
 *
 * and also in the documentation and other materials provided with the
 * distribution and in all advertising materials mentioning features or
 * use of this software. Neither the name of ANT Limited nor the names of
 * its contributors may be used to endorse or promote products derived
 * from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSER.
 *
 * NOT INTENDED FOR USE IN LIFE CRITICAL APPLICATIONS.
 *
 */

#ifndef included_dci4stat_h
#define included_dci4stat_h

#ifndef included_dci4_h
#include "dci4.h"
#endif

/*****************************************************************************/


#define Service_StatisticEnumerate      0xa1

#define DCI4_STATISTIC_VERSION     	(1 * 100 + 0)

/*****************************************************************************/

#define SA_DESCRIBE	0u
#define SA_READ		1u

/* Structure describing a statistic supplier */
/* Service_StatisticEnumerate generates a list of such structures */

typedef struct spctl
{
    struct spctl       *next;           /* Next structure in list */
    unsigned int        i_version;      /* Interface version */
    unsigned long       features;       /* Combination of SF_ values */
    unsigned int        swinumber;      /* The SWI SA_DESCRIBE/SA_READ use */
    unsigned int        max_stat;       /* Highest stat number (inclusive) */
    unsigned int        type;           /* Acorn assigned supplier type */
    unsigned int        s_version;      /* Supplier version */
    char               *module;         /* Module name (short one) */
    char               *title;          /* Title string - short */
    char               *description;    /* Descriptive string - long */
    unsigned char       reset[8];       /* Unique for each invocation */
} dci4_spctl;


/*****************************************************************************/


/* Statistic supplier type enumeration for the type field of a dci4_spctl */

#define SPT_GENERAL_SUPPLIER 0   /* Use this if no other suitable type */
#define SPT_NETWORK_PROTOCOL 1   /* A DCI4 protocol module */
#define SPT_NETWORK_DRIVER   2   /* A DCI4 device driver module */
#define SPT_MBUF_MANAGER     3   /* The DCI4 mbuf manager module */


/*****************************************************************************/


/* Structure describing a statistic */

typedef struct stdesc
{
    unsigned int            type;           /* ST_ series */
    unsigned int            format;         /* SxF_ series */
    unsigned int            presentation;   /* SxP_ series */
    unsigned int            size;           /* Measured in bytes */
    unsigned int            volatility;     /* SV_ series */
    char                   *name;           /* String is static */
    unsigned int            name_tag;       /* See specification */
    unsigned int            spare;          /* Unused. Always zero */
} dci4_stdesc;


/*****************************************************************************/


/* Values for the type field of an dci4_stdesc structure */

#define ST_UNUSED           0       /* Statistic is reserved and has no value */
#define ST_BOOLEAN          1
#define ST_STRING           2
#define ST_INTEGER8         3
#define ST_INTEGER16        4
#define ST_INTEGER32        5
#define ST_INTEGER64        6


/*****************************************************************************/


/* Values for the volatility field of an dci4_stdesc structure */

#define SV_STATIC           0       /* Constant per invocation */
#define SV_VARIABLE         1       /* Unlikely to have changed in 5 minutes */
#define SV_VOLATILE         2       /* Can change very rapidly */


/*****************************************************************************/


/* Format values for a boolean statistic */

#define SBF_INVERTED        1

/* Presentation values for a boolean statistic */

#define SBP_ON_OFF          0
#define SBP_YES_NO          1
#define SBP_TRUE_FALSE      2
#define SBP_ALWAYS_NEVER    3
#define SBP_ONE_ZERO        4


/*****************************************************************************/


/* Format values for an integer statistic */

#define SIF_UNSIGNED        0x01
#define SIF_BIGENDIAN       0x02

/* Presentation values for an integer statistic */

#define SIP_HEXADECIMAL     0
#define SIP_DECIMAL         1
#define SIP_DOTTED          2


/*****************************************************************************/


/* Values describing the format of a string */

#define SSF_ZEROTERM        0

/* Values describing the presentation of a string */

#define SSP_LITERAL         0


/*****************************************************************************/


typedef struct
{
    struct spctl       *next;
    unsigned int        scall;		/* 0xa1 */
    args_PAD2;
} args_StatisticEnumerate;

typedef struct
{
    unsigned int        action;
    unsigned int        first;
    unsigned int        last;
    unsigned char      *ptr;
    unsigned int        bytes;
    unsigned int        done;
    unsigned int        used;
    args_PAD7;
} args_StatisticAction;


/*****************************************************************************/

#endif /* included_dci4stat_h */

/* EOF dci4stat.h */
