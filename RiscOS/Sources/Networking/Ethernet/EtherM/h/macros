/*1 macros.h */

#ifndef included_macros_h
#define included_macros_h

/*
 * These macros tend to assume the existence of some standard variables.
 */

#define CONTROLLER_TYPE		(TST(8005) ? 0x8005 : (TST(8004) ? 0x80c04 : 0xdead))

#if HANDLE_PODULES
#define ITERATE_OVER_ALL_PCARDS    for (pifp = all_pcards; pifp != NULL; pifp = pifp->all_next)
#define ITERATE_OVER_ACTIVE_PCARDS for (pifp = active_pcards; pifp != NULL; pifp = pifp->active_next)
#else
/* netcards -- there can be only one */
#define ITERATE_OVER_ALL_PCARDS	  if ((pifp = all_pcards) != NULL)
#define ITERATE_OVER_ACTIVE_PCARDS if ((pifp = active_pcards) != NULL)
#endif

/* there could be multiple vcards whichever, though */
#define ITERATE_OVER_ALL_VCARDS    for (vifp = all_vcards; vifp != NULL; vifp = vifp->all_next)
#define ITERATE_OVER_ACTIVE_VCARDS for (vifp = active_vcards; vifp != NULL; vifp = vifp->active_next)

#define ITERATE_OVER_ALL_CLIENTS  for (clnt = vifp->clients; clnt != NULL; clnt = clnt->next)

#define DISABLE_IRQS              const old_irqs = disable_irqs()

#define RESTORE_IRQS              restore_irqs(old_irqs)


/* Given a packet pointer, suggests where to set the write protect limit */

#define limitfor(v,npp)		v = (npp >> 8) -1; if (v < (RXSTART >> 8)) v = 0xff

/* Requires additional set of brackets to macro debug see precisely one argument, eg debug(("%s","two")); */

#if DEBUG
#define debug(args)               printf args
#else
#define debug(args)
#endif


#endif /* included_macros_h */
