/*
 * Program:	PrintFS.c - core application routines
 *
 * Project:	!Omni OmniClient(tm) project
 *
 * Author:	Nick Smith
 *              ANT Limited
 *              Cambridge
 *              Internet: nas@ant.co.uk
 *
 * Date:	21 October 1994
 * Last Edited:	9 November 1994
 *
 * Copyright 1994 by ANT Limited
 */

#include <stdlib.h>

#include <kernel.h>
#include <swis.h>

#include <Desk/Time.h>

#include <DebugLib/DebugLib.h>

#include "Filer.h"
#include "PrintFS.h"
#include "_Veneers.h"

/* _Veneers.s */
extern void veneer_fsentry_open(void);
extern void veneer_fsentry_getbytes(void);
extern void veneer_fsentry_putbytes(void);
extern void veneer_fsentry_args(void);
extern void veneer_fsentry_close(void);
extern void veneer_fsentry_file(void);
extern void veneer_fsentry_func(void);
extern void veneer_fsentry_gbpb(void);

/* Base.s */
extern const int Image__RO_Base;		/* To get at our module base */


/* Filing system flags */
#define fs_SPECIAL	(1U << 31)
#define fs_NULLNAME	(1 << 29)
#define fs_FORCEOPEN	(1 << 28)
#define fs_NODIRS	(1 << 21)
#define fs_READONLY	(1 << 16)
#define fs_MAXFILES 	(0 << 8)
#define fs_NUMBER	0x68		/* Acorn allocated */

#define fsword  	(fs_NUMBER | fs_MAXFILES | fs_FORCEOPEN | fs_NULLNAME | fs_SPECIAL | \
			 fs_NODIRS)

extern char fsname[] = "OmniPrint";



/*  Delare a filing system.
 */
extern _kernel_oserror *FS_Declare(void *private_word)
{
  unsigned int fsblock[11];

  dprintf (("", "FS_Declare: %x\n", (int) private_word));
  /* Filing system information block. PRM 2-522 */
  fsblock[0] = (int)fsname			- Image__RO_Base;
  fsblock[1] = (int)"OmniPrint"			- Image__RO_Base;
  fsblock[2] = (int)&veneer_fsentry_open	- (int)Image__RO_Base;
  fsblock[3] = (int)&veneer_fsentry_getbytes	- (int)Image__RO_Base;
  fsblock[4] = (int)&veneer_fsentry_putbytes	- (int)Image__RO_Base;
  fsblock[5] = (int)&veneer_fsentry_args	- (int)Image__RO_Base;
  fsblock[6] = (int)&veneer_fsentry_close	- (int)Image__RO_Base;
  fsblock[7] = (int)&veneer_fsentry_file	- (int)Image__RO_Base;
  fsblock[8] = (unsigned int) /* fsword; */  0xB0280068;
  fsblock[9] = (int)&veneer_fsentry_func	- (int)Image__RO_Base;
  fsblock[10] = (int)&veneer_fsentry_gbpb	- (int)Image__RO_Base;

  return (_swix (OS_FSControl, _INR (0, 3),
                 OS_FSControl_AddFilingSystem,
                 Image__RO_Base,
                 (int) &fsblock[0] - (int)Image__RO_Base,
                 private_word));
}


/*  Remove a filing system.
 */
extern _kernel_oserror *FS_Remove(void)
{
  dprintf (("", "FS_Remove:\n"));
  return (_swix (OS_FSControl, _INR (0, 1), OS_FSControl_RemoveFilingSystem, fsname));
}

