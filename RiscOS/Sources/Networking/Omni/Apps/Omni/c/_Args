/*
 * Program:	_Args.c - core application routines
 *
 * Project:	!Omni OmniClient(tm) project
 *
 * Author:	Nick Smith
 *              ANT Limited
 *              Cambridge
 *              Internet: nas@ant.co.uk
 *
 * Date:	23 October 1994
 * Last Edited:	3 January 1996
 *
 * Copyright 1994,1996 by ANT Limited
 */

#include <stddef.h>

#include <kernel.h>
#include <swis.h>

#include <DebugLib/DebugLib.h>

#include "Filer.h"
#include "OmniClient.h"
#include "Print.h"
#include "_Errs.h"
#include "_Veneers.h"


/*  We don't need to support any OS_Args calls (except WriteExtent which
 *  can abort a print job).
 */
extern _kernel_oserror *fsentry_args(FSEntry_Args_Parameter *parm)
{
  _kernel_oserror *err = NULL;
  print_record *pr = NULL;

  dprintf (("", "fsentry_args: %x\n", parm->reason));
  switch (parm->reason)
  {
    case FSEntry_Args_Reason_ReadSequentialFilePointer:
    case FSEntry_Args_Reason_WriteSequentialFilePointer:
    case FSEntry_Args_Reason_ReadFileExtent:
      parm->arg.write_zeros.start = 0;
      break;

    case FSEntry_Args_Reason_FlushFileBuffer:
    case FSEntry_Args_Reason_ReadFileDateStamp:
      /* Don't know anything about this - just return 0 in R2 & R3 */
      parm->arg.write_zeros.start = 0;
      parm->arg.write_zeros.number = 0;
      break;

    case FSEntry_Args_Reason_WriteFileExtent:
      /* if (parm->handle <= 0) return(NULL); */
      if ((pr = PrintFind(parm->handle, -1, -1, -1)) == NULL)
        return(&mb_nfserr_BadParameters);
      if (parm->arg.extent != 0)
      {
        int sent;

        /* Probably setting file extent of buffered file, prior to close */
        dprintf (("", "fsentry_args: set extent to %d\n", parm->arg.extent));
        dprintf (("", "fsentry_args: buf %p len %d\n", pr->buf, pr->bufused));
        if (!pr->buf || !pr->bufused) break;

        /* Get number of bytes already sent in print job */
        _swix (pr->client_id, _INR (0, 1) | _OUT (2),
               14, pr->pjob_id,
               &sent);
        dprintf (("", "fsentry_args: client reports %d bytes already sent\n", sent));
        if ((sent < parm->arg.extent) && (sent + pr->bufused > parm->arg.extent))
        {
          dprintf (("", "fsentry_args: asking to set extent less than total length %d\n", sent + pr->bufused));
          pr->bufused = parm->arg.extent - sent;
        }
      }
      else
      {
        /* Call SWI Omni_AbortJob if Extent == 0 and a valid print handle */
        dprintf (("", "fsentry_args: abort job request\n"));
        err = _swix (Omni_AbortJob, _IN (0), pr->print_id);

        /* If no error, call SWI Omni_ClearJob, because we have no interest in ongoing status
         * reports.
         */
        if (!err)
        {
          err = _swix (Omni_ClearJob, _IN (0), pr->print_id);
        }
      }
      break;

    case FSEntry_Args_Reason_EnsureFileSize:
      /* No nothing */
      break;

    default:
      err = &mb_nfserr_DummyFSDoesNothing;
      dprintf (("", "fsentry_args: not supported\n"));
      break;
  }
  return(err);
}
