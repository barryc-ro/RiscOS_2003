/*
 * Program:	_Func.c - core application routines
 *
 * Project:	!Omni OmniClient(tm) project
 *
 * Author:	Nick Smith
 *              ANT Limited
 *              Cambridge
 *              Internet: nas@ant.co.uk
 *
 * Date:	23 October 1994
 * Last Edited:	23 December 1994
 *
 * Copyright 1994 by ANT Limited
 */

#include <kernel.h>
#include <swis.h>

#include <DebugLib/DebugLib.h>

#include "Filer.h"
#include "_Errs.h"
#include "_Veneers.h"


/*  No need to support all these OS_FSControl calls (except ShutDown)
 */
extern _kernel_oserror *fsentry_func(FSEntry_Func_Parameter *parm)
{
  _kernel_oserror *err = NULL;
  print_record *pr = (print_record *) print_anchor.next;

  if (!parm) return(&mb_nfserr_DummyFSDoesNothing);
  dprintf (("", "fsentry_func: %p\n", parm));
  dprintf (("", "fsentry_func: %x\n", parm->reason));
  switch (parm->reason)
  {
/*    case FSEntry_Func_Reason_SetCurrentDirectory:
      dprintf (("", "fsentry_func: set csd '%s' '%s'\n",
        parm->first_parameter.name_1 ? parm->first_parameter.name_1 : "",
        parm->special_field_1 ? parm->special_field_1 : ""));
      break;
 */
    case FSEntry_Func_Reason_ShutDown:
      /* Look for any active jobs with open file handles */
      while (pr != NULL)
      {
        if (pr->handle > 0)
        {
          /* Abort jobs by calling OS_Args */
          err = _swix (OS_Args, _INR (0, 2),
                       FSEntry_Args_Reason_WriteFileExtent,
                       pr->handle,
                       0);
          if (err) return(err);
        }
        pr = (print_record *) pr->header.next;
      }
      break;

    case FSEntry_Func_Reason_ReadDirectoriesAndInformation:
      parm->third_parameter.read_number = 0;
      parm->read_offset = -1;
      break;

    default:
      dprintf (("", "fsentry_func: not supported\n"));
      err = &mb_nfserr_DummyFSDoesNothing;
      break;
  }
  return(err);
}
