/*
 * Program:	_Close.c - core application routines
 *
 * Project:	!Omni OmniClient(tm) project
 *
 * Author:	Nick Smith
 *              ANT Limited
 *              Cambridge
 *              Internet: nas@ant.co.uk
 *
 * Date:	23 October 1994
 * Last Edited:	3 January 1996
 *
 * Copyright 1994-1996 by ANT Limited
 */

#include <kernel.h>
#include <swis.h>

#include <DebugLib/DebugLib.h>

#include "Filer.h"
#include "OmniClient.h"
#include "Print.h"
#include "_Errs.h"
#include "_Veneers.h"

/*  Close an open file.
 */
extern _kernel_oserror *fsentry_close(FSEntry_Close_Parameter *parm)
{
  _kernel_oserror *err = NULL;
  print_record *pr = NULL;

  dprintf (("", "fsentry_close: %x\n", parm->handle));
  if ((pr = PrintFind(parm->handle, -1, -1, -1)) == NULL) return(&mb_nfserr_BadParameters);

  /* Is there outstanding buffered data to be sent? */
  if (pr->buf && pr->bufused)
  {
    dprintf (("", "fsentry_close: need to send %d bytes\n", pr->bufused));
    err = _swix (Omni_SendJob, _INR (0, 2), pr->print_id, pr->buf, pr->bufused);
    pr->bufused = 0;
  }

  /* Call SWI Omni_EndJob */
  err = _swix (Omni_EndJob, _IN (0), pr->print_id);
  dprintf (("", "fsentry_close: endjob = %x\n", (int) err));

  /* If no error, call SWI Omni_ClearJob, because we have no interest in ongoing status
   * reports.
   */
  if (!err)
  {
    err = _swix (Omni_ClearJob, _IN (0), pr->print_id);
    dprintf (("", "fsentry_close: clearjob = %x\n", (int) err));
  }

  dprintf (("", "fsentry_close: err = %x\n", (int) err));
  return(err);
}
