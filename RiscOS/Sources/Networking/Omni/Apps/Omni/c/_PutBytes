/*
 * Program:	_PutBytes.c - core application routines
 *
 * Project:	!Omni OmniClient(tm) project
 *
 * Author:	Nick Smith
 *              ANT Limited
 *              Cambridge
 *              Internet: nas@ant.co.uk
 *
 * Date:	23 October 1994
 * Last Edited:	23 October 1994
 *
 * Copyright 1994 by ANT Limited
 */

#include "kernel.h"
#include "Hdrs.h"


/*  Write bytes to open file.
 */
extern _kernel_oserror *fsentry_putbytes(FSEntry_PutBytes_Parameter *parm)
{
  _kernel_oserror *err = NULL;
  print_record *pr = NULL;
  _kernel_swi_regs r;
  FSEntry_GBPB_Parameter *p = (FSEntry_GBPB_Parameter *) parm;

  /* Check for a valid print_id word */
  TRACE1("fsentry_putbytes: %x\n", p->handle);
  TRACE2("start %x len %x ", (int) p->address, p->number);
  TRACE1("off %x\n", p->sequential_file_pointer);
  /* return(&mb_nfserr_DummyFSDoesNothing); */

  if (!(pr = PrintFind(p->handle, -1, -1, -1))) return(&mb_nfserr_BadParameters);
  if ((int) p->address == -1) return(&mb_nfserr_BadParameters);

  /* Do we have buffered data to send? */
  if (pr->buf && pr->bufused)
  {
    /* Send data with SWI Omni_SendJob */
    TRACE1("fsentry_putbytes: need to send %d bytes\n", pr->bufused); 
    r.r[0] = pr->print_id;
    r.r[1] = (int) pr->buf;
    r.r[2] = pr->bufused;
    err = _kernel_swi(XOS_Bit | Omni_SendJob, &r,&r);
  }
  
  /* Buffer new data */
  pr->bufused = 0;
  if (p->number > pr->buflen)
  {
    rma_free(pr->buf);
    pr->buf = rma_alloc(p->number); 
    if (pr->buf) pr->buflen = p->number;
      else pr->buflen = 0;
  }
  if (p->number <= pr->buflen)
  {
    memcpy(pr->buf, p->address, p->number);
    pr->bufused = p->number;
  }

  /* Return error status */
  return(err);
}
