/*
 * Program:	Omni.c - core task routines
 *
 * Project:	!Omni OmniClient(tm) project
 *
 * Author:	Nick Smith
 *              ANT Limited
 *              Cambridge
 *              Internet: nas@ant.co.uk
 *
 * Date:	11 July 1994
 * Last Edited:	19 October 1994
 *
 * Copyright 1994 by ANT Limited
 */

#include <Desk/Event.h>
#include <Desk/SWI.h>
#include <Desk/Time.h>

#include "Hdrs.h"
#include "CoreFini.h"
#include "ExtLib.h"

extern void serviceomni(int num);


/*  atexit() handler - called before final task exit.
 */
extern void close(void)
{
  TRACE("main:close\n");
  corefini();
  Desk_Hourglass_Smash();
  taskhandle = 0;
}


/*  Actual task code.
 */
extern int main(int argc, char *argv[])
{
  TRACE("main:program start\n");

  /* Do Application Initialisation */
  if (!coreinit()) return(1);

  Desk_Error2_Try
  {
    /* Extra parameters string */
    if (argc > 1)
    {
      char buf[256];
      int loop;
      strcpy(buf, "");
      for (loop = 1; loop < argc; loop++)
      {
        strcat(buf, argv[loop]);
        strcat(buf, " ");
      }
      MountCLI(buf, Desk_TRUE);
    }

    /* Main event handling loop. Let Desk_Event_ do all the work for us! */
    TRACE("main:start polling\n");
    while (!all_done)
    {
      Event_Poll();
    }


    /* Finally, we just exit. The atexit() handlers will clean up after us */
    TRACE("main:normal termination\n");
    if (all_done > 1)
    {
      /* Kill off all modules and ourselves */
      TRACE("main:exitanddie termination\n");
      serviceomni(1);
      Desk_SWI(4,0, OS_ExitAndDie, 0,0,0,"OmniClient");
      TRACE("main:exitanddie - why aren't we dead?!\n");
    }
    else
    {
      /* Clean up some RMA lists */
      mlist_clean();
    }
  }
  Desk_Error2_Catch
  {
    Desk_os_error *e = Desk_Error2_ConvertToOS2 ();
    Desk_Error_Report(e->errnum, e->errmess);
  }
  Desk_Error2_EndCatch
  return(0);
}
