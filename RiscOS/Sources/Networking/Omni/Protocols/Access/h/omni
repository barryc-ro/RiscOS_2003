/* -*-C-*-
 *
 * omni.h   General OmniClient interface
 *
 * (C) ANT Limited 1994. All rights reserved.
 *
 * Borris, December 1994.
 */

#ifndef included_omni_h
#define included_omni_h

#include "swipad.h"

/*****************************************************************************/

#define SWI_OMNI        0x004a200
#define ERR_OMNI        0x080d100
#define Service_OmniAction    0xa0

#define Omni_EnumerateMounts		(SWI_OMNI + 0)
#define Omni_RegisterClient		(SWI_OMNI + 1)
#define Omni_DeregisterClient		(SWI_OMNI + 2)
#define Omni_MessageLookup	       	(SWI_OMNI + 3)
#define Omni_ConvertClientToAcorn	(SWI_OMNI + 4)
#define Omni_ConvertAcornToClient	(SWI_OMNI + 5)
#define Omni_ConvertTime		(SWI_OMNI + 6)
#define Omni_Printers			(SWI_OMNI + 7)
#define Omni_CreateJob			(SWI_OMNI + 8)
#define Omni_SendJob			(SWI_OMNI + 9)
#define Omni_EndJob			(SWI_OMNI + 10)
#define Omni_AbortJob			(SWI_OMNI + 11)
#define Omni_JobStatus			(SWI_OMNI + 12)
#define Omni_ClearJob			(SWI_OMNI + 13)
#define Omni_PrinterInfo		(SWI_OMNI + 14)
#define Omni_EnumerateJobs		(SWI_OMNI + 15)

/*****************************************************************************/

typedef struct
{
    int                 client_id;
    int                 type;
    args_PAD2;
} args_OmniEnumerateMounts;

/*****************************************************************************/

#define OMNI_SUPPORT_FILING     0x0001u     /* Network filing system module */
#define OMNI_REQUIRE_USERID     0x0002u     /* Filing needs a userid */
#define OMNI_REQUIRE_PASSWORD   0x0004u     /* Filing needs a password */
#define OMNI_REQUIRE_MOUNTPATH  0x0008u     /* Filing needs a mount path */
#define OMNI_REQUIRE_AUTHENT    0x0010u     /* Filing needs authentication string */
#define OMNI_NOTREQUIRE_MOUNT	0x0020u	    /* Filing does NOT require a mount name */
#define OMNI_PSEUDO_SERVER	0x0040u     /* A special authenticator */

#define OMNI_SUPPORT_PRINTING   0x0100u     /* Network printing module */
#define OMNI_PRINT_PASSWORD     0x0200u     /* Printing needs a password */
#define OMNI_PRINT_MEASURED     0x0400u     /* Need length in advance */

typedef struct
{
    int                 client_id;
    unsigned int        client_flags;
    char *              sprite_name;
    char *              client_name;
    char *              client_description;
    unsigned int        site_word;
    char *              fs_name;
    args_PAD7;
} args_OmniRegisterClient;

/*****************************************************************************/

typedef struct
{
    int                 client_id;
    args_PAD1;
} args_OmniDeregisterClient;

/*****************************************************************************/

typedef struct
{
    int                 message_id;
    char *              parm;
    args_PAD2;
} args_OmniMessageLookup;

/*****************************************************************************/

typedef struct
{
    int                 client_id;
    char *              client_leafname;
    char *              acorn_filename;
    char *              flags;
} args_OmniConvertClientToAcorn;

/*****************************************************************************/

typedef struct
{
    int                 client_id;
    char *              acorn_leafname;
    char *              client_filename;
    char *              flags;
    int                 type;
} args_OmniConvertAcornToClient;

/*****************************************************************************/

typedef struct
{
    unsigned int        src_format:4,
                        dst_format:4,
                                  :0;
    char *              src_block;
    char *              dst_block;
} args_OmniConvertTime;

/*****************************************************************************/

typedef struct
{
    int                 centiseconds;
    int                 seconds;
    int                 minutes;
    int                 hours;
    int                 day_in_month;
    int                 month_in_year;
    int                 year;
} generic_time;

/*****************************************************************************/

typedef struct
{
    int                 action;
    int                 scall;
    args_PAD2;
} args_OmniServiceCall;

/*****************************************************************************/

#define OmniOp_Mount                                        0x0
#define OmniOp_Dismount                                     0x1
#define OmniOp_FreeSpace                                    0x2
#define OmniOp_EnumerateServers                             0x3
#define OmniOp_EnumerateMounts                              0x4
#define OmniOp_EnumerateActiveMounts                        0x5
#define OmniOp_OpenRoot                                     0x6
#define OmniOp_OpenUserRoot                                 0x7
#define OmniOp_GetInactiveMountInfo                         0x8
#define OmniOp_GetActiveMountInfo                           0x9
#define OmniOp_CreatePrintJob                               0xa
#define OmniOp_SendPrintJob                                 0xb
#define OmniOp_EndPrintJob                                  0xc
#define OmniOp_AbortPrintJob                                0xd
#define OmniOp_GetPrintJobInfo                              0xe
#define OmniOp_ClearPrintJobs                               0xf
#define OmniOp_EnumeratePrinters                            0x10
#define OmniOp_Reset                           		    0x11

/*****************************************************************************/

typedef struct
{
    int                 reason;
union
{
    char *              server;         /* fullname */
    struct server *     mount_id;       /* return ID or NULL */
} u;
    char *              user_id;        /* optional */
    char *              password;       /* optional */
    char *              mount_name;
    char *              mount_path;     /* optional */
    char *              authentator;    /* optional */
    args_PAD7;
} args_OmniOpMount;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    struct server *     mount_id;
    args_PAD2;
} args_OmniOpDismount;

/*****************************************************************************/

typedef struct
{
    int                 reason;
union
{
    struct server *     mount_id;
    unsigned int        user_free;
} u;
    unsigned int        user_used;
    unsigned int        total_size;
    args_PAD4;
} args_OmniOpFreeSpace;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    char *              buffer;
    uint                size;
    struct server *     server_id;
    args_PAD4;
} args_OmniOpEnumerateServers;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    char *              buffer;
    uint                size;
    struct server *     mount_id;       /* 0 to start */
    struct server *     server_id;      /* maybe 0 - in which case */
    char *              server_name;    /* this will be fullname string */
    args_PAD6;
} args_OmniOpEnumerateMounts;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    char *              buffer;
    uint                size;
    struct server *     mount_id;
    args_PAD4;
} args_OmniOpEnumerateActiveMounts;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    struct server *     mount_id;
    args_PAD2;
} args_OmniOpOpenRoot;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    struct server *     mount_id;
    args_PAD2;
} args_OmniOpOpenUserRoot;

/*****************************************************************************/

typedef struct
{
    int                 reason;
union
{
    struct server *     mount_id;
    uint                flags;
} u;
    char *              mount_path;
    args_PAD3;
} args_OmniOpGetInactiveMountInfo;

/*****************************************************************************/

typedef struct
{
    int                 reason;
union
{
    struct server *     mount_id;
    char *              server;
} u;
    char *              user_id;
    char *              mount_name;
    char *              mount_path;
    char *              authenticator;
    struct server *     server_id;
    args_PAD7;
} args_OmniOpGetActiveMountInfo;

/*****************************************************************************/

#endif /* included_omni_h */

/* eof omni.h */
