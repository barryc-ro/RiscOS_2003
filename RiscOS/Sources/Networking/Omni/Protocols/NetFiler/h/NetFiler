/*
 * NetFiler.h
 * Header file for NetFiler client module - part of the Omni project
 */

#ifndef __NETFILER_H
#define __NETFILER_H

#ifndef Desk_bool
#define Desk_bool  int
#define Desk_bool_TRUE  1
#define Desk_bool_FALSE 0
#endif


/* Should be Acorn-allocated SWI chunk number */
#define omni_ERRBASE			0x080d100
#define omni_SWIBASE			0x04a200
#define Service_OmniAction      	0x0000a0
#define client_SWIBASE			0x04a540		/* Acorn allocated */
#define client_ERRBASE			omni_ERRBASE + 64	/* Allocated 32 errors */

#define Omni_EnumerateMounts		omni_SWIBASE + 0
#define Omni_RegisterClient		omni_SWIBASE + 1
#define Omni_DeregisterClient		omni_SWIBASE + 2
#define Omni_MessageLookup		omni_SWIBASE + 3
#define Omni_ConvertClientToAcorn 	omni_SWIBASE + 4
#define Omni_ConvertAcornToClient 	omni_SWIBASE + 5
#define Omni_ConvertTime		omni_SWIBASE + 6
#define Omni_TraceFile			omni_SWIBASE + 17

#define XOS_Bit                 	0x020000
#define Desk_OS_Module               	0x00001e
#define Desk_OS_Find               		0x00000d
#define Desk_OS_Args               		0x000009
#define Desk_OS_GBPB               		0x00000c
#define NetFS_EnumerateFSList		0x040049
#define NetFS_EnumerateFSContexts	0x04004e
#define NetFS_EnableCache		0x040051
#define NetFS_ReadFSNumber		0x040040
#define NetFS_UpdateFSList		0x04004D
#define NetPrint_ListServers		0x040207
#define Econet_DoImmediate		0x040017

#define Desk_OS_ServiceCall          	0x000030
#define Service_ResourceFSStarting 	0x000060
#define Service_NetFS			0x000055
#define Service_NetFSDying              0x00005f


/* Site-license limit value */
#define client_LIMIT		0

/* Features flag word - see SWI Omni_RegisterClient for details */
#define flag_FS             	0x001
#define flag_USER		0x002
#define flag_PW			0x004
#define flag_PATH             	0x008
#define flag_AUTH             	0x010
#define flag_MOUNT		0x020	/* Desk_SWI_Spec 0.997 or later */
#define flag_SPECIAL		0x040	/* Desk_SWI_Spec 0.997 or later */
#define flag_PRINT             	0x100
#define flag_PRINTPW           	0x200
#define flag_PRINTFILE          0x400
#define flag_EXTmask		0x00ff0000
#define flag_EXTshft		16

#define client_FLAGS		flag_FS | flag_USER | flag_PW | flag_PRINT | flag_MOUNT

/* Macros for error reporting */
extern _kernel_oserror  omni_errblk;          	/* Global error block */


/* Struct for client registration - see SWI Omni_RegisterClient for details */
typedef struct
{
  int			client_id;
  int			flags;
  char			sprite[7];
  char  		name[25];
  char  		desc[99];
  int   		site_id;
  char			fsname[16];
} client_rec;

/* Struct for server/mount details - see source for details */
typedef struct
{
  Desk_linklist_header 	header;		/* Link list pointers */
  int			mount_id;
  int   		server_id;
  char			serveraddr[32];
  char			userid[32];
  char			passwd[32];
  char 			mount[32];
} mount_rec;

/* Struct for server/mount list details - see source for details */
typedef struct
{
  Desk_linklist_header 	header;		/* Link list pointers */
  Desk_linklist_header	anchor;		/* Anchor to list of subwindows, or {NULL, NULL} */
  int			mount_id;
  int   		server_id;
  char  		shortname[16];
  char			fullname[32];
  char  		description[64];
} mlist_rec;

/* Struct for printer list details - see source for details */
typedef struct
{
  Desk_linklist_header 	header;		/* Link list pointers */
  char  		printer[24];
  int			flags;
} plist_rec;

/* Struct for printer job */
typedef struct
{
  Desk_linklist_header 	header;		/* Link list pointers */
  int			Desk_print_id;	/* Desk_print_id word */
  int 			pjob_id;	/* pjob_id word */
  int 			status;		/* Local status word (internal copy) */
  int 			time;		/* Monotonic time job was started */
  int			handle;		/* Fileswitch file handle */
} print_rec;

/* Print job status flags */
#define Desk_print_STATUS		0x1
#define Desk_print_mask		0xE
#define Desk_print_PENDING		(1 << 1)
#define Desk_print_CONNECTED		(2 << 1)
#define	Desk_print_SENDING		(3 << 1)
#define Desk_print_COMPLETE		(4 << 1)
#define Desk_print_TEMPERROR		(5 << 1)
#define Desk_print_ERROR		(6 << 1)
#define printer_TIMEOUT		(360000 * 24)  /* 24 hrs timeout */
#define pflagSET(status, flag)	((status & Desk_print_mask) == flag)

extern Desk_linklist_header	mount_anchor;	/* List of active mount records */
extern Desk_linklist_header	mlist_anchor;	/* List of network mount records */
extern Desk_linklist_header	plist_anchor;	/* List of network print records */
extern Desk_linklist_header	Desk_print_anchor;	/* List of active print records */
extern Desk_bool		block_service;	/* Block out the service call? */

extern void Desk_print_clean(void);
extern void plist_clean(void);
extern void mount_clean(void);
extern void mlist_clean(void);

#endif
