/*
 *
 *  Copyright (c) 1999 by Pace Micro Technologies plc. All Rights Reserved.
 *
 *
 * This software is furnished under a license and may be used and copied
 * only in accordance with the terms of such license and with the
 * inclusion of the above copyright notice. This software or any other
 * copies thereof may not be provided or otherwise made available to any
 * other person. No title to and ownership of the software is hereby
 * transferred.
 *
 * The information in this software is subject to change without notice
 * and should not be construed as a commitment by Pace Micro Techonologies
 * plc.
 *
 *
 *		  PROPRIETARY NOTICE
 *
 * This software is an unpublished work subject to a confidentiality agreement
 * and is protected by copyright and trade secret law.  Unauthorized copying,
 * redistribution or other use of this work is prohibited.
 *
 * The above notice of copyright on this source code product does not indicate
 * any actual or intended publication of such source code.
 */

#include "multicaster.h"

/* This file will probably end up calling platform_* functions to obtain
 * configuration information from whatever local source is appropriate.
 * ie. NT registry, a UNIX /etc/something.conf file, a RISC OS Choices: file etc.
 *
 * Most values hard-wired for now
 */

void configure_init(void)
{
}

struct in_addr configure_read_target_address(const char *filename, struct in_addr *interface)
{
        struct in_addr default_address;
        (void) filename;
        (void) interface;

        inet_aton("239.192.0.2", &default_address);
        return default_address;
}

void configure_set_target_address(const char *filename, const char *ip_string)
{
        /* Store away this configuration information one day */
        (void) filename;
        (void) ip_string;
}

int configure_read_multiple_multicaster_threshold(void)
{
        /* Allow two multicasters to transmit the same file on the same
         * interface with different block sizes
         */
        return 2;
}
