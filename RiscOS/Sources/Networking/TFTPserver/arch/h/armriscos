/*
 *
 *  Copyright (c) 1999 by Pace Micro Technologies plc. All Rights Reserved.
 *
 *
 * This software is furnished under a license and may be used and copied
 * only in accordance with the terms of such license and with the
 * inclusion of the above copyright notice. This software or any other
 * copies thereof may not be provided or otherwise made available to any
 * other person. No title to and ownership of the software is hereby
 * transferred.
 *
 * The information in this software is subject to change without notice
 * and should not be construed as a commitment by Pace Micro Techonologies
 * plc.
 *
 *
 *                PROPRIETARY NOTICE
 *
 * This software is an unpublished work subject to a confidentiality agreement
 * and is protected by copyright and trade secret law.  Unauthorized copying,
 * redistribution or other use of this work is prohibited.
 *
 * The above notice of copyright on this source code product does not indicate
 * any actual or intended publication of such source code.
 */
#ifndef multicaster_armriscos_arch_h_included
#define multicaster_armriscos_arch_h_included

/* The architecture file looks after including all the system header files
 * required by the multicaster server
 */
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <limits.h>

#include <sys/types.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <netinet/in.h>
#include <netinet/in_systm.h>
#include <netinet/ip.h>
#include <arpa/tftp.h>
#include <arpa/inet.h>

#include <kernel.h>
#include <swis.h>
#include <socklib.h>


/* The architecture header must define all of the following: */

/* multicast_socket - a type for holding a socket handler */
typedef int multicast_socket;

/* An assignable value for an invalid socket handle */
enum {
        multicaster_INVALID_SOCKET = (multicast_socket) -1
};


#endif
