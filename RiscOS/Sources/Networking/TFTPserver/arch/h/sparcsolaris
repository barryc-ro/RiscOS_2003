/*
 *
 *  Copyright (c) 1999 by Pace Micro Technologies plc. All Rights Reserved.
 *
 *
 * This software is furnished under a license and may be used and copied
 * only in accordance with the terms of such license and with the
 * inclusion of the above copyright notice. This software or any other
 * copies thereof may not be provided or otherwise made available to any
 * other person. No title to and ownership of the software is hereby
 * transferred.
 *
 * The information in this software is subject to change without notice
 * and should not be construed as a commitment by Pace Micro Techonologies
 * plc.
 *
 *
 *		  PROPRIETARY NOTICE
 *
 * This software is an unpublished work subject to a confidentiality agreement
 * and is protected by copyright and trade secret law.  Unauthorized copying,
 * redistribution or other use of this work is prohibited.
 *
 * The above notice of copyright on this source code product does not indicate
 * any actual or intended publication of such source code.
 */
#ifndef multicaster_specific_arch_h_included
#define multicaster_specific_arch_h_included

/* The architecture file looks after including all the system header files
 * required by the multicaster server
 */
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>
#include <stddef.h>
#include <signal.h>
#include <limits.h>
#include <time.h>
#include <errno.h>

#include <sys/types.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <sys/uio.h>
#include <sys/ioctl.h>
#include <sys/filio.h>
#include <sys/sockio.h>
#include <sys/syslog.h>
#include <sys/syscall.h>
/* #include <net/if_dl.h> */
#include <net/if_arp.h>
/* #include <net/if_types.h> */
#include <net/if.h>
#include <netinet/in.h>
#include <netinet/in_systm.h>
#include <netinet/ip.h>
#include <netinet/ip_icmp.h>
#include <netinet/ip_var.h>
#include <netinet/udp.h>
#include <netinet/if_ether.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <unistd.h>

/* Solaris/x86 specific headers */
#include <syslog.h>

/* Include the TFTP header file.  If the standard one works, use it.
 * (arpa/tftp.h).  Otherwise import our local version (tftpheader.h)
 */
#include "tftpheader.h"

/* pre-RFC2090 versions of arpa/tftp.h will be missing some declarations
 * from that document.
 */
#ifndef OACK
#define OACK 06
#endif
#ifndef EBADOPTS
#define EBADOPTS 8
#endif

/* The architecture header must define all of the following: */

/* Is your msghdr structure BSD4.4 compliant? */
#if defined(CMSG_DATA) && defined(CMSG_NXTHDR) && defined(CMSG_FIRSTHDR)
  /* If you have those defined, you almost certainly are! */
# define HAVE_BSD44_CMSGS
#endif

#ifndef MSG_MAXIOVLEN
#  define MSG_MAXIOVLEN 16
#endif

/* Define this macro if you have BSD4.4-like sockaddr structures */
#undef HAVE_BSD44_SOCKADDR

/* Function to close a socket */
#define socket_close(sd) close(sd)

/* multicast_socket - a type for holding a socket handler */
typedef int multicast_socket;

/* An assignable value for an invalid socket handle */
enum {
	multicaster_INVALID_SOCKET = (multicast_socket) -1
};

/* A type for holding a timeout */
typedef unsigned long platform_time;

/* A signed version of the above for the time comparison routine */
typedef signed long platform_time_diff;

/* Configuration filename */
#define CONFIG_FILE "/etc/mtftpd.conf"

#endif
