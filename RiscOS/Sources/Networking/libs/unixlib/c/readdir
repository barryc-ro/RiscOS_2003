/* -*-C-*-
 *
 * $Header$
 * $Source$
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * $Log$
 * Revision 1.1  95/04/20  09:50:27  kwelton
 * Initial revision
 * 
 */
#include "kernel.h"
#include "swis.h"

#include "unixlib.h"

/*
 * this is complete garbage - in no way, shape, or form, is it
 * a replacement/emulation of the UNIX readdir() function.  I
 * am *not* going to mess with it, however, 'cause the chance
 * is that something, somewhere, uses it in its current form.
 *
 * What I *cannot* understand is, if the function has been changed
 * so radically, why the bloody hell does it still have the same name?
 */
int readdir(char *path, char *buf, int len, int name, int offset)
{
    _kernel_swi_regs r;

    r.r[0] = 9;
    r.r[1] = (int)path;
    r.r[2] = (int)buf;
    r.r[3] = 1;
    r.r[4] = offset;
    r.r[5] = len;
    r.r[6] = name;
    (void)_kernel_swi(XOS_Bit | OS_GBPB, &r, &r);

    if( r.r[3] != 1 )				/* number of objects read */
	return(-1);
    else
	return(r.r[4]);				/* next item to read */
}

/* EOF readdir.c */
