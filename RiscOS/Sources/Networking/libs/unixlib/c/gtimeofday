/* -*-C-*-
 *
 * $Header$
 * $Source$
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * $Log$
 * Revision 1.1  95/04/20  09:50:18  kwelton
 * Initial revision
 * 
 */
#include <time.h>

#include "kernel.h"

/*
 * YUCK YUCK YUCK
 *
 * time_t and clock_t are defined in <time.h>, stop their
 * re-definition in "sys/types.h"
 */
#define __time_t
#define __clock_t

#include "sys/time.h"
#include "sys/types.h"

#include "unixlib.h"

#define secs0070 (((unsigned)86400) * (365 * 70 + 17))	/* less than 2^32 */

typedef struct {unsigned int l,h;} machinetime;

/**********************************************************************/

static int realtime(void)
{
    /*
     * this is time(), recoded here to avoid the absurd 6ms delay
     * in the RISC OS 3 Shared C Library (penalty is timezone())
     */
    machinetime bt, w, w2;

    /*
     * read timer as 5 byte integer
     * centiseconds since 1/1/1900
     */
    bt.l = 3;				/* presumably 'request time' arg */
    _kernel_osword(14, (int *)&bt);

    /* to two 3-byte things - for divide */
    w.h = ((bt.h & 255) << 8) | (bt.l >> 24);
    w.l = bt.l & 0xffffff;

    /* turn csecs to secs */
    w2.h = w.h / 100;
    w2.l = ((w.h % 100 << 24) | w.l) / 100;

    /* back to 8 byte binary */
    bt.h = w2.h >> 8;
    bt.l = (w2.h << 24) | w2.l;

    /* normalise to Jan70 instead of Jan00... */
    if (bt.l < secs0070) bt.h--;
    bt.l -= secs0070;

    /*
     * if high word is non-zero then date
     * is unset/out of unix range...
     */
    return bt.h ? -1 : bt.l;
}

/**********************************************************************/

int gettimeofday(struct timeval *tv, struct timezone *tzp)
{
    struct tm *t_gmt;
    struct tm *t_local;

    tv->tv_sec = realtime();
    tv->tv_usec = 0;

    if ( tzp )
    {
	t_gmt = gmtime( (time_t *)&tv->tv_sec );
	t_local = localtime( (time_t *)&tv->tv_sec );
	tzp->tz_minuteswest = (int)difftime(mktime(t_gmt),
					    mktime(t_local)) / 60;
	tzp->tz_dsttime = t_local->tm_isdst;
    }

    return(0);
}

/**********************************************************************/

/* EOF gtimeofday.c */
