 
 
 
RFC1123                  FILE TRANSFER -- TFTP              October 1989
 
 
   4.2  TRIVIAL FILE TRANSFER PROTOCOL -- TFTP
 
      4.2.1  INTRODUCTION
 
         The Trivial File Transfer Protocol TFTP is defined in RFC-783
         [TFTP:1].
 
         TFTP provides its own reliable delivery with UDP as its
         transport protocol, using a simple stop-and-wait acknowledgment
         system.  Since TFTP has an effective window of only one 512
         octet segment, it can provide good performance only over paths
         that have a small delay*bandwidth product.  The TFTP file
         interface is very simple, providing no access control or
         security.
 
         TFTP's most important application is bootstrapping a host over
         a local network, since it is simple and small enough to be
         easily implemented in EPROM [BOOT:1, BOOT:2].  Vendors are
         urged to support TFTP for booting.
 
      4.2.2  PROTOCOL WALK-THROUGH
 
         The TFTP specification [TFTP:1] is written in an open style,
         and does not fully specify many parts of the protocol.
 
         4.2.2.1  Transfer Modes: RFC-783, Page 3
 
            The transfer mode "mail" SHOULD NOT be supported.
 
         4.2.2.2  UDP Header: RFC-783, Page 17
 
            The Length field of a UDP header is incorrectly defined; it
            includes the UDP header length (8).
 
      4.2.3  SPECIFIC ISSUES
 
         4.2.3.1  Sorcerer's Apprentice Syndrome
 
            There is a serious bug, known as the "Sorcerer's Apprentice
            Syndrome," in the protocol specification.  While it does not
            cause incorrect operation of the transfer (the file will
            always be transferred correctly if the transfer completes),
            this bug may cause excessive retransmission, which may cause
            the transfer to time out.
 
            Implementations MUST contain the fix for this problem: the
            sender (i.e., the side originating the DATA packets) must
            never resend the current DATA packet on receipt of a
 
 
 
Internet Engineering Task Force                                [Page 44]

 
 
 
RFC1123                  FILE TRANSFER -- TFTP              October 1989
 
 
            duplicate ACK.
 
            DISCUSSION:
                 The bug is caused by the protocol rule that either
                 side, on receiving an old duplicate datagram, may
                 resend the current datagram.  If a packet is delayed in
                 the network but later successfully delivered after
                 either side has timed out and retransmitted a packet, a
                 duplicate copy of the response may be generated.  If
                 the other side responds to this duplicate with a
                 duplicate of its own, then every datagram will be sent
                 in duplicate for the remainder of the transfer (unless
                 a datagram is lost, breaking the repetition).  Worse
                 yet, since the delay is often caused by congestion,
                 this duplicate transmission will usually causes more
                 congestion, leading to more delayed packets, etc.
 
                 The following example may help to clarify this problem.
 
                     TFTP A                  TFTP B
 
                 (1)  Receive ACK X-1
                      Send DATA X
                 (2)                          Receive DATA X
                                              Send ACK X
                        (ACK X is delayed in network,
                         and  A times out):
                 (3)  Retransmit DATA X
 
                 (4)                          Receive DATA X again
                                              Send ACK X again
                 (5)  Receive (delayed) ACK X
                      Send DATA X+1
                 (6)                          Receive DATA X+1
                                              Send ACK X+1
                 (7)  Receive ACK X again
                      Send DATA X+1 again
                 (8)                          Receive DATA X+1 again
                                              Send ACK X+1 again
                 (9)  Receive ACK X+1
                      Send DATA X+2
                 (10)                         Receive DATA X+2
                                              Send ACK X+3
                 (11) Receive ACK X+1 again
                      Send DATA X+2 again
                 (12)                         Receive DATA X+2 again
                                              Send ACK X+3 again
 
 
 
 
Internet Engineering Task Force                                [Page 45]

 
 
 
RFC1123                  FILE TRANSFER -- TFTP              October 1989
 
 
                 Notice that once the delayed ACK arrives, the protocol
                 settles down to duplicate all further packets
                 (sequences 5-8 and 9-12).  The problem is caused not by
                 either side timing out, but by both sides
                 retransmitting the current packet when they receive a
                 duplicate.
 
                 The fix is to break the retransmission loop, as
                 indicated above.  This is analogous to the behavior of
                 TCP.  It is then possible to remove the retransmission
                 timer on the receiver, since the resent ACK will never
                 cause any action; this is a useful simplification where
                 TFTP is used in a bootstrap program.  It is OK to allow
                 the timer to remain, and it may be helpful if the
                 retransmitted ACK replaces one that was genuinely lost
                 in the network.  The sender still requires a retransmit
                 timer, of course.
 
         4.2.3.2  Timeout Algorithms
 
            A TFTP implementation MUST use an adaptive timeout.
 
            IMPLEMENTATION:
                 TCP retransmission algorithms provide a useful base to
                 work from.  At least an exponential backoff of
                 retransmission timeout is necessary.
 
         4.2.3.3  Extensions
 
            A variety of non-standard extensions have been made to TFTP,
            including additional transfer modes and a secure operation
            mode (with passwords).  None of these have been
            standardized.
 
         4.2.3.4  Access Control
 
            A server TFTP implementation SHOULD include some
            configurable access control over what pathnames are allowed
            in TFTP operations.
 
         4.2.3.5  Broadcast Request
 
            A TFTP request directed to a broadcast address SHOULD be
            silently ignored.
 
            DISCUSSION:
                 Due to the weak access control capability of TFTP,
                 directed broadcasts of TFTP requests to random networks
 
 
 
Internet Engineering Task Force                                [Page 46]

 
 
 
RFC1123                  FILE TRANSFER -- TFTP              October 1989
 
 
                 could create a significant security hole.
 
      4.2.4  TFTP REQUIREMENTS SUMMARY
 
                                                 |        | | | |S| |
                                                 |        | | | |H| |F
                                                 |        | | | |O|M|o
                                                 |        | |S| |U|U|o
                                                 |        | |H| |L|S|t
                                                 |        |M|O| |D|T|n
                                                 |        |U|U|M| | |o
                                                 |        |S|L|A|N|N|t
                                                 |        |T|D|Y|O|O|t
FEATURE                                          |SECTION | | | |T|T|e
-------------------------------------------------|--------|-|-|-|-|-|--
Fix Sorcerer's Apprentice Syndrome               |4.2.3.1 |x| | | | |
Transfer modes:                                  |        | | | | | |
  netascii                                       |RFC-783 |x| | | | |
  octet                                          |RFC-783 |x| | | | |
  mail                                           |4.2.2.1 | | | |x| |
  extensions                                     |4.2.3.3 | | |x| | |
Use adaptive timeout                             |4.2.3.2 |x| | | | |
Configurable access control                      |4.2.3.4 | |x| | | |
Silently ignore broadcast request                |4.2.3.5 | |x| | | |
-------------------------------------------------|--------|-|-|-|-|-|--
-------------------------------------------------|--------|-|-|-|-|-|--
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Internet Engineering Task Force                                [Page 47]

 
