/* File:    protocol.h
 * Author:  SNB
 * © Acorn Computers Ltd. 1993-1997
 */


/*
 * Error messages.  We have TWO chunks allocated currently.
 */

#define ERROR_BASE (0x80de00)
#define ERROR2_BASE (0x813f00)

#define URL_OFFSET (0)
#define URL_ERROR (ERROR_BASE + URL_OFFSET)

enum {
        url_ERROR_CLIENT_ID_NOT_FOUND = URL_ERROR,
        url_ERROR_MEMORY_EXHAUSTED,
        url_ERROR_NO_FETCHER_SERVICE,
        url_ERROR_SWI_NOT_FOUND,
        url_ERROR_ALREADY_CONNECTED,
        url_ERROR_NOT_CONNECTED,
        url_ERROR_PROTOCOL_EXISTS,
        url_ERROR_NOT_IN_PROGRESS,
        url_ERROR_MESSAGE_NOT_FOUND,
        url_ERROR_SESSION_INACTIVE,
        url_ERROR_NO_PARSE_URL
};


/*************************************************************/
/* The following error messages have been reserved for other */
/* URL fetcher modules.		     	  	       	     */
/*************************************************************/
#define HTTP_MODULE_OFFSET   0x000020 /* 0x80de20 to */
#define HTTP_MODULE_SIZE     0x00001f /* 0x80de3f    */
#define MAILTO_MODULE_OFFSET 0x000040 /* 0x80de40 to */
#define MAILTO_MODULE_SIZE   0x00001f /* 0x80de5f    */
#define FILE_MODULE_OFFSET   0x000060 /* 0x80de60 to */
#define FILE_MODULE_SIZE     0x00001f /* 0x80de7f    */
#define FTP_MODULE_OFFSET    0x000080 /* 0x80de80 to */
#define FTP_MODULE_SIZE      0x00001f /* 0x80de9f    */
#define GOPHER_MODULE_OFFSET 0x0000A0 /* 0x80dea0 to */
#define GOPHER_MODULE_SIZE   0x00001f /* 0x80debf    */
#define WHOIS_MODULE_OFFSET  0x0000C0 /* 0x80dec0 to */
#define WHOIS_MODULE_SIZE    0x00001f /* 0x80dedf    */
#define FINGER_MODULE_OFFSET 0x0000E0 /* 0x80dee0 to */
#define FINGER_MODULE_SIZE   0x00001f /* 0x80deff    */


#ifdef TRACE
#pragma -v1
extern void protocol_debug(const char */*format*/, ...);
#pragma -v0
extern void protocol_dump(const char *ptr, int size);
#endif

#ifdef DIRECTSWI
_kernel_oserror *directswi_call(unsigned int swi, _kernel_swi_regs *in, _kernel_swi_regs *out);
#else
#define directswi_call(s,in,out) _kernel_swi(s,in,out)
#endif

