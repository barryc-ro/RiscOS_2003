; -*-Text-*-
;
; $Version: networking $
;
; $Source$
;
; The module URL is used to send requests to and receive data from a
; protocol module in a multitasking manner.
;
#include "VersionNum"

; Title string
title-string: URL_Fetcher

; Version information
help-string: URL Module_MajorVersion_CMHG Module_MinorVersion_CMHG

date-string: Module_Date_CMHG

; Initialisation routine.
initialisation-code: module_init

; Finalisation routine.
finalisation-code: module_kill

; SWI Base.
swi-chunk-base-number: &83E00

; SWI Names.
swi-decoding-table: URL,
		    Register, GetURL, Status, ReadData, SetProxy, Stop, Deregister, ParseURL,
		    EnumerateSchemes, EnumerateProxies,
		    NOP10, NOP11, NOP12, NOP13, NOP14, NOP15, NOP16, NOP17, NOP18, NOP19,
    		    NOP20, NOP21, NOP22, NOP23, NOP24, NOP25, NOP26, NOP27, NOP28, NOP29,
		    NOP30, NOP31, ProtocolRegister, ProtocolDeregister

; A small command line handler to print out the protocols known.
command-keyword-table:  command_line_handler
                        URLProtoShow(min-args:0, max-args:0,
                            invalid-syntax: "Syntax: *URLProtoShow",
                            help-text: "*URLProtoShow shows all the current protocols known and their SWI bases.\n")
;			URLClients(min-args:0, max-args:0,
;                            invalid-syntax: "Syntax: *URLClients",
;                            help-text: "*URLClients shows all the currently known clients of the URL module.\n"),
;                       URLProxyShow(min-args:0, max-args:0,
;                            invalid-syntax: "Syntax: *URLProxyShow",
;                            help-text: "*URLProxyShow shows all the current proxy settings.\n")

; SWI handler.
swi-handler-code: swi_handler


; Callback handler (used for issuing the service call on startup)
vector-handlers:  callback_entry/callback_handler
