# Project:   FileFetcher


# Toolflags:
CCflags = -c -depend !Depend -IC: -throwback -fahf -UTML -zps1 -zM
C++flags = -c -depend !Depend -IC: -throwback
Linkflags = -rmf -c++ -o $@
ObjAsmflags = -throwback -NoCache -depend !Depend
CMHGflags = -depend !Depend -p -throwback -IC: -d FileHdr.h
LibFileflags = -c -o $@
Squeezeflags = -o $@


# Final targets:
@.File:   @.o.module @.o.readdata @.o.ses_ctrl @.o.start @.o.status @.o.stop \
        @.o.utils @.o.messages @.o.FileHdr C:o.Stubs
        Link $(Linkflags) @.o.module @.o.readdata @.o.ses_ctrl @.o.start \
        @.o.status @.o.stop @.o.FileHdr @.o.utils @.o.messages C:o.Stubs
	Access $@ WR/R


# User-editable dependencies:
@.o.messages:   @.Resources.UK.Messages
        ResGen messages_file @.o.messages @.Resources.UK.Messages Resources.FileFetcher.Messages

clean:
	-wipe @.o.* ~v~cf
	-wipe @.od.* ~v~cf

# Static dependencies:
@.o.module:   @.c.module @.h.FileHdr
        cc $(ccflags) -o @.o.module @.c.module
@.o.readdata:   @.c.readdata
        cc $(ccflags) -o @.o.readdata @.c.readdata
@.o.ses_ctrl:   @.c.ses_ctrl
        cc $(ccflags) -o @.o.ses_ctrl @.c.ses_ctrl
@.o.start:   @.c.start
        cc $(ccflags) -o @.o.start @.c.start
@.o.status:   @.c.status
        cc $(ccflags) -o @.o.status @.c.status
@.o.stop:   @.c.stop
        cc $(ccflags) -o @.o.stop @.c.stop
@.o.utils:   @.c.utils
        cc $(ccflags) -o @.o.utils @.c.utils
@.o.FileHdr:   @.cmhg.FileHdr
        cmhg $(cmhgflags) -o @.o.FileHdr @.cmhg.FileHdr


# Dynamic dependencies:
