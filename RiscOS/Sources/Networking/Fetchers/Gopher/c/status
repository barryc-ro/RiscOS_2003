/*
 * Gopher (c.status)
 *
 * © Acorn Computers Ltd. 1996-1997
 *
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "kernel.h"	
#include "swis.h"	
#include "sys/errno.h"	
#include "module.h"
#include "protocol.h"
#include "utils.h"

/*************************************************************/
/* _kernel_oserror gopher_status(_kernel_swi_regs *r)        */
/*************************************************************/
/* The call to get the status of a fetch from a site.        */
/* The values in the registers are:	     	       	     */
/* 		       r0 = Flags word			     */
/*		       r1 = pollword of client		     */
/* On exit they are:   	    	     			     */
/*    	   	       r0 = status word			     */
/*		       r2 = server response code (0 if none) */
/*		       r3 = bytes read so far if known 	     */
/*************************************************************/
_kernel_oserror *gopher_status(_kernel_swi_regs *r)
{
  	int flags=r->r[0];
  	int *pollword=(int *)r->r[1];
        Session *ses;

  	(void) flags;

  	ses = find_session((unsigned int)pollword);
  	if (ses == NULL) {
  	        return make_error(gopher_ERROR_BAD_SESSION, 0);
  	}

  	#ifdef TRACE
  	protocol_debug("Reporting status as %d (0x%X)\n", ses->reported_state, ses->reported_state);
  	#endif

  	r->r[0]           = ses->reported_state;
  	*((int *)ses->id) = ses->reported_state;
  	r->r[2]           = ses->server_code;
  	r->r[3]           = -1;

  	return NULL;
}
