/*
 * HTTP (c.writedata)
 *
 * © Acorn Computers Ltd. 1997
 *
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include "kernel.h"
#include "writedata.h"
#include "protocol.h"

/* This function is used to write data into the client's buffer.  It updates
 * R2, R3 and R4 to indicate what it has done.  It the passed buffer corresponds
 * to the address of the client's buffer already, the copy is not performed (as
 * the data is already in the right place!)  This enabled this routine to be used
 * always as the only correct method to write data into the client buffer.
 */
int http_write_data_to_client(_kernel_swi_regs *r, const char *buffer, int size)
{
        int copied = r->r[3] > size ? size : r->r[3];
        
	if (copied > 0) {
	        char *const dest = (char *) r->r[2];
		if (dest != buffer && buffer != NULL) {
		        memcpy(dest, buffer, copied);
			#ifdef TRACE
			protocol_debug("Copying data to client buffer:\n");
			protocol_dump(dest, copied);
			#endif
		}
		else {
			#ifdef TRACE
			protocol_debug("Client data already in situ\n");
			#endif
		}
	}
	else {
	        copied = 0;
	}
	
	r->r[2] += copied; /* increment buffer - ReadData SWI preserves this */
	r->r[3] -= copied; /* Decrement buflen - ReadData SWI preserves this */
	r->r[4] += copied; /* Increment sent counter */
	return copied;

}
