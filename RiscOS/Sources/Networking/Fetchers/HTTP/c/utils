/*
 * Example of a fetcher module for use with Acorn URL system
 *
 * © Acorn Computers Ltd. 1995-1997
 *
 */

/* File:    utils.c
 * Purpose: miscellaneous utility functions
 * Author:  IDJ
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>
#include "kernel.h"
#include "swis.h"

#include "utils.h"

#define ERR_BLOCKS 3


static int messages_fd[4];


_kernel_oserror *find_error (void)
{
	static _kernel_oserror global_error_block[ERR_BLOCKS] ={{0,0}};
   	static int errblock = 0;

	errblock = (errblock+1) % ERR_BLOCKS;
	return &global_error_block[errblock];
}


/* ------------------------------------ raising errors ---------------------------------------- */


extern _kernel_oserror *make_error (int err_num, int num_args, ...)
{
   /*
    * Generate a RISC OS error block.
    */

   va_list           ap;
   char             *s, token[4];
   int               i=4;
   _kernel_oserror  *e, *ptr;
   char             *sub[4]={0,0,0,0};

	ptr = find_error();
	
   ptr->errnum = err_num;

   num_args = (num_args>4)?4:num_args;

   for (va_start (ap, num_args); num_args--; i++)
   {
      s      = va_arg (ap, char *);
      sub[i] =   (s && *s) ? s : NULL; /* copy (pointer to args)s into registers */
   }

   sprintf (token, "E%02x", err_num&0x1f);

   e = _swix(MessageTrans_Lookup, _INR(0,7), messages_fd, token, ptr->errmess,
                  sizeof(*ptr) - sizeof(ptr->errnum) /* 252! */,
                  sub[0],sub[1],sub[2],sub[3]);
   va_end (ap);
   return ptr;
}


/* --------------------------------------- message file handling ------------------------------ */


extern _kernel_oserror *messages_file_open (char *messages_filename)
{
        memset(messages_fd, '\0', sizeof(messages_fd));
    return _swix(MessageTrans_OpenFile, _INR(0,2), messages_fd, messages_filename, 0);
}


extern _kernel_oserror *messages_file_close (void)
{
    return _swix(MessageTrans_CloseFile, _IN(0), messages_fd);
}

