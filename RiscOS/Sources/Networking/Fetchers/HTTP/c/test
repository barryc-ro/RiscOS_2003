/*
 * Small quick and ready test of the HTTP module. Relies on there
 * being a URL "http://www/" avaliable!
 *
 * ADH 06/08/97: Well, OK, it's way out of date now. But someone
 *               may find an adapted version useful in future, so
 *               I decided not to get rid of it.
 */

#include "stdio.h"	/* file handling */
#include "stdlib.h"	/* for malloc/calloc */
#include "kernel.h"	/* registers */
#include "swis.h"	/* swis */
#include "string.h"	/* string handling */
#include "errno.h"	/* Include errno variable */
#include "module.h"	/* Module name etc */

#define URLBASE 0x83e00
#define URLREG  URLBASE
#define URLGET  URLBASE+1
#define URLSTAT URLBASE+2
#define URLREAD URLBASE+3
#define URLSETP URLBASE+4
#define URLSTOP URLBASE+5
#define URLDERE URLBASE+6

int main(int argc, char *argv[])
{
  _kernel_swi_regs r;
  char *url_to_get=argc>1?argv[1]:"http://www.acorn.com/acorn/";
  char *buffer;
  int pollword;

  buffer=calloc(10240,1);

  r.r[0] = 0;
  _kernel_swi(URLREG,&r,&r);
  pollword=r.r[1];

  r.r[0]=0;
  r.r[1]=pollword;
  r.r[2]=1;
  r.r[3]=(int)url_to_get;
  r.r[4]=0;
  r.r[5]=2;
  _kernel_swi(URLGET,&r,&r);

keep_trying:

  r.r[0]=0;
  r.r[1]=pollword;
  r.r[2]=(int)buffer;
  r.r[3]=10240;
  _kernel_swi(URLREAD,&r,&r);

  printf("Registers:\n R0=%d\n*R1=%d\n R4=%d\nR5=%d",
  		       r.r[0],*(int *)r.r[1],r.r[4],r.r[5]);

  if ((r.r[4] == 0) && (r.r[0] <= 31)) goto keep_trying;

  buffer[r.r[4]]='\0';
  printf("Dataread:\n>>>>%s<<<<\n",buffer);

  if (r.r[0] <= 31) goto keep_trying;

  r.r[1]=pollword;
  _kernel_swi(URLDERE,&r,&r);
  return 0;
}
