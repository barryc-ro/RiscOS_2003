/* >h.Module
 *
 */
#include "sys/types.h"


/* Some useful error-handling and returning macros */
#define IGNORE(X)      ((X)=(X))
#define ERR(X)         err = X; if (err) return(err);
#define TIDY_ERR(X)    err = X; if (err) goto err_exit;
#define DO_TIDY_ERR(X) { err = X; goto err_exit; }
#define DO_MSG_ERR(X)  { err = make_error(X, 0); goto err_exit; }


/* Local 'constant(s)' required for *SendMessage CLI command */
#define SM_Syntax   "u=udp/S,t=tcp/S,h=host,q=quiet/S,m=message"
#define UDP         0
#define TCP         1     /* Everything's weighted so that this is the default */
#define dest_sz     64
#define SM_VAR      Module_Title "$"
#define SM_DESTVAR  SM_VAR "Host"
#define SM_PROTVAR  SM_VAR "Protocol"
#define SM_QUIETVAR SM_VAR "Quiet"


/* Local 'variable(s)' required by the *SendMessage CLI command */
static char *host_buf = NULL;


/* Module error message related constants */
#define sm_ERROR_BASE 0x0081A200
enum
{
  sm_ERROR_MSG_FILE = sm_ERROR_BASE,
  sm_ERROR_NO_MEM,
  sm_ERROR_NO_MSG,
  sm_ERROR_NO_DEST,
  sm_ERROR_NO_PORT,
  sm_ERROR_BAD_HOST
};
