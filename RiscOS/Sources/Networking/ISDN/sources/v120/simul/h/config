
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - config.h
 *
 * $Revision$
 *
 * $Date$
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    OMNITEL-BRICKS                                   |*/
/*|    V.120 Functions Library                          |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#	include "vs_unit.h"

/*-------------------------------------------------------------------------*/

#ifndef IT_MODULE

				/* SERVICES SIZING CONSTANTS */

					/* Message */

#define MESSAGE_DATA_LGTH	30				/* maximum data bytes in the data area of a message (must be >= 4) */
#define MESSAGE_NB      	70				/* maximum number of message */
#define MESSAGE_LOW_MARK	8				/* message low mark */
#define MESSAGE_HIGH_MARK	24				/* message high mark */

					/* Buffer */

#define BUFFER_DATA_LGTH	(512+30)		/* maximum size of the data buffer area (max frame size + 1) + 2 CRC */

#define BUFFER_NB			50				/* maximum number of buffer */
#define BUFFER_LOW_MARK		4				/* low mark buffer */
#define BUFFER_HIGH_MARK	20				/* high mark buffer */

					/* Timer */

#define TIMER_CELL_NB		120				/* maximum number of timer cells */
#define TIMER_SYSTEM_TICK	25*M_SCD		/* system tick in millisecond */
#define TIMER_PRECISION		25*M_SCD		/* precision of a time_out +- 5% (NET 3) */
#define TIMER_SLOT_SIZE		100				/* number of timer slots in the timer clock (CPU) */

					/* Server */

#define SERVER_NB			5				/* maximum number of server */

					/* Network access */

#define NA_NB				3				/* maximum number of network acess */

					/* Conditional sizing parameters */

#if MESSAGE_CACHE == ON
#	define	MESSAGE_CACHE_SIZE MESSAGE_NB	/* size of the message cache */
#else
#	define	MESSAGE_CACHE_SIZE 0
#endif

#if BUFFER_CACHE == ON
#	define BUFFER_CACHE_SIZE BUFFER_NB		/* buffer cache size */
#else
#	define BUFFER_CACHE_SIZE 0
#endif

#if TIMER_CELL_CACHE == ON
#	define TIMER_CELL_CACHE_SIZE TIMER_CELL_NB/* maximum element in the timer cell cache stack */
#else
#	define TIMER_CELL_CACHE_SIZE 0
#endif

#if SIMULATION == ON || defined (ISDN_INIT)

		/* SERVICES CONFIGURATION */

struct i_service i_service = {
	0,											/* address of the static memory */
	15000,										/* size of the static memory */

	MESSAGE_HEADER_SIZE + MESSAGE_DATA_LGTH,    /* message length */
	MESSAGE_NB,                                 /* number of messages */
	MESSAGE_CACHE_SIZE,                         /* size of the message cache */
	MESSAGE_LOW_MARK,							/* message low mark */
	MESSAGE_HIGH_MARK,							/* message high mark */
	0,					                        /* size of the message audit array */

	BUFFER_HEADER_SIZE + BUFFER_DATA_LGTH,      /* buffer length */
	BUFFER_NB,                                  /* number of buffers */
	BUFFER_CACHE_SIZE,                          /* size of the buffer caches */
	BUFFER_LOW_MARK,                            /* buffer congestion control : low mark buffer */
	BUFFER_HIGH_MARK,                           /* buffer congestion control : high mark buffer */

	TIMER_CELL_NB,                              /* number of timer cells */
	TIMER_CELL_CACHE_SIZE,						/* size of the timer cell caches */
	TIMER_SYSTEM_TICK,                          /* system tick in milliseconds */
	TIMER_PRECISION,                            /* precision of a timer in milliseconds */
	TIMER_SLOT_SIZE,                            /* number of timer slots */

	SERVER_NB,                                  /* number of servers */

	NA_NB,                                      /* maximum number of network access */
};

/*-------------------------------------------------------------------------*/

#include "conf_vs.h"

#endif
#endif
/*EOF*/
