
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - vs_tab.c
 *
 * $Revision$
 *
 * $Date$
 *
 *	VS 'data bank'
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    OMNITEL-BRICKS                                   |*/
/*|    V.120 Functions Library                          |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#include "vs.h"

#if C_COMPILER == TC
#	pragma hdrstop
#endif

#include "dl_int.h"

/*----------------------------------------------------------------------------

								PARAMETERS

----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------
				VS parameters valid ranges lists description
----------------------------------------------------------------------------*/

#define		Vs_nb_valid_range(nb)				{nb}
#define 	Vs_parm_valid_range(min,max)		{min, max}

/*---------
	 VS
----------*/

struct vs_parm_valid_range CONST_ARRAY t_vs_r1_valid_range [] = {

	Vs_nb_valid_range (4),								/* number of following valid ranges */

	Vs_parm_valid_range (0,		2	),
	Vs_parm_valid_range (0x10,	0x12),
	Vs_parm_valid_range (0x20,	0x22),
	Vs_parm_valid_range (0x40,	0x42),

};

struct vs_parm_valid_range CONST_ARRAY t_vs_r2_valid_range [] = {

	Vs_nb_valid_range (1),								/* number of following valid ranges */

	Vs_parm_valid_range (0,		1	),

};

struct vs_parm_valid_range CONST_ARRAY t_vs_r3_valid_range [] = {

	Vs_nb_valid_range (1),								/* number of following valid ranges */

	Vs_parm_valid_range (0,		1	),

};

struct vs_parm_valid_range CONST_ARRAY t_vs_r4_valid_range [] = {

	Vs_nb_valid_range (1),								/* number of following valid ranges */

	Vs_parm_valid_range (0,		255	),

};

struct vs_parm_valid_range CONST_ARRAY t_vs_r5_valid_range[] = {

	Vs_nb_valid_range (1),								/* number of following valid ranges */

	Vs_parm_valid_range (0,		1),

};

struct vs_parm_valid_range CONST_ARRAY t_vs_r6_valid_range [] = {

	Vs_nb_valid_range (1),								/* number of following valid ranges */

	Vs_parm_valid_range (0,	1),

};

/*----------------------------------------------------------------------------
						VS parameters description list
----------------------------------------------------------------------------*/

#define		Vs_parm_description(read_only, a_valid_range)	{ read_only, (struct vs_parm_valid_range *)a_valid_range }

/*---------
	VS
----------*/

#if OM_CODE_TYPE == OM_PIC

struct vs_parm_description t_vs_parm_description [] = {

/*     */ Vs_parm_description (VS_PARM_READWRITE,		P_NIL	),
/* R1  */ Vs_parm_description (VS_PARM_READWRITE,		P_NIL	),
/* R2  */ Vs_parm_description (VS_PARM_READWRITE,		P_NIL	),
/* R3  */ Vs_parm_description (VS_PARM_READWRITE,		P_NIL	),
/* R4  */ Vs_parm_description (VS_PARM_READWRITE,		P_NIL	),
/* R5  */ Vs_parm_description (VS_PARM_READWRITE,		P_NIL	),
/* R6  */ Vs_parm_description (VS_PARM_READWRITE,		P_NIL	),
};

void pic_init_t_vs_parm_description (void)
{
	Pic_init_index ();
	Pic_init_struct_array_next (t_vs_parm_description, a_parm_valid_range, P_NIL);
	Pic_init_struct_array_next (t_vs_parm_description, a_parm_valid_range, (struct vs_parm_valid_range *)t_vs_r1_valid_range);
	Pic_init_struct_array_next (t_vs_parm_description, a_parm_valid_range, (struct vs_parm_valid_range *)t_vs_r2_valid_range);
	Pic_init_struct_array_next (t_vs_parm_description, a_parm_valid_range, (struct vs_parm_valid_range *)t_vs_r3_valid_range);
	Pic_init_struct_array_next (t_vs_parm_description, a_parm_valid_range, (struct vs_parm_valid_range *)t_vs_r4_valid_range);
	Pic_init_struct_array_next (t_vs_parm_description, a_parm_valid_range, (struct vs_parm_valid_range *)t_vs_r5_valid_range);
	Pic_init_struct_array_next (t_vs_parm_description, a_parm_valid_range, (struct vs_parm_valid_range *)t_vs_r6_valid_range);
  
}

#else	/* OM_CODE_TYPE != OM_PIC */

struct vs_parm_description CONST_ARRAY t_vs_parm_description [] = {

/*     */ Vs_parm_description (VS_PARM_READWRITE,		P_NIL					),
/* R1  */ Vs_parm_description (VS_PARM_READWRITE,		t_vs_r1_valid_range	),
/* R2  */ Vs_parm_description (VS_PARM_READWRITE,		t_vs_r2_valid_range	),
/* R3  */ Vs_parm_description (VS_PARM_READWRITE,		t_vs_r3_valid_range	),
/* R4  */ Vs_parm_description (VS_PARM_READWRITE,		t_vs_r4_valid_range	),
/* R5  */ Vs_parm_description (VS_PARM_READWRITE,		t_vs_r5_valid_range	),
/* R6  */ Vs_parm_description (VS_PARM_READWRITE,		t_vs_r6_valid_range	),
};
#endif	/* OM_CODE_TYPE != OM_PIC */


/* END OF FILE */

