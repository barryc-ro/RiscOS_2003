
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - vs_parm.c
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *	vs_term_it_setparm_rq		- set parameters requested by interrupt terminal
 *	vs_parameter_set			- set X.3 parameters routine
 *	vs_parm_val_valid			- check parameter reference & value validity
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    OMNITEL-BRICKS                                   |*/
/*|    V.120 Functions Library                          |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#include "vs.h"

#if C_COMPILER == TC
#	pragma hdrstop
#endif

/*--------------------------------------------------------------------------*
					 F U N C T I O N   H E A D E R

Name		: vs_term_it_setparm_rq

Usage		: uchar vs_term_it_setparm_rq (void);

Description : send set parameter indication to interrupt terminal.

Return value : OK or NOK

*--------------------------------------------------------------------------*/

uchar vs_term_it_setparm_rq ()
{

	return (OK);
}

/*--------------------------------------------------------------------------*
					 F U N C T I O N   H E A D E R

Name		: vs_parameter_set

Usage		: uchar vs_parameter_set (uchar force);

In			:
	force	: force the setting of the parameters in any case.

Description : set V.120 parameters.

Return value : OK or NOK

*--------------------------------------------------------------------------*/

uchar vs_parameter_set (force)
uchar	force;										/* force the setting of the parameters in any case */
{
	register	uchar	ref;										/* parameter reference */
	register	uchar	val;										/* parameter value */

	for (ref = 1; ref <= VS_NB_PARM; ref++) {
		val = Vs_parm_new_parm (ref);

		if (Vs_parm_ref_select (ref)) {

			if (Vs_parm_val_valid (ref)) {

				if (force || (Vs_parm (ref) != val)) {
					Vs_setparm (ref, val);							/* set X.3 parameter */
				}

			} else {
				Vs_parm_invalid_val_detected = TRUE;
			}

		}

	}

	return (OK);
}


/*--------------------------------------------------------------------------*
					 F U N C T I O N   H E A D E R

Name		: vs_parm_val_valid

Usage		: uchar vs_parm_val_valid (	uchar reference,
										vs_parm_val_t value);

In			:
		reference	: X.3 parameter reference.
		value 		: X.3 parameter value.

Related
functions usage ();

Description : verify the validity of a X.3 parameter value.

Return value : FALSE or TRUE

common constants and declarations : vs.h

common objects :

*--------------------------------------------------------------------------*/

uchar vs_parm_val_valid (reference, value)

	register uchar			reference;								/* parameter refernce */
	register vs_parm_val_t	value;									/* parameter value */
{
	register uchar			ran_idx;								/* parameter valid ranges index */
	uchar					val_invalid;							/* invalid value flag */

	ran_idx = 1;

	do {
		val_invalid =
			((value < Vs_parm_valid_min_range (reference, ran_idx)) ||
			(value > Vs_parm_valid_max_range (reference, ran_idx)));

	} while (val_invalid && (ran_idx++ < Vs_parm_valid_nb_range(reference)));
																	/* continue the test until value is amount valid range or
																		range lists have been run over */
	return (!val_invalid);
}


/* END OF FILE */
