		/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/
		/*                               */
		/*  V.120 versions descriptions  */
		/*                               */
		/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

Revision_string (_V120_VERSION, "(@)V120 v1.24 (23 Jul 97)")

#if 0

v1.24 (23 Jul 97)
-----------------
	- modifications for VS_STOP_RQ:
		. Vs_term_p_init_msg is renamed Vs_p_init_stop_msg and can hold
		  either a VS_INIT_RQ or a VS_STOP_RQ message.
		. modified processing for VS_STOP_RQ, make sure the VS_STOP_CO is
		  sent only when the detach is performed.
		. when receiving a VS_STOP_RQ while a VS_INIT_RQ is in progress,
		  echo a VS_INIT_CO (NOK).
	- modifications for VS_INIT_RQ:
		. added a NEW FIELD field in VS_INIT_RQ : 'conn_est_timer_val',
		  maximum duration for V.120 connection establishment.
		  If this field is 0, there is no maximum duration, as before.
		  If connection cannot be established during this time,
		  CF_INIT_CO(NOK) is returned.
		. VS_INIT_CO returns the value of V.42bis negotiated parameters.
		  Previously the requested, not negotiated, parameters were returned.
	- extended simulation.

v1.23 (21 Jul 97)
-----------------
	- suppressed use of VS_COMPILATION and VS_ENTITY_IMPLEMENT compilation
	  options.
	- new compilation option: VS_RESET_CONFIG.
	  If not #defined, defaults to RESET_CONFIG.
	- corrected some errors, processing of SM_SET_CONFIG_RQ
	  (re-configuration).
	- upon SM_STOP_RQ, answer SM_STOP_CO.
	- introduced new primitive VS_STOP_CO. Added one argument
	  (struct confirm) to VS_STOP_RQ/VS_STOP_CO.
	  Upon VS_STOP_RQ, answer VS_STOP_CO.
	- cleaned up v120_par.h, modified comments.
	- removed ltoa_far() and atol_far(), unused.
	- simulation :
		. new sub-directory \simul, with files :
			. sim_app.c, sim_dl.c, ana_vs.c, s_vs.c (server)
			. sm_par.h, config.h (which #includes conf_vs.h)
		. config.h is replaced by conf_vs.h.
		. new makefiles vs.mak and vs_sim.mak.


v1.22b (18 Jul 97)
------------------
	- vs_inp.c: protected call to Vs_echo_confirm() macro call. It was
	  generating a compilation error when VS_ENTITY_IMPLEMENT was OFF.
	  Problem appeared in version v1.22.

v1.22a (17 Jul 97)
------------------
	- added processing of SM_RESET_CONFIG_RQ message to avoid a Trap
	  call when it is received.
	  !!! WARNING: the configuration reset is not performed yet !!!
	  (vs_inp.c)

v1.22 (09 May 97)
-----------------
	- added primitive VS_START_CO, with a 'confirm' substructure.
	  Changed the encoding for the VS_START_RQ primitive.
	- VS_STOP_RQ has now two more arguments : nai (network access identifier)
	  and chan_id (B-channel id [1..])
	- when processing VS_EV_TERMINAL_STOP_RQ, p_data was not initialized.
	  Corrected.
	- implemented interface synchronization primitives VS_INT_SYNC_RQ and
	  VS_INT_SYNC_CO.
	- vs_error_process() : removed second argument, unused.
	- cleanup. Suppressed VS_COMMAND_START_RQ and VS_RECALL_RQ.
	  Suppressed VS_SETPARM_RQ and DTE_INT_SETPARM_RQ.
	  Suppressed VS_SETPARM_IN and DTE_INT_SETPARM_IN.
	  Suppressed VS_TIMER_START_RQ, VS_TIMER_STOP_RQ and
	  VS_PAGE_WAIT_CANCEL_RQ, unused.
	  Suppressed unused code related to parameter setting.
	- added file V120.txt (list of files).

v1.21 (01 Apr 97)
-----------------
	- extended VS_START_RQ primitive : now it may contain the list of
	  B-channels and the V.42bis compression parameters.
	  Corrected one initialization problem in the processing of this
	  primitive.
	  The routine vs_start() and the macro Vs_start now admit one
	  supplementary argument.
	- introduced PIC initialization - pic_init_t_vs_parm_description().
	- renamed XON/XOFF primitives to BUSY/CLEAR_BUSY.
	- implemented processing for generating VS_BUSY_IN/VS_CLEAR_BUSY_IN
	  when V.120 is used without DTE_INT. New internal codes
	  VS_TERMINAL_BUSY_IN, VS_TERMINAL_CLEAR_BUSY_IN.
	- vs_process() : added a missing p_data initialization.
	- removed duplicate declarations for p_rcv_msg_vs, etc.
	- removed parity treatment and 'identification' code, unused.

v1.20 (17 Jan 97)
-----------------
	- implemented support for DTE_INT_BUSY_RQ and DTE_INT_CLEAR_BUSY_RQ in
	  all cases.

v1.19 (14 Jan 97)
-----------------
	- app_sm.c : corrected a problem when accessing to the 'attach context'
	  in routine appli_sm_ctx_access_chani().
	- added some assertion trap codes.

v1.18 (06 Jan 97)
-----------------
	- added a flow control mechanism, not only based on
	  DL_BUSY_IN/DL_CLEAR_BUSY_IN (as before), but also on the sending of
	  DL_INT_SYNC_RQ acknowledged by DL_INT_SYNC_CO.

	  Added three new fields to the configuration structure, in a compatible way :
		to_net_queue_high_mark : high threshold in transmit queue (to network)
				before flow-controlling the DTE. May be zero.
		to_net_queue_low_mark : low threshold in transmit queue (to network)
				before flow-releasing the DTE. May be zero.
		to_net_sync_window : max number of DA_RQ to send between two SYNC_RQ.
				0 means : no SYNC_RQ is ever sent (not recommended)
				2 means : two DA_RQ, one SYNC_RQ, two DA_RQ, etc.
		Suggested values: (3,0,3) for a MLP connection.
		The values (0,0,0) are allowed.

	- removed unused code related to the compilation option
	  VS_DATA_FORWARD_SOFTWARE_POLLING. Removed this option.
	- removed unused code related to the 'interface' field of the
	  configuration structure, now unused.
	  Suppressed the internal compilation option V120.

v1.17 (06 Dec 96)
-----------------
	- modified definition for the hole size.
	- attach management : cleaned up and added some assertions checks.

v1.16 (06 Nov 96)
-----------------
	- corrected a recently introduced problem when VS_V42B_NEGOTIATION was
	  OFF.

v1.15 (14 Oct 96)
-----------------
	- implemented break processing.
	- suppressed Vs_conn_send_jn_in_mfo	and Vs_conn_send_jn_in_ui.
	- junction signal state is sent when there is a change, and in particular
	  when data link is established (was optional previously, and not sent
	  by default).
	- if a DL_REL_IN is received while negotiating, consider the negotiation
	  has failed and continue on the reestablished data link.
	- recorded the fact that user data have been sent to the network.
	  If no user data is sent, a DL_REL_IN in the 'connected' state does not
	  clear communication, instead communication continues on the
	  reestablished data link. Negotiation is not attempted.
	- added a flag controlling if we send CS byte once the data link is
	  established. Currently always initialized to ON.
	- suppressed queue Vs_term_a_queued_msg_in, unused now.
	  Made transmitted data processing more simple.
	  Modified transmit (to network) queue management.
	  Suppressed use of receive (to terminal) queue with priority ABSOLUTE.
	- made assert and trap processing more simple.

v1.14 (26 Jul 96)
-----------------
	- suppressed compilation constant VS_CONFIG_MAX_NB_CFG_TIMER, unused.

v1.13 (22 May 96)
-----------------
	- when receiving DL_REL_IN or DL_REL_CO, send a DL_CLEAR_BUSY_RQ,
	  signalling data path to terminal is open, in all cases.
	  This will allow the connection to be reused upon a subsequent
	  incoming call.
	- modified processing when system is congested. Flush transmit
	  (to network) queues when network is busy and local system is
	  congested.

v1.12 (19 Oct 95)
-----------------
	- v120_par.h: removed nested comment to avoid compile-time error if
	nested comments are not supported.

v1.11 (17 Jul 95)
-----------------
	- simplified primitive names.
	- implemented V.42bis negotiation over V.120.
	- new compilation option VS_V42B_NEGOTIATION.

v1.10 (05 Jul 95)
-----------------
	- changed names from 'conn_id' to 'dl_ces', 'sapi' to 'dl_sapi'.
	- simplified use of prepare_sending_message.
	- implemented list of physical channels for DL attach and DL detach.
	  list of physical channels is stored in terminal context.
	  modified interface of appli_sm_dl_sapi_attach_rq() and
	  appli_sm_dl_sapi_detach_rq() accordingly.
	- new-style entry point, for straight V.120 : v120_init_rq().
	- modeofied the attach request processing accordingly (app_sm.c)
	- modified semantics of VS_PROFILE_ID_MAX_LGTH, VS_SERVPROF_ID_MAX_LGTH :
	  now, length of identification string, without terminating '\0'.
	- suppressed compilation option VS_ASSERT_DISPLAY. Trap now.
	- send DL_BUSY_RQ/DL_CLEAR_BUSY_RQ only when there is a change in flow
	  control internal state.

	- suppressed VS_NETWORK_ENTITY in v120_par.h.
	- added acces routines to contexts using DL_SAP + DL_CES, not
	  only B-channels.
	- corrected a problem upon detach, references were not reset properly,
	  upon next communication a wrong sap/ces could be selected.

v1.9 (02 Jun 95)
----------------
	- added comments for error codes.

v1.8 (09 May 95)
----------------
	- simplified vs_term_it_mode_set().

v1.7 (24 Feb 95)
----------------
	- When sending data to the terminal, in vs_queued_data_transmit,
	  make sure that transmission may take place (Vs_term_busy).
	  Else a infinite loop may occur.
	- Modified CONST and CONST_ARRAY modifiers.
	- Suppressed AUDIT and PANEL compilation otions, not used.
	- DL_REL_IN when connected clears the communication.

v1.6 (12 Jan 95)
----------------
	- Modifications for data compression over V.120

#endif

/*EOF*/
