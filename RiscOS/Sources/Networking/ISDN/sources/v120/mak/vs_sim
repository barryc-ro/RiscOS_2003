
#/*-----------------------------------------------------------------------*
# *                       M O D U L E   H E A D E R
# *
# * filename - vs_sim.mak
# *
# * $Revision$
# *
# * $Date$
# *
# * Makefile example for the V120 Functions Library Simulator (VS_SIM)
# * Customised for Borland C compiler
# *
# *-----------------------------------------------------------------------*/

#/*[]---------------------------------------------------[]*/
#/*|                                                     |*/
#/*|    OMNITEL-BRICKS                                   |*/
#/*|    V.120 Functions Library                          |*/
#/*|                                                     |*/
#/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
#/*|    All Rights Reserved.                             |*/
#/*|                                                     |*/
#/*[]---------------------------------------------------[]*/

.AUTODEPEND

#-- Target name

TARGET       = vs_sim

#-- Generation file names

exe_file     = $(TARGET).exe
lib_file     = $(TARGET).lib
cfg_file     = $(TARGET).cfg
mak_file     = $(TARGET).mak
map_file     = $(TARGET).map
sym_file     = $(TARGET).sym

#-- Translator Definitions

CC           = tcc +$(cfg_file)
TASM         = tasm
TLIB         = tlib
TLINK        = tlink

LIBPATH      = C:\tc\lib
CINCLUDEPATH = C:\tc\include

#-- Omnitel source include directories

services_dir = services
vs_dir       = v120
vs_simul_dir = v120\simul
dl_dir       = dl
dl_v120_dir  = dl\v120
simul_dir    = simul

#- Parameter files directory, used as the first include files directory

par_dir      = par

#-- Source, Object and Makefile directories

.PATH.lib    = bin\$(TARGET)
.PATH.obj    = bin\$(TARGET)
.PATH.c      = $(vs_dir)
.PATH.mak    = $(vs_dir)

#-- Full include path

INCLUDEPATH  = $(par_dir);$(vs_simul_dir);$(vs_dir);$(dl_dir);$(dl_v120_dir);$(services_dir);$(simul_dir);$(CINCLUDEPATH)

#-- Implicit Rules

.c.obj:
  $(CC) -c $<

#------- List Macros

obj_list = \
	sm.obj \
	sm_ram.obj \
	simul.obj \
	ana_msg.obj \
	ana_sm.obj \
	s_vs.obj \
	sim_dl.obj \
	sim_app.obj \
	ana_vs.obj \
	app_sm.obj \
	vs.obj \
	v120.obj \
	vs_acc.obj \
	vs_cfg.obj \
	vs_ctrl.obj \
	vs_err.obj \
	vs_evnt.obj \
	vs_exe.obj \
	vs_inp.obj \
	vs_outp.obj \
	vs_parm.obj \
	vs_proc.obj \
	vs_tab.obj \
	vs_term.obj \
	vs_time.obj \
	vs_util.obj \
	com_proc.obj \
	to_proc.obj \
	it_proc.obj \
	services.obj \
	intel.obj		# assembly routines for Intel CPUs
#	motorola.obj	# assembly routines for Motorola CPUs

#-- Explicit Rules

$(.PATH.obj)\$(exe_file): $(cfg_file) $(obj_list)
  $(TLINK) /v/c/s/i/d/L$(LIBPATH) @&&|
c0l.obj+
$(.PATH.obj)\sm.obj+
$(.PATH.obj)\sm_ram.obj+
$(.PATH.obj)\simul.obj+
$(.PATH.obj)\ana_msg.obj+
$(.PATH.obj)\ana_sm.obj+
$(.PATH.obj)\s_vs.obj+
$(.PATH.obj)\sim_dl.obj+
$(.PATH.obj)\sim_app.obj+
$(.PATH.obj)\ana_vs.obj+
$(.PATH.obj)\app_sm.obj+
$(.PATH.obj)\vs.obj+
$(.PATH.obj)\v120.obj+
$(.PATH.obj)\vs_acc.obj+
$(.PATH.obj)\vs_cfg.obj+
$(.PATH.obj)\vs_ctrl.obj+
$(.PATH.obj)\vs_err.obj+
$(.PATH.obj)\vs_evnt.obj+
$(.PATH.obj)\vs_exe.obj+
$(.PATH.obj)\vs_inp.obj+
$(.PATH.obj)\vs_outp.obj+
$(.PATH.obj)\vs_parm.obj+
$(.PATH.obj)\vs_proc.obj+
$(.PATH.obj)\vs_tab.obj+
$(.PATH.obj)\vs_term.obj+
$(.PATH.obj)\vs_time.obj+
$(.PATH.obj)\vs_util.obj+
$(.PATH.obj)\com_proc.obj+
$(.PATH.obj)\to_proc.obj+
$(.PATH.obj)\it_proc.obj+
$(.PATH.obj)\services.obj+
$(.PATH.obj)\intel.obj
$(.PATH.obj)\$(exe_file),$(.PATH.obj)\$(map_file)
emu.lib+
mathl.lib+
cl.lib
|

#-- Individual File Dependencies

#-- Services:

intel.obj: $(cfg_file) $(services_dir)\intel.asm
	$(TASM) /MX /ZI /O $(services_dir)\intel.asm,$(.PATH.obj)\intel.obj

com_proc.obj: $(cfg_file) $(services_dir)\com_proc.c
	$(CC) -c $(services_dir)\com_proc.c

services.obj: $(cfg_file) $(services_dir)\services.c
	$(CC) -c $(services_dir)\services.c

to_proc.obj: $(cfg_file) $(services_dir)\to_proc.c
	$(CC) -c $(services_dir)\to_proc.c

it_proc.obj: $(cfg_file) $(services_dir)\it_proc.c
	$(CC) -c $(services_dir)\it_proc.c

#-- SM:

sm.obj: $(cfg_file) $(services_dir)\sm.c
	$(CC) -c $(services_dir)\sm.c

sm_ram.obj: $(cfg_file) $(services_dir)\sm_ram.c
	$(CC) -c $(services_dir)\sm_ram.c

sm_sts.obj: $(cfg_file) $(services_dir)\sm_sts.c
	$(CC) -c $(services_dir)\sm_sts.c

#-- Simulator Kernel:

ana_msg.obj: $(cfg_file) $(simul_dir)\ana_msg.c
	$(CC) -c $(simul_dir)\ana_msg.c

ana_sm.obj: $(cfg_file) $(simul_dir)\ana_sm.c
	$(CC) -c $(simul_dir)\ana_sm.c

simul.obj: $(cfg_file) $(simul_dir)\simul.c
	$(CC) -c $(simul_dir)\simul.c

#-- Simulation files

sim_dl.obj: $(cfg_file) $(vs_simul_dir)\sim_dl.c
	$(CC) -c $(vs_simul_dir)\sim_dl.c

sim_app.obj: $(cfg_file) $(vs_simul_dir)\sim_app.c
	$(CC) -c $(vs_simul_dir)\sim_app.c

ana_vs.obj: $(cfg_file) $(vs_simul_dir)\ana_vs.c
	$(CC) -c $(vs_simul_dir)\ana_vs.c

app_sm.obj: $(cfg_file) $(vs_dir)\app_sm.c
	$(CC) -c $(vs_dir)\app_sm.c

s_vs.obj: $(cfg_file) $(vs_simul_dir)\s_vs.c
	$(CC) -c $(vs_simul_dir)\s_vs.c

#-- VS files

vs.obj: $(cfg_file) $(vs_dir)\vs.c
	$(CC) -c $(vs_dir)\vs.c

v120.obj: $(cfg_file) $(vs_dir)\v120.c
	$(CC) -c $(vs_dir)\v120.c

vs_acc.obj: $(cfg_file) $(vs_dir)\vs_acc.c
	$(CC) -c $(vs_dir)\vs_acc.c

vs_cfg.obj: $(cfg_file) $(vs_dir)\vs_cfg.c
	$(CC) -c $(vs_dir)\vs_cfg.c

vs_ctrl.obj: $(cfg_file) $(vs_dir)\vs_ctrl.c
	$(CC) -c $(vs_dir)\vs_ctrl.c

vs_err.obj: $(cfg_file) $(vs_dir)\vs_err.c
	$(CC) -c $(vs_dir)\vs_err.c

vs_evnt.obj: $(cfg_file) $(vs_dir)\vs_evnt.c
	$(CC) -c $(vs_dir)\vs_evnt.c

vs_exe.obj: $(cfg_file) $(vs_dir)\vs_exe.c
	$(CC) -c $(vs_dir)\vs_exe.c

vs_inp.obj: $(cfg_file) $(vs_dir)\vs_inp.c
	$(CC) -c $(vs_dir)\vs_inp.c

vs_outp.obj: $(cfg_file) $(vs_dir)\vs_outp.c
	$(CC) -c $(vs_dir)\vs_outp.c

vs_parm.obj: $(cfg_file) $(vs_dir)\vs_parm.c
	$(CC) -c $(vs_dir)\vs_parm.c

vs_proc.obj: $(cfg_file) $(vs_dir)\vs_proc.c
	$(CC) -c $(vs_dir)\vs_proc.c

vs_tab.obj: $(cfg_file) $(vs_dir)\vs_tab.c
	$(CC) -c $(vs_dir)\vs_tab.c

vs_term.obj: $(cfg_file) $(vs_dir)\vs_term.c
	$(CC) -c $(vs_dir)\vs_term.c

vs_time.obj: $(cfg_file) $(vs_dir)\vs_time.c
	$(CC) -c $(vs_dir)\vs_time.c

vs_util.obj: $(cfg_file) $(vs_dir)\vs_util.c
	$(CC) -c $(vs_dir)\vs_util.c

#-- Compiler Configuration File

$(cfg_file): $(mak_file)
  copy &&|
-ml!
-2
-a
-C
-w+
-N
-v
-y
-vi-
-H=$(sym_file)
-n$(.PATH.obj)
-I$(INCLUDEPATH)
-L$(LIBPATH)
-P-.c
| $(cfg_file)

#EOF
