
#/*-----------------------------------------------------------------------*
# *                       M O D U L E   H E A D E R
# *
# * filename - vs.mak
# *
# * $Revision$
# *
# * $Date$
# *
# * Makefile example for the V120 Functions Library
# * Customised for Borland C compiler
# *
# *-----------------------------------------------------------------------*/

#/*[]---------------------------------------------------[]*/
#/*|                                                     |*/
#/*|    OMNITEL-BRICKS                                   |*/
#/*|    V.120 Functions Library                          |*/
#/*|                                                     |*/
#/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
#/*|    All Rights Reserved.                             |*/
#/*|                                                     |*/
#/*[]---------------------------------------------------[]*/

.AUTODEPEND

#-- Target name

TARGET       = vs

#-- Generation file names

exe_file     = $(TARGET).exe
lib_file     = $(TARGET).lib
cfg_file     = $(TARGET).cfg
mak_file     = $(TARGET).mak
map_file     = $(TARGET).map
sym_file     = $(TARGET).sym

#-- Translator Definitions

CC           = tcc +$(cfg_file)
TASM         = tasm
TLIB         = tlib
TLINK        = tlink

LIBPATH      = C:\tc\lib
CINCLUDEPATH = C:\tc\include

#-- Omnitel source include directories

services_dir = services
vs_dir       = v120
dl_dir       = dl
dl_v120_dir  = dl\v120
simul_dir    = simul

#- Parameter files directory, used as the first include files directory

par_dir      = par

#-- Source, Object and Makefile directories

.PATH.lib    = bin\$(TARGET)
.PATH.obj    = bin\$(TARGET)
.PATH.c      = $(vs_dir)
.PATH.mak    = $(vs_dir)

#-- Full include path

INCLUDEPATH  = $(par_dir);$(vs_dir);$(dl_dir);$(dl_v120_dir);$(services_dir);$(CINCLUDEPATH)

#-- Implicit Rules

.c.obj:
  $(CC) -c $<

#------- List Macros

vs_obj = \
	vs.obj \
	v120.obj \
	vs_acc.obj \
	vs_cfg.obj \
	vs_ctrl.obj \
	vs_err.obj \
	vs_evnt.obj \
	vs_exe.obj \
	vs_inp.obj \
	vs_outp.obj \
	vs_parm.obj \
	vs_proc.obj \
	vs_tab.obj \
	vs_term.obj \
	vs_time.obj \
	vs_util.obj

#-- Explicit Rules

$(lib_file): $(cfg_file) $(vs_obj)
  $(TLIB) @&&|
$(.PATH.lib)\$(lib_file) /C &
-+&$(.PATH.obj)\vs.obj &
-+&$(.PATH.obj)\v120.obj &
-+&$(.PATH.obj)\vs_acc.obj &
-+&$(.PATH.obj)\vs_cfg.obj &
-+&$(.PATH.obj)\vs_ctrl.obj &
-+&$(.PATH.obj)\vs_err.obj &
-+&$(.PATH.obj)\vs_evnt.obj &
-+&$(.PATH.obj)\vs_exe.obj &
-+&$(.PATH.obj)\vs_inp.obj &
-+&$(.PATH.obj)\vs_outp.obj &
-+&$(.PATH.obj)\vs_parm.obj &
-+&$(.PATH.obj)\vs_proc.obj &
-+&$(.PATH.obj)\vs_tab.obj &
-+&$(.PATH.obj)\vs_term.obj &
-+&$(.PATH.obj)\vs_time.obj &
-+&$(.PATH.obj)\vs_util.obj
|

#-- Individual File Dependencies

vs.obj: $(cfg_file) $(vs_dir)\vs.c
	$(CC) -c $(vs_dir)\vs.c

v120.obj: $(cfg_file) $(vs_dir)\v120.c
	$(CC) -c $(vs_dir)\v120.c

vs_acc.obj: $(cfg_file) $(vs_dir)\vs_acc.c
	$(CC) -c $(vs_dir)\vs_acc.c

vs_cfg.obj: $(cfg_file) $(vs_dir)\vs_cfg.c
	$(CC) -c $(vs_dir)\vs_cfg.c

vs_ctrl.obj: $(cfg_file) $(vs_dir)\vs_ctrl.c
	$(CC) -c $(vs_dir)\vs_ctrl.c

vs_err.obj: $(cfg_file) $(vs_dir)\vs_err.c
	$(CC) -c $(vs_dir)\vs_err.c

vs_evnt.obj: $(cfg_file) $(vs_dir)\vs_evnt.c
	$(CC) -c $(vs_dir)\vs_evnt.c

vs_exe.obj: $(cfg_file) $(vs_dir)\vs_exe.c
	$(CC) -c $(vs_dir)\vs_exe.c

vs_inp.obj: $(cfg_file) $(vs_dir)\vs_inp.c
	$(CC) -c $(vs_dir)\vs_inp.c

vs_outp.obj: $(cfg_file) $(vs_dir)\vs_outp.c
	$(CC) -c $(vs_dir)\vs_outp.c

vs_parm.obj: $(cfg_file) $(vs_dir)\vs_parm.c
	$(CC) -c $(vs_dir)\vs_parm.c

vs_proc.obj: $(cfg_file) $(vs_dir)\vs_proc.c
	$(CC) -c $(vs_dir)\vs_proc.c

vs_tab.obj: $(cfg_file) $(vs_dir)\vs_tab.c
	$(CC) -c $(vs_dir)\vs_tab.c

vs_term.obj: $(cfg_file) $(vs_dir)\vs_term.c
	$(CC) -c $(vs_dir)\vs_term.c

vs_time.obj: $(cfg_file) $(vs_dir)\vs_time.c
	$(CC) -c $(vs_dir)\vs_time.c

vs_util.obj: $(cfg_file) $(vs_dir)\vs_util.c
	$(CC) -c $(vs_dir)\vs_util.c

#-- Compiler Configuration File

$(cfg_file): $(mak_file)
  copy &&|
-ml!
-2
-a
-C
-w+
-N
-v
-y
-vi-
-H=$(sym_file)
-n$(.PATH.obj)
-I$(INCLUDEPATH)
-L$(LIBPATH)
-P-.c
| $(cfg_file)

#EOF
