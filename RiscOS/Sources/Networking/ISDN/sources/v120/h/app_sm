
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - app_sm.h
 *
 * $Revision$
 *
 * $Date$
 *
 *	- app_sm.c header : contains function prototypes.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    OMNITEL-BRICKS                                   |*/
/*|    V.120 Functions Library                          |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#ifndef APP_SM
#define	APP_SM

#define		APPLI_SM_STATE_ATTACHED					'A'
#define		APPLI_SM_STATE_BEING_ATTACHED			'a'
#define		APPLI_SM_STATE_DETACHED					'D'
#define		APPLI_SM_STATE_BEING_DETACHED			'd'
#define		APPLI_SM_STATE_UNDEFINED				'?'

#define		APPLI_SM_CTX_NIL						0xFFFF

#define		APPLI_SM_ERR_NONE						0			/* no error */
#define		APPLI_SM_ERR_CTX_ACCESS					1			/* context access error */
#define		APPLI_SM_ERR_RESOURCE_ALLOC				2			/* resource alloaction failed */
#define		APPLI_SM_ERR_DATA_LINK_BUSY				3			/* data link is requested more than one time by different entities */
#define		APPLI_SM_ERR_STATE_NOT_RESPECT			4			/* states are not respected */
#define		APPLI_SM_ERR_NO_CHANNEL					5			/* no channel to attach */
#define		APPLI_SM_ERR_REFUSED_BY_SM				6			/* refused by SM */

/****************************************************************************

							STRUCTURE DEFINITIONS

*****************************************************************************/

#define		_Appli_sm						s_appli_sm					.
#define		_Appli_sm_context(i)			(_Appli_sm	a_context + i)	->


	/* Application management contexts structure
	--------------------------------------------*/

struct appli_sm_context {
	nai_t							nai;							/* network access id */
	add_t							chani;							/* channel id */
	sapi_t							dl_sapi;						/* data link lever service access point id */
	add_t							dl_ces;							/* data link lever connection end point id */
	ushort							dl_lli;							/* data link logical link id */
	ent_id_t						from;							/* dl sapi attachment requested by entity */
	uchar							line_status;					/* line status : connected or disconnected */
	uchar							channel_state;					/* channel state : attached or detached */
	uchar							outgoing;						/* OUTGOING or INCOMING cal */
};

#define		Sizeof_appli_sm_context	Rnd_sizeof (struct appli_sm_context)

#define		Appli_sm_nai(i)				(_Appli_sm_context (i)	nai)
#define		Appli_sm_chani(i)			(_Appli_sm_context (i)	chani)
#define		Appli_sm_dl_sapi(i)			(_Appli_sm_context (i)	dl_sapi)
#define		Appli_sm_dl_ces(i)			(_Appli_sm_context (i)	dl_ces)
#define		Appli_sm_dl_lli(i)			(_Appli_sm_context (i)	dl_lli)
#define		Appli_sm_from(i)			(_Appli_sm_context (i)	from)
#define		Appli_sm_line_status(i)		(_Appli_sm_context (i)	line_status)
#define		Appli_sm_channel_state(i)	(_Appli_sm_context (i)	channel_state)
#define		Appli_sm_outgoing(i)		(_Appli_sm_context (i)	outgoing)


	/* Application management X25 main structure
	--------------------------------------------*/

struct appli_sm {
	ushort							nb_ctx;							/* total number of dl sapi attach contexts */
	struct appli_sm_context FAR *	a_context;						/* address of contexts */
};

#define		Appli_sm_nb_ctx				(_Appli_sm			nb_ctx)
#define		Appli_sm_a_context			(_Appli_sm			a_context)


/*****************************************************************************

							PROTOTYPES & EXTERNALS

*****************************************************************************/

	extern	uchar	appli_sm_error_cause;

#if NEW_FCT_STYLE == ON
	ushort			appli_sm_ctx_access_chani (nai_t nai, add_t chani);
	ushort			appli_sm_ctx_access_dl_sapi_ces (nai_t nai, sapi_t dl_sapi, add_t dl_ces);
	uchar 			appli_sm_dl_sapi_attach_cfg (add_t max_nb_line, add_t max_nb_channel_per_line);
	uchar 			appli_sm_dl_sapi_attach_rq (
							ent_id_t from, nai_t nai,
							sapi_t dl_sapi, add_t dl_ces, ushort lli,
							uchar outgoing, struct v120_ph_ch_list FAR *p_ph_ch_list);

	uchar 			appli_sm_dl_sapi_state_read (nai_t nai, add_t chani);
	uchar 			appli_sm_dl_sapi_detach_rq (nai_t nai, add_t chani,
												struct v120_ph_ch_list FAR *p_ph_ch_list);
	uchar 			appli_sm_dl_sapi_co (nai_t nai, uchar FAR * p_data);
#else
	ushort			appli_sm_ctx_access_chani 		();
	ushort			appli_sm_ctx_access_dl_sapi_ces ();
	uchar 			appli_sm_dl_sapi_attach_cfg 	();
	uchar 			appli_sm_dl_sapi_attach_rq		();
	uchar 			appli_sm_dl_sapi_state_read		();
	uchar 			appli_sm_dl_sapi_detach_rq		();
	uchar 			appli_sm_dl_sapi_co				();
#endif

#endif	/* ifndef APP_SM */


/* END OF FILE */
