#
#          Makefile for TEST APPLICATION 
#

# ----------------------------------------------------------------- #
# Include files and Lib files
# ----------------------------------------------------------------- #

INCLUDES = -I^.^.par  -Ic: -I^.services 

LIBFILES = 



# ----------------------------------------------------------------- #
# Various Macros
# ----------------------------------------------------------------- #



CC = cc
NOTMODULE_CFLAGS = $(INCLUDES) -c -Throwback -depend !Depend -DD_ASSERT $(VARIANT_CFLAGS)
MODULE_CFLAGS = $(NOTMODULE_CFLAGS) -zM 
# -fc enables the limited pcc option (allows characters after endif) 
UNIX_CFLAGS = -fc

LINK = link
NOTMODULE_LINKFLAGS = -AOF
MODULE_LINKFLAGS = $(NOTMODULE_LINKFLAGS) 

CMHG = cmhg
CMHGFLAGS =

OBJASM = objasm 

AR = libfile
AR_FLAGS = -c -o

WIPE = -wipe
WIPEFLAGS = F~C~R~V

MODSQZ = modsqz -fv

# ----------------------------------------------------------------- #
# Rules for making things - do not change.
# ----------------------------------------------------------------- #
	   
.SUFFIXES:	.o_ .c .cmhg .s
.cmhg.o_:;	$(CMHG) $(CMHGFLAGS) -o $@ $<
.c.o_:;		$(CC) $(MODULE_CFLAGS) $< -o $@
.s.o_:;		$(OBJASM) -from $< -to $@

# ----------------------------------------------------------------- #
# Targets to be compiled
# ----------------------------------------------------------------- #

TARGETS = o_.asn1_dec\
 o_.asn1_enc\
 o_.asn1_prc\
 o_.ber_dec\
 o_.ber_enc

#Example of a single target with it's own include path
#com_proc.o:	com_proc.c
#		$(CC) -Iinclude_path com_proc.c

^.^.o_.asn1:	$(TARGETS)
		$(LINK) $(NOTMODULE_LINKFLAGS) -o $@ $(TARGETS) 
		


clean:;		@$(WIPE) o_.* $(WIPEFLAGS)

					   

# Dynamic dependencies:
o_.asn1_dec:	c.asn1_dec
o_.asn1_dec:	h.asn1
o_.asn1_dec:	^.services.h.services
o_.asn1_dec:	^.^.par.h.serv_par
o_.asn1_dec:	^.^.par.h.consts
o_.asn1_dec:	^.^.par.h._product
o_.asn1_dec:	c:h.string
o_.asn1_dec:	^.^.par.h.serv_por
o_.asn1_dec:	c:sys.h.types
o_.asn1_dec:	c:h.kernel
o_.asn1_dec:	c:h.swis
o_.asn1_dec:	h.asn1_int
o_.asn1_dec:	^.^.par.h.asn1_par
o_.asn1_dec:	^.^.par.ns.asn1_par
o_.asn1_dec:	h.asn1_mac
o_.asn1_dec:	h.asn1_ber
o_.asn1_enc:	c.asn1_enc
o_.asn1_enc:	h.asn1
o_.asn1_enc:	^.services.h.services
o_.asn1_enc:	^.^.par.h.serv_par
o_.asn1_enc:	^.^.par.h.consts
o_.asn1_enc:	^.^.par.h._product
o_.asn1_enc:	c:h.string
o_.asn1_enc:	^.^.par.h.serv_por
o_.asn1_enc:	c:sys.h.types
o_.asn1_enc:	c:h.kernel
o_.asn1_enc:	c:h.swis
o_.asn1_enc:	h.asn1_int
o_.asn1_enc:	^.^.par.h.asn1_par
o_.asn1_enc:	^.^.par.ns.asn1_par
o_.asn1_enc:	h.asn1_mac
o_.asn1_enc:	h.asn1_ber
o_.asn1_enc:	h.asn1cons
o_.asn1_prc:	c.asn1_prc
o_.asn1_prc:	h.asn1
o_.asn1_prc:	^.services.h.services
o_.asn1_prc:	^.^.par.h.serv_par
o_.asn1_prc:	^.^.par.h.consts
o_.asn1_prc:	^.^.par.h._product
o_.asn1_prc:	c:h.string
o_.asn1_prc:	^.^.par.h.serv_por
o_.asn1_prc:	c:sys.h.types
o_.asn1_prc:	c:h.kernel
o_.asn1_prc:	c:h.swis
o_.asn1_prc:	h.asn1_int
o_.asn1_prc:	^.^.par.h.asn1_par
o_.asn1_prc:	^.^.par.ns.asn1_par
o_.asn1_prc:	h.asn1_mac
o_.asn1_prc:	h.asn1_ber
o_.ber_dec:	c.ber_dec
o_.ber_dec:	h.asn1
o_.ber_dec:	^.services.h.services
o_.ber_dec:	^.^.par.h.serv_par
o_.ber_dec:	^.^.par.h.consts
o_.ber_dec:	^.^.par.h._product
o_.ber_dec:	c:h.string
o_.ber_dec:	^.^.par.h.serv_por
o_.ber_dec:	c:sys.h.types
o_.ber_dec:	c:h.kernel
o_.ber_dec:	c:h.swis
o_.ber_dec:	h.asn1_int
o_.ber_dec:	^.^.par.h.asn1_par
o_.ber_dec:	^.^.par.ns.asn1_par
o_.ber_dec:	h.asn1_mac
o_.ber_dec:	h.asn1_ber
o_.ber_enc:	c.ber_enc
o_.ber_enc:	h.asn1
o_.ber_enc:	^.services.h.services
o_.ber_enc:	^.^.par.h.serv_par
o_.ber_enc:	^.^.par.h.consts
o_.ber_enc:	^.^.par.h._product
o_.ber_enc:	c:h.string
o_.ber_enc:	^.^.par.h.serv_por
o_.ber_enc:	c:sys.h.types
o_.ber_enc:	c:h.kernel
o_.ber_enc:	c:h.swis
o_.ber_enc:	h.asn1_int
o_.ber_enc:	^.^.par.h.asn1_par
o_.ber_enc:	^.^.par.ns.asn1_par
o_.ber_enc:	h.asn1_mac
o_.ber_enc:	h.asn1_ber
