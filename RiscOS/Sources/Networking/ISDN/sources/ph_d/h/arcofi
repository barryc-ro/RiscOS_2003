
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - arcofi.h
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Siemens ISAC-S Driver                            |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#if (PH_CODEC == ARCOFI_2160) || (PH_CODEC == ARCOFI_2163) || (PH_CODEC == ARCOFI_2165) /* { */

						/* IDENTIFICATION */

#define IDENT_ADDRESS_P			1
#define IDENT_ADDRESS_L			7

#define IDENT_ID_P				0
#define IDENT_ID_L				8
#define	IDENT_ID_ARCOFI_SP_2160 G_8 (1,0,0,0, 0,0,0,0)
#define	IDENT_ID_ARCOFI_SP_2161 G_8 (1,0,0,0, 1,0,0,0)
#define	IDENT_ID_ARCOFI_SP_2165 G_8 (1,0,0,0, 0,0,1,0)
#define	IDENT_ID_ARCOFI_SP_2163 G_8 (1,0,0,0, 0,1,0,0)

						/* COMMAND REGISTER */

						/* R/W : Read Write */

#define CMDR_RW_P				7
#define CMDR_RW_L				1
#define CMDR_RW_WRITE           G_1 (0)
#define CMDR_RW_READ	        G_1 (1)

						/* RCM : Reverse Channel Mode */

#define CMDR_RCM_P				6
#define CMDR_RCM_L				1
#define CMDR_RCM_B1				G_1 (0)
#define CMDR_RCM_B2				G_1 (1)

						/* OP : operation */

#define CMDR_OP_P				4
#define CMDR_OP_L				2
#define CMDR_OP_RESERVED		G_2 (0,0)
#define CMDR_OP_SOP				G_2 (0,1)
#define CMDR_OP_COP				G_2 (1,0)
#define CMDR_OP_XOP				G_2 (1,1)

						/* ADD : address */

#define CMDR_ADD_P				0
#define CMDR_ADD_L              4

							/* CMD SOP Sequence Description */

#define CMDR_ADD_SOP_0_GCR		G_4 (0,0,0,0)
#define CMDR_ADD_SOP_1_DFICR	G_4 (0,0,0,1)
#define CMDR_ADD_SOP_2_PFCR		G_4 (0,0,1,0)
#define CMDR_ADD_SOP_3_TGCR		G_4 (0,0,1,1)
#define CMDR_ADD_SOP_4_TGSR		G_4 (0,1,0,0)
#define CMDR_ADD_SOP_5_ATCR		G_4 (0,1,0,1)
#define CMDR_ADD_SOP_6_ARCR		G_4 (0,1,1,0)
#define CMDR_ADD_SOP_7_TFCR		G_4 (0,1,1,1)
#define CMDR_ADD_SOP_8_SDICR	G_4 (1,0,0,0)
#define CMDR_ADD_SOP_9_TSCR		G_4 (1,0,0,1)
#define CMDR_ADD_SOP_A_XCR		G_4 (1,0,1,0)
#define CMDR_ADD_SOP_D_IDENT	G_4 (1,1,0,1)
#define CMDR_ADD_SOP_E_TMR		G_4 (1,1,1,0)
#define CMDR_ADD_SOP_F_ALL		G_4 (1,1,1,1)

#define CMDR_SOP_SIZE			2
#define CMDR_SOP_ALL_SIZE		9

								/* CMD COP Description */

#define CMDR_ADD_COP_0			G_4 (0,0,0,0)
#define CMDR_ADD_COP_1			G_4 (0,0,0,1)
#define CMDR_ADD_COP_2			G_4 (0,0,1,0)
#define CMDR_ADD_COP_3			G_4 (0,0,1,1)
#define CMDR_ADD_COP_4			G_4 (0,1,0,0)
#define CMDR_ADD_COP_5			G_4 (0,1,0,1)
#define CMDR_ADD_COP_6			G_4 (0,1,1,0)
#define CMDR_ADD_COP_7			G_4 (0,1,1,1)
#define CMDR_ADD_COP_8			G_4 (1,0,0,0)
#define CMDR_ADD_COP_9			G_4 (1,0,0,1)
#define CMDR_ADD_COP_A			G_4 (1,0,1,0)
#define CMDR_ADD_COP_B			G_4 (1,0,1,1)
#define CMDR_ADD_COP_C			G_4 (1,1,0,0)
#define CMDR_ADD_COP_D			G_4 (1,1,0,1)
#define CMDR_ADD_COP_E			G_4 (1,1,1,0)
#define CMDR_ADD_COP_F			G_4 (1,1,1,1)

#define CMDR_ADD_COP_0_SIZE		9
#define CMDR_ADD_COP_1_SIZE		9
#define CMDR_ADD_COP_2_SIZE		9
#define CMDR_ADD_COP_3_SIZE		5
#define CMDR_ADD_COP_4_SIZE		5
#define CMDR_ADD_COP_5_SIZE		9
#define CMDR_ADD_COP_6_SIZE		5
#define CMDR_ADD_COP_7_SIZE		9
#define CMDR_ADD_COP_8_SIZE		9
#define CMDR_ADD_COP_9_SIZE		9
#define CMDR_ADD_COP_A_SIZE		9
#define CMDR_ADD_COP_B_SIZE		9
#define CMDR_ADD_COP_C_SIZE		9
#define CMDR_ADD_COP_D_SIZE		9
#define CMDR_ADD_COP_E_SIZE		9
#define CMDR_ADD_COP_F_SIZE		9

								/* CMD XOP Description */

#define CMDR_ADD_XOP_0			G_4 (0,0,0,0)
#define CMDR_ADD_XOP_1			G_4 (0,0,0,1)
#define CMDR_ADD_XOP_2			G_4 (0,0,1,0)
#define CMDR_ADD_XOP_3			G_4 (0,0,1,1)
#define CMDR_ADD_XOP_4			G_4 (0,1,0,0)
#define CMDR_ADD_XOP_E			G_4 (1,1,1,0)
#define CMDR_ADD_XOP_F			G_4 (1,1,1,1)
#define CMDR_ADD_XOP_SIZE		1

						/* GCR : GENERAL CONFIGURATION REGISTER */

#define GCR_SP_P				7
#define GCR_SP_L				1
#define GCR_SP_DISABLE			G_1 (0)
#define GCR_SP_ENABLE			G_1 (1)

#define GCR_AGCX_P				6
#define GCR_AGCX_L				1
#define GCR_AGCX_DISABLE		G_1 (0)
#define GCR_AGCX_ENABLE			G_1 (1)

#define GCR_LAG_P				5
#define GCR_LAG_L				1
#define GCR_LAG_0_DB			G_1 (0)
#define GCR_LAG_FROM_CRAM		G_1 (1)

#define GCR_EVX_P				4
#define GCR_EVX_L				1
#define GCR_EVX_DISABLE			G_1 (0)
#define GCR_EVX_ENABLE			G_1 (1)

#define GCR_SLOT_P				3
#define GCR_SLOT_L				1
#define GCR_SLOT_CHANNEL_0		G_1 (0)
#define GCR_SLOT_CHANNEL_1		G_1 (1)

#define GCR_PU_P				2
#define GCR_PU_L				1
#define GCR_PU_STAND_BY			G_1 (0)
#define GCR_PU_POWER_UP			G_1 (1)

#define GCR_CAM_P				1
#define GCR_CAM_L				1
#define GCR_CAM_2				G_1 (0)
#define GCR_CAM_1				G_1 (1)

#define GCR_LAW_P				0
#define GCR_LAW_L				1
#define GCR_LAW_A				G_1 (0)
#define GCR_LAW_MU				G_1 (1)

			/* DFICR : DATA FORMAT and INTERFACE CONFIGURATION REGISTER */

#define DFICR_SD_P				7
#define DFICR_SD_L				1

#define DFICR_SC_P				6
#define DFICR_SC_L				1

#define DFICR_SB_P				5
#define DFICR_SB_L				1

#define DFICR_SA_P				4
#define DFICR_SA_L				1

#define DFICR_S_OUT				G_1 (0)
#define DFICR_S_IN				G_1 (1)

#define DFICR_VDM_P				0
#define DFICR_VDM_L				4

				/* PFCR : PROGRAMMABLE FILTER CONFIGURATION REGISTER */

#define PFCR_GX_P				7
#define PFCR_GX_L				1

#define PFCR_GR_P				6
#define PFCR_GR_L				1

#define PFCR_GZ_P				5
#define PFCR_GZ_L				1

#define PFCR_FX_P				4
#define PFCR_FX_L				1

#define PFCR_0_DB				G_1 (0)
#define PFCR_0_FROM_CRAM		G_1 (1)

#define PFCR_FR_P				2
#define PFCR_FR_L				2
#define PFCR_FR_BY_PASSED		G_2 (0,0)
#define PFCR_FR_LOUDSPEAKER		G_2 (0,1)
#define PFCR_FR_EARPIECE		G_2 (1,0)
#define PFCR_FR_BOTH			G_2 (1,1)

#define PFCR_DHP_P				0
#define PFCR_DHP_L				1
#define PFCR_DHP_DISABLE		G_1 (0)
#define PFCR_DHP_ENABLE			G_1 (1)

					/* TGCR : TONE GENERATOR CONFIGURATION REGISTER */

#define TGCR_TG_P				7
#define TGCR_TG_L				1
#define TGCR_TG_DISABLE			G_1 (0)
#define TGCR_TG_ENABLE			G_1 (1)

#define TGCR_DT_P				6
#define TGCR_DT_L				1
#define TGCR_DT_DISABLE			G_1 (0)
#define TGCR_DT_ENABLE			G_1 (1)

#define TGCR_ETF_P				5
#define TGCR_ETF_L				1
#define TGCR_ETF_BY_PASS		G_1 (0)
#define TGCR_ETF_FROM_CRAM		G_1 (1)

#define TGCR_CG_P				4
#define TGCR_CG_L				1
#define TGCR_CG_DISABLE			G_1 (0)
#define TGCR_CG_ENABLE			G_1 (1)

#define TGCR_BT_P				3
#define TGCR_BT_L				1
#define TGCR_BT_DISABLE			G_1 (0)
#define TGCR_BT_ENABLE			G_1 (1)

#define TGCR_BM_P				2
#define TGCR_BM_L				1
#define TGCR_BM_DISABLE			G_1 (0)
#define TGCR_BM_ENABLE			G_1 (1)

#define TGCR_SM_P				1
#define TGCR_SM_L				1
#define TGCR_SM_DISABLE			G_1 (0)
#define TGCR_SM_ENABLE			G_1 (1)

#define TGCR_SQTR_P				0
#define TGCR_SQTR_L				1
#define TGCR_SQTR_DISABLE		G_1 (0)
#define TGCR_SQTR_ENABLE		G_1 (1)

						/* TGSR : TONE GENERATOR SWITCH REGISTER */

#define TGSR_PM_P				7
#define TGSR_PM_L				1
#define TGSR_PM_NOT_OUTPUT		G_1 (0)
#define TGSR_PM_OUTPUT			G_1 (1)

#define TGSR_TRL_P				6
#define TGSR_TRL_L				1
#define TGSR_TRL_NOT_OUTPUT		G_1 (0)
#define TGSR_TRL_OUTPUT			G_1 (1)

#define TGSR_TRR_P				4
#define TGSR_TRR_L				1
#define TGSR_TRR_DISABLE		G_1 (0)
#define TGSR_TRR_ENABLE			G_1 (1)

#define TGSR_DTMF_P				3
#define TGSR_DTMF_L				1
#define TGSR_DTMF_DISABLE		G_1 (0)
#define TGSR_DTMF_ENABLE		G_1 (1)

#define TGSR_TRX_P				2
#define TGSR_TRX_L				1
#define TGSR_TRX_DISABLE		G_1 (0)
#define TGSR_TRX_ENABLE			G_1 (1)

				/* ATCR : AFE-TRANSMIT CONFIGURATION REGISTER */

#define ATCR_MIC_P				4
#define ATCR_MIC_L				4
#define ATCR_MIC_POWER_DOWN		G_4  (0,0,0,0)
#define ATCR_MIC_0_DB			G_4  (0,0,0,1)
#define ATCR_MIC_6_DB			G_4  (0,0,1,0)
#define ATCR_MIC_12_DB			G_4  (0,0,1,1)
#define ATCR_MIC_18_DB			G_4  (0,1,0,0)
#define ATCR_MIC_24_DB			G_4  (0,1,0,1)
#define ATCR_MIC_30_DB			G_4  (0,1,1,0)
#define ATCR_MIC_36_DB			G_4  (0,1,1,1)
#define ATCR_MIC_42_DB			G_4  (1,0,0,0)
#define ATCR_MIC_BY_PASS		G_4  (1,1,1,1)

#define ATCR_EVREF_P			3
#define ATCR_EVREF_L			1

#define ATCR_AIMX_P				0
#define ATCR_AIMX_L				2
#define ATCR_AIMX_MIP1_MIN1		G_2 (0,0)
#define ATCR_AIMX_MIP2_MIN2		G_2 (0,1)
#define ATCR_AIMX_MI3			G_2 (1,0)

				/* ARCR : AFE-RECEIVE CONFIGURATION REGISTER */

#define ARCR_HOC_P				5
#define ARCR_HOC_L				3
#define ARCR_HOC_POWER_DOWN		G_3  (0,0,0)
#define ARCR_HOC_2_5_DB			G_3  (0,0,1)
#define ARCR_HOC_M3_5_DB		G_3  (0,1,0)
#define ARCR_HOC_M9_5_DB		G_3  (0,1,1)
#define ARCR_HOC_M15_5_DB		G_3  (1,0,0)
#define ARCR_HOC_M21_5_DB		G_3  (1,0,1)
#define ARCR_HOC_BY_PASS		G_3  (1,1,1)

#define ARCR_CME_P				4
#define ARCR_CME_L				1

#define ARCR_LSC_P				0
#define ARCR_LSC_L				4
#define ARCR_LSC_POWER_DOWN		G_4  (0,0,0,0)
#define ARCR_LSC_11_5_DB		G_4  (0,0,0,1)
#define ARCR_LSC_8_5_DB			G_4  (0,0,1,0)
#define ARCR_LSC_5_5_DB			G_4  (0,0,1,1)
#define ARCR_LSC_2_5_DB			G_4  (0,1,0,0)
#define ARCR_LSC_M0_5_DB		G_4  (0,1,0,1)
#define ARCR_LSC_M3_5_DB		G_4  (0,1,1,0)
#define ARCR_LSC_M6_5_DB		G_4  (0,1,1,1)
#define ARCR_LSC_M9_5_DB		G_4  (1,0,0,0)
#define ARCR_LSC_M12_5_DB		G_4  (1,0,0,1)
#define ARCR_LSC_M15_5_DB		G_4  (1,0,1,0)
#define ARCR_LSC_M18_5_DB		G_4  (1,0,1,1)
#define ARCR_LSC_M21_5_DB		G_4  (1,1,0,0)
#define ARCR_LSC_BY_PASS		G_4  (1,1,1,1)

				/* TFCR : TEST FUNCTION CONFIGURATION REGISTER */

#define TFCR_EPZST_P			6
#define TFCR_EPZST_L			1
#define TFCR_EPZST_PIEZO_PORT	G_1 (0)
#define TFCR_EPZST_SPEAKERPHONE	G_1 (1)

#define TFCR_ALTF_P				3
#define TFCR_ALTF_L				3
#define TFCR_ALTF_NOT			G_3 (0,0,0)
#define TFCR_ALTF_ALF			G_3 (0,0,1)
#define TFCR_ALTF_ALC			G_3 (0,1,0)
#define TFCR_ALTF_ALN			G_3 (0,1,1)
#define TFCR_ALTF_ALI			G_3 (1,0,0)

#define TFCR_DLTF_P				0
#define TFCR_DLTF_L				3
#define TFCR_DLTF_NOT			G_3 (0,0,0)
#define TFCR_DLTF_IDR			G_3 (0,0,1)
#define TFCR_DLTF_DLP			G_3 (0,1,0)
#define TFCR_DLTF_DLS			G_3 (0,1,1)
#define TFCR_DLTF_DLN			G_3 (1,0,0)

#define Arcofi_IOM2_enable(p_peitab)   sbc_iom2_switch(p_peitab, OFF)

/*--------------------------------------------------------------------------*/

						/* ARCOFI Common function declarations */

#if NEW_FCT_STYLE == ON
	struct message FAR  *arcofi_open (struct buffer  FAR * FAR *p_p_buffer, uchar FAR * FAR *p_p_rq);
	void 				 arcofi_send (struct message FAR *p_msg, ent_id_t from,	nai_t nai);

#else

	struct message FAR  *arcofi_open ();
	void 				 arcofi_send ();
#endif

/*--------------------------------------------------------------------------*/

#endif /* (PH_CODEC == ARCOFI_2163) || (PH_CODEC == ARCOFI_2165) } */

/*EOF*/
