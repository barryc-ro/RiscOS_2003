
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - cc_par.h
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the options and parameters header module of the
 *        Call COntrol Entity of the OMNITEL-BRICKS family product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Call Control (CC) Entity                         |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#ifndef CC_PAR
#define CC_PAR
							/* CC COMPILATION OPTIONS */

/*--------------------------------------------------------------------------*/

							/* CARRIERS */

				/*-=-=- NETWORK OPERATORS IDS SELECTION -=-=-=-*/

		/*
		 * Selected network ids are set to ON.
		 * Non select network ids are set to OFF.
		 */

#define CC_F_A11						OFF		/* ARINC CTU to  Bearer system BS */
#define CC_F_A17						OFF		/* ARINC CTU to zone units in the CDS */
#define CC_F_AT4						OFF		/* AT&T 4ESS Flag */
#define CC_F_AT5						OFF		/* AT&T 5ESS5 CUSTOM Flag */
#define CC_F_AT9						OFF		/* AT&T 5ESS9 NATIONAL Flag */
#define CC_F_AU1						OFF		/* Australian Telecom 1 Flag */
#define CC_F_BIP						OFF		/* Bellcore ISDN Primary rate, TR-NWT-001268 */
#define CC_F_BT2						OFF		/* British Telecom ISDN2 Flag */
#define CC_F_BV1						OFF		/* Belgian V1 Flag */
#define CC_F_DMS						OFF		/* Northern Telecom DMS100 Flag */
#define CC_F_ETS					ON			/* European ETSI Technical Comittee Flag */
#define CC_F_E10						OFF		/* ATT 5ESS10 CUSTOM for BRI, CUSTOM/NATIONAL for PRI (Switch 2000) */
#define CC_F_HKT						OFF		/* European Hong Kong Telephone Flag */
#define CC_F_KDD						OFF		/* Kokusai Denshin Denwa (Japan) Flag */
#define CC_F_NI1						OFF		/* US National ISDN 1 Flag */
#define CC_F_NI2						OFF		/* US National ISDN 2 Flag */
#define CC_F_NTT						OFF		/* Nippon Telegraph Telephone (Japan) Flag */
#define CC_F_QSI						OFF		/* ECMA QSIG flag */
#define CC_F_SWD						OFF		/* Sweedish Televerket Flag */
#define CC_F_TR6						OFF		/* Deutsche Telekom 1TR6 Flag */
#define CC_F_VN2						OFF		/* France Telecom VN2 Flag */
#define CC_F_VN3						OFF		/* France Telecom VN3 Flag */
#define CC_F_VN6						OFF		/* France Telecom VN6 Flag */

#define CC_NETWORK_NB					1		/* maximum implemented simultaneously running network number */

#define	CC_OPERATOR						ETSI	/* default NETWORK OPERATOR and release */
#define	CC_COUNTRY						EUROPE	/* default country where the software is running */

/*--------------------------------------------------------------------------*/

#define CC_INTERFACE					ON		/* use of  CC-interface form messages (ON/OFF) */
#define ACU_INTERFACE					ON		/* use of ACU-interface form messages (ON/OFF) */

#define CC_PROFILE_CONFIG				OFF		/* use profiles configuration structure (ON/OFF) */

#define	CC_TYPE_BRI						ON		/* BRI access supported (ON/OFF) */
#define	CC_TYPE_PRI						ON		/* PRI access supported (ON/OFF) */

	/*
	   CC_MULTI_CHAN_CALLS: use multi-channel calls : ON/OFF.
	   If this parameter is set to ON, then CC will assume that the CCE
	   entity is not an entity on its own, but included in the CC entity;
	   all messages exchanged between them will be managed by an internal
	   queue. ENT_CCE must not be referenced in any server, and must not be
	   set as a destination entity in any message.
	   If this parameter is set to OFF, then CC will assume that the CCE
	   entity is an entity on its own, and all messages exchanged between
	   them will be sent/received normally.
	   This parameter must be used in conjunction with the
	   'CCE_MERGED_WITH_CC' parameter defined in cce_par.h.
	   Both parameters must have the same value (ON/OFF).
	*/

#define CC_MULTI_CHAN_CALLS				OFF

/*--------*/

#define CC_SPF_FAC						ON	 	/* Network specific facilities (for FT_VN2/FT_VN3/FT_VN6 operators only) (ON/OFF) */
#define	CC_SUPP_SERVICES				OFF		/* Supplementary services, used for transparent facility only (ON/OFF) */
#define CC_ADDRESS_FILTERING    		ON      /* Address filtering done by CC or not (=> by Application) (ON/OFF) */
#define	CC_CALLED_SUB_ADD				ON		/* Process the called sub address (ON/OFF) */
#define CC_CALLING_SUB_ADD				ON		/* Process the calling sub address (ON/OFF) */
#define CC_UUI							ON		/* Process th UUI protocol (ON/OFF) */
#define	CC_OVERLAP_RECEIVING			OFF		/* Process the overlap receiving (ON/OFF) */
#define	CC_RESTART_PROCEDURE			ON		/* Process the restart procedures (ON/OFF) */
#define	CC_SUSPEND_RESUME				ON		/* Process the suspend/resume procedures (ON/OFF) */
#define CC_V120_CODING					ON		/* If OFF, the ACU_V120_SERVICE/CC_SERVICE_V120 */
											/* services will be coded in the BC/LLC/HLC IEs */
											/* as for ACU_DATA_SERVICE/CC_SERVICE_DATA_HDLC (ON/OFF) */

#define CC_USE_ACU_SET_MODE_RQ_CO		OFF		/* use of ACU_SET_MODE_RQ/_CO primitive (ON/OFF) */

#define CC_PAR_CHARGING_INFO			OFF		/* process charging information (ON/OFF) */
#define CC_PAR_DISPLAY_IE				OFF		/* process 'Display' Information Element (ON/OFF) */
#define CC_PAR_DATE_TIME				OFF		/* process 'Date_and_time' Information Element (ON/OFF) */
#define CC_PAR_PCS_USER_INFO			OFF		/* process 'User to PCS' and 'PCS to User' Information Elements (ON/OFF, VN6 only) */
#define CC_PAR_KEYPAD_IE				OFF		/* process 'Keypad' Information Element (ON/OFF) */
#define CC_PAR_MULTIPLE_CALLING_NB		OFF		/* process multiple calling numbers if available (ON/OFF) */
#define CC_PAR_REDIR_NB					OFF		/* process redirected number if available (ON/OFF, available on VN6 only) */
#define CC_PAR_SIGNAL_IE				OFF		/* process Signal IE if available (ON/OFF, available on NI2, E10, DMS and ARINC networks only) */
#define CC_PAR_PROGRESS_IND_IE			OFF		/* process Progress-Indicator IE if available (ON/OFF, available on NI2, E10, DMS and ARINC networks only) */
#define CC_PAR_SEMI_PERMANENT_CIRCUITS	OFF		/* process semi-permanent circuits (ON/OFF, available on AU1 only at the moment) */

			/*
				They must be the same as defined in ns_int.h
				if the CC entity is to be used only with NS entity
			*/

/*--------------------------------------------------------------------------*/

#define CC_SUB_ADDRESS_DELIMITER		'*'		/* Address*Sub-address delimiter */

/*--------------------------------------------------------------------------*/

		/* Configuration structure sizing parameters */

#define CC_CONFIG_MX_NA					2		/* maximum number of network access described in the configuration structure */

#define CC_MX_CONFIG_PROFILES			2		/* maximum number of profiles descriptions in the CC profile configuration structure */

#define CC_MX_SERVICES					21		/* maximum number of services in the configuration structure */
#define CC_MX_ADD_LOCAL_NB				2		/* maximum number of additional Local_nb-Services associations */

#define	CC_MX_SZ_CALLING_NB				15		/* Maximum size for calling nb (<=32) */
#define	CC_MX_SZ_CALLING_SUB_ADD		8		/* Maximum size for calling sub address (<=20) */
#define	CC_MX_SZ_CALLED_NB      		15		/* Maximum size for called nb (<=32) */
#define	CC_MX_SZ_CALLED_SUB_ADD			8		/* Maximum size for called sub address (<=20) */
#define CC_MX_SZ_UUI					32		/* Maximum size for UUI (<=128) */

/*--------------------------------------------------------------------------*/

		/* ACU primitives structures related parameters */

#define ACU_PAR_EXTENDED_PRIM			OFF		/* extended ACU primitives (extended IEs passing) (ON/OFF) */

#if ACU_PAR_EXTENDED_PRIM == ON
#	define ACU_PAR_EXT_LLC				ON		/* extended LLC IE (ON/OFF) */
#	define ACU_PAR_EXT_FAC_ASN1			ON		/* extended Facility IE, in ETSI ASN1 format (ON/OFF) */
#	define ACU_PAR_EXT_CUG				ON		/* extended CUG IE or facility component (ON/OFF) */
#endif

#define ACU_MX_CHANI					1		/* maximum number of B-channel ids in the lists inside the primitives */
#define	ACU_MX_DISPLAY					1		/* Maximum number of display occurences sent at ACU interface */
#define	ACU_MX_PROGRESS_IND				1		/* Maximum number of progress_indicator occurences sent at ACU interface */

/*--------------------------------------------------------------------------*/

	/* User defined macros:

		These macros must be defined to call a user application that handles
		the 'invoke_ids' to be used by CC to build an ASN1 Facility IE.
		The provided default functions can be used when the application
		does not build ASN1 Components itself, otherwise a specific set
		of functions must be written and referenced by these macros,
		so that no 'invoke_id' problem can occur (i.e. duplicated
		'invoke_ids' used at the same time by ASN1 components beeing built
		by the application and other ones beeing built by CC).

		Prototypes and description:

		- short Cc_par_allocate_asn1_invoke_id (add_t conn_id):
			allocates and returns an 'invoke_id'.

		- void Cc_par_free_asn1_invoke_id (add_t conn_id, short invoke_id):
			free a previously allocated 'invoke_id'.
	*/

#define Cc_par_allocate_asn1_invoke_id(conn_id)			cc_allocate_asn1_invoke_id (conn_id)
#define Cc_par_free_asn1_invoke_id(conn_id,invoke_id)	cc_free_asn1_invoke_id (conn_id, invoke_id)

/*--------------------------------------------------------------------------*/

#endif

/*EOF*/
