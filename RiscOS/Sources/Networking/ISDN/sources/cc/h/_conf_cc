/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - conf_cc.h
 *
 * $Revision$
 *
 * $Date$
 *
 *		Call Control entity configuration structure.
 *
 *		This file is to be included into the "config.h" file.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Call Control (CC) Entity                         |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#if (SIMULATION == ON) || !defined(SERVICES_INIT) /* { */

			/* CC configuration structure */

CONST struct cc_config cc_config_data = {

	{0},						/* confirm */

#	if CC_PROFILE_CONFIG == ON

		{
			CC_CONFIG_TYPE_STANDARD,/* Type of CC configuration structure */
		},

#	endif

	1,							/* number of Network Access */

		/* Network Access descriptions table */

	{

			/* first access : 0 */

		{
			0,					/* nai */
			ENT_DTE_INT,		/* user entity id used for incoming calls */
			ACU_SAPI,			/* SAPI used for incoming calls */
			1,					/* nb of call contexts */
			(CC_VOICE_ALERT_RQ |
			 CC_DATA_ALERT_RQ),	/* Incoming calls behaviour */
			CC_LOCAL_NB_NIL,	/* local address or CC_LOCAL_NB_NIL */
			CC_LOCAL_SUB_ADD_NIL,/* local sub address or CC_LOCAL_SUB_ADD_NIL */
			CC_CALLING_NB_NIL,	/* calling address or CC_CALLING_NB_NIL */
			CC_CALLING_SUB_ADD_NIL,/* calling sub address or CC_CALLING_SUB_ADD_NIL */
			OFF,				/* UUI recognition */

				/* available services list */

			{
				ACU_FAX_SERVICE,
				ACU_FAX_4_SERVICE,
				ACU_DATA_SERVICE,
				ACU_DATA_56KBS_SERVICE,
				ACU_DATA_TRANS_SERVICE,
				ACU_MODEM_SERVICE,
				ACU_AUDIO_7_SERVICE,
				ACU_X25_SERVICE,
				ACU_X25_PACKET_SERVICE,
				ACU_VOICE_SERVICE,
				ACU_VOICE_TRANS_SERVICE,
				ACU_V110_SERVICE,
				ACU_V120_SERVICE,
				ACU_VIDEO_SERVICE,

				ACU_FAX_RELAY_SERVICE,
				ACU_DATA_RELAY_SERVICE,
				ACU_DATA_56KBS_RELAY_SERVICE,
				ACU_DATA_TRANS_RELAY_SERVICE,
				ACU_MODEM_RELAY_SERVICE,
				ACU_X25_RELAY_SERVICE,
				ACU_VOICE_RELAY_SERVICE,

				ACU_NO_SERVICE,
			},

			CC_MX_ADD_LOCAL_NB,	/* number of following additional called number-services associations */

#		if CC_MX_ADD_LOCAL_NB > 0

			{
				{
					"123456",				/* local address */
					CC_LOCAL_SUB_ADD_NIL,	/* local sub address or CC_LOCAL_SUB_ADD_NIL */

						/* associated services list */

					{
						ACU_FAX_SERVICE,
						ACU_VOICE_SERVICE,
						ACU_MODEM_SERVICE,

						ACU_NO_SERVICE,
					},

					0,						/* redirection entity for NS_CONN_IN (0 is default : ENT_CC itself) */

					0,						/* service list priority : 0..255 (highest is 0, 255=CC_PRIORITY_DISABLE) */

					0,						/* B channel id (0 for 'any') */

					1,						/* service list id associated with the services list */

					0,						/* user entity used for incoming calls (if 0, use the general one) */
				},

				{
					"789789",				/* local address */
					"1234",					/* local sub address or CC_LOCAL_SUB_ADD_NIL */

						/* associated services list */

					{
						ACU_DATA_SERVICE,
						ACU_X25_SERVICE,

						ACU_NO_SERVICE,
					},

					ENT_CC,					/* redirection entity for NS_CONN_IN (0 is default : ENT_CC itself) */

					5,						/* service list priority : 0..255 (highest is 0, 255=CC_PRIORITY_DISABLE) */

					0,						/* B channel id (0 for 'any') */

					2,						/* service list id associated with the services list */

					0,						/* user entity used for incoming calls (if 0, use the general one) */
				},

			},

#		endif

			0,					/* country */
			0,					/* operator */

			BRI,				/* type */
			FG_NT_TE,			/* function grouping (will be forced to FG_TE_NT if EQUIPMENT is TE) */

			0,					/* redirection entity for NS_CONN_IN (0 is default : ENT_CC itself) */

			0,					/* service list priority : 0..255 (highest is 0, 255=CC_PRIORITY_DISABLE) */

			OFF,				/* use of SPID */
			0,					/* nai when interfacing physical entity */

			0,					/* B channel id (0 for 'any') */

			0,					/* service list id associated with the services list */

			CC_SEND_CONN_CO_ON_PROGRESS,
								/* Outgoing calls behaviour */

			8,					/* nb of digits to route the call in "buffered overlap receiving" mode */
		},

			/* second access : 1 */

		{
			1,					/* nai */
			ENT_DTE_INT,		/* user entity id used for incoming calls */
			ACU_SAPI,			/* SAPI used for incoming calls */
			3,					/* nb of call contexts */
			(CC_VOICE_ALERT_RQ |
			 CC_DATA_CONN_RS),	/* Incoming calls behaviour */
			CC_LOCAL_NB_NIL,	/* local address or CC_LOCAL_NB_NIL */
			CC_LOCAL_SUB_ADD_NIL,/* local sub address or CC_LOCAL_SUB_ADD_NIL */
			CC_CALLING_NB_NIL,	/* calling address or CC_CALLING_NB_NIL */
			CC_CALLING_SUB_ADD_NIL,/* calling sub address or CC_CALLING_SUB_ADD_NIL */
			ON,					/* UUI recognition */

				/* available services list */

			{
				ACU_X25_SERVICE,
				ACU_VOICE_SERVICE,
				ACU_DATA_56KBS_SERVICE,

				ACU_NO_SERVICE,
			},

			0,	/* no following additional called number-services associations */

#			if CC_MX_ADD_LOCAL_NB > 0
				{0},
#			endif

			EUROPE,				/* country */
			ETSI,				/* operator */

			BRI,				/* type */
			FG_TE_NT,			/* function grouping (will be forced to FG_TE_NT if EQUIPMENT is TE) */

			0,					/* redirection entity for NS_CONN_IN (0 is default : ENT_CC itself) */

			0,					/* service list priority : 0..255 (highest is 0, 255=CC_PRIORITY_DISABLE) */

			OFF,				/* use of SPID */
			0,					/* nai when interfacing physical entity */

			0,					/* B channel id (0 for 'any') */

			0,					/* service list id associated with the services list */

			CC_SEND_CONN_CO_ON_PROGRESS,
								/* Outgoing calls behaviour */

			8,					/* nb of digits to route the call in "buffered overlap receiving" mode */
		},

	},

};

	/*-------------------------------------------------------------------*/

				/* CC profiles configuration structure */

				/*
					!!!!!!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!!!!!!

					The profiles configuration structures

					MUST BE SENT BEFORE THE STANDARD CC CONFIGURATION
					STRUCTURES

				*/

#if CC_PROFILE_CONFIG == ON /* { */

CONST struct cc_profile_config cc_profile_config_data = {

	{0},						/* confirm */

	{
		CC_CONFIG_TYPE_PROFILES,/* Type of CC configuration structure */
	},

	1,							/* nb of profiles in the structure */

	{   	/* Table of user-defined profiles */

			/* Profile example for PPP calls, using ENT_DTE_INT
			   as the layer 2:
			*/

		{	/* begin profile [0] */	/* PPP */

			128,				/* profile id, must be >= 128 */
			ACU_DATA_SERVICE,	/* associated service id */

				/* MPH_B_SWITCH_RQ-related parameters */

			{
				ON,				/* enable sending of MPH_B_SWITCH_RQ (ON) or not (OFF) */
			},

				/* MPH_B_INIT_RQ-related parameters */

			{
				ON,				/* enable sending of MPH_B_INIT_RQ (ON) or not (OFF) */
				ENT_DTE_INT,	/* layer 2 entity id */
				ENT_NIL,		/* layer 3 entity id */
			},
		}, /* end profile [0] */

	},

};

#endif /* } CC_PROFILE_CONFIG == ON */

	/*-------------------------------------------------------------------*/

#endif /* } */

/*EOF*/
