
#/*-----------------------------------------------------------------------*
# *                       M O D U L E   H E A D E R
# *
# * filename - m34.mak
# *
# * $Revision$
# *
# * $Date$
# *
# * Makefile example for NS+CC simulator (M34)
# * Customised for Borland C compiler
# *
# *-----------------------------------------------------------------------*/

#/*[]---------------------------------------------------[]*/
#/*|                                                     |*/
#/*|    ISDN-BRICKS                                      |*/
#/*|    Call Control (CC) Entity                         |*/
#/*|                                                     |*/
#/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
#/*|    All Rights Reserved.                             |*/
#/*|                                                     |*/
#/*[]---------------------------------------------------[]*/

.AUTODEPEND

#-- Target name

TARGET       = m34

#-- Generation file names

exe_file     = $(TARGET).exe
lib_file     = $(TARGET).lib
cfg_file     = $(TARGET).cfg
mak_file     = $(TARGET).mak
map_file     = $(TARGET).map
sym_file     = $(TARGET).sym

#-- Translator Definitions

CC           = tcc +$(cfg_file)
TASM         = tasm
TLIB         = tlib
TLINK        = tlink

LIBPATH      = C:\tc\lib
CINCLUDEPATH = C:\tc\include

#-- Omnitel source include directories

services_dir = services
cc_dir       = cc
cc_europe_dir= $(cc_dir)\europe
cc_usa_dir   = $(cc_dir)\usa
cc_asia_dir  = $(cc_dir)\asia
cc_arinc_dir = $(cc_dir)\arinc
ns_dir       = ns
ns_europe_dir= $(ns_dir)\europe
ns_usa_dir   = $(ns_dir)\usa
ns_asia_dir  = $(ns_dir)\asia
ns_arinc_dir = $(ns_dir)\arinc
dl_dir       = dl
ph_dir       = ph
isdn_dir     = isdn
simul_dir    = simul

#- Parameter files directory, used as the first include files directory

par_dir      = $(cc_dir)\simul

#-- Source, Object and Makefile directories

.PATH.lib    = bin\$(TARGET)
.PATH.obj    = bin\$(TARGET)
.PATH.mak    = $(cc_dir)

#-- Full include path

INCLUDEPATH  = $(par_dir);$(cc_dir);$(cc_europe_dir);$(cc_usa_dir);$(cc_asia_dir);$(cc_arinc_dir);$(isdn_dir);$(services_dir);$(ns_dir);$(ns_europe_dir);$(ns_usa_dir);$(ns_asia_dir);$(ns_arinc_dir);$(dl_dir);$(simul_dir);$(ph_dir);$(CINCLUDEPATH)

#-- Implicit Rules

.c.obj:
  $(CC) -c $<

#------- List Macros

#-- Services object files

services_obj = \
	com_proc.obj \
	it_proc.obj \
	to_proc.obj \
	services.obj \
	intel.obj		# assembly routines for Intel CPUs
#	motorola.obj	# assembly routines for Motorola CPUs

#-- Simulator Kernel object files

simul_obj = \
	ana_msg.obj \
	ana_sm.obj \
	simul.obj

#-- SM entity object files

sm_obj = \
	sm.obj \
	sm_ram.obj \
	sm_sts.obj

#-- NS layer object files

ns_obj = \
	mns.obj \
	ns.obj \
	ns_accss.obj \
	ns_err.obj \
	ns_ie_1.obj \
	ns_ie_2.obj \
	ns_ie_3.obj \
	ns_ie_4.obj \
	ns_ie_5.obj \
	ns_ie_6.obj \
	ns_ie_i.obj \
	ns_proc.obj \
	ns_rcv.obj \
	ns_snd.obj \
	ns_spdu.obj \
	ns_ssdu1.obj \
	ns_ssdu2.obj \
	ns_ssdu3.obj \
	ns_stat1.obj \
	ns_stat2.obj \
	ns_stat3.obj \
	ns_switc.obj \
	ns_int.obj

ana_ns_obj = \
	ana_ns_1.obj \
	ana_ns_2.obj \
	ana_nsss.obj

sim_cc_obj = \
	sim_cc1.obj \
	sim_cc2.obj \
	sim_cc3.obj \
	sim_cc4.obj

ana_dl_obj = \
	ana_idl.obj

sim_dl_obj = \
	simul_n2.obj \
	simul_nt.obj

#-- CC layer object files

cc_obj = \
	cc.obj \
	cc_proc.obj \
	cc_accss.obj \
	cc_rcv.obj \
	cc_snd.obj \
	cc_switc.obj \
	cc_state.obj \
	cc_a11.obj \
	cc_a17.obj \
	cc_at4.obj \
	cc_at5.obj \
	cc_at9.obj \
	cc_au1.obj \
	cc_bt2.obj \
	cc_bv1.obj \
	cc_bip.obj \
	cc_dms.obj \
	cc_ets.obj \
	cc_e10.obj \
	cc_hkt.obj \
	cc_kdd.obj \
	cc_ni1.obj \
	cc_ni2.obj \
	cc_ntt.obj \
	cc_qsi.obj \
	cc_swd.obj \
	cc_tr6.obj \
	cc_vn2.obj \
	cc_vn3.obj \
	cc_vn6.obj

ana_cc_obj = \
	ana_cc.obj \
	ana_acu.obj

sim_appl_obj = \
	sim_appl.obj

#------ M34 simulator object files:

obj_list = \
	$(services_obj) \
	$(simul_obj) \
	$(sm_obj) \
	$(ns_obj) \
	$(cc_obj) \
	$(ana_cc_obj) \
	$(sim_appl_obj) \
	$(ana_ns_obj) \
	$(ana_dl_obj) \
	$(sim_dl_obj) \
	s34.obj

#-- Explicit Rules

$(.PATH.obj)\$(exe_file): $(cfg_file) $(obj_list)
  $(TLINK) /v/c/s/i/d/L$(LIBPATH) @&&|
c0l.obj+
$(.PATH.obj)\com_proc.obj+
$(.PATH.obj)\it_proc.obj+
$(.PATH.obj)\to_proc.obj+
$(.PATH.obj)\services.obj+
$(.PATH.obj)\intel.obj+
$(.PATH.obj)\ana_msg.obj+
$(.PATH.obj)\ana_sm.obj+
$(.PATH.obj)\simul.obj+
$(.PATH.obj)\sm.obj+
$(.PATH.obj)\sm_ram.obj+
$(.PATH.obj)\sm_sts.obj+
$(.PATH.obj)\mns.obj+
$(.PATH.obj)\ns.obj+
$(.PATH.obj)\ns_accss.obj+
$(.PATH.obj)\ns_err.obj+
$(.PATH.obj)\ns_ie_1.obj+
$(.PATH.obj)\ns_ie_2.obj+
$(.PATH.obj)\ns_ie_3.obj+
$(.PATH.obj)\ns_ie_4.obj+
$(.PATH.obj)\ns_ie_5.obj+
$(.PATH.obj)\ns_ie_6.obj+
$(.PATH.obj)\ns_ie_i.obj+
$(.PATH.obj)\ns_proc.obj+
$(.PATH.obj)\ns_rcv.obj+
$(.PATH.obj)\ns_snd.obj+
$(.PATH.obj)\ns_spdu.obj+
$(.PATH.obj)\ns_ssdu1.obj+
$(.PATH.obj)\ns_ssdu2.obj+
$(.PATH.obj)\ns_ssdu3.obj+
$(.PATH.obj)\ns_stat1.obj+
$(.PATH.obj)\ns_stat2.obj+
$(.PATH.obj)\ns_stat3.obj+
$(.PATH.obj)\ns_switc.obj+
$(.PATH.obj)\ns_int.obj+
$(.PATH.obj)\ana_ns_1.obj+
$(.PATH.obj)\ana_ns_2.obj+
$(.PATH.obj)\ana_nsss.obj+
$(.PATH.obj)\ana_idl.obj+
$(.PATH.obj)\simul_n2.obj+
$(.PATH.obj)\simul_nt.obj+
$(.PATH.obj)\cc.obj+
$(.PATH.obj)\cc_proc.obj+
$(.PATH.obj)\cc_accss.obj+
$(.PATH.obj)\cc_rcv.obj+
$(.PATH.obj)\cc_snd.obj+
$(.PATH.obj)\cc_switc.obj+
$(.PATH.obj)\cc_state.obj+
$(.PATH.obj)\cc_a11.obj+
$(.PATH.obj)\cc_a17.obj+
$(.PATH.obj)\cc_at4.obj+
$(.PATH.obj)\cc_at5.obj+
$(.PATH.obj)\cc_at9.obj+
$(.PATH.obj)\cc_au1.obj+
$(.PATH.obj)\cc_bt2.obj+
$(.PATH.obj)\cc_bv1.obj+
$(.PATH.obj)\cc_bip.obj+
$(.PATH.obj)\cc_dms.obj+
$(.PATH.obj)\cc_ets.obj+
$(.PATH.obj)\cc_e10.obj+
$(.PATH.obj)\cc_hkt.obj+
$(.PATH.obj)\cc_kdd.obj+
$(.PATH.obj)\cc_ni1.obj+
$(.PATH.obj)\cc_ni2.obj+
$(.PATH.obj)\cc_ntt.obj+
$(.PATH.obj)\cc_qsi.obj+
$(.PATH.obj)\cc_swd.obj+
$(.PATH.obj)\cc_tr6.obj+
$(.PATH.obj)\cc_vn2.obj+
$(.PATH.obj)\cc_vn3.obj+
$(.PATH.obj)\cc_vn6.obj+
$(.PATH.obj)\ana_cc.obj+
$(.PATH.obj)\ana_acu.obj+
$(.PATH.obj)\sim_appl.obj+
$(.PATH.obj)\s34.obj
$(.PATH.obj)\$(exe_file),$(.PATH.obj)\$(map_file)
emu.lib+
mathl.lib+
cl.lib
|

#-- Individual File Dependencies

#-- Services:

intel.obj: $(cfg_file) $(services_dir)\intel.asm
	$(TASM) /MX /ZI /O $(services_dir)\intel.asm,$(.PATH.obj)\intel.obj

com_proc.obj: $(cfg_file) $(services_dir)\com_proc.c
	$(CC) -c $(services_dir)\com_proc.c

services.obj: $(cfg_file) $(services_dir)\services.c
	$(CC) -c $(services_dir)\services.c

to_proc.obj: $(cfg_file) $(services_dir)\to_proc.c
	$(CC) -c $(services_dir)\to_proc.c

it_proc.obj: $(cfg_file) $(services_dir)\it_proc.c
	$(CC) -c $(services_dir)\it_proc.c

#-- Simulator Kernel:

ana_msg.obj: $(cfg_file) $(simul_dir)\ana_msg.c
	$(CC) -c $(simul_dir)\ana_msg.c

ana_sm.obj: $(cfg_file) $(simul_dir)\ana_sm.c
	$(CC) -c $(simul_dir)\ana_sm.c

simul.obj: $(cfg_file) $(simul_dir)\simul.c
	$(CC) -c $(simul_dir)\simul.c

#-- SM:

sm.obj: $(cfg_file) $(services_dir)\sm.c
	$(CC) -c $(services_dir)\sm.c

sm_ram.obj: $(cfg_file) $(services_dir)\sm_ram.c
	$(CC) -c $(services_dir)\sm_ram.c

sm_sts.obj: $(cfg_file) $(services_dir)\sm_sts.c
	$(CC) -c $(services_dir)\sm_sts.c

#-- NS:

mns.obj: $(cfg_file) $(ns_dir)\mns.c
	$(CC) -c $(ns_dir)\mns.c

ns.obj: $(cfg_file) $(ns_dir)\ns.c
	$(CC) -c $(ns_dir)\ns.c

ns_accss.obj: $(cfg_file) $(ns_dir)\ns_accss.c
	$(CC) -c $(ns_dir)\ns_accss.c

ns_err.obj: $(cfg_file) $(ns_dir)\ns_err.c
	$(CC) -c $(ns_dir)\ns_err.c

ns_ie_1.obj: $(cfg_file) $(ns_dir)\ns_ie_1.c
	$(CC) -c $(ns_dir)\ns_ie_1.c

ns_ie_2.obj: $(cfg_file) $(ns_dir)\ns_ie_2.c
	$(CC) -c $(ns_dir)\ns_ie_2.c

ns_ie_3.obj: $(cfg_file) $(ns_dir)\ns_ie_3.c
	$(CC) -c $(ns_dir)\ns_ie_3.c

ns_ie_4.obj: $(cfg_file) $(ns_dir)\ns_ie_4.c
	$(CC) -c $(ns_dir)\ns_ie_4.c

ns_ie_5.obj: $(cfg_file) $(ns_dir)\ns_ie_5.c
	$(CC) -c $(ns_dir)\ns_ie_5.c

ns_ie_6.obj: $(cfg_file) $(ns_dir)\ns_ie_6.c
	$(CC) -c $(ns_dir)\ns_ie_6.c

ns_ie_i.obj: $(cfg_file) $(ns_dir)\ns_ie_i.c
	$(CC) -c $(ns_dir)\ns_ie_i.c

ns_proc.obj: $(cfg_file) $(ns_dir)\ns_proc.c
	$(CC) -c $(ns_dir)\ns_proc.c

ns_rcv.obj: $(cfg_file) $(ns_dir)\ns_rcv.c
	$(CC) -c $(ns_dir)\ns_rcv.c

ns_snd.obj: $(cfg_file) $(ns_dir)\ns_snd.c
	$(CC) -c $(ns_dir)\ns_snd.c

ns_spdu.obj: $(cfg_file) $(ns_dir)\ns_spdu.c
	$(CC) -c $(ns_dir)\ns_spdu.c

ns_ssdu1.obj: $(cfg_file) $(ns_dir)\ns_ssdu1.c
	$(CC) -c $(ns_dir)\ns_ssdu1.c

ns_ssdu2.obj: $(cfg_file) $(ns_dir)\ns_ssdu2.c
	$(CC) -c $(ns_dir)\ns_ssdu2.c

ns_ssdu3.obj: $(cfg_file) $(ns_dir)\ns_ssdu3.c
	$(CC) -c $(ns_dir)\ns_ssdu3.c

ns_stat1.obj: $(cfg_file) $(ns_dir)\ns_stat1.c
	$(CC) -c $(ns_dir)\ns_stat1.c

ns_stat2.obj: $(cfg_file) $(ns_dir)\ns_stat2.c
	$(CC) -c $(ns_dir)\ns_stat2.c

ns_stat3.obj: $(cfg_file) $(ns_dir)\ns_stat3.c
	$(CC) -c $(ns_dir)\ns_stat3.c

ns_switc.obj: $(cfg_file) $(ns_dir)\ns_switc.c
	$(CC) -c $(ns_dir)\ns_switc.c

ns_int.obj: $(cfg_file) $(ns_dir)\ns_int.c
	$(CC) -c $(ns_dir)\ns_int.c

#-- NS analyser files:

ana_ns_1.obj: $(cfg_file) $(ns_dir)\ana_ns_1.c
	$(CC) -c $(ns_dir)\ana_ns_1.c

ana_ns_2.obj: $(cfg_file) $(ns_dir)\ana_ns_2.c
	$(CC) -c $(ns_dir)\ana_ns_2.c

ana_nsss.obj: $(cfg_file) $(ns_dir)\ana_nsss.c
	$(CC) -c $(ns_dir)\ana_nsss.c

#-- CC builder files:

sim_cc1.obj: $(cfg_file) $(ns_dir)\sim_cc1.c
	$(CC) -c $(ns_dir)\sim_cc1.c

sim_cc2.obj: $(cfg_file) $(ns_dir)\sim_cc2.c
	$(CC) -c $(ns_dir)\sim_cc2.c

sim_cc3.obj: $(cfg_file) $(ns_dir)\sim_cc3.c
	$(CC) -c $(ns_dir)\sim_cc3.c

sim_cc4.obj: $(cfg_file) $(ns_dir)\sim_cc4.c
	$(CC) -c $(ns_dir)\sim_cc4.c

#-- DL analyser files:

ana_idl.obj: $(cfg_file) $(dl_dir)\ana_idl.c
	$(CC) -c $(dl_dir)\ana_idl.c

#-- DL builder files:

simul_n2.obj: $(cfg_file) $(ns_dir)\simul_n2.c
	$(CC) -c $(ns_dir)\simul_n2.c

simul_nt.obj: $(cfg_file) $(ns_dir)\simul_nt.c
	$(CC) -c $(ns_dir)\simul_nt.c

#-- CC layer files:

cc.obj: $(cfg_file) $(cc_dir)\cc.c
	$(CC) -c $(cc_dir)\cc.c

cc_proc.obj: $(cfg_file) $(cc_dir)\cc_proc.c
	$(CC) -c $(cc_dir)\cc_proc.c

cc_accss.obj: $(cfg_file) $(cc_dir)\cc_accss.c
	$(CC) -c $(cc_dir)\cc_accss.c

cc_rcv.obj: $(cfg_file) $(cc_dir)\cc_rcv.c
	$(CC) -c $(cc_dir)\cc_rcv.c

cc_snd.obj: $(cfg_file) $(cc_dir)\cc_snd.c
	$(CC) -c $(cc_dir)\cc_snd.c

cc_switc.obj: $(cfg_file) $(cc_dir)\cc_switc.c
	$(CC) -c $(cc_dir)\cc_switc.c

cc_state.obj: $(cfg_file) $(cc_dir)\cc_state.c
	$(CC) -c $(cc_dir)\cc_state.c

cc_a11.obj: $(cfg_file) $(cc_dir)\cc_a11.c
	$(CC) -c $(cc_dir)\cc_a11.c

cc_a17.obj: $(cfg_file) $(cc_dir)\cc_a17.c
	$(CC) -c $(cc_dir)\cc_a17.c

cc_at4.obj: $(cfg_file) $(cc_dir)\cc_at4.c
	$(CC) -c $(cc_dir)\cc_at4.c

cc_at5.obj: $(cfg_file) $(cc_dir)\cc_at5.c
	$(CC) -c $(cc_dir)\cc_at5.c

cc_at9.obj: $(cfg_file) $(cc_dir)\cc_at9.c
	$(CC) -c $(cc_dir)\cc_at9.c

cc_au1.obj: $(cfg_file) $(cc_dir)\cc_au1.c
	$(CC) -c $(cc_dir)\cc_au1.c

cc_bt2.obj: $(cfg_file) $(cc_dir)\cc_bt2.c
	$(CC) -c $(cc_dir)\cc_bt2.c

cc_bv1.obj: $(cfg_file) $(cc_dir)\cc_bv1.c
	$(CC) -c $(cc_dir)\cc_bv1.c

cc_bip.obj: $(cfg_file) $(cc_dir)\cc_bip.c
	$(CC) -c $(cc_dir)\cc_bip.c

cc_dms.obj: $(cfg_file) $(cc_dir)\cc_dms.c
	$(CC) -c $(cc_dir)\cc_dms.c

cc_ets.obj: $(cfg_file) $(cc_dir)\cc_ets.c
	$(CC) -c $(cc_dir)\cc_ets.c

cc_e10.obj: $(cfg_file) $(cc_dir)\cc_e10.c
	$(CC) -c $(cc_dir)\cc_e10.c

cc_hkt.obj: $(cfg_file) $(cc_dir)\cc_hkt.c
	$(CC) -c $(cc_dir)\cc_hkt.c

cc_kdd.obj: $(cfg_file) $(cc_dir)\cc_kdd.c
	$(CC) -c $(cc_dir)\cc_kdd.c

cc_ni1.obj: $(cfg_file) $(cc_dir)\cc_ni1.c
	$(CC) -c $(cc_dir)\cc_ni1.c

cc_ni2.obj: $(cfg_file) $(cc_dir)\cc_ni2.c
	$(CC) -c $(cc_dir)\cc_ni2.c

cc_ntt.obj: $(cfg_file) $(cc_dir)\cc_ntt.c
	$(CC) -c $(cc_dir)\cc_ntt.c

cc_qsi.obj: $(cfg_file) $(cc_dir)\cc_qsi.c
	$(CC) -c $(cc_dir)\cc_qsi.c

cc_swd.obj: $(cfg_file) $(cc_dir)\cc_swd.c
	$(CC) -c $(cc_dir)\cc_swd.c

cc_tr6.obj: $(cfg_file) $(cc_dir)\cc_tr6.c
	$(CC) -c $(cc_dir)\cc_tr6.c

cc_vn2.obj: $(cfg_file) $(cc_dir)\cc_vn2.c
	$(CC) -c $(cc_dir)\cc_vn2.c

cc_vn3.obj: $(cfg_file) $(cc_dir)\cc_vn3.c
	$(CC) -c $(cc_dir)\cc_vn3.c

cc_vn6.obj: $(cfg_file) $(cc_dir)\cc_vn6.c
	$(CC) -c $(cc_dir)\cc_vn6.c

#-- CC analyser files:

ana_cc.obj: $(cfg_file) $(cc_dir)\ana_cc.c
	$(CC) -c $(cc_dir)\ana_cc.c

ana_acu.obj: $(cfg_file) $(cc_dir)\ana_acu.c
	$(CC) -c $(cc_dir)\ana_acu.c

#-- Application builder files:

sim_appl.obj: $(cfg_file) $(cc_dir)\sim_appl.c
	$(CC) -c $(cc_dir)\sim_appl.c

#-- Server:

s34.obj: $(cfg_file) $(cc_dir)\s34.c
	$(CC) -c $(cc_dir)\s34.c

#-- Compiler Configuration File

$(cfg_file): $(mak_file)
  copy &&|
-ml!
-2
-a
-C
-w+
-N
-v
-y
-vi-
-H=$(sym_file)
-n$(.PATH.obj)
-I$(INCLUDEPATH)
-L$(LIBPATH)
-P-.c
| $(cfg_file)

#EOF
