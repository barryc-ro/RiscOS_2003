
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - v120_int.h
 *
 * $Revision$
 *
 * $Date$
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    LAP-BRICKS                                       |*/
/*|    ISDN-BRICKS                                      |*/
/*|    X25-BRICKS                                       |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#ifndef V120_INT
#define V120_INT
/*

	INITIATOR														RESPONDER
	=========														=========

	DL_EST_RQ						 == SABME =>					DL_EST_IN
	DL_EST_CO						<== UA ===

	V12O_SETPARM_RQ (P0, P1, P2) 	=== RNR ==>
									=== XID ==> V12O_SETPARM_IN (P0, P1, P2)

	V120_SETPARM_CO (PP0, PP1, PP2)	<== XID === V120_SETPARM_RS (PP0, PP1, PP2)
									 === RR ===>

*/

				/* Data link parameters negociation */

#define V120_SETPARM_RQ		'$'				/* SETPARM request from V.120 control function */
#define V120_SETPARM_IN		'!'				/* SETPARM indication to V.120  control function */
#define V120_SETPARM_RS		';'				/* SETPARM response to  V.120 control function */
#define V120_SETPARM_CO		','				/* SETPARM confirm from  V.120 control function */

/*--------------------------------------------------------------------------*/

		/*
			V.120 and V.42bis :

				- V120_SETPARM_RQ
				- V120_SETPARM_RS
				- V120_SETPARM_IN
				- V120_SETPARM_CO

			negociation/indication of parameters values
			and optional procedures :
		*/

struct v120_setparm {
		struct		confirm		confirm;
		uchar		p0;		   	/* V.42bis data compression request */
		ushort		p1;			/* V.42bis number of codewords */
		uchar		p2;			/* V.42bis maximum string length */
};

#define V120_setparm_ret_code	((struct v120_setparm FAR *)p_data) -> confirm.return_code
#define V120_setparm_cause		((struct v120_setparm FAR *)p_data) -> confirm.cause
#define V120_setparm_diagnostic	((struct v120_setparm FAR *)p_data) -> confirm.diagnostic
#define V120_setparm_p0			((struct v120_setparm FAR *)p_data) -> p0
#define V120_setparm_p1			((struct v120_setparm FAR *)p_data) -> p1
#define V120_setparm_p2			((struct v120_setparm FAR *)p_data) -> p2
#define V120_setparm_size		sizeof (struct v120_setparm)

						/* P0 codes */

#define V120_DIRECTION_INIT_RESP	1			/* initiator-responder direction */
#define V120_DIRECTION_RESP_INIT	2			/* reponder-initiator direction */
#define V120_DIRECTION_BOTH			3			/* both direction */
#define V120_DIRECTION_NEITHER		0			/* neither direction (default) */

/*--------------------------------------------------------------------------*/

#endif

/*EOF*/

