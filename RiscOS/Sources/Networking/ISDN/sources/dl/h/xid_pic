
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename 	xid_pic.h
 *
 * $Revision$
 *
 * $Date$
 *
 * redefinition of Macros used in XID meta-programs so that each Meta-program
 * generates a function that initializes XID meta-program address fields
 * for Position Independant Code Compilers
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    LAP-BRICKS                                       |*/
/*|    ISDN-BRICKS                                      |*/
/*|    X25-BRICKS                                       |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

/*-------------------------------------------------------------------------*/

#undef XID_START
#undef XID_GROUP
#undef XID_GROUP_VAL
#undef XID_CHAR
#undef XID_SHORT
#undef XID_LONG
#undef XID_STRING
#undef XID_VECTOR
#undef XID_BITFIELD
#undef XID_BITFIELD_VAL
#undef XID_END

		/* Macros used for meta-language instruction addresses initialisation */

#define XID_START(xx, fi)				extern struct xx xx;	    	    	\
										Paste (void pic_init_,xx)   	    	\
										(void) {    	    	    	    	\
											uchar *p_pic;	    	    		\
											p_pic = (uchar *) &xx + XID_START_LGTH;

#define XID_END()						}


#define XID_CHAR(pi,pl,pp_val,pp_flag) 	((struct xid_char *)p_pic) -> p_val = pp_val;	\
										((struct xid_char *)p_pic) -> p_flag = pp_flag; \
										p_pic += XID_CHAR_LGTH;
#define XID_SHORT(pi,pl,pp_val,pp_flag) ((struct xid_short *)p_pic) -> p_val = pp_val;	\
										((struct xid_short *)p_pic) -> p_flag = pp_flag;\
										p_pic += XID_SHORT_LGTH;
#define XID_LONG(pi,pl,pp_val,pp_flag) 	((struct xid_long *)p_pic) -> p_val = pp_val;	\
										((struct xid_long *)p_pic) -> p_flag = pp_flag; \
										p_pic += XID_LONG_LGTH;
#define XID_STRING(pi,pp_val,pp_flag)	((struct xid_string *)p_pic) -> p_val = pp_val;	\
										((struct xid_string *)p_pic) -> p_flag = pp_flag; \
										p_pic += XID_STRING_LGTH;
#define XID_VECTOR(pi,pp_pl,pp_val,pp_flag)	((struct xid_vector *)p_pic) -> p_lgth = pp_pl;	\
											((struct xid_vector *)p_pic) -> p_val = pp_val;	\
											((struct xid_vector *)p_pic) -> p_flag = pp_flag; \
											p_pic += XID_VECTOR_LGTH;
#define XID_GROUP(gi,pp_flag)			((struct xid_group *)p_pic) -> p_flag = pp_flag; \
										p_pic += XID_GROUP_LGTH;
#define XID_GROUP_VAL(pp_pl,pp_val)		((struct xid_group  *)p_pic) -> p_lgth = pp_pl;	\
										((struct xid_group *)p_pic) -> p_flag = pp_flag;\
										p_pic += XID_LONG_LGTH;
#define XID_BITFIELD(pi,pl,pp_flag)		((struct xid_bitfield *)p_pic) -> p_flag = pp_flag; \
										p_pic += XID_BITFIELD_LGTH;
#define XID_BITFIELD_VAL(p,l,pp_val) 	((struct xid_bitfield *)p_pic) -> p_val = pp_val; \
										p_pic += XID_BITFIELD_VAL_LGTH;


#define CALL(xx)						Paste (pic_init_,xx) ();

/*EOF*/

