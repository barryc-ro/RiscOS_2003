
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - dl_unpck.h
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *         No function is implemented in this module.
 *         This code is used thru include directives by
 *         the following modules :
 *
 *         - dl_ud8.c
 *
 *         - dl_ud128.c
 *
 *         - dl_ub8.c
 *
 *         - dl_ub128.c
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    LAP-BRICKS                                       |*/
/*|    ISDN-BRICKS                                      |*/
/*|    X25-BRICKS                                       |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

/*

	--------------------------------------------------------------------
	|  Format | commands | Response | Encoding  8  7  6  5  4  3  2  1 |  octet
	|------------------------------------------------------------------|
	|         |          |          |        |      N(S)          | 0  |  4
	| Informa | I(info)  |          |        |--------------------|----|
	| Transf  |          |          |        |      N(R)          | P  |  5
	|---------|----------|----------|--------|-------------------------|
	|   S     |          |          |        | 0  0  0  0  0  0  0  1  |  4
	|   U     |    RR    |   RR     |        |-------------------------|
	|   P     |          |          |        |      N(R)          |P/F |  5
	|   E     |----------|----------|--------|-------------------------|
	|   R     |          |          |        | 0  0  0  0  0  1  0  1  |  4
	|   V     |    RNR   |   RNR    |        |-------------------------|
	|   I     |          |          |        |      N(R)          |P/F |  5
	|   S     |----------|----------|--------|-------------------------|
	|   O     |          |          |        | 0  0  0  0  1  0  0  1  |  4
	|   R     |    REJ   |   REJ    |        |-------------------------|
	|   Y     |          |          |        |      N(R)          |P/F |  4
	|---------|----------|----------|--------|-------------------------|
	|         |  SABM    |          |        | 0  0  1 |P |1  1 | 1 1  |  4
	|         |----------|----------|--------|---------|--|-----|------|
	|   U     |  SABME   |          |        | 0  1  1 |P |1  1 | 1 1  |  4
	|   N     |----------|----------|--------|---------|--|-----|------|
	|   N     |          |  DM      |        | 0  0  0 |F |1  1 | 1 1  |  4
	|   U     |----------|----------|--------|---------|--|-----|------|
	|   M     |   UI     |          |        | 0  0  0 |P |0  0 | 1 1  |  4
	|   B     |----------|----------|--------|---------|--|-----|------|
	|   E     |   DISC   |          |        | 0  1  0 |P |0  0 | 1 1  |  4
	|   R     |----------|----------|--------|---------|--|-----|------|
	|   E     |          |   UA     |        | 0  1  1 |F |0  0 | 1 1  |  4
	|   D     |----------|----------|--------|---------|--|-----|------|
	|         |   SI0    |   SI0    |        | 0  1  1 |PF|0  1 | 1 1  |  4
	|         |----------|----------|--------|---------|--|-----|------|
	|         |   SI1    |   SI1    |        | 1  1  1 |PF|0  1 | 1 1  |  4
	|         |----------|----------|--------|---------|--|-----|------|
	|         |          |   FRMR   |        | 1  0  0 |F |0  1 | 1 1  |  4
	|---------|----------|----------|--------|---------|--|-----|------|
	|  Mgt    |  XID     |   XID    |        | 1  0  1 |PF|1  1 | 1 1  |  4
	--------------------------------------------------------------------
*/

		/* Check minimal size */

	if (Ru_size_total < (ushort)R_u_size) {
		return (NOK);
	}

#	if DL_LAPB == ON

		if (Dl_entity_id == ENT_DL_B) {

				/* Save control field for FRMR transmission */

			Memcpy_far ((char FAR *)Ru_a_control, (char FAR *)p_rcv_frame + Fr_address_size, MX_CONTROL_FIELD_SIZE);
		}

#	endif

	switch (R_i) {

			/* Information frame */

		case CTRL_I :

#			if DL_INVALID_SZ_CHK_DELAYED == OFF

				if (Ru_size_total < (ushort)R_i_size) {
					return (NOK);
				}

#			endif

			Ru_format		= I;
			Ru_p 			= R_i_p;
			Ru_ns 			= R_i_ns;
			Ru_nr 			= R_i_nr;
			Ru_header_size	= R_i_size;
			break;

			/* Supervisory or Unumbered frame */

		default :

			switch (R_s) {

				case CTRL_S :

#					if DL_INVALID_SZ_CHK_DELAYED == OFF

						if (Ru_size_total < (ushort)R_s_size) {
							return (NOK);
						}

#					endif

					Ru_format		= S;
					Ru_command		= R_s_command;
					Ru_pf			= R_s_pf;
					Ru_nr			= R_s_nr;
					Ru_header_size	= R_s_size;
					Ru_size_up		= R_s_size;
					break;

				case CTRL_U :
					Ru_format		= U;
					Ru_command		= R_u_command;
					Ru_pf			= R_u_pf;
					Ru_header_size	= R_u_size;

						/* U command with an information field */

					switch (Ru_command) {

						case UI:		/* implicit maximum size */
						case XID :
							Ru_size_up--;
							break;

						case SI0 :
							Ru_ns =	Ru_nr = 0;
							Ru_size_up--;
							break;

						case SI1 :
							Ru_ns = Ru_nr = (uchar)(~0);
							Ru_size_up--;
							break;

						case FRMR :		/* mandatory information field size */
							Ru_size_up = S_frmr_size;
							break;

						default :		/* no information field */
							Ru_size_up	= R_u_size;
							break;

					}
					break;

			}
			break;

	}

/*EOF*/

