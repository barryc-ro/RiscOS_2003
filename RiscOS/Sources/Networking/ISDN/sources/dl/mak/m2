
#/*-----------------------------------------------------------------------*
# *                       M O D U L E   H E A D E R
# *
# * filename - m2.mak
# *
# * $Revision$
# *
# * $Date$
# *
# * Makefile example for the DL simulator (M2)
# * Customised for Borland C compiler
# *
# *-----------------------------------------------------------------------*/

#/*[]---------------------------------------------------[]*/
#/*|                                                     |*/
#/*|    LAP-BRICKS                                       |*/
#/*|    ISDN-BRICKS                                      |*/
#/*|    X25-BRICKS                                       |*/
#/*|                                                     |*/
#/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
#/*|    All Rights Reserved.                             |*/
#/*|                                                     |*/
#/*[]---------------------------------------------------[]*/

.AUTODEPEND

#-- Target name

TARGET       = m2

#-- Generation file names

exe_file     = $(TARGET).exe
lib_file     = $(TARGET).lib
cfg_file     = $(TARGET).cfg
mak_file     = $(TARGET).mak
map_file     = $(TARGET).map
sym_file     = $(TARGET).sym

#-- Translator Definitions

CC           = tcc +$(cfg_file)
TASM         = tasm
TLIB         = tlib
TLINK        = tlink

LIBPATH      = C:\tc\lib
CINCLUDEPATH = C:\tc\include

#-- Omnitel source include directories

services_dir = services
ns_dir       = ns
ns_europe_dir= $(ns_dir)\europe
ns_usa_dir   = $(ns_dir)\usa
ns_asia_dir  = $(ns_dir)\asia
dl_dir       = dl
dl_lap4k_dir = $(dl_dir)\lap4k
dl_lapf_dir  = $(dl_dir)\lapf
dl_v120_dir  = $(dl_dir)\v120
dl_mlp_dir   = $(dl_dir)\mlp
ph_dir       = ph
isdn_dir     = isdn
simul_dir    = simul

#- Parameter files directory, used as the first include files directory

par_dir      = $(dl_dir)\simul

#-- Source, Object and Makefile directories

.PATH.lib    = bin\$(TARGET)
.PATH.obj    = bin\$(TARGET)
.PATH.mak    = $(dl_dir)

#-- Full include path

INCLUDEPATH  = $(dl_dir);$(dl_lap4k_dir);$(dl_lapf_dir);$(dl_v120_dir);$(dl_mlp_dir);$(isdn_dir);$(services_dir);$(simul_dir);$(ph_dir);$(ns_dir);$(ns_europe_dir);$(ns_usa_dir);$(ns_asia_dir);$(CINCLUDEPATH)

#-- Implicit Rules

.c.obj:
  $(CC) -c $<

#------- List Macros

#-- Services object files

services_obj = \
	com_proc.obj \
	it_proc.obj \
	to_proc.obj \
	services.obj \
	intel.obj		# assembly routines for Intel CPUs
#	motorola.obj	# assembly routines for Motorola CPUs

#-- Simulator Kernel object files

simul_obj = \
	ana_msg.obj \
	ana_sm.obj \
	simul.obj

#-- SM entity object files

sm_obj = \
	sm.obj \
	sm_ram.obj \
	sm_sts.obj

#-- DL+MDL entities object files

mdl_obj = \
	mc.obj \
	mdl.obj \
	mdl_net.obj \
	mdl_user.obj

dl_obj = \
	dl.obj \
	dlx.obj \
	dl_accss.obj \
	dl_mfo.obj \
	dl_misc.obj \
	dl_pb128.obj \
	dl_pb8.obj \
	dl_pd128.obj \
	dl_pd8.obj \
	dl_pic.obj \
	dl_queue.obj \
	dl_rcv.obj \
	dl_snd.obj \
	dl_state.obj \
	dl_switc.obj \
	dl_to.obj \
	dl_ub128.obj \
	dl_ub8.obj \
	dl_ud128.obj \
	dl_ud8.obj \
	dl_u_st.obj \
	dl_relay.obj \
	xid.obj

dl_mlp_obj = \
	mlp.obj \
	mlp_proc.obj \
	mlp_accs.obj \
	mlp_queu.obj \
	mlp_snd.obj \
	ana_mlp.obj

dl_lap4k_obj = \
	mdl_4k.obj

dl_lapf_obj = \
	mdl_f.obj \
	dl_pf2.obj \
	dl_pf3.obj \
	dl_pf4.obj \
	dl_uf2.obj \
	dl_uf3.obj \
	dl_uf4.obj

dl_v120_obj = \
	v120_xid.obj

ana_dl_obj = \
	ana_xid.obj \
	ana_dl.obj \
	ana_idl.obj

sim_ph_obj = \
	simul_fr.obj \
	simul_ph.obj \
	simul_te.obj

ana_ph_obj = \
	ana_ph.obj

sim_l3_obj = \
	simul_l3.obj

#------ Simulator object files:

obj_list = \
	$(services_obj) \
	$(simul_obj) \
	$(sm_obj) \
	$(mdl_obj) \
	$(dl_obj) \
	$(ana_dl_obj) \
	$(sim_ph_obj) \
	$(ana_ph_obj) \
	$(sim_l3_obj) \
	s2.obj

# Object files to be added to this 'obj_list'
# if the related DL options are to be used:
#
#	$(dl_mlp_obj) \
#	$(dl_lap4k_obj) \
#	$(dl_lapf_obj) \
#	$(dl_v120_obj) \

#-- Explicit Rules

$(.PATH.obj)\$(exe_file): $(cfg_file) $(obj_list)
  $(TLINK) /v/c/s/i/d/L$(LIBPATH) @&&|
c0l.obj+
$(.PATH.obj)\com_proc.obj+
$(.PATH.obj)\it_proc.obj+
$(.PATH.obj)\to_proc.obj+
$(.PATH.obj)\intel.obj+
$(.PATH.obj)\services.obj+
$(.PATH.obj)\ana_msg.obj+
$(.PATH.obj)\ana_sm.obj+
$(.PATH.obj)\simul.obj+
$(.PATH.obj)\sm.obj+
$(.PATH.obj)\sm_ram.obj+
$(.PATH.obj)\sm_sts.obj+
$(.PATH.obj)\mc.obj+
$(.PATH.obj)\mdl.obj+
$(.PATH.obj)\mdl_net.obj+
$(.PATH.obj)\mdl_user.obj+
$(.PATH.obj)\dl.obj+
$(.PATH.obj)\dlx.obj+
$(.PATH.obj)\dl_accss.obj+
$(.PATH.obj)\dl_mfo.obj+
$(.PATH.obj)\dl_misc.obj+
$(.PATH.obj)\dl_pb128.obj+
$(.PATH.obj)\dl_pb8.obj+
$(.PATH.obj)\dl_pd128.obj+
$(.PATH.obj)\dl_pd8.obj+
$(.PATH.obj)\dl_pic.obj+
$(.PATH.obj)\dl_queue.obj+
$(.PATH.obj)\dl_rcv.obj+
$(.PATH.obj)\dl_relay.obj+
$(.PATH.obj)\dl_snd.obj+
$(.PATH.obj)\dl_state.obj+
$(.PATH.obj)\dl_switc.obj+
$(.PATH.obj)\dl_to.obj+
$(.PATH.obj)\dl_ub128.obj+
$(.PATH.obj)\dl_ub8.obj+
$(.PATH.obj)\dl_ud128.obj+
$(.PATH.obj)\dl_ud8.obj+
$(.PATH.obj)\dl_u_st.obj+
$(.PATH.obj)\dl_relay+
$(.PATH.obj)\xid.obj+
$(.PATH.obj)\ana_xid.obj+
$(.PATH.obj)\ana_dl.obj+
$(.PATH.obj)\ana_idl.obj+
$(.PATH.obj)\ana_ph.obj+
$(.PATH.obj)\simul_fr.obj+
$(.PATH.obj)\simul_ph.obj+
$(.PATH.obj)\simul_te.obj+
$(.PATH.obj)\simul_l3.obj+
$(.PATH.obj)\s2.obj
$(.PATH.obj)\$(exe_file),$(.PATH.obj)\$(map_file)
emu.lib+
mathl.lib+
cl.lib
|

# Object files to be added to this list of object files
# if the related DL options are to be used (in dl_par.h):
#
#if DL_MLP == ON:
# $(.PATH.obj)\mlp.obj+
# $(.PATH.obj)\mlp_proc.obj+
# $(.PATH.obj)\mlp_accs.obj+
# $(.PATH.obj)\mlp_queu.obj+
# $(.PATH.obj)\mlp_snd.obj+
# $(.PATH.obj)\ana_mlp.obj+
#
#if DL_LAP4K == ON:
# $(.PATH.obj)\mdl_4k.obj+
#
#if DL_LAPF == ON:
# $(.PATH.obj)\mdl_f.obj+
# $(.PATH.obj)\dl_pf2.obj+
# $(.PATH.obj)\dl_pf3.obj+
# $(.PATH.obj)\dl_pf4.obj+
# $(.PATH.obj)\dl_uf2.obj+
# $(.PATH.obj)\dl_uf3.obj+
# $(.PATH.obj)\dl_uf4.obj+
#
#if DL_V120 == ON:
# $(.PATH.obj)\v120_xid.obj+

#-- Individual File Dependencies

#-- Services:

intel.obj: $(cfg_file) $(services_dir)\intel.asm
	$(TASM) /MX /ZI /O $(services_dir)\intel.asm,$(.PATH.obj)\intel.obj

com_proc.obj: $(cfg_file) $(services_dir)\com_proc.c
	$(CC) -c $(services_dir)\com_proc.c

services.obj: $(cfg_file) $(services_dir)\services.c
	$(CC) -c $(services_dir)\services.c

to_proc.obj: $(cfg_file) $(services_dir)\to_proc.c
	$(CC) -c $(services_dir)\to_proc.c

it_proc.obj: $(cfg_file) $(services_dir)\it_proc.c
	$(CC) -c $(services_dir)\it_proc.c

#-- Simulator Kernel:

ana_msg.obj: $(cfg_file) $(simul_dir)\ana_msg.c
	$(CC) -c $(simul_dir)\ana_msg.c

ana_sm.obj: $(cfg_file) $(simul_dir)\ana_sm.c
	$(CC) -c $(simul_dir)\ana_sm.c

simul.obj: $(cfg_file) $(simul_dir)\simul.c
	$(CC) -c $(simul_dir)\simul.c

#-- SM:

sm.obj: $(cfg_file) $(services_dir)\sm.c
	$(CC) -c $(services_dir)\sm.c

sm_ram.obj: $(cfg_file) $(services_dir)\sm_ram.c
	$(CC) -c $(services_dir)\sm_ram.c

sm_sts.obj: $(cfg_file) $(services_dir)\sm_sts.c
	$(CC) -c $(services_dir)\sm_sts.c

#-- dl directory:

mc.obj: $(cfg_file) $(dl_dir)\mc.c
	$(CC) -c $(dl_dir)\mc.c

mdl.obj: $(cfg_file) $(dl_dir)\mdl.c
	$(CC) -c $(dl_dir)\mdl.c

mdl_net.obj: $(cfg_file) $(dl_dir)\mdl_net.c
	$(CC) -c $(dl_dir)\mdl_net.c

mdl_user.obj: $(cfg_file) $(dl_dir)\mdl_user.c
	$(CC) -c $(dl_dir)\mdl_user.c

dl.obj: $(cfg_file) $(dl_dir)\dl.c
	$(CC) -c $(dl_dir)\dl.c

dl_accss.obj: $(cfg_file) $(dl_dir)\dl_accss.c
	$(CC) -c $(dl_dir)\dl_accss.c

dl_mfo.obj: $(cfg_file) $(dl_dir)\dl_mfo.c
	$(CC) -c $(dl_dir)\dl_mfo.c

dl_misc.obj: $(cfg_file) $(dl_dir)\dl_misc.c
	$(CC) -c $(dl_dir)\dl_misc.c

dl_pb128.obj: $(cfg_file) $(dl_dir)\dl_pb128.c
	$(CC) -c $(dl_dir)\dl_pb128.c

dl_pb8.obj: $(cfg_file) $(dl_dir)\dl_pb8.c
	$(CC) -c $(dl_dir)\dl_pb8.c

dl_pd128.obj: $(cfg_file) $(dl_dir)\dl_pd128.c
	$(CC) -c $(dl_dir)\dl_pd128.c

dl_pd8.obj: $(cfg_file) $(dl_dir)\dl_pd8.c
	$(CC) -c $(dl_dir)\dl_pd8.c

dl_pic.obj: $(cfg_file) $(dl_dir)\dl_pic.c
	$(CC) -c $(dl_dir)\dl_pic.c

dl_queue.obj: $(cfg_file) $(dl_dir)\dl_queue.c
	$(CC) -c $(dl_dir)\dl_queue.c

dl_rcv.obj: $(cfg_file) $(dl_dir)\dl_rcv.c
	$(CC) -c $(dl_dir)\dl_rcv.c

dl_snd.obj: $(cfg_file) $(dl_dir)\dl_snd.c
	$(CC) -c $(dl_dir)\dl_snd.c

dl_state.obj: $(cfg_file) $(dl_dir)\dl_state.c
	$(CC) -c $(dl_dir)\dl_state.c

dl_switc.obj: $(cfg_file) $(dl_dir)\dl_switc.c
	$(CC) -c $(dl_dir)\dl_switc.c

dl_ub128.obj: $(cfg_file) $(dl_dir)\dl_ub128.c
	$(CC) -c $(dl_dir)\dl_ub128.c

dl_ub8.obj: $(cfg_file) $(dl_dir)\dl_ub8.c
	$(CC) -c $(dl_dir)\dl_ub8.c

dl_ud128.obj: $(cfg_file) $(dl_dir)\dl_ud128.c
	$(CC) -c $(dl_dir)\dl_ud128.c

dl_ud8.obj: $(cfg_file) $(dl_dir)\dl_ud8.c
	$(CC) -c $(dl_dir)\dl_ud8.c

dl_to.obj: $(cfg_file) $(dl_dir)\dl_to.c
	$(CC) -c $(dl_dir)\dl_to.c

dlx.obj: $(cfg_file) $(dl_dir)\dlx.c
	$(CC) -c $(dl_dir)\dlx.c

xid.obj: $(cfg_file) $(dl_dir)\xid.c
	$(CC) -c $(dl_dir)\xid.c

dl_u_st.obj: $(cfg_file) $(dl_dir)\dl_u_st.c
	$(CC) -c $(dl_dir)\dl_u_st.c

dl_relay.obj: $(cfg_file) $(dl_dir)\dl_relay.c
	$(CC) -c $(dl_dir)\dl_relay.c

#-- DL analyser files:

ana_dl.obj: $(cfg_file) $(dl_dir)\ana_dl.c
	$(CC) -c $(dl_dir)\ana_dl.c

ana_idl.obj: $(cfg_file) $(dl_dir)\ana_idl.c
	$(CC) -c $(dl_dir)\ana_idl.c

ana_xid.obj: $(cfg_file) $(dl_dir)\ana_xid.c
	$(CC) -c $(dl_dir)\ana_xid.c

#-- DL builder files:

simul_n2.obj: $(cfg_file) $(ns_dir)\simul_n2.c
	$(CC) -c $(ns_dir)\simul_n2.c

simul_nt.obj: $(cfg_file) $(ns_dir)\simul_nt.c
	$(CC) -c $(ns_dir)\simul_nt.c

#-- PH analyser files:

ana_ph.obj: $(cfg_file) $(dl_dir)\ana_ph.c
	$(CC) -c $(dl_dir)\ana_ph.c

#-- PH builder files:

simul_fr.obj: $(cfg_file) $(dl_dir)\simul_fr.c
	$(CC) -c $(dl_dir)\simul_fr.c

simul_ph.obj: $(cfg_file) $(dl_dir)\simul_ph.c
	$(CC) -c $(dl_dir)\simul_ph.c

simul_te.obj: $(cfg_file) $(dl_dir)\simul_te.c
	$(CC) -c $(dl_dir)\simul_te.c

#-- L3 builder files:

simul_l3.obj: $(cfg_file) $(dl_dir)\simul_l3.c
	$(CC) -c $(dl_dir)\simul_l3.c

#-- dl\lap4k directory:

mdl_4k.obj: $(cfg_file) $(dl_lap4k_dir)\mdl_4k.c
	$(CC) -c $(dl_lap4k_dir)\mdl_4k.c

#-- dl\lapf directory:

mdl_f.obj: $(cfg_file) $(dl_lapf_dir)\mdl_f.c
	$(CC) -c $(dl_lapf_dir)\mdl_f.c

dl_pf2.obj: $(cfg_file) $(dl_lapf_dir)\dl_pf2.c
	$(CC) -c $(dl_lapf_dir)\dl_pf2.c

dl_pf3.obj: $(cfg_file) $(dl_lapf_dir)\dl_pf3.c
	$(CC) -c $(dl_lapf_dir)\dl_pf3.c

dl_pf4.obj: $(cfg_file) $(dl_lapf_dir)\dl_pf4.c
	$(CC) -c $(dl_lapf_dir)\dl_pf4.c

dl_uf2.obj: $(cfg_file) $(dl_lapf_dir)\dl_uf2.c
	$(CC) -c $(dl_lapf_dir)\dl_uf2.c

dl_uf3.obj: $(cfg_file) $(dl_lapf_dir)\dl_uf3.c
	$(CC) -c $(dl_lapf_dir)\dl_uf3.c

dl_uf4.obj: $(cfg_file) $(dl_lapf_dir)\dl_uf4.c
	$(CC) -c $(dl_lapf_dir)\dl_uf4.c

#-- dl\mlp directory:

mlp.obj: $(cfg_file) $(dl_mlp_dir)\mlp.c
	$(CC) -c $(dl_mlp_dir)\mlp.c

mlp_proc.obj: $(cfg_file) $(dl_mlp_dir)\mlp_proc.c
	$(CC) -c $(dl_mlp_dir)\mlp_proc.c

mlp_accs.obj: $(cfg_file) $(dl_mlp_dir)\mlp_accs.c
	$(CC) -c $(dl_mlp_dir)\mlp_accs.c

mlp_queu.obj: $(cfg_file) $(dl_mlp_dir)\mlp_queu.c
	$(CC) -c $(dl_mlp_dir)\mlp_queu.c

mlp_snd.obj: $(cfg_file) $(dl_mlp_dir)\mlp_snd.c
	$(CC) -c $(dl_mlp_dir)\mlp_snd.c

ana_mlp.obj: $(cfg_file) $(dl_mlp_dir)\ana_mlp.c
	$(CC) -c $(dl_mlp_dir)\ana_mlp.c

#-- dl\v120 directory:

v120_xid.obj: $(cfg_file) $(dl_v120_dir)\v120_xid.c
	$(CC) -c $(dl_v120_dir)\v120_xid.c

#-- Server:

s2.obj: $(cfg_file) $(dl_dir)\s2.c
	$(CC) -c $(dl_dir)\s2.c

#-- Compiler Configuration File

$(cfg_file): $(mak_file)
  copy &&|
-ml!
-2
-a
-C
-w+
-N
-v
-y
-vi-
-H=$(sym_file)
-n$(.PATH.obj)
-I$(INCLUDEPATH)
-L$(LIBPATH)
-P-.c
| $(cfg_file)

#EOF
