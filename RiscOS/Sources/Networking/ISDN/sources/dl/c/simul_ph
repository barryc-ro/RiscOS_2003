
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - simul_ph.c
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		   build_sdu_ph_to_dl - implement the simulation of a message coming
 *                              from the PH entity and sent to the DL entity.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    LAP-BRICKS                                       |*/
/*|    ISDN-BRICKS                                      |*/
/*|    X25-BRICKS                                       |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

	/* compilation options */

#define ENTITY 	DL_D	/* LAPD Data Link entity */
#define MODULO 	128		/* MODULO 128 */

#include "dl.h"

#if DL_SIM_BUILDER  == ON
#	include "dl_comm.h"
#	include "simul.h"

/*-------------------------------------------------------------------------*/

uchar build_sdu_ph_to_dl ()
{
	mg_nai ();

#	if DL_LAP4K == ON

		g_from [0] = ENT_PH_D;
		mg_chani ();
		load_message (ENT_PH, ENT_DL_4K);
		mg_dlci ();
		g_sapi = g_dlci >> 7;
		g_tei  = g_dlci & Mask (7);

#	else
#	if DL_LAPF == ON

		g_from [0] = ENT_PH_D;
		mg_chani ();
		load_message (ENT_PH, ENT_DL_F);
		mg_dlci ();
		g_sapi = g_dlci >> 4;
		g_tei  = (g_dlci & Mask (4)) << 3;

#	else
#	if (DL_V120 == ON) && (DL_MLP != ON)

		g_from [0] = ENT_PH_D;
		mg_chani ();
		load_message (ENT_PH, ENT_DL_V120);
		mg_dlci ();
		g_sapi = g_dlci >> 7;
		g_tei  = g_dlci & Mask (7);

#	else

		switch (g_from[0]) {

		case ENT_PH_D:
			mg_sapi ();

			g_chani = PH_CHANI_D;

			if (g_sapi == DL_SAPI_NIL) {
				mg_code ();
				load_message (ENT_PH_D, ENT_DL_D);
				return (OK);
			}

			load_message (ENT_PH_D, ENT_DL_D);
			mg_tei ();
			break;

		case ENT_MPH:
		case ENT_MPH_D:
		case ENT_MPH_B:
			g_sapi  = PH_SAPI_D;
			g_chani = PH_CHANI_D;
			mg_code ();
			load_message (g_from[0], ENT_MDL);
			return (OK);

		default:
			mg_chani ();
			g_sapi	= PH_SAPI_B;
			load_message (ENT_PH_B, ENT_DL_B);

			if (g_chani == PH_CHANI_NIL) {
				mg_code ();
				S_msg_code = g_code[0];
				return (OK);
			}
			break;

		}

#	endif
#	endif
#	endif

	if (build_pdu_frame () == NOK) {
		return (NOK);
	}

	return (OK);
}

/*--------------------------------------------------------------------------*/

#endif /* DL_SIM_BUILDER */

/*EOF*/
