
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - ns_sstab.eur
 *
 * $Revision$
 *
 * $Date$
 *
 *	This file contains the definitions of all Tables and ASN1 Meta-programs
 *	for OPERATIONs used in EUROPE specific Supplementary Services.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|														|*/
/*[]---------------------------------------------------[]*/

	/* implementation of general ASN1 types described in ETS 300 196 (with ASN1 meta-programs)
	 * -------------------------------------------------------------------------------------- */

		/* Q931InformationElement ::= [APPLICATION 0] IMPLICIT OCTET STRING */

D_ASN1_TYPE_START		(NS_SS_Q931_IE_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_Q931_IE_P)
	ASN1_TYPE_IDENT			(ASN1_OCTETSTRING_TYPE_ID, ASN1_TYPE_IMPLICIT, ASN1_TYPE_CLASS_APPLICATION, 0)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/* PublicPartyNumber ::= SEQUENCE {publicTypeOfNumber PublicTypeOfNumber,
		 *						   		   publicNumberDigits NumberDigits}
		 *	and (same data type)
		 *
		 * PrivatePartyNumber ::= SEQUENCE {privateTypeOfNumber PrivateTypeOfNumber,
		 *						   		    privateNumberDigits NumberDigits}
		 * NumberDigits ::= NumericString (SIZE(1..20))
		 * PublicTypeOfNumber ::= ENUMERATED {unknown(0), internationalNumber(1), nationalNumber(2), networkSpecificNumber(3), subscriberNumber(4), abbreviatedNumber(6)}
		 * PrivateTypeOfNumber ::= ENUMERATED {unknown(0), level2RegionalNumber(1), level1RegionalNumber(2), pTNSpecificNumber(3), localNumber(4), abbreviatedNumber(6)}
		 */

D_ASN1_TYPE_START		(NS_SS_NUMBER_DIGITS_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_NUMBER_DIGITS_P)
	NS_ASN1_NUMERIC_STRING
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PUBLIC_PRIV_PARTY_NB_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PUBLIC_PRIV_PARTY_NB_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_ENUMERATED_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NUMBER_DIGITS_P)
ASN1_TYPE_END

		/* PartyNumber ::= CHOICE {unknownPartyNumber [0] IMPLICIT NumberDigits,
		 *						   publicPartyNumber [1] IMPLICIT PublicPartyNumber,
		 *						   dataPartyNumber [3] IMPLICIT NumberDigits,
		 *						   telexPartyNumber [4] IMPLICIT NumberDigits,
		 *						   privatePartyNumber [5] IMPLICIT PrivatePartyNumber,
		 *						   nationalStandardPartyNumber [8] IMPLICIT NumberDigits}
		 */

D_ASN1_TYPE_START		(NS_SS_UNKNOWN_PARTY_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_UNKNOWN_PARTY_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NUMBER_DIGITS_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PUBLIC_PARTY_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PUBLIC_PARTY_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PUBLIC_PRIV_PARTY_NB_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_DATA_PARTY_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_DATA_PARTY_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NUMBER_DIGITS_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_TELEX_PARTY_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_TELEX_PARTY_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 4)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NUMBER_DIGITS_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PRIVATE_PARTY_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRIVATE_PARTY_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 5)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PUBLIC_PRIV_PARTY_NB_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_NATIONAL_PARTY_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_NATIONAL_PARTY_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 8)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NUMBER_DIGITS_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PARTY_NUMBER_P)
	D_ASN1_TYPE_FIELD_NB	(6)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PARTY_NUMBER_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(6)
	ASN1_TYPE_FIELD			(NS_SS_UNKNOWN_PARTY_NB_P)
	ASN1_TYPE_FIELD			(NS_SS_PUBLIC_PARTY_NB_P)
	ASN1_TYPE_FIELD			(NS_SS_DATA_PARTY_NB_P)
	ASN1_TYPE_FIELD			(NS_SS_TELEX_PARTY_NB_P)
	ASN1_TYPE_FIELD			(NS_SS_PRIVATE_PARTY_NB_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NATIONAL_PARTY_NB_P)
ASN1_TYPE_END

#if (NS_SS_DIVERSION == ON) || (NS_SS_ECT == ON) || (NS_SS_CCBS == ON) || ((F_QSI == ON) && (NS_SS_CALL_TRANSFER == ON)) /* Types used in Diversion, ECT, CCBS and Q-SIG Call Transfer SS{ */

		/* PartySubaddress ::= CHOICE {UserSpecifiedSubaddress,
		 *						   	   NSAPSubaddress}
		 * NSAPSubaddress ::= OCTET STRING (SIZE (1..20))
		 * UserSpecifiedSubaddress ::= SEQUENCE {SubaddressInformation,
		 *										oddCountIndicator BOOLEAN OPTIONAL}
		 * SubaddressInformation ::= OCTET STRING (SIZE(1..20))
		 */

D_ASN1_TYPE_START		(NS_SS_USER_SPEC_SUBADD_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_USER_SPEC_SUBADD_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_SUBADD_INFO_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_ODDCOUNT_P, Party_subadd_odd_count)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PARTY_SUBADDRESS_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PARTY_SUBADDRESS_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_USER_SPEC_SUBADD_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NSAP_SUBADD_P)
ASN1_TYPE_END

		/* Address ::= SEQUENCE {PartyNumber,
		 *						 PartySubaddress OPTIONAL}
		 */

#if (NS_SS_DIVERSION == ON) || (NS_SS_CCBS == ON) || ((F_QSI == ON) && (NS_SS_CALL_TRANSFER == ON)) /* Types used in Diversion and CCBS and Q-SIG Call Transfer SS{ */

D_ASN1_TYPE_START		(NS_SS_ADDRESS_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_ADDRESS_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PARTY_SUBADDRESS_P, Party_subadd_in_add)
ASN1_TYPE_END

		/* AddressScreened ::= SEQUENCE {PartyNumber,
		 *								 ScreeningIndicator,
		 *								 PartySubaddress OPTIONAL}
		 */

D_ASN1_TYPE_START		(NS_SS_ADDRESS_SCREENED_P)
	D_ASN1_TYPE_FIELD_NB		(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_ADDRESS_SCREENED_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_FIELD				(NS_SS_SCREENING_IND_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PARTY_SUBADDRESS_P, Party_subadd_in_scr_add)
ASN1_TYPE_END

		/* PresentedAddressScreened ::= CHOICE {
		 *									presentationAllowedAddress [0] IMPLICIT AddressScreened,
		 *									presentationRestricted [1] IMPLICIT NULL,
		 *									numberNotAvailableDueToInterworking [2] IMPLICIT NULL,
		 *									presentationRestrictedAddress [3] IMPLICIT AddressScreened}
		 */

D_ASN1_TYPE_START		(NS_SS_PRES_ALLOWED_ADD_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_ALLOWED_ADD_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_ADDRESS_SCREENED_P)
ASN1_TYPE_END

#endif /* end of DIVERSION or CALL TRANSFER or CCBS supported} */

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PRES_RESTRICTED_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_RESTRICTED_P)
	ASN1_TYPE_IDENT			(ASN1_NULL_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_NB_NOT_AVAIL_INTERW_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_NB_NOT_AVAIL_INTERW_P)
	ASN1_TYPE_IDENT			(ASN1_NULL_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

#if (NS_SS_DIVERSION == ON) || ((F_QSI == ON) && (NS_SS_CALL_TRANSFER == ON)) /* Types used in Diversion and Q-SIG Call Transfer SS{ */

D_ASN1_TYPE_START		(NS_SS_PRES_RESTRICTED_ADD_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_RESTRICTED_ADD_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_ADDRESS_SCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PRES_ADDRESS_SCREENED_P)
	D_ASN1_TYPE_FIELD_NB	(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_ADDRESS_SCREENED_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(4)
	ASN1_TYPE_FIELD			(NS_SS_PRES_ALLOWED_ADD_P)
	ASN1_TYPE_FIELD			(NS_SS_PRES_RESTRICTED_P)
	ASN1_TYPE_FIELD			(NS_SS_NB_NOT_AVAIL_INTERW_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PRES_RESTRICTED_ADD_P)
ASN1_TYPE_END

#endif /* end of DIVERSION or CALL TRANSFER supported} */

		/* PresentedNumberUnscreened ::= CHOICE {
		 *									presentationAllowedNumber [0] PartyNumber,
		 *									presentationRestricted [1] IMPLICIT NULL,
		 *									numberNotAvailableDueToInterworking [2] IMPLICIT NULL,
		 *									presentationRestrictedNumber [3] PartyNumber}
		 */

D_ASN1_TYPE_START		(NS_SS_PRES_ALLOWED_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_ALLOWED_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PARTY_NUMBER_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PRES_RESTRICTED_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_RESTRICTED_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PARTY_NUMBER_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PRES_NB_UNSCREENED_P)
	D_ASN1_TYPE_FIELD_NB	(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_NB_UNSCREENED_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(4)
	ASN1_TYPE_FIELD			(NS_SS_PRES_ALLOWED_NB_P)
	ASN1_TYPE_FIELD			(NS_SS_PRES_RESTRICTED_P)
	ASN1_TYPE_FIELD			(NS_SS_NB_NOT_AVAIL_INTERW_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PRES_RESTRICTED_NB_P)
ASN1_TYPE_END

#endif /* end of DIVERSION or ECT or CCBS or CALL TRANSFER supported} */

/*==========================================================================*/

		/*	Closed User Group SS (CUG)
		 * --------------------------- */

#if NS_SS_CUG == ON		/* Closed User Group SS supported{ */

	/* CUGCallOperationType operation ARGUMENT :
				SEQUENCE {outgoingAccessRequest [1] IMPLICIT BOOLEAN DEFAULT FALSE,
						  cUGIndex [2] IMPLICIT CUGindex OPTIONAL}
		with CUGindex ::= INTEGER(0..32767) */

D_ASN1_TYPE_START		(NS_CUG_OUT_ACCESS_RQ_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CUG_OUT_ACCESS_RQ_P)
	ASN1_TYPE_IDENT			(ASN1_BOOLEAN_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_CUG_INDEX_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CUG_INDEX_P)
	ASN1_TYPE_IDENT			(ASN1_INTEGER_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_CUG_CALL_OPERATION_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CUG_CALL_OPERATION_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_CUG_OUT_ACCESS_RQ_P, Cug_call_out_access_rq)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_CUG_INDEX_P, Cug_call_index)
ASN1_TYPE_END

	/* Table used to decode and store data of CUGCallOperationType ARGUMENT clause */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CUG_CALL)	/* { */
			/* first entry : used for repetition of CUG ARGUMENT */
	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, sizeof (struct ns_op_cug_call), NS_SS_MAX_CUG, 0, 0)

						/*	 p_pc								field_nb	type				p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CUG_CALL_OPERATION_P, 1, NS_SS_INT_TYPE_BOOLEAN, &(ns_op_cug_call[0].out_access_rq), 0, 0, 0, 0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CUG_CALL_OPERATION_P, 2, NS_SS_INT_TYPE_USHORT, (uchar FAR *)&(ns_op_cug_call[0].cug_index), 0, 0, 0, 1)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

#endif /* end of "Closed User Group SS supported"} */

/*==========================================================================*/

		/*	Advice Of Charge SS, including 3 services : AOC-S (at call set-up time),
		 *	AOC-D (during the call), AOC-E (at the end of the call)
		 *	implementation of general AOC ASN1 types (with ASN1 meta-programs)
		 * ------------------------------------------------------------------ */

#if (NS_SS_AOC_S == ON) || (NS_SS_AOC_D == ON) || (NS_SS_AOC_E == ON)	/* AOC service supported{ */

		/* Currency ::= IA5String (SIZE (1..10)) */

D_ASN1_TYPE_START		(NS_AOC_CURRENCY_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_CURRENCY_P)
	NS_ASN1_IA5_STRING
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/* Time ::= SEQUENCE	{lengthOfTimeUnit [1] LengthOfTimeUnit,
		 *						 scale [2] Scale}
		 * LengthOfTimeUnit ::= INTEGER (0..16777215)
		 * Scale ::= ENUMERATED {oneHundredthSecond(0), oneTenthSecond(1), oneSecond(2), tenSeconds(3), oneMinute(4), oneHour(5), twentyFourHours(6)}
		 *
		 *	and (same data type)
		 * Amount ::= SEQUENCE	{currencyAmount [1] CurrencyAmount,
		 *						 multiplier [2] Multiplier}
		 * CurrencyAmount ::= INTEGER (0..16777215)
		 * Multiplier ::= ENUMERATED {oneThousandth(0), oneHundredth(1), oneTenth(2), one(3), ten(4), hundred(5), thousand(6)}
		 */

D_ASN1_TYPE_START		(NS_AOC_LG_TIM_U_CURR_AMOU_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_LG_TIM_U_CURR_AMOU_P)
	ASN1_TYPE_IDENT			(ASN1_INTEGER_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_SCALE_MULTIPLIER_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_SCALE_MULTIPLIER_P)
	ASN1_TYPE_IDENT			(ASN1_ENUMERATED_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_TIME_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_TIME_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_AOC_LG_TIM_U_CURR_AMOU_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_SCALE_MULTIPLIER_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_AMOUNT_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_AMOUNT_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_AOC_LG_TIM_U_CURR_AMOU_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_SCALE_MULTIPLIER_P)
ASN1_TYPE_END

		/* RecordedUnits ::= SEQUENCE {
		 *						 	CHOICE {recordedNumberOfUnits	NumberOfUnits,
		 *									notAvailable			NULL},
		 *							recordedTypeOfUnits		TypeOfUnit OPTIONAL}
		 * NumberOfUnits ::= INTEGER (0..16777215)
		 * TypeOfUnit ::= INTEGER (1..16)
		 */

D_ASN1_TYPE_START		(NS_AOC_RECORDED_NB_OF_U_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_RECORDED_NB_OF_U_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_INTEGER_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NULL_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_RECORDED_UNITS_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_RECORDED_UNITS_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_AOC_RECORDED_NB_OF_U_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_INTEGER_P, Aoc_type_of_unit_presence)
ASN1_TYPE_END

		/* RecordedUnitsList ::= SEQUENCE SIZE (1..32) OF RecordedUnits */

D_ASN1_TYPE_START		(NS_AOC_RECORDED_UNITS_LIST_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_RECORDED_UNITS_LIST_P)
	NS_ASN1_SEQUENCE_OF
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_RECORDED_UNITS_P)
ASN1_TYPE_END

		/* RecordedCurrency ::= SEQUENCE {rCurrency [1] Currency,
		 *								  rAmount [2] Amount}
		 */

D_ASN1_TYPE_START		(NS_AOC_RCURRENCY_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_RCURRENCY_P)
	ASN1_TYPE_IDENT			(ASN1_IA5STRING_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_RAMOUNT_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_RAMOUNT_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_AMOUNT_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_RECORDED_CURRENCY_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_RECORDED_CURRENCY_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_AOC_RCURRENCY_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_RAMOUNT_P)
ASN1_TYPE_END

		/* VolumeRateCurrency ::= SEQUENCE {vRCurrency [1] Currency,
		 *									vRAmount [2] Amount,
		 *									vRVolumeUnit [3] VolumeUnit}
		 * VolumeUnit ::= ENUMERATED {octet(0), segment(1), message(2)}
		 */

D_ASN1_TYPE_START		(NS_AOC_RVOLUME_UNIT_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_RVOLUME_UNIT_P)
	ASN1_TYPE_IDENT			(ASN1_ENUMERATED_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_VOLUME_RATE_CURRENCY_P)
	D_ASN1_TYPE_FIELD_NB (3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_VOLUME_RATE_CURRENCY_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(3)
	ASN1_TYPE_FIELD			(NS_AOC_RCURRENCY_P)
	ASN1_TYPE_FIELD			(NS_AOC_RAMOUNT_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_RVOLUME_UNIT_P)
ASN1_TYPE_END

		/* DurationCurrency ::= SEQUENCE {dCurrency [1] Currency,
		 *								  dAmount [2] Amount,
		 *								  dChargingType [3] ChargingType,
		 *								  dTime [4] Time,
		 *								  dGranularity [5] Time OPTIONAL}
		 * ChargingType ::= ENUMERATED {continuousCharging(0), stepFunction(1)}
		 */

D_ASN1_TYPE_START		(NS_AOC_DTIME_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_DTIME_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 4)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_TIME_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_GRANULARITY_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_GRANULARITY_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_AOC_LG_TIM_U_CURR_AMOU_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_SCALE_MULTIPLIER_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_DGRANULARITY_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_DGRANULARITY_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 5)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_GRANULARITY_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_DURATION_CURRENCY_P)
	D_ASN1_TYPE_FIELD_NB		(5)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_DURATION_CURRENCY_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(5)
	ASN1_TYPE_FIELD				(NS_AOC_RCURRENCY_P)
	ASN1_TYPE_FIELD				(NS_AOC_RAMOUNT_P)
	ASN1_TYPE_FIELD				(NS_AOC_DCHARGING_TYPE_P)
	ASN1_TYPE_FIELD				(NS_AOC_DTIME_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_AOC_DGRANULARITY_P, Aoc_dgranularity_presence)
ASN1_TYPE_END

		/* AOCSCurrencyInfo ::= SEQUENCE {
		 *							chargedItem ChargedItem,
		 *							CHOICE {
		 *								specificCurrency CHOICE {
		 *									durationCurrency [1] DurationCurrency,
		 *									flatRateCurrency [2] FlatRateCurrency,
		 *									volumeRateCurrency [3] VolumeRateCurrency},
		 *								specialChargingCode SpecialChargingCode,
		 *								freeOfCharge [4] NULL,
		 *								currencyInfoNotAvailable [5] NULL} }
		 * ChargedItem ::= ENUMERATED {basicCommunication(0), callAttempt(1), callSetup(2), userToUserInfo(3), operationOfSupplementaryServ(4)}
		 * SpecialChargingCode ::= INTEGER (1..10)
		 */

D_ASN1_TYPE_START		(NS_AOCS_DURATION_CURRENCY_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_DURATION_CURRENCY_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_DURATION_CURRENCY_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCS_FLAT_RATE_CURRENCY_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_FLAT_RATE_CURRENCY_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_FLAT_RATE_CURRENCY_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCS_VOLUME_RATE_CURRENCY_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_VOLUME_RATE_CURRENCY_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_VOLUME_RATE_CURRENCY_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCS_FREE_OF_CHARGE_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_FREE_OF_CHARGE_P)
	ASN1_TYPE_IDENT			(ASN1_NULL_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 4)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCS_INFO_NOT_AVAIL_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_INFO_NOT_AVAIL_P)
	ASN1_TYPE_IDENT			(ASN1_NULL_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 5)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCS_CURRENCY_DATA_P)
	D_ASN1_TYPE_FIELD_NB	(6)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_CURRENCY_DATA_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(6)
	ASN1_TYPE_FIELD			(NS_AOCS_DURATION_CURRENCY_P)
	ASN1_TYPE_FIELD			(NS_AOCS_FLAT_RATE_CURRENCY_P)
	ASN1_TYPE_FIELD			(NS_AOCS_VOLUME_RATE_CURRENCY_P)
	ASN1_TYPE_FIELD			(NS_SS_INTEGER_P)
	ASN1_TYPE_FIELD			(NS_AOCS_FREE_OF_CHARGE_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCS_INFO_NOT_AVAIL_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCS_CURRENCY_INFO_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_CURRENCY_INFO_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_ENUMERATED_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCS_CURRENCY_DATA_P)
ASN1_TYPE_END

		/* AOCSCurrencyInfoList ::= SEQUENCE SIZE (1..10) OF AOCSCurrencyInfo */

D_ASN1_TYPE_START		(NS_AOCS_CURRENCY_INFO_LIST_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_CURRENCY_INFO_LIST_P)
	NS_ASN1_SEQUENCE_OF
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOCS_CURRENCY_INFO_P)
ASN1_TYPE_END

#endif	/* end of AOC service supported} */

#if (NS_SS_AOC_D == ON) || (NS_SS_AOC_E == ON)	/* AOC-D or AOC-E SS supported{ */

		/* AOCDCurrencyInfo ::= CHOICE {
		 *							specificCurrency SEQUENCE {
		 *								recordedCurrency [1] RecordedCurrency,
		 *								typeOfChargingInfo [2] TypeOfChargingInfo,
		 *								aOCDBillingId [3] AOCDBillingId OPTIONAL},
		 *							freeOfCharge [1] NULL}
		 * TypeOfChargingInfo ::= ENUMERATED {subTotal(0), total(1)}
		 * AOCDBillingId ::= ENUMERATED {normalCharging(0), reverseCharging(1), creditCardCharging(2)}
		 */

D_ASN1_TYPE_START		(NS_AOCD_RECORDED_CURRENCY_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCD_RECORDED_CURRENCY_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_RECORDED_CURRENCY_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCD_FREE_OF_CHARGE_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCD_FREE_OF_CHARGE_P)
	ASN1_TYPE_IDENT			(ASN1_NULL_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

#endif	/* end of AOC-D or AOC-E SS supported} */

		/*-=-=-=-=-=-*/

#if NS_SS_AOC_D == ON	/* AOC-D SS supported{ */

D_ASN1_TYPE_START		(NS_AOCD_SPECIFIC_CURRENCY_P)
	D_ASN1_TYPE_FIELD_NB	(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCD_SPECIFIC_CURRENCY_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_FIELD				(NS_AOCD_RECORDED_CURRENCY_P)
	ASN1_TYPE_FIELD				(NS_AOCD_TYPE_OF_CHARG_INFO_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_AOCD_BILLING_ID_P, Aocd_billing_id_presence)
ASN1_TYPE_END

#endif	/* end of AOC-D SS supported} */

		/* AOCDChargingUnitInfo ::= CHOICE {
		 *							specificChargingUnits SEQUENCE {
		 *								recordedUnitsList [1] RecordedUnitsList,
		 *								typeOfChargingInfo [2] TypeOfChargingInfo,
		 *								aOCDBillingId [3] AOCDBillingId OPTIONAL},
		 *							freeOfCharge [1] NULL}
		 */

#if (NS_SS_AOC_D == ON) || (NS_SS_AOC_E == ON)	/* AOC-D or AOC-E SS supported{ */

D_ASN1_TYPE_START		(NS_AOCD_RECORDED_UNIT_LIST_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCD_RECORDED_UNIT_LIST_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_RECORDED_UNITS_LIST_P)
ASN1_TYPE_END

#endif	/* end of AOC-D or AOC-E SS supported} */

		/*-=-=-=-=-=-*/

#if NS_SS_AOC_D == ON	/* AOC-D SS supported{ */

D_ASN1_TYPE_START		(NS_AOCD_SPECIFIC_CHARG_UNIT_P)
	D_ASN1_TYPE_FIELD_NB	(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCD_SPECIFIC_CHARG_UNIT_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_FIELD				(NS_AOCD_RECORDED_UNIT_LIST_P)
	ASN1_TYPE_FIELD				(NS_AOCD_TYPE_OF_CHARG_INFO_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_AOCD_BILLING_ID_P, Aocd_billing_id_presence)
ASN1_TYPE_END

#endif	/* end of AOC-D SS supported} */

#if NS_SS_AOC_E == ON	/* AOC-E SS supported{ */

		/* ChargingAssociation ::= CHOICE {chargeNumber [0] EXPLICIT PartyNumber,
		 *								   chargeIdentifier ChargeIdentifier}
		 * ChargeIdentifier ::= INTEGER (-32768..32767)
		 */

D_ASN1_TYPE_START		(NS_AOC_CHARGE_NUMBER_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_CHARGE_NUMBER_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_EXPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PARTY_NUMBER_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOC_CHARGING_ASSOCIATION_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_CHARGING_ASSOCIATION_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_INTEGER_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOC_CHARGE_NUMBER_P)
ASN1_TYPE_END

		/* AOCECurrencyInfo ::= SEQUENCE {
		 *							CHOICE {
		 *								specificCurrency SEQUENCE {
		 *									recordedCurrency [1] RecordedCurrency,
		 *									aOCEBillingId [2] AOCEBillingId OPTIONAL},
		 *								freeOfCharge [1] NULL},
		 *							chargingAssociation ChargingAssociation OPTIONAL}
		 * AOCEBillingId ::= ENUMERATED {normalCharging(0), reverseCharging(1), creditCardCharging(2),
		 *					callForwardingUnconditional(3), callForwardingBusy(4), callForwardingNoReply(5), callForwardingUnconditional(3), callDeflection(6), callTransfer(7)}
		 */

D_ASN1_TYPE_START		(NS_AOCE_SPECIFIC_CURRENCY_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCE_SPECIFIC_CURRENCY_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_AOCE_RECORDED_CURRENCY_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_AOCE_BILLING_ID_P, Aoce_billing_id_presence)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCE_CURRENCY_DATA_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCE_CURRENCY_DATA_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_AOCE_FREE_OF_CHARGE_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCE_SPECIFIC_CURRENCY_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCE_CURRENCY_INFO_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCE_CURRENCY_INFO_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_AOCE_CURRENCY_DATA_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_AOC_CHARGING_ASSOCIATION_P, Aoce_charg_assoc_presence)
ASN1_TYPE_END

		/* AOCEChargingUnitInfo ::= SEQUENCE {
		 *								CHOICE {
		 *									specificChargingUnits SEQUENCE {
		 *										recordedUnitsList [1] RecordedUnitsList,
		 *										aOCEBillingId [2] AOCEBillingId OPTIONAL},
		 *									freeOfCharge [1] NULL},
		 *								chargingAssociation ChargingAssociation OPTIONAL}
		 */

D_ASN1_TYPE_START		(NS_AOCE_SPECIFIC_CHARG_UNIT_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCE_SPECIFIC_CHARG_UNIT_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_AOCE_RECORDED_UNIT_LIST_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_AOCE_BILLING_ID_P, Aoce_billing_id_presence)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCE_CHARGING_UNIT_DATA_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCE_CHARGING_UNIT_DATA_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_AOCE_FREE_OF_CHARGE_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCE_SPECIFIC_CHARG_UNIT_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_AOCE_CHARGING_UNIT_INFO_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCE_CHARGING_UNIT_INFO_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_AOCE_CHARGING_UNIT_DATA_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_AOC_CHARGING_ASSOCIATION_P, Aoce_charg_assoc_presence)
ASN1_TYPE_END

#endif	/* end of AOC-E SS supported} */

		/*	Operations for AOC SS : ChargingRequest, AOCSCurrency, AOCSSpecialArr,
		 *	AOCDCurrency, AOCDChargingUnit, AOCECurrency and AOCEChargingunit
		 * ------------------------------------------------------------------ */

#if (NS_SS_AOC_S == ON) || (NS_SS_AOC_D == ON) || (NS_SS_AOC_E == ON)	/* AOC service supported{ */

	/* ChargingRequest operation RESULT : CHOICE {AOCSCurrencyInfoList,
												  AOCSSpecialArrInfo,
												  chargingInfoFollows NULL}
		with AOCSSpecialArrInfo ::= INTEGER(1..10) */

D_ASN1_TYPE_START		(NS_AOC_CHARGING_REQUEST_RES_P)
	D_ASN1_TYPE_FIELD_NB	(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOC_CHARGING_REQUEST_RES_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(3)
	ASN1_TYPE_FIELD			(NS_SS_NULL_P)
	ASN1_TYPE_FIELD			(NS_SS_INTEGER_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCS_CURRENCY_INFO_LIST_P)
ASN1_TYPE_END

#endif	/* end of AOC Service supported} */

#if NS_SS_AOC_S == ON	/* AOC-S SS supported{ */

	/* AOCSCurrency operation ARGUMENT : CHOICE {chargeNotAvailable NULL,
												 AOCSCurrencyInfoList} */

D_ASN1_TYPE_START		(NS_AOCS_CURRENCY_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_CURRENCY_ARG_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_NULL_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCS_CURRENCY_INFO_LIST_P)
ASN1_TYPE_END

	/* AOCSSpecialArr operation ARGUMENT : CHOICE {chargeNotAvailable NULL,
												   AOCSSpecialArrInfo} */

D_ASN1_TYPE_START		(NS_AOCS_SPECIAL_ARR_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCS_SPECIAL_ARR_ARG_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_NULL_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_INTEGER_P)
ASN1_TYPE_END

#endif	/* end of AOC-S SS supported} */

#if NS_SS_AOC_D == ON	/* AOC-D SS supported{ */

	/* AOCDCurrency operation ARGUMENT : CHOICE {chargeNotAvailable NULL,
	 *											 AOCDCurrencyInfo}
	 * with AOCDCurrencyInfo ::= CHOICE {
	 *							specificCurrency SEQUENCE {...},
	 *							freeOfCharge [1] NULL}
	 */

D_ASN1_TYPE_START		(NS_AOCD_CURRENCY_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCD_CURRENCY_ARG_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(3)
	ASN1_TYPE_FIELD			(NS_SS_NULL_P)
	ASN1_TYPE_FIELD			(NS_AOCD_FREE_OF_CHARGE_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCD_SPECIFIC_CURRENCY_P)
ASN1_TYPE_END

	/* AOCDChargingUnit operation ARGUMENT : CHOICE {chargeNotAvailable NULL,
	 *												 AOCDChargingUnitInfo}
	 * with AOCDChargingUnitInfo ::= CHOICE {
	 *							specificChargingUnits SEQUENCE {...},
	 *							freeOfCharge [1] NULL}
	 */

D_ASN1_TYPE_START		(NS_AOCD_CHARGING_UNIT_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCD_CHARGING_UNIT_ARG_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(3)
	ASN1_TYPE_FIELD			(NS_SS_NULL_P)
	ASN1_TYPE_FIELD			(NS_AOCD_FREE_OF_CHARGE_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCD_SPECIFIC_CHARG_UNIT_P)
ASN1_TYPE_END

#endif	/* end of AOC-D SS supported} */

#if NS_SS_AOC_E == ON	/* AOC-E SS supported{ */

	/* AOCECurrency operation ARGUMENT : CHOICE {chargeNotAvailable NULL,
												 AOCECurrencyInfo} */

D_ASN1_TYPE_START		(NS_AOCE_CURRENCY_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCE_CURRENCY_ARG_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_NULL_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCE_CURRENCY_INFO_P)
ASN1_TYPE_END

	/* AOCEChargingUnit operation ARGUMENT : CHOICE {chargeNotAvailable NULL,
													 AOCEChargingUnitInfo} */

D_ASN1_TYPE_START		(NS_AOCE_CHARGING_UNIT_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_AOCE_CHARGING_UNIT_ARG_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_NULL_P)
	ASN1_TYPE_LAST_FIELD	(NS_AOCE_CHARGING_UNIT_INFO_P)
ASN1_TYPE_END

#endif	/* end of AOC-E SS supported} */

		/*-=-=-=-=-=-=-=--=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses :
		! STORAGE CONTEXTS FOR DIFFERENT INTERNAL FIELDS BUT ASSOCIATED WITH SAME
		(P_PC, FIELD_NB) PAIR MUST BE ADJACENT IN TABLES */

#if (NS_SS_AOC_S == ON) || (NS_SS_AOC_D == ON) || (NS_SS_AOC_E == ON)	/* AOC service supported{ */

		/* ChargingRequest operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_AOC_CHARG_RQ) /* { */
			/* first entry : used for repetition of AOCChargingRequest ARGUMENT */
	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 1, NS_SS_MAX_AOC_CHARGING_RQ, 0, 0)

						/*	 p_pc	field_nb	type	p_struct	instance_interval	repetition	next_entry	optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_CHARGING_REQUEST_ARG_P, 0, NS_SS_INT_TYPE_UCHAR, &(ns_aoc_op_charging_case[0]), 0, 0, 0, 255)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_AOC_CHARG_RQ) /* { */
						/*	 p_pc	field_nb	type	p_struct	instance_interval	repetition	next_entry	optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_CHARGING_REQUEST_RES_P, 0, NS_SS_CHOICE_INDEX, &(ns_aoc_op_charging_rq.result_type), 0, 0, 0, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_CHARGING_REQUEST_RES_P, 2, NS_SS_INT_TYPE_UCHAR, &(ns_aoc_op_charging_rq.aocs_special_arr_info), 0, 0, 0, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_CURRENCY_INFO_LIST_P, 0, NS_SS_SEQUENCE_OF_NB, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_nb), 0, 0, 0, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_CURRENCY_INFO_P, 1, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].charged_item), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 3, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_CURRENCY_DATA_P, 0, NS_SS_CHOICE_INDEX,  (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].currency_info_type), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 4, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_CURRENCY_DATA_P, 4, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].special_charging_code), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 5, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RCURRENCY_P, 0, NS_SS_INT_TYPE_ASN1_STRING, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].currency), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 6, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RVOLUME_UNIT_P, 0, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].volume_unit_or_charg_type), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 7, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_AMOUNT_P, 1, NS_SS_INT_TYPE_ULONG, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].amount), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 8, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_TIME_P, 1, NS_SS_INT_TYPE_ULONG, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].length_of_time_unit), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 9, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_GRANULARITY_P, 1, NS_SS_INT_TYPE_ULONG, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].granularity_lg_time_u), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 10, 0)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_AMOUNT_P, 2, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].amount_multiplier), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 11, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_TIME_P, 2, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].scale), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 12, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_GRANULARITY_P, 2, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_aoc_op_charging_rq.aocs_cur_info_list[0].granularity_scale), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 13, 0)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0) /* shall stay at the end */
Ns_eur_end_table_or_function /* } */

#endif	/* end of AOC service supported} */

#if NS_SS_AOC_S == ON	/* AOC-S SS supported{ */

		/* AOCSCurrency operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_AOCS_CURRENCY) /* { */
						/*	 p_pc	field_nb	type	p_struct	instance_interval	repetition	next_entry	optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_CURRENCY_ARG_P, 0, NS_SS_CHOICE_INDEX, &(ns_op_aocs_currency.arg_type), 0, 0, 0, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_CURRENCY_INFO_LIST_P, 0, NS_SS_SEQUENCE_OF_NB, &(ns_op_aocs_currency.info_nb), 0, 0, 0, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_CURRENCY_INFO_P, 1, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].charged_item), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 2, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_CURRENCY_DATA_P, 0, NS_SS_CHOICE_INDEX, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].currency_info_type), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 3, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_CURRENCY_DATA_P, 4, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].special_charging_code), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 4, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RCURRENCY_P, 0, NS_SS_INT_TYPE_ASN1_STRING, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].currency), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 5, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RVOLUME_UNIT_P, 0, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].volume_unit_or_charg_type), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 6, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_AMOUNT_P, 1, NS_SS_INT_TYPE_ULONG, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].amount), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 7, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_TIME_P, 1, NS_SS_INT_TYPE_ULONG, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].length_of_time_unit), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 8, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_GRANULARITY_P, 1, NS_SS_INT_TYPE_ULONG, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].granularity_lg_time_u), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 9, 0)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_AMOUNT_P, 2, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].amount_multiplier), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 10, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_TIME_P, 2, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].scale), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 11, 255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_GRANULARITY_P, 2, NS_SS_INT_TYPE_UCHAR, (uchar FAR *)&(ns_op_aocs_currency.info_list[0].granularity_scale), sizeof (struct ns_i_aocs_currency_info), (NS_AOC_MX_AOCS_CURRENCY_INFO - 1), 12, 0)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0) /* shall stay at the end */
Ns_eur_end_table_or_function /* } */

		/* AOCSSpecialArr operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_AOCS_SPEC_ARR) /* { */
						/*	 p_pc	field_nb	type	p_struct	instance_interval	repetition	next_entry	optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCS_SPECIAL_ARR_ARG_P, 0, NS_SS_CHOICE_INDEX, &(ns_op_aocs_special_arr.arg_type), 0, 0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_INTEGER_P, 0, NS_SS_INT_TYPE_UCHAR, &(ns_op_aocs_special_arr.special_arr_info), 0, 0, 0, 255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

#endif	/* end of AOC-S SS supported} */

#if NS_SS_AOC_D == ON	/* AOC-D SS supported{ */

		/* AOCDCurrency operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_AOCD_CURRENCY) /* { */
						/*	 p_pc									field_nb	type					p_struct					instance_interval,	repetition,	next_entry,	optional_x  */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCD_CURRENCY_ARG_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_aocd_currency.arg_type),				0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCD_SPECIFIC_CURRENCY_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_aocd_currency.type_of_charging),		0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCD_SPECIFIC_CURRENCY_P,	3,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_aocd_currency.billing_id),				0,	0,	0,	0)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RCURRENCY_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_aocd_currency.currency),	0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_AMOUNT_P,				1,	NS_SS_INT_TYPE_ULONG,		(uchar FAR *)&(ns_op_aocd_currency.amount),		0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_AMOUNT_P,				2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_aocd_currency.amount_multiplier),		0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

		/* AOCDChargingUnit operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_AOCD_CHARG_UNIT) /* { */
						/*	 p_pc										field_nb	type					p_struct
instance_interval						repetition								next_entry,	optional_x  */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCD_CHARGING_UNIT_ARG_P,		0,	NS_SS_CHOICE_INDEX,		&(ns_op_aocd_charging_unit.arg_type),
0,											0,									0,		255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCD_SPECIFIC_CHARG_UNIT_P,	2,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_aocd_charging_unit.type_of_charging),
0,											0,									0,		255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCD_SPECIFIC_CHARG_UNIT_P,	3,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_aocd_charging_unit.billing_id),
0,											0,									0,		0)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RECORDED_UNITS_LIST_P,		0,	NS_SS_SEQUENCE_OF_NB,	&(ns_op_aocd_charging_unit.unit_nb),
0,											0,									0,		255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RECORDED_UNITS_P,			2,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_aocd_charging_unit.recorded_units_list[0].type_of_unit),
sizeof (struct ns_i_recorded_units),	(NS_AOC_MX_RECORDED_UNITS - 1),		4,		2)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RECORDED_NB_OF_U_P,		0,	NS_SS_CHOICE_INDEX,		&(ns_op_aocd_charging_unit.recorded_units_list[0].number_availability),
sizeof (struct ns_i_recorded_units),	(NS_AOC_MX_RECORDED_UNITS - 1),		5,		255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RECORDED_NB_OF_U_P,		1,	NS_SS_INT_TYPE_ULONG,	(uchar FAR *)&(ns_op_aocd_charging_unit.recorded_units_list[0].number_of_units),
sizeof (struct ns_i_recorded_units),	(NS_AOC_MX_RECORDED_UNITS - 1),		6,		255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

#endif	/* end of AOC-D SS supported} */

#if NS_SS_AOC_E == ON	/* AOC-E SS supported{ */

		/* AOCECurrency operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_AOCE_CURRENCY) /* { */
						/*	 p_pc										field_nb	type					p_struct					instance_interval,	repetition,	next_entry,	optional_x  */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCE_CURRENCY_ARG_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_aoce_currency.arg_type),				0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCE_CURRENCY_DATA_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_aoce_currency.charg_type),				0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCE_SPECIFIC_CURRENCY_P,		2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_aoce_currency.billing_id),				0,	0,	0,	0)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RCURRENCY_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_aoce_currency.currency),	0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_AMOUNT_P,					1,	NS_SS_INT_TYPE_ULONG,		(uchar FAR *)&(ns_op_aoce_currency.amount),		0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_AMOUNT_P,					2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_aoce_currency.amount_multiplier),		0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_CHARGING_ASSOCIATION_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_aoce_currency.charg_assoc_type),		0,	0,	0,	1)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_CHARGING_ASSOCIATION_P,	1,	NS_SS_INT_TYPE_SHORT,		(uchar FAR *)&(ns_op_aoce_currency.charg_identifier),	0,	0,	0,	1)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,				0,	NS_SS_CHOICE_INDEX,			&(ns_op_aoce_currency.party_nb_type),			0,	0,	0,	1)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,		1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_aoce_currency.type_of_nb),				0,	0,	0,	1)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_aoce_currency.number_digits),	0,	0,	0,	1)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

		/* AOCEChargingUnit operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_AOCE_CHARG_UNIT) /* { */
						/*	 p_pc										field_nb	type					p_struct					instance_interval,	repetition,	next_entry,	optional_x  */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCE_CHARGING_UNIT_ARG_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_aoce_charging_unit.arg_type),				0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCE_CHARGING_UNIT_DATA_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_aoce_charging_unit.charg_type),				0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOCE_SPECIFIC_CHARG_UNIT_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_aoce_charging_unit.billing_id),				0,	0,	0,	0)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_CHARGING_ASSOCIATION_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_aoce_charging_unit.charg_assoc_type),		0,	0,	0,	1)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_CHARGING_ASSOCIATION_P,	1,	NS_SS_INT_TYPE_SHORT,		(uchar FAR *)&(ns_op_aoce_charging_unit.charg_identifier),	0,	0,	0,	1)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,				0,	NS_SS_CHOICE_INDEX,			&(ns_op_aoce_charging_unit.party_nb_type),			0,	0,	0,	1)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,		1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_aoce_charging_unit.type_of_nb),				0,	0,	0,	1)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_aoce_charging_unit.number_digits),	0,	0,	0,	1)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RECORDED_UNITS_LIST_P,		0,	NS_SS_SEQUENCE_OF_NB,		&(ns_op_aoce_charging_unit.unit_nb),				0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RECORDED_UNITS_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_aoce_charging_unit.recorded_units_list[0].type_of_unit),
sizeof (struct ns_i_recorded_units),	(NS_AOC_MX_RECORDED_UNITS - 1),		9,		2)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RECORDED_NB_OF_U_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_aoce_charging_unit.recorded_units_list[0].number_availability),
sizeof (struct ns_i_recorded_units),	(NS_AOC_MX_RECORDED_UNITS - 1),		10,		255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_RECORDED_NB_OF_U_P,		1,	NS_SS_INT_TYPE_ULONG,		(uchar FAR *)&(ns_op_aoce_charging_unit.recorded_units_list[0].number_of_units),
sizeof (struct ns_i_recorded_units),	(NS_AOC_MX_RECORDED_UNITS - 1),		11,		255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

#if (NS_SS_INTERACTIONS == ON) && ((NS_SS_DIVERSION == ON) || (NS_SS_ECT == ON))	/* SS interactions and (Diversion or ECT SS) supported */

		/* IdentificationOfCharge operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_INTER_ID_CH) /* { */
						/*	 p_pc									field_nb	type					p_struct					instance_interval,	repetition,	next_entry,	optional_x  */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_CHARGING_ASSOCIATION_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_inter_id_of_charg.charg_assoc_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_AOC_CHARGING_ASSOCIATION_P,	1,	NS_SS_INT_TYPE_SHORT,		(uchar FAR *)&(ns_op_inter_id_of_charg.charg_identifier),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,				0,	NS_SS_CHOICE_INDEX,			&(ns_op_inter_id_of_charg.party_nb_type),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,		1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_inter_id_of_charg.type_of_nb),						0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_inter_id_of_charg.number_digits),	    0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

#endif	/* end of SS interactions and (Diversion or ECT SS) supported */

#endif	/* end of AOC-E SS supported} */

/*==========================================================================*/

		/*	Diversion SS, including 4 services : Call Forwarding Unconditional (CFU),
		 *	Call Forwarding Busy (CFB), Call Forwarding No Reply (CFNR), Call Deflection (CD)
		 *	implementation of general Diversion ASN1 types (with ASN1 meta-programs)
		 * ------------------------------------------------------------------ */

#if NS_SS_DIVERSION == ON /* { */

#if NS_USE_EUROPE_OPERATION == ON

		/* ServedUserNumberList ::= SET SIZE (0..99) OF PartyNumber */

D_ASN1_TYPE_START		(NS_DIV_SERVED_USER_NB_LIST_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_SERVED_USER_NB_LIST_P)
	NS_ASN1_SET_OF
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PARTY_NUMBER_P)
ASN1_TYPE_END

		/* ServedUserNr ::= CHOICE {individualNumber PartyNumber, allNumbers NULL} */

D_ASN1_TYPE_START		(NS_DIV_SERVED_USER_NR_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_SERVED_USER_NR_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NULL_P)
ASN1_TYPE_END

#endif

		/* IntResult ::= SEQUENCE {servedUserNr ServedUserNr,
		 *						   basicService BasicService,
		 *						   procedure Procedure,
		 *						   forwardedToAddress Address}
		 */

D_ASN1_TYPE_START		(NS_DIV_INT_RES_FORW_ADDRESS_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_INT_RES_FORW_ADDRESS_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PARTY_SUBADDRESS_P, Party_subadd_in_int_res_add)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

#if NS_USE_EUROPE_OPERATION == ON

D_ASN1_TYPE_START		(NS_DIV_INT_RESULT_P)
	D_ASN1_TYPE_FIELD_NB	(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_INT_RESULT_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(4)
	ASN1_TYPE_FIELD			(NS_DIV_SERVED_USER_NR_P)
	ASN1_TYPE_FIELD			(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_FIELD			(NS_DIV_PROCEDURE_P)
	ASN1_TYPE_LAST_FIELD	(NS_DIV_INT_RES_FORW_ADDRESS_P)
ASN1_TYPE_END

		/* IntResultList ::= SET SIZE (0..29) OF IntResult */

D_ASN1_TYPE_START		(NS_DIV_INT_RESULT_LIST_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_INT_RESULT_LIST_P)
	NS_ASN1_SET_OF
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_DIV_INT_RESULT_P)
ASN1_TYPE_END

	/* ActivationDiversion operation ARGUMENT : SEQUENCE {
													procedure Procedure,
													basicService BasicService,
													forwardedToAddress Address,
													servedUserNr ServedUserNr} */

D_ASN1_TYPE_START		(NS_ACTIVATION_DIV_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_ACTIVATION_DIV_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(4)
	ASN1_TYPE_FIELD			(NS_DIV_PROCEDURE_P)
	ASN1_TYPE_FIELD			(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_FIELD			(NS_SS_ADDRESS_P)
	ASN1_TYPE_LAST_FIELD	(NS_DIV_SERVED_USER_NR_P)
ASN1_TYPE_END

	/* DeactivationDiversion operation ARGUMENT : SEQUENCE {
													procedure Procedure,
													basicService BasicService,
													servedUserNr ServedUserNr} */

D_ASN1_TYPE_START		(NS_DEACTIVATION_DIV_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DEACTIVATION_DIV_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(3)
	ASN1_TYPE_FIELD			(NS_DIV_PROCEDURE_P)
	ASN1_TYPE_FIELD			(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_LAST_FIELD	(NS_DIV_SERVED_USER_NR_P)
ASN1_TYPE_END

	/* InterrogationDiversion operation ARGUMENT : SEQUENCE {
													procedure Procedure,
													basicService BasicService DEFAULT allServices,
													servedUserNr ServedUserNr} */

D_ASN1_TYPE_START		(NS_INTEROG_DIV_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_INTEROG_DIV_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_FIELD				(NS_DIV_PROCEDURE_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_BASIC_SERVICE_P, Div_interog_basic_service)
	ASN1_TYPE_LAST_FIELD		(NS_DIV_SERVED_USER_NR_P)
ASN1_TYPE_END

	/* DiversionInformation operation ARGUMENT : SEQUENCE {
													diversionReason DiversionReason,
													basicService BasicService,
													servedUserSubaddress PartySubaddress OPTIONAL,
													callingAddress [0] PresentedAddressScreened OPTIONAL,
													originalCalledNr [1] PresentedNumberUnscreened OPTIONAL,
													lastDivertingNr [2] PresentedNumberUnscreened OPTIONAL,
													lastDivertingReason [3] DiversionReason OPTIONAL,
													userInfo Q931InformationElement OPTIONAL} */

D_ASN1_TYPE_START		(NS_DIV_INFO_CALLING_ADD_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_INFO_CALLING_ADD_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PRES_ADDRESS_SCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_DIV_INFO_ORIG_CALLED_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_INFO_ORIG_CALLED_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PRES_NB_UNSCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_DIV_INFO_LAST_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_INFO_LAST_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PRES_NB_UNSCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_DIV_INFO_LAST_REASON_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_INFO_LAST_REASON_P)
	ASN1_TYPE_IDENT			(ASN1_ENUMERATED_TYPE_ID, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_DIV_INFORMATION_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(8)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIV_INFORMATION_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(8)
	ASN1_TYPE_FIELD				(NS_DIVERSION_REASON_P)
	ASN1_TYPE_FIELD				(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_PARTY_SUBADDRESS_P, Div_info_s_user_subadd)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_DIV_INFO_CALLING_ADD_P, Div_info_calling_add)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_DIV_INFO_ORIG_CALLED_NB_P, Div_info_orig_called_nb)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_DIV_INFO_LAST_NB_P, Div_info_last_nb)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_DIV_INFO_LAST_REASON_P, Div_info_last_reason)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_Q931_IE_P, Div_info_user_info)
ASN1_TYPE_END

	/* CallDeflection operation ARGUMENT : SEQUENCE {
													deflectionAddress Address,
													presentationAllowedDivertedToUser PresentationAllowedIndicator OPTIONAL} */

D_ASN1_TYPE_START		(NS_CALL_DEFLECTION_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CALL_DEFLECTION_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_ADDRESS_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PRESENT_ALLOW_IND_P, Call_defl_pres_allow_to_u)
ASN1_TYPE_END

	/* CallRerouteing operation ARGUMENT : SEQUENCE {
													rerouteingReason DiversionReason,
													calledAddress Address,
													rerouteingCounter DiversionCounter,
													q931InfoElement Q931InformationElement,
													lastRerouteingNr [1] PresentedNumberUnscreened,
													subscriptionOption [2] SubscriptionOption DEFAULT noNotification,
													callingPartySubaddress [3] PartySubaddress OPTIONAL} */

D_ASN1_TYPE_START		(NS_REROUTE_SUBSCR_OPTION_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_REROUTE_SUBSCR_OPTION_P)
	ASN1_TYPE_IDENT			(ASN1_ENUMERATED_TYPE_ID, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_REROUTE_CALLING_SUBADD_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_REROUTE_CALLING_SUBADD_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PARTY_SUBADDRESS_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_CALL_REROUTEING_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(7)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CALL_REROUTEING_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(7)
	ASN1_TYPE_FIELD				(NS_DIVERSION_REASON_P)
	ASN1_TYPE_FIELD				(NS_SS_ADDRESS_P)
	ASN1_TYPE_FIELD				(NS_DIV_COUNTER_P)
	ASN1_TYPE_FIELD				(NS_SS_Q931_IE_P)
	ASN1_TYPE_FIELD				(NS_REROUTE_LAST_NR_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_REROUTE_SUBSCR_OPTION_P, Call_reroute_subsc_option)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_REROUTE_CALLING_SUBADD_P, Call_reroute_calling_subadd)
ASN1_TYPE_END

	/* DivertingLegInformation1 operation ARGUMENT : SEQUENCE {
														diversionReason DiversionReason,
														subscriptionOption SubscriptionOption,
														divertedToNumber PresentedNumberUnscreened OPTIONAL} */

D_ASN1_TYPE_START		(NS_DIVERTING_LEG_INFO1_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIVERTING_LEG_INFO1_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_FIELD				(NS_DIVERSION_REASON_P)
	ASN1_TYPE_FIELD				(NS_DIV_SUBSCR_OPTION_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PRES_NB_UNSCREENED_P, Div_leg_info1_diverted_to_nb)
ASN1_TYPE_END

	/* DivertingLegInformation2 operation ARGUMENT : SEQUENCE {
														diversionCounter DiversionCounter,
														diversionReason DiversionReason,
														divertingNr [1] PresentedNumberUnscreened OPTIONAL,
														originalCalledNr [2] PresentedNumberUnscreened OPTIONAL} */

D_ASN1_TYPE_START		(NS_DIVERTING_LEG_INFO2_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_DIVERTING_LEG_INFO2_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(4)
	ASN1_TYPE_FIELD				(NS_DIV_COUNTER_P)
	ASN1_TYPE_FIELD				(NS_DIVERSION_REASON_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_DIV_LEG2_DIVERTING_NR_P, Div_leg_info2_diverting_nr)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_DIV_LEG2_ORIG_CALLED_NR_P, Div_leg_info2_orig_called_nr)
ASN1_TYPE_END

#endif

		/*-=-=-=-=-=-=-=--=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses :
		! STORAGE CONTEXTS FOR DIFFERENT INTERNAL FIELDS BUT ASSOCIATED WITH SAME
		(P_PC, FIELD_NB) PAIR MUST BE ADJACENT IN TABLES */

		/* ActivationDiversion operation */

#if NS_USE_EUROPE_OPERATION == ON

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_ACTIV_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_ACTIVATION_DIV_ARG_P,		1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_activation.procedure),							0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_ACTIVATION_DIV_ARG_P,		2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_activation.basic_service),						0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_activation.forw_sub_add_type),					0,	0, 0, 2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_activation.forw_sub_address),		0,	0, 0, 2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_activation.forw_sub_add_odd_count),				0,	0, 0, 0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIV_SERVED_USER_NR_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_activation.served_user_nr_type),				0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_activation.forw_party_nb_type),					0,	0, 7, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_activation.srv_u_party_nb_type),				0,	0, 7, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_activation.forw_type_of_nb),					0,	0,	9,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_activation.srv_u_type_of_nb),					0,	0,	9,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_activation.forw_number_digits),	0,	0,	11,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_activation.srv_u_number_digits),	0,	0,	11,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* DeactivationDiversion operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_DEACTIV_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DEACTIVATION_DIV_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_deactivation.procedure),						0,	0,	0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DEACTIVATION_DIV_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_deactivation.basic_service),					0,	0,	0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIV_SERVED_USER_NR_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_deactivation.served_user_nr_type),				0,	0,	0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_deactivation.srv_u_party_nb_type),				0,	0,	0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_deactivation.srv_u_type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_deactivation.srv_u_number_digits),	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/*	InterrogationDiversion operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_INTEROG_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_INTEROG_DIV_ARG_P,			1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation.procedure),							0,	0,	0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_INTEROG_DIV_ARG_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation.basic_service),						0,	0,	0, 0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIV_SERVED_USER_NR_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interrogation.served_user_nr_type),					0,	0,	0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interrogation.srv_u_party_nb_type),					0,	0,	0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation.srv_u_type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_interrogation.srv_u_number_digits),	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_INTEROG_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct
instance_interval,					repetition, 						next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_INTEROG_DIV_RES_P,			0,	NS_SS_SEQUENCE_OF_NB,		&(ns_op_div_interrogation_res.int_result_nb),
0,										0, 									0, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIV_INT_RESULT_P,			3,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation_res.procedure[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			1, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIV_INT_RESULT_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation_res.basic_service[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			2, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interrogation_res.forw_sub_add_type[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			3, 			NS_DIV_MX_INT_RESULT)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_interrogation_res.forw_sub_address[0]),
sizeof (struct ns_asn1_string),		(NS_DIV_MX_INT_RESULT - 1),			4, 			NS_DIV_MX_INT_RESULT)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_interrogation_res.forw_sub_add_odd_count[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			5, 			0)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIV_SERVED_USER_NR_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interrogation_res.served_user_nr_type[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			6, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interrogation_res.party_nb_type[0]),
1,										((NS_DIV_MX_INT_RESULT * 2) - 1),	7, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation_res.type_of_nb[0]),
1,										((NS_DIV_MX_INT_RESULT * 2) - 1),	8, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_interrogation_res.number_digits[0]),
sizeof (struct ns_asn1_string),		((NS_DIV_MX_INT_RESULT * 2) - 1),	9, 			255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* InterrogateServedUserNumbers operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_INTEROG_S_U_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct
instance_interval,							repetition, 			next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_INTEROG_S_USER_NB_RES_P,	0,	NS_SS_SEQUENCE_OF_NB,		&(ns_op_div_interog_s_u_nb.nb_of_party_nb),
0,										0, 								0, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interog_s_u_nb.party_nb_type[0]),
1,										(NS_DIV_MX_USER_NUMBERS - 1),	1, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interog_s_u_nb.type_of_nb[0]),
1,										(NS_DIV_MX_USER_NUMBERS - 1),	2, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_interog_s_u_nb.number_digits[0]),
sizeof (struct ns_asn1_string),		(NS_DIV_MX_USER_NUMBERS - 1),	3, 			255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* DiversionInformation operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_INFO_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIV_INFORMATION_ARG_P,		1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_information.reason),								0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIV_INFORMATION_ARG_P,		2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_information.basic_service),							0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIV_INFORMATION_ARG_P,		7,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_information.last_divert_reason),					0,	0,	0,	7)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_information.q931_user_info),			0,	0,	0,	8)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_information.srv_u_sub_add_type),					0,	0,	5,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_information.calling_sub_add_type),					0,	0,	5,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_information.srv_u_sub_address),		0,	0,	7,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_information.calling_sub_address),		0,	0,	7,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_information.srv_u_sub_add_odd_count),				0,	0,	9,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_information.calling_sub_add_odd_count),				0,	0,	9,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_ADDRESS_SCREENED_P,0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_information.calling_a_presented_type),				0,	0,	0,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_ADDRESS_SCREENED_P,		2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_information.calling_a_screening_ind),				0,	0,	0,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_information.calling_party_nb_type),					0,	0,	13,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_information.orig_party_nb_type),					0,	0,	14,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_information.last_party_nb_type),					0,	0,	14,	6)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_information.calling_type_of_nb),					0,	0,	16,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_information.orig_type_of_nb),						0,	0,	17,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_information.last_type_of_nb),						0,	0,	17,	6)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_information.calling_number_digits),	0,	0,	19,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_information.orig_number_digits),		0,	0,	20,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_information.last_number_digits),		0,	0,	20,	6)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_information.orig_presented_nb_type),				0,	0,	22,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_information.last_presented_nb_type),				0,	0,	22,	6)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* CallDeflection operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_DIV_DEFLECTION) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CALL_DEFLECTION_ARG_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_deflection.pres_allow_div_to_user),			0,	0,	0,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_deflection.party_nb_type),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_deflection.type_of_nb),						0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_deflection.number_digits),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_deflection.sub_add_type),					0,	0,	0,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_deflection.sub_address),		0,	0,	0,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_deflection.sub_add_odd_count),				0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* CallRerouteing operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_DIV_REROUTE) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CALL_REROUTEING_ARG_P,		1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.reason),								0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CALL_REROUTEING_ARG_P,		3,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.counter),							0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CALL_REROUTEING_ARG_P,		6,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.subscription_option),				0,	0,	0,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.q931_ie),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.called_sub_add_type),				0,	0,	5,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.calling_sub_add_type),				0,	0,	5,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.called_sub_address),	0,	0,	7,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.calling_sub_address),	0,	0,	7,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_rerouteing.called_sub_add_odd_count),			0,	0,	9,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_rerouteing.calling_sub_add_odd_count),			0,	0,	9,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.called_party_nb_type),				0,	0,	11,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.last_party_nb_type),					0,	0,	11,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.called_type_of_nb),					0,	0,	13,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.last_type_of_nb),					0,	0,	13,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.called_number_digits),	0,	0,	15,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.last_number_digits),	0,	0,	15,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.last_presented_nb_type),				0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* DivertingLegInformation1 operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_DIV_LEG_INF_1) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIVERTING_LEG_INFO1_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_1.reason),							0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIVERTING_LEG_INFO1_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_1.subscription_option),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_1.presented_nb_type),				0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_1.party_nb_type),					0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_1.type_of_nb),						0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_1.number_digits),		0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* DivertingLegInformation2 operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_DIV_LEG_INF_2) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIVERTING_LEG_INFO2_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_2.counter),							0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIVERTING_LEG_INFO2_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_2.reason),								0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_2.div_presented_nb_type),				0,	0,	3,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_2.orig_presented_nb_type),				0,	0,	3,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_2.div_party_nb_type),					0,	0,	5,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_2.orig_party_nb_type),					0,	0,	5,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_2.div_type_of_nb),						0,	0,	7,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_2.orig_type_of_nb),					0,	0,	7,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_2.div_number_digits),		0,	0,	9,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_2.orig_number_digits),	0,	0,	9,	1)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* DivertingLegInformation3 operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_DIV_LEG_INF_3) /* { */
								/*	 	p_pc						field_nb	type				p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_DIVERTING_LEG_INFO3_ARG_P,	0,	NS_SS_INT_TYPE_BOOLEAN,	&ns_op_div_leg_info_3,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

#endif

#endif /* end of "NS_SS_DIVERSION = ON"} */

/*==========================================================================*/

		/* Explicit Channel Reservation
		 * ---------------------------- */

#if NS_SS_EXPL_CHAN_RESERVATION == ON	/* Explicit Channel Reservation function supported{ */

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* ExplicitReservationCreationControl operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CH_RES_CREATE) /* { */
								/*	 	p_pc						field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_EXP_CH_RES_CREATE_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ch_res_control_opt,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_CH_RES_CREATE) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_EXP_CH_RES_CREATE_RES_P,	0,	NS_SS_INT_TYPE_CHAR,	(uchar FAR *)&ns_op_ch_res_create_ind,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/*	ExplicitReservationManagement operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CH_RES_MANAGE) /* { */
							/*	 	p_pc							field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_EXP_CH_RES_MANAGE_ARG_P,	0,	NS_SS_INT_TYPE_CHAR,	(uchar FAR *)&ns_op_ch_res_manage_ind,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/*	ExplicitReservationCancel operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CH_RES_CANCEL) /* { */
							/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_EXP_CH_RES_CANCEL_ARG_P,	0,	NS_SS_INT_TYPE_CHAR,	(uchar FAR *)&ns_op_ch_res_cancel_ind,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

#endif /* end of "Explicit Channel Reservation function supported"} */

/*==========================================================================*/

		/* Conference call, add-on SS (CONF)
		 * --------------------------------- */

#if NS_SS_CONFERENCE == ON	/* Conference call SS supported{ */

	/* BeginCONF operation RESULT = SEQUENCE {
										ConferenceId,
										PartyId OPTIONAL} */

D_ASN1_TYPE_START		(NS_CONF_BEGIN_RES_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CONF_BEGIN_RES_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_CONF_CONFERENCE_ID_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_CONF_PARTY_ID_P, Conf_begin_party_id)
ASN1_TYPE_END

	/* SplitCONF operation ARGUMENT = SEQUENCE {
											ConferenceId,
											PartyId} */

D_ASN1_TYPE_START		(NS_CONF_SPLIT_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CONF_SPLIT_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_CONF_CONFERENCE_ID_P)
	ASN1_TYPE_LAST_FIELD	(NS_CONF_PARTY_ID_P)
ASN1_TYPE_END

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* BeginCONF operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CONF_BEGIN) /* { */
									/*	 	p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_BEGIN_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_begin_size,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_CONF_BEGIN) /* { */
									/*	 	p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_BEGIN_RES_P,	1,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_begin_res.conf_id,	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_BEGIN_RES_P,	2,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_begin_res.party_id,	0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

		/* AddCONF operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CONF_ADD) /* { */
									/*	 	p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_ADD_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_add_conf_id,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_CONF_ADD) /* { */
									/*	 	p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_ADD_RES_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_add_party_id,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

		/* SplitCONF operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CONF_SPLIT) /* { */
									/*	 	p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_SPLIT_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_split_arg.conf_id,	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_SPLIT_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_split_arg.party_id,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

		/* DropCONF operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CONF_DROP) /* { */
									/*	 	p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_DROP_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_drop_party_id,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* IsolateCONF operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CONF_ISOLATE) /* { */
									/*	 	p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_ISOLATE_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_isolate_party_id,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* ReattachCONF operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CONF_REATTACH) /* { */
									/*	 	p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_REATTACH_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_reattach_party_id,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

	/* PartyDISC operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CONF_PARTYDISC) /* { */
										/*	 p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CONF_PARTY_DISC_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_conf_partydisc_party_id,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

#if NS_SS_INTERACTIONS == ON	/* Supplementary service interactions */

	/* IdentifyConferee operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_INTER_ID_CF) /* { */
										/*	 p_pc			field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_INTER_ID_CONF_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_inter_id_conf_party_id,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_eur_end_table_or_function /* } */

#endif	/* end of SS interactions */

#endif /* end of Conference call SS supported} */

/*==========================================================================*/

		/*	User-to-User Signalling SS (UUS)
		 * --------------------------------- */

#if NS_SS_USER_USER_EXP == ON	/* explicit requests for User-to-User Signalling SS supported{ */

	/* UserUserService operation ARGUMENT :
				SEQUENCE {Service, Preferred}
		with
				Service ::= [1] IMPLICIT INTEGER (service1 (1), service2 (2), service3 (3)),
				Preferred ::= [2] IMPLICIT BOOLEAN */

D_ASN1_TYPE_START		(NS_UUS_SERVICE_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_UUS_SERVICE_P)
	ASN1_TYPE_IDENT			(ASN1_INTEGER_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_UUS_PREFERRED_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_UUS_PREFERRED_P)
	ASN1_TYPE_IDENT			(ASN1_BOOLEAN_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_UUS_RQ_OP_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_UUS_RQ_OP_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_UUS_SERVICE_P)
	ASN1_TYPE_LAST_FIELD	(NS_UUS_PREFERRED_P)
ASN1_TYPE_END

	/* Table used to decode and store data of ARGUMENT clause */

	/*	UserUserService operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_UUS_RQ)	/* { */
			/* first entry : used for repetition of UUS Request ARGUMENT */
	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, sizeof (struct ns_op_uus_rq), NS_SS_MAX_UUS_RQ, 0, 0)

						/*	 p_pc								field_nb	type				p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_UUS_RQ_OP_ARG_P, 1, NS_SS_INT_TYPE_UCHAR, &(ns_op_uus_rq[0].service), 0, 0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_UUS_RQ_OP_ARG_P, 2, NS_SS_INT_TYPE_BOOLEAN, &(ns_op_uus_rq[0].preferred), 0, 0, 0, 255)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

#if (NS_SS_INTERACTIONS == ON) && (NS_SS_DIVERSION == ON)	/* Diversion SS and SS interactions supported */

	/*	UUSRequest operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_INTER_UUS_RQ)	/* { */
						/*	 p_pc							field_nb	type				p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_INTER_UUS_RQ_ARG_P, 1, NS_SS_INT_TYPE_UCHAR, &ns_op_interact_uus_rq.service, 0, 0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_INTER_UUS_RQ_ARG_P, 2, NS_SS_INT_TYPE_BOOLEAN, &ns_op_interact_uus_rq.preferred, 0, 0, 0, 255)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

#endif

#endif	/* end of "explicit requests for User-to-User Signalling SS supported"} */

/*==========================================================================*/

		/*	Explicit Call Transfer SS (ECT)
		 * -------------------------------- */

#if NS_SS_ECT == ON			/* Explicit Call Transfer supported{ */

	/* EctInform operation ARGUMENT :
				SEQUENCE {
					ENUMERATED {alerting (0), active (1)},
					redirectionNumber PresentedNumberUnscreened OPTIONAL} */

D_ASN1_TYPE_START		(NS_ECT_INFORM_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_ECT_INFORM_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_ENUMERATED_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PRES_NB_UNSCREENED_P, Ect_inform_redir_nb)
ASN1_TYPE_END

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* EctInform operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_ECT_INFORM)	/* { */
						/*	 p_pc								field_nb	type						p_struct				instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_ECT_INFORM_ARG_P,			1,	NS_SS_INT_TYPE_UCHAR, 		&(ns_op_ect_inform_arg.status),								0,	0,	0,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_ect_inform_arg.redir_presented_nb_type),			0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ect_inform_arg.redir_party_nb_type),				0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ect_inform_arg.redir_type_of_nb),					0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ect_inform_arg.redir_number_digits),	0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

	/* EctLinkIdRequest operation : RESULT */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_ECT_LK_ID_RQ)	/* { */
						/*	 p_pc						field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_ECT_LINK_ID_RQ_RES_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ect_lk_id_rq_link,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

	/* EctLoopTest operation : ARGUMENT */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_ECT_LOOP_TEST)	/* { */
						/*	 p_pc							field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_ECT_LOOP_TEST_ARG_P,	0,	NS_SS_INT_TYPE_CHAR,	(uchar FAR *)&ns_op_ect_loop_test_call_id,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

	/* EctLoopTest operation : RESULT */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_ECT_LOOP_TEST)	/* { */
						/*	 p_pc							field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_ECT_LOOP_TEST_RES_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ect_loop_test_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

	/* ExplicitEctExecute operation : ARGUMENT */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_ECT_EXP_EXEC)	/* { */
						/*	 p_pc							field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_ECT_EXP_EXECUTE_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ect_exp_exec_link,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* SubaddressTransfer operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_ECT_SA_TRF)	/* { */
						/*	 p_pc								field_nb	type						p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_ect_subadd_trf_arg.trf_sa_type),			0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ect_subadd_trf_arg.trf_sa),	0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ect_subadd_trf_arg.trf_sa_odd_count),		0,	0, 0, 0)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

#endif	/* end of Explicit Call Transfer supported} */

/*==========================================================================*/

		/*	Freephone SS (FPH)
		 * ------------------- */

#if NS_SS_FREEPHONE == ON		/* Freephone supported{ */

	/* Monitor-T-FPH operation ARGUMENT :
				SEQUENCE {
					q931InfoElement Q931InformationElement,
					servedUserDestination PartyNumber,
					queueIdentity QueueIdentity OPTIONAL} */

D_ASN1_TYPE_START		(NS_FPH_MONITOR_T_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_FPH_MONITOR_T_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_FIELD				(NS_SS_Q931_IE_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_FPH_QUEUE_ID_P, Fph_monitor_queue_id)
ASN1_TYPE_END

	/* Free-T-FPH operation ARGUMENT :
				SEQUENCE {
					servedUserDestination PartyNumber,
					fPHReference FPHReference} */

D_ASN1_TYPE_START		(NS_FPH_FREE_T_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_FPH_FREE_T_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_LAST_FIELD		(NS_SS_FPH_REFERENCE_P)
ASN1_TYPE_END

	/* Call-T-FPH operation ARGUMENT :
				SEQUENCE {
					fPHReference FPHReference,
					calledFreephoneNr CalledFreephoneNr OPTIONAL}

		with CalledFreephoneNr ::= PartyNumber
	*/

D_ASN1_TYPE_START		(NS_FPH_CALL_T_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_FPH_CALL_T_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_FPH_REFERENCE_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PARTY_NUMBER_P, Fph_call_t_called_nb)
ASN1_TYPE_END

	/* Tables used to decode and store data of ARGUMENT clauses */

		/* CallFPH operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_FPH_CALL)	/* { */
						/*	 p_pc								field_nb	type						p_struct				instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_fph_call_arg.party_nb_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_fph_call_arg.type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_fph_call_arg.number_digits),	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* Monitor-T-FPH operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_FPH_MONITOR)	/* { */
						/*	 p_pc								field_nb	type						p_struct				instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_fph_monitor_t_arg.q931_ie),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_fph_monitor_t_arg.s_u_party_nb_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_fph_monitor_t_arg.s_u_type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_fph_monitor_t_arg.s_u_number_digits),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_FPH_MONITOR_T_ARG_P,		3,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_fph_monitor_t_arg.queue_id),						0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* Free-T-FPH operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_FPH_FREE)	/* { */
						/*	 p_pc								field_nb	type						p_struct				instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_fph_free_t_arg.s_u_party_nb_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_fph_free_t_arg.s_u_type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_fph_free_t_arg.s_u_number_digits),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_FPH_FREE_T_ARG_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_fph_free_t_arg.fph_ref),						0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* Call-T-FPH operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_FPH_T_CALL)	/* { */
						/*	 p_pc								field_nb	type						p_struct				instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_FPH_CALL_T_ARG_P,			1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_fph_call_t_arg.fph_ref),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_fph_call_t_arg.party_nb_type),				0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_fph_call_t_arg.type_of_nb),					0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_fph_call_t_arg.number_digits),	0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

#endif	/* end of Freephone supported} */

/*==========================================================================*/

		/*	Completion of Calls to Busy Subscriber SS (CCBS)
		 * ------------------------------------------------- */

#if (NS_SS_CCBS == ON) && (NS_USE_EUROPE_OPERATION == ON)	/* Completion of Calls to Busy Subscriber supported{ */

		/* CallInformation ::= SEQUENCE {
		 *						 	addressOfB Address,
		 *							q931InfoElement Q931InformationElement,
		 *							cCBSReference CCBSReference,
		 *							subAddressOfA PartySubaddress OPTIONAL}
		 */

		/* Address ::= SEQUENCE {PartyNumber,
		 *						 PartySubaddress OPTIONAL}
		 */

D_ASN1_TYPE_START		(NS_SS_CCBS_ADDRESS_OFB_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_CCBS_ADDRESS_OFB_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PARTY_SUBADDRESS_P, Ccbs_subadd_in_call_info)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_CCBS_CALL_INFO_P)
	D_ASN1_TYPE_FIELD_NB	(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_CCBS_CALL_INFO_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(4)
	ASN1_TYPE_FIELD				(NS_SS_CCBS_ADDRESS_OFB_P)
	ASN1_TYPE_FIELD				(NS_SS_Q931_IE_P)
	ASN1_TYPE_FIELD				(NS_SS_CCBS_REFERENCE_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PARTY_SUBADDRESS_P, Ccbs_subadd_in_call_info)
ASN1_TYPE_END

		/* CallDetails ::= SEQUENCE SIZE (1..5) OF CallInformation */

D_ASN1_TYPE_START		(NS_SS_CCBS_CALL_DETAIL_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_CCBS_CALL_DETAIL_P)
	NS_ASN1_SEQUENCE_OF
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_CCBS_CALL_INFO_P)
ASN1_TYPE_END

	/* CCBSRequest operation RESULT :
				SEQUENCE {
					recallMode RecallMode,
					cCBSReference CCBSReference} */

D_ASN1_TYPE_START		(NS_CCBS_REQUEST_RES_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CCBS_REQUEST_RES_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_CCBS_RECALL_MODE_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_CCBS_REFERENCE_P)
ASN1_TYPE_END

	/* CCBSStatusRequest operation ARGUMENT :
				SEQUENCE {
					recallMode RecallMode,
					cCBSReference CCBSReference,
					q931InfoElement Q931InformationElement} */

D_ASN1_TYPE_START		(NS_CCBS_STAT_RQ_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CCBS_STAT_RQ_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(3)
	ASN1_TYPE_FIELD			(NS_SS_CCBS_RECALL_MODE_P)
	ASN1_TYPE_FIELD			(NS_SS_CCBS_REFERENCE_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_Q931_IE_P)
ASN1_TYPE_END

	/* CCBSRemoteUserFree operation ARGUMENT :
				SEQUENCE {
					recallMode RecallMode,
					cCBSReference CCBSReference,
					addressOfB Address,
					q931InfoElement Q931InformationElement} */

D_ASN1_TYPE_START		(NS_CCBS_REMOTE_FREE_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CCBS_REMOTE_FREE_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(4)
	ASN1_TYPE_FIELD			(NS_SS_CCBS_RECALL_MODE_P)
	ASN1_TYPE_FIELD			(NS_SS_CCBS_REFERENCE_P)
	ASN1_TYPE_FIELD			(NS_SS_ADDRESS_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_Q931_IE_P)
ASN1_TYPE_END

	/* CCBSErase operation ARGUMENT :
				SEQUENCE {
					recallMode RecallMode,
					cCBSReference CCBSReference,
					addressOfB Address,
					q931InfoElement Q931InformationElement,
					eraseReason CCBSEraseReason} */

D_ASN1_TYPE_START		(NS_CCBS_ERASE_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(5)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CCBS_ERASE_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(5)
	ASN1_TYPE_FIELD			(NS_SS_CCBS_RECALL_MODE_P)
	ASN1_TYPE_FIELD			(NS_SS_CCBS_REFERENCE_P)
	ASN1_TYPE_FIELD			(NS_SS_ADDRESS_P)
	ASN1_TYPE_FIELD			(NS_SS_Q931_IE_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_CCBS_ERASE_REAS_P)
ASN1_TYPE_END

	/* CCBSInterrogate operation ARGUMENT :
				SEQUENCE {
					cCBSReference CCBSReference OPTIONAL,
					partyNumberOfA PartyNumber OPTIONAL} */

D_ASN1_TYPE_START		(NS_CCBS_INTEROG_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CCBS_INTEROG_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_CCBS_REFERENCE_P, Ccbs_ref_in_interog_arg)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_PARTY_NUMBER_P, Ccbs_nb_in_interog_arg)
ASN1_TYPE_END

	/* CCBSInterrogate operation RESULT :
				SEQUENCE {
					recallMode RecallMode,
					callDetails CallDetails OPTIONAL} */

D_ASN1_TYPE_START		(NS_CCBS_INTEROG_RES_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CCBS_INTEROG_RES_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_CCBS_RECALL_MODE_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_CCBS_CALL_DETAIL_P, Ccbs_detail_in_interog_res)
ASN1_TYPE_END

	/* CCBS-T-Request operation ARGUMENT :
				SEQUENCE {
					destinationAddress Address,
					q931InfoElement Q931InformationElement,
					retentionSupported [1] IMPLICIT BOOLEAN DEFAULT FALSE,
					presentationAllowedIndicator [2] IMPLICIT BOOLEAN OPTIONAL,
					originatingAddress Address OPTIONAL} */

D_ASN1_TYPE_START		(NS_SS_CCBS_T_RETENTION_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_CCBS_T_RETENTION_P)
	ASN1_TYPE_IDENT			(ASN1_BOOLEAN_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_CCBS_T_PRES_ALLOW_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_CCBS_T_PRES_ALLOW_P)
	ASN1_TYPE_IDENT			(ASN1_BOOLEAN_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_CCBS_T_RQ_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(5)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_CCBS_T_RQ_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(5)
	ASN1_TYPE_FIELD				(NS_SS_ADDRESS_P)
	ASN1_TYPE_FIELD				(NS_SS_Q931_IE_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_CCBS_T_RETENTION_P, Ccbs_t_rq_retention)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_CCBS_T_PRES_ALLOW_P, Ccbs_t_rq_pres_allow)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_ADDRESS_P, Ccbs_t_rq_pres_origin)
ASN1_TYPE_END

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* CallInfoRetain operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_INF_RET)	/* { */
						/*	 p_pc								field_nb	type					p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_CALL_INFO_RET_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ccbs_call_info_lk_id,	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* EraseCallLinkageID operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_ERAS_LK)	/* { */
						/*	 p_pc								field_nb	type					p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_ERASE_CALL_LK_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ccbs_erase_call_lk_id,	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* CCBSDeactivate operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_DEA)	/* { */
						/*	 p_pc							field_nb	type					p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_DEACTIVATE_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ccbs_deactivate_ref,	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* CCBSCall operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_CALL)	/* { */
						/*	 p_pc						field_nb	type					p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_CALL_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ccbs_call_ref,	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* CCBSStopAlerting operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_STOP_AL)	/* { */
						/*	 p_pc							field_nb	type					p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_STOP_ALERT_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ccbs_stop_alert_ref,	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* CCBSRequest operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_RQ)	/* { */
						/*	 p_pc							field_nb	type					p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_REQUEST_ARG_P,	0,	NS_SS_INT_TYPE_UCHAR,	&ns_op_ccbs_request_lk_id,	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_CCBS_RQ)	/* { */
						/*	 p_pc							field_nb	type					p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_REQUEST_RES_P,	1,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_ccbs_request_res.recall_mode),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_REQUEST_RES_P,	2,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_ccbs_request_res.reference),	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

	/* CCBSStatusRequest operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_STAT_RQ)	/* { */
						/*	 p_pc							field_nb	type					p_struct							instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_STAT_RQ_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_ccbs_status_rq_arg.recall_mode),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_STAT_RQ_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_ccbs_status_rq_arg.reference),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_status_rq_arg.q931_ie),	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_CCBS_STAT_RQ)	/* { */
						/*	 p_pc							field_nb	type					p_struct	instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_STAT_RQ_RES_P,	0,	NS_SS_INT_TYPE_BOOLEAN,	&ns_op_ccbs_status_rq_res,	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* CCBSRemoteUserFree operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_R_FREE) /* { */
								/*	 	p_pc					field_nb	type						p_struct					instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_REMOTE_FREE_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_remote_free_arg.recall_mode),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_REMOTE_FREE_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_remote_free_arg.reference),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_remote_free_arg.q931_ie),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_remote_free_arg.party_nb_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_remote_free_arg.type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_remote_free_arg.number_digits),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_remote_free_arg.sub_add_type),					0,	0,	0,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_remote_free_arg.sub_add_odd_c),				0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_remote_free_arg.sub_address),		0,	0,	0,	2)
	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* CCBSBFree operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_BFREE) /* { */
								/*	 	p_pc					field_nb	type						p_struct					instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_BFREE_ARG_P,			1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_bfree_arg.recall_mode),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_BFREE_ARG_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_bfree_arg.reference),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_bfree_arg.q931_ie),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_bfree_arg.party_nb_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_bfree_arg.type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_bfree_arg.number_digits),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_bfree_arg.sub_add_type),				0,	0,	0,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_bfree_arg.sub_add_odd_c),				0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_bfree_arg.sub_address),	0,	0,	0,	2)
	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* CCBSErase operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_ERASE) /* { */
								/*	 	p_pc					field_nb	type						p_struct					instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_ERASE_ARG_P,			1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_erase_arg.recall_mode),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_ERASE_ARG_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_erase_arg.reference),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_ERASE_ARG_P,			5,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_erase_arg.reason),						0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_erase_arg.q931_ie),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_erase_arg.party_nb_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_erase_arg.type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_erase_arg.number_digits),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_erase_arg.sub_add_type),				0,	0,	0,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_erase_arg.sub_add_odd_c),				0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_erase_arg.sub_address),	0,	0,	0,	2)
	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* CCBSInterrogate operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_INTEROG) /* { */
								/*	 	p_pc					field_nb	type						p_struct					instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_INTEROG_ARG_P,		1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_interog_arg.reference),					0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_interog_arg.party_nb_type),				0,	0,	0,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_interog_arg.type_of_nb),					0,	0,	0,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_interog_arg.number_digits),	0,	0,	0,	1)
	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_CCBS_INTEROG) /* { */
								/*	 	p_pc					field_nb	type						p_struct					instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_INTEROG_RES_P,		1,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_ccbs_interog_res.recall_mode),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_CCBS_CALL_DETAIL_P,		0,	NS_SS_SEQUENCE_OF_NB,	&(ns_op_ccbs_interog_res.call_info_nb),	0,	0,	0,	20)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_CCBS_CALL_INFO_P,		3,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_ccbs_interog_res.reference[0]),
1,									(NS_CCBS_MX_CALL_INFO - 1),					2,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_interog_res.q931_ie[0]),
sizeof (struct ns_asn1_string),		(NS_CCBS_MX_CALL_INFO - 1),					3,	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_interog_res.party_nb_type[0]),
1,									(NS_CCBS_MX_CALL_INFO - 1),					4, 	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,	&(ns_op_ccbs_interog_res.type_of_nb[0]),
1,									(NS_CCBS_MX_CALL_INFO - 1),					5, 	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_interog_res.number_digits[0]),
sizeof (struct ns_asn1_string),		(NS_CCBS_MX_CALL_INFO - 1),					6, 	255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_interog_res.sub_add_type[0]),
1,									((NS_CCBS_MX_CALL_INFO * 2) - 1),			7, 	10)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_interog_res.sub_add_odd_c[0]),
1,									((NS_CCBS_MX_CALL_INFO * 2) - 1),			8,	0)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_interog_res.sub_address[0]),
sizeof (struct ns_asn1_string),		((NS_CCBS_MX_CALL_INFO * 2) - 1),			9, 	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

		/* CCBS-T-Request operation */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_ARG_CTX_LIST_CCBS_T_RQ) /* { */
								/*	 	p_pc					field_nb	type						p_struct					instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.q931_ie),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_T_RQ_ARG_P,			3,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_t_rq_arg.retention),					0,	0,	0,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_T_RQ_ARG_P,			4,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_t_rq_arg.pres_allow),					0,	0,	0,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_t_rq_arg.dest_party_nb_t),				0,	0,	4,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_t_rq_arg.orig_party_nb_t),				0,	0,	4,	6)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_t_rq_arg.dest_t_of_nb),				0,	0,	6,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_t_rq_arg.orig_t_of_nb),				0,	0,	6,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.dest_nb_digits),	0,	0,	8,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.orig_nb_digits),	0,	0,	8,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_t_rq_arg.dest_sa_type),				0,	0,	10,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_t_rq_arg.orig_sa_type),				0,	0,	10,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_t_rq_arg.dest_sa_odd_c),				0,	0,	12,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_t_rq_arg.orig_sa_odd_c),				0,	0,	12,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.dest_sub_add),	0,	0,	14,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.orig_sub_add),	0,	0,	14,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

Ns_eur_table_or_function (ns_asn1_store_desc, NS_RES_CTX_LIST_CCBS_T_RQ)	/* { */
						/*	 p_pc						field_nb	type					p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_CCBS_T_RQ_RES_P,	0,	NS_SS_INT_TYPE_BOOLEAN,	&ns_op_ccbs_t_rq_retention,	0,	0,	0,	255)
	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_eur_end_table_or_function /* } */

#endif	/* end of "Completion of Calls to Busy Subscriber supported"} */

/*==========================================================================

			- EUROPE specific tables for operations and errors -
*/

#if NS_USE_EUROPE_OPERATION == ON

Ns_eur_table_or_function (ns_ss_operation, EUROPE_OPERATION_TAB) /* { */
					/* 	interface identifier	operation tag		operation value			p_argument_prog
		p_arg_ctx_list					p_result_prog									p_res_ctx_list,					ssdu_fct */

#if (NS_SS_AOC_S == ON) || (NS_SS_AOC_D == ON) || (NS_SS_AOC_E == ON)
	Ns_ss_op_tab_entry (NS_OP_AOC_CHARGING_RQ,		FAC_INTEGER_TAG,	NS_OP_VAL_CHARGING_RQ,	(uchar FAR *)&NS_AOC_CHARGING_REQUEST_ARG_P,
		NS_ARG_CTX_LIST_AOC_CHARG_RQ,	(uchar FAR *)&NS_AOC_CHARGING_REQUEST_RES_P,	NS_RES_CTX_LIST_AOC_CHARG_RQ,	ns_ssdu_op_charging_rq)
#endif

#if NS_SS_AOC_S == ON
	Ns_ss_op_tab_entry (NS_OP_AOCS_CURRENCY,	FAC_INTEGER_TAG,	NS_OP_VAL_AOCS_CURRENCY,	(uchar FAR *)&NS_AOCS_CURRENCY_ARG_P,
		NS_ARG_CTX_LIST_AOCS_CURRENCY,	P_NIL,	P_NIL,	ns_ssdu_op_aocs_currency)

	Ns_ss_op_tab_entry (NS_OP_AOCS_SPECIAL_ARR,	FAC_INTEGER_TAG,	NS_OP_VAL_AOCS_SPECIAL_ARR,	(uchar FAR *)&NS_AOCS_SPECIAL_ARR_ARG_P,
		NS_ARG_CTX_LIST_AOCS_SPEC_ARR,	P_NIL,	P_NIL,	ns_ssdu_op_aocs_special_arr)
#endif

#if NS_SS_AOC_D == ON
	Ns_ss_op_tab_entry (NS_OP_AOCD_CURRENCY,	FAC_INTEGER_TAG,	NS_OP_VAL_AOCD_CURRENCY,	(uchar FAR *)&NS_AOCD_CURRENCY_ARG_P,
		NS_ARG_CTX_LIST_AOCD_CURRENCY,	P_NIL,	P_NIL,	ns_ssdu_op_aocd_currency)

	Ns_ss_op_tab_entry (NS_OP_AOCD_CHARGING_UNIT,	FAC_INTEGER_TAG,	NS_OP_VAL_AOCD_CHARGING_UNIT,	(uchar FAR *)&NS_AOCD_CHARGING_UNIT_ARG_P,
		NS_ARG_CTX_LIST_AOCD_CHARG_UNIT,	P_NIL,	P_NIL,	ns_ssdu_op_aocd_charging_unit)
#endif

#if NS_SS_AOC_E == ON
	Ns_ss_op_tab_entry (NS_OP_AOCE_CURRENCY,	FAC_INTEGER_TAG,	NS_OP_VAL_AOCE_CURRENCY,	(uchar FAR *)&NS_AOCE_CURRENCY_ARG_P,
		NS_ARG_CTX_LIST_AOCE_CURRENCY,	P_NIL,	P_NIL,	ns_ssdu_op_aoce_currency)

	Ns_ss_op_tab_entry (NS_OP_AOCE_CHARGING_UNIT,	FAC_INTEGER_TAG,	NS_OP_VAL_AOCE_CHARGING_UNIT,	(uchar FAR *)&NS_AOCE_CHARGING_UNIT_ARG_P,
		NS_ARG_CTX_LIST_AOCE_CHARG_UNIT,	P_NIL,	P_NIL,	ns_ssdu_op_aoce_charging_unit)

#if (NS_SS_INTERACTIONS == ON) && ((NS_SS_DIVERSION == ON) || (NS_SS_ECT == ON))
	Ns_ss_op_tab_entry (NS_OP_INTERACT_ID_OF_CHARGE,	FAC_INTEGER_TAG,	NS_OP_VAL_INTERACT_ID_CHARG,	(uchar FAR *)&NS_INTER_ID_OF_CHARG_ARG_P,
		NS_ARG_CTX_LIST_INTER_ID_CH,	P_NIL,	P_NIL,	ns_ssdu_op_inter_id_of_charg)
#endif

#endif

#if NS_SS_CUG == ON
	Ns_ss_op_tab_entry (NS_OP_CUG_CALL,	FAC_INTEGER_TAG,	NS_OP_VAL_CUG_CALL,	(uchar FAR *)&NS_CUG_CALL_OPERATION_P,
		NS_ARG_CTX_LIST_CUG_CALL,	P_NIL,	P_NIL,	ns_ssdu_op_cug_call)
#endif

#if NS_SS_DIVERSION == ON
	Ns_ss_op_tab_entry (NS_OP_ACT_DIVERSION,	FAC_INTEGER_TAG,	NS_OP_VAL_ACT_DIVERSION,	(uchar FAR *)&NS_ACTIVATION_DIV_ARG_P,
		NS_ARG_CTX_LIST_ACTIV_DIV,	P_NIL,	P_NIL,	ns_ssdu_op_activation_div)

	Ns_ss_op_tab_entry (NS_OP_DEACT_DIVERSION,	FAC_INTEGER_TAG,	NS_OP_VAL_DEA_DIVERSION,	(uchar FAR *)&NS_DEACTIVATION_DIV_ARG_P,
		NS_ARG_CTX_LIST_DEACTIV_DIV,	P_NIL,	P_NIL,	ns_ssdu_op_deactivation_div)

	Ns_ss_op_tab_entry (NS_OP_ACT_STAT_NOTIF_DIV,	FAC_INTEGER_TAG,	NS_OP_VAL_ACT_STAT_NOTIF_DIV,	(uchar FAR *)&NS_ACT_STAT_NOTIF_DIV_ARG_P,
		NS_ARG_CTX_LIST_ACT_ST_NOT_DIV,	P_NIL,	P_NIL,	ns_ssdu_op_act_stat_notif_div)

	Ns_ss_op_tab_entry (NS_OP_DEACT_STAT_NOTIF_DIV,	FAC_INTEGER_TAG,	NS_OP_VAL_DEACT_STAT_NOTIF_DIV,	(uchar FAR *)&NS_DEA_STAT_NOTIF_DIV_ARG_P,
		NS_ARG_CTX_LIST_DEA_ST_NOT_DIV,	P_NIL,	P_NIL,	ns_ssdu_op_dea_stat_notif_div)

	Ns_ss_op_tab_entry (NS_OP_INTEROG_DIVERSION,	FAC_INTEGER_TAG,	NS_OP_VAL_INTEROG_DIVERSION,	(uchar FAR *)&NS_INTEROG_DIV_ARG_P,
		NS_ARG_CTX_LIST_INTEROG_DIV,	(uchar FAR *)&NS_INTEROG_DIV_RES_P,		NS_RES_CTX_LIST_INTEROG_DIV,	ns_ssdu_op_interog_div)

	Ns_ss_op_tab_entry (NS_OP_INTEROG_SERVED_USER_NB,	FAC_INTEGER_TAG,	NS_OP_VAL_INTEROG_SERVED_U_NB,	P_NIL,
		P_NIL,	(uchar FAR *)&NS_INTEROG_S_USER_NB_RES_P,	NS_RES_CTX_LIST_INTEROG_S_U_DIV,	ns_ssdu_op_interog_s_u_nb_div)

	Ns_ss_op_tab_entry (NS_OP_DIVERSION_INFO,	FAC_INTEGER_TAG,	NS_OP_VAL_DIVERSION_INFO,	(uchar FAR *)&NS_DIV_INFORMATION_ARG_P,
		NS_ARG_CTX_LIST_INFO_DIV,	P_NIL,	P_NIL,	ns_ssdu_op_div_information)

	Ns_ss_op_tab_entry (NS_OP_CALL_DEFLECTION,	FAC_INTEGER_TAG,	NS_OP_VAL_CALL_DEFLECTION,	(uchar FAR *)&NS_CALL_DEFLECTION_ARG_P,
		NS_ARG_CTX_LIST_DIV_DEFLECTION,	P_NIL,	P_NIL,	ns_ssdu_op_div_deflection)

	Ns_ss_op_tab_entry (NS_OP_CALL_REROUTING,	FAC_INTEGER_TAG,	NS_OP_VAL_CALL_REROUTING,	(uchar FAR *)&NS_CALL_REROUTEING_ARG_P,
		NS_ARG_CTX_LIST_DIV_REROUTE,	P_NIL,	P_NIL,	ns_ssdu_op_div_reroute)

	Ns_ss_op_tab_entry (NS_OP_DIVERTING_LEG_INFO_1,	FAC_INTEGER_TAG,	NS_OP_VAL_DIVERTING_LEG_INFO_1,	(uchar FAR *)&NS_DIVERTING_LEG_INFO1_ARG_P,
		NS_ARG_CTX_LIST_DIV_LEG_INF_1,	P_NIL,	P_NIL,	ns_ssdu_op_div_leg_info_1)

	Ns_ss_op_tab_entry (NS_OP_DIVERTING_LEG_INFO_2,	FAC_INTEGER_TAG,	NS_OP_VAL_DIVERTING_LEG_INFO_2,	(uchar FAR *)&NS_DIVERTING_LEG_INFO2_ARG_P,
		NS_ARG_CTX_LIST_DIV_LEG_INF_2,	P_NIL,	P_NIL,	ns_ssdu_op_div_leg_info_2)

	Ns_ss_op_tab_entry (NS_OP_DIVERTING_LEG_INFO_3,	FAC_INTEGER_TAG,	NS_OP_VAL_DIVERTING_LEG_INFO_3,	(uchar FAR *)&NS_DIVERTING_LEG_INFO3_ARG_P,
		NS_ARG_CTX_LIST_DIV_LEG_INF_3,	P_NIL,	P_NIL,	ns_ssdu_op_div_leg_info_3)
#endif

#if NS_SS_EXPL_CHAN_RESERVATION == ON
	Ns_ss_op_tab_entry (NS_OP_EXP_CH_RES_CREATE,	FAC_INTEGER_TAG,	NS_OP_VAL_EXP_CH_RES_CREATE,	(uchar FAR *)&NS_EXP_CH_RES_CREATE_ARG_P,
		NS_ARG_CTX_LIST_CH_RES_CREATE,	(uchar FAR *)&NS_EXP_CH_RES_CREATE_RES_P,	NS_RES_CTX_LIST_CH_RES_CREATE,	ns_ssdu_op_exp_ch_res_create)

	Ns_ss_op_tab_entry (NS_OP_EXP_CH_RES_MANAGE,	FAC_INTEGER_TAG,	NS_OP_VAL_EXP_CH_RES_MANAGE,	(uchar FAR *)&NS_EXP_CH_RES_MANAGE_ARG_P,
		NS_ARG_CTX_LIST_CH_RES_MANAGE,	P_NIL,	P_NIL,	ns_ssdu_op_exp_ch_res_manage)

	Ns_ss_op_tab_entry (NS_OP_EXP_CH_RES_CANCEL,	FAC_INTEGER_TAG,	NS_OP_VAL_EXP_CH_RES_CANCEL,	(uchar FAR *)&NS_EXP_CH_RES_CANCEL_ARG_P,
		NS_ARG_CTX_LIST_CH_RES_CANCEL,	P_NIL,	P_NIL,	ns_ssdu_op_exp_ch_res_cancel)
#endif

#if NS_SS_3_PARTY == ON
	Ns_ss_op_tab_entry (NS_OP_3_PARTY_BEGIN,	FAC_INTEGER_TAG,	NS_OP_VAL_3_PARTY_BEGIN,	P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)
	Ns_ss_op_tab_entry (NS_OP_3_PARTY_END,		FAC_INTEGER_TAG,	NS_OP_VAL_3_PARTY_END,		P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)
#endif

#if NS_SS_CONFERENCE == ON
	Ns_ss_op_tab_entry (NS_OP_CONF_BEGIN,	FAC_INTEGER_TAG,	NS_OP_VAL_CONF_BEGIN,	(uchar FAR *)&NS_CONF_BEGIN_ARG_P,
		NS_ARG_CTX_LIST_CONF_BEGIN,	(uchar FAR *)&NS_CONF_BEGIN_RES_P,	NS_RES_CTX_LIST_CONF_BEGIN,	ns_ssdu_op_conf_begin)

	Ns_ss_op_tab_entry (NS_OP_CONF_ADD,	FAC_INTEGER_TAG,	NS_OP_VAL_CONF_ADD,	(uchar FAR *)&NS_CONF_ADD_ARG_P,
		NS_ARG_CTX_LIST_CONF_ADD,	(uchar FAR *)&NS_CONF_ADD_RES_P,	NS_RES_CTX_LIST_CONF_ADD,	ns_ssdu_op_conf_add)

	Ns_ss_op_tab_entry (NS_OP_CONF_SPLIT,	FAC_INTEGER_TAG,	NS_OP_VAL_CONF_SPLIT,	(uchar FAR *)&NS_CONF_SPLIT_ARG_P,
		NS_ARG_CTX_LIST_CONF_SPLIT,	P_NIL,	P_NIL,	ns_ssdu_op_conf_other)

	Ns_ss_op_tab_entry (NS_OP_CONF_DROP,	FAC_INTEGER_TAG,	NS_OP_VAL_CONF_DROP,	(uchar FAR *)&NS_CONF_DROP_ARG_P,
		NS_ARG_CTX_LIST_CONF_DROP,	P_NIL,	P_NIL,	ns_ssdu_op_conf_other)

	Ns_ss_op_tab_entry (NS_OP_CONF_ISOLATE,	FAC_INTEGER_TAG,	NS_OP_VAL_CONF_ISOLATE,	(uchar FAR *)&NS_CONF_ISOLATE_ARG_P,
		NS_ARG_CTX_LIST_CONF_ISOLATE,	P_NIL,	P_NIL,	ns_ssdu_op_conf_other)

	Ns_ss_op_tab_entry (NS_OP_CONF_REATTACH,	FAC_INTEGER_TAG,	NS_OP_VAL_CONF_REATTACH,	(uchar FAR *)&NS_CONF_REATTACH_ARG_P,
		NS_ARG_CTX_LIST_CONF_REATTACH,	P_NIL,	P_NIL,	ns_ssdu_op_conf_other)

	Ns_ss_op_tab_entry (NS_OP_CONF_PARTY_DISC,	FAC_INTEGER_TAG,	NS_OP_VAL_CONF_PARTY_DISC,	(uchar FAR *)&NS_CONF_PARTY_DISC_ARG_P,
		NS_ARG_CTX_LIST_CONF_PARTYDISC,	P_NIL,	P_NIL,	ns_ssdu_op_conf_other)

#if NS_SS_INTERACTIONS == ON
	Ns_ss_op_tab_entry (NS_OP_INTERACT_ID_CONFEREE,	FAC_INTEGER_TAG,	NS_OP_VAL_INTERACT_ID_CONF,	(uchar FAR *)&NS_INTER_ID_CONF_ARG_P,
		NS_ARG_CTX_LIST_INTER_ID_CF,	P_NIL,	P_NIL,	ns_ssdu_op_conf_other)
#endif

#endif

#if NS_SS_USER_USER_EXP == ON
	Ns_ss_op_tab_entry (NS_OP_UUS_RQ,	FAC_INTEGER_TAG,	NS_OP_VAL_UUS_RQ,	(uchar FAR *)&NS_UUS_RQ_OP_ARG_P,
		NS_ARG_CTX_LIST_UUS_RQ,	P_NIL,	P_NIL,	ns_ssdu_op_uus_rq)

#if (NS_SS_INTERACTIONS == ON) && (NS_SS_DIVERSION == ON)
	Ns_ss_op_tab_entry (NS_OP_INTERACT_UUS_RQ,	FAC_INTEGER_TAG,	NS_OP_VAL_INTERACT_UUS_RQ,	(uchar FAR *)&NS_INTER_UUS_RQ_ARG_P,
		NS_ARG_CTX_LIST_INTER_UUS_RQ,	P_NIL,	P_NIL,	ns_ssdu_op_uus_rq)
#endif

#endif

#if NS_SS_ECT == ON
	Ns_ss_op_tab_entry (NS_OP_ECT_EXECUTE,	FAC_INTEGER_TAG,	NS_OP_VAL_ECT_EXECUTE,	P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)

	Ns_ss_op_tab_entry (NS_OP_ECT_EXP_EXECUTE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_ECT_EXP_EXEC,	(uchar FAR *)&NS_ECT_EXP_EXECUTE_ARG_P,
		NS_ARG_CTX_LIST_ECT_EXP_EXEC,	P_NIL,	P_NIL,	ns_ssdu_op_ect_exp_exec)

	Ns_ss_op_tab_entry (NS_OP_ECT_RQ_SUBADD,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_ECT_RQ_SUBADD,	P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)

	Ns_ss_op_tab_entry (NS_OP_ECT_SUBADD_TRANSF,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_ECT_SUBADD_TRF,	(uchar FAR *)&NS_ECT_SUBADD_TRF_ARG_P,
		NS_ARG_CTX_LIST_ECT_SA_TRF,	P_NIL,	P_NIL,	ns_ssdu_op_ect_subadd_trf)

	Ns_ss_op_tab_entry (NS_OP_ECT_LINK_ID_RQ,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_ECT_LK_ID_RQ,	P_NIL,
		P_NIL,	(uchar FAR *)&NS_ECT_LINK_ID_RQ_RES_P,	NS_RES_CTX_LIST_ECT_LK_ID_RQ,	ns_ssdu_op_ect_lk_id_rq)

	Ns_ss_op_tab_entry (NS_OP_ECT_INFORM,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_ECT_INFORM,	(uchar FAR *)&NS_ECT_INFORM_ARG_P,
		NS_ARG_CTX_LIST_ECT_INFORM,	P_NIL,	P_NIL,	ns_ssdu_op_ect_inform)

	Ns_ss_op_tab_entry (NS_OP_ECT_LOOP_TEST,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_ECT_LOOP_TEST,	(uchar FAR *)&NS_ECT_LOOP_TEST_ARG_P,
		NS_ARG_CTX_LIST_ECT_LOOP_TEST,	(uchar FAR *)&NS_ECT_LOOP_TEST_RES_P,	NS_RES_CTX_LIST_ECT_LOOP_TEST,	ns_ssdu_op_ect_loop_test)
#endif

#if NS_SS_MALICIOUS_CALL_ID == ON
	Ns_ss_op_tab_entry (NS_OP_MCID_RQ,	FAC_INTEGER_TAG,	NS_OP_VAL_MCID_REQUEST,	P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)
#endif

#if NS_SS_FREEPHONE == ON
	Ns_ss_op_tab_entry (NS_OP_FPH_CALL,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_FPH_CALL,	(uchar FAR *)&NS_FPH_CALL_ARG_P,
		NS_ARG_CTX_LIST_FPH_CALL,	P_NIL,	P_NIL,	ns_ssdu_op_fph_call)

	Ns_ss_op_tab_entry (NS_OP_FPH_MONITOR_T,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_FPH_MONITOR_T,	(uchar FAR *)&NS_FPH_MONITOR_T_ARG_P,
		NS_ARG_CTX_LIST_FPH_MONITOR,	P_NIL,	P_NIL,	ns_ssdu_op_fph_monitor_t)

	Ns_ss_op_tab_entry (NS_OP_FPH_FREE_T,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_FPH_FREE_T,	(uchar FAR *)&NS_FPH_FREE_T_ARG_P,
		NS_ARG_CTX_LIST_FPH_FREE,	P_NIL,	P_NIL,	ns_ssdu_op_fph_free_t)

	Ns_ss_op_tab_entry (NS_OP_FPH_CALL_T,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_FPH_CALL_T,	(uchar FAR *)&NS_FPH_CALL_T_ARG_P,
		NS_ARG_CTX_LIST_FPH_T_CALL,	P_NIL,	P_NIL,	ns_ssdu_op_fph_t_call)
#endif

#if NS_SS_CCBS == ON
	Ns_ss_op_tab_entry (NS_OP_CCBS_CALL_INFO_RETAIN,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_CALL_INFO_RET,	(uchar FAR *)&NS_CCBS_CALL_INFO_RET_ARG_P,
		NS_ARG_CTX_LIST_CCBS_INF_RET,	P_NIL,	P_NIL,	ns_ssdu_op_ccbs_info_eras_lk)

	Ns_ss_op_tab_entry (NS_OP_CCBS_ERASE_CALL_LK_ID,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_ERASE_LK_ID,	(uchar FAR *)&NS_CCBS_ERASE_CALL_LK_ARG_P,
		NS_ARG_CTX_LIST_CCBS_ERAS_LK,	P_NIL,	P_NIL,	ns_ssdu_op_ccbs_info_eras_lk)

	Ns_ss_op_tab_entry (NS_OP_CCBS_RQ,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_RQ,	(uchar FAR *)&NS_CCBS_REQUEST_ARG_P,
		NS_ARG_CTX_LIST_CCBS_RQ,	(uchar FAR *)&NS_CCBS_REQUEST_RES_P,	NS_RES_CTX_LIST_CCBS_RQ,	ns_ssdu_op_ccbs_request)

	Ns_ss_op_tab_entry (NS_OP_CCBS_INTERROGATE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_INTERROGATE,	(uchar FAR *)&NS_CCBS_INTEROG_ARG_P,
		NS_ARG_CTX_LIST_CCBS_INTEROG,	(uchar FAR *)&NS_CCBS_INTEROG_RES_P,	NS_RES_CTX_LIST_CCBS_INTEROG,	ns_ssdu_op_ccbs_interog)

	Ns_ss_op_tab_entry (NS_OP_CCBS_DEACTIVATE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_DEACTIVATE,	(uchar FAR *)&NS_CCBS_DEACTIVATE_ARG_P,
		NS_ARG_CTX_LIST_CCBS_DEA,	P_NIL,	P_NIL,	ns_ssdu_op_ccbs_dea_call_stop)

	Ns_ss_op_tab_entry (NS_OP_CCBS_ERASE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_ERASE,	(uchar FAR *)&NS_CCBS_ERASE_ARG_P,
		NS_ARG_CTX_LIST_CCBS_ERASE,	P_NIL,	P_NIL,	ns_ssdu_op_ccbs_erase)

	Ns_ss_op_tab_entry (NS_OP_CCBS_REMOTE_U_FREE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_REMOTE_FREE,	(uchar FAR *)&NS_CCBS_REMOTE_FREE_ARG_P,
		NS_ARG_CTX_LIST_CCBS_R_FREE,	P_NIL,	P_NIL,	ns_ssdu_op_ccbs_free)

	Ns_ss_op_tab_entry (NS_OP_CCBS_B_FREE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_BFREE,	(uchar FAR *)&NS_CCBS_BFREE_ARG_P,
		NS_ARG_CTX_LIST_CCBS_BFREE,	P_NIL,	P_NIL,	ns_ssdu_op_ccbs_free)

	Ns_ss_op_tab_entry (NS_OP_CCBS_CALL,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_CALL,	(uchar FAR *)&NS_CCBS_CALL_ARG_P,
		NS_ARG_CTX_LIST_CCBS_CALL,	P_NIL,	P_NIL,	ns_ssdu_op_ccbs_dea_call_stop)

	Ns_ss_op_tab_entry (NS_OP_CCBS_STATUS_RQ,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_STATUS_RQ,	(uchar FAR *)&NS_CCBS_STAT_RQ_ARG_P,
		NS_ARG_CTX_LIST_CCBS_STAT_RQ,	(uchar FAR *)&NS_CCBS_STAT_RQ_RES_P,	NS_RES_CTX_LIST_CCBS_STAT_RQ,	ns_ssdu_op_ccbs_stat_rq)

	Ns_ss_op_tab_entry (NS_OP_CCBS_STOP_ALERTING,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_STOP_ALERTING,	(uchar FAR *)&NS_CCBS_STOP_ALERT_ARG_P,
		NS_ARG_CTX_LIST_CCBS_STOP_AL,	P_NIL,	P_NIL,	ns_ssdu_op_ccbs_dea_call_stop)

	Ns_ss_op_tab_entry (NS_OP_CCBS_T_RQ,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_T_RQ,	(uchar FAR *)&NS_CCBS_T_RQ_ARG_P,
		NS_ARG_CTX_LIST_CCBS_T_RQ,	(uchar FAR *)&NS_CCBS_T_RQ_RES_P,	NS_RES_CTX_LIST_CCBS_T_RQ,	ns_ssdu_op_ccbs_t_rq)

	Ns_ss_op_tab_entry (NS_OP_CCBS_T_CALL,			FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_T_CALL,	P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)
	Ns_ss_op_tab_entry (NS_OP_CCBS_T_SUSPEND,		FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_T_SUSP,	P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)
	Ns_ss_op_tab_entry (NS_OP_CCBS_T_RESUME,		FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_T_RES,	P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)
	Ns_ss_op_tab_entry (NS_OP_CCBS_T_REMOTE_FREE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_T_REM_FREE,	P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)
	Ns_ss_op_tab_entry (NS_OP_CCBS_T_AVAILABLE,		FAC_OBJECT_ID_TAG,	NS_OP_VAL_CCBS_T_AVAIL,	P_NIL,	P_NIL,	P_NIL,	P_NIL,	FCT_NIL)
#endif

Ns_eur_end_table_or_function /* } */

#endif

/* EOF */
