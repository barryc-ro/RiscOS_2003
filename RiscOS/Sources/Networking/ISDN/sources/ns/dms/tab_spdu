
/*--------------------------------------------------------------------------*
 *						M O D U L E		H E A D E R
 *
 * filename - tab_spdu.dms
 *
 * $Revision$
 *
 * $Date$
 *
 * Implements the Tables (containing address) describing the
 * signalling protocol data units (SPDU).
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

		/*
			Messages SPDU table ordered in increasing spdu_id :
					- message identifier (spdu ID)
					- event identifier of the event generates
					  by the message
					- message transfered from user to network (function group transmitting the message)
					- message transfered from network to user (functional group receiving the message)
					- type of access  (BRI or/and PRI)
					- information element table address.
		*/

Ns_dms_table_or_function (spdu, DMS_TAB_SPDU)	/* { */

/*	  spdu			event_id		u--->n  	n--->u	  access type			& ie tab				& so ie tab */

	Ns_dms_tab_spdu_entry (ALERT,		DA_ALERT,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_ALERT_IE,			A_NIL)
	Ns_dms_tab_spdu_entry (CALL_PROC,	DA_CALL_PROC,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_CALL_PROC_IE,		A_NIL)
	Ns_dms_tab_spdu_entry (PROGRESS,	DA_PROGRESS,	OFF,		N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_PROGRESS_IE,		A_NIL)
	Ns_dms_tab_spdu_entry (SETUP,		DA_SETUP,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_SETUP_IE,			A_NIL)
	Ns_dms_tab_spdu_entry (CONN,		DA_CONN,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_CONN_IE,			A_NIL)
	Ns_dms_tab_spdu_entry (SETUP_ACK,	DA_SETUP_ACK,	OFF,		N_U_ALL,	BRI,		(struct spdu_ie *)DMS_SETUP_ACK_IE,		A_NIL)
	Ns_dms_tab_spdu_entry (CONN_ACK,	DA_CONN_ACK,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_CONN_ACK_IE,		A_NIL)

	Ns_dms_tab_spdu_entry (HOLD,		DA_HOLD,		U_N_ALL,	N_U_ALL,	BRI,		(struct spdu_ie *)DMS_HOLD_IE,			A_NIL)
	Ns_dms_tab_spdu_entry (HOLD_ACK,	DA_HOLD_ACK,	U_N_ALL,	N_U_ALL,	BRI,		(struct spdu_ie *)DMS_HOLD_ACK_IE,		A_NIL)
	Ns_dms_tab_spdu_entry (HOLD_REJ,	DA_HOLD_REJ,	U_N_ALL,	N_U_ALL,	BRI,		(struct spdu_ie *)DMS_HOLD_REJ_IE,		A_NIL)
	Ns_dms_tab_spdu_entry (RET,			DA_RET,			U_N_ALL,	OFF,		BRI,		(struct spdu_ie *)DMS_RET_IE,			A_NIL)
	Ns_dms_tab_spdu_entry (RET_ACK,		DA_RET_ACK,		OFF,		N_U_ALL,	BRI,		(struct spdu_ie *)DMS_RET_ACK_IE,		A_NIL)
	Ns_dms_tab_spdu_entry (RET_REJ,		DA_RET_REJ,		OFF,		N_U_ALL,	BRI,		(struct spdu_ie *)DMS_RET_REJ_IE,		A_NIL)

	Ns_dms_tab_spdu_entry (DISC,		DA_DISC,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_DISC_IE,			A_NIL)
	Ns_dms_tab_spdu_entry (RESTART,		DA_RESTART,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_RESTART_IE,		A_NIL)
	Ns_dms_tab_spdu_entry (REL,			DA_REL,			U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_REL_IE,			A_NIL)
	Ns_dms_tab_spdu_entry (RESTART_ACK,	DA_RESTART_ACK,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_RESTART_ACK_IE,	A_NIL)
	Ns_dms_tab_spdu_entry (REL_COMP,	DA_REL_COMP,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_REL_COM_IE,		A_NIL)

	Ns_dms_tab_spdu_entry (FAC,			DA_FAC,			U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_FAC_IE,			A_NIL)
	Ns_dms_tab_spdu_entry (NOTIFY,		DA_NOTIFY,		OFF,		N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_NOTIFY_IE,		A_NIL)
	Ns_dms_tab_spdu_entry (STATUS_ENQ,	DA_STATUS_ENQ,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_STATUS_ENQ_IE,	A_NIL)
	Ns_dms_tab_spdu_entry (INFO,		DA_INFO,		U_N_ALL,	N_U_ALL,	BRI,		(struct spdu_ie *)DMS_INFO_IE,			A_NIL)
	Ns_dms_tab_spdu_entry (STATUS,		DA_STATUS,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DMS_STATUS_IE,		A_NIL)

#	if NS_MAINTENANCE_CAPABILITY == ON
		Ns_dms_tab_spdu_maint_e (MAINT_SERVICE, 	DA_MAINT_SERVICE,		U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)MAINT_SERVICE_IE_DMS,		A_NIL,	PROTOCOL_DISCR_MAINTENANCE)
		Ns_dms_tab_spdu_maint_e (MAINT_SERVICE_ACK,	DA_MAINT_SERVICE_ACK,	U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)MAINT_SERVICE_ACK_IE_DMS,	A_NIL,	PROTOCOL_DISCR_MAINTENANCE)
#	endif

#	if DMS_SUPPLEMENTARY_SERVICES == ON

			/* Not implemented in this version */

		Ns_dms_tab_spdu_entry (K_HOLD,		DA_K_HOLD,		OFF,		N_U_ALL,	OFF,	(struct spdu_ie *)DMS_K_HOLD_IE,		A_NIL)
		Ns_dms_tab_spdu_entry (K_REL,		DA_K_REL,		OFF,		N_U_ALL,	OFF,	(struct spdu_ie *)DMS_K_REL_IE,			A_NIL)
		Ns_dms_tab_spdu_entry (K_SETUP,		DA_K_SETUP,		OFF,		N_U_ALL,	OFF,	(struct spdu_ie *)DMS_K_SETUP_IE,		A_NIL)
		Ns_dms_tab_spdu_entry (K_SETUP_ACK,	DA_K_SETUP_ACK,	U_N_ALL,	OFF,		OFF,	(struct spdu_ie *)DMS_K_SETUP_ACK_IE,	A_NIL)

#	endif

Ns_dms_end_table_or_function /* } */

/*EOF*/

