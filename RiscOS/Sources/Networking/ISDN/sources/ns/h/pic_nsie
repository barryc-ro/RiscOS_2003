
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename 	pic_nsie.h
 *
 * $Revision$
 *
 * $Date$
 *
 * redefinition of Macros used in meta-programs so that each Meta-program
 * generates a function that initializes IE meta-program address fields
 * for Position Independent Code Compilers
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1996 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

		/* Macros used for meta-language instruction generation */

#undef START
#undef TABL
#undef TABX
#undef VAL
#undef IF_VAL
#undef IF_TABL
#undef ELSE
#undef END_IF
#undef EXT_1
#undef EXT_0_1
#undef END_OCTET
#undef OPTIONAL_OCTET
#undef ANY_VAL
#undef PAD
#undef TEXT
#undef FUNCTION
#undef END

		/* Macros used for meta-language instruction addresses initialisation */

#define START(xx)				extern struct xx xx;	    	    	\
								Paste (void pic_init_,xx)   	    	\
								(void) { 	    	    	    		\
										uchar *p_pic;	    	    	\
										p_pic = (uchar *) &xx + START_LGTH;

#define END(fct)				}

#define TABL(	p, l, tab_id, pp_val) 	    	    ((struct spdu_tabl *)p_pic) -> p_val = pp_val; p_pic += TABL_LGTH;
#define TABX(	p, l, tab_id, ppx_val, pp_val)      ((struct spdu_tabx *)p_pic) -> px_val = ppx_val;	\
    	    	    	    	    	    	    ((struct spdu_tabx *)p_pic) -> p_val = pp_val; p_pic += TABX_LGTH;
#define VAL(	p, l, val, pp_val)   	 	    	((struct spdu_val *)p_pic) -> p_val = pp_val; p_pic += VAL_LGTH;
#define IF_VAL(	cond_type, ppx_val, cond, val) 	    ((struct spdu_if_val *)p_pic) -> px_val = ppx_val; p_pic += IF_VAL_LGTH;
#define IF_TABL(cond_type, ppx_val, cond,tab_id)    ((struct spdu_if_tabl *)p_pic) -> px_val = ppx_val; p_pic += IF_TABL_LGTH;
#define ELSE()	    	    	    	    	    p_pic += ELSE_LGTH;
#define END_IF()    	    	    	    	    p_pic += END_IF_LGTH;
#define EXT_1()	    	    	    	    	    p_pic += EXT_1_LGTH;
#define EXT_0_1()   	    	    	    	    p_pic += EXT_0_1_LGTH;
#define END_OCTET() 	    	    	    	    p_pic += END_OCTET_LGTH;
#define OPTIONAL_OCTET()    	    	    	    p_pic += OPTIONAL_OCTET_LGTH;
#define ANY_VAL(p, l, pp_val)			    		((struct spdu_any_val *)p_pic)->p_val = pp_val; p_pic += ANY_VAL_LGTH;
#define PAD(	p, l)	    	    	    	    p_pic += PAD_LGTH;
#define TEXT(	code, restric, val_lgth, pp_val)	((struct spdu_text *)p_pic)->p_lgth = val_lgth;	\
													((struct spdu_text *)p_pic)->p_val = pp_val;  p_pic += TEXT_LGTH;
#define FUNCTION(fct)			    	    		p_pic += FUNCT_LGTH;

#define CALL(xx)				Paste (pic_init_,xx)	();


/*EOF*/

