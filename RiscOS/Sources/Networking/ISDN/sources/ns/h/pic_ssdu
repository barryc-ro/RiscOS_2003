
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename 	pic_ssdu.h
 *
 * $Revision$
 *
 * $Date$
 *
 * redefinition of Macros used in SSDU meta-programs so that each Meta-program
 * generates a function that initializes IE meta-program address fields
 * for Position Independent Code Compilers
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1996 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

/*-------------------------------------------------------------------------*/

#undef START
#undef TABL
#undef TABX
#undef VAL
#undef IF_VAL
#undef IF_TABL
#undef ELSE
#undef END_IF
#undef ANY_VAL
#undef PAD
#undef TEXT
#undef FUNCTION
#undef END

		/* Macros used for meta-language instruction addresses initialisation */

#define START(xx)				extern struct xx xx;	    	    	\
								Paste (void pic_init_,xx)   	    	\
								(void) {    	    	    	    	\
										uchar *p_pic;	    	    	\
										p_pic = (uchar *) &xx + START_LGTH;

#define END(fct)				}

#define TABL(tab_id, pp_val)						((struct ssdu_tabl *)p_pic) -> p_val = pp_val; p_pic += TABL_LGTH;
#define TABX(tab_id, ppx_val, pp_val)				((struct ssdu_tabx *)p_pic) -> px_val = ppx_val;	\
													((struct ssdu_tabx *)p_pic) -> p_val = pp_val; p_pic += TABX_LGTH;
#define VAL(val, pp_val)			    			((struct ssdu_val *)p_pic) -> p_val = pp_val; p_pic += VAL_LGTH;
#define IF_VAL(ppx_val, cond, val)	    			((struct ssdu_if_val *)p_pic) -> px_val = ppx_val; p_pic += IF_VAL_LGTH;
#define ELSE()	    	    	    				p_pic += ELSE_LGTH;
#define END_IF()    	    	    				p_pic += END_IF_LGTH;
#define ANY_VAL(pp_val)				    			((struct ssdu_any_val *)p_pic) -> p_val = pp_val; p_pic += ANY_VAL_LGTH;
#define PAD(lgth)   	    	    	    	    p_pic += PAD_LGTH;
#define TEXT(mini, maxi, restr, val_lgth, pp_val)	((struct ssdu_text *)p_pic)->p_lgth = val_lgth;	\
						    						((struct ssdu_text *)p_pic)->p_val = pp_val;  p_pic += TEXT_LGTH;
#define FUNCTION(fct)			    	    		p_pic += FUNCT_LGTH;

#define CALL(xx)				Paste (pic_init_,xx)	();


/*EOF*/

