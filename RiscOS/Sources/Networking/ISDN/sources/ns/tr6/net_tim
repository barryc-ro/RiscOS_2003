
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_tim.tr6
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the Deutsche Telekom 1TR6 specific timer tables
 * 		  of the NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

			/* TIMERS IMPLICIT VALUES */

				/* Network timer implicit values */

#define NET_TR6_T300			 	 (1 * SECOND)	/* T300 */
#define NET_TR6_T302				(10 * SECOND)	/* T302 */ /* +/- 2 seconds */
#define NET_TR6_T303			     (4 * SECOND)	/* T303 */
#define NET_TR6_T305			   (120 * SECOND)	/* T305 */
#define NET_TR6_T307			   (120 * SECOND)	/* T307 */
#define NET_TR6_T308				 (4 * SECOND)	/* T308 */
#define NET_TR6_T3AA			   (120 * SECOND)	/* T3AA */
#define NET_TR6_T3AB				(15 * SECOND)	/* T3AB */
#define NET_TR6_T3AC				(20 * SECOND)	/* T3AC */
#define NET_TR6_T3AD				(30 * SECOND)	/* T3AD */
#define NET_TR6_T3AG				 (5 * SECOND)	/* T3AG */

#define NET_TR6_T314			  	 (4 * SECOND)	/* T314 */

				/* User timer values */

#define USER_TR6_T300			 	 (1 * SECOND)	/* T300 */
#define USER_TR6_T302				(10 * SECOND)	/* T302 */ 	/* point-to-point only */
#define USER_TR6_T303				 (4 * SECOND)	/* T303 */
#define USER_TR6_T308				 (4 * SECOND)	/* T308 */
#define USER_TR6_T310			   (120 * SECOND)	/* T310 */ 	/* >60 seconds in point-to-point configuration */
#define USER_TR6_T313				 (4 * SECOND)	/* T313 */
#define USER_TR6_T318				 (4 * SECOND)	/* T318 */ 	/* point-to-multi-point only */
#define USER_TR6_T319				 (4 * SECOND)	/* T319 */ 	/* point-to-multi-point only */
#define USER_TR6_T3D1				(10 * SECOND)	/* T3D1 */
#define USER_TR6_T3D2				 (4 * SECOND)	/* T3D2 */ 	/* see German spec. for special cases */
#define USER_TR6_T3AA			   (120 * SECOND)	/* T3AA */ 	/* point-to-point only */

#define USER_TR6_T314				(4 * SECOND)	/* T314 */

			/* NS timer implicit value table */

		/* Call associated timers */

CONST_ARRAY struct ns_timer TR6_TI_CALL[] = {

/*	NT value		User value		Event ID		Index (0 -> NB_CALL_TIMER-1) */

	{NET_TR6_T300,		USER_TR6_T300,		TI_300,			TR6_T300_IDX},		/* T300 */
	{NET_TR6_T302,		USER_TR6_T302,		TI_302,			TR6_T302_IDX},		/* T302 */
	{NET_TR6_T303,		USER_TR6_T303,		TI_303,			TR6_T303_IDX},		/* T303 */
	{0,					USER_T304MP,		TI_304,			TR6_T304_IDX},		/* T304MP */
	{NET_TR6_T305,		USER_T305MP,		TI_305,			TR6_T305_IDX},		/* T305MP */
	{NET_TR6_T307,		0,					TI_307,			TR6_T307_IDX},		/* T307 */
	{NET_TR6_T308,		USER_TR6_T308,		TI_308,			TR6_T308_IDX},		/* T308 */
	{0,					USER_TR6_T310,		TI_310,			TR6_T310_IDX},		/* T310 */
	{0,					USER_TR6_T313,		TI_313,			TR6_T313_IDX},		/* T313 */
	{0,					USER_TR6_T318,		TI_318,			TR6_T318_IDX},		/* T318 */
	{0,					USER_TR6_T319,		TI_319,			TR6_T319_IDX},		/* T319 */
	{0,					USER_TR6_T3D2,		TI_3D2,			TR6_T3D2_IDX},		/* T3D2 */
	{NET_TR6_T3AA,		USER_TR6_T3AA,		TI_3AA,			TR6_T3AA_IDX},		/* T3AA */
	{NET_TR6_T3AB,		0,					TI_3AB,			TR6_T3AB_IDX},		/* T3AB */
	{NET_TR6_T3AC,		0,					TI_3AC,			TR6_T3AC_IDX},		/* T3AC */
	{NET_TR6_T3AD,		0,					TI_3AD,			TR6_T3AD_IDX},		/* T3AD */
	{NET_TR6_T3AG,		0,					TI_3AG,			TR6_T3AG_IDX},		/* T3AG */
};

		/* DLCI associated timers */

CONST_ARRAY struct ns_timer TR6_TI_DLCI[] = {

/*	NT value		User value		Event ID		Index (0 -> MX_DLCI_TIMER-1) */

	{TI_DL_VAL,		TI_DL_VAL,		TI_DL	},		/* T3DL */
	{TI_DL_EST_VAL,	TI_DL_EST_VAL,	TI_DL_EST},		/* T3_DL_EST */
};



	/* Index table for timers used in the kernel */

CONST_ARRAY uchar TR6_TI_IDX[] = {

#	if NS_T309 == ON
		TR6_T309,
#	endif

#	if NS_SEGMENTATION == ON
		TR6_T314,
#	endif

#	if NS_RESTART_PROCEDURE == ON
		TR6_T316,
		TR6_T317,
#	endif

	TI_EOT,
};


#if EQUIPMENT == NT2

CONST_ARRAY struct ns_timer TR6_TI_INT[] = {

/*	NT value		User value		Event ID		Index (0 -> MX_INT_TIMER-1) */

	{NET_TR6_T308,		0,				TI_308I	},		/* T308I */
};

#endif

/*EOF*/
