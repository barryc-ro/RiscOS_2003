
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_par.bt2
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the British Telecom ISDN2 specific options and parameters 
 * 		  of the NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/


/*--------------------------------------------------------------------------*/

		/*
			NS interface sizing constants for IE variable length fields :
				maximum number of significant bytes only
				(i.e. as defined in the NS Standards).
		*/

#define BT2_MX_SZ_CALLING_NB		15				/* calling number */
#define BT2_MX_SZ_CALLED_NB			20				/* called number */
#define BT2_MX_SZ_CALLED_SUB_ADD    6				/* called sub-address */
#define BT2_MX_SZ_KEYPAD			32				/* keypad string */
#define BT2_MX_SZ_DISPLAY			32				/* display string */
#define BT2_MX_SZ_CALL_ID			8				/* called ID */
#define BT2_MX_SZ_CAUSE_DIAG		27				/* cause diagnostic string */

/*--------------------------------------------------------------------------*/

			/* NETWORK SIGNALLING SIZING CONSTANTS */

#define BT2_MX_ADDITIONAL_OCTET 	10				/* maximum number of additional octet (extra octet after an EXT 1 octet) */
#define	BT2_MX_DL_RETRY				 0				/* maximum number of restablish Data Link retry */

/*--------------------------------------------------------------------------*/

					/*
							Call timer index affectation

						If timers are not used simultaneously
						they can have the same index (overlaping).

					*/
						/* User and network side */

#define BT2_T300_IDX					0
#define BT2_T301_IDX					0
#define BT2_T302_IDX					0
#define BT2_T303_IDX					0
#define BT2_T304_IDX					0
#define BT2_T305_IDX					0
#define BT2_T306_IDX					0
#define BT2_T307_IDX					0
#define BT2_T308_IDX					0
#define BT2_T310_IDX					0
#define BT2_T312_IDX					0
#define BT2_T313_IDX					0
#define BT2_T318_IDX					0
#define BT2_T319_IDX					0
#define BT2_T320_IDX					0
#define BT2_T30Y_IDX					0

#if NS_T309 == ON
#	define BT2_T309_IDX					1
#	define BT2_MX_CALL_TIMER			17				/* maximum number of timer index */
#	define BT2_NB_CALL_TIMER			2				/* Nb of simultaneous NS call timers */

#else
#	define BT2_MX_CALL_TIMER			16				/* maximum number of timer index */
#	define BT2_NB_CALL_TIMER			1				/* Nb of simultaneous NS call timers */
#endif
					/*
							DL Connection timer index affectation

						If timers are not used simultaneously
						they can have the same index (overlaping).

					*/

#define	T3DL							0
#define	T3_DL_EST						1

#define	BT2_NB_DL_TIMER					2

#if NS_RESTART_PROCEDURE == ON
#	define BT2_T316						TI_NOT_IMPLEMENTED
#	define BT2_T317						TI_NOT_IMPLEMENTED

#	define BT2_NB_TIMER_RESTART			0
#	define BT2_MX_N316					TI_NOT_IMPLEMENTED
#else
#	define BT2_NB_TIMER_RESTART			0
#endif

#if NS_SEGMENTATION == ON
#	define BT2_T314						(BT2_NB_DL_TIMER + BT2_NB_TIMER_RESTART)	/* This index must follow the last defined index */
#	define BT2_NB_TIMER_SEGMENTATION	1
#else
#	define BT2_NB_TIMER_SEGMENTATION	0
#endif

#define BT2_MX_DLCI_TIMER				(BT2_NB_DL_TIMER + BT2_NB_TIMER_RESTART + BT2_NB_TIMER_SEGMENTATION)	/* maximum number of DLCI timer index */

	/*----------------------------------------------------------*/

		/* Maximum number of repeated IE in a SPDU message */

				/* single octet */

#define BT2_MX_SENDING_COMPLETE		1					/* sending complete */

				/* Codeset 0 */

#define BT2_MX_BC					1					/* bearer capability */
#define BT2_MX_CALLED_NB			1					/* called party number */
#define BT2_MX_CALLED_SUB_ADD		1					/* called party subaddress */
#define BT2_MX_CALLING_NB			2					/* calling party number */
#define BT2_MX_CALL_ID				1					/* call identity */
#define BT2_MX_CALL_STATE			1					/* call state */
#define BT2_MX_CAUSE				1					/* cause */
#define BT2_MX_CHAN_ID				1					/* channel identification */
#define BT2_MX_DISPLAY				1					/* display */
#define BT2_MX_HLC					1					/* high layer compatibility */
#define BT2_MX_KEYPAD				1					/* keypad facility */
#define BT2_MX_LLC					1					/* low layer compatibility */
#define BT2_MX_NOTIF_IND			1					/* notification indicator */
#define BT2_MX_PROGRESS_IND			1					/* progress indicator */

/*EOF*/
