
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - tab_ie.bt2
 *
 * $Revision$
 *
 * $Date$
 *
 * Implements the Tables (containing address) describing all the 
 * information elements and the integrity constraints associated to.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

		/*
			Table of table items - the items are ordered according to the
			table ID number : table ID = index of the table.
		*/

Ns_bt2_table_or_function (tabl, BT2_TAB_TABL)	/* { */
	Ns_bt2_tab_tabl_entry (T_NIL,						P_NIL)
	Ns_bt2_tab_tabl_entry (BT2_T_C_C,					BT2_C_C_S)
	Ns_bt2_tab_tabl_entry (BT2_T_CALLING_NB_PLAN,		BT2_CALLING_NB_PLAN_S)
	Ns_bt2_tab_tabl_entry (BT2_T_CALLING_NB_PRES,		BT2_CALLING_NB_PRES_S)
	Ns_bt2_tab_tabl_entry (BT2_T_CHAN_PREF_EXCL,		BT2_CHAN_PREF_EXCL_S)
	Ns_bt2_tab_tabl_entry (BT2_T_CHAN_NUMBER,			BT2_CHAN_NUMBER_S)
	Ns_bt2_tab_tabl_entry (BT2_T_CHAN_TYPE,				BT2_CHAN_TYPE_S)
	Ns_bt2_tab_tabl_entry (BT2_T_CODING_STD,			BT2_CODING_STD_S)
	Ns_bt2_tab_tabl_entry (BT2_T_DATA_BIT,				BT2_DATA_BIT_S)
	Ns_bt2_tab_tabl_entry (BT2_T_DUPLEX,				BT2_DUPLEX_S)
	Ns_bt2_tab_tabl_entry (BT2_T_INT_TYPE,				BT2_INT_TYPE_S)
	Ns_bt2_tab_tabl_entry (BT2_T_MODEM,					BT2_MODEM_S)
	Ns_bt2_tab_tabl_entry (BT2_T_NIC,					BT2_NIC_S)
	Ns_bt2_tab_tabl_entry (BT2_T_NOTIF_IND_DESCR,		BT2_NOTIF_IND_DESCR_S)
	Ns_bt2_tab_tabl_entry (BT2_T_PARITY,				BT2_PARITY_S)
	Ns_bt2_tab_tabl_entry (BT2_T_PROGRESS_DESCRIPTION,	BT2_PROGRESS_DESCRIPTION_S)
	Ns_bt2_tab_tabl_entry (BT2_T_PROGRESS_LOCATION,		BT2_PROGRESS_LOCATION_S)
	Ns_bt2_tab_tabl_entry (BT2_T_PROTOCOL_ID_1,			BT2_PROTOCOL_ID_1_S)
	Ns_bt2_tab_tabl_entry (BT2_T_PROTOCOL_ID_2,			BT2_PROTOCOL_ID_2_S)
	Ns_bt2_tab_tabl_entry (BT2_T_PROTOCOL_ID_3,			BT2_PROTOCOL_ID_3_S)
	Ns_bt2_tab_tabl_entry (BT2_T_SCREEN_IND,			BT2_SCREEN_IND_S)
	Ns_bt2_tab_tabl_entry (BT2_T_STOP_BIT,				BT2_STOP_BIT_S)
	Ns_bt2_tab_tabl_entry (BT2_T_SYN_ASYN,				BT2_SYN_ASYN_S)
	Ns_bt2_tab_tabl_entry (BT2_T_TELESERVICE_CCITT,		BT2_TELESERVICE_CCITT_S)
	Ns_bt2_tab_tabl_entry (BT2_T_TRF_CAP,				BT2_TRF_CAP_S)
	Ns_bt2_tab_tabl_entry (BT2_T_C_LOCATION,			BT2_C_LOCATION_S)
	Ns_bt2_tab_tabl_entry (BT2_T_TRF_MODE,				BT2_TRF_MODE_S)
	Ns_bt2_tab_tabl_entry (BT2_T_CALLED_NB_PLAN,		BT2_CALLED_NB_PLAN_S)
	Ns_bt2_tab_tabl_entry (BT2_T_CALLED_NB_TYPE,		BT2_CALLED_NB_TYPE_S)
	Ns_bt2_tab_tabl_entry (BT2_T_CALLING_NB_TYPE,		BT2_CALLING_NB_TYPE_S)
	Ns_bt2_tab_tabl_entry (BT2_T_SUB_ADD_IND,			BT2_SUB_ADD_IND_S)
	Ns_bt2_tab_tabl_entry (BT2_T_SUB_ADD_TYPE,			BT2_SUB_ADD_TYPE_S)

Ns_bt2_end_table_or_function /* } */

/*=========================================================================*/

		/* Table of list of tables */

Ns_bt2_table_or_function (tabx_list, BT2_TAB_C_V_S)	/* { */
	Ns_bt2_tabx_list_entry (BT2_C_V_NORMAL_EVENT_S)
	Ns_bt2_tabx_list_entry (BT2_C_V_RESOURCE_UNAVAILABLE_S)
	Ns_bt2_tabx_list_entry (BT2_C_V_SERVICE_NOT_AVAILABLE_S)
	Ns_bt2_tabx_list_entry (BT2_C_V_SERVICE_NOT_IMPLEMENTED_S)
	Ns_bt2_tabx_list_entry (BT2_C_V_INVALID_MESSAGE_S)
	Ns_bt2_tabx_list_entry (BT2_C_V_PROTOCOL_ERROR_S)
	Ns_bt2_tabx_list_entry (BT2_C_V_INTERWORKING_S)
	Ns_bt2_tabx_list_entry (BT2_C_V_NORMAL_EVENT_0_S)
Ns_bt2_end_table_or_function /* } */

			/* Channel selection according to interface type */

Ns_bt2_table_or_function (tabx_list, BT2_TAB_CHAN_SEL_S)	/* { */
	Ns_bt2_tabx_list_entry (BT2_CHAN_SEL_BRI_S)
	Ns_bt2_tabx_list_entry (BT2_CHAN_SEL_PRI_S)
Ns_bt2_end_table_or_function /* } */

					/* User rate (V110) according to the synchronous/asynchronous value */

Ns_bt2_table_or_function (tabx_list, BT2_TAB_USER_RATE_S)	/* { */
	Ns_bt2_tabx_list_entry (BT2_USER_RATE_SYN_S)
	Ns_bt2_tabx_list_entry (BT2_USER_RATE_ASYN_S)
Ns_bt2_end_table_or_function /* } */

					/* Automata call state values according to the coding standard */

Ns_bt2_table_or_function (tabx_list, BT2_TAB_CALL_STATE_S)	/* { */
	Ns_bt2_tabx_list_entry (BT2_CALL_STATE_CCITT_S)
Ns_bt2_end_table_or_function /* } */

					/* Circuit/Packet rate */

Ns_bt2_table_or_function (tabx_list, BT2_TAB_TRF_RATE_S)	/* { */
	Ns_bt2_tabx_list_entry (BT2_TRF_RATE_CIRCUIT_S)
	Ns_bt2_tabx_list_entry (BT2_TRF_RATE_PACKET_S)
Ns_bt2_end_table_or_function /* } */

/*-------------------------------------------------------------------------*/

		/* Table of table items (indexed tables )*/

Ns_bt2_table_or_function (tabx, BT2_TAB_TABX)	/* { */
	Ns_bt2_tab_tabx_entry (T_NIL,					P_NIL)
	Ns_bt2_tab_tabx_entry (BT2_TX_C_V,				BT2_TAB_C_V_S)
	Ns_bt2_tab_tabx_entry (BT2_TX_CHAN_SEL,			BT2_TAB_CHAN_SEL_S)
	Ns_bt2_tab_tabx_entry (BT2_TX_USER_RATE,		BT2_TAB_USER_RATE_S)
	Ns_bt2_tab_tabx_entry (BT2_TX_CALL_STATE,		BT2_TAB_CALL_STATE_S)
	Ns_bt2_tab_tabx_entry (BT2_TX_TRF_RATE,			BT2_TAB_TRF_RATE_S)
Ns_bt2_end_table_or_function /* } */

/*

IE description structures :
-------------------------

					ie			tab_ie
	===============================================================
	| codeset | id | p_prog | size | p_struc | p_init| repetition |
	|---------|----|--------|------|---------|-------|------------|  meta-prog
	|         |    |  X----------------------------------------------> START
	|---------|----|--------|------|---------|-------|------------|       XXXXX
	|         |    |        |      |         |       |            |       YYYYY
	|---------|----|--------|------|---------|-------|------------|    END
	|         |    |        |      |         |       |            |
	|---------|----|--------|------|---------|-------|------------|
	|         |    |        |  X   |   X------------------------------> i_xxxx
	|---------|----|--------|--|---|---------|-------|------------|         Œ internal
	|         |    |        |  ---------------------------------------------| data
	|---------|----|--------|------|---------|-------|------------|         v structure
	|         |    |        |      |         |       |            |
	|---------|----|--------|------|---------|-------|------------|
	|         |    |        |      |         |   X--------------------> df_spdu_bt2_i_xxxx
	|---------|----|--------|------|---------|-------|------------|       Œ implicit   and df_ssdu_bt2_i_xxx
	|         |    |        |      |         |       |            |       | value or
	|---------|----|--------|------|---------|-------|------------|       v  P_NIL


		 Information Element (IE) table of item :
					- codeset,
					- ie identifier;
					- program sequence address,
					- internal structure size,
					- internal structure address,
					- initialization structure address,
					- maximum number of repeated IE.

*/

Ns_bt2_table_or_function (ie, BT2_TAB_IE)	/* { */

Ns_bt2_tab_ie_entry (CODESET_0,	BC,					&BT2_BC_SPDU,				i_bc,				&df_spdu_bt2_i_bc,				&df_ssdu_bt2_i_bc,				BT2_MX_BC)
Ns_bt2_tab_ie_entry (CODESET_0,	CAUSE,				&BT2_CAUSE_SPDU,			i_cause,			&df_spdu_bt2_i_cause,			&df_ssdu_bt2_i_cause,			BT2_MX_CAUSE)
Ns_bt2_tab_ie_entry (CODESET_0,	CALL_ID,			&BT2_CALL_ID_SPDU,			i_call_id,			&df_spdu_bt2_i_call_id,			&df_ssdu_bt2_i_call_id,			BT2_MX_CALL_ID)
Ns_bt2_tab_ie_entry (CODESET_0,	CALL_STATE,			&BT2_CALL_STATE_SPDU,		i_call_state,		&df_spdu_bt2_i_call_state,		&df_ssdu_bt2_i_call_state,		BT2_MX_CALL_STATE)
Ns_bt2_tab_ie_entry (CODESET_0,	CHAN_ID,			&BT2_CHAN_ID_SPDU_P,		i_chan_id,			&df_spdu_bt2_i_chan_id,			&df_ssdu_bt2_i_chan_id,			BT2_MX_CHAN_ID)
Ns_bt2_tab_ie_entry (CODESET_0,	PROGRESS_IND,		&BT2_PROGRESS_IND_SPDU,		i_progress_ind,		&df_spdu_bt2_i_progress_ind,	&df_ssdu_bt2_i_progress_ind,	BT2_MX_PROGRESS_IND)

Ns_bt2_tab_ie_entry (CODESET_0,	NOTIF_IND,			&BT2_NOTIF_IND_SPDU,		i_notif_ind,		&df_spdu_bt2_i_notif_ind,		&df_ssdu_bt2_i_notif_ind,		BT2_MX_NOTIF_IND)
Ns_bt2_tab_ie_entry (CODESET_0,	DISPLAY,			&BT2_DISPLAY_SPDU,			i_display,			&df_spdu_bt2_i_display,			&df_ssdu_bt2_i_display,			BT2_MX_DISPLAY)
Ns_bt2_tab_ie_entry (CODESET_0,	KEYPAD,				&BT2_KEYPAD_SPDU,			i_keypad,			&df_spdu_bt2_i_keypad,			&df_ssdu_bt2_i_keypad,			BT2_MX_KEYPAD)

Ns_bt2_tab_ie_entry (CODESET_0,	CALLING_NB,			&BT2_CALLING_NB_SPDU_P,		i_calling_nb,		&df_spdu_bt2_i_calling_nb,		&df_ssdu_bt2_i_calling_nb,		BT2_MX_CALLING_NB)
Ns_bt2_tab_ie_entry (CODESET_0,	CALLED_NB,			&BT2_CALLED_NB_SPDU,		i_called_nb,		&df_spdu_bt2_i_called_nb,		&df_ssdu_bt2_i_called_nb,		BT2_MX_CALLED_NB)
Ns_bt2_tab_ie_entry (CODESET_0,	CALLED_SUB_ADD,		&BT2_CALLED_SUB_ADD_SPDU,	i_called_sub_add,	&df_spdu_bt2_i_called_sub_add,	&df_ssdu_bt2_i_called_sub_add,	BT2_MX_CALLED_SUB_ADD)

Ns_bt2_tab_ie_entry (CODESET_0,	LLC,				&BT2_LLC_SPDU,				i_llc,				&df_spdu_bt2_i_llc,				&df_ssdu_bt2_i_llc,				BT2_MX_LLC)
Ns_bt2_tab_ie_entry (CODESET_0,	HLC,				&BT2_HLC_SPDU,				i_hlc,				&df_spdu_bt2_i_hlc,				&df_ssdu_bt2_i_hlc,				BT2_MX_HLC)

Ns_bt2_tab_ie_no_i_str (CODESET_SO, SENDING_COMPLETE, BT2_MX_SENDING_COMPLETE)	/* IE with no internal data */

#if MESSAGE_HEADER_IE == ON
		Ns_bt2_tab_ie_msg_header
#endif

Ns_bt2_end_table_or_function /* } */

/*EOF*/

