
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_tim.au1
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the AUSTEL_1 specific timer tables of the NETWORK SIGNALLING
 *			layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

			/* TIMERS IMPLICIT VALUES */

				/* Network timer implicit values */

#define AU1_NET_T300			 	(1		* SECOND)	/* T300 */
#define AU1_NET_T302				(15		* SECOND)	/* T302 */
#define AU1_NET_T303				(4		* SECOND)	/* T303 */
#define AU1_NET_T305				(30		* SECOND)	/* T305 */
#define AU1_NET_T306				(60		* SECOND)	/* T306 */
#define AU1_NET_T308				(4		* SECOND)	/* T308 */
#define AU1_NET_T309				(2		* SECOND)	/* T309 */
#define AU1_NET_T310				(10		* SECOND)	/* T310 */
#define AU1_NET_T312				((AU1_NET_T303) + (2 * SECOND))	/* T312 */
#define AU1_NET_T316				(30		* SECOND)	/* T316 */
#define AU1_NET_T317				(25		* SECOND)	/* T317 */
#define AU1_NET_T322				(4		* SECOND)	/* T322 */


				/* User timer values */

#define AU1_USER_T300				(1		* SECOND)	/* T300 */
#define AU1_USER_T304				(15		* SECOND)	/* T304 */
#define AU1_USER_T305				(30		* SECOND)	/* T305 */
#define AU1_USER_T308				(4		* SECOND)	/* T308 */
#define AU1_USER_T309				(90		* SECOND)	/* T309 */
#define AU1_USER_T313				(4		* SECOND)	/* T313 */
#define AU1_USER_T316				(30		* SECOND)	/* T316 */
#define AU1_USER_T317				(25		* SECOND)	/* T317 */
#define AU1_USER_T322				(4		* SECOND)	/* T322 */


			/* NS timer implicit value table */

		/* Call associated timers */

CONST_ARRAY struct ns_timer AU1_TI_CALL[] = {

/*	NT value			User value		Event ID		Index (0 -> NB_CALL_TIMER-1) */

	{AU1_NET_T300,		AU1_USER_T300,		TI_300,			AU1_T300_IDX},		/* T300 */
	{AU1_NET_T302,		0,					TI_302,			AU1_T302_IDX},		/* T302 */
	{AU1_NET_T303,		0,					TI_303,			AU1_T303_IDX},		/* T303 */
	{0,					AU1_USER_T304,		TI_304,			AU1_T304_IDX},		/* T304 */
	{AU1_NET_T305,		AU1_USER_T305,		TI_305,			AU1_T305_IDX},		/* T305 */
	{AU1_NET_T306,		0,					TI_306,			AU1_T306_IDX},		/* T306 */
	{AU1_NET_T308,		AU1_USER_T308,		TI_308,			AU1_T308_IDX},		/* T308 */
	{AU1_NET_T310,		0,					TI_310,			AU1_T310_IDX},		/* T310 */
	{AU1_NET_T312,		0,					TI_312,			AU1_T312_IDX},		/* T312 */
	{0,					AU1_USER_T313,		TI_313,			AU1_T313_IDX},		/* T313 */
	{AU1_NET_T322,		AU1_USER_T322,		TI_322,			AU1_T322_IDX},		/* T322 */

#if NS_T309 == ON
	{AU1_NET_T309,		AU1_USER_T309,		TI_309,			AU1_T309_IDX},		/* T309 */
#endif

};

		/* DLCI associated timers */

CONST_ARRAY struct ns_timer AU1_TI_DLCI[] = {

/*	NT value		User value		Event ID		Index (0 -> MX_DLCI_TIMER-1) */

	{TI_DL_VAL,			TI_DL_VAL,		TI_DL	},		/* T3DL */
	{TI_DL_EST_VAL,		TI_DL_EST_VAL,	TI_DL_EST},		/* T3_DL_EST */

#	if NS_RESTART_PROCEDURE == ON
		{AU1_NET_T316,	AU1_USER_T316,	TI_316	},		/* T316 */
		{AU1_NET_T317,	AU1_USER_T317,	TI_317	},		/* T317 */
#	endif

};

	/* Index table for timers used in the kernel */

CONST_ARRAY uchar AU1_TI_IDX[] = {

#	if NS_T309 == ON
		AU1_T309,
#	endif

#	if NS_SEGMENTATION == ON
		AU1_T314,
#	endif

#	if NS_RESTART_PROCEDURE == ON
		AU1_T316,
		AU1_T317,
#	endif

	TI_EOT,
};


/*EOF*/




