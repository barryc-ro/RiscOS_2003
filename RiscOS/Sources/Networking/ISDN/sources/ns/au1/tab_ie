

/*--------------------------------------------------------------------------*
 *					   M O D U L E   H E A D E R
 *
 * filename - tab_ie.au1
 *
 * $Revision$
 *
 * $Date$
 *
 * Implements the Tables (containing address) describing all the 
 * information elements and the integrity constraints associated to.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/
		/*
			Table of table items - the items are ordered according to the
			table ID number : table ID = index of the table.
		*/

Ns_au1_table_or_function (tabl, AU1_TAB_TABL)	/* { */
	Ns_au1_tab_tabl_entry (T_NIL,						P_NIL)
	Ns_au1_tab_tabl_entry (AU1_T_ASSIGN,				AU1_ASSIGN_S)
	Ns_au1_tab_tabl_entry (AU1_T_C_C,					AU1_C_C_S)
	Ns_au1_tab_tabl_entry (AU1_T_CALL_STATE,			AU1_CALL_STATE_VAL_S)
	Ns_au1_tab_tabl_entry (AU1_T_CALLED_NB_TYPE,		AU1_CALLED_NB_TYPE_S)
	Ns_au1_tab_tabl_entry (AU1_T_CALLING_NB_PRES,		AU1_CALLING_NB_PRES_S)
	Ns_au1_tab_tabl_entry (AU1_T_CALLING_NB_TYPE,		AU1_CALLING_NB_TYPE_S)
	Ns_au1_tab_tabl_entry (AU1_T_CHAN_NUMBER,			AU1_CHAN_NUMBER_S)
	Ns_au1_tab_tabl_entry (AU1_T_CHAN_PREF_EXCL,		AU1_CHAN_PREF_EXCL_S)
	Ns_au1_tab_tabl_entry (AU1_T_CHAN_TYPE,				AU1_CHAN_TYPE_S)
	Ns_au1_tab_tabl_entry (AU1_T_CODING_STD,			AU1_CODING_STD_S)
	Ns_au1_tab_tabl_entry (AU1_T_D_CHAN,				AU1_D_CHAN_S)
	Ns_au1_tab_tabl_entry (AU1_T_DATA_BIT,				AU1_DATA_BIT_S)
	Ns_au1_tab_tabl_entry (AU1_T_DUPLEX,				AU1_DUPLEX_S)
	Ns_au1_tab_tabl_entry (AU1_T_FLOW_CONTROL_RX,		AU1_FLOW_CONTROL_RX_S)
	Ns_au1_tab_tabl_entry (AU1_T_FLOW_CONTROL_TX,		AU1_FLOW_CONTROL_TX_S)
	Ns_au1_tab_tabl_entry (AU1_T_HEADER,				AU1_HEADER_S)
	Ns_au1_tab_tabl_entry (AU1_T_INT_TYPE,				AU1_INT_TYPE_S)
	Ns_au1_tab_tabl_entry (AU1_T_INTER_RATE,			AU1_INTER_RATE_S)
	Ns_au1_tab_tabl_entry (AU1_T_LLI,					AU1_LLI_S)
	Ns_au1_tab_tabl_entry (AU1_T_LOCATION,				AU1_LOCATION_S)
	Ns_au1_tab_tabl_entry (AU1_T_MODEM,					AU1_MODEM_S)
	Ns_au1_tab_tabl_entry (AU1_T_MULTI_FRAME,			AU1_MULTI_FRAME_S)
	Ns_au1_tab_tabl_entry (AU1_T_NEGOTIATION,			AU1_NEGOTIATION_S)
	Ns_au1_tab_tabl_entry (AU1_T_NIC_RX,				AU1_NIC_RX_S)
	Ns_au1_tab_tabl_entry (AU1_T_NIC_TX,				AU1_NIC_TX_S)
	Ns_au1_tab_tabl_entry (AU1_T_OP_MODE,				AU1_OP_MODE_S)
	Ns_au1_tab_tabl_entry (AU1_T_PARITY,				AU1_PARITY_S)
	Ns_au1_tab_tabl_entry (AU1_T_PROGRESS_DESCRIPTION,	AU1_PROGRESS_DESCRIPTION_S)
	Ns_au1_tab_tabl_entry (AU1_T_PROGRESS_LOCATION,		AU1_PROGRESS_LOCATION_S)
	Ns_au1_tab_tabl_entry (AU1_T_PROTOCOL_ID_LLC_1,		AU1_PROTOCOL_ID_LLC_1_S)
	Ns_au1_tab_tabl_entry (AU1_T_PROTOCOL_ID_LLC_2,		AU1_PROTOCOL_ID_LLC_2_S)
	Ns_au1_tab_tabl_entry (AU1_T_PROTOCOL_ID_LLC_3,		AU1_PROTOCOL_ID_LLC_3_S)
	Ns_au1_tab_tabl_entry (AU1_T_SCREEN_IND,			AU1_SCREEN_IND_S)
	Ns_au1_tab_tabl_entry (AU1_T_STOP_BIT,				AU1_STOP_BIT_S)
	Ns_au1_tab_tabl_entry (AU1_T_STRUCTURE,				AU1_STRUCTURE_S)
	Ns_au1_tab_tabl_entry (AU1_T_SUB_ADD_IND,			AU1_SUB_ADD_IND_S)
	Ns_au1_tab_tabl_entry (AU1_T_SUB_ADD_TYPE,			AU1_SUB_ADD_TYPE_S)
	Ns_au1_tab_tabl_entry (AU1_T_SYN_ASYN,				AU1_SYN_ASYN_S)
	Ns_au1_tab_tabl_entry (AU1_T_TELESERVICE_CCITT,		AU1_TELESERVICE_CCITT_S)
	Ns_au1_tab_tabl_entry (AU1_T_TRF_CAP_BC,			AU1_TRF_CAP_BC_S)
	Ns_au1_tab_tabl_entry (AU1_T_TRF_CAP_LLC,			AU1_TRF_CAP_LLC_S)
	Ns_au1_tab_tabl_entry (AU1_T_TRF_MODE,				AU1_TRF_MODE_S)
	Ns_au1_tab_tabl_entry (AU1_T_USER_RATE,				AU1_USER_RATE_S)
	Ns_au1_tab_tabl_entry (AU1_T_PROTOCOL_ID_BC_1,		AU1_PROTOCOL_ID_BC_1_S)
	Ns_au1_tab_tabl_entry (AU1_T_RESTART_IND_CLASS,		AU1_RESTART_IND_CLASS_S)
	Ns_au1_tab_tabl_entry (AU1_T_BC_ESTABLISH,		    AU1_BC_ESTABLISH_S)

Ns_au1_end_table_or_function /* } */

/*=========================================================================*/

		/* Table of list of tables */

Ns_au1_table_or_function (tabx_list, AU1_TAB_C_V_S)	/* { */
	Ns_au1_tabx_list_entry (AU1_C_V_NORMAL_EVENT_0_S)
	Ns_au1_tabx_list_entry (AU1_C_V_NORMAL_EVENT_S)
	Ns_au1_tabx_list_entry (AU1_C_V_RESOURCE_UNAVAILABLE_S)
	Ns_au1_tabx_list_entry (AU1_C_V_SERVICE_NOT_AVAILABLE_S)
	Ns_au1_tabx_list_entry (AU1_C_V_SERVICE_NOT_IMPLEMENTED_S)
	Ns_au1_tabx_list_entry (AU1_C_V_INVALID_MESSAGE_S)
	Ns_au1_tabx_list_entry (AU1_C_V_PROTOCOL_ERROR_S)
	Ns_au1_tabx_list_entry (AU1_C_V_INTERWORKING_S)
Ns_au1_end_table_or_function /* } */

Ns_au1_table_or_function (tabx_list, AU1_TAB_CHAN_SEL_S)	/* { */
	Ns_au1_tabx_list_entry (AU1_CHAN_SEL_BRI_S)
	Ns_au1_tabx_list_entry (AU1_CHAN_SEL_PRI_S)
Ns_au1_end_table_or_function /* } */

Ns_au1_table_or_function (tabx_list, AU1_TAB_TRF_RATE_S)	/* { */
	Ns_au1_tabx_list_entry (AU1_TRF_RATE_CIRCUIT_S)
	Ns_au1_tabx_list_entry (AU1_TRF_RATE_PACKET_S)
Ns_au1_end_table_or_function /* } */

/*-------------------------------------------------------------------------*/

		/* Table of table items (indexed tables )*/

Ns_au1_table_or_function (tabx, AU1_TAB_TABX)	/* { */
	Ns_au1_tab_tabx_entry (T_NIL,				P_NIL)
	Ns_au1_tab_tabx_entry (AU1_TX_C_V,			AU1_TAB_C_V_S)
	Ns_au1_tab_tabx_entry (AU1_TX_CHAN_SEL,		AU1_TAB_CHAN_SEL_S)
	Ns_au1_tab_tabx_entry (AU1_TX_TRF_RATE,		AU1_TAB_TRF_RATE_S)
Ns_au1_end_table_or_function /* } */

/*-------------------------------------------------------------------------*

IE description structures :
-------------------------

					ie		  tab_ie
	===============================================================
	| codeset | id | p_prog | size | p_struc | p_init| repetition |
	|---------|----|--------|------|---------|-------|------------|  meta-prog
	|		  |	   |  X----------------------------------------------> START
	|---------|----|--------|------|---------|-------|------------|	   XXXXX
	|		  |	   |		|	   |		 |	     |			  |	   YYYYY
	|---------|----|--------|------|---------|-------|------------|	END
	|		  |	   |		|	   |		 |	     |			  |
	|---------|----|--------|------|---------|-------|------------|
	|		  |	   |		|  X   |   X------------------------------> i_xxxx
	|---------|----|--------|--|---|---------|-------|------------|		 Œ internal
	|		  |	   |		|  ---------------------------------------------| data
	|---------|----|--------|------|---------|-------|------------|		 v structure
	|		  |	   |		|	   |		 |	     |			  |
	|---------|----|--------|------|---------|-------|------------|
	|		  |	   |		|	   |		 |   X--------------------> df_spdu_au1_i_xxxx
	|---------|----|--------|------|---------|-------|------------|	   Œ implicit   and df_ssdu_au1_i_xxx
	|		  |	   |		|	   |		 |	     |			  |	   | value or
	|---------|----|--------|------|---------|-------|------------|	   v  P_NIL


		 Information Element (IE) table of item :
					- codeset,
					- ie identifier;
					- program sequence address,
					- internal structure size,
					- internal structure address,
					- initialization structure address,
					- maximum number of repeated IE.

*/

Ns_au1_table_or_function (ie, AU1_TAB_IE)	/* { */


Ns_au1_tab_ie_entry (CODESET_0,BC,					&AU1_BC_P,				i_bc,				&df_spdu_au1_i_bc,				&df_ssdu_au1_i_bc,				AU1_MX_BC,				Offsetof (i_bc, p_tsp_add))
Ns_au1_tab_ie_entry (CODESET_0,CAUSE,				&AU1_CAUSE_P,			i_cause,			&df_spdu_au1_i_cause,			&df_ssdu_au1_i_cause,			AU1_MX_CAUSE,			Offsetof (i_cause, p_tsp_add))
Ns_au1_tab_ie_entry (CODESET_0,CALL_STATE,			&AU1_CALL_STATE_P,		i_call_state,		&df_spdu_au1_i_call_state,		&df_ssdu_au1_i_call_state,		AU1_MX_CALL_STATE,		Offsetof (i_call_state, p_tsp_add))
Ns_au1_tab_ie_entry (CODESET_0,CHAN_ID,				&AU1_CHAN_ID_P,			i_chan_id,			&df_spdu_au1_i_chan_id,			&df_ssdu_au1_i_chan_id,			AU1_MX_CHAN_ID,			Offsetof (i_chan_id, p_tsp_add))
Ns_au1_tab_ie_entry (CODESET_0,PROGRESS_IND,		&AU1_PROGRESS_IND_P,	i_progress_ind,		&df_spdu_au1_i_progress_ind,	&df_ssdu_au1_i_progress_ind,	AU1_MX_PROGRESS_IND,	Offsetof (i_progress_ind, p_tsp_add))

Ns_au1_tab_ie_entry (CODESET_0,DISPLAY,				&AU1_DISPLAY_P,			i_display,			&df_spdu_au1_i_display,			&df_ssdu_au1_i_display,			AU1_MX_DISPLAY,			Offsetof (i_display, p_tsp_add))
Ns_au1_tab_ie_entry (CODESET_0,KEYPAD,				&AU1_KEYPAD_P,			i_keypad,			&df_spdu_au1_i_keypad,			&df_ssdu_au1_i_keypad,			AU1_MX_KEYPAD,			Offsetof (i_keypad, p_tsp_add))

Ns_au1_tab_ie_entry (CODESET_0,CALLING_NB,			&AU1_CALLING_NB_P,		i_calling_nb,		&df_spdu_au1_i_calling_nb,		&df_ssdu_au1_i_calling_nb,		AU1_MX_CALLING_NB,		Offsetof (i_calling_nb, p_tsp_add))
Ns_au1_tab_ie_entry (CODESET_0,CALLING_SUB_ADD,		&AU1_CALLING_SUB_ADD_P,	i_calling_sub_add,	&df_spdu_au1_i_calling_sub_add,	&df_ssdu_au1_i_calling_sub_add,	AU1_MX_CALLING_SUB_ADD,	Offsetof (i_calling_sub_add, p_tsp_add))
Ns_au1_tab_ie_entry (CODESET_0,CALLED_NB,			&AU1_CALLED_NB_P,		i_called_nb,		&df_spdu_au1_i_called_nb,		&df_ssdu_au1_i_called_nb,		AU1_MX_CALLED_NB,		Offsetof (i_called_nb, p_tsp_add))
Ns_au1_tab_ie_entry (CODESET_0,CALLED_SUB_ADD,		&AU1_CALLED_SUB_ADD_P,	i_called_sub_add,	&df_spdu_au1_i_called_sub_add,	&df_ssdu_au1_i_called_sub_add,	AU1_MX_CALLED_SUB_ADD,	Offsetof (i_called_sub_add, p_tsp_add))

Ns_au1_tab_ie_entry (CODESET_0,LLC,					&AU1_LLC_P,				i_llc,				&df_spdu_au1_i_llc,				&df_ssdu_au1_i_llc,				AU1_MX_LLC,				Offsetof (i_llc, p_tsp_add))
Ns_au1_tab_ie_entry (CODESET_0,HLC,					&AU1_HLC_P,				i_hlc,				&df_spdu_au1_i_hlc,				&df_ssdu_au1_i_hlc,				AU1_MX_HLC,				Offsetof (i_hlc, p_tsp_add))

Ns_au1_tab_ie_entry (CODESET_0,RESTART_IND,			&AU1_RESTART_IND_P,		i_restart_ind,		&df_spdu_au1_i_restart_ind,		&df_ssdu_au1_i_restart_ind,		AU1_MX_RESTART_IND,		Offsetof (i_restart_ind, p_tsp_add))

#if MESSAGE_HEADER_IE == ON
		Ns_au1_tab_ie_msg_header			
#endif

Ns_au1_end_table_or_function /* } */

/*EOF*/

