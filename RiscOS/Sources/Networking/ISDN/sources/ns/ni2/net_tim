
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_tim.ni2
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the N_ISDN2 specific timer tables of the NETWORK SIGNALLING
 *			layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

			/* TIMERS IMPLICIT VALUES */

				/* Network timer implicit values */

#define NI2_NET_T300				(1		* SECOND)	/* T300 */
#define NI2_NET_T301				(180	* SECOND)	/* T301 */
#define NI2_NET_T302				(15		* SECOND)	/* T302 */
#define NI2_NET_T303				(5		* SECOND)	/* T303 */
#define NI2_NET_T305				(30		* SECOND)	/* T305 */
#define NI2_NET_T306				(60		* SECOND)	/* T306 */
#define NI2_NET_T308				(4		* SECOND)	/* T308 */
#define NI2_NET_T309				(30		* SECOND)	/* T309 */
#define NI2_NET_T310				(40		* SECOND)	/* T310 */
#define NI2_NET_T313				(4		* SECOND)	/* T313 */
#define NI2_NET_T316				(30		* SECOND)	/* T316 */
#define NI2_NET_T317				(20		* SECOND)	/* T317 */
#define NI2_NET_T321				(5		* SECOND)	/* T321 */

				/* User timer values */

#define NI2_USER_T300				(1		* SECOND)	/* T300 */
#define NI2_USER_T303				(4		* SECOND)	/* T303 */
#define NI2_USER_T305				(30		* SECOND)	/* T305 */
#define NI2_USER_T308				(4		* SECOND)	/* T308 */
#define NI2_USER_T309				(30		* SECOND)	/* T309 */
#define NI2_USER_T313				(4		* SECOND)	/* T313 */
#define NI2_USER_T316				(30		* SECOND)	/* T316 */
#define NI2_USER_T317				(20		* SECOND)	/* T317 */
#define NI2_USER_TSPID				(20		* SECOND)	/* TSPID */
#define NI2_USER_T321				(40		* SECOND)	/* T321 */

			/* NS timer implicit value table */

		/* Call associated timers */

CONST_ARRAY struct ns_timer NI2_TI_CALL[] = {

/*	NT value				User value		Event ID		Index (0 -> NB_CALL_TIMER-1) */

	{NI2_NET_T300,			NI2_USER_T300,		TI_300,			NI2_T300_IDX},		/* T300 */
	{NI2_NET_T301,			0,					TI_301,			NI2_T301_IDX},		/* T301 */
	{NI2_NET_T302,			0,					TI_302,			NI2_T302_IDX},		/* T302 */
	{NI2_NET_T303,			NI2_USER_T303,		TI_303,			NI2_T303_IDX},		/* T303 */
	{NI2_NET_T305,			NI2_USER_T305,		TI_305,			NI2_T305_IDX},		/* T305 */
	{NI2_NET_T306,			0,					TI_306,			NI2_T306_IDX},		/* T306 */
	{NI2_NET_T308,			NI2_USER_T308,		TI_308,			NI2_T308_IDX},		/* T308 */
	{NI2_NET_T310,			0,					TI_310,			NI2_T310_IDX},		/* T310 */
	{NI2_NET_T313,			NI2_USER_T313,		TI_313,			NI2_T313_IDX},		/* T313 */

#	if NS_T309 == ON
		{NI2_USER_T309,		NI2_USER_T309,		TI_309,			NI2_T309_IDX},		/* T309 */
#	endif

};

		/* DLCI associated timers */

CONST_ARRAY struct ns_timer NI2_TI_DLCI[] = {

/*	NT value			User value		Event ID		Index (0 -> MX_DLCI_TIMER-1) */

	{TI_DL_VAL,			TI_DL_VAL,			TI_DL	},		/* T3DL */
	{TI_DL_EST_VAL,		TI_DL_EST_VAL,		TI_DL_EST},		/* T3_DL_EST */

#	if NS_RESTART_PROCEDURE == ON
		{NI2_NET_T316,	NI2_USER_T316,		TI_316	},		/* T316 */
		{NI2_NET_T317,	NI2_USER_T317,		TI_317	},		/* T317 */
#	endif

	{0,					NI2_USER_TSPID,		TI_SPID	},		/* TSPID */

#	if NS_MAINTENANCE_CAPABILITY == ON
		{NI2_NET_T321,	NI2_USER_T321,		TI_321},		/* T321 */
#	endif
};


	/* Index table for timers used in the kernel */

CONST_ARRAY uchar NI2_TI_IDX[] = {

#	if NS_T309 == ON
		NI2_T309,
#	endif

#	if NS_SEGMENTATION == ON
		NI2_T314,
#	endif

#	if NS_RESTART_PROCEDURE == ON
		NI2_T316,
		NI2_T317,
#	endif

	NI2_TSPID,

#	if NS_MAINTENANCE_CAPABILITY == ON
		NI2_T321,
#	endif

	0,

	TI_EOT,
};


/*EOF*/
