
/*--------------------------------------------------------------------------*
 *						M O D U L E		H E A D E R
 *
 * filename - tab_spdu.at4
 *
 * $Revision$
 *
 * $Date$
 *
 * Implements the Tables (containing address) describing the
 * signalling protocol data units (SPDU).
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

		/*
			Messages SPDU table ordered in increasing spdu_id :
					- message identifier (spdu ID)
					- event identifier of the event generates
					  by the message
					- message transfered from user to network (function group transmitting the message)
					- message transfered from network to user (functional group receiving the message)
					- type of access  (BRI or/and PRI)
					- information element table address.
		*/

Ns_at4_table_or_function (spdu, AT4_TAB_SPDU)	/* { */

/*	  spdu			event_id		u--->n  	n--->u	  access type			& ie tab				& so ie tab */

	Ns_at4_tab_spdu_entry (ALERT,		DA_ALERT,		U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)ALERT_IE_AT4,			A_NIL)
	Ns_at4_tab_spdu_entry (CALL_PROC,	DA_CALL_PROC,	U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)CALL_PROC_IE_AT4,		A_NIL)
	Ns_at4_tab_spdu_entry (PROGRESS,	DA_PROGRESS,	OFF,		N_U_ALL,	PRI,	(struct spdu_ie *)PROGRESS_IE_AT4,		A_NIL)
	Ns_at4_tab_spdu_entry (SETUP,		DA_SETUP,		U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)SETUP_IE_AT4,			A_NIL)
	Ns_at4_tab_spdu_entry (CONN,		DA_CONN,		U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)CONN_IE_AT4,			A_NIL)
	Ns_at4_tab_spdu_entry (CONN_ACK,	DA_CONN_ACK,	U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)CONN_ACK_IE_AT4,		A_NIL)

	Ns_at4_tab_spdu_entry (DISC,		DA_DISC,		U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)DISC_IE_AT4,			A_NIL)
	Ns_at4_tab_spdu_entry (REL,			DA_REL,			U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)REL_IE_AT4,			A_NIL)
	Ns_at4_tab_spdu_entry (REL_COMP,	DA_REL_COMP,	U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)REL_COMP_IE_AT4,		A_NIL)

	Ns_at4_tab_spdu_entry (USER_INFO,	DA_USER_INFO,	U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)USER_INFO_IE_AT4,		(struct spdu_ie_so *)USER_INFO_IE_SO_AT4)
	Ns_at4_tab_spdu_entry (FAC,			DA_FAC,			U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)FAC_IE_AT4,			A_NIL)
	Ns_at4_tab_spdu_entry (CON_CON,		DA_CON_CON,		U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)CON_CON_IE_AT4,		(struct spdu_ie_so *)CON_CON_IE_SO_AT4)
	Ns_at4_tab_spdu_entry (RESTART,		DA_RESTART,		U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)RESTART_IE_AT4,		A_NIL)
	Ns_at4_tab_spdu_entry (RESTART_ACK,	DA_RESTART_ACK,	U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)RESTART_ACK_IE_AT4,	A_NIL)
	Ns_at4_tab_spdu_entry (STATUS_ENQ,	DA_STATUS_ENQ,	U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)STATUS_ENQ_IE_AT4,	A_NIL)
	Ns_at4_tab_spdu_entry (STATUS,		DA_STATUS,		U_N_ALL,	N_U_ALL,	PRI,	(struct spdu_ie *)STATUS_IE_AT4,		A_NIL)

#	if NS_MAINTENANCE_CAPABILITY == ON
		Ns_at4_tab_spdu_maint_e (MAINT_SERVICE, 	DA_MAINT_SERVICE,		U_N_ALL,    N_U_ALL,	PRI,	(struct spdu_ie *)MAINT_SERVICE_IE_AT4,		A_NIL,	PROTOCOL_DISCR_MAINTENANCE)
		Ns_at4_tab_spdu_maint_e (MAINT_SERVICE_ACK, DA_MAINT_SERVICE_ACK,	U_N_ALL,    N_U_ALL,	PRI,	(struct spdu_ie *)MAINT_SERVICE_ACK_IE_AT4,	A_NIL,	PROTOCOL_DISCR_MAINTENANCE)
#	endif

Ns_at4_end_table_or_function /* } */

/*EOF*/
