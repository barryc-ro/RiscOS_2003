
/*--------------------------------------------------------------------------*
 *					   M O D U L E   H E A D E R
 *
 * filename - tab_ie.ets
 *
 * $Revision$
 *
 * $Date$
 *
 * Implements the Tables (containing address) describing all the 
 * information elements and the integrity constraints associated to.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

		/*
			Table of table items - the items are ordered according to the
			table ID number : table ID = index of the table.
		*/

Ns_ets_table_or_function (tabl, ETS_TAB_TABL)	/* { */
	Ns_ets_tab_tabl_entry (T_NIL,						P_NIL)
	Ns_ets_tab_tabl_entry (ETS_T_ASSIGN,				ETS_ASSIGN_S)
	Ns_ets_tab_tabl_entry (ETS_T_BAND,					ETS_BAND_S)
	Ns_ets_tab_tabl_entry (ETS_T_C_C,					ETS_C_C_S)
	Ns_ets_tab_tabl_entry (ETS_T_CALL_STATE,			ETS_CALL_STATE_VAL_S)
	Ns_ets_tab_tabl_entry (ETS_T_CALLED_NB_PLAN,		ETS_CALLED_NB_PLAN_S)
	Ns_ets_tab_tabl_entry (ETS_T_CALLED_NB_TYPE,		ETS_CALLED_NB_TYPE_S)
	Ns_ets_tab_tabl_entry (ETS_T_CALLING_NB_PLAN,		ETS_CALLING_NB_PLAN_S)
	Ns_ets_tab_tabl_entry (ETS_T_CALLING_NB_PRES,		ETS_CALLING_NB_PRES_S)
	Ns_ets_tab_tabl_entry (ETS_T_CALLING_NB_TYPE,		ETS_CALLING_NB_TYPE_S)
	Ns_ets_tab_tabl_entry (ETS_T_CHAN_NUMBER,			ETS_CHAN_NUMBER_S)
	Ns_ets_tab_tabl_entry (ETS_T_CHAN_PREF_EXCL,		ETS_CHAN_PREF_EXCL_S)
	Ns_ets_tab_tabl_entry (ETS_T_CHAN_TYPE,				ETS_CHAN_TYPE_S)
	Ns_ets_tab_tabl_entry (ETS_T_CODING_STD,			ETS_CODING_STD_S)
	Ns_ets_tab_tabl_entry (ETS_T_CONGEST_LEVEL,			ETS_CONGEST_LEVEL_S)
	Ns_ets_tab_tabl_entry (ETS_T_D_CHAN,				ETS_D_CHAN_S)
	Ns_ets_tab_tabl_entry (ETS_T_DATA_BIT,				ETS_DATA_BIT_S)
	Ns_ets_tab_tabl_entry (ETS_T_DUPLEX,				ETS_DUPLEX_S)
	Ns_ets_tab_tabl_entry (ETS_T_FLOW_CONTROL_RX,		ETS_FLOW_CONTROL_RX_S)
	Ns_ets_tab_tabl_entry (ETS_T_FLOW_CONTROL_TX,		ETS_FLOW_CONTROL_TX_S)
	Ns_ets_tab_tabl_entry (ETS_T_HEADER,				ETS_HEADER_S)
	Ns_ets_tab_tabl_entry (ETS_T_INT_TYPE,				ETS_INT_TYPE_S)
	Ns_ets_tab_tabl_entry (ETS_T_INTER_RATE,			ETS_INTER_RATE_S)
	Ns_ets_tab_tabl_entry (ETS_T_INTERPRETATION,		ETS_INTERPRETATION_S)
	Ns_ets_tab_tabl_entry (ETS_T_LAYER_ID,				ETS_LAYER_ID_S)
	Ns_ets_tab_tabl_entry (ETS_T_LLI,					ETS_LLI_S)
	Ns_ets_tab_tabl_entry (ETS_T_LOCATION,				ETS_LOCATION_S)
	Ns_ets_tab_tabl_entry (ETS_T_MODEM,					ETS_MODEM_S)
	Ns_ets_tab_tabl_entry (ETS_T_MULTI_FRAME,			ETS_MULTI_FRAME_S)
	Ns_ets_tab_tabl_entry (ETS_T_NEGOTIATION,			ETS_NEGOTIATION_S)
	Ns_ets_tab_tabl_entry (ETS_T_NET_ID_PLAN,			ETS_NET_ID_PLAN_S)
	Ns_ets_tab_tabl_entry (ETS_T_NET_ID_TYPE,			ETS_NET_ID_TYPE_S)
	Ns_ets_tab_tabl_entry (ETS_T_NIC_RX,				ETS_NIC_RX_S)
	Ns_ets_tab_tabl_entry (ETS_T_NIC_TX,				ETS_NIC_TX_S)
	Ns_ets_tab_tabl_entry (ETS_T_NOTIF_IND_DESCR,		ETS_NOTIF_IND_DESCR_S)
	Ns_ets_tab_tabl_entry (ETS_T_OP_MODE,				ETS_OP_MODE_S)
	Ns_ets_tab_tabl_entry (ETS_T_OUT_BAND_NEG,			ETS_OUT_BAND_NEG_S)
	Ns_ets_tab_tabl_entry (ETS_T_PARITY,				ETS_PARITY_S)
	Ns_ets_tab_tabl_entry (ETS_T_PROGRESS_DESCRIPTION,	ETS_PROGRESS_DESCRIPTION_S)
	Ns_ets_tab_tabl_entry (ETS_T_PROGRESS_LOCATION,		ETS_PROGRESS_LOCATION_S)
	Ns_ets_tab_tabl_entry (ETS_T_PROTOCOL_ID_LLC_1,		ETS_PROTOCOL_ID_LLC_1_S)
	Ns_ets_tab_tabl_entry (ETS_T_PROTOCOL_ID_LLC_2,		ETS_PROTOCOL_ID_LLC_2_S)
	Ns_ets_tab_tabl_entry (ETS_T_PROTOCOL_ID_LLC_3,		ETS_PROTOCOL_ID_LLC_3_S)
	Ns_ets_tab_tabl_entry (ETS_T_RECOMMENDATION,		ETS_RECOMMENDATION_S)
	Ns_ets_tab_tabl_entry (ETS_T_RESTART_IND_CLASS,		ETS_RESTART_IND_CLASS_S)
	Ns_ets_tab_tabl_entry (ETS_T_SCREEN_IND,			ETS_SCREEN_IND_S)
	Ns_ets_tab_tabl_entry (ETS_T_S_MSG_TYPE,			ETS_MSG_TYPE_S)
	Ns_ets_tab_tabl_entry (ETS_T_SIGNAL_VAL,			ETS_SIGNAL_VAL_S)
	Ns_ets_tab_tabl_entry (ETS_T_STATUS_CONDITION,		ETS_STATUS_CONDITION_S)
	Ns_ets_tab_tabl_entry (ETS_T_STOP_BIT,				ETS_STOP_BIT_S)
	Ns_ets_tab_tabl_entry (ETS_T_STRUCTURE,				ETS_STRUCTURE_S)
	Ns_ets_tab_tabl_entry (ETS_T_SUB_ADD_IND,			ETS_SUB_ADD_IND_S)
	Ns_ets_tab_tabl_entry (ETS_T_SUB_ADD_TYPE,			ETS_SUB_ADD_TYPE_S)
	Ns_ets_tab_tabl_entry (ETS_T_SYN_ASYN,				ETS_SYN_ASYN_S)
	Ns_ets_tab_tabl_entry (ETS_T_TELESERVICE_CCITT,		ETS_TELESERVICE_CCITT_S)
	Ns_ets_tab_tabl_entry (ETS_T_TELESERVICE_EXT,		ETS_TELESERVICE_EXT_S)
	Ns_ets_tab_tabl_entry (ETS_T_TRF_CAP_BC,			ETS_TRF_CAP_BC_S)
	Ns_ets_tab_tabl_entry (ETS_T_TRF_CAP_LLC,			ETS_TRF_CAP_LLC_S)
	Ns_ets_tab_tabl_entry (ETS_T_TRF_MODE,				ETS_TRF_MODE_S)
	Ns_ets_tab_tabl_entry (ETS_T_USER_RATE,				ETS_USER_RATE_S)
	Ns_ets_tab_tabl_entry (ETS_T_UUI_PROTOCOL_DISCR,	ETS_UUI_PROTOCOL_DISCR_S)
	Ns_ets_tab_tabl_entry (ETS_T_CHARGING_TYPE,			ETS_CHARGING_TYPE_S)
	Ns_ets_tab_tabl_entry (ETS_T_CHARGING_PERIOD,		ETS_CHARGING_PERIOD_S)

#	if NS_SS_DIVERSION == ON
		Ns_ets_tab_tabl_entry (ETS_T_REASON_REDIR,		ETS_REASON_REDIR_S)
#	endif

Ns_ets_end_table_or_function /* } */

/*=========================================================================*/

		/* Table of list of tables */

Ns_ets_table_or_function(tabx_list, ETS_TAB_C_V_S)	/* { */
	Ns_ets_tabx_list_entry	(ETS_C_V_NORMAL_EVENT_S)
	Ns_ets_tabx_list_entry	(ETS_C_V_RESOURCE_UNAVAILABLE_S)
	Ns_ets_tabx_list_entry	(ETS_C_V_SERVICE_NOT_AVAILABLE_S)
	Ns_ets_tabx_list_entry	(ETS_C_V_SERVICE_NOT_IMPLEMENTED_S)
	Ns_ets_tabx_list_entry	(ETS_C_V_INVALID_MESSAGE_S)
	Ns_ets_tabx_list_entry	(ETS_C_V_PROTOCOL_ERROR_S)
	Ns_ets_tabx_list_entry	(ETS_C_V_INTERWORKING_S)
	Ns_ets_tabx_list_entry	(ETS_C_V_NORMAL_EVENT_0_S)
Ns_ets_end_table_or_function /* } */

Ns_ets_table_or_function(tabx_list, ETS_TAB_CHAN_SEL_S)	/* { */
	Ns_ets_tabx_list_entry	(ETS_CHAN_SEL_BRI_S)
	Ns_ets_tabx_list_entry	(ETS_CHAN_SEL_PRI_S)
Ns_ets_end_table_or_function /* } */

Ns_ets_table_or_function(tabx_list, ETS_TAB_TRF_RATE_S)	/* { */
	Ns_ets_tabx_list_entry	(ETS_TRF_RATE_CIRCUIT_S)
	Ns_ets_tabx_list_entry	(ETS_TRF_RATE_PACKET_S)
Ns_ets_end_table_or_function /* } */

Ns_ets_table_or_function(tabx_list, ETS_TAB_PROTOCOL_ID_BC_S)	/* { */
	Ns_ets_tabx_list_entry	(ETS_PROTOCOL_ID_BC_1_S)
	Ns_ets_tabx_list_entry	(ETS_PROTOCOL_ID_BC_2_S)
	Ns_ets_tabx_list_entry	(ETS_PROTOCOL_ID_BC_3_S)
Ns_ets_end_table_or_function /* } */

/*-------------------------------------------------------------------------*/

		/* Table of table items (indexed tables ) */

Ns_ets_table_or_function(tabx, ETS_TAB_TABX)	/* { */
	Ns_ets_tab_tabx_entry	(T_NIL,					P_NIL)
	Ns_ets_tab_tabx_entry	(ETS_TX_C_V,			ETS_TAB_C_V_S)
	Ns_ets_tab_tabx_entry	(ETS_TX_CHAN_SEL,		ETS_TAB_CHAN_SEL_S)
	Ns_ets_tab_tabx_entry	(ETS_TX_PROTOCOL_ID_BC,	ETS_TAB_PROTOCOL_ID_BC_S)
	Ns_ets_tab_tabx_entry	(ETS_TX_TRF_RATE,		ETS_TAB_TRF_RATE_S)
Ns_ets_end_table_or_function /* } */

/*-------------------------------------------------------------------------*

IE description structures :
-------------------------

					ie		  tab_ie
	======================================================================================
	| codeset | id | p_prog | size | p_struc | p_init| repetition |offset_of (p_tsp_data) |
	|---------|----|--------|------|---------|-------|------------|-----------------------|
	|		  |	   |  X----------------------------------------------------------------------> START
	|---------|----|--------|------|---------|-------|------------|	   					  |XXXXX
	|		  |	   |		|	   |		 |	     |			  |	   					  |YYYYY
	|---------|----|--------|------|---------|-------|------------|						  |END
	|		  |	   |		|	   |		 |	     |			  |                       |
	|---------|----|--------|------|---------|-------|------------|                       |
	|		  |	   |		|  X   |   X-----------------------------------------------------> i_xxxx
	|---------|----|--------|--|---|---------|-------|------------|		 				  |Œ internal
	|		  |	   |		|  ------------------------------------------------------------| data
	|---------|----|--------|------|---------|-------|------------|		 				  |v structure
	|		  |	   |		|	   |		 |	     |			  |                       |
	|---------|----|--------|------|---------|-------|------------|                       |
	|		  |	   |		|	   |		 |   X-------------------------------------------> df_spdu_ets_i_xxxx
	|---------|----|--------|------|---------|-------|------------|	   					  |		Œ implicit   and df_ssdu_ets_i_xxx
	|		  |	   |		|	   |		 |	     |			  |	   					  | 	|	value or
	|---------|----|--------|------|---------|-------|------------|------------------------		v  P_NIL

		 Information Element (IE) table of item :
					- codeset,
					- ie identifier;
					- program sequence address,
					- internal structure size,
					- internal structure address,
					- initialization structure address,
					- maximum number of repeated IE,
					- offset of the pointer giving the tsp data area.
*/

Ns_ets_table_or_function(ie, ETS_TAB_IE)	/* { */

Ns_ets_tab_ie_no_i_str (CODESET_SO, MORE_DATA, ETS_MX_MORE_DATA)		/* IE with no internal data */
Ns_ets_tab_ie_no_i_str (CODESET_SO, SENDING_COMPLETE, ETS_MX_SENDING_COMPLETE)	/* IE with no internal data */

Ns_ets_tab_ie_entry (CODESET_SO,CONGEST_LEVEL,		&ETS_CONGEST_LEVEL_P,	i_congest_level,	    &df_spdu_ets_i_congest_level,	&df_ssdu_ets_i_congest_level,	ETS_MX_CONGEST_LEVEL,		0)

Ns_ets_tab_ie_entry (CODESET_0,BC,					&ETS_BC_P,				i_bc,				    &df_spdu_ets_i_bc,				&df_ssdu_ets_i_bc,				ETS_MX_BC,					Offsetof(i_bc,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,CAUSE,				&ETS_CAUSE_P,			i_cause,			    &df_spdu_ets_i_cause,			&df_ssdu_ets_i_cause,			ETS_MX_CAUSE,				Offsetof(i_cause,p_tsp_add))

#if NS_SUPP_SERVICES == ON
	Ns_ets_tab_ie_entry (CODESET_0,EXTENDED_FAC,	&ETS_EXT_FAC_P,			i_extended_fac,		    &df_spdu_ets_i_ext_fac,			P_NIL,							ETS_MX_EXTENDED_FAC,		Offsetof(i_extended_fac,p_tsp_add))
#endif

Ns_ets_tab_ie_entry (CODESET_0,CALL_ID,				&ETS_CALL_ID_P,			i_call_id,			    &df_spdu_ets_i_call_id,			&df_ssdu_ets_i_call_id,			ETS_MX_CALL_ID,				Offsetof(i_call_id,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,CALL_STATE,			&ETS_CALL_STATE_P,		i_call_state,		    &df_spdu_ets_i_call_state,		&df_ssdu_ets_i_call_state,		ETS_MX_CALL_STATE,			Offsetof(i_call_state,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,CHAN_ID,				&ETS_CHAN_ID_P,			i_chan_id,			    &df_spdu_ets_i_chan_id,			&df_ssdu_ets_i_chan_id,			ETS_MX_CHAN_ID,				Offsetof(i_chan_id,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,FACILITY,			&ETS_FACILITY_P,		i_facility,			    &df_spdu_ets_i_facility,		&df_ssdu_ets_i_facility,		ETS_MX_FACILITY,			Offsetof(i_facility,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,PROGRESS_IND,		&ETS_PROGRESS_IND_P,	i_progress_ind,		    &df_spdu_ets_i_progress_ind,	&df_ssdu_ets_i_progress_ind,	ETS_MX_PROGRESS_IND,		Offsetof(i_progress_ind,p_tsp_add))

#if	NS_SPF_FACILITY	== ON
Ns_ets_tab_ie_entry (CODESET_0,SPF_FAC,				&ETS_SPF_FAC_P,			i_spf_fac,			    &df_spdu_ets_i_spf_fac,			&df_ssdu_ets_i_spf_fac,			ETS_MX_SPF_FAC,				Offsetof(i_spf_fac,p_tsp_add))
#endif

Ns_ets_tab_ie_entry (CODESET_0,NOTIF_IND,			&ETS_NOTIF_IND_P,		i_notif_ind,		    &df_spdu_ets_i_notif_ind,		&df_ssdu_ets_i_notif_ind,		ETS_MX_NOTIF_IND,	        Offsetof(i_notif_ind,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,DISPLAY,				&ETS_DISPLAY_P,			i_display,			    &df_spdu_ets_i_display,			&df_ssdu_ets_i_display,			ETS_MX_DISPLAY,				Offsetof(i_display,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,DATE_TIME,			&ETS_DATE_TIME_P,		i_date_time,		    &df_spdu_ets_i_date_time,		&df_ssdu_ets_i_date_time,		ETS_MX_DATE_TIME,			Offsetof(i_date_time,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,KEYPAD,				&ETS_KEYPAD_P,			i_keypad,			    &df_spdu_ets_i_keypad,			&df_ssdu_ets_i_keypad,			ETS_MX_KEYPAD,				Offsetof(i_keypad,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,SIGNAL,				&ETS_SIGNAL_P,			i_signal,			    &df_spdu_ets_i_signal,			&df_ssdu_ets_i_signal,			ETS_MX_SIGNAL,				Offsetof(i_signal,p_tsp_add))

#if NS_COLP_COLR == ON
	Ns_ets_tab_ie_entry (CODESET_0,CONNECTED_NB,	 &ETS_CONN_NB_P,		i_conn_nb,			    &df_spdu_ets_i_conn_nb,			&df_ssdu_ets_i_conn_nb,			ETS_MX_CONN_NB,				Offsetof(i_conn_nb,p_tsp_add))
	Ns_ets_tab_ie_entry (CODESET_0,CONNECTED_SUB_ADD,&ETS_CONN_SUB_ADD_P,	i_conn_sub_add,		    &df_spdu_ets_i_conn_sub_add,	&df_ssdu_ets_i_conn_sub_add,	ETS_MX_CONN_SUB_ADD,		Offsetof(i_conn_sub_add,p_tsp_add))
#endif

Ns_ets_tab_ie_entry (CODESET_0,CALLING_NB,			&ETS_CALLING_NB_P,		i_calling_nb,		    &df_spdu_ets_i_calling_nb,		&df_ssdu_ets_i_calling_nb,		ETS_MX_CALLING_NB,			Offsetof(i_calling_nb,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,CALLING_SUB_ADD,		&ETS_CALLING_SUB_ADD_P,	i_calling_sub_add,	    &df_spdu_ets_i_calling_sub_add,	&df_ssdu_ets_i_calling_sub_add,	ETS_MX_CALLING_SUB_ADD,		Offsetof(i_calling_sub_add,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,CALLED_NB,			&ETS_CALLED_NB_P,		i_called_nb,		    &df_spdu_ets_i_called_nb,		&df_ssdu_ets_i_called_nb,		ETS_MX_CALLED_NB,			Offsetof(i_called_nb,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,CALLED_SUB_ADD,		&ETS_CALLED_SUB_ADD_P,	i_called_sub_add,	    &df_spdu_ets_i_called_sub_add,	&df_ssdu_ets_i_called_sub_add,	ETS_MX_CALLED_SUB_ADD,		Offsetof(i_called_sub_add,p_tsp_add))

#if NS_SS_DIVERSION == ON
	Ns_ets_tab_ie_entry (CODESET_0,REDIR_NB,		&ETS_REDIR_NB_P,		i_redir_nb,			    &df_spdu_ets_i_redir_nb,		&df_ssdu_ets_i_redir_nb,		ETS_MX_REDIR_NB,			Offsetof(i_redir_nb,p_tsp_add))
	Ns_ets_tab_ie_entry (CODESET_0,REDIRECTION_NB,	&ETS_REDIRECTION_NB_P,	i_redirection_nb,	    &df_spdu_ets_i_redirection_nb,	&df_ssdu_ets_i_redirection_nb,	ETS_MX_REDIRECTION_NB,		Offsetof(i_redirection_nb,p_tsp_add))
#endif

Ns_ets_tab_ie_entry (CODESET_0,TRANSIT_NET_SEL,		&ETS_TRANSIT_NET_SEL_P,	i_transit_net_sel,	    &df_spdu_ets_i_transit_net_sel,	&df_ssdu_ets_i_transit_net_sel,	ETS_MX_TRANSIT_NET_SEL,		Offsetof(i_transit_net_sel,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,RESTART_IND,			&ETS_RESTART_IND_P,		i_restart_ind,		    &df_spdu_ets_i_restart_ind,		&df_ssdu_ets_i_restart_ind,		ETS_MX_RESTART_IND,	        Offsetof(i_restart_ind,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,LLC,					&ETS_LLC_P,				i_llc,				    &df_spdu_ets_i_llc,				&df_ssdu_ets_i_llc,				ETS_MX_LLC,					Offsetof(i_llc,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,HLC,					&ETS_HLC_P,				i_hlc,				    &df_spdu_ets_i_hlc,				&df_ssdu_ets_i_hlc,				ETS_MX_HLC,					Offsetof(i_hlc,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_0,UUI,					&ETS_UUI_P,				i_uui,				    &df_spdu_ets_i_uui,				&df_ssdu_ets_i_uui,				ETS_MX_UUI,					Offsetof(i_uui,p_tsp_add))

Ns_ets_tab_ie_entry (CODESET_5,ADVICE_CHARGE,		&ETS_ADVICE_CHARGE_P,	i_advice_charge,	    &df_spdu_ets_i_advice_charge,	&df_ssdu_ets_i_advice_charge,	ETS_MX_ADVICE_CHARGE,		Offsetof(i_advice_charge,p_tsp_add))
Ns_ets_tab_ie_entry (CODESET_6,ADVICE_CHARGE,		&ETS_ADVICE_CHARGE_P,	i_advice_charge,	    &df_spdu_ets_i_advice_charge,	&df_ssdu_ets_i_advice_charge,	ETS_MX_ADVICE_CHARGE,		Offsetof(i_advice_charge,p_tsp_add))

/*----------------------	IEs	for	packet	communications	--------------------*

	(Not implemented) :

	Ns_ets_tab_ie_entry (CODESET_0,INF_RATE,			&INF_RATE_P,			i_inf_rate,			&df_spdu_ets_i_inf_rate,			&df_ssdu_ets_i_inf_rate,			ETS_MX_INF_RATE,		Offsetof(i_inf_rate,p_tsp_add))
	Ns_ets_tab_ie_entry (CODESET_0,E_T_E_TRANSIT_DLY,	&E_T_E_TRANSIT_DLY_P,	i_e_t_e_transit_dly,&df_spdu_ets_i_e_t_e_transit_dly,	&df_ssdu_ets_i_e_t_e_transit_dly,	ETS_MX_E_T_E_DLY,		Offsetof(i_e_t_e_dly,p_tsp_add))
	Ns_ets_tab_ie_entry (CODESET_0,TRANSIT_DLY_SEL,		&TRANSIT_DLY_SEL_P,		i_transit_dly_sel,	&df_spdu_ets_i_transit_dly_sel,		&df_ssdu_ets_i_transit_dly_sel,		ETS_MX_TRANSIT_DLY_SEL,	Offsetof(i_transit_net_sel,p_tsp_add))
	Ns_ets_tab_ie_entry (CODESET_0,PACKET_LBP,			&PACKET_LBP_P,			i_packet_lbp,		&df_spdu_ets_packet_lbp,			&df_ssdu_ets_i_packet_lbp,			ETS_MX_PACKET_LBP,		Offsetof(i_packet_lbp,p_tsp_add))
	Ns_ets_tab_ie_entry (CODESET_0,PACKET_LWS,			&PACKET_LWS_P,			i_packet_lws,		&df_spdu_ets_packet_lws,			&df_ssdu_ets_i_packet_lws,			ETS_MX_PACKET_LWS,		Offsetof(i_packet_lws,p_tsp_add))
	Ns_ets_tab_ie_entry (CODESET_0,PACKET_SIZE,			&PACKET_SIZE_P,			i_packet_size,		&df_spdu_ets_packet_size,			&df_ssdu_ets_i_packet_size,			ETS_MX_PACKET_SIZE,		Offsetof(i_packet_size,p_tsp_add))

*/

#if MESSAGE_HEADER_IE == ON
		Ns_ets_tab_ie_msg_header			
#endif

Ns_ets_end_table_or_function /* } */

/*EOF*/

