
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_tim.qsi
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the ECMA_QSIG specific timer tables of the
 *			Q NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

			/* TIMERS IMPLICIT VALUES */

				/* Netwrok side timer implicit values */

#define QSI_NET_T300			 	(1		* SECOND)	/* T300 */
#define QSI_NET_T301				(180	* SECOND)	/* T301 */
#define QSI_NET_T302				(15		* SECOND)	/* T302 */
#define QSI_NET_T303				(4		* SECOND)	/* T303 */
#define QSI_NET_T304				(20		* SECOND)	/* T304 */
#define QSI_NET_T305				(30		* SECOND)	/* T305 */
#define QSI_NET_T308				(4		* SECOND)	/* T308 */
#define QSI_NET_T309				(90		* SECOND)	/* T309 */
#define QSI_NET_T310				(30		* SECOND)	/* T310 */
#define QSI_NET_T313				(4		* SECOND)	/* T313 */
#define QSI_NET_T314				(4		* SECOND)	/* T314 */
#define QSI_NET_T316				(120	* SECOND)	/* T316 */
#define QSI_NET_T322				(4		* SECOND)	/* T322 */

				/* User side timer values */

#define QSI_USER_T300			 	(1		* SECOND)	/* T300 */
#define QSI_USER_T301				(180	* SECOND)	/* T301 */
#define QSI_USER_T302				(15		* SECOND)	/* T302 */
#define QSI_USER_T303				(4		* SECOND)	/* T303 */
#define QSI_USER_T304				(20		* SECOND)	/* T304 */
#define QSI_USER_T305				(30		* SECOND)	/* T305 */
#define QSI_USER_T308				(4		* SECOND)	/* T308 */
#define QSI_USER_T309				(90		* SECOND)	/* T309 */
#define QSI_USER_T310				(30		* SECOND)	/* T310 */
#define QSI_USER_T313				(4		* SECOND)	/* T313 */
#define QSI_USER_T314				(4		* SECOND)	/* T314 */
#define QSI_USER_T316				(120	* SECOND)	/* T316 */
#define QSI_USER_T322				(4		* SECOND)	/* T322 */


			/* NS timer implicit value table */

		/* Call associated timers */

CONST_ARRAY struct ns_timer QSI_TI_CALL[] = {

/*	NT value			User value			Event ID		Index (0 -> NB_CALL_TIMER-1) */

	{QSI_NET_T300,		QSI_USER_T300,		TI_300,			QSI_T300_IDX},		/* T300 */
	{QSI_NET_T301,		QSI_USER_T301,		TI_301,			QSI_T301_IDX},		/* T301 */
	{QSI_NET_T302,		QSI_USER_T302,		TI_302,			QSI_T302_IDX},		/* T302 */
	{QSI_NET_T303,		QSI_USER_T303,		TI_303,			QSI_T303_IDX},		/* T303 */
	{QSI_NET_T304,		QSI_USER_T304,		TI_304,			QSI_T304_IDX},		/* T304 */
	{QSI_NET_T305,		QSI_USER_T305,		TI_305,			QSI_T305_IDX},		/* T305 */
	{QSI_NET_T308,		QSI_USER_T308,		TI_308,			QSI_T308_IDX},		/* T308 */
	{QSI_NET_T310,		QSI_USER_T310,		TI_310,			QSI_T310_IDX},		/* T310 */
	{QSI_NET_T313,		QSI_USER_T313,		TI_313,			QSI_T313_IDX},		/* T313 */
	{QSI_NET_T322,		QSI_USER_T322,		TI_322,			QSI_T322_IDX},		/* T322 */

#	if NS_T309 == ON
		{QSI_NET_T309,	QSI_USER_T309,		TI_309,			QSI_T309_IDX},		/* T309 */
#	endif

};


		/* DLCI associated timers */

CONST_ARRAY struct ns_timer QSI_TI_DLCI[] = {

/*	NT value				User value			Event ID		Index (0 -> MX_DLCI_TIMER-1) */

	{TI_DL_VAL,				TI_DL_VAL,			TI_DL	},		/* T3DL */
	{TI_DL_EST_VAL,			TI_DL_EST_VAL,		TI_DL_EST},		/* T3_DL_EST */

#	if NS_RESTART_PROCEDURE == ON
		{QSI_NET_T316,		QSI_USER_T316,		TI_316	},		/* T316 */
#	endif

#	if NS_SEGMENTATION == ON
		{QSI_NET_T314,		QSI_USER_T314,		TI_314	},		/* T314 */
#	endif

};
	/* Index table for timers used in the kernel */

CONST_ARRAY uchar QSI_TI_IDX[] = {

#	if NS_T309 == ON
		QSI_T309,
#	endif

#	if NS_SEGMENTATION == ON
		QSI_T314,
#	endif

#	if NS_RESTART_PROCEDURE == ON
		QSI_T316,
		QSI_T317,
#	endif

	TI_EOT,
};


/*EOF*/




