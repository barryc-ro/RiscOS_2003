
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - ns_sstab.qsi
 *
 * $Revision$
 *
 * $Date$
 *
 *	This file contains the definitions of all Tables and ASN1 Meta-programs
 *	for data used in Q-SIG specific Supplementary Services.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|														|*/
/*[]---------------------------------------------------[]*/

	/* implementation of general ASN1 types described in ETS 300 239 (with ASN1 meta-programs)
	 * -------------------------------------------------------------------------------------- */

		/* NetworkFacilityExtension ::= [10] IMPLICIT SEQUENCE
		 *										{sourceEntity [0] IMPLICIT EntityType,
		 *										 sourceEntityAddress [1] AddressInformation OPTIONAL,
		 *										 destinationEntity [2] IMPLICIT EntityType,
		 *										 destinationEntityAddress [3] AddressInformation OPTIONAL}
		 *	with
		 *
		 * EntityType ::= ENUMERATED {endPTNX (0), anyTypeOfPTNX (1)}
		 * AddressInformation ::= PartyNumber 
		 */

D_ASN1_TYPE_START		(NS_SS_QSI_NFE_SOURCE_ENT_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NFE_SOURCE_ENT_P)
	ASN1_TYPE_IDENT			(ASN1_ENUMERATED_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_NFE_SOURCE_ADD_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NFE_SOURCE_ADD_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_PARTY_NUMBER_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_NFE_DEST_ENT_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NFE_DEST_ENT_P)
	ASN1_TYPE_IDENT			(ASN1_ENUMERATED_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_NFE_DEST_ADD_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NFE_DEST_ADD_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_PARTY_NUMBER_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_NET_FAC_EXTENS_P)
	D_ASN1_TYPE_FIELD_NB		(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NET_FAC_EXTENS_P)
	ASN1_TYPE_IDENT			(ASN1_SEQUENCE_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, QSI_NET_FAC_EXTENSION_TAG)
	ASN1_TYPE_FIELD_NB			(4)
	ASN1_TYPE_FIELD				(NS_SS_QSI_NFE_SOURCE_ENT_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_QSI_NFE_SOURCE_ADD_P, ns_asn1_optional_indicators)
	ASN1_TYPE_FIELD				(NS_SS_QSI_NFE_DEST_ENT_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_NFE_DEST_ADD_P, (ns_asn1_optional_indicators + 1))
ASN1_TYPE_END

	/* Table used to decode and store data of NetworkFacilityExtension */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_SS_QSI_CTX_LIST_NFE)	/* { */
			/* first entry : used for repetition of ARGUMENT */
	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, sizeof (struct ns_qsi_fac_start), MX_FACILITY, 0, 0)

						/*	 p_pc							field_nb	type				p_struct		instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NFE_SOURCE_ENT_P, 0, NS_SS_INT_TYPE_UCHAR, &(ns_qsi_fac_start[0].nfe_source), 0, 0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NFE_DEST_ENT_P, 0, NS_SS_INT_TYPE_UCHAR, &(ns_qsi_fac_start[0].nfe_dest), 0, 0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P, 0, NS_SS_CHOICE_INDEX, &(ns_qsi_fac_start[0].nfe_source_p_nb_t), 0, 0, 4, 0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P, 0, NS_SS_CHOICE_INDEX, &(ns_qsi_fac_start[0].nfe_dest_p_nb_t), 0, 0, 4, 1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P, 1, NS_SS_INT_TYPE_UCHAR, &(ns_qsi_fac_start[0].nfe_source_t_of_nb), 0, 0, 6, 0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P, 1, NS_SS_INT_TYPE_UCHAR, &(ns_qsi_fac_start[0].nfe_dest_t_of_nb), 0, 0, 6, 1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P, 0, NS_SS_INT_TYPE_ASN1_STRING, (uchar FAR *)&(ns_qsi_fac_start[0].nfe_source_add), 0, 0, 8, 0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P, 0, NS_SS_INT_TYPE_ASN1_STRING, (uchar FAR *)&(ns_qsi_fac_start[0].nfe_dest_add), 0, 0, 8, 1)

	Ns_ss_store_desc_entry (P_NIL, 0, 0, 0, 0, 0, 0, 0)		/* shall stay at the end */

Ns_qsi_end_table_or_function /* } */

		/*	ASN1 description for extension : ANY -> no coding/decoding shall be processed
			on this type that will be passed transparently to/from ASN1 Module

			"extension" is a common type for it is used in many operation ARGUMENT and RESULT clauses.
		*/

D_ASN1_TYPE_START		(NS_SS_QSI_EXTENSION_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_EXTENSION_P)
	ASN1_TYPE_IDENT			(ASN1_ANY_TYPE_ID, ASN1_TYPE_NO_IMPLICIT_KEYW, ASN1_TYPE_NO_TAG, ASN1_TYPE_NO_TAG)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/* NameSet ::= SEQUENCE {nameData NameData, characterSet CharacterSet OPTIONAL} */

D_ASN1_TYPE_START		(NS_SS_QSI_NAME_SET_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NAME_SET_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_QSI_NAME_DATA_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_CHARACTER_SET_P, Qsi_character_in_name_set)
ASN1_TYPE_END

		/* Name ::= CHOICE {namePresentationAllowedSimple [0]IMPLICIT NameData,
		 *					namePresentationAllowedExtended [1]IMPLICIT NameSet,
		 *					namePresentationRestrictedSimple [2]IMPLICIT NameData,
		 *					namePresentationRestrictedExtended [3]IMPLICIT NameSet,
		 *					nameNotAvailable [4] IMPLICIT NULL}
		 */

D_ASN1_TYPE_START		(NS_SS_QSI_NM_ALLOW_SIMPLE_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NM_ALLOW_SIMPLE_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_DATA_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_NM_ALLOW_EXTEND_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NM_ALLOW_EXTEND_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_SET_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_NM_RESTR_SIMPLE_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NM_RESTR_SIMPLE_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_DATA_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_NM_RESTR_EXTEND_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NM_RESTR_EXTEND_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_SET_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_NAME_NOT_AVAIL_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NAME_NOT_AVAIL_P)
	ASN1_TYPE_IDENT			(ASN1_NULL_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 4)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_NAME_P)
	D_ASN1_TYPE_FIELD_NB	(5)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_NAME_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(5)
	ASN1_TYPE_FIELD			(NS_SS_QSI_NM_ALLOW_SIMPLE_P)
	ASN1_TYPE_FIELD			(NS_SS_QSI_NM_ALLOW_EXTEND_P)
	ASN1_TYPE_FIELD			(NS_SS_QSI_NM_RESTR_SIMPLE_P)
	ASN1_TYPE_FIELD			(NS_SS_QSI_NM_RESTR_EXTEND_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_QSI_NAME_NOT_AVAIL_P)
ASN1_TYPE_END

	/*** Table used to decode and store data of PARAMETER clause inside "Unspecified" error ***/

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_CTX_LIST_UNSPECIFIED) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_err_qsi_unspecified,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#if (NS_SS_DIVERSION == ON) || (NS_SS_CALL_TRANSFER == ON) /* Types used in Diversion and Call transfer SS{ */

		/* NumberScreened ::= SEQUENCE {PartyNumber, ScreeningIndicator} */

D_ASN1_TYPE_START		(NS_SS_NUMBER_SCREENED_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_NUMBER_SCREENED_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_SCREENING_IND_P)
ASN1_TYPE_END

		/* PresentedNumberScreened ::= CHOICE {
		 *								presentationAllowedNumber [0] IMPLICIT NumberScreened,
		 *								presentationRestricted [1] IMPLICIT NULL,
		 *								numberNotAvailableDueToInterworking [2] IMPLICIT NULL,
		 *								presentationRestrictedNumber [3] IMPLICIT NumberScreened}
		 */

D_ASN1_TYPE_START		(NS_SS_PRES_ALLOWED_SCR_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_ALLOWED_SCR_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NUMBER_SCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PRES_RESTRICT_SCR_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_RESTRICT_SCR_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_SS_NUMBER_SCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_PRES_NB_SCREENED_P)
	D_ASN1_TYPE_FIELD_NB	(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_PRES_NB_SCREENED_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(4)
	ASN1_TYPE_FIELD			(NS_SS_PRES_ALLOWED_SCR_NB_P)
	ASN1_TYPE_FIELD			(NS_SS_PRES_RESTRICTED_P)
	ASN1_TYPE_FIELD			(NS_SS_NB_NOT_AVAIL_INTERW_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_PRES_RESTRICT_SCR_NB_P)
ASN1_TYPE_END

#endif	/* end of DIVERSION or CALL TRANSFER supported} */

/*==========================================================================*/

		/*	Name Identification SS, including 2 services : Calling Name Identification
		 *	Presentation (SS-CNIP), Connected Name Identification Presentation (SS-CONP)
		 *	implementation of general Name Identification ASN1 types (with ASN1 meta-programs)
		 * ----------------------------------------------------------------------------- */

#if NS_SS_NAME_IDENT == ON /* { */

	/* all operation ARGUMENT : CHOICE {Name, SEQUENCE {
												Name,
												extension CHOICE {...} OPTIONAL}} */

D_ASN1_TYPE_START		(NS_QSI_NAME_AND_EXTENSION_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_NAME_AND_EXTENSION_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_QSI_NAME_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_name_id_extension)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_NAME_IDENT_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_NAME_IDENT_ARG_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_QSI_NAME_P)
	ASN1_TYPE_LAST_FIELD	(NS_QSI_NAME_AND_EXTENSION_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-=-=--=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

	/* Tables used to decode and store data of ARGUMENT clauses */

		/* CallingName operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CLING_NM) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_NAME_IDENT_ARG_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_calling_name_id.choice_index),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_P,				0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_calling_name_id.name_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_calling_name_id.character),				0,	0,	0,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_DATA_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_calling_name_id.name),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_NAME_AND_EXTENSION_P,	2,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_calling_name_id.extension),0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CalledName operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CALLED_NM) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_NAME_IDENT_ARG_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_called_name_id.choice_index),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_P,				0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_called_name_id.name_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_called_name_id.character),				0,	0,	0,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_DATA_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_called_name_id.name),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_NAME_AND_EXTENSION_P,	2,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_called_name_id.extension),	0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* ConnectedName operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CON_NM) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_NAME_IDENT_ARG_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_connected_name_id.choice_index),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_P,				0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_connected_name_id.name_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_connected_name_id.character),				0,	0,	0,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_DATA_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_connected_name_id.name),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_NAME_AND_EXTENSION_P,	2,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_connected_name_id.extension),	0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* BusyName operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_BUSY_NM) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_NAME_IDENT_ARG_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_busy_name_id.choice_index),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_P,				0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_busy_name_id.name_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_busy_name_id.character),				0,	0,	0,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_DATA_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_busy_name_id.name),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_NAME_AND_EXTENSION_P,	2,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_busy_name_id.extension),	0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#endif /* end of "NS_SS_NAME_IDENT = ON"} */

/*==========================================================================*/

		/*	Diversion SS, including 4 services : Call Forwarding Unconditional (CFU),
		 *	Call Forwarding Busy (CFB), Call Forwarding No Reply (CFNR), Call Deflection (CD)
		 *	implementation of general Diversion ASN1 types (with ASN1 meta-programs)
		 * ------------------------------------------------------------------ */

#if NS_SS_DIVERSION == ON /* { */

		/* IntResult ::= SEQUENCE {servedUserNr PartyNumber,
		 *						   basicService BasicService,
		 *						   procedure Procedure,
		 *						   divertedToAddress Address,
		 *						   remoteEnabled BOOLEAN DEFAULT FALSE,
		 *						   extension CHOICE {...} OPTIONAL}
		 */

D_ASN1_TYPE_START		(NS_QSI_DIV_INT_RESULT_P)
	D_ASN1_TYPE_FIELD_NB		(6)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_DIV_INT_RESULT_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(6)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_FIELD				(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_FIELD				(NS_DIV_PROCEDURE_P)
	ASN1_TYPE_FIELD				(NS_DIV_INT_RES_FORW_ADDRESS_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_BOOLEAN_P, Qsi_div_int_res_remote_enab)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_div_int_res_extension)
ASN1_TYPE_END

		/* IntResultList ::= SET SIZE (0..29) OF IntResult */

D_ASN1_TYPE_START		(NS_QSI_DIV_INT_RESULT_LIST_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_DIV_INT_RESULT_LIST_P)
	NS_ASN1_SET_OF
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_QSI_DIV_INT_RESULT_P)
ASN1_TYPE_END

	/* ActivateDiversionQ operation ARGUMENT : SEQUENCE {
													procedure Procedure,
													basicService BasicService,
													divertedToAddress Address,
													servedUserNr PartyNumber,
													activatingUserNr PartyNumber,
													extension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_ACTIVATE_DIV_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(6)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_ACTIVATE_DIV_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(6)
	ASN1_TYPE_FIELD				(NS_DIV_PROCEDURE_P)
	ASN1_TYPE_FIELD				(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_FIELD				(NS_SS_ADDRESS_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_div_activate_extension)
ASN1_TYPE_END

	/* DeactivateDiversionQ operation ARGUMENT : SEQUENCE {
													procedure Procedure,
													basicService BasicService,
													servedUserNr PartyNumber,
													activatingUserNr PartyNumber,
													extension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_DEA_DIV_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(5)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_DEA_DIV_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(5)
	ASN1_TYPE_FIELD				(NS_DIV_PROCEDURE_P)
	ASN1_TYPE_FIELD				(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_div_dea_extension)
ASN1_TYPE_END

	/* InterrogateDiversionQ operation ARGUMENT : SEQUENCE {
													procedure Procedure,
													basicService BasicService DEFAULT allServices,
													servedUserNr PartyNumber,
													activatingUserNr PartyNumber,
													extension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_INTERROG_DIV_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(5)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_INTERROG_DIV_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(5)
	ASN1_TYPE_FIELD				(NS_DIV_PROCEDURE_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_BASIC_SERVICE_P, Qsi_div_interog_service)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_div_interog_extension)
ASN1_TYPE_END

	/* CheckRestriction operation ARGUMENT : SEQUENCE {
												servedUserNr PartyNumber,
												basicService BasicService,
												divertedToNr PartyNumber,
												extension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_CHK_RESTRICT_DIV_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CHK_RESTRICT_DIV_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(4)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_FIELD				(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_div_chk_rest_extension)
ASN1_TYPE_END

	/* CallRerouting operation ARGUMENT : SEQUENCE {
											reroutingReason DiversionReason,
											calledAddress Address,
											diversionCounter INTEGER (1..15),
											qSIGInfoElement QSIGInformationElement,
											lastReroutingNr [1] PresentedNumberUnscreened,
											subscriptionOption [2] IMPLICIT SubscriptionOption,
											callingPartySubaddress [3] PartySubaddress OPTIONAL,
											callingNumber [4] PresentedNumberScreened,
											callingName [5] Name OPTIONAL,
											originalCalledNr [6] PresentedNumberUnscreened OPTIONAL,
											redirectingName [7] IMPLICIT NameSet OPTIONAL,
											originalCalledName [8] IMPLICIT NameSet OPTIONAL,
											extension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_LAST_REROUTING_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_LAST_REROUTING_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_PRES_NB_UNSCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_SUBSCRIP_OPTION_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_SUBSCRIP_OPTION_P)
	ASN1_TYPE_IDENT			(ASN1_ENUMERATED_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_CALLING_SUBADD_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CALLING_SUBADD_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_PARTY_SUBADDRESS_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_CALLING_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CALLING_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 4)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_PRES_NB_SCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_CALLING_NAME_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CALLING_NAME_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 5)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_ORIGINAL_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_ORIGINAL_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 6)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_PRES_NB_UNSCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_REDIRECTING_NAME_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_REDIRECTING_NAME_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 7)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_SET_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_ORIGINAL_NAME_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_ORIGINAL_NAME_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 8)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_SET_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_REROUTING_DIV_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(13)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_REROUTING_DIV_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(13)
	ASN1_TYPE_FIELD				(NS_DIVERSION_REASON_P)
	ASN1_TYPE_FIELD				(NS_SS_ADDRESS_P)
	ASN1_TYPE_FIELD				(NS_SS_INTEGER_P)
	ASN1_TYPE_FIELD				(NS_SS_Q931_IE_P)
	ASN1_TYPE_FIELD				(NS_QSI_LAST_REROUTING_NB_P)
	ASN1_TYPE_FIELD				(NS_QSI_SUBSCRIP_OPTION_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CALLING_SUBADD_P, Qsi_div_rerout_calling_sa)
	ASN1_TYPE_FIELD				(NS_QSI_CALLING_NB_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CALLING_NAME_P, Qsi_div_rerout_calling_nm)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_ORIGINAL_NB_P, Qsi_div_rerout_orig_nb)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_REDIRECTING_NAME_P, Qsi_div_rerout_redir_nm)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_ORIGINAL_NAME_P, Qsi_div_rerout_orig_nm)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_div_rerout_extension)
ASN1_TYPE_END

	/* DivertingLegInformation1 operation ARGUMENT : SEQUENCE {
														diversionReason DiversionReason,
														subscriptionOption SubscriptionOption,
														nominatedNr PresentedNumberUnscreened,
														extension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_DIV_LEG_INFO_1_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_DIV_LEG_INFO_1_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(4)
	ASN1_TYPE_FIELD				(NS_DIVERSION_REASON_P)
	ASN1_TYPE_FIELD				(NS_DIV_SUBSCR_OPTION_P)
	ASN1_TYPE_FIELD				(NS_SS_PRES_NB_UNSCREENED_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_div_leg_1_extension)
ASN1_TYPE_END

	/* DivertingLegInformation2 operation ARGUMENT : SEQUENCE {
														diversionCounter INTEGER (1..15),
														diversionReason DiversionReason,
														divertingNr [1] PresentedNumberUnscreened OPTIONAL,
														originalCalledNr [2] PresentedNumberUnscreened OPTIONAL,
														redirectingName [3] IMPLICIT NameSet OPTIONAL,
														originalCalledName [4] IMPLICIT NameSet OPTIONAL,
														extension CHOICE {...} OPTIONAL} */

#define NS_QSI_DIVERTING_NB_P	NS_QSI_LAST_REROUTING_NB_P

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_ORIG_NB_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_ORIG_NB_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 2)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_PRES_NB_UNSCREENED_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_LEG2_REDIR_NAME_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_LEG2_REDIR_NAME_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 3)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_SET_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_ORIG_NAME_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_ORIG_NAME_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 4)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_SET_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_DIV_LEG_INFO_2_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(7)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_DIV_LEG_INFO_2_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(7)
	ASN1_TYPE_FIELD				(NS_SS_INTEGER_P)
	ASN1_TYPE_FIELD				(NS_DIVERSION_REASON_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_DIVERTING_NB_P, Qsi_div_leg_2_diverting_nb)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_ORIG_NB_P, Qsi_div_leg_2_orig_nb)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_LEG2_REDIR_NAME_P, Qsi_div_leg_2_redir_name)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_ORIG_NAME_P, Qsi_div_leg_2_orig_name)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_div_leg_2_extension)
ASN1_TYPE_END

	/* DivertingLegInformation3 operation ARGUMENT : SEQUENCE {
														presentationAllowedIndicator PresentationAllowedIndicator,
														redirectionName [0] IMPLICIT NameSet OPTIONAL,
														extension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_SS_QSI_REDIR_NAME_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_REDIR_NAME_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_QSI_NAME_SET_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_DIV_LEG_INFO_3_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_DIV_LEG_INFO_3_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_FIELD				(NS_SS_PRESENT_ALLOW_IND_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_QSI_REDIR_NAME_P, Qsi_div_leg_3_redir_name)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_div_leg_3_extension)
ASN1_TYPE_END

		/*-=-=-=-=-=-=-=--=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses :
		! STORAGE CONTEXTS FOR DIFFERENT INTERNAL FIELDS BUT ASSOCIATED WITH SAME
		(P_PC, FIELD_NB) PAIR MUST BE ADJACENT IN TABLES */

		/* ActivateDiversionQ operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_ACTIV_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_ACTIVATE_DIV_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_activation.procedure),							0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_ACTIVATE_DIV_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_activation.basic_service),						0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_activation.forw_sub_add_type),					0,	0, 0, 2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_activation.forw_sub_address),		0,	0, 0, 2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_activation.forw_sub_add_odd_count),				0,	0, 0, 0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_activation.forw_party_nb_type),					0,	0, 6,  255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_activation.srv_u_party_nb_type),				0,	0, 7,  255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_activation.activ_u_party_nb_type),				0,	0, 7,  255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_activation.forw_type_of_nb),					0,	0, 9, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_activation.srv_u_type_of_nb),					0,	0, 10, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_activation.activ_u_type_of_nb),					0,	0, 10, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_activation.forw_number_digits),	0,	0, 12, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_activation.srv_u_number_digits),	0,	0, 13, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_activation.activ_u_number_digits),	0,	0, 13, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_ACTIVATE_DIV_ARG_P,	6,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_div_activation.extension),				0,	0, 0, 1)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_ACTIV_DIV) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_div_activate_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* DeactivateDiversionQ operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_DEA_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DEA_DIV_ARG_P,			1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_deactivation.procedure),							0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DEA_DIV_ARG_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_deactivation.basic_service),						0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_deactivation.srv_u_party_nb_type),					0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_deactivation.dea_u_party_nb_type),					0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_deactivation.srv_u_type_of_nb),						0,	0, 5, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_deactivation.dea_u_type_of_nb),						0,	0, 5, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_deactivation.srv_u_number_digits),		0,	0, 7, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_deactivation.dea_u_number_digits),		0,	0, 7, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DEA_DIV_ARG_P,			5,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_div_deactivation.extension),				0,	0, 0, 0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_DEA_DIV) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_div_dea_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* InterrogateDiversionQ operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_INTER_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_INTERROG_DIV_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation.procedure),							0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_INTERROG_DIV_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation.basic_service),						0,	0, 0, 0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interrogation.srv_u_party_nb_type),					0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interrogation.dea_u_party_nb_type),					0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation.srv_u_type_of_nb),					0,	0, 5, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation.dea_u_type_of_nb),					0,	0, 5, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_interrogation.srv_u_number_digits),	0,	0, 7, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_interrogation.dea_u_number_digits),	0,	0, 7, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_INTERROG_DIV_ARG_P,	5,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_div_interrogation.extension),				0,	0, 0, 1)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_INTER_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct
instance_interval,					repetition, 						next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_INT_RESULT_LIST_P,	0,	NS_SS_SEQUENCE_OF_NB,		&(ns_op_div_interrogation_res.int_result_nb),
0,										0, 									0, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_INT_RESULT_P,		3,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation_res.procedure[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			1, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_INT_RESULT_P,		2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation_res.basic_service[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			2, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interrogation_res.forw_sub_add_type[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			3, 			NS_DIV_MX_INT_RESULT)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_interrogation_res.forw_sub_address[0]),
sizeof (struct ns_asn1_string),		(NS_DIV_MX_INT_RESULT - 1),			4, 			NS_DIV_MX_INT_RESULT)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_interrogation_res.forw_sub_add_odd_count[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			5, 			0)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_INT_RESULT_P,		5,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_interrogation_res.served_user_nr_type[0]),
1,										(NS_DIV_MX_INT_RESULT - 1),			6, 			(NS_DIV_MX_INT_RESULT * 2))

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_interrogation_res.party_nb_type[0]),
1,										((NS_DIV_MX_INT_RESULT * 2) - 1),	7, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_interrogation_res.type_of_nb[0]),
1,										((NS_DIV_MX_INT_RESULT * 2) - 1),	8, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_interrogation_res.number_digits[0]),
sizeof (struct ns_asn1_string),		((NS_DIV_MX_INT_RESULT * 2) - 1),		9, 			255)

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_interrogation_res.extension[0]),
sizeof (struct ns_asn1_string),		(NS_DIV_MX_INT_RESULT - 1),				10, 		(NS_DIV_MX_INT_RESULT * 3))

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CheckRestriction operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CHK_DIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CHK_RESTRICT_DIV_ARG_P,2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_div_check_rest.basic_service),						0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_div_check_rest.srv_u_party_nb_type),				0,	0, 2, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_div_check_rest.div_party_nb_type),					0,	0, 2, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_div_check_rest.srv_u_type_of_nb),					0,	0, 4, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_div_check_rest.div_type_of_nb),						0,	0, 4, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_div_check_rest.srv_u_number_digits),	0,	0, 6, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_div_check_rest.div_number_digits),		0,	0, 6, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CHK_RESTRICT_DIV_ARG_P,4,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_div_check_rest.extension),				0,	0, 0, 0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CHK_DIV) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_div_chk_rst_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CallRerouting operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_REROUTING) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_REROUTING_DIV_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.reason),							0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_REROUTING_DIV_ARG_P,	3,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.counter),						0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_REROUTING_DIV_ARG_P,	6,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.subscription_option),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_REROUTING_DIV_ARG_P,	4,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.q931_ie),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.called_party_nb_type),			0,	0,	5,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.last_party_nb_type),				0,	0,	6,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.calling_party_nb_type),			0,	0,	7,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.orig_party_nb_type),				0,	0,	7,	8)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.called_type_of_nb),				0,	0,	9,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.last_type_of_nb),				0,	0,	10,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.calling_type_of_nb),				0,	0,	11,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.orig_type_of_nb),				0,	0,	11,	8)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.called_number_digits),	0,	0, 13, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.last_number_digits),	0,	0, 14, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.calling_number_digits),	0,	0, 15, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.orig_number_digits),	0,	0, 15, 8)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.last_presented_nb_type),			0,	0,	17,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.orig_presented_nb_type),			0,	0,	17,	8)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_SCREENED_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.calling_presented_nb_type),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.called_sub_add_type),			0,	0,	20,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.calling_sub_add_type),			0,	0,	20,	6)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_rerouteing.called_sub_add_odd_count),		0,	0,	22,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_div_rerouteing.calling_sub_add_odd_count),		0,	0,	22,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_P,				0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_rerouteing.calling_name_type),				0,	0,	0,	7)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.name_character[0]),				1,	2,	24, 3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.called_sub_address),0,	0,	26,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.calling_sub_address),0,	0,	27,	6)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.calling_name_data),	0,	0,	28,	7)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.redir_name_data),	0,	0,	29,	9)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_rerouteing.orig_name_data),	0,	0,	29,	10)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_SCREENED_P,		2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_rerouteing.calling_screening_ind),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_REROUTING_DIV_ARG_P,	13,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_div_rerouteing.extension),			0,	0,	0,	11)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_REROUTING) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_div_rerouting_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* DivertingLegInformation1 operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_LEG_1) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_LEG_INFO_1_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_1.reason),						0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_LEG_INFO_1_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_1.subscription_option),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_1.presented_nb_type),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_1.party_nb_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_1.type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_1.number_digits),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_LEG_INFO_1_ARG_P,	4,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_1.extension),		0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

	/* DivertingLegInformation2 operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_LEG_2) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_LEG_INFO_2_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_2.counter),							0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_LEG_INFO_2_ARG_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_2.reason),								0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_2.div_presented_nb_type),				0,	0,	3,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_2.orig_presented_nb_type),				0,	0,	3,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_2.div_party_nb_type),					0,	0,	5,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_div_leg_info_2.orig_party_nb_type),					0,	0,	5,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_2.div_type_of_nb),						0,	0,	7,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_2.orig_type_of_nb),					0,	0,	7,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_2.div_number_digits),		0,	0,	9,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_2.orig_number_digits),	0,	0,	9,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			1,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_2.redir_name_data),		0,	0,	11,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			1,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_2.orig_name_data),		0,	0,	11,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_div_leg_info_2.name_character[0]),					1,	1,	12, 3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_LEG_INFO_2_ARG_P,	7,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_div_leg_info_2.extension),				0,	0,	0,	6)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* DivertingLegInformation3 operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_LEG_3) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_LEG_INFO_3_ARG_P,	1,	NS_SS_INT_TYPE_BOOLEAN,		&ns_op_div_leg_info_3,									0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_div_leg_info_3.redir_character),			0,	0,	0,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			1,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_div_leg_info_3.redir_name),	0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DIV_LEG_INFO_3_ARG_P,	3,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_div_leg_info_3.extension),		0,	0,	0,	1)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CfnrDivertedLegFailed operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_LEG_FAIL) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_div_leg_fail_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#if (NS_SS_INTERACTIONS == ON) && ((NS_SS_CALL_OFFER == ON) || (NS_SS_CALL_INTRUSION == ON))

	/* Supplementary service interactions between Call Forwarding Busy and Call offer or Call intrusion */

		/* CfbOverride operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CFB_OVER) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_cfb_override_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#endif

#endif /* end of "NS_SS_DIVERSION = ON"} */

/*==========================================================================*/

		/*	Call Transfer SS
		 *	implementation of general ASN1 types (with ASN1 meta-programs)
		 * --------------------------------------------------------------- */

#if (NS_SS_CALL_TRANSFER == ON) || (NS_SS_PATH_REPLACEMENT == ON) /* { */

	/* CallTransferIdentify operation RESULT : SEQUENCE {
												callIdentity CallIdentity,
												reroutingNumber PartyNumber,
												resultExtension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_IDENTIFY_TRF_RES_P)
	D_ASN1_TYPE_FIELD_NB		(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_IDENTIFY_TRF_RES_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_FIELD				(NS_QSI_TRF_CALL_IDENTITY_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_trf_ident_extension)
ASN1_TYPE_END

	/* CallTransferSetup operation ARGUMENT : SEQUENCE {
												callIdentity CallIdentity,
												argumentExtension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_SETUP_TRF_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_SETUP_TRF_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_QSI_TRF_CALL_IDENTITY_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_trf_setup_extension)
ASN1_TYPE_END

#endif /* end of "NS_SS_CALL_TRANSFER = ON or NS_SS_PATH_REPLACEMENT == ON"} */

#if NS_SS_CALL_TRANSFER == ON /* { */

	/* CallTransferActive operation ARGUMENT : SEQUENCE {
												connectedAddress PresentedAddressScreened,
												basicCallInfoElements QSIGInformationElement OPTIONAL,
												connectedName Name OPTIONAL,
												argumentExtension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_ACTIVE_TRF_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_ACTIVE_TRF_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(4)
	ASN1_TYPE_FIELD				(NS_SS_PRES_ADDRESS_SCREENED_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_Q931_IE_P, Qsi_trf_active_ie)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_QSI_NAME_P, Qsi_trf_active_name)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_trf_active_extension)
ASN1_TYPE_END

	/* CallTransferComplete operation ARGUMENT : SEQUENCE {
													endDesignation EndDesignation,
													redirectionNumber PresentedNumberScreened,
													basicCallInfoElements QSIGInformationElement OPTIONAL,
													redirectionName Name OPTIONAL,
													callStatus CallStatus DEFAULT answered,
													argumentExtension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_COMPLETE_TRF_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(6)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_COMPLETE_TRF_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(6)
	ASN1_TYPE_FIELD				(NS_QSI_TRF_END_DESIGN_P)
	ASN1_TYPE_FIELD				(NS_SS_PRES_NB_SCREENED_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_Q931_IE_P, Qsi_trf_complete_ie)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_QSI_NAME_P, Qsi_trf_complete_name)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_TRF_CALL_STATUS_P, Qsi_trf_complete_status)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_trf_complete_extension)
ASN1_TYPE_END

	/* CallTransferUpdate operation ARGUMENT : SEQUENCE {
													redirectionNumber PresentedNumberScreened,
													redirectionName Name OPTIONAL,
													basicCallInfoElements QSIGInformationElement OPTIONAL,
													argumentExtension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_UPDATE_TRF_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(4)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_UPDATE_TRF_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(4)
	ASN1_TYPE_FIELD				(NS_SS_PRES_NB_SCREENED_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_QSI_NAME_P, Qsi_trf_update_name)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_Q931_IE_P, Qsi_trf_update_ie)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_trf_update_extension)
ASN1_TYPE_END

	/* SubaddressTransfer operation ARGUMENT : SEQUENCE {
												redirectionSubaddress PartySubaddress,
												argumentExtension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_SUBADD_TRF_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_SUBADD_TRF_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_SUBADDRESS_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_trf_subadd_extension)
ASN1_TYPE_END

		/*-=-=-=-=-=-=-=--=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* CallTransferIdentify operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_TRF_IDENT) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_trf_identify_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_TRF_IDENT) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_identify_res.party_nb_type),				0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_identify_res.type_of_nb),					0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_identify_res.call_identity),	0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_identify_res.rerouting_nb),	0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_IDENTIFY_TRF_RES_P,	3,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_trf_identify_res.extension),		0,	0, 0, 0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CallTransferAbandon operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_TRF_ABAND) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_trf_abandon_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CallTransferInitiate operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_TRF_INIT) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_initiate_arg.party_nb_type),				0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_initiate_arg.type_of_nb),					0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_initiate_arg.call_identity),	0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_initiate_arg.rerouting_nb),	0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_INITIATE_TRF_ARG_P,	3,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_trf_initiate_arg.extension),		0,	0, 0, 0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_TRF_INIT) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_trf_initiate_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CallTransferSetup operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_TRF_SETUP) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_setup_arg.call_identity),	0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_SETUP_TRF_ARG_P,		2,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_trf_setup_arg.extension),		0,	0, 0, 0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_TRF_SETUP) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_trf_setup_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CallTransferActive operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_TRF_ACTIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_ADDRESS_SCREENED_P,0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_active_arg.presented_add_type),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_active_arg.party_nb_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_active_arg.type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_active_arg.connected_nb),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_ADDRESS_SCREENED_P,		2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_active_arg.screening_ind),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_active_arg.sub_add_type),				0,	0,	0,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_trf_active_arg.sub_add_odd_count),			0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_active_arg.sub_add),		0,	0,	0,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_active_arg.name),			0,	0,	0,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_active_arg.ie),			0,	0,	0,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_P,				0,	NS_SS_CHOICE_INDEX,			&ns_op_qsi_trf_active_arg.name_type,	                0,	0,	0,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_active_arg.character),					0,	0,	0,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_ACTIVE_TRF_ARG_P,		4,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_trf_active_arg.extension),		0,	0,	0,	6)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CallTransferComplete operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_TRF_COMPL) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_COMPLETE_TRF_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_complete_arg.end_designation),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_COMPLETE_TRF_ARG_P,	5,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_complete_arg.call_status),				0,	0,	0,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_SCREENED_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_complete_arg.presented_nb_type),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_complete_arg.party_nb_type),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_complete_arg.type_of_nb),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_complete_arg.redir_nb),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_SCREENED_P,		2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_complete_arg.screening_ind),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_complete_arg.ie),			0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_P,				0,	NS_SS_CHOICE_INDEX,			&ns_op_qsi_trf_complete_arg.name_type,	                0,	0,	0,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_DATA_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_complete_arg.name),		0,	0,	0,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_complete_arg.character),				0,	0,	0,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_COMPLETE_TRF_ARG_P,	6,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_trf_complete_arg.extension),	0,	0,	0,	4)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CallTransferUpdate operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_TRF_UPDAT) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_SCREENED_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_update_arg.presented_nb_type),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_update_arg.party_nb_type),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_update_arg.type_of_nb),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_update_arg.redir_nb),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_SCREENED_P,		2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_update_arg.screening_ind),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_update_arg.ie),		0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_P,				0,	NS_SS_CHOICE_INDEX,			&ns_op_qsi_trf_update_arg.name_type,				0,	0,	0,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_DATA_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_update_arg.name),		0,	0,	0,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_NAME_SET_P,			2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_trf_update_arg.character),				0,	0,	0,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_UPDATE_TRF_ARG_P,		4,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_trf_update_arg.extension),	0,	0,	0,	2)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* SubaddressTransfer operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_TRF_SA) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_trf_subadd_arg.sub_add_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_trf_subadd_arg.sub_add_odd_count),			0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_trf_subadd_arg.redir_sub_add),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_SUBADD_TRF_ARG_P,		2,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_trf_subadd_arg.extension),		0,	0,	0,	1)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#endif /* end of "NS_SS_CALL_TRANSFER = ON"} */

/*==========================================================================*/

		/*	Path Replacement ANF (Additional Network Feature)
		 *	implementation of general ASN1 types (with ASN1 meta-programs)
		 * --------------------------------------------------------------- */

#if NS_SS_PATH_REPLACEMENT == ON /* { */

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* PathReplacePropose operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_PTHR_PROPO) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_pthr_propose_arg.party_nb_type),				0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_pthr_propose_arg.type_of_nb),					0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_pthr_propose_arg.call_identity),	0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_pthr_propose_arg.rerouting_nb),	0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_PROPOSE_PTHR_ARG_P,	3,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_pthr_propose_arg.extension),		0,	0, 0, 0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* PathReplaceSetup operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_PTHR_SETUP) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_pthr_setup_arg.call_identity),	0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_SETUP_TRF_ARG_P,		2,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_pthr_setup_arg.extension),		0,	0, 0, 0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_PTHR_SETUP) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_pthr_setup_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* PathReplaceRetain operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_PTHR_RET) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_pthr_retain_arg.party_nb_type),				0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_pthr_retain_arg.type_of_nb),				0,	0, 0, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_pthr_retain_arg.call_identity),0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_pthr_retain_arg.rerouting_nb),	0,	0, 3, 255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_RETAIN_PTHR_ARG_P,		3,	NS_SS_INT_TYPE_ANY,			(uchar FAR *)&(ns_op_qsi_pthr_retain_arg.extension),	0,	0, 0, 0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_PTHR_RET) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ANY,	(uchar FAR *)&ns_op_qsi_pthr_retain_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#endif /* end of "NS_SS_PATH_REPLACEMENT = ON"} */

/*==========================================================================*/

		/*	Call Offer SS
		 *	implementation of general ASN1 types (with ASN1 meta-programs)
		 * --------------------------------------------------------------- */

#if (NS_SS_CALL_OFFER == ON) || (NS_SS_DO_NOT_DISTURB == ON) || (NS_SS_CALL_INTRUSION == ON) /* { */

	/* ServiceList ::= BIT STRING(SIZE(1..32)) */

D_ASN1_TYPE_START		(NS_SS_QSI_SERVICE_LIST_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_SERVICE_LIST_P)
	ASN1_BIT_STRING,
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

	/* all operation ARGUMENT : CHOICE {serviceList ServiceList,
										extendedServiceList SEQUENCE {
											serviceList ServiceList,
											extension Extension}} */

D_ASN1_TYPE_START		(NS_QSI_EXTENDED_SRV_LIST_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_EXTENDED_SRV_LIST_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_QSI_SERVICE_LIST_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_QSI_EXTENSION_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_PATH_SERVICE_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_PATH_SERVICE_ARG_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_SS_QSI_SERVICE_LIST_P)
	ASN1_TYPE_LAST_FIELD	(NS_QSI_EXTENDED_SRV_LIST_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-=-=--=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* PathRetain operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_PATH_RET) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_PATH_SERVICE_ARG_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_path_retain_arg.choice_index),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_SERVICE_LIST_P,		0,	NS_SS_INT_TYPE_BIT_STRING,	(uchar FAR *)&(ns_op_qsi_path_retain_arg.service_list),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_path_retain_arg.extension),	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* ServiceAvailable operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_SRV_AVAIL) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_PATH_SERVICE_ARG_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_service_avail_arg.choice_index),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_SERVICE_LIST_P,		0,	NS_SS_INT_TYPE_BIT_STRING,	(uchar FAR *)&(ns_op_qsi_service_avail_arg.service_list),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_service_avail_arg.extension),		0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#endif /* end of "NS_SS_CALL_OFFER = ON or NS_SS_DO_NOT_DISTURB = ON or NS_SS_CALL_INTRUSION = ON"} */

#if NS_SS_CALL_OFFER == ON /* { */

		/* CallOfferRequest operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CO_RQ) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_co_request_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CO_RQ) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_co_request_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#endif /* end of "NS_SS_CALL_OFFER = ON"} */

/*==========================================================================*/

		/*	Do Not Disturb (DND) and Do Not Disturb Override (DNDO) SS
		 *	implementation of general ASN1 types (with ASN1 meta-programs)
		 * --------------------------------------------------------------- */

	/* DoNotDisturbOverride operation ARGUMENT : SEQUENCE {
													dndoCapabilityLevel DNDOCapabilityLevel,
													argumentExtension CHOICE {...} OPTIONAL} */

#if (NS_SS_DO_NOT_DISTURB == ON) || (NS_SS_CALL_INTRUSION == ON)

D_ASN1_TYPE_START		(NS_QSI_OVERRIDE_DNDO_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_OVERRIDE_DNDO_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_QSI_DNDO_CAP_LEVEL_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_dnd_override_extension)
ASN1_TYPE_END

#endif

#if NS_SS_DO_NOT_DISTURB == ON /* { */

	/* DoNotDisturbActivate operation ARGUMENT : SEQUENCE {
													basicService BasicService,
													servedUserNr PartyNumber,
													argumentExtension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_ACTIVATE_DND_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_ACTIVATE_DND_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_FIELD				(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_dnd_activ_arg_extension)
ASN1_TYPE_END

	/* DoNotDisturbActivate operation RESULT : SEQUENCE {
													status SET OF SEQUENCE{
														basicService BasicService,
														dndProtectionLevel DNDProtectionLevel OPTIONAL
													} OPTIONAL,
													resultExtension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_DND_SERVICE_PROTECT_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_DND_SERVICE_PROTECT_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_BASIC_SERVICE_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_QSI_DND_PROTECT_LEVEL_P, Qsi_dnd_protect_level)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_SS_QSI_DND_STATUS_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_SS_QSI_DND_STATUS_P)
	NS_ASN1_SET_OF
	ASN1_TYPE_FIELD_NB		(1)
	ASN1_TYPE_LAST_FIELD	(NS_QSI_DND_SERVICE_PROTECT_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_ACTIVATE_DND_RES_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_ACTIVATE_DND_RES_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_SS_QSI_DND_STATUS_P, Qsi_dnd_activ_status)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_dnd_activ_extension)
ASN1_TYPE_END

	/* DoNotDisturbInterrogate operation ARGUMENT : SEQUENCE {
														servedUserNr PartyNumber,
														argumentExtension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_INTEROG_DND_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_INTEROG_DND_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(2)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_dnd_interog_extension)
ASN1_TYPE_END

		/*-=-=-=-=-=-=-=--=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* DoNotDisturbActivate operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_DND_ACTIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_ACTIVATE_DND_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_activate_arg.basic_service),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_dnd_activate_arg.party_nb_type),				0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_activate_arg.type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_dnd_activate_arg.served_user_nb),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_dnd_activate_arg.extension),		0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_DND_ACTIV) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_DND_STATUS_P,		0,	NS_SS_SEQUENCE_OF_NB,		&(ns_op_qsi_dnd_activate_res.status_nb),				0,	0,	0,	NS_SS_QSI_MX_DND_STATUS)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DND_SERVICE_PROTECT_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_activate_res.basic_service[0]),			1,	(NS_SS_QSI_MX_DND_STATUS - 1),	1,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DND_SERVICE_PROTECT_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_activate_res.protect_level[0]),			1,	(NS_SS_QSI_MX_DND_STATUS - 1),	2,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_dnd_activate_res.extension),	0,	0,	0,	(NS_SS_QSI_MX_DND_STATUS + 1))

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* DoNotDisturbDeactivate operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_DND_DEA) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DEA_DND_ARG_P,			1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_dea_arg.basic_service),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_dnd_dea_arg.party_nb_type),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_dea_arg.type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_dnd_dea_arg.served_user_nb),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_dnd_dea_arg.extension),		0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_DND_DEA) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_dnd_dea_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* DoNotDisturbInterrogate operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_DND_INTER) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_dnd_interog_arg.party_nb_type),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_interog_arg.type_of_nb),					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_dnd_interog_arg.served_user_nb),	0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_dnd_interog_arg.extension),		0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_DND_INTER) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_DND_STATUS_P,		0,	NS_SS_SEQUENCE_OF_NB,		&(ns_op_qsi_dnd_interog_res.status_nb),				0,	0,	0,	NS_SS_QSI_MX_DND_STATUS)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DND_SERVICE_PROTECT_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_interog_res.basic_service[0]),		1,	(NS_SS_QSI_MX_DND_STATUS - 1),	1,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_DND_SERVICE_PROTECT_P,	2,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_interog_res.protect_level[0]),		1,	(NS_SS_QSI_MX_DND_STATUS - 1),	2,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_dnd_interog_res.extension),0,	0,	0,	(NS_SS_QSI_MX_DND_STATUS + 1))

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* DoNotDisturbOverride operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_DND_OVER) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_OVERRIDE_DNDO_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_dnd_override_arg.capability_level),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_dnd_override_arg.extension),	0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* DoNotDisturbOvrExecute operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_DNDO_EXEC) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_dndo_exec_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_DNDO_EXEC) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_dndo_exec_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#endif /* end of "NS_SS_DO_NOT_DISTURB = ON"} */

/*==========================================================================*/

		/* Call Completion SS, including 2 services : Call Completion
		 * to Busy Subscriber (CCBS), Call Completion on No Reply (CCNR)
		 * ------------------------------------------------------------- */

#if NS_SS_CCBS == ON	/* { */

	/* CcbsRequest operation ARGUMENT : SEQUENCE {
											numberA PresentedNumberUnscreened,
											numberB PartyNumber,
											service QSIGInformationElement,
											subaddrA [10] PartySubaddress OPTIONAL,
											subaddrB [11] PartySubaddress OPTIONAL,
											can-retain-service [12] IMPLICIT BOOLEAN DEFAULT FALSE,
											retain-sig-connection [13] IMPLICIT BOOLEAN OPTIONAL,
											extension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_CCBS_SUBADD_A_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_SUBADD_A_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 10)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_PARTY_SUBADDRESS_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_CCBS_SUBADD_B_P)
	D_ASN1_TYPE_FIELD_NB	(1)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_SUBADD_B_P)
	ASN1_TYPE_IDENT			(ASN1_TYPE_ID_NIL, ASN1_TYPE_NO_IMPLICIT_KEYW,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 11)
	ASN1_TYPE_FIELD_NB			(1)
	ASN1_TYPE_LAST_FIELD		(NS_SS_PARTY_SUBADDRESS_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_CCBS_CAN_RET_SRV_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_CAN_RET_SRV_P)
	ASN1_TYPE_IDENT			(ASN1_BOOLEAN_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 12)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_CCBS_RET_SIG_CONN_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_RET_SIG_CONN_P)
	ASN1_TYPE_IDENT			(ASN1_BOOLEAN_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 13)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_CCBS_REQUEST_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(8)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_REQUEST_ARG_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(8)
	ASN1_TYPE_FIELD				(NS_SS_PRES_NB_UNSCREENED_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_FIELD				(NS_SS_Q931_IE_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CCBS_SUBADD_A_P, Qsi_ccbs_rq_subadd_a)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CCBS_SUBADD_B_P, Qsi_ccbs_rq_subadd_b)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CCBS_CAN_RET_SRV_P, Qsi_ccbs_rq_can_ret_srv)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CCBS_RET_SIG_CONN_P, Qsi_ccbs_rq_ret_sig_conn)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_ccbs_rq_extension)
ASN1_TYPE_END

	/* CcbsRequest operation RESULT : SEQUENCE {
										no-path-reservation [0] IMPLICIT BOOLEAN DEFAULT FALSE,
										retain-service [1] IMPLICIT BOOLEAN DEFAULT FALSE,
										extension CHOICE {...} OPTIONAL} */

D_ASN1_TYPE_START		(NS_QSI_CCBS_PATH_RESERV_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_PATH_RESERV_P)
	ASN1_TYPE_IDENT			(ASN1_BOOLEAN_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_CCBS_RET_SRV_P)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_RET_SRV_P)
	ASN1_TYPE_IDENT			(ASN1_BOOLEAN_TYPE_ID, ASN1_TYPE_IMPLICIT,
							 ASN1_TYPE_CLASS_CONTEXT_SPFC, 1)
	ASN1_TYPE_NO_FIELD
ASN1_TYPE_END

		/*-=-=-=-=-=-*/

D_ASN1_TYPE_START		(NS_QSI_CCBS_REQUEST_RES_P)
	D_ASN1_TYPE_FIELD_NB		(3)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_REQUEST_RES_P)
	NS_ASN1_SEQUENCE
	ASN1_TYPE_FIELD_NB			(3)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CCBS_PATH_RESERV_P, Qsi_ccbs_rq_path_reserv)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CCBS_RET_SRV_P, Qsi_ccbs_rq_res_ret_srv)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_ccbs_rq_res_extension)
ASN1_TYPE_END

	/* CcOptionalArg ::= CHOICE {fullArg [0] IMPLICIT SEQUENCE {
														numberA PartyNumber,
														numberB PartyNumber,
														service QSIGInformationElement,
														subaddrA [10] PartySubaddress OPTIONAL,
														subaddrB [11] PartySubaddress OPTIONAL,
														extension CHOICE {...} OPTIONAL},
								 extArg CHOICE {...}} */

D_ASN1_TYPE_START		(NS_QSI_CCBS_FULL_ARG_P)
	D_ASN1_TYPE_FIELD_NB		(6)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_FULL_ARG_P)
	ASN1_TYPE_IDENT				(ASN1_SEQUENCE_TYPE_ID, ASN1_TYPE_IMPLICIT,
								 ASN1_TYPE_CLASS_CONTEXT_SPFC, 0)
	ASN1_TYPE_FIELD_NB			(6)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_FIELD				(NS_SS_PARTY_NUMBER_P)
	ASN1_TYPE_FIELD				(NS_SS_Q931_IE_P)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CCBS_SUBADD_A_P, Qsi_ccbs_optional_subadd_a)
	ASN1_TYPE_OPTIONAL_FIELD	(NS_QSI_CCBS_SUBADD_B_P, Qsi_ccbs_optional_subadd_b)
	ASN1_TYPE_OPT_LAST_FIELD	(NS_SS_QSI_EXTENSION_P, Qsi_ccbs_optional_extension)
ASN1_TYPE_END

D_ASN1_TYPE_START		(NS_QSI_CCBS_OPTIONAL_ARG_P)
	D_ASN1_TYPE_FIELD_NB	(2)
D_ASN1_TYPE_END

ASN1_TYPE_START			(NS_QSI_CCBS_OPTIONAL_ARG_P)
	NS_ASN1_CHOICE
	ASN1_TYPE_FIELD_NB		(2)
	ASN1_TYPE_FIELD			(NS_QSI_CCBS_FULL_ARG_P)
	ASN1_TYPE_LAST_FIELD	(NS_SS_QSI_EXTENSION_P)
ASN1_TYPE_END

		/*-=-=-=-=-=-=-=--=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* CcbsRequest operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CCBS_RQ) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_t_rq_arg.presented_nbA_type),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.q931_ie),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_t_rq_arg.dest_party_nb_t),				0,	0,	3,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_t_rq_arg.orig_party_nb_t),				0,	0,	3,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_t_rq_arg.dest_t_of_nb),				0,	0,	5,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_ccbs_t_rq_arg.orig_t_of_nb),				0,	0,	5,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.dest_nb_digits),	0,	0,	7,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.orig_nb_digits),	0,	0,	7,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_t_rq_arg.dest_sa_type),				0,	0,	9,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_ccbs_t_rq_arg.orig_sa_type),				0,	0,	9,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.dest_sub_add),	0,	0,	11,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.orig_sub_add),	0,	0,	11,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_t_rq_arg.dest_sa_odd_c),				0,	0,	13,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_t_rq_arg.orig_sa_odd_c),				0,	0,	13,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_REQUEST_ARG_P,	6,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_t_rq_arg.retention),					0,	0,	0,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_REQUEST_ARG_P,	7,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_t_rq_arg.pres_allow),					0,	0,	0,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_t_rq_arg.extension),		0,	0,	0,	6)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CCBS_RQ) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_REQUEST_RES_P,	1,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_status_rq_arg.recall_mode),			0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_REQUEST_RES_P,	2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_ccbs_status_rq_arg.reference),				0,	0,	0,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_ccbs_status_rq_arg.q931_ie),	0,	0,	0,	2)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CcnrRequest operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CCNR_RQ) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PRES_NB_UNSCREENED_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_ccnr_request_arg.presented_nbA_type),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ccnr_request_arg.q931_ie),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_ccnr_request_arg.dest_party_nb_t),				0,	0,	3,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_ccnr_request_arg.orig_party_nb_t),				0,	0,	3,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_ccnr_request_arg.dest_t_of_nb),					0,	0,	5,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_ccnr_request_arg.orig_t_of_nb),					0,	0,	5,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ccnr_request_arg.dest_nb_digits),	0,	0,	7,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ccnr_request_arg.orig_nb_digits),	0,	0,	7,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_ccnr_request_arg.dest_sa_type),					0,	0,	9,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_ccnr_request_arg.orig_sa_type),					0,	0,	9,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ccnr_request_arg.dest_sub_add),	0,	0,	11,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ccnr_request_arg.orig_sub_add),	0,	0,	11,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_ccnr_request_arg.dest_sa_odd_c),				0,	0,	13,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_ccnr_request_arg.orig_sa_odd_c),				0,	0,	13,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_REQUEST_ARG_P,	6,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_ccnr_request_arg.retention),					0,	0,	0,	4)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_REQUEST_ARG_P,	7,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_ccnr_request_arg.pres_allow),					0,	0,	0,	5)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ccnr_request_arg.extension),		0,	0,	0,	6)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CCNR_RQ) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_REQUEST_RES_P,	1,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_ccnr_request_res.recall_mode),			0,	0,	0,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_REQUEST_RES_P,	2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_ccnr_request_res.reference),			0,	0,	0,	1)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ccnr_request_res.q931_ie),	0,	0,	0,	2)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CcCancel operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CC_CANCEL) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_OPTIONAL_ARG_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_cancel_arg.presented_nbA_type),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_cancel_arg.q931_ie),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_cancel_arg.dest_party_nb_t),				0,	0,	3,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_cancel_arg.orig_party_nb_t),				0,	0,	3,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_cc_cancel_arg.dest_t_of_nb),				0,	0,	5,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_cc_cancel_arg.orig_t_of_nb),				0,	0,	5,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_cancel_arg.dest_nb_digits),	0,	0,	7,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_cancel_arg.orig_nb_digits),	0,	0,	7,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_cancel_arg.dest_sa_type),				0,	0,	9,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_cancel_arg.orig_sa_type),				0,	0,	9,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_cancel_arg.dest_sub_add),	0,	0,	11,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_cancel_arg.orig_sub_add),	0,	0,	11,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_cc_cancel_arg.dest_sa_odd_c),				0,	0,	13,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_cc_cancel_arg.orig_sa_odd_c),				0,	0,	13,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_OPTIONAL_ARG_P,	2,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_cc_cancel_ext,					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_FULL_ARG_P,		6,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_cancel_arg.extension),		0,	0,	0,	4)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CcExecPossible operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CC_EXEC_P) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_OPTIONAL_ARG_P,	0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_exec_possib_arg.presented_nbA_type),			0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_Q931_IE_P,				0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_exec_possib_arg.q931_ie),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_exec_possib_arg.dest_party_nb_t),			0,	0,	3,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_NUMBER_P,			0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_exec_possib_arg.orig_party_nb_t),			0,	0,	3,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_cc_exec_possib_arg.dest_t_of_nb),				0,	0,	5,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PUBLIC_PRIV_PARTY_NB_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_cc_exec_possib_arg.orig_t_of_nb),				0,	0,	5,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_exec_possib_arg.dest_nb_digits),0,	0,	7,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_NUMBER_DIGITS_P,		0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_exec_possib_arg.orig_nb_digits),0,	0,	7,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_exec_possib_arg.dest_sa_type),				0,	0,	9,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_PARTY_SUBADDRESS_P,		0,	NS_SS_CHOICE_INDEX,			&(ns_op_qsi_cc_exec_possib_arg.orig_sa_type),				0,	0,	9,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_exec_possib_arg.dest_sub_add),	0,	0,	11,	2)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_OCTET_STRING_P,			0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_exec_possib_arg.orig_sub_add),	0,	0,	11,	3)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_cc_exec_possib_arg.dest_sa_odd_c),				0,	0,	13,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_USER_SPEC_SUBADD_P,		2,	NS_SS_INT_TYPE_BOOLEAN,		&(ns_op_qsi_cc_exec_possib_arg.orig_sa_odd_c),				0,	0,	13,	0)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_OPTIONAL_ARG_P,	2,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_cc_exec_possib_ext,					0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CCBS_FULL_ARG_P,		6,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_cc_exec_possib_arg.extension),		0,	0,	0,	4)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CcPathReserve operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CC_PATH_R) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_cc_path_reserve_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CC_PATH_R) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_cc_path_reserve_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CcRingout operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CC_RING) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_cc_ringout,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CcSuspend operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CC_SUSP) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_cc_suspend,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CcResume operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CC_RESUME) /* { */
								/*	 	p_pc					field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_cc_resume,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#endif	/* end of "NS_SS_CCBS = ON"} */

/*==========================================================================*/

		/* Call Intrusion SS
		 * ----------------- */

#if NS_SS_CALL_INTRUSION == ON	/* { */

	/* Tables used to decode and store data of ARGUMENT and RESULT clauses */

		/* CallIntrusionrequest operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CI_RQ) /* { */
								/*	 	p_pc						field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CI_REQUEST_ARG_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_ci_request_arg.capability_level),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ci_request_arg.extension),	0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CI_RQ) /* { */
								/*	 	p_pc				field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CI_REQUEST_RES_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_ci_request_res.capability_level),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ci_request_res.extension),	0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

		/* CallIntrusionGetCIPL operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CI_GETCIP) /* { */
								/*	 	p_pc				field_nb	type						p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_ci_get_cipl_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CI_GETCIP) /* { */
								/*	 	p_pc				field_nb	type							p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_QSI_CI_GET_CIPL_RES_P,	1,	NS_SS_INT_TYPE_UCHAR,		&(ns_op_qsi_ci_get_cipl_res.capability_level),		0,	0,	0,	255)
	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&(ns_op_qsi_ci_get_cipl_res.extension),0,	0,	0,	0)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

	/* CallIntrusionForcedRelease operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CI_FORCED) /* { */
								/*	 	p_pc				field_nb	type						p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_ci_forced_rel_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CI_FORCED) /* { */
								/*	 	p_pc				field_nb	type						p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_ci_forced_rel_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

	/* CallIntrusionIsolate operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CI_ISOL) /* { */
								/*	 	p_pc				field_nb	type						p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_ci_isolate_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CI_ISOL) /* { */
								/*	 	p_pc				field_nb	type						p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_ci_isolate_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

	/* CallIntrusionWOBRequest operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CI_WOBRQ) /* { */
								/*	 	p_pc				field_nb	type						p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_ci_wob_rq_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_RES_CTX_LIST_CI_WOBRQ) /* { */
								/*	 	p_pc				field_nb	type						p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_ci_wob_rq_res,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

	/* CallIntrusionCompleted operation */

Ns_qsi_table_or_function (ns_asn1_store_desc, NS_QSI_ARG_CTX_LIST_CI_COMPL) /* { */
								/*	 	p_pc				field_nb	type						p_struct			instance_interval, repetition, next_entry, optional_x */

	Ns_ss_store_desc_entry ((uchar FAR *)&NS_SS_QSI_EXTENSION_P,	0,	NS_SS_INT_TYPE_ASN1_STRING,	(uchar FAR *)&ns_op_qsi_ci_completed_arg,	0,	0,	0,	255)

	Ns_ss_store_desc_entry (P_NIL,	0,	0,	0, 0, 0, 0, 0)		/* shall stay at the end */
Ns_qsi_end_table_or_function /* } */

#endif	/* end of "NS_SS_CALL_INTRUSION = ON"} */

/*==========================================================================

			- Q-SIG specific tables for operations and errors -
*/

Ns_qsi_table_or_function (ns_ss_operation, NS_QSI_OPERATION_TAB) /* { */
					/* 	interface identifier	operation tag		operation value			p_argument_prog
		p_arg_ctx_list					p_result_prog									p_res_ctx_list,					ssdu_fct */

#if NS_SS_NAME_IDENT == ON
	Ns_ss_op_tab_entry (NS_OP_QSI_CALLING_NAME_ID,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_NAME_CALLING,	(uchar FAR *)&NS_QSI_NAME_IDENT_ARG_P,
		NS_QSI_ARG_CTX_LIST_CLING_NM,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_name_ident)

	Ns_ss_op_tab_entry (NS_OP_QSI_CALLED_NAME_ID,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_NAME_CALLED,	(uchar FAR *)&NS_QSI_NAME_IDENT_ARG_P,
		NS_QSI_ARG_CTX_LIST_CALLED_NM,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_name_ident)

	Ns_ss_op_tab_entry (NS_OP_QSI_CONNECTED_NAME_ID,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_NAME_CONNECTED,	(uchar FAR *)&NS_QSI_NAME_IDENT_ARG_P,
		NS_QSI_ARG_CTX_LIST_CON_NM,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_name_ident)

	Ns_ss_op_tab_entry (NS_OP_QSI_BUSY_NAME_ID,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_NAME_BUSY,	(uchar FAR *)&NS_QSI_NAME_IDENT_ARG_P,
		NS_QSI_ARG_CTX_LIST_BUSY_NM,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_name_ident)
#endif

#if NS_SS_DIVERSION == ON
	Ns_ss_op_tab_entry (NS_OP_QSI_ACT_DIVERSION,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DIV_ACTIVATE,	(uchar FAR *)&NS_QSI_ACTIVATE_DIV_ARG_P,
		NS_QSI_ARG_CTX_LIST_ACTIV_DIV,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_ACTIV_DIV,	ns_ssdu_op_qsi_activate_div)

	Ns_ss_op_tab_entry (NS_OP_QSI_DEACT_DIVERSION,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DIV_DEACTIVATE,	(uchar FAR *)&NS_QSI_DEA_DIV_ARG_P,
		NS_QSI_ARG_CTX_LIST_DEA_DIV,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_DEA_DIV,	ns_ssdu_op_qsi_dea_div)

	Ns_ss_op_tab_entry (NS_OP_QSI_INTEROG_DIVERSION,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DIV_INTERROG,	(uchar FAR *)&NS_QSI_INTERROG_DIV_ARG_P,
		NS_QSI_ARG_CTX_LIST_INTER_DIV,	(uchar FAR *)&NS_QSI_DIV_INT_RESULT_LIST_P,	NS_QSI_RES_CTX_LIST_INTER_DIV,	ns_ssdu_op_qsi_interog_div)

	Ns_ss_op_tab_entry (NS_OP_QSI_CHECK_RESTRICT,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DIV_CHECK_REST,	(uchar FAR *)&NS_QSI_CHK_RESTRICT_DIV_ARG_P,
		NS_QSI_ARG_CTX_LIST_CHK_DIV,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_CHK_DIV,	ns_ssdu_op_qsi_chk_rst_div)

	Ns_ss_op_tab_entry (NS_OP_QSI_CALL_REROUTING,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DIV_REROUTING,	(uchar FAR *)&NS_QSI_REROUTING_DIV_ARG_P,
		NS_QSI_ARG_CTX_LIST_REROUTING,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_REROUTING,	ns_ssdu_op_qsi_rerouting_div)

	Ns_ss_op_tab_entry (NS_OP_QSI_DIVERTING_LEG_I_1,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DIV_LEG_INFO1,	(uchar FAR *)&NS_QSI_DIV_LEG_INFO_1_ARG_P,
		NS_QSI_ARG_CTX_LIST_LEG_1,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_div_leg_1)

	Ns_ss_op_tab_entry (NS_OP_QSI_DIVERTING_LEG_I_2,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DIV_LEG_INFO2,	(uchar FAR *)&NS_QSI_DIV_LEG_INFO_2_ARG_P,
		NS_QSI_ARG_CTX_LIST_LEG_2,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_div_leg_2)

	Ns_ss_op_tab_entry (NS_OP_QSI_DIVERTING_LEG_I_3,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DIV_LEG_INFO3,	(uchar FAR *)&NS_QSI_DIV_LEG_INFO_3_ARG_P,
		NS_QSI_ARG_CTX_LIST_LEG_3,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_div_leg_3)

	Ns_ss_op_tab_entry (NS_OP_QSI_CFNR_DIV_LEG_FAIL,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DIV_CFNR_FAIL,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_LEG_FAIL,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_leg_fail_div)

#if (NS_SS_INTERACTIONS == ON) && ((NS_SS_CALL_OFFER == ON) || (NS_SS_CALL_INTRUSION == ON))
	Ns_ss_op_tab_entry (NS_OP_QSI_CFB_OVERRIDE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CFB_OVERRIDE,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CFB_OVER,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_leg_fail_div)
#endif

#endif

#if NS_SS_CALL_TRANSFER == ON
	Ns_ss_op_tab_entry (NS_OP_QSI_TRF_IDENTIFY,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_TRF_IDENTIFY,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_TRF_IDENT,	(uchar FAR *)&NS_QSI_IDENTIFY_TRF_RES_P,	NS_QSI_RES_CTX_LIST_TRF_IDENT,	ns_ssdu_op_qsi_trf_identify)

	Ns_ss_op_tab_entry (NS_OP_QSI_TRF_ABANDON,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_TRF_ABANDON,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_TRF_ABAND,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_trf_abandon)

	Ns_ss_op_tab_entry (NS_OP_QSI_TRF_INITIATE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_TRF_INITIATE,	(uchar FAR *)&NS_QSI_INITIATE_TRF_ARG_P,
		NS_QSI_ARG_CTX_LIST_TRF_INIT,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_TRF_INIT,	ns_ssdu_op_qsi_trf_initiate)

	Ns_ss_op_tab_entry (NS_OP_QSI_TRF_SETUP,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_TRF_SETUP,	(uchar FAR *)&NS_QSI_SETUP_TRF_ARG_P,
		NS_QSI_ARG_CTX_LIST_TRF_SETUP,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_TRF_SETUP,	ns_ssdu_op_qsi_trf_setup)

	Ns_ss_op_tab_entry (NS_OP_QSI_TRF_ACTIVE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_TRF_ACTIVE,	(uchar FAR *)&NS_QSI_ACTIVE_TRF_ARG_P,
		NS_QSI_ARG_CTX_LIST_TRF_ACTIV,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_trf_active)

	Ns_ss_op_tab_entry (NS_OP_QSI_TRF_COMPLETE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_TRF_COMPLETE,	(uchar FAR *)&NS_QSI_COMPLETE_TRF_ARG_P,
		NS_QSI_ARG_CTX_LIST_TRF_COMPL,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_trf_complete)

	Ns_ss_op_tab_entry (NS_OP_QSI_TRF_UPDATE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_TRF_UPDATE,	(uchar FAR *)&NS_QSI_UPDATE_TRF_ARG_P,
		NS_QSI_ARG_CTX_LIST_TRF_UPDAT,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_trf_update)

	Ns_ss_op_tab_entry (NS_OP_QSI_TRF_SUBADD,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_TRF_SUBADD,	(uchar FAR *)&NS_QSI_SUBADD_TRF_ARG_P,
		NS_QSI_ARG_CTX_LIST_TRF_SA,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_trf_subadd)
#endif

#if NS_SS_PATH_REPLACEMENT == ON
	Ns_ss_op_tab_entry (NS_OP_QSI_PTHR_PROPOSE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_PTHR_PROPOSE,	(uchar FAR *)&NS_QSI_PROPOSE_PTHR_ARG_P,
		NS_QSI_ARG_CTX_LIST_PTHR_PROPO,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_pthr_propose)

	Ns_ss_op_tab_entry (NS_OP_QSI_PTHR_RETAIN,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_PTHR_RETAIN,	(uchar FAR *)&NS_QSI_RETAIN_PTHR_ARG_P,
		NS_QSI_ARG_CTX_LIST_PTHR_RET,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_PTHR_RET,	ns_ssdu_op_qsi_pthr_retain)

	Ns_ss_op_tab_entry (NS_OP_QSI_PTHR_SETUP,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_PTHR_SETUP,	(uchar FAR *)&NS_QSI_SETUP_PTHR_ARG_P,
		NS_QSI_ARG_CTX_LIST_PTHR_SETUP,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_PTHR_SETUP,	ns_ssdu_op_qsi_pthr_setup)
#endif

#if NS_SS_CALL_OFFER == ON
	Ns_ss_op_tab_entry (NS_OP_QSI_CO_REQUEST,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CO_REQUEST,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CO_RQ,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_CO_RQ,	ns_ssdu_op_qsi_co_request)
#endif

#if (NS_SS_CALL_OFFER == ON) || (NS_SS_DO_NOT_DISTURB == ON) || (NS_SS_CALL_INTRUSION == ON)
	Ns_ss_op_tab_entry (NS_OP_QSI_PATH_RETAIN,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_PATH_RETAIN,	(uchar FAR *)&NS_QSI_PATH_SERVICE_ARG_P,
		NS_QSI_ARG_CTX_LIST_PATH_RET,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_path_service)

	Ns_ss_op_tab_entry (NS_OP_QSI_SERVICE_AVAIL,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_SERVICE_AVAIL,	(uchar FAR *)&NS_QSI_PATH_SERVICE_ARG_P,
		NS_QSI_ARG_CTX_LIST_SRV_AVAIL,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_path_service)
#endif

#if NS_SS_DO_NOT_DISTURB == ON
	Ns_ss_op_tab_entry (NS_OP_QSI_DND_ACTIVATE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DND_ACTIVATE,	(uchar FAR *)&NS_QSI_ACTIVATE_DND_ARG_P,
		NS_QSI_ARG_CTX_LIST_DND_ACTIV,	(uchar FAR *)&NS_QSI_ACTIVATE_DND_RES_P,	NS_QSI_RES_CTX_LIST_DND_ACTIV,	ns_ssdu_op_qsi_dnd_activate)

	Ns_ss_op_tab_entry (NS_OP_QSI_DND_DEACTIVATE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DND_DEACTIVATE,	(uchar FAR *)&NS_QSI_DEA_DND_ARG_P,
		NS_QSI_ARG_CTX_LIST_DND_DEA,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_DND_DEA,	ns_ssdu_op_qsi_dnd_dea)

	Ns_ss_op_tab_entry (NS_OP_QSI_DND_INTERROGATE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DND_INTEROG,	(uchar FAR *)&NS_QSI_INTEROG_DND_ARG_P,
		NS_QSI_ARG_CTX_LIST_DND_INTER,	(uchar FAR *)&NS_QSI_INTEROG_DND_RES_P,	NS_QSI_RES_CTX_LIST_DND_INTER,	ns_ssdu_op_qsi_dnd_inter)

	Ns_ss_op_tab_entry (NS_OP_QSI_DND_OVERRIDE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DND_OVERRIDE,	(uchar FAR *)&NS_QSI_OVERRIDE_DNDO_ARG_P,
		NS_QSI_ARG_CTX_LIST_DND_OVER,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_dnd_override)

	Ns_ss_op_tab_entry (NS_OP_QSI_DND_OVER_EXEC,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_DND_OVER_EXEC,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_DNDO_EXEC,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_DNDO_EXEC,	ns_ssdu_op_qsi_dnd_ovr_exec)
#endif

#if NS_SS_CCBS == ON
	Ns_ss_op_tab_entry (NS_OP_QSI_CCBS_RQ,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CCBS_REQUEST,	(uchar FAR *)&NS_QSI_CCBS_REQUEST_ARG_P,
		NS_QSI_ARG_CTX_LIST_CCBS_RQ,	(uchar FAR *)&NS_QSI_CCBS_REQUEST_RES_P,	NS_QSI_RES_CTX_LIST_CCBS_RQ,	ns_ssdu_op_qsi_ccbs_rq)

	Ns_ss_op_tab_entry (NS_OP_QSI_CCNR_RQ,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CCNR_REQUEST,	(uchar FAR *)&NS_QSI_CCBS_REQUEST_ARG_P,
		NS_QSI_ARG_CTX_LIST_CCNR_RQ,	(uchar FAR *)&NS_QSI_CCBS_REQUEST_RES_P,	NS_QSI_RES_CTX_LIST_CCNR_RQ,	ns_ssdu_op_qsi_ccbs_rq)

	Ns_ss_op_tab_entry (NS_OP_QSI_CC_CANCEL,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CC_CANCEL,	(uchar FAR *)&NS_QSI_CCBS_OPTIONAL_ARG_P,
		NS_QSI_ARG_CTX_LIST_CC_CANCEL,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_ccbs_rq)

	Ns_ss_op_tab_entry (NS_OP_QSI_CC_EXEC_POSSIBLE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CC_EXEC_POSSIB,	(uchar FAR *)&NS_QSI_CCBS_OPTIONAL_ARG_P,
		NS_QSI_ARG_CTX_LIST_CC_EXEC_P,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_ccbs_rq)

	Ns_ss_op_tab_entry (NS_OP_QSI_CC_PATH_RESERVE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CC_PATH_RES,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CC_PATH_R,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_CC_PATH_R,	ns_ssdu_op_qsi_ccbs_ci_op)

	Ns_ss_op_tab_entry (NS_OP_QSI_CC_RINGOUT,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CC_RINGOUT,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CC_RING,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_ccbs_ci_op)

	Ns_ss_op_tab_entry (NS_OP_QSI_CC_SUSPEND,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CC_SUSPEND,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CC_SUSP,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_ccbs_ci_op)

	Ns_ss_op_tab_entry (NS_OP_QSI_CC_RESUME,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CC_RESUME,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CC_RESUME,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_ccbs_ci_op)
#endif

#if NS_SS_CALL_INTRUSION == ON
	Ns_ss_op_tab_entry (NS_OP_QSI_CI_RQ,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CI_REQUEST,	(uchar FAR *)&NS_QSI_CI_REQUEST_ARG_P,
		NS_QSI_ARG_CTX_LIST_CI_RQ,	(uchar FAR *)&NS_QSI_CI_REQUEST_RES_P,	NS_QSI_RES_CTX_LIST_CI_RQ,	ns_ssdu_op_qsi_ci_rq_get_cipl)

	Ns_ss_op_tab_entry (NS_OP_QSI_CI_GET_CIPL,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CI_GET_CIPL,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CI_GETCIP,	(uchar FAR *)&NS_QSI_CI_GET_CIPL_RES_P,	NS_QSI_RES_CTX_LIST_CI_GETCIP,	ns_ssdu_op_qsi_ci_rq_get_cipl)

	Ns_ss_op_tab_entry (NS_OP_QSI_CI_ISOLATE,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CI_ISOLATE,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CI_ISOL,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_CI_ISOL,	ns_ssdu_op_qsi_ccbs_ci_op)

	Ns_ss_op_tab_entry (NS_OP_QSI_CI_FORCED_REL,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CI_FORCED_REL,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CI_FORCED,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_CI_FORCED,	ns_ssdu_op_qsi_ccbs_ci_op)

	Ns_ss_op_tab_entry (NS_OP_QSI_CI_WOB_RQ,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CI_WOB_REQUEST,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CI_WOBRQ,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,	NS_QSI_RES_CTX_LIST_CI_WOBRQ,	ns_ssdu_op_qsi_ccbs_ci_op)

	Ns_ss_op_tab_entry (NS_OP_QSI_CI_COMPLETED,	FAC_OBJECT_ID_TAG,	NS_OP_VAL_QSI_CI_COMPLETED,	(uchar FAR *)&NS_SS_QSI_EXTENSION_P,
		NS_QSI_ARG_CTX_LIST_CI_COMPL,	P_NIL,	P_NIL,	ns_ssdu_op_qsi_ccbs_ci_op)
#endif

Ns_qsi_end_table_or_function /* } */

/* EOF */
