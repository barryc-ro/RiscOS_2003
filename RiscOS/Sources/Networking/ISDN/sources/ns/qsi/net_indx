/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_indx.qsi
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the ECMA_QSIG specific options and parameters
 * 		  of the NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/


		/* TABLES ID FOR THE LISTS OF VALID IE FIELDS VALUES (NET_IE.QSI) */

					/* Table ID */

#define QSI_T_ASSIGN				1			/* assign */
#define QSI_T_BAND					2			/* band */
#define QSI_T_CALL_STATE			3			/* call state */
#define QSI_T_NB_PLAN				4			/* called number plan */
#define QSI_T_NB_TYPE				5			/* called number type */
#define QSI_T_CALLING_NB_PRES		6			/* calling number presentation indicator */
#define QSI_T_CHAN_PREF_EXCL		7 			/* channel prefferred or exclusive */
#define QSI_T_CODING_STD			8 			/* coding standard */
#define QSI_T_DATA_BIT				9 			/* data bit format */
#define QSI_T_DUPLEX				10			/* dulpex mode */
#define QSI_T_FLOW_CONTROL_RX		11			/* flow control Rx */
#define QSI_T_FLOW_CONTROL_TX		12			/* flow control Tx */
#define QSI_T_HEADER				13			/* Header */
#define QSI_T_INTER_RATE			14			/* interface rate */
#define QSI_T_INTERPRETATION		15			/* interpretation */
#define QSI_T_LLI					16			/* logical link identifier */
#define QSI_T_LOCATION				17			/* location */
#define QSI_T_MODEM					18			/* modem type */
#define QSI_T_MULTI_FRAME			19			/* multi_frame */
#define QSI_T_NEGOTIATION			20			/* negotiation */
#define QSI_T_NIC_RX				21			/* network independent clock Reception */
#define QSI_T_NIC_TX				22			/* network independent clock Transmission */
#define	QSI_T_PARTY_CATEGORY		23			/* party category */
#define QSI_T_OP_MODE				24          /* op mode */
#define QSI_T_OUT_BAND_NEG			25			/* out band neg */
#define QSI_T_PARITY			 	26			/* parity */
#define QSI_T_PROGRESS_LOCATION		27			/* Progress location */
#define QSI_T_PROTOCOL_ID_LLC_1		28			/* layer 1 protocol identifier for LLC */
#define QSI_T_PROTOCOL_ID_LLC_2		29			/* layer 2 protocol identifier in LLC */
#define QSI_T_PROTOCOL_ID_LLC_3		30			/* layer 3 protocol identifier in LLC */
#define QSI_T_RESTART_IND_CLASS		31			/* restart indicator class */
#define QSI_T_SCREEN_IND			32			/* screening indicator */
#define QSI_T_STATUS_CONDITION		33			/* status / condition */
#define QSI_T_STOP_BIT				34			/* stop bit format */
#define QSI_T_STRUCTURE				35			/* structure */
#define QSI_T_SUB_ADD_IND			36			/* sub-address indicator */
#define QSI_T_SUB_ADD_TYPE			37			/* sub-address type */
#define QSI_T_SYN_ASYN				38			/* synchronous/asynchronous */
#define QSI_T_TELESERVICE_CCITT		39			/* ccitt teleservice */
#define QSI_T_TELESERVICE_EXT		40			/* ccitt teleservice */
#define QSI_T_TRF_CAP_LLC			41			/* information transfer capability */
#define QSI_T_USER_RATE				42			/* user rate */
#define	QSI_T_CHAN_SEL				43			/* channel selection */
#define	QSI_T_D_CHAN				44			/* D-channel indicator */

					/* table of tables id */

#define QSI_TX_PROG_DESCR			1			/* cause value according to the cause class */
#define QSI_TX_PROTOCOL_ID_BC		2			/* protocol ID 1 according BC */
#define	QSI_TX_TRF_RATE_BC			3			/* transfert rate according coding standard  for BC */
#define	QSI_TX_TRF_CAP_BC			4			/* transfert capability according coding standard  for BC */

							/* TIMER MANAGEMENT */

						/*  User and network side */

		 /* Used to know the timer level in the TI_CALL timer table */

#define QSI_T300					0
#define QSI_T301					1
#define QSI_T302					2
#define QSI_T303					3
#define QSI_T304					4
#define QSI_T305					5
#define QSI_T308					6
#define QSI_T310					7
#define QSI_T313					8
#define QSI_T322					9

#if NS_T309 == ON
#	define QSI_T309					10
#endif


/*EOF*/
