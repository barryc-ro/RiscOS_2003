G
*********************************
*                               *
*   NT2 : outgoing call         *
*	2 terminal responding		*
*	CALL PROC					*
*                               *
*********************************
*
*   NT2 CALL CONTROL sends NS_CONN_RQ --> SETUP
*
	B	C	0	0	A
*
*   NT2 <---- DL_EST_IN
*
	B	d	0	1	a
*
*   The user 1 side sends CALL PROC
*
	B	d	0	1	e	1	U	b
*
*   The user 2 establishes the DL connection and sends CALL PROC
*
	B	d	0	2	a
	B	d	0	2	e	1	U	b
*
*   The user 1 side sends ALERT
*
	B	d	0	1	e	1	U	a
*
*   The user 2 side sends CONNECT
*
	B	d	0	2	e	1	U	c
*
*   NT2 CALL CONTROL sends NS_CONN_RS
*
	B	C	0	0	B
    C	6
*
*   The user 1 side sends RELEASE COMPLETE
*
	B	d	0	1	e	1	U	s
*
*
*   The terminal sends DISCONNECT ---> NS_CLEAR_IN
*
	B	d	0	2	e	1	U	q
*
*   NT2 CALL CONTROL sends NS_CLEAR_RS
*
	B	C	0	0	D
*
*   The user sends RELEASE COMPLETE ---> NS_CLEAR_CO
*
	B	d	0	2	e	1	U	s
*
*
*   Release of the DL
*
	C	100
	B	d	0	1	g
	B	d	0	1	d
*********************************
*                               *
*   NT2 : outgoing call         *
*	1 terminal responding		*
*	CONNECT only				*
*                               *
*********************************
*
*   NT2 CALL CONTROL sends NS_CONN_RQ --> SETUP
*
	B	C	0	0	A
*
*   The user 3 establishes the DL connection and sends CONNECT
*
	B	d	0	3	a
	B	d	0	3	e	2	U	c
*
*   NT2 CALL CONTROL sends NS_CONN_RS
*
	B	C	0	0	B
*
*   NT2 CALL CONTROL sends NS_CLEAR_RQ ---> DISCONNECT
*
	B	C	0	0	C
*
*   The user sends RELEASE ---> NS_CLEAR_CO
*							<--- RELEASE COMPLETE
*
	B	d	0	3	e	2	U	r

*********************************
*                               *
*   NT2 : outgoing call         *
*	1 terminal responding		*
*	CALL PROC + CONNECT 		*
*                               *
*********************************
*
*   NT2 CALL CONTROL sends NS_CONN_RQ --> SETUP
*
	B	C	0	0	A
*
*   The user 4 establishes the DL connection and sends CALL PROC
*
	B	d	0	4	a
	B	d	0	4	e	3	U	b
*
*   The user 4 sends CONNECT
*
	B	d	0	4	e	3	U	c
*
*   NT2 CALL CONTROL sends NS_CONN_RS
*
	B	C	0	0	B
*
*   NT2 CALL CONTROL sends NS_CLEAR_RQ ---> DISCONNECT
*
	B	C	0	0	C
*
*   The user sends RELEASE ---> NS_CLEAR_CO
*							<--- RELEASE COMPLETE
*
	B	d	0	4	e	3	U	r

*********************************
*                               *
*   NT2 : outgoing call         *
*	1 terminal responding		*
*	CALL PROC + ALERT + CONNECT *
*                               *
*********************************
*
*   NT2 CALL CONTROL sends NS_CONN_RQ --> SETUP
*
	B	C	0	0	A
*
*   The user 5 establishes the DL connection and sends CALL PROC
*
	B	d	0	5	a
	B	d	0	5	e	4	U	b
*
*   The user 5 sends ALERT
*
	B	d	0	5	e	4	U	a
*
*   The user 5 sends CONNECT
*
	B	d	0	5	e	4	U	c
*
*   NT2 CALL CONTROL sends NS_CONN_RS
*
	B	C	0	0	B
*
*   NT2 CALL CONTROL sends NS_CLEAR_RQ ---> DISCONNECT
*
	B	C	0	0	C
*
*   The user sends RELEASE ---> NS_CLEAR_CO
*							<--- RELEASE COMPLETE
*
	B	d	0	5	e	4	U	r
*********************************
*                               *
*   NT2 : outgoing call         *
*	1 terminal responding		*
*	SETUP ACK + CONNECT			*
*                               *
*********************************
*
*   NT2 CALL CONTROL sends NS_CONN_RQ --> SETUP
*
	B	C	0	0	A
*
*   The user 6 establishes the DL connection and sends SETUP ACK
*
	B	d	0	6	a
	B	d	0	6	e	5	U	f
*
*   The user 6 sends CONNECT
*
	B	d	0	6	e	5	U	c
*
*   NT2 CALL CONTROL sends NS_CONN_RS
*
	B	C	0	0	B
*
*   NT2 CALL CONTROL sends NS_CLEAR_RQ ---> DISCONNECT
*
	B	C	0	0	C
*
*   The user sends RELEASE ---> NS_CLEAR_CO
*							<--- RELEASE COMPLETE
*
	B	d	0	6	e	5	U	r
*********************************
*                               *
*   NT2 : outgoing call         *
*	1 terminal responding		*
*	SETUP ACK + ALERT + CONNECT	*
*                               *
*********************************
*
*   NT2 CALL CONTROL sends NS_CONN_RQ --> SETUP
*
	B	C	0	0	A
*
*   The user 7 establishes the DL connection and sends SETUP ACK
*
	B	d	0	7	a
	B	d	0	7	e	6	U	f
*
*   The user 7 sends ALERT
*
	B	d	0	7	e	6	U	a
*
*   The user 7 sends CONNECT
*
	B	d	0	7	e	6	U	c
*
*   NT2 CALL CONTROL sends NS_CONN_RS
*
	B	C	0	0	B
*
*   NT2 CALL CONTROL sends NS_CLEAR_RQ ---> DISCONNECT
*
	B	C	0	0	C
*
*   The user sends RELEASE ---> NS_CLEAR_CO
*							<--- RELEASE COMPLETE
*
	B	d	0	7	e	6	U	r
*********************************
*                               *
*   NT2 : outgoing call         *
*	1 terminal responding		*
*	SETUP ACK + CALL PROC +		*
*		ALERT + CONNECT			*
*                               *
*********************************
*
*   NT2 CALL CONTROL sends NS_CONN_RQ --> SETUP
*
	B	C	0	0	A
*
*   The user 8 establishes the DL connection and sends SETUP ACK
*
	B	d	0	8	a
	B	d	0	8	e	7	U	f
*
*   The user 8 sends CALL PROC
*
	B	d	0	8	e	7	U	b
*
*   The user 8 sends ALERT
*
	B	d	0	8	e	7	U	a
*
*   The user 8 sends CONNECT
*
	B	d	0	8	e	7	U	c
*
*   NT2 CALL CONTROL sends NS_CONN_RS
*
	B	C	0	0	B
*
*   NT2 CALL CONTROL sends NS_CLEAR_RQ ---> DISCONNECT
*
	B	C	0	0	C
*
*   The user sends RELEASE ---> NS_CLEAR_CO
*							<--- RELEASE COMPLETE
*
	B	d	0	8	e	7	U	r
*********************************
*                               *
*   NT2 : outgoing call         *
*	1 terminal responding		*
*		ALERT + CONNECT			*
*                               *
*********************************
*
*   NT2 CALL CONTROL sends NS_CONN_RQ --> SETUP
*
	B	C	0	0	A
*
*   The user 8 sends ALERT
*
	B	d	0	5	e	8	U	a
*
*   The user 8 sends CONNECT
*
	B	d	0	5	e	8	U	c
*
*   NT2 CALL CONTROL sends NS_CONN_RS
*
	B	C	0	0	B
*
*   NT2 CALL CONTROL sends NS_CLEAR_RQ ---> DISCONNECT
*
	B	C	0	0	C
*
*   The user sends RELEASE ---> NS_CLEAR_CO
*							<--- RELEASE COMPLETE
*
	B	d	0	5	e	8	U	r
*********************************
*                               *
*   NT2 : DL connections		*
*	released after COMMIT		*
*                               *
*********************************
*
*	DL Timer expiry ---> COMMIT RQ on each CES
*
	C	100
*
*   Release of the CES 1 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	1	g
	B	d	0	1	d
*
*   Release of the CES 2 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	2	g
	B	d	0	2	d
*
*   Release of the CES 3 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	3	g
	B	d	0	3	d
*
*   Release of the CES 4 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	4	g
	B	d	0	4	d
*
*   Release of the CES 5 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	5	g
	B	d	0	5	d
*
*   Release of the CES 6 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	6	g
	B	d	0	6	d
*
*   Release of the CES 7 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	7	g
	B	d	0	7	d
*
*   Release of the CES 8 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	8	g
	B	d	0	8	d
Q
