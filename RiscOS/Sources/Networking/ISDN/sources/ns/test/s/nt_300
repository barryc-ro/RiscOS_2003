G
*************************************
*                               	*
*   NT2 : incoming call         	*
*	no answer from call control		*
*                               	*
*************************************
*
*   User 1 establishes the DL and sends SETUP ---> NS_CONN_IN
*
	B	d	0	1	b
	B	d	0	1	e	1	N	e			SETUP
*
*	time incremented to 1 second -> T300 expiry -> call cleared
*
	C	1

*********************************************
*                               			*
*   		NT2 : outgoing call         	*
*   received PROGRESS, INFO and DISCONNECT	*
*		during call establishment			*
*                               			*
*********************************************
*
*   NT2 CALL CONTROL sends NS_CONN_RQ --> SETUP
*
	B	C	0	0	A
*
*   The user 2 sends ALERT
*
	B	d	0	1	e	1	U	a
*
*   The user 2 sends PROGRESS ---> NS_PROGRESS_IN (after internal INT_PROGRESS_IN)
*
	B	d	0	1	e	1	U	*
*
*   The user 3 establishes the DL connection and sends CALL PROC
*
	B	d	0	2	a
	B	d	0	2	e	1	U	b
*
*   The user 2 sends INFO ---> NS_INFO_IN (after internal INT_INFO_IN)
*
	B	d	0	1	e	1	U	o
*
*   The user 3 sends INFO ---> NS_INFO_IN (after internal INT_INFO_IN)
*
	B	d	0	2	e	1	U	o
*
*   The user 3 sends PROGRESS ---> NS_PROGRESS_IN (after internal INT_PROGRESS_IN)
*
	B	d	0	2	e	1	U	*
*
*   The user 3 sends DISCONNECT ---> RELEASE
*
	B	d	0	2	e	1	U	q
*
*   The user 4 establishes the DL and sends DISCONNECT ---> STATUS
*
	B	d	0	3	a
	B	d	0	3	e	1	U	q
*
*   The user 2 sends CONNECT
*
	B	d	0	1	e	1	U	c
*
*   NT2 CALL CONTROL sends NS_CONN_RS -> call is established
*
	B	C	0	0	B
*
*   The user 3 sends RELEASE COMPLETE
*
	B	d	0	2	e	1	U	s
*
*   NT2 CALL CONTROL sends NS_CLEAR_RQ ---> DISCONNECT
*
	B	C	0	0	C
*
*   The user 2 sends RELEASE ---> NS_CLEAR_CO
*							<--- RELEASE COMPLETE
*
	B	d	0	1	e	1	U	r

*********************************
*                               *
*   NT2 : DL connections		*
*	released after COMMIT		*
*                               *
*********************************
*
*	DL Timer expiry ---> COMMIT RQ on each CES
*
	C	100
*
*   Release of the CES 1 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	1	g
	B	d	0	1	d
*
*   Release of the CES 2 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	2	g
	B	d	0	2	d
*
*   Release of the CES 3 : COMMIT_CO ---> REL_RQ + REL_	CO
*
	B	d	0	3	g
	B	d	0	3	d
*
*	QUIT
*
Q
