G
*************************************************************
*                                                           *
*	NT-side, Point-to-Mulitpoint configuration :			*
*		-> Tests of events after Timer T308 expiry 			*
*		-> Tests of n Data Link Failures					*
*                                                           *
*************************************************************

*************************************************
*				- 1 -							*
*	outgoing call, 2 terminals responding		*
*	1 T308 expiry and outgoing call clearing	*
*                                               *
*************************************************
*
*   ====> connection request -> SETUP Broadcast
*
	B	C	0	0	A						NS_CONN_RQ
*
*   <==== User#1 establish ces 2 and send ALERT -> NS_ALERT_IN
*
	B	d	0	2	a						DL_EST_IN
	B	d	0	2	e	1	U	a			ALERT
*
*   <==== User#2 establish ces 3 and send ALERT
*
	B	d	0	3	a						DL_EST_IN
	B	d	0	3	e	1	U	a			ALERT
*
*   <==== User#1 send CONNECT -> NS_CONN_CO
*
	B	d	0	2	e	1	U	c			CONNECT
*
*   ====> connection response -> CONN_ACK on ces 2, RELEASE on ces 3
*
	B	C	0	0	B						NS_CONN_RS
*
*	Timer T308 expiry -> send again RELEASE on ces 3
*
	C	4
*
*	NT2 Call Control clears the call -> DISCONNECT on ces 2
*
	B	C	0	0	C			NS_CLEAR_RQ
*
*   <==== User#2 responds RELEASE COMPLETE
*
	B	d	0	3	e	1	U	s			RELEASE COMPLETE
*
*   <==== User#1 responds RELEASE -> RELEASE COMPLETE -> NS_CLEAR_CO
*
	B	d	0	2	e	1	U	r			RELEASE

*************************************************
*				- 2 -							*
*	outgoing call, 2 terminals responding		*
*	2 T308 expirs and outgoing call clearing	*
*                                               *
*************************************************
*
*   ====> connection request -> SETUP Broadcast
*
	B	C	0	0	A						NS_CONN_RQ
*
*   <==== User#1 send ALERT -> NS_ALERT_IN
*
	B	d	0	2	e	2	U	a			ALERT
*
*   <==== User#2 send CALL_PROC
*
	B	d	0	3	e	2	U	b			CALL_PROC
*
*   <==== User#2 send CONNECT -> NS_CONN_CO
*
	B	d	0	3	e	2	U	c			CONNECT
*
*   ====> connection response -> CONN_ACK on ces 3, RELEASE on ces 2
*
	B	C	0	0	B						NS_CONN_RS
*
*	Timer T308 expiry -> send again RELEASE on ces 2
*
	C	4
*
*	second Timer T308 expiry
*
	C	4
*
*   <==== User#1 send DISCONNECT
*
	B	d	0	2	e	2	U	q			DISCONNECT
*
*	NT2 Call Control clears the call -> DISCONNECT on ces 3
*
	B	C	0	0	C			NS_CLEAR_RQ
*
*   <==== User#2 responds RELEASE -> RELEASE COMPLETE -> NS_CLEAR_CO
*
	B	d	0	3	e	2	U	r			RELEASE

*************************************************
*				- 3 -							*
*	outgoing call, 2 terminals responding		*
*	1 T308 expirs and both DL connections		*
*	fail (Dl of non-selected terminal first)	*
*                                               *
*************************************************
*
*   ====> connection request -> SETUP Broadcast
*
	B	C	0	0	A						NS_CONN_RQ
*
*   <==== User#1 send ALERT -> NS_ALERT_IN
*
	B	d	0	2	e	3	U	a			ALERT
*
*   <==== User#2 send ALERT
*
	B	d	0	3	e	3	U	a			ALERT
*
*   <==== User#1 send CONNECT -> NS_CONN_CO
*
	B	d	0	2	e	3	U	c			CONNECT
*
*   ====> connection response -> CONN_ACK on ces 2, RELEASE on ces 3
*
	B	C	0	0	B						NS_CONN_RS
*
*	Timer T308 expiry -> send again RELEASE on ces 3
*
	C	4
*
*	<---- DL connection released on ces 3
*
	B	d	0	3	c						DL_REL_IN
*
*	<---- DL connection released on ces 2
*
	B	d	0	2	c						DL_REL_IN
	C	100
	C	100
	C	100

*************************************************
*				- 4 -							*
*	outgoing call, 2 terminals responding		*
*	2 T308 expirs and both DL connections		*
*	fail (Dl of selected terminal first)		*
*                                               *
*************************************************
*
*   ====> connection request -> SETUP Broadcast
*
	B	C	0	0	A						NS_CONN_RQ
*
*   <==== User#1 establish ces 2 and send ALERT -> NS_ALERT_IN
*
	B	d	0	2	b						DL_EST_CO
	B	d	0	2	e	4	U	a			ALERT
*
*   <==== User#2 establish ces 3 and send ALERT
*
	B	d	0	3	a						DL_EST_IN
	B	d	0	3	e	4	U	a			ALERT
*
*   <==== User#1 send CONNECT -> NS_CONN_CO
*
	B	d	0	2	e	4	U	c			CONNECT
*
*   ====> connection response -> CONN_ACK on ces 2, RELEASE on ces 3
*
	B	C	0	0	B						NS_CONN_RS
*
*	Timer T308 expiry -> send again RELEASE on ces 3
*
	C	4
*
*	second Timer T308 expiry
*
	C	4
*
*	<---- DL connection released on ces 2
*
	B	d	0	2	c						DL_REL_IN
*
*	<---- DL connection released on ces 3
*
	B	d	0	3	c						DL_REL_IN
	C	100
	C	100
	C	100

*************************************************
*				- 5 -							*
*	outgoing call, 4 terminals responding		*
*	mixed with DL connection failures			*
*                                               *
*************************************************
*
*   ====> connection request -> SETUP Broadcast
*
	B	C	0	0	A						NS_CONN_RQ
*
*   <==== User#1 establish ces 2 and send CALL PROC -> NS_CALL_PROC_IN
*
	B	d	0	2	b						DL_EST_CO
	B	d	0	2	e	5	U	b			CALL_PROC
*
*   <==== User#2 establish ces 3 and send ALERT -> NS_ALERT_IN
*
	B	d	0	3	a						DL_EST_IN
	B	d	0	3	e	5	U	a			ALERT
*
*   <==== User#3 establish ces 4 and send CALL PROC
*
	B	d	0	4	a						DL_EST_IN
	B	d	0	4	e	5	U	b			CALL_PROC
*
*	<---- DL connection released on ces 2
*
	B	d	0	2	c						DL_REL_IN
*
*	<---- DL connection released on ces 3
*
	B	d	0	3	c						DL_REL_IN
*
*   <==== User#4 establish ces 5 and send ALERT
*
	B	d	0	5	a						DL_EST_IN
	B	d	0	5	e	5	U	a			ALERT
*
*   <==== User#3 send CONNECT -> NS_CONN_CO
*
	B	d	0	4	e	5	U	c			CONNECT
*
*   ====> connection response -> CONN_ACK on ces 4, RELEASE on ces 5
*
	B	C	0	0	B						NS_CONN_RS
*
*	<---- DL connection released on ces 4
*
	B	d	0	4	c						DL_REL_IN
*
*	<---- DL connection released on ces 5
*
	B	d	0	5	c						DL_REL_IN
	C	100
	C	100
	C	100
Q

