G
*************************************************************
*                                                           *
*	NT-side : -> Tests of Data Link Failures with T309		*
*		NAI 0 : FG_NT_NET									*
*		NAI 1 : FG_NT_TE, Point-to-Multipoint				*
*                                                           *
*************************************************************

*************************************************
*				- 1 -							*
*	outgoing call, 2 terminals responding		*
*		and both DL connections fail			*
*		(Dl of selected terminal first)			*
*                                               *
*************************************************
*
*   ====> connection request -> SETUP Broadcast
*
	B	C	1	0	A						NS_CONN_RQ
*
*   <==== User#1 establish ces 2 and send ALERT -> NS_ALERT_IN
*
	B	d	1	2	a						DL_EST_IN
	B	d	1	2	e	1	U	a			ALERT
*
*   <==== User#2 establish ces 3 and send CALL PROC and ALERT
*
	B	d	1	3	a						DL_EST_IN
	B	d	1	3	e	1	U	b			CALL_PROC
	B	d	1	3	e	1	U	a			ALERT
*
*   <==== User#1 send CONNECT -> NS_CONN_CO
*
	B	d	1	2	e	1	U	c			CONNECT
*
*   ====> connection response -> CONN_ACK on ces 2, RELEASE on ces 3
*
	B	C	1	0	B						NS_CONN_RS
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
*
*	<---- DL connection released on ces 3
*
	B	d	1	3	c						DL_REL_IN
	C	5
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
	C	5
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
	C	5
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
	C	100

*************************************************
*				- 2 -							*
*	outgoing call, 2 terminals responding		*
*		and both DL connections fail			*
*	(Dl of non-selected terminal first)			*
*                                               *
*************************************************
*
*   ====> connection request -> SETUP Broadcast
*
	B	C	1	0	A						NS_CONN_RQ
*
*   <==== User#1 establish ces 2 and send ALERT -> NS_ALERT_IN
*
	B	d	1	2	b						DL_EST_CO
	B	d	1	2	e	2	U	a			ALERT
*
*   <==== User#2 establish ces 2 and send ALERT -> NS_ALERT_IN
*
	B	d	1	3	b						DL_EST_CO
	B	d	1	3	e	2	U	a			ALERT
*
*   <==== User#1 send CONNECT -> NS_CONN_CO
*
	B	d	1	2	e	2	U	c			CONNECT
*
*   ====> connection response -> CONN_ACK on ces 2, RELEASE on ces 3
*
	B	C	1	0	B						NS_CONN_RS
*
*	<---- DL connection released on ces 3
*
	B	d	1	3	c						DL_REL_IN
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
	C	5
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
	C	5
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
	C	5
*
*	<---- DL connection released on ces 2
*
	B	d	1	2	c						DL_REL_IN
	C	100
*************************************************
*				- 3 -							*
*	2 incoming calls from 2 terminals			*
*	with 1 active and DL connection fails		*
*                                               *
*************************************************
*
*   <==== User#1 establish ces 4 and send SETUP
*
	B	d	1	4	b						DL_EST_CO
	B	d	1	4	e	45	N	e			SETUP
*
*   ====> alerting request -> ALERT
*
	B	C	1	2	G						NS_ALERT_RQ
*
*   <==== User#2 send SETUP
*
	B	d	1	4	e	84	N	e			SETUP
*
*   ====> alerting request -> ALERT
*
	B	C	1	1	G						NS_ALERT_RQ
*
*   ====> connection response -> CONNECT
*
	B	C	1	1	B						NS_CONN_RS
*
*	<---- DL connection released on ces 4
*
	B	d	1	4	c						DL_REL_IN
*
*	<---- DL connection released on ces 4
*
	B	d	1	4	c						DL_REL_IN
	C	5
*
*	<---- DL connection released on ces 4
*
	B	d	1	4	c						DL_REL_IN
	C	5
*
*	<---- DL connection released on ces 4
*
	B	d	1	4	c						DL_REL_IN
	C	100

*************************************************
*				- 4 -							*
*	outgoing call and DL connection fail		*
*                                               *
*************************************************
*
*   <==== Dl connection established
*
	B	d	0	1	a						DL_EST_IN
*
*   ====> connection request -> SETUP on ces 1
*
	B	C	0	0	A						NS_CONN_RQ
*
*   <==== CALL PROC and ALERT received
*
	B	d	0	1	e	1	U	b			CALL_PROC
	B	d	0	1	e	1	U	a			ALERT
*
*   <==== CONNECT received -> NS_CONN_CO
*
	B	d	0	1	e	1	U	c			CONNECT
*
*	<---- DL connection released
*
	B	d	0	1	c						DL_REL_IN
*
*	<---- DL connection released
*
	B	d	0	1	c						DL_REL_IN
	C	5
*
*	<---- DL connection released
*
	B	d	0	1	c						DL_REL_IN
	C	5
*
*	<---- DL connection released
*
	B	d	0	1	c						DL_REL_IN
	C	100

*************************************************
*				- 5 -							*
*	2 incoming calls from network				*
*	with 1 active and DL connection fails		*
*                                               *
*************************************************
*
*   <==== SETUP received
*
	B	d	0	0	f	18	N	e			SETUP
*
*   <==== Dl connection established
*
	B	d	0	1	b						DL_EST_CO
*
*   ====> alerting request -> ALERT
*
	B	C	0	255	G						NS_ALERT_RQ
*
*   <==== another SETUP received
*
	B	d	0	0	f	27	N	e			SETUP
*
*   ====> alerting request -> ALERT
*
	B	C	0	254	G						NS_ALERT_RQ
*
*   ====> connection response -> CONNECT
*
	B	C	0	255	B						NS_CONN_RS
*
*   <==== CONN_ACK received
*
	B	d	0	1	e	18	N	d			CONN_ACK
*
*	<---- DL connection released
*
	B	d	0	1	c						DL_REL_IN
*
*	<---- DL connection released
*
	B	d	0	1	c						DL_REL_IN
	C	5
*
*	<---- DL connection released
*
	B	d	0	1	c						DL_REL_IN
	C	5
*
*	<---- DL connection released
*
	B	d	0	1	c						DL_REL_IN
	C	100
Q

