G
*************************************************
*                                               *
*   NT2 : 2 incoming calls with					*
*	the SAME CALL REF but on different CES		*
*	in Point-to-multipoint configuration.		*
*                                               *
*************************************************
*
*   User 1 establishes the DL and sends SETUP ---> NS_CONN_IN
*
	B	d	0	1	b
	B	d	0	1	e	1	N	e			SETUP
*
*   The network side sends NS_CALL_PROC_RQ
*
	B	C	0	255	N
*
*   The network side sends NS_ALERT_RQ
*
	B	C	0	255	G
*
*   The network side sends NS_CONN_RS ---> CONNECT
*
	B	C	0	255	B
*
*   User 2 establishes the DL and sends SETUP ---> NS_CONN_IN
*
	B	d	0	2	b
	B	d	0	2	e	1	N	e			SETUP
*
*   The network side sends NS_CALL_PROC_RQ
*
	B	C	0	254	N
*
*   The network side sends NS_ALERT_RQ
*
	B	C	0	254	G
*
*   The network side sends NS_CONN_RS ---> CONNECT
*
	B	C	0	254	B
*
*
*   The User 1 sends DISCONNECT ---> NS_CLEAR_IN
*
	B	d	0	1	e	1	N	q
*
*
*   The User 2 sends DISCONNECT ---> NS_CLEAR_IN
*
	B	d	0	2	e	1	N	q
*
*   NT2 CALL CONTROL sends NS_CLEAR_RS
*
	B	C	0	255	D
*
*   NT2 CALL CONTROL sends NS_CLEAR_RS
*
	B	C	0	254	D
*
*   The user 1 sends RELEASE COMPLETE ---> NS_CLEAR_CO
*
	B	d	0	1	e	1	N	s
*
*   The user 2 sends RELEASE COMPLETE ---> NS_CLEAR_CO
*
	B	d	0	2	e	1	N	s
*************************************************************
*															*
*   4 simultaneous incoming call establishments using the	*
*	SAME CALL REF on different CES (Point-to-multipoint)	*
*			+ 1 outgoing call establishment.				*
*															*
*************************************************************
*
*   User 1 sends SETUP ---> NS_CONN_IN
*
	B	d	0	1	e	8	N	e			SETUP
*
*   User 2 sends SETUP ---> NS_CONN_IN
*
	B	d	0	2	e	8	N	e			SETUP
*
*   The network side sends NS_CALL_PROC_RQ to User 2
*
	B	C	0	254	N
*
*   User 3 establishes the DL and sends SETUP ---> NS_CONN_IN
*
	B	d	0	3	b
	B	d	0	3	e	8	N	e			SETUP
*
*   The network side sends NS_ALERT_RQ to User 3
*
	B	C	0	253	G
*
*   User 4 establishes the DL and sends SETUP ---> NS_CONN_IN
*
	B	d	0	4	b
	B	d	0	4	e	8	N	e			SETUP
*
*   The network side sends NS_CONN_RS ---> CONNECT to User 4
*
	B	C	0	3	B
*
*   User 5 try to send SETUP on same DL Connection and with same call ref
*	as User 3 -> ignored
*
	B	d	0	3	e	8	N	e			SETUP
*
*   NS_CONN_RQ ---> SETUP Broadcast
*
	B	C	0	0	A
*
*   user 6 responses ALERT
*
	B	d	0	1	e	1	U	a
*
*   user 6  responses CONNECT
*
	B	d	0	1	e	1	U	c
*
*   User 7 try to send SETUP on same DL Connection and with same call ref
*	as User 1 -> ignored
*
	B	d	0	1	e	8	N	e			SETUP
*
*   The network side sends NS_CONN_RS ---> CONNECT to User 1
*
	B	C	0	255	B
*
*   The network side sends NS_CONN_RS ---> CONNECT to User 2
*
	B	C	0	254	B
*
*   The network side sends NS_CONN_RS ---> CONNECT to User 3
*
	B	C	0	253	B
*
*   The network side sends NS_CONN_RS ---> CONNECT ACK to User 6
*
	B	C	0	0	B
*************************************************************
*															*
*					Clearing of all calls.					*
*															*
*************************************************************
*
*   User 1 sends DISCONNECT ---> NS_CLEAR_IN
*
	B	d	0	1	e	8	N	q
*
*   NT2 CALL CONTROL sends NS_CLEAR_RS to user 1
*
	B	C	0	255	D
*
*   User 1 sends RELEASE COMPLETE ---> NS_CLEAR_CO
*
	B	d	0	1	e	8	N	s
*
*   The network side clears the call with User 6
*
	B	C	0	0	C
*
*   User 6 sends RELEASE ---> NS_CLEAR_CO
*						 <--- RELEASE COMPLETE
*
	B	d	0	1	e	1	U	r
*
*   The network side clears the call with User 3
*
	B	C	0	253	C
*
*   User 3 sends RELEASE ---> NS_CLEAR_CO
*						 <--- RELEASE COMPLETE
*
	B	d	0	3	e	8	N	r
*
*   User 4 sends DISCONNECT ---> NS_CLEAR_IN
*
	B	d	0	4	e	8	N	q
*
*   unexpected ALERT on released call ref
*
	B	d	0	3	e	8	N	a
*
*   unexpected CONNECT on released call ref
*
	B	d	0	1	e	8	N	c
*
*   NT2 CALL CONTROL sends NS_CLEAR_RS to user 4
*
	B	C	0	3	D
*
*   User 4 sends RELEASE COMPLETE ---> NS_CLEAR_CO
*
	B	d	0	4	e	8	N	s
*
*   The network side clears the call with User 2
*
	B	C	0	254	C
*
*   User 2 sends RELEASE ---> NS_CLEAR_CO
*						 <--- RELEASE COMPLETE
*
	B	d	0	2	e	8	N	r

*********************************
*                               *
*           QUIT                *
*                               *
*********************************
Q
