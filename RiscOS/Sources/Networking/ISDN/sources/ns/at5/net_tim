
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_tim.at5
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the ATT_5E5 specific timer tables
 * 		  of the NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

			/* TIMERS IMPLICIT VALUES */

				/* Network timer implicit values */

#define NET_AT5_T300			  (3 * SECOND)	/* T300 */
#define NET_AT5_T302			 (10 * SECOND)	/* T302 */
#define NET_AT5_T303			  (4 * SECOND)	/* T303 */
#define NET_AT5_T305			  (4 * SECOND)	/* T305 */
#define NET_AT5_T308			  (4 * SECOND)	/* T308 */
#define NET_AT5_T309			(300 * SECOND)	/* T309 */
#define NET_AT5_T310			  (4 * SECOND)	/* T310 */
#define NET_AT5_T314			  (4 * SECOND)	/* T314 */

				/* User timer values */

#define USER_AT5_T300				(3 * SECOND)	/* T300 */
#define USER_AT5_T302			   (10 * SECOND)	/* T302 */
#define USER_AT5_T303				(4 * SECOND)	/* T303 */
#define USER_AT5_T305				(4 * SECOND)	/* T305 */
#define USER_AT5_T308				(4 * SECOND)	/* T308 */
#define USER_AT5_T309			  (300 * SECOND)	/* T309 */
#define USER_AT5_T310				(4 * SECOND)	/* T310 */
#define USER_AT5_T314				(4 * SECOND)	/* T314 */

/*--------------------------------------------------------------------------*/
			/* NS timer implicit value table */

		/* Call associated timers */

CONST_ARRAY struct ns_timer AT5_TI_CALL[] = {

/*	NT value		User value		Event ID		Index (0 -> NB_CALL_TIMER-1) */

	{NET_AT5_T300,		USER_AT5_T300,		TI_300,		AT5_T300_IDX},		/* T300 */
	{NET_AT5_T302,		USER_AT5_T302,		TI_302,		AT5_T302_IDX},		/* T302 */
	{NET_AT5_T303,		USER_AT5_T303,		TI_303,		AT5_T303_IDX},		/* T303 */
	{NET_AT5_T305,		USER_AT5_T305,		TI_305,		AT5_T305_IDX},		/* T305 */
	{NET_AT5_T308,		USER_AT5_T308,		TI_308,		AT5_T308_IDX},		/* T308 */
	{NET_AT5_T310,		USER_AT5_T310,		TI_310,		AT5_T310_IDX},		/* T310 */

#	if NS_T309 == ON
		{NET_AT5_T309,	USER_AT5_T309,		TI_309,		AT5_T309_IDX},		/* T309 */
#	endif

};

		/* DLCI associated timers */

CONST_ARRAY struct ns_timer AT5_TI_DLCI[] = {

/*	NT value		User value		Event ID		Index (0 -> MX_DLCI_TIMER-1) */

	{TI_DL_VAL,			TI_DL_VAL,		TI_DL	},		/* T3DL */
	{TI_DL_EST_VAL,		TI_DL_EST_VAL,	TI_DL_EST},		/* T3_DL_EST */

#	if NS_SEGMENTATION == ON
		{NET_AT5_T314,	USER_AT5_T314,	TI_314	},		/* T314 */
#	endif

};

	/* Index table for timers used in the kernel */

CONST_ARRAY uchar AT5_TI_IDX[] = {

#	if NS_T309 == ON
		AT5_T309,
#	endif

#	if NS_SEGMENTATION == ON
		AT5_T314,
#	endif

#	if NS_RESTART_PROCEDURE == ON
		AT5_T316,
		AT5_T317,
#	endif

	TI_EOT,
};


/*EOF*/
