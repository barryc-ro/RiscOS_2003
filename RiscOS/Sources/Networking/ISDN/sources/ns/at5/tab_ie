/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - tab_ie.at5
 *
 * $Revision$
 *
 * $Date$
 *
 * Implements the Tables (containing address) describing all the
 * information elements and the integrity constraints associated to.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

		/*
			Table of table items - the items are ordered according to the
			table ID number : table ID = index of the table.
		*/

Ns_at5_table_or_function (tabl, AT5_TAB_TABL)	/* { */
	Ns_at5_tab_tabl_entry (T_NIL,					  	P_NIL)
	Ns_at5_tab_tabl_entry (AT5_T_ADJUNCT_VAL,         	ADJUNCT_VAL_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_ASSOC_STATUS,        	ASSOC_STATUS_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_BUTTON_TYPE_ACT,     	BUTTON_TYPE_ACT_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_BUTTON_TYPE_IND,     	BUTTON_TYPE_IND_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_C_C,                 	C_C_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_CALL_REF_FLAG,       	CALL_REF_FLAG_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_CALL_REF_TYPE,       	CALL_REF_TYPE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_CALL_STATE,          	CALL_STATE_VAL_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_CHAN_PREF_EXCL,      	CHAN_PREF_EXCL_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_CHAN_TYPE,           	CHAN_TYPE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_CODING_STD,          	CODING_STD_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_DISPLAY_CON_MODE,    	DISPLAY_CON_MODE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_DISPLAY_FLD_MODE,    	DISPLAY_FLD_MODE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_DISPLAY_FLD_TYPE,    	DISPLAY_FLD_TYPE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_DISPLAY_SUBMODE,     	DISPLAY_SUBMODE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_FEATURE_MEANING,     	FEATURE_MEANING_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_HOOK_VAL,            	HOOK_VAL_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_INTERPRETER,         	INTERPRETER_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_LAYER_NB,            	LAYER_NB_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_LLC_PROTOCOL_ID_1_RA,	LLC_PROTOCOL_ID_1_RA_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_LOCATION,            	LOCATION_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_MAN_ERR_CODE,        	MAN_ERR_CODE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_MODULE_NB,           	MODULE_NB_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_NB_PLAN,             	NB_PLAN_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_NB_TYPE,             	NB_TYPE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_OP_CLASS,            	OP_CLASS_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_PROGRESS_DESCRIPTION,	PROGRESS_DESCRIPTION_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_PROGRESS_LOCATION,   	PROGRESS_LOCATION_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_SIGNAL_VAL,          	SIGNAL_VAL_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_STATUS_TYPE,         	STATUS_TYPE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_STRUCTURE,           	STRUCTURE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_SYMMETRY,            	SYMMETRY_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_SYN_ASYN,            	SYN_ASYN_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_TRF_CAP,             	TRF_CAP_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_TRF_MODE,            	TRF_MODE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_USER_RATE,           	USER_RATE_AT5_S)
	Ns_at5_tab_tabl_entry (AT5_T_INT_TYPE,            	AT5_INT_TYPE_S)

Ns_at5_end_table_or_function /* } */

/*=========================================================================*/

		/* Table of list of tables */

Ns_at5_table_or_function (tabx_list, TAB_C_V_AT5_S)	/* { */
	Ns_at5_tabx_list_entry (C_V_NORMAL_EVENT_AT5_S)
	Ns_at5_tabx_list_entry (C_V_RESOURCE_UNAVAILABLE_AT5_S)
	Ns_at5_tabx_list_entry (C_V_SERVICE_NOT_AVAILABLE_AT5_S)
	Ns_at5_tabx_list_entry (C_V_SERVICE_NOT_IMPLEMENTED_AT5_S)
	Ns_at5_tabx_list_entry (C_V_INVALID_MESSAGE_AT5_S)
	Ns_at5_tabx_list_entry (C_V_PROTOCOL_ERROR_AT5_S)
	Ns_at5_tabx_list_entry (C_V_INTERWORKING_AT5_S)
	Ns_at5_tabx_list_entry (C_V_NORMAL_EVENT_0_AT5_S)
Ns_at5_end_table_or_function /* } */

Ns_at5_table_or_function (tabx_list, TAB_TRF_RATE_AT5_S)	/* { */
	Ns_at5_tabx_list_entry (TRF_RATE_CIRCUIT_AT5_S)
	Ns_at5_tabx_list_entry (TRF_RATE_PACKET_AT5_S)
Ns_at5_end_table_or_function /* } */

Ns_at5_table_or_function (tabx_list, TAB_LAYER_ID_AT5_S)	/* { */
	Ns_at5_tabx_list_entry (LAYER_ID_CIRCUIT_AT5_S)
	Ns_at5_tabx_list_entry (LAYER_ID_PACKET_AT5_S)
Ns_at5_end_table_or_function /* } */

Ns_at5_table_or_function (tabx_list, TAB_BC_PROTOCOL_ID_AT5_S)	/* { */
	Ns_at5_tabx_list_entry (BC_PROTOCOL_ID_1_AT5_S)
	Ns_at5_tabx_list_entry (BC_PROTOCOL_ID_2_AT5_S)
	Ns_at5_tabx_list_entry (BC_PROTOCOL_ID_3_AT5_S)
Ns_at5_end_table_or_function /* } */

Ns_at5_table_or_function (tabx_list, TAB_LLC_PROTOCOL_ID_AT5_S)	/* { */
	Ns_at5_tabx_list_entry (LLC_PROTOCOL_ID_1_AT5_S)
	Ns_at5_tabx_list_entry (LLC_PROTOCOL_ID_2_AT5_S)
	Ns_at5_tabx_list_entry (LLC_PROTOCOL_ID_3_AT5_S)
Ns_at5_end_table_or_function /* } */

Ns_at5_table_or_function (tabx_list, TAB_OP_TYPE_AT5_S)	/* { */
	Ns_at5_tabx_list_entry (OP_TYPE_UNCONFIRMED_AT5_S)
	Ns_at5_tabx_list_entry (OP_TYPE_CONFIRMED_AT5_S)
	Ns_at5_tabx_list_entry (OP_TYPE_RETURN_RESULT_AT5_S)
	Ns_at5_tabx_list_entry (OP_TYPE_RETURN_RESULT_2_AT5_S)
	Ns_at5_tabx_list_entry (OP_TYPE_RETURN_ERROR_AT5_S)
	Ns_at5_tabx_list_entry (OP_TYPE_REJECT_AT5_S)
Ns_at5_end_table_or_function /* } */

Ns_at5_table_or_function (tabx_list, TAB_MAN_CODE_AT5_S)	/* { */
	Ns_at5_tabx_list_entry (MAN_CODE_ACTION_AT5_S)
	Ns_at5_tabx_list_entry (MAN_CODE_EV_REPORT_AT5_S)
	Ns_at5_tabx_list_entry (MAN_CODE_GET_AT5_S)
	Ns_at5_tabx_list_entry (MAN_CODE_SET_AT5_S)
Ns_at5_end_table_or_function /* } */

Ns_at5_table_or_function (tabx_list, AT5_TAB_CHAN_SEL_S)	/* { */
	Ns_at5_tabx_list_entry (AT5_CHAN_SEL_BRI_S)
	Ns_at5_tabx_list_entry (AT5_CHAN_SEL_PRI_S)
Ns_at5_end_table_or_function /* } */

/*-------------------------------------------------------------------------*/

		/* Table of table items (indexed tables )*/

Ns_at5_table_or_function (tabx, AT5_TAB_TABX)	/* { */
	Ns_at5_tab_tabx_entry (T_NIL,					P_NIL)
	Ns_at5_tab_tabx_entry (AT5_TX_BC_PROTOCOL_ID, 	TAB_BC_PROTOCOL_ID_AT5_S)
	Ns_at5_tab_tabx_entry (AT5_TX_C_V,            	TAB_C_V_AT5_S)
	Ns_at5_tab_tabx_entry (AT5_TX_LAYER_ID,       	TAB_LAYER_ID_AT5_S)
	Ns_at5_tab_tabx_entry (AT5_TX_LLC_PROTOCOL_ID,	TAB_LLC_PROTOCOL_ID_AT5_S)
	Ns_at5_tab_tabx_entry (AT5_TX_MAN_CODE,       	TAB_MAN_CODE_AT5_S)
	Ns_at5_tab_tabx_entry (AT5_TX_OP_TYPE,        	TAB_OP_TYPE_AT5_S)
	Ns_at5_tab_tabx_entry (AT5_TX_TRF_RATE,       	TAB_TRF_RATE_AT5_S)
	Ns_at5_tab_tabx_entry (AT5_TX_CHAN_SEL,       	AT5_TAB_CHAN_SEL_S)
Ns_at5_end_table_or_function /* } */

/*-------------------------------------------------------------------------*/

/*

IE description structures :
-------------------------

					ie          tab_ie
	===============================================================
    | codeset | id | p_prog | size | p_struc | p_init| repetition |
    |---------|----|--------|------|---------|-------|------------|  meta-prog
    |         |    |  X----------------------------------------------> START
    |---------|----|--------|------|---------|-------|------------|       XXXXX
    |         |    |        |      |         |       |            |       YYYYY
    |---------|----|--------|------|---------|-------|------------|    END
    |         |    |        |      |         |       |            |
    |---------|----|--------|------|---------|-------|------------|
    |         |    |        |  X   |   X------------------------------> i_xxxx
    |---------|----|--------|--|---|---------|-------|------------|         Œ internal
    |         |    |        |  ---------------------------------------------| data
    |---------|----|--------|------|---------|-------|------------|         v structure
    |         |    |        |      |         |       |            |
    |---------|----|--------|------|---------|-------|------------|
    |         |    |        |      |         |   X--------------------> df_spdu_at5_i_xxxx
    |---------|----|--------|------|---------|-------|------------|       Œ implicit   and df_ssdu_at5_i_xxx
    |         |    |        |      |         |       |            |       | value or
    |---------|----|--------|------|---------|-------|------------|       v  P_NIL


         Information Element (IE) table of item :
					- codeset,
					- ie identifier;
					- program sequence address,
					- internal structure size,
					- internal structure address,
					- initialization structure address,
					- maximum number of repeated IE.

*/

Ns_at5_table_or_function (ie, AT5_TAB_IE)	/* { */

	Ns_at5_tab_ie_no_i_str (CODESET_SO, SENDING_COMPLETE, AT5_MX_SENDING_COMPLETE)	/* IE with no internal data */

	Ns_at5_tab_ie_entry (CODESET_0,BC,              &AT5_BC_SPDU,              i_bc,              &df_spdu_at5_i_bc,            &df_ssdu_at5_i_bc,             AT5_MX_BC)
	Ns_at5_tab_ie_entry (CODESET_0,CAUSE,           &AT5_CAUSE_SPDU,           i_cause,           &df_spdu_at5_i_cause,         &df_ssdu_at5_i_cause,          AT5_MX_CAUSE)
	Ns_at5_tab_ie_entry (CODESET_0,CALL_STATE,      &AT5_CALL_STATE_SPDU,      i_call_state,      &df_spdu_at5_i_call_state,    &df_ssdu_at5_i_call_state,     AT5_MX_CALL_STATE)
	Ns_at5_tab_ie_entry (CODESET_0,CHAN_ID,         &AT5_CHAN_ID_SPDU_P,       i_chan_id,         &df_spdu_at5_i_chan_id,       &df_ssdu_at5_i_chan_id,        AT5_MX_CHAN_ID)
	Ns_at5_tab_ie_entry (CODESET_0,PROGRESS_IND,    &AT5_PROGRESS_IND_SPDU,    i_progress_ind,    &df_spdu_at5_i_progress_ind,  &df_ssdu_at5_i_progress_ind,   AT5_MX_PROGRESS_IND)
	Ns_at5_tab_ie_entry (CODESET_0,TE_CAP,          &AT5_TE_CAP_SPDU,          i_te_cap,          &df_spdu_at5_i_te_cap,        &df_ssdu_at5_i_te_cap,         AT5_MX_TE_CAP)
	Ns_at5_tab_ie_entry (CODESET_0,KEYPAD,          &AT5_KEYPAD_SPDU_P,        i_keypad,          &df_spdu_at5_i_keypad,        &df_ssdu_at5_i_keypad,         AT5_MX_KEYPAD)
	Ns_at5_tab_ie_entry (CODESET_0,SIGNAL,          &AT5_SIGNAL_SPDU,          i_signal,          &df_spdu_at5_i_signal,        &df_ssdu_at5_i_signal,         AT5_MX_SIGNAL)
	Ns_at5_tab_ie_entry (CODESET_0,CALLING_NB,      &AT5_CALLING_NB_SPDU,      i_calling_nb,      &df_spdu_at5_i_calling_nb,    &df_ssdu_at5_i_calling_nb,     AT5_MX_CALLING_NB)
	Ns_at5_tab_ie_entry (CODESET_0,CALLED_NB,       &AT5_CALLED_NB_SPDU,       i_called_nb,       &df_spdu_at5_i_called_nb,     &df_ssdu_at5_i_called_nb,      AT5_MX_CALLED_NB)
	Ns_at5_tab_ie_entry (CODESET_0,LLC,             &AT5_LLC_SPDU_P,           i_llc,             &df_spdu_at5_i_llc,           &df_ssdu_at5_i_llc,            AT5_MX_LLC)
	Ns_at5_tab_ie_entry (CODESET_6,AT5_ENDPOINT_ID, &AT5_ENDPOINT_ID_SPDU,     i_endpoint_id,     &df_spdu_at5_i_endpoint_id,   &df_ssdu_at5_i_endpoint_id,    AT5_MX_ENDPOINT_ID)

		/* SPDU messages not used in Basic Services */

#   if AT5_SUPPLEMENTARY_SERVICES == ON

		Ns_at5_tab_ie_entry (CODESET_0,SERVICE_ID,  A_NIL,                 		i_service_id,      A_NIL,                     	A_NIL,                         AT5_MX_SERVICE_ID)
		Ns_at5_tab_ie_entry (CODESET_0,SWITCHHOOK,  &AT5_SWITCHHOOK_SPDU,      	i_switchhook,      &df_spdu_at5_i_switchhook, 	&df_ssdu_at5_i_switchhook,     AT5_MX_SWITCHHOOK)
		Ns_at5_tab_ie_entry (CODESET_0,UUI,         &AT5_UUI_SPDU,             	i_uui,             &df_spdu_at5_i_uui,        	&df_ssdu_at5_i_uui,            AT5_MX_UUI)
		Ns_at5_tab_ie_entry (CODESET_6,DISPLAY,		&AT5_DISPLAY_SPDU,			i_display,		   &df_spdu_at5_i_display,		&df_ssdu_at5_i_display,		   AT5_MX_DISPLAY_FLD)

#       if AT5_KEY_SYSTEM_FEATURE == ON
			Ns_at5_tab_ie_entry (CODESET_6,ASSOC_TYPE,  &AT5_ASSOC_TYPE_SPDU,   i_assoc_type,      &df_spdu_at5_i_assoc_type,   &df_ssdu_at5_i_assoc_type,     AT5_MX_ASSOC_TYPE)
#       endif

		Ns_at5_tab_ie_entry (CODESET_6,SEL_CALL_APPEAR, &AT5_SEL_CALL_APPEAR_SPDU_P, i_sel_call_appear, &df_spdu_at5_i_sel_call_appear,&df_ssdu_at5_i_sel_call_appear,AT5_MX_SEL_CALL_APPEAR)
		Ns_at5_tab_ie_entry (CODESET_6,ORI_CALL_APPEAR, &AT5_ORI_CALL_APPEAR_SPDU_P, i_ori_call_appear, &df_spdu_at5_i_ori_call_appear,&df_ssdu_at5_i_ori_call_appear,AT5_MX_ORI_CALL_APPEAR)
		Ns_at5_tab_ie_entry (CODESET_6,DEST_CALL_APPEAR,&AT5_DEST_CALL_APPEAR_SPDU_P,i_dest_call_appear,&df_spdu_at5_i_dest_call_appear,&df_ssdu_at5_i_dest_call_appear,AT5_MX_DEST_CALL_APPEAR)
		Ns_at5_tab_ie_entry (CODESET_6,OTHER_CALL_REF,  &AT5_OTHER_CALL_REF_SPDU,  i_other_call_ref,  &df_spdu_at5_i_other_call_ref, &df_ssdu_at5_i_other_call_ref, AT5_MX_OTHER_CALL_REF)
		Ns_at5_tab_ie_entry (CODESET_6,FEATURE_IND,     &AT5_FEATURE_IND_SPDU_P,   i_feature_ind,     &df_spdu_at5_i_feature_ind,    &df_ssdu_at5_i_feature_ind,    AT5_MX_FEATURE_IND)
		Ns_at5_tab_ie_entry (CODESET_6,ADJUNCT_CON,     &AT5_ADJUNCT_CON_SPDU,     i_adjunct_con,     &df_spdu_at5_i_adjunct_con,    &df_ssdu_at5_i_adjunct_con,    AT5_MX_ADJUNCT_CON)
		Ns_at5_tab_ie_entry (CODESET_6,DISPLAY_FLD,     &AT5_DISPLAY_FLD_SPDU,     i_display_fld,     &df_spdu_at5_i_display_fld,    &df_ssdu_at5_i_display_fld,    AT5_MX_DISPLAY_FLD)

		Ns_at5_tab_ie_entry (CODESET_6,FEATURE_ACT,     &AT5_FEATURE_ACT_SPDU_P,   i_feature_act,     &df_spdu_at5_i_feature_act,    &df_ssdu_at5_i_feature_act,    AT5_MX_FEATURE_ACT)
		Ns_at5_tab_ie_entry (CODESET_6,DISPLAY_CON,     &AT5_DISPLAY_CON_SPDU,     i_display_con,     &df_spdu_at5_i_display_con,    &df_ssdu_at5_i_display_con,    AT5_MX_DISPLAY_CON)
		Ns_at5_tab_ie_entry (CODESET_6,KEYPAD_CON,      &AT5_KEYPAD_CON_SPDU,      i_keypad_con,      &df_spdu_at5_i_keypad_con,     &df_ssdu_at5_i_keypad_con,     AT5_MX_KEYPAD_CON)

#   endif

	Ns_at5_tab_ie_entry (CODESET_6,MANAGMNT,            &AT5_MANAGMNT_SPDU,        i_managmnt,        &df_spdu_at5_i_managmnt,       &df_ssdu_at5_i_managmnt,       AT5_MX_MANAGMNT)

#if 0   /* NOT IMPLEMENTED */
#   if NS_RESTART_PROCEDURE == ON
		Ns_at5_tab_ie_entry (CODESET_0,RESTART_IND,     &AT5_RESTART_IND_SPDU,     i_restart_ind,     &df_spdu_at5_i_restart_ind,    &df_ssdu_at5_i_restart_ind,    AT5_MX_RESTART_IND)
#   endif
#endif

#   if MESSAGE_HEADER_IE == ON
		Ns_at5_tab_ie_msg_header
#   endif

Ns_at5_end_table_or_function /* } */

/*EOF*/
