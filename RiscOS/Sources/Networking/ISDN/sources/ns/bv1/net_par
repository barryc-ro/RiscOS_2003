
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_par.bv1
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the specific options and parameters
 * 		  of the NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

/*--------------------------------------------------------------------------*/
		/*
			NS interface sizing constants for IE variable length fields :
				maximum number of significant bytes only
				(i.e. as defined in the NS Standards).
		*/

#define BV1_MX_SZ_ADVICE_CHARGE		3			/* advice charge string */
#define BV1_MX_SZ_CALL_ID			2			/* called ID string */
#define BV1_MX_SZ_CALLED_NB			16			/* called number string */
#define BV1_MX_SZ_CALLED_SUB_ADD    4			/* called sub-address string */
#define BV1_MX_SZ_CALLING_NB		15			/* calling number string */
#define BV1_MX_SZ_CALLING_SUB_ADD   4			/* calling sub-address string */
#define BV1_MX_SZ_CONN_NB			15			/* calling number string */
#define BV1_MX_SZ_CONN_SUB_ADD 		4			/* calling sub-address string */
#define BV1_MX_SZ_DISPLAY			32			/* display string */
#define BV1_MX_SZ_KEYPAD			32			/* keypad string */

#define BV1_MX_SZ_REDIR_NB			15			/* redirecting number string */
#define BV1_MX_SZ_UUI               128			/* user-to-user string */
#define BV1_MX_SZ_CAUSE_DIAG		27			/* cause diagnostic string */
#define BV1_MX_SZ_CHAN_ID			30			/* chan ID string */

/*--------------------------------------------------------------------------*/

			/* NETWORK SIGNALLING SIZING CONSTANTS */

#define	BV1_MX_ADDITIONAL_OCTET 	10		/* maximum number of additional octet (extra octet after an EXT 1 octet) */
#define	BV1_MX_DL_RETRY				 0		/* maximum number of restablish Data Link retry */


					/*
							Call timer index affectation

						If timers are not used simultaneously
						they can have the same index (overlaping).

					*/
						/* User and network side */


#define BV1_T309_IDX				TI_NOT_IMPLEMENTED
#define BV1_T300_IDX				0
#define BV1_T303_IDX				0
#define BV1_T305_IDX				0
#define BV1_T307_IDX				0
#define BV1_T308_IDX				0
#define BV1_T310_IDX				0
#define BV1_T312_IDX				0
#define BV1_T313_IDX				0
#define BV1_T318_IDX				0
#define BV1_T319_IDX				0
#define BV1_T3CW_IDX				0

#define BV1_MX_CALL_TIMER			11				/* maximum number of CALL timer index */
#define	BV1_NB_CALL_TIMER			1				/* Nb of simultaneous NS call timers */

					/*
							DL Connection timer index affectation

						If timers are not used simultaneously
						they can have the same index (overlaping).

					*/

#define	T3DL							0
#define	T3_DL_EST						1

#define	BV1_NB_DL_TIMER					2

#if NS_RESTART_PROCEDURE == ON
#	define BV1_T316						2
#	define BV1_T317						3

#	define BV1_NB_TIMER_RESTART			2
#	define BV1_MX_N316					2						/* maximum repetition for T316 expiry */
#else
#	define BV1_NB_TIMER_RESTART			0
#endif


#if NS_SEGMENTATION == ON
#	define BV1_T314						(BV1_NB_DL_TIMER + BV1_NB_TIMER_RESTART)	/* This index must follow the last defined index */
#	define BV1_NB_TIMER_SEGMENTATION	1
#else
#	define BV1_NB_TIMER_SEGMENTATION	0
#endif

#define BV1_MX_DLCI_TIMER				(BV1_NB_DL_TIMER + BV1_NB_TIMER_RESTART + BV1_NB_TIMER_SEGMENTATION)	/* maximum number of DLCI timer index */

	/*----------------------------------------------------------*/

		/* Maximum number of repeated IE in a SPDU message */

				/* single octet */

#define BV1_MX_CONGEST_LEVEL		1					/* congestion level */

				/* Codeset 0 */

#define BV1_MX_BC					1					/* bearer capability */
#define BV1_MX_CALLED_NB			1					/* called party number */
#define BV1_MX_CALLED_SUB_ADD		1					/* called party subaddress */
#define BV1_MX_CALLING_NB			2					/* calling party number */
#define BV1_MX_CALLING_SUB_ADD		1					/* calling party subaddress */
#define BV1_MX_CALL_ID				1					/* call identity */
#define BV1_MX_CALL_STATE			1					/* call state */
#define BV1_MX_CAUSE				1					/* cause */
#define BV1_MX_CHAN_ID				1					/* channel identification */
#define BV1_MX_DISPLAY				1					/* display */
#define BV1_MX_HLC					1					/* high layer compatibility */
#define BV1_MX_KEYPAD				1					/* keypad facility */
#define BV1_MX_LLC					1					/* low layer compatibility */
#define BV1_MX_NOTIF_IND			1					/* notification indicator */
#define BV1_MX_PROGRESS_IND			1					/* progress indicator */
#define BV1_MX_RESTART_IND			1					/* restart indicator */
#define BV1_MX_UUI					1					/* user-user */

			/* Codeset 5 */

#define BV1_MX_ADVICE_CHARGE		1					/* advice of charge */
#define BV1_MX_CONN_NB				1					/* connected number */
#define BV1_MX_CONN_SUB_ADD			1					/* connected sub address */


		/* Codeset 6 */

#define BV1_MX_REDIR_NB				1					/* redirecting nb */

/*EOF*/

