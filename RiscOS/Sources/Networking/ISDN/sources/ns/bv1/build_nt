/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - build_nt.bv1
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *        bv1_net_build_pdu_ns - implements the simulation of the network side
 *                   for a call connection.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

/*--------------------------------------------------------------------------*
					 F U N C T I O N   H E A D E R

Name            bv1_net_build_pdu_ns - implements the simulation of the network side
					for a call connection.

Usage           bv1_net_build_pdu_ns ()

Common constants and declarations : ns.h

*--------------------------------------------------------------------------*/

void bv1_net_build_pdu_ns ()
{
		/* Message builder */

	switch (Tolower (g_spdu_id[0])) {

/*==========================================================================*/

#if EQUIPMENT == TE

		/*========== primitives as seen from TE side ==========*/

			/* Call establishment spdu event */

		case DA_ALERT :
				*p_info++ = ALERT;

				*p_info++ = CHAN_ID;
				*p_info++ = 1;
				*p_info++ = 0x8a;	/* 1+ INT_ID_IMPLICIT+ INT_TYPE_BRI+ 0+
										CHAN_EXCL+ NOT_D_CHAN+ B2_CHAN */
				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** alert ***");

				break;


		case DA_CALL_PROC :
				*p_info++ = CALL_PROC;

				*p_info++ = CHAN_ID;
				*p_info++ = 1;
				*p_info++ = 0x8a;	/* 1+ INT_ID_IMPLICIT+ INT_TYPE_BRI+ 0+
										CHAN_EXCL+ NOT_D_CHAN+ B2_CHAN */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** proc ***");

				break;

		case DA_CON_CON :
				*p_info++ = CON_CON;

				 p_ie_m = p_info;

				*p_info++ = 0xbf;	/* 1+ CONGEST_LEVEL+ RECEIVER_NOT_READY */


				*p_info++ = CAUSE;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ LOCATION_USER */
				*p_info++ = 0x91;	/* 1+ C_C_NORMAL_EVENT+ C_V_USER_BUSY_17 */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				Put_text_with_length ("*** con-con ***");

				break;

		case DA_CONN :
				*p_info++ = CONN;

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** conn ***");
				break;


		case DA_CONN_ACK :
				*p_info++ = CONN_ACK;

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** conn-ack ***");

				break;

		case DA_DISC :
				*p_info++ = DISC;

				 p_ie_m = p_info;

				*p_info++ = CAUSE;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ LOCATION_USER */
				*p_info++ = 0x90;	/* 1+ C_C_NORMAL_EVENT+ C_V_NORMAL_CLEARING_16 */

				Shift_to (CODESET_5, NON_LOCKING_SHIFT);
				*p_info++ =	ADVICE_CHARGE;
				*p_info++ = 4;
				*p_info++ = 0x41;	/* 0 + coding national + 0 + 0 + charge on duration */
				*p_info++ = 0x08;	/* 0 + charge every 0.1 second (!!!) */
				*p_info++ = 0x82; 	/* 0 + multiplier */
				*p_info++ = 0xf1;	/* nb of unit */

				 p_ie_o = p_info;
				*p_info++ = DISPLAY;
				Put_text_with_length ("*** disc ***");

				break;


		case DA_INFO :
				*p_info++ = INFO;

				*p_info++ = CAUSE;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ LOCATION_USER */
				*p_info++ = 0x9f;	/* 1+ C_C_NORMAL_EVENT+ C_V_NORMAL_UNSPECIFIED_31 */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** info ***");

				break;

		case DA_NOTIFY :
				*p_info++ = NOTIFY;

				 p_ie_m = p_info;

				*p_info++ = NOTIF_IND;
				*p_info++ = 1;
				*p_info++ = 0x80;	/* 1+ USER_SUSPENDED */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** notify ***");

				break;

		case DA_PROGRESS :
				*p_info++ = PROGRESS;

				 p_ie_m = p_info;

				*p_info++ = PROGRESS_IND;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ PROGRESS_LOC_USER */
				*p_info++ = 0x88;	/* 1+ PROGRESS_DESCR_IN_BAND_NOW */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** progress ***");

				*p_info++ = UUI;
				*p_info++ = 17;
				*p_info++ = 0x04;	/* PROTOCOL_DISCR_IA5 */
				 Put_text ("* progress/uui *");

				break;

		case DA_REL :
				*p_info++ = REL;

				*p_info++ = CAUSE;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ LOCATION_USER */
				*p_info++ = 0xD1;	/* 1+ C_C_NORMAL_EVENT+ C_V_81 */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				Put_text_with_length ("*** rel  ***");

				break;


		case DA_REL_COMP :
				*p_info++ = REL_COMP;

				 p_ie_m = p_info;

				*p_info++ = CAUSE;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ LOCATION_USER */
				*p_info++ = 0x90;	/* 1+ C_C_NORMAL_EVENT+ C_V_CALL_REJECT_21 */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				Put_text_with_length ("*** rel-comp ***");

				break;

		case DA_RES_ACK :
				*p_info++ = RES_ACK;

				 p_ie_m = p_info;

				*p_info++ = CHAN_ID;
				*p_info++ = 1;
				*p_info++ = 0x8a;	/* 1+ INT_ID_IMPLICIT+ INT_TYPE_BRI+ 0+
										CHAN_EXCL+ NOT_D_CHAN+ B2_CHAN */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** res-ack ***");

				break;


		case DA_RES_REJ :
				*p_info++ = RES_REJ;

				 p_ie_m = p_info;

				*p_info++ = CAUSE;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ LOCATION_USER */
				*p_info++ = 0x91;	/* 1+ C_C_NORMAL_EVENT+ C_V_USER_BUSY_17 */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** res-rej ***");

				break;

		case DA_RESTART :
				*p_info++ = RESTART;

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				Put_text_with_length ("*** restart ***");

				 p_ie_m = p_info;

				*p_info++ = RESTART_IND;
				*p_info++ = 1;
				*p_info++ = 0x87;	/* 1+ RI_ALL_INTERFACES */

				break;

		case DA_RESTART_ACK :
				*p_info++ = RESTART_ACK;

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				Put_text_with_length ("*** restart_ack ***");

				 p_ie_m = p_info;

				*p_info++ = RESTART_IND;
				*p_info++ = 1;
				*p_info++ = 0x87;	/* 1+ RI_ALL_INTERFACES */

				break;

		case DA_SETUP :
				*p_info++ = SETUP;

					/* no sending complete => overlap receiving */

				*p_info++ = BC;		/* Mandatory */
				*p_info++ = 2;
				*p_info++ = 0x88;	/* 1+ CODING_STD_CCITT+ TRF_CAP_UNRESTRICTED */
				*p_info++ = 0x90;	/* 0+ TRF_MODE_CIRCUIT+ TRF_RATE_64KBS */

				 p_ie_m = p_info;

				*p_info++ = CHAN_ID; /* Mandatory */
				*p_info++ = 1;
				*p_info++ = 0x8a;	/* 0+ INT_ID_IMPLICIT+ INT_TYPE_BRI+ 0+
										CHAN_EXCL+ NOT_D_CHAN+ B2_CHAN */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** setup ***");

				*p_info++ = CALLING_NB;
				*p_info++ = 3;
				*p_info++ = 0xA0;	/* 1+ NB_NATIONAL + PLAN_UNKNOW */
				 Put_text ("33");

				*p_info++ = CALLED_NB;
				*p_info++ = 11;
				*p_info++ = 0xA0;	/* 1+ NB_NATIONAL + PLAN_UNKNWON */
				 Put_text ("1234567890");

				*p_info++ = CALLED_SUB_ADD;
				*p_info++ = 3;
				*p_info++ = 0x80;	/* 1+ SUB_ADD_USER + 0000 */
				 Put_text ("21");

				 Shift_to (CODESET_6, NON_LOCKING_SHIFT);
				*p_info++ = REDIR_NB;
				*p_info++ = 0x06;
				*p_info++ = 0x21;	/* 0 + NB_NATIONAL + PLAN_ISDN */
				*p_info++ = 0x80;	/* 1 + PRESENTATION ALLOWED + USER PROVIDED */
				 Put_text ("2018");

				*p_info++ = LLC;
				*p_info++ = 0x06;
				*p_info++ = 0x88;	/* 1 + CODING_STD_CCITT+ TRF_CAP_UNRESTRICTED */
				*p_info++ = 0x90;	/* 1 + TRF_MODE_CIRCUIT+ TRF_RATE_64KBS */
				*p_info++ = 0x21;	/* 0 + layer id 1 + V110 */
				*p_info++ = 0x1f;	/* 0 + syn + not possible + 12 KBS */
				*p_info++ = 0x00;   /* 0 + */
				*p_info++ = 0x80;	/* 1 + no + no + odd */

				*p_info++ = HLC;
				*p_info++ = 2;
				*p_info++ = 0x91;	/* 1+ CODING_STD_CCITT+ 100+ 01 */
				*p_info++ = 0x81;	/* 1+ SERVICE_TELEPHONY */

				*p_info++ = UUI;
				*p_info++ = 13;
				*p_info++	= 0x04;	/* PROTOCOL_DISCR_IA5 */
				 Put_text ("** hello! **");

				break;

		case DA_STATUS :
				*p_info++ = STATUS;

				 p_ie_m = p_info;

				*p_info++ = CAUSE;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ LOCATION_USER */
				*p_info++ = 0x9f;	/* 1+ C_C_NORMAL_EVENT+ C_V_NORMAL_UNSPECIFIED_31 */

				*p_info++ = CALL_STATE;
				*p_info++ = 1;
				*p_info++ = 0;		/* CODING_STD_CCITT+ N0 (NULL) */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** status ***");

				break;

		case DA_SUSP_ACK :
				*p_info++ = SUSP_ACK;

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** susp-ack ***");

				break;

		case DA_SUSP_REJ :
				*p_info++ = SUSP_REJ;

				 p_ie_m = p_info;

				*p_info++ = CAUSE;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ LOCATION_USER */
				*p_info++ = 0x91;	/* 1+ C_C_NORMAL_EVENT+ C_V_USER_BUSY_17 */

				 p_ie_o = p_info;

				*p_info++ = DISPLAY;
				 Put_text_with_length ("*** susp-rej ***");

				break;

		case DA_USER_INFO :
				*p_info++ = USER_INFO;

				 p_ie_m = p_info;

				*p_info++ = UUI;
				*p_info++ = 16;
				*p_info++ = 0x04;	/* PROTOCOL_DISCR_IA5 */
				 Put_text ("** user-info **");

				break;

		case DA_SPDU_ID_UNKNOWN:
				*p_info++ = SPDU_ID_UNKNOWN;

				*p_info++ = CAUSE;
				*p_info++ = 2;
				*p_info++ = 0x80;	/* 1+ CODING_STD_CCITT+ 0+ LOCATION_USER */
				*p_info++ = 0x9f;	/* 1+ C_C_NORMAL_EVENT+ C_V_NORMAL_UNSPECIFIED_31 */

				break;

		case '1' :
				Automata_1 ();
				break;


/*==========================================================================*/

#endif

/*---------------- UNKNOWN primitive */

		case DA_HEXA_CODING :
				mg_ns_hexa ();		/* Hexadecimal coding */
				break;

		default :
			return;

	}

}

/*EOF*/
