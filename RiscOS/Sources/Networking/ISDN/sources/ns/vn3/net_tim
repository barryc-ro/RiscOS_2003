
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_tim.vn3
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the France Telecom VN3 specific timer tables
 * 		  of the NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

			/* TIMERS IMPLICIT VALUES */

				/* Network timer implicit values */

#define VN3_NET_T300			 	( 1 * SECOND)	/* T300 */
#define VN3_NET_T302				(20 * SECOND)	/* T302 */
#define VN3_NET_T303				( 4 * SECOND)	/* T303 */
#define VN3_NET_T305				(30 * SECOND)	/* T305 */
#define VN3_NET_T307				(60 * SECOND)	/* T307 */
#define VN3_NET_T308				( 4 * SECOND)	/* T308 */
#define VN3_NET_T309				(60 * SECOND)   /* T309 */
#define VN3_NET_T310				(10 * SECOND)   /* T310 */

#define VN3_NET_T314				( 4 * SECOND)   /* T314 */
#define VN3_NET_T316				( 2 * SECOND)   /* T316 */
#define VN3_NET_T317				( 3 * SECOND)   /* T317 */

				/* User timer values */

#define VN3_USER_T300				( 1 * SECOND)	/* T300 */
#define VN3_USER_T303				(10 * SECOND)	/* T303 */
#define VN3_USER_T304				(60 * SECOND)	/* T304 */
#define VN3_USER_T305				( 4 * SECOND)	/* T305 */
#define VN3_USER_T308				( 4 * SECOND)	/* T308 */
#define VN3_USER_T309				(60 * SECOND)	/* T309 */
#define VN3_USER_T310				(60 * SECOND)	/* T310 */
#define VN3_USER_T313			 	( 4 * SECOND)	/* T313 */
#define VN3_USER_T316				(2	* SECOND)	/* T316 RESTART PROCEDURE */
#define VN3_USER_T317				(1  * SECOND)	/* T317 RESTART PROCEDURE - LESS THAN T316 */
#define VN3_USER_T318				(10 * SECOND)	/* T318 == T319 in VN2 */
#define VN3_USER_T319				( 4 * SECOND)	/* T319 == T318 in VN2 */
#define VN3_USER_T322				( 4 * SECOND)	/* T322 */

#define VN3_USER_T399				(10 * SECOND)   /* T399 */

#define VN3_USER_T314				( 4 * SECOND)   /* T314 */

			/* NS timer implicit value table */

		/* Call associated timers */

CONST_ARRAY struct ns_timer VN3_TI_CALL[] = {

/*	NT value		User value		Event ID		Index (0 -> NB_CALL_TIMER-1) */

	{VN3_NET_T300,		VN3_USER_T300,		TI_300,			VN3_T300_IDX},		/* T300 */
	{VN3_NET_T302,		0,					TI_302,			VN3_T302_IDX},		/* T302 */
	{VN3_NET_T303,		VN3_USER_T303,		TI_303,			VN3_T303_IDX},		/* T303 */
	{0,					VN3_USER_T304,		TI_304,			VN3_T304_IDX},		/* T304 */
	{VN3_NET_T305,		VN3_USER_T305,		TI_305,			VN3_T305_IDX},		/* T305 */
	{VN3_NET_T307,		0,					TI_307,			VN3_T307_IDX},		/* T307 */
	{VN3_NET_T308,		VN3_USER_T308,		TI_308,			VN3_T308_IDX},		/* T308 */
	{VN3_NET_T310,		VN3_USER_T310,		TI_310,			VN3_T310_IDX},		/* T310 */
	{0,					VN3_USER_T313,		TI_313,			VN3_T313_IDX},		/* T313 */
	{0,					VN3_USER_T318,		TI_318,			VN3_T318_IDX},		/* T318 */
	{0,					VN3_USER_T319,		TI_319,			VN3_T319_IDX},		/* T319 */
	{0,					VN3_USER_T322,		TI_322,			VN3_T322_IDX},		/* T322 */
	{0,					VN3_USER_T399,		TI_399,			VN3_T399_IDX},		/* T399 */

#if NS_T309 == ON
	{VN3_NET_T309,		VN3_USER_T309,		TI_309,			VN3_T309_IDX},		/* T309 */
#endif

};

		/* DLCI associated timers */

CONST_ARRAY struct ns_timer VN3_TI_DLCI[] = {

/*	NT value				User value		Event ID		Index (0 -> MX_DLCI_TIMER-1) */

	{TI_DL_VAL,				TI_DL_VAL,		TI_DL	},		/* T3DL */
	{TI_DL_EST_VAL,			TI_DL_EST_VAL,	TI_DL_EST},		/* T3_DL_EST */

#	if NS_RESTART_PROCEDURE == ON
		{VN3_NET_T316,		VN3_USER_T316,		TI_316	},		/* T316 */
		{VN3_NET_T317,		VN3_USER_T317,		TI_317 	},		/* T317 */
#	endif

#	if NS_SEGMENTATION == ON
		{VN3_NET_T314,		VN3_USER_T314,		TI_314	},		/* T314 */
#	endif
};

	/* Index table for timers used in the kernel */

CONST_ARRAY uchar VN3_TI_IDX[] = {

#	if NS_T309 == ON
		VN3_T309,
#	endif

#	if NS_SEGMENTATION == ON
		VN3_T314,
#	endif

#	if NS_RESTART_PROCEDURE == ON
		VN3_T316,
		VN3_T317,
#	endif

	TI_EOT,
};

/*EOF*/
