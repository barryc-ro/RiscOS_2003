
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_par.vn3
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the France Telecom VN3 specific options and parameters
 * 		  of the NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/


/*--------------------------------------------------------------------------*/

		/*
			NS interface sizing constants for IE variable length fields :
				maximum number of significant bytes only
				(i.e. as defined in the NS Standards).
		*/

#define VN3_MX_SZ_CALLING_NB		18			/* calling number */
#define VN3_MX_SZ_CALLING_SUB_ADD   8			/* calling sub-address */
#define VN3_MX_SZ_CALLED_NB			23			/* called number */
#define	VN3_MX_SZ_CAUSE_DIAG		27			/* diagnostic in cause */
#define VN3_MX_SZ_REDIR_NB			23			/* redirected number */
#define VN3_MX_SZ_CALLED_SUB_ADD    10			/* called sub-address */
#define VN3_MX_SZ_UUI               128			/* user-to-user string */
#define VN3_MX_SZ_KEYPAD			36			/* keypad string */
#define VN3_MX_SZ_DISPLAY			36			/* display string */
#define VN3_MX_SZ_CALL_ID			4			/* called ID */
#define VN3_MX_SZ_USER_FAC			7			/* user facility information */

/*--------------------------------------------------------------------------*/

			/* NETWORK SIGNALLING SIZING CONSTANTS */

#define	VN3_MX_DL_RETRY				 0				/* maximum number of restablish Data Link retry */
#define VN3_MX_ADDITIONAL_OCTET 	10				/* maximum number of additional octet (extra octet after an EXT 1 octet) */

#define VN3_SPF_FAC_PAD_SIZE		Round (sizeof(ns_offset_t)+2*sizeof(ie_val)) - sizeof(ns_offset_t)+2*sizeof(ie_val) + Round (1)

/*--------------------------------------------------------------------------*/

					/*
							Call timer index affectation

						If timers are not used simultaneously
						they can have the same index (overlaping).

					*/
						/* User and network side */

#define VN3_T300_IDX				0
#define VN3_T302_IDX				0
#define VN3_T303_IDX				0
#define VN3_T304_IDX				0
#define VN3_T305_IDX				0
#define VN3_T307_IDX				0
#define VN3_T308_IDX				0
#define VN3_T310_IDX				0
#define VN3_T313_IDX				0
#define VN3_T318_IDX				0
#define VN3_T319_IDX				0
#define VN3_T322_IDX				1
#define VN3_T399_IDX				0

#if NS_T309 == ON
#	define VN3_T309_IDX				2
#	define VN3_MX_CALL_TIMER		14				/* maximum number of timer index */
#	define VN3_NB_CALL_TIMER		3				/* Nb of simultaneous NS call timers */
#else
#	define VN3_MX_CALL_TIMER		13				/* maximum number of timer index */
#	define VN3_NB_CALL_TIMER		2				/* Nb of simultaneous NS call timers */
#endif

					/*
							DL Connection timer index affectation

						If timers are not used simultaneously
						they can have the same index (overlaping).

					*/

#define	T3DL							0
#define	T3_DL_EST						1

#define	VN3_NB_DL_TIMER					2

#if NS_RESTART_PROCEDURE == ON
#	define VN3_T316						2
#	define VN3_T317						3

#	define VN3_NB_TIMER_RESTART			2
#	define VN3_MX_N316					2						/* maximum repetition for T316 expiry */
#else
#	define VN3_NB_TIMER_RESTART			0
#endif


#if NS_SEGMENTATION == ON
#	define VN3_T314						(VN3_NB_DL_TIMER + VN3_NB_TIMER_RESTART)	/* This index must follow the last defined index */
#	define VN3_NB_TIMER_SEGMENTATION	1
#else
#	define VN3_NB_TIMER_SEGMENTATION	0
#endif

#define VN3_MX_DLCI_TIMER				(VN3_NB_DL_TIMER + VN3_NB_TIMER_RESTART + VN3_NB_TIMER_SEGMENTATION)	/* maximum number of DLCI timer index */

	/*----------------------------------------------------------*/

		/* Maximum number of repeated IE in a SPDU message */

				/* single octet */

#define VN3_MX_MORE_DATA			1					/* more data */

				/* Codeset 0 */

#define VN3_MX_BC					1					/* bearer capability */
#define VN3_MX_CALLED_NB			1					/* called party number */
#define VN3_MX_CALLED_SUB_ADD		1					/* called party subaddress */
#define VN3_MX_CALLING_NB			2					/* calling party number */
#define VN3_MX_CALLING_SUB_ADD		1					/* calling party subaddress */
#define VN3_MX_CALL_ID				1					/* call identity */
#define VN3_MX_CALL_STATE			1					/* call state */
#define VN3_MX_CAUSE				1					/* cause */
#define VN3_MX_CHAN_ID				1					/* channel identification */
#define VN3_MX_DISPLAY				1					/* display */
#define VN3_MX_HLC					1					/* high layer compatibility */
#define VN3_MX_KEYPAD				1					/* keypad facility */
#define VN3_MX_LLC					1					/* low layer compatibility */
#define VN3_MX_PROGRESS_IND			1					/* progress indicator */
#define VN3_MX_RESTART_IND			1					/* restart indicator */
#define VN3_MX_SPF_FAC				1					/* specific facility */
#define VN3_MX_UUI					1					/* user-user */

#define VN3_MX_CONGEST_LEVEL		1					/* congestion level */
#define VN3_MX_DATE_TIME			1					/* date and time */
#define VN3_MX_FACILITY				1					/* facility ETSI */
#define VN3_MX_NOTIF_IND			1					/* notification indicator */
#define VN3_MX_SENDING_COMPLETE		1					/* sending complete */
#define VN3_MX_SIGNAL				1					/* signal */
#define VN3_MX_REDIR_NB				1					/* redirection nb */

				/* codeset 6 */

#define VN3_MX_USER_FAC				1					/* user facility */
#define VN3_MX_USER_MODE			1					/* user mode */

/*EOF*/

