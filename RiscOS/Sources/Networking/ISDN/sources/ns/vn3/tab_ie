/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - tab_ie.vn3
 *
 * $Revision$
 *
 * $Date$
 *
 * Implements the Tables (containing address) describing all the 
 * information elements and the integrity constraints associated to.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/


		/*
			Table of table items - the items are ordered according to the
			table ID number : table ID = index of the table.
		*/

Ns_vn3_table_or_function (tabl, VN3_TAB_TABL)	/* { */
	Ns_vn3_tab_tabl_entry (T_NIL,						P_NIL)
	Ns_vn3_tab_tabl_entry (VN3_T_TRF_CAP,				VN3_TRF_CAP_S)
	Ns_vn3_tab_tabl_entry (VN3_T_C_C,					VN3_C_C_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CHAN_PREF_EXCL,		VN3_CHAN_PREF_EXCL_S)
	Ns_vn3_tab_tabl_entry (VN3_T_INT_TYPE,				VN3_INT_TYPE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CHAN_NUMBER,			VN3_CHAN_NUMBER_S)
	Ns_vn3_tab_tabl_entry (VN3_T_SPF_FAC_CODE,			VN3_SPF_FAC_CODE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CALLING_NB_PLAN,		VN3_CALLING_NB_PLAN_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CALLED_NB_TYPE,		VN3_CALLED_NB_TYPE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CALLED_NB_PLAN,		VN3_CALLED_NB_PLAN_S)
	Ns_vn3_tab_tabl_entry (VN3_T_SUB_ADD_TYPE,			VN3_SUB_ADD_TYPE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CODING_STD,			VN3_CODING_STD_S)
	Ns_vn3_tab_tabl_entry (VN3_T_TRF_CAP_2,				VN3_TRF_CAP_2_S)
	Ns_vn3_tab_tabl_entry (VN3_T_TRF_MODE,				VN3_TRF_MODE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_STRUCTURE,				VN3_STRUCTURE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_PROTOCOL_ID_1,			VN3_PROTOCOL_ID_1_S)
	Ns_vn3_tab_tabl_entry (VN3_T_PROTOCOL_ID_2,			VN3_PROTOCOL_ID_2_S)
	Ns_vn3_tab_tabl_entry (VN3_T_PROTOCOL_ID_3,			VN3_PROTOCOL_ID_3_S)
	Ns_vn3_tab_tabl_entry (VN3_T_NEGOTIATION,			VN3_NEGOTIATION_S)
	Ns_vn3_tab_tabl_entry (VN3_T_SYN_ASYN,				VN3_SYN_ASYN_S)
	Ns_vn3_tab_tabl_entry (VN3_T_USER_RATE,				VN3_USER_RATE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_INTER_RATE,			VN3_INTER_RATE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_NIC,					VN3_NIC_S)
	Ns_vn3_tab_tabl_entry (VN3_T_FLOW_CONTROL_TX,		VN3_FLOW_CONTROL_TX_S)
	Ns_vn3_tab_tabl_entry (VN3_T_DUPLEX,				VN3_DUPLEX_S)
	Ns_vn3_tab_tabl_entry (VN3_T_MODEM,					VN3_MODEM_S)
	Ns_vn3_tab_tabl_entry (VN3_T_INTERPRETATION,		VN3_INTERPRETATION_S)
	Ns_vn3_tab_tabl_entry (VN3_T_SCREEN_IND,			VN3_SCREEN_IND_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CALLING_NB_TYPE,		VN3_CALLING_NB_TYPE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_USER_PROTOCOL_DISCR,	VN3_USER_PROTOCOL_DISCR_S)
	Ns_vn3_tab_tabl_entry (VN3_T_PROGRESS_LOCATION,		VN3_PROGRESS_LOCATION_S)
	Ns_vn3_tab_tabl_entry (VN3_T_UUI_PROTOCOL_DISCR,	VN3_UUI_PROTOCOL_DISCR_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CALL_STATE,			VN3_CALL_STATE_VAL_S)
	Ns_vn3_tab_tabl_entry (VN3_T_STOP_BIT,				VN3_STOP_BIT_S)
	Ns_vn3_tab_tabl_entry (VN3_T_DATA_BIT,				VN3_DATA_BIT_S)
	Ns_vn3_tab_tabl_entry (VN3_T_PARITY,				VN3_PARITY_S)
	Ns_vn3_tab_tabl_entry (VN3_T_FLOW_CONTROL_RX,		VN3_FLOW_CONTROL_RX_S)
	Ns_vn3_tab_tabl_entry (VN3_T_SPF_FAC_ACTION,		VN3_SPF_FAC_ACTION_S)
	Ns_vn3_tab_tabl_entry (VN3_T_RESTART_IND_CLASS,		VN3_RESTART_IND_CLASS_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CAUSE_LOCATION,		VN3_CAUSE_LOCATION_S)
	Ns_vn3_tab_tabl_entry (VN3_T_PROGRESS_DESCRIPTION,	VN3_PROGRESS_DESCRIPTION_S)
	Ns_vn3_tab_tabl_entry (VN3_T_SIGNAL_VAL,			VN3_SIGNAL_VAL_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CONGEST_LEVEL,			VN3_CONGEST_LEVEL_S)
	Ns_vn3_tab_tabl_entry (VN3_T_OUT_BAND_NEG,			VN3_OUT_BAND_NEG_S)
	Ns_vn3_tab_tabl_entry (VN3_T_NOTIF_IND_DESCR,		VN3_NOTIF_IND_DESCR_S)
	Ns_vn3_tab_tabl_entry (VN3_T_REDIR_NB_TYPE,			VN3_REDIR_NB_TYPE_S)
	Ns_vn3_tab_tabl_entry (VN3_T_REDIR_NB_PRES,			VN3_REDIR_NB_PRES_S)
	Ns_vn3_tab_tabl_entry (VN3_T_CALLING_NB_PRES,		VN3_CALLING_NB_PRES_S)

Ns_vn3_end_table_or_function /* } */

/*=========================================================================*/

		/* Table of list of tables */

Ns_vn3_table_or_function (tabx_list, VN3_TAB_C_V_S)	/* { */
	Ns_vn3_tabx_list_entry (VN3_C_V_NORMAL_EVENT_0_S)
	Ns_vn3_tabx_list_entry (VN3_C_V_NORMAL_EVENT_S)
	Ns_vn3_tabx_list_entry (VN3_C_V_RESOURCE_UNAVAILABLE_S)
	Ns_vn3_tabx_list_entry (VN3_C_V_SERVICE_NOT_AVAILABLE_S)
	Ns_vn3_tabx_list_entry (VN3_C_V_SERVICE_NOT_IMPLEMENTED_S)
	Ns_vn3_tabx_list_entry (VN3_C_V_INVALID_MESSAGE_S)
	Ns_vn3_tabx_list_entry (VN3_C_V_PROTOCOL_ERROR_S)
	Ns_vn3_tabx_list_entry (VN3_C_V_INTERWORKING_S)
Ns_vn3_end_table_or_function /* } */

Ns_vn3_table_or_function (tabx_list, VN3_TAB_CHAN_SEL_S)	/* { */
	Ns_vn3_tabx_list_entry (VN3_CHAN_SEL_BRI_S)
	Ns_vn3_tabx_list_entry (VN3_CHAN_SEL_PRI_S)
Ns_vn3_end_table_or_function /* } */

Ns_vn3_table_or_function (tabx_list, VN3_TAB_TRF_RATE_S)	/* { */
	Ns_vn3_tabx_list_entry (VN3_TRF_RATE_CIRCUIT_S)
	Ns_vn3_tabx_list_entry (VN3_TRF_RATE_PACKET_S)
Ns_vn3_end_table_or_function /* } */

Ns_vn3_table_or_function (tabx_list, VN3_TAB_TELESERVICE_S)	/* { */
	Ns_vn3_tabx_list_entry (VN3_TELESERVICE_CCITT_S)
	Ns_vn3_tabx_list_entry (VN3_TELESERVICE_NATIONAL_S)
Ns_vn3_end_table_or_function /* } */

/*-------------------------------------------------------------------------*/

		/* Table of table items (indexed tables )*/

Ns_vn3_table_or_function (tabx, VN3_TAB_TABX)	/* { */
	Ns_vn3_tab_tabx_entry (T_NIL,				P_NIL)
	Ns_vn3_tab_tabx_entry (VN3_TX_C_V,			VN3_TAB_C_V_S)
	Ns_vn3_tab_tabx_entry (VN3_TX_CHAN_SEL,		VN3_TAB_CHAN_SEL_S)
	Ns_vn3_tab_tabx_entry (VN3_TX_TRF_RATE,		VN3_TAB_TRF_RATE_S)
	Ns_vn3_tab_tabx_entry (VN3_TX_TELESERVICE,	VN3_TAB_TELESERVICE_S)
Ns_vn3_end_table_or_function /* } */

/*-------------------------------------------------------------------------*/

/*

IE description structures :
-------------------------

					ie			tab_ie
	===============================================================
	| codeset | id | p_prog | size | p_struc | p_init| repetition |
	|---------|----|--------|------|---------|-------|------------|  meta-prog
	|         |    |  X----------------------------------------------> START
	|---------|----|--------|------|---------|-------|------------|       XXXXX
	|         |    |        |      |         |       |            |       YYYYY
	|---------|----|--------|------|---------|-------|------------|    END
	|         |    |        |      |         |       |            |
	|---------|----|--------|------|---------|-------|------------|
	|         |    |        |  X   |   X------------------------------> i_xxxx
	|---------|----|--------|--|---|---------|-------|------------|         Œ internal
	|         |    |        |  ---------------------------------------------| data
	|---------|----|--------|------|---------|-------|------------|         v structure
	|         |    |        |      |         |       |            |
	|---------|----|--------|------|---------|-------|------------|
	|         |    |        |      |         |   X--------------------> df_spdu_vn3_i_xxxx
	|---------|----|--------|------|---------|-------|------------|       Œ implicit   and df_ssdu_vn3_i_xxx
	|         |    |        |      |         |       |            |       | value or
	|---------|----|--------|------|---------|-------|------------|       v  P_NIL


		 Information Element (IE) table of item :
					- codeset,
					- ie identifier;
					- program sequence address,
					- internal structure size,
					- internal structure address,
					- initilization structure address,
					- maximum number of repeated IE.

*/

Ns_vn3_table_or_function (ie, VN3_TAB_IE)	/* { */

Ns_vn3_tab_ie_no_i_str (CODESET_SO,	MORE_DATA,	VN3_MX_MORE_DATA)

Ns_vn3_tab_ie_entry (CODESET_SO,CONGEST_LEVEL,	&VN3_CONGEST_LEVEL_SPDU,	i_congest_level,	&df_spdu_vn3_i_congest_level,	&df_ssdu_vn3_i_congest_level,	VN3_MX_CONGEST_LEVEL)

Ns_vn3_tab_ie_no_i_str (CODESET_SO,	SENDING_COMPLETE,	VN3_MX_SENDING_COMPLETE)

Ns_vn3_tab_ie_entry (CODESET_0,BC,				&VN3_BC_SPDU_P,				i_bc,				&df_spdu_vn3_i_bc,				&df_ssdu_vn3_i_bc,				VN3_MX_BC)
Ns_vn3_tab_ie_entry (CODESET_0,CAUSE,			&VN3_CAUSE_SPDU_P,			i_cause,			&df_spdu_vn3_i_cause,			&df_ssdu_vn3_i_cause,			VN3_MX_CAUSE)
Ns_vn3_tab_ie_entry (CODESET_0,CALL_ID,			&VN3_CALL_ID_SPDU,			i_call_id,			&df_spdu_vn3_i_call_id,			&df_ssdu_vn3_i_call_id,		    VN3_MX_CALL_ID)
Ns_vn3_tab_ie_entry (CODESET_0,CALL_STATE,		&VN3_CALL_STATE_SPDU,		i_call_state,		&df_spdu_vn3_i_call_state,		&df_ssdu_vn3_i_call_state,		VN3_MX_CALL_STATE)
Ns_vn3_tab_ie_entry (CODESET_0,CHAN_ID,			&VN3_CHAN_ID_SPDU_P,		i_chan_id,			&df_spdu_vn3_i_chan_id,			&df_ssdu_vn3_i_chan_id,			VN3_MX_CHAN_ID)
Ns_vn3_tab_ie_entry (CODESET_0,PROGRESS_IND,	&VN3_PROGRESS_IND_SPDU,	    i_progress_ind,		&df_spdu_vn3_i_progress_ind,	&df_ssdu_vn3_i_progress_ind,	VN3_MX_PROGRESS_IND)

#if NS_SPF_FACILITY == ON
	Ns_vn3_tab_ie_entry (CODESET_0,SPF_FAC,		&VN3_SPF_FAC_SPDU_P,		i_spf_fac,			&df_spdu_vn3_i_spf_fac,			&df_ssdu_vn3_i_spf_fac,			VN3_MX_SPF_FAC)
#endif

Ns_vn3_tab_ie_entry (CODESET_0,DISPLAY,			&VN3_DISPLAY_SPDU,			i_display,			&df_spdu_vn3_i_display,			&df_ssdu_vn3_i_display,			VN3_MX_DISPLAY)
Ns_vn3_tab_ie_entry (CODESET_0,KEYPAD,			&VN3_KEYPAD_SPDU,			i_keypad,			&df_spdu_vn3_i_keypad,			&df_ssdu_vn3_i_keypad,			VN3_MX_KEYPAD)

Ns_vn3_tab_ie_entry (CODESET_0,CALLING_NB,		&VN3_CALLING_NB_SPDU_P,		i_calling_nb,		&df_spdu_vn3_i_calling_nb,		&df_ssdu_vn3_i_calling_nb,		VN3_MX_CALLING_NB)
Ns_vn3_tab_ie_entry (CODESET_0,CALLING_SUB_ADD,	&VN3_CALLING_SUB_ADD_SPDU,	i_calling_sub_add,	&df_spdu_vn3_i_calling_sub_add,	&df_ssdu_vn3_i_calling_sub_add,	VN3_MX_CALLING_SUB_ADD)

Ns_vn3_tab_ie_entry (CODESET_0,CALLED_NB,		&VN3_CALLED_NB_SPDU,		i_called_nb,		&df_spdu_vn3_i_called_nb,		&df_ssdu_vn3_i_called_nb,		VN3_MX_CALLED_NB)
Ns_vn3_tab_ie_entry (CODESET_0,CALLED_SUB_ADD,	&VN3_CALLED_SUB_ADD_SPDU,	i_called_sub_add,	&df_spdu_vn3_i_called_sub_add,	&df_ssdu_vn3_i_called_sub_add,	VN3_MX_CALLED_SUB_ADD)

Ns_vn3_tab_ie_entry (CODESET_0,RESTART_IND,		&VN3_RESTART_IND_SPDU,		i_restart_ind,		&df_spdu_vn3_i_restart_ind,		&df_ssdu_vn3_i_restart_ind,		VN3_MX_RESTART_IND)
Ns_vn3_tab_ie_entry (CODESET_0,LLC,				&VN3_LLC_SPDU_P,			i_llc,				&df_spdu_vn3_i_llc,				&df_ssdu_vn3_i_llc,				VN3_MX_LLC)
Ns_vn3_tab_ie_entry (CODESET_0,HLC,				&VN3_HLC_SPDU,				i_hlc,				&df_spdu_vn3_i_hlc,				&df_ssdu_vn3_i_hlc,				VN3_MX_HLC)
Ns_vn3_tab_ie_entry (CODESET_0,UUI,				&VN3_UUI_SPDU_P,			i_uui,				&df_spdu_vn3_i_uui,				&df_ssdu_vn3_i_uui,				VN3_MX_UUI)

Ns_vn3_tab_ie_entry (CODESET_6,USER_MODE,		&VN3_USER_MODE_SPDU,		i_user_mode,		&df_spdu_vn3_i_user_mode,		&df_ssdu_vn3_i_user_mode,		VN3_MX_USER_MODE)
Ns_vn3_tab_ie_entry (CODESET_6,USER_FAC,		&VN3_USER_FAC_SPDU,			i_user_fac,			&df_spdu_vn3_i_user_fac,		&df_ssdu_vn3_i_user_fac,		VN3_MX_USER_FAC)

Ns_vn3_tab_ie_entry (CODESET_0,FACILITY,		&VN3_FACILITY_SPDU,			i_facility,			&df_spdu_vn3_i_facility,		&df_ssdu_vn3_i_facility,		VN3_MX_FACILITY)
Ns_vn3_tab_ie_entry (CODESET_0,SIGNAL,			&VN3_SIGNAL_SPDU,			i_signal,			&df_spdu_vn3_i_signal,			&df_ssdu_vn3_i_signal,			VN3_MX_SIGNAL)
Ns_vn3_tab_ie_entry (CODESET_0,NOTIF_IND,		&VN3_NOTIF_IND_SPDU,		i_notif_ind,		&df_spdu_vn3_i_notif_ind,		&df_ssdu_vn3_i_notif_ind,		VN3_MX_NOTIF_IND)
Ns_vn3_tab_ie_entry (CODESET_0,DATE_TIME,		&VN3_DATE_TIME_SPDU,		i_date_time,		&df_spdu_vn3_i_date_time,		&df_ssdu_vn3_i_date_time,		VN3_MX_DATE_TIME)
Ns_vn3_tab_ie_entry (CODESET_0,REDIR_NB,		&VN3_REDIR_NB_SPDU,			i_redir_nb,			&df_spdu_vn3_i_redir_nb,		&df_ssdu_vn3_i_redir_nb,		VN3_MX_REDIR_NB)

#if MESSAGE_HEADER_IE == ON
		Ns_vn3_tab_ie_msg_header
#endif

Ns_vn3_end_table_or_function /* } */

/*EOF*/
