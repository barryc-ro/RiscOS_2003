

/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - tab_spdu.hkt
 *
 * $Revision$
 *
 * $Date$
 *
 * Implements the Tables (containing address) describing the
 * signalling protocol data units (SPDU).
 *
 *-------------------------------------------------------------------------*/


/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

		/*
			Messages SPDU table ordered in increasing spdu_id :
					- message identifier (spdu ID)
					- event identifier of the event generates
					  by the message
					- message transfered from user to network (function group transmitting the message)
					- message transfered from network to user (functional group receiving the message)
					- type of access  (BRI or/and PRI)
					- information element table address.
		*/

Ns_hkt_table_or_function (spdu, HKT_TAB_SPDU)	/* { */

/*	  spdu          event_id 	  	 u--->n  	 n--->u	  access type	        & ie tab					& so ie tab */

	Ns_hkt_tab_spdu_entry (ALERT,		DA_ALERT,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)ALERT_IE_HKT,			A_NIL)
	Ns_hkt_tab_spdu_entry (CALL_PROC,	DA_CALL_PROC,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)CALL_PROC_IE_HKT,		A_NIL)
	Ns_hkt_tab_spdu_entry (CONN,		DA_CONN,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)CONN_IE_HKT,			A_NIL)
	Ns_hkt_tab_spdu_entry (CONN_ACK,	DA_CONN_ACK,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)CONN_ACK_IE_HKT,		A_NIL)
	Ns_hkt_tab_spdu_entry (PROGRESS,	DA_PROGRESS,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)PROGRESS_IE_HKT,		A_NIL)
	Ns_hkt_tab_spdu_entry (SETUP,		DA_SETUP,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)SETUP_IE_HKT,			(struct spdu_ie_so *)SETUP_IE_SO_HKT)
	Ns_hkt_tab_spdu_entry (SETUP_ACK,	DA_SETUP_ACK,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)SETUP_ACK_IE_HKT,		A_NIL)

	Ns_hkt_tab_spdu_entry (DISC,		DA_DISC,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)DISC_IE_HKT,			A_NIL)
	Ns_hkt_tab_spdu_entry (REL,			DA_REL,			U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)REL_IE_HKT,			A_NIL)
	Ns_hkt_tab_spdu_entry (REL_COMP,	DA_REL_COMP,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)REL_COM_IE_HKT,		A_NIL)

	Ns_hkt_tab_spdu_entry (RES,			DA_RES,			U_N_ALL,	OFF,		BRI,		(struct spdu_ie *)RES_IE_HKT,			A_NIL)
	Ns_hkt_tab_spdu_entry (RES_ACK,		DA_RES_ACK,		OFF,		N_U_ALL,	BRI,		(struct spdu_ie *)RES_ACK_IE_HKT,		A_NIL)
	Ns_hkt_tab_spdu_entry (RES_REJ,		DA_RES_REJ,		OFF,		N_U_ALL,	BRI,		(struct spdu_ie *)RES_REJ_IE_HKT,		A_NIL)
	Ns_hkt_tab_spdu_entry (SUSP,		DA_SUSP,		U_N_ALL,	OFF,		BRI,		(struct spdu_ie *)SUSP_IE_HKT,			A_NIL)
	Ns_hkt_tab_spdu_entry (SUSP_ACK,	DA_SUSP_ACK,	OFF,		N_U_ALL,	BRI,		(struct spdu_ie *)SUSP_ACK_IE_HKT,		A_NIL)
	Ns_hkt_tab_spdu_entry (SUSP_REJ,	DA_SUSP_REJ,	OFF,		N_U_ALL,	BRI,		(struct spdu_ie *)SUSP_REJ_IE_HKT,		A_NIL)

	Ns_hkt_tab_spdu_entry (INFO,		DA_INFO,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)INFO_IE_HKT,			(struct spdu_ie_so *)INFO_IE_SO_HKT)
	Ns_hkt_tab_spdu_entry (NOTIFY,		DA_NOTIFY,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)NOTIFY_IE_HKT,		A_NIL)
	Ns_hkt_tab_spdu_entry (RESTART,		DA_RESTART,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)RESTART_IE_HKT,		A_NIL)
	Ns_hkt_tab_spdu_entry (RESTART_ACK,	DA_RESTART_ACK,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)RESTART_ACK_IE_HKT,	A_NIL)
	Ns_hkt_tab_spdu_entry (STATUS_ENQ,	DA_STATUS_ENQ,	U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)STATUS_ENQ_IE_HKT,	A_NIL)
	Ns_hkt_tab_spdu_entry (STATUS,		DA_STATUS,		U_N_ALL,	N_U_ALL,	BRI+PRI,	(struct spdu_ie *)STATUS_IE_HKT,		A_NIL)

Ns_hkt_end_table_or_function /* } */

/*EOF*/

