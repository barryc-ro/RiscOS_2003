
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - pic_nsie.c
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *	initialization of address fields inside Tables or meta-program for
 *	Position Independent Code Compilers. (each function called using "CALL"
 *	Macro is generated by each meta-program as described in pic_nsie.h).
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1996 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#include "ns.h"

#if OM_CODE_TYPE == OM_PIC	/* specific functions used only for PIC{ */

#if C_COMPILER == TC
#	pragma hdrstop
#endif

/*-------------------------------------------------------------------------*/

				/* function declarations */

#if F_ETS == ON
	void	pic_init_ns_ets_meta_ie		(Void_parm);
	void	pic_init_ns_ets_ie			(Void_parm);
	void	pic_init_ns_ets_spdu		(Void_parm);
#endif

#if F_VN2 == ON
	void	pic_init_ns_vn2_meta_ie		(Void_parm);
	void	pic_init_ns_vn2_ie			(Void_parm);
	void	pic_init_ns_vn2_spdu		(Void_parm);
#endif

#if F_VN3 == ON
	void	pic_init_ns_vn3_meta_ie		(Void_parm);
	void	pic_init_ns_vn3_ie			(Void_parm);
	void	pic_init_ns_vn3_spdu		(Void_parm);
#endif

#if F_VN6 == ON
	void	pic_init_ns_vn6_meta_ie		(Void_parm);
	void	pic_init_ns_vn6_ie			(Void_parm);
	void	pic_init_ns_vn6_spdu		(Void_parm);
#endif

#if F_QSI == ON
	void	pic_init_ns_qsi_meta_ie		(Void_parm);
	void	pic_init_ns_qsi_ie			(Void_parm);
	void	pic_init_ns_qsi_spdu		(Void_parm);
#endif

#if F_TR6 == ON
	void	pic_init_ns_tr6_meta_ie		(Void_parm);
	void	pic_init_ns_tr6_ie			(Void_parm);
	void	pic_init_ns_tr6_spdu		(Void_parm);
#endif

#if F_SWD == ON
	void	pic_init_ns_swd_meta_ie		(Void_parm);
	void	pic_init_ns_swd_ie			(Void_parm);
	void	pic_init_ns_swd_spdu		(Void_parm);
#endif

#if F_BV1 == ON
	void	pic_init_ns_bv1_meta_ie		(Void_parm);
	void	pic_init_ns_bv1_ie			(Void_parm);
	void	pic_init_ns_bv1_spdu		(Void_parm);
#endif

#if F_BT2 == ON
	void	pic_init_ns_bt2_meta_ie		(Void_parm);
	void	pic_init_ns_bt2_ie			(Void_parm);
	void	pic_init_ns_bt2_spdu		(Void_parm);
#endif

#if F_DMS == ON
	void	pic_init_ns_dms_meta_ie		(Void_parm);
	void	pic_init_ns_dms_ie			(Void_parm);
	void	pic_init_ns_dms_spdu		(Void_parm);
#endif

#if F_NI1 == ON
	void	pic_init_ns_ni1_meta_ie		(Void_parm);
	void	pic_init_ns_ni1_ie			(Void_parm);
	void	pic_init_ns_ni1_spdu		(Void_parm);
#endif

#if F_NI2 == ON
	void	pic_init_ns_ni2_meta_ie		(Void_parm);
	void	pic_init_ns_ni2_ie			(Void_parm);
	void	pic_init_ns_ni2_spdu		(Void_parm);
#endif

#if F_AT5 == ON
	void	pic_init_ns_at5_meta_ie		(Void_parm);
	void	pic_init_ns_at5_ie			(Void_parm);
	void	pic_init_ns_at5_spdu		(Void_parm);
#endif

#if F_AT9 == ON
	void	pic_init_ns_at9_meta_ie		(Void_parm);
	void	pic_init_ns_at9_ie			(Void_parm);
	void	pic_init_ns_at9_spdu		(Void_parm);
#endif

#if F_E10 == ON
	void	pic_init_ns_e10_meta_ie		(Void_parm);
	void	pic_init_ns_e10_ie			(Void_parm);
	void	pic_init_ns_e10_spdu		(Void_parm);
#endif

#if F_AT4 == ON
	void	pic_init_ns_at4_meta_ie		(Void_parm);
	void	pic_init_ns_at4_ie			(Void_parm);
	void	pic_init_ns_at4_spdu		(Void_parm);
#endif

#if F_BIP == ON
	void	pic_init_ns_bip_meta_ie		(Void_parm);
	void	pic_init_ns_bip_ie			(Void_parm);
	void	pic_init_ns_bip_spdu		(Void_parm);
#endif

#if F_AU1 == ON
	void	pic_init_ns_au1_meta_ie		(Void_parm);
	void	pic_init_ns_au1_ie			(Void_parm);
	void	pic_init_ns_au1_spdu		(Void_parm);
#endif

#if F_HKT == ON
	void	pic_init_ns_hkt_meta_ie		(Void_parm);
	void	pic_init_ns_hkt_ie			(Void_parm);
	void	pic_init_ns_hkt_spdu		(Void_parm);
#endif

#if F_NTT == ON
	void	pic_init_ns_ntt_meta_ie		(Void_parm);
	void	pic_init_ns_ntt_ie			(Void_parm);
	void	pic_init_ns_ntt_spdu		(Void_parm);
#endif

#if F_KDD == ON
	void	pic_init_ns_kdd_meta_ie		(Void_parm);
	void	pic_init_ns_kdd_ie			(Void_parm);
	void	pic_init_ns_kdd_spdu		(Void_parm);
#endif

#if F_A11 == ON
	void	pic_init_ns_a11_meta_ie		(Void_parm);
	void	pic_init_ns_a11_ie			(Void_parm);
	void	pic_init_ns_a11_spdu		(Void_parm);
#endif

#if F_A17 == ON
	void	pic_init_ns_a17_meta_ie		(Void_parm);
	void	pic_init_ns_a17_ie			(Void_parm);
	void	pic_init_ns_a17_spdu		(Void_parm);
#endif

#if NS_SUPP_SERVICES == ON
	void	pic_init_ns_ss_ie			(Void_parm);
#endif

/*-------------------------------------------------------------------------*/

#define NS_INCLUDE_IE_META_FUNCTION		ON		/* include prototypes of functions inside mp_ie.xxx */

#include "ns_ie.h"			/* standard definitions for IE meta-program */
#include "pic_nsie.h"		/* new definitions of Macros so that each meta-program is a function */

	/* inclusion of all meta-programs : definitions of all initialization functions */

#if F_ETS == ON
#	include "ets.net_indx"
#	include "ets.mp_ie"
#endif

#if F_VN2 == ON
#	include "vn2.net_indx"
#	include "vn2.mp_ie"
#endif

#if F_VN3 == ON
#	include "vn3.net_indx"
#	include "vn3.mp_ie"
#endif

#if F_VN6 == ON
#	include "vn6.net_indx"
#	include "vn6.mp_ie"
#endif

#if F_QSI == ON
#	include "qsi.net_indx"
#	include "qsi.mp_ie"
#endif

#if F_TR6 == ON
#	include "tr6.net_indx"
#	include "tr6.mp_ie"
#endif

#if F_SWD == ON
#	include "swd.net_indx"
#	include "swd.mp_ie"
#endif

#if F_BV1 == ON
#	include "bv1.net_indx"
#	include "bv1.mp_ie"
#endif

#if F_BT2 == ON
#	include "bt2.net_indx"
#	include "bt2.mp_ie"
#endif

#if F_DMS == ON
#	include "dms.net_indx"
#	include "dms.mp_ie"
#endif

#if F_NI1 == ON
#	include "ni1.net_indx"
#	include "ni1.mp_ie"
#endif

#if F_NI2 == ON
#	include "ni2.net_indx"
#	include "ni2.mp_ie"
#endif

#if F_AT5 == ON
#	include "at5.net_indx"
#	include "at5.mp_ie"
#endif

#if F_AT9 == ON
#	include "at9.net_indx"
#	include "at9.mp_ie"
#endif

#if F_E10 == ON
#	include "e10.net_indx"
#	include "e10.mp_ie"
#endif

#if F_AT4 == ON
#	include "at4.net_indx"
#	include "at4.mp_ie"
#endif

#if F_BIP == ON
#	include "bip.net_indx"
#	include "bip.mp_ie"
#endif

#if F_AU1 == ON
#	include "au1.net_indx"
#	include "au1.mp_ie"
#endif

#if F_HKT == ON
#	include "hkt.net_indx"
#	include "hkt.mp_ie"
#endif

#if F_NTT == ON
#	include "ntt.net_indx"
#	include "ntt.mp_ie"
#endif

#if F_KDD == ON
#	include "kdd.net_indx"
#	include "kdd.mp_ie"
#endif

#if F_A11 == ON
#	include "a11.net_indx"
#	include "a11.mp_ie"
#endif

#if F_A17 == ON
#	include "a17.net_indx"
#	include "a17.mp_ie"
#endif

/*-------------------------------------------------------------------------*/

	/*	new re-definitions of Macros so that each meta-program is simply
		the call of its associated function as defined above ! */

#undef D_START
#undef D_TABL
#undef D_TABX
#undef D_VAL
#undef D_IF_VAL
#undef D_IF_TABL
#undef D_ELSE
#undef D_END_IF
#undef D_EXT_1
#undef D_EXT_0_1
#undef D_END_OCTET
#undef D_OPTIONAL_OCTET
#undef D_ANY_VAL
#undef D_PAD
#undef D_TEXT
#undef D_FUNCTION
#undef D_END

#undef START
#undef TABL
#undef TABX
#undef VAL
#undef IF_VAL
#undef IF_TABL
#undef ELSE
#undef END_IF
#undef EXT_1
#undef EXT_0_1
#undef END_OCTET
#undef OPTIONAL_OCTET
#undef ANY_VAL
#undef PAD
#undef TEXT
#undef FUNCTION
#undef END

#define D_VAL(xx)
#define D_TABL(xx)
#define D_TABX(xx)
#define D_ANY_VAL(xx)
#define D_PAD(xx)
#define D_TEXT(xx)
#define D_IF_VAL(xx)
#define D_IF_TABL(xx)
#define D_ELSE(xx)
#define D_EXT_1(xx)
#define D_EXT_0_1(xx)
#define D_END_IF(xx)
#define D_END(xx)
#define D_FUNCTION(xx)
#define D_END_OCTET(xx)
#define D_OPTIONAL_OCTET(xx)
#define D_START(xx)								

#define START(xx)		CALL (xx)

#define END(fct)
#define TABL(	p, l, tab_id, pp_val)
#define TABX(	p, l, tab_id, ppx_val, pp_val)
#define VAL(	p, l, val, pp_val)
#define IF_VAL(	cond_type, ppx_val, cond, val)
#define IF_TABL(cond_type, ppx_val, cond,tab_id)
#define ELSE()
#define END_IF()
#define EXT_1()
#define EXT_0_1()
#define END_OCTET()
#define OPTIONAL_OCTET()
#define ANY_VAL(p, l, pp_val)
#define PAD(	p, l)
#define TEXT(	code, restric, val_lgth, pp_val)
#define FUNCTION(fct)

#undef NS_INCLUDE_IE_META_FUNCTION		
#define NS_INCLUDE_IE_META_FUNCTION		OFF		/* do not include prototypes of functions inside mp_ie.xxx */

	/*	Network specific initialization functions : each function simply
		consists of the inclusion of all specific meta-programs */

#if F_ETS == ON

void pic_init_ns_ets_meta_ie ()
{
#	include "ets.mp_ie"
}

#endif

#if F_VN2 == ON

void pic_init_ns_vn2_meta_ie ()
{
#	include "vn2.mp_ie"
}

#endif

#if F_VN3 == ON

void pic_init_ns_vn3_meta_ie ()
{
#	include "vn3.mp_ie"
}

#endif

#if F_VN6 == ON

void pic_init_ns_vn6_meta_ie ()
{
#	include "vn6.mp_ie"
}

#endif

#if F_QSI == ON

void pic_init_ns_qsi_meta_ie ()
{
#	include "qsi.mp_ie"
}

#endif

#if F_TR6 == ON

void pic_init_ns_tr6_meta_ie ()
{
#	include "tr6.mp_ie"
}

#endif

#if F_SWD == ON

void pic_init_ns_swd_meta_ie ()
{
#	include "swd.mp_ie"
}

#endif

#if F_BV1 == ON

void pic_init_ns_bv1_meta_ie ()
{
#	include "bv1.mp_ie"
}

#endif

#if F_BT2 == ON

void pic_init_ns_bt2_meta_ie ()
{
#	include "bt2.mp_ie"
}

#endif

#if F_DMS == ON

void pic_init_ns_dms_meta_ie ()
{
#	include "dms.mp_ie"
}

#endif

#if F_NI1 == ON

void pic_init_ns_ni1_meta_ie ()
{
#	include "ni1.mp_ie"
}

#endif

#if F_NI2 == ON

void pic_init_ns_ni2_meta_ie ()
{
#	include "ni2.mp_ie"
}

#endif

#if F_AT5 == ON

void pic_init_ns_at5_meta_ie ()
{
#	include "at5.mp_ie"
}

#endif

#if F_AT9 == ON

void pic_init_ns_at9_meta_ie ()
{
#	include "at9.mp_ie"
}

#endif

#if F_E10 == ON

void pic_init_ns_e10_meta_ie ()
{
#	include "e10.mp_ie"
}

#endif

#if F_AT4 == ON

void pic_init_ns_at4_meta_ie ()
{
#	include "at4.mp_ie"
}

#endif

#if F_BIP == ON

void pic_init_ns_bip_meta_ie ()
{
#	include "bip.mp_ie"
}

#endif

#if F_AU1 == ON

void pic_init_ns_au1_meta_ie ()
{
#	include "au1.mp_ie"
}

#endif

#if F_HKT == ON

void pic_init_ns_hkt_meta_ie ()
{
#	include "hkt.mp_ie"
}

#endif

#if F_NTT == ON

void pic_init_ns_ntt_meta_ie ()
{
#	include "ntt.mp_ie"
}

#endif

#if F_KDD == ON

void pic_init_ns_kdd_meta_ie ()
{
#	include "kdd.mp_ie"
}

#endif

#if F_A11 == ON

void pic_init_ns_a11_meta_ie ()
{
#	include "a11.mp_ie"
}

#endif

#if F_A17 == ON

void pic_init_ns_a17_meta_ie ()
{
#	include "a17.mp_ie"
}

#endif

/*-------------------------------------------------------------------------*/

	/* Common initialization functions that call all the network specific functions */

void pic_init_ns_net_meta_ie ()
{

#	if F_ETS == ON
		pic_init_ns_ets_meta_ie ();
#	endif

#	if F_VN2 == ON
		pic_init_ns_vn2_meta_ie ();
#	endif

#	if F_VN3 == ON
		pic_init_ns_vn3_meta_ie ();
#	endif

#	if F_VN6 == ON
		pic_init_ns_vn6_meta_ie ();
#	endif

#	if F_QSI == ON
		pic_init_ns_qsi_meta_ie ();
#	endif

#	if F_TR6 == ON
		pic_init_ns_tr6_meta_ie ();
#	endif

#	if F_SWD == ON
		pic_init_ns_swd_meta_ie ();
#	endif

#	if F_BV1 == ON
		pic_init_ns_bv1_meta_ie ();
#	endif

#	if F_BT2 == ON
		pic_init_ns_bt2_meta_ie ();
#	endif

#	if F_DMS == ON
		pic_init_ns_dms_meta_ie ();
#	endif

#	if F_NI1 == ON
		pic_init_ns_ni1_meta_ie ();
#	endif

#	if F_NI2 == ON
		pic_init_ns_ni2_meta_ie ();
#	endif

#	if F_AT5 == ON
		pic_init_ns_at5_meta_ie ();
#	endif

#	if F_AT9 == ON
		pic_init_ns_at9_meta_ie ();
#	endif

#	if F_E10 == ON
		pic_init_ns_e10_meta_ie ();
#	endif

#	if F_AT4 == ON
		pic_init_ns_at4_meta_ie ();
#	endif

#	if F_BIP == ON
		pic_init_ns_bip_meta_ie ();
#	endif

#	if F_AU1 == ON
		pic_init_ns_au1_meta_ie ();
#	endif

#	if F_HKT == ON
		pic_init_ns_hkt_meta_ie ();
#	endif

#	if F_NTT == ON
		pic_init_ns_ntt_meta_ie ();
#	endif

#	if F_KDD == ON
		pic_init_ns_kdd_meta_ie ();
#	endif

#	if F_A11 == ON
		pic_init_ns_a11_meta_ie ();
#	endif

#	if F_A17 == ON
		pic_init_ns_a17_meta_ie ();
#	endif

}

void pic_init_ns_net_ie ()
{

#	if F_ETS == ON
		pic_init_ns_ets_ie ();
#	endif

#	if F_VN2 == ON
		pic_init_ns_vn2_ie ();
#	endif

#	if F_VN3 == ON
		pic_init_ns_vn3_ie ();
#	endif

#	if F_VN6 == ON
		pic_init_ns_vn6_ie ();
#	endif

#	if F_QSI == ON
		pic_init_ns_qsi_ie ();
#	endif

#	if F_TR6 == ON
		pic_init_ns_tr6_ie ();
#	endif

#	if F_SWD == ON
		pic_init_ns_swd_ie ();
#	endif

#	if F_BV1 == ON
		pic_init_ns_bv1_ie ();
#	endif

#	if F_BT2 == ON
		pic_init_ns_bt2_ie ();
#	endif

#	if F_DMS == ON
		pic_init_ns_dms_ie ();
#	endif

#	if F_NI1 == ON
		pic_init_ns_ni1_ie ();
#	endif

#	if F_NI2 == ON
		pic_init_ns_ni2_ie ();
#	endif

#	if F_AT5 == ON
		pic_init_ns_at5_ie ();
#	endif

#	if F_AT9 == ON
		pic_init_ns_at9_ie ();
#	endif

#	if F_E10 == ON
		pic_init_ns_e10_ie ();
#	endif

#	if F_AT4 == ON
		pic_init_ns_at4_ie ();
#	endif

#	if F_BIP == ON
		pic_init_ns_bip_ie ();
#	endif

#	if F_AU1 == ON
		pic_init_ns_au1_ie ();
#	endif

#	if F_HKT == ON
		pic_init_ns_hkt_ie ();
#	endif

#	if F_NTT == ON
		pic_init_ns_ntt_ie ();
#	endif

#	if F_KDD == ON
		pic_init_ns_kdd_ie ();
#	endif

#	if F_A11 == ON
		pic_init_ns_a11_ie ();
#	endif

#	if F_A17 == ON
		pic_init_ns_a17_ie ();
#	endif

#	if NS_SUPP_SERVICES == ON
		pic_init_ns_ss_ie ();
#	endif

}

void pic_init_ns_net_spdu ()
{

#	if F_ETS == ON
		pic_init_ns_ets_spdu ();
#	endif

#	if F_VN2 == ON
		pic_init_ns_vn2_spdu ();
#	endif

#	if F_VN3 == ON
		pic_init_ns_vn3_spdu ();
#	endif

#	if F_VN6 == ON
		pic_init_ns_vn6_spdu ();
#	endif

#	if F_QSI == ON
		pic_init_ns_qsi_spdu ();
#	endif

#	if F_TR6 == ON
		pic_init_ns_tr6_spdu ();
#	endif

#	if F_SWD == ON
		pic_init_ns_swd_spdu ();
#	endif

#	if F_BV1 == ON
		pic_init_ns_bv1_spdu ();
#	endif

#	if F_BT2 == ON
		pic_init_ns_bt2_spdu ();
#	endif

#	if F_DMS == ON
		pic_init_ns_dms_spdu ();
#	endif

#	if F_NI1 == ON
		pic_init_ns_ni1_spdu ();
#	endif

#	if F_NI2 == ON
		pic_init_ns_ni2_spdu ();
#	endif

#	if F_AT5 == ON
		pic_init_ns_at5_spdu ();
#	endif

#	if F_AT9 == ON
		pic_init_ns_at9_spdu ();
#	endif

#	if F_E10 == ON
		pic_init_ns_e10_spdu ();
#	endif

#	if F_AT4 == ON
		pic_init_ns_at4_spdu ();
#	endif

#	if F_BIP == ON
		pic_init_ns_bip_spdu ();
#	endif

#	if F_AU1 == ON
		pic_init_ns_au1_spdu ();
#	endif

#	if F_HKT == ON
		pic_init_ns_hkt_spdu ();
#	endif

#	if F_NTT == ON
		pic_init_ns_ntt_spdu ();
#	endif

#	if F_KDD == ON
		pic_init_ns_kdd_spdu ();
#	endif

#	if F_A11 == ON
		pic_init_ns_a11_spdu ();
#	endif

#	if F_A17 == ON
		pic_init_ns_a17_spdu ();
#	endif

}

#endif	/* end of "if OM_CODE_TYPE == OM_PIC"} */

/*EOF*/
