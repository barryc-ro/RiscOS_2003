
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename 	ns_ssdu.c
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#include "ns.h"
#include "isdn.h"

#if C_COMPILER == TC
#	pragma hdrstop
#endif

#include "ctx_ext.h"

		/*
		 * Because of compililation overflow problem,
		 * we undefine some networks so that they would not
		 * be compiled in this file.
		 * The would be taken in account in the NS_SSDU_1.C file.
		 */

#undef	F_AT4
#define	F_AT4	OFF

#undef	F_AT5
#define	F_AT5	OFF

#undef	F_AT9
#define	F_AT9	OFF

#undef	F_BIP
#define	F_BIP	OFF

#undef	F_AU1
#define	F_AU1	OFF

#undef	F_BV1
#define	F_BV1	OFF

#undef	F_BT2
#define	F_BT2	OFF

#undef	F_TR6
#define	F_TR6	OFF

#undef	F_ETS
#define	F_ETS	OFF

#undef	F_A17
#define	F_A17	OFF

#undef	F_A11
#define	F_A11	OFF

#undef	F_E10
#define	F_E10	OFF

#include "ns_mac.h"
#include "ssdu_ml.h"


		/* network specific description */

#if F_VN2 == ON
#	include "vn2.net_indx"
#	include "vn2.net_ssdu"
#endif

#if F_VN3 == ON
#	include "vn3.net_indx"
#	include "vn3.net_ssdu"
#endif

#if F_VN6 == ON
#	include "vn6.net_indx"
#	include "vn6.net_ssdu"
#endif

#if F_KDD == ON
#	include "kdd.net_indx"
#	include "kdd.net_ssdu"
#endif

#if F_NI1 == ON
#	include "ni1.net_indx"
#	include "ni1.net_ssdu"
#endif

#if F_NI2 == ON
#	include "ni2.net_indx"
#	include "ni2.net_ssdu"
#endif

#if F_DMS == ON
#	include "dms.net_indx"
#	include "dms.net_ssdu"
#endif

#if F_NTT == ON
#	include "ntt.net_indx"
#	include "ntt.net_ssdu"
#endif

#if F_SWD == ON
#	include "swd.net_indx"
#	include "swd.net_ssdu"
#endif

#if F_QSI == ON
#	include "qsi.net_indx"
#	include "qsi.net_ssdu"
#endif

#if F_HKT == ON
#	include "hkt.net_indx"
#	include "hkt.net_ssdu"
#endif


#define Add_i(p_first_val) 		((uchar *)p_first_val + i_ie_offset)
extern ushort i_ie_offset;		/* size of the internal data structure of the current IE */


/*

SSDU description tables :
-----------------------

		ssdu  tab_ssdu					ssdu_ie              ie  tab_ie
		===============      i------>=================     ===============
	i	|-------------|______|       |---------------|     |-------------|
		|-------------|              |---------------|   k |-------------|
		|-------------|           j  |---------------|     |-------------|
		|-------------|              |---------------|     |-------------|
		|-------------|              |---------------|       tab_ie :
		|-------------|                      |                   - codeset
		|-------------|                      |                   - ie_id
		  tab_ssdu :                         |                      |
			 - ssdu_id                       |                      |
			 - p_ssdu_ie					 |					    |
			 - size							 v	   				    |
										internal IE                 v
										structure			 implicit values
															  if the IE internal
															  structure

*/


/*--------------------------------------------------------------------------*
					 F U N C T I O N   H E A D E R

Name				ns_build_ssdu_table_2 - init of NS network table.

Usage            	void ns_build_ssdu_table_2 ();

Return value :		void

Common constants and declarations : ns.h

Common objects : NS global variables.

*--------------------------------------------------------------------------*/

void ns_build_ssdu_table_2 ()

{

#if F_DMS == ON
	if (dms != NIL) {
		tab_ssdu	[dms]	= (struct ssdu *)&DMS_TAB_SSDU;
	}
#endif

#if F_KDD == ON
	if (kdd != NIL) {
		tab_ssdu	[kdd]	= (struct ssdu *)&KDD_TAB_SSDU;
	}
#endif

#if F_NI1 == ON
	if (ni1 != NIL) {
		tab_ssdu	[ni1] 	= (struct ssdu *)&NI1_TAB_SSDU;
	}
#endif

#if F_NI2 == ON
	if (ni2 != NIL) {
		tab_ssdu	[ni2] 	= (struct ssdu *)&NI2_TAB_SSDU;
	}
#endif

#if F_NTT == ON
	if (ntt != NIL) {
		tab_ssdu	[ntt]	= (struct ssdu *)&NTT_TAB_SSDU;
	}
#endif

#if F_SWD == ON
	if (swd != NIL) {
		tab_ssdu	[swd] 	= (struct ssdu *)&SWD_TAB_SSDU;
	}
#endif

#if F_VN2 == ON
	if (vn2 != NIL) {
		tab_ssdu	[vn2] 	= (struct ssdu *)&VN2_TAB_SSDU;
	}
#endif

#if F_VN3 == ON
	if (vn3 != NIL) {
		tab_ssdu	[vn3] 	= (struct ssdu *)&VN3_TAB_SSDU;
	}
#endif

#if F_VN6 == ON
	if (vn6 != NIL) {
		tab_ssdu	[vn6] 	= (struct ssdu *)&VN6_TAB_SSDU;
	}
#endif

#if F_QSI == ON
	if (qsi != NIL) {
		tab_ssdu	[qsi] 	= (struct ssdu *)&QSI_TAB_SSDU;
	}
#endif

#if F_HKT == ON
	if (hkt != NIL) {
		tab_ssdu	[hkt] 	= (struct ssdu *)&HKT_TAB_SSDU;
	}
#endif

}

/*EOF*/

