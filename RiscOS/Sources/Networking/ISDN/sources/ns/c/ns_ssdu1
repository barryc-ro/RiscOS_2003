
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename 	ns_ssdu.c
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/


#include "ns.h"
#include "isdn.h"

#if C_COMPILER == TC
#	pragma hdrstop
#endif

#include "ctx_ext.h"
#include "ssdu_ml.h"

/*---------- Message Header parameters (MESSAGE_HEADER) */


		/* This part is common to all networks. */

#if MESSAGE_HEADER_IE == ON

	START	(SSDU_MESSAGE_HEADER)
			ANY_VAL		(&i_message_header.protocol_discr)
			ANY_VAL		(&i_message_header.call_ref_lgth)
			ANY_VAL		(&i_message_header.call_ref_flag)
			ANY_VAL		(&i_message_header.call_ref_val)
			ANY_VAL		(&i_message_header.call_ref_val_ext)
			ANY_VAL		(&i_message_header.message_type)
	END     (0)

#endif
		/* network specific description */

#if F_AT4 == ON
#	include "at4.net_indx"
#	include "at4.net_ssdu"
#endif

#if F_AT5 == ON
#	include "at5.net_indx"
#	include "at5.net_ssdu"
#endif

#if F_AT9 == ON
#	include "at9.net_indx"
#	include "at9.net_ssdu"
#endif

#if F_BIP == ON
#	include "bip.net_indx"
#	include "bip.net_ssdu"
#endif

#if F_AU1 == ON
#	include "au1.net_indx"
#	include "au1.net_ssdu"
#endif

#if F_BV1 == ON
#	include "bv1.net_indx"
#	include "bv1.net_ssdu"
#endif

#if F_BT2 == ON
#	include "bt2.net_indx"
#	include "bt2.net_ssdu"
#endif

#if F_TR6 == ON
#	include "tr6.net_indx"
#	include "tr6.net_ssdu"
#endif

#if F_ETS == ON
#	include "ets.net_indx"
#	include "ets.net_ssdu"
#endif

#if F_A17 == ON
#	include "a17.net_indx"
#	include "a17.net_ssdu"
#endif

#if F_A11 == ON
#	include "a11.net_indx"
#	include "a11.net_ssdu"
#endif

#if F_E10 == ON
#	include "e10.net_indx"
#	include "e10.net_ssdu"
#endif


#define Add_i(p_first_val) 		((uchar *)p_first_val + i_ie_offset)
extern ushort i_ie_offset;		/* size of the internal data structure of the current IE */


/*

SSDU description tables :
-----------------------

		ssdu  tab_ssdu					ssdu_ie              ie  tab_ie
		===============      i------>=================     ===============
	i	|-------------|______|       |---------------|     |-------------|
		|-------------|              |---------------|   k |-------------|
		|-------------|           j  |---------------|     |-------------|
		|-------------|              |---------------|     |-------------|
		|-------------|              |---------------|       tab_ie :
		|-------------|                      |                   - codeset
		|-------------|                      |                   - ie_id
		  tab_ssdu :                         |                      |
			 - ssdu_id                       |                      |
			 - p_ssdu_ie					 |					    |
			 - size							 v	   				    |
										internal IE                 v
										structure			 implicit values
															  if the IE internal
															  structure

*/

/*--------------------------------------------------------------------------*
					 F U N C T I O N   H E A D E R

Name				ns_build_ssdu_table_1 - init of NS network table.

Usage            	void ns_build_ssdu_table_1 ();

Return value :		void

Common constants and declarations : ns.h

Common objects : NS global variables.

*--------------------------------------------------------------------------*/

void ns_build_ssdu_table_1 ()

{

#if F_AT4 == ON
	if (at4 != NIL) {
		tab_ssdu	[at4] 	= (struct ssdu *)&AT4_TAB_SSDU;
	}
#endif

#if F_AT5 == ON
	if (at5 != NIL) {
		tab_ssdu	[at5] 	= (struct ssdu *)&AT5_TAB_SSDU;
	}
#endif

#if F_AT9 == ON
	if (at9 != NIL) {
		tab_ssdu	[at9] 	= (struct ssdu *)&AT9_TAB_SSDU;
	}
#endif

#if F_BIP == ON
	if (bip != NIL) {
		tab_ssdu	[bip] 	= (struct ssdu *)&BIP_TAB_SSDU;
	}
#endif

#if F_AU1 == ON
	if (au1 != NIL) {
		tab_ssdu	[au1] 	= (struct ssdu *)&AU1_TAB_SSDU;
	}
#endif

#if F_BT2 == ON
	if (bt2 != NIL) {
		tab_ssdu	[bt2] 	= (struct ssdu *)&BT2_TAB_SSDU;
	}
#endif

#if F_BV1 == ON
	if (bv1 != NIL) {
		tab_ssdu	[bv1] 	= (struct ssdu *)&BV1_TAB_SSDU;
	}
#endif

#if F_ETS == ON
	if (ets != NIL) {
		tab_ssdu	[ets] 	= (struct ssdu *)&ETS_TAB_SSDU;
	}
#endif

#if F_A17 == ON
	if (a17 != NIL) {
		tab_ssdu	[a17] 	= (struct ssdu *)&A17_TAB_SSDU;
	}
#endif

#if F_A11 == ON
	if (a11 != NIL) {
		tab_ssdu	[a11] 	= (struct ssdu *)&A11_TAB_SSDU;
	}
#endif

#if F_E10 == ON
	if (e10 != NIL) {
		tab_ssdu	[e10] 	= (struct ssdu *)&E10_TAB_SSDU;
	}
#endif

#if F_TR6 == ON
	if (tr6 != NIL) {
		tab_ssdu	[tr6] 	= (struct ssdu *)&TR6_TAB_SSDU;
	}
#endif

}

/*EOF*/

