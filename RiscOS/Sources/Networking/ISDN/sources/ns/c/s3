
/*-----------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - s3.c
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *        main - implements the main function of a server composed of
 *		         MNS and NS entities (Layer 3 entities).
 *
 *-----------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#include "services.h"
#include "ns_int.h"
#include "dl_int.h"

#include "simul.h"


		/* ----------- Common  variables ----------- */

	Server_common;

		/* ----------- Server definition ----------- */

CONST struct server_def p_server_def_s3[] = {

	/* entity ID	entry point	congestion processing */

		{ENT_NS,		ns,				OFF,	OFF,	ns_var_init},
		{ENT_MNS, 		mns,			ON,		ON,		mns_var_init},
		{ENT_SM,		sm,				OFF,	OFF,	sm_var_init},

#if SIMULATION == ON
		{ENT_TI,		FCT_NIL,		OFF},
#endif

		{ENT_NIL},
};

		/* ------------ Server queue ID ------------ */

uint		qid_s3;

	/* -- Message building and analysing functions lists -- */

#if (SIM_ANALYSER == ON) || (SIM_BUILDER == ON)

		/* ---- Global data ---- */

	uint	ns_pdu_2 		= OFF;		/* NS pdu 1 or 2 */
	uint	ns_pr_object 	= OFF;		/* NS print all objects */
	uint	ns_pr_state 	= ON;		/* NS print current objects */
	uint	ns_pr_dl_sdu_ie = ON;		/* DL print NS IE contained in SDU */
	uint	ns_pr_cc_sdu_ie	= ON;		/* NS pront CC IE contained in SDU */
	uint	ns_t309			= ON;		/* NS Timer T309 option */

#	if NS_SUPP_SERVICES == ON
		uint ns_pr_sdu_ss	= OFF;		/* NS print Supplementary Services data contained in SDU */
#	endif

		/* ----- Server's specific flags list ------ */

	struct server_flag s3_flag_list [] = {
		{'3',		FCT_NIL, &ns_t309,            "T309 option"},
		{'4',		FCT_NIL, &ns_pr_dl_sdu_ie,    "Print IEs in DL-SDU"},
		{'5',		FCT_NIL, &ns_pr_object,       "Print all NS objects"},
		{'6',		FCT_NIL, &ns_pr_state,        "Print NS state info"},
		{'7',		FCT_NIL, &ns_pr_cc_sdu_ie,    "Print IEs in NS-SDU"},
		{'8',		FCT_NIL, &ns_pdu_2,           "NS PDU 2"},
#		if NS_SUPP_SERVICES == ON
			{'9',	FCT_NIL, &ns_pr_sdu_ss,       "Print NS SS SDUs"},
#		endif

		{FLAG_NIL}
	};

		/* ---- Server "to" lists ---- */

	CONST struct server_simul_to p_sm_to [] = {
		{ENT_SM,	ana_sdu_sm, 		FCT_NIL},
		{ENT_MNS,	ana_sdu_sm, 		build_sdu_sm_to_mns},
		{ENT_NIL},
	};

	CONST struct server_simul_to p_ti_to [] = {
		{ENT_NS,	ana_sdu_ti_ns, 		build_sdu_ti_to_ns},
		{ENT_NIL},
	};

	CONST struct server_simul_to p_dl_d_to [] = {
		{ENT_NS,	ana_sdu_dl, 		build_sdu_dl_to_n},
		{ENT_NIL},
	};

	CONST struct server_simul_to p_ns_to [] = {
		{ENT_DL_D,	ana_sdu_dl, 		FCT_NIL},
		{ENT_MNS,	ana_sdu_mns, 		FCT_NIL},
		{ENT_CC,	ana_sdu_ns, 		FCT_NIL},
		{ENT_NIL},
	};

	CONST struct server_simul_to p_cc_to [] = {
		{ENT_NS,	ana_sdu_ns, 		build_sdu_cc_to_ns},
		{ENT_NIL},
	};

	CONST struct server_simul_to p_mns_to [] = {
		{ENT_SM,	ana_sdu_sm, 		FCT_NIL},
		{ENT_NS,	ana_sdu_mns, 		FCT_NIL},
		{ENT_NIL},
	};

		/* ---- Server "from" list ---- */

	CONST struct server_simul_from p_from [] = {
		{ENT_SM,	"System Management",				p_sm_to},
		{ENT_TI,	"Timer Management",					p_ti_to},
		{ENT_MNS,	"Management Network Signalling",	p_mns_to},
		{ENT_NS,	"Network Signalling",				p_ns_to},
		{ENT_DL_D,	"Data Link lap D",					p_dl_d_to},
		{ENT_CC,	"Call Control",						p_cc_to},
		{ENT_NIL},
	};

#endif	/* SIM_ANALYSER or SIM_BUILDER */

/*-------------------------------------------------------------------------*/

	Server_main(

		main,						/* name of the server's main function */
		p_server_def_s3,		/* pointer on the server's definition list */
		qid_s3,					/* variable containing the queue identifier */
		0,						/* size of the external FIFO queue (0 means implicit value) */
		p_from,					/* pointer on the messages origination
								   entities' list (used for simulation only) */
		s3_flag_list			/* pointer on the server's flags list */

		)

/*-------------------------------------------------------------------------*/

#if SIMULATION == ON

				/* Called but not used functions */

ushort 	build_pdu_ns_2 ()
{
	return (OK);
}

#endif

/*EOF*/
