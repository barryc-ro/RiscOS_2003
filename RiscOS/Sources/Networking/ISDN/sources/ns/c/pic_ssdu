
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - pic_ssdu.c
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *	initialization of IE meta-program address fields for
 *	Position Independent Code Compilers. (each function called using "CALL"
 *	Macro is generated by each meta-program as described in pic_ssdu.h).
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1996 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#include "ns.h"

#if OM_CODE_TYPE == OM_PIC	/* specific functions used only for PIC{ */

#if C_COMPILER == TC
#	pragma hdrstop
#endif

/*-------------------------------------------------------------------------*/

				/* function declarations */

#if F_ETS == ON
	void	pic_init_ns_ets_meta_ssdu	(Void_parm);
	void	pic_init_ns_ets_ssdu		(Void_parm);
#endif

#if F_VN2 == ON
	void	pic_init_ns_vn2_meta_ssdu	(Void_parm);
	void	pic_init_ns_vn2_ssdu		(Void_parm);
#endif

#if F_VN3 == ON
	void	pic_init_ns_vn3_meta_ssdu	(Void_parm);
	void	pic_init_ns_vn3_ssdu		(Void_parm);
#endif

#if F_VN6 == ON
	void	pic_init_ns_vn6_meta_ssdu	(Void_parm);
	void	pic_init_ns_vn6_ssdu		(Void_parm);
#endif

#if F_QSI == ON
	void	pic_init_ns_qsi_meta_ssdu	(Void_parm);
	void	pic_init_ns_qsi_ssdu		(Void_parm);
#endif

#if F_TR6 == ON
	void	pic_init_ns_tr6_meta_ssdu	(Void_parm);
	void	pic_init_ns_tr6_ssdu		(Void_parm);
#endif

#if F_SWD == ON
	void	pic_init_ns_swd_meta_ssdu	(Void_parm);
	void	pic_init_ns_swd_ssdu		(Void_parm);
#endif

#if F_BV1 == ON
	void	pic_init_ns_bv1_meta_ssdu	(Void_parm);
	void	pic_init_ns_bv1_ssdu		(Void_parm);
#endif

#if F_BT2 == ON
	void	pic_init_ns_bt2_meta_ssdu	(Void_parm);
	void	pic_init_ns_bt2_ssdu		(Void_parm);
#endif

#if F_DMS == ON
	void	pic_init_ns_dms_meta_ssdu	(Void_parm);
	void	pic_init_ns_dms_ssdu		(Void_parm);
#endif

#if F_NI1 == ON
	void	pic_init_ns_ni1_meta_ssdu	(Void_parm);
	void	pic_init_ns_ni1_ssdu		(Void_parm);
#endif

#if F_NI2 == ON
	void	pic_init_ns_ni2_meta_ssdu	(Void_parm);
	void	pic_init_ns_ni2_ssdu		(Void_parm);
#endif

#if F_AT5 == ON
	void	pic_init_ns_at5_meta_ssdu	(Void_parm);
	void	pic_init_ns_at5_ssdu		(Void_parm);
#endif

#if F_AT9 == ON
	void	pic_init_ns_at9_meta_ssdu	(Void_parm);
	void	pic_init_ns_at9_ssdu		(Void_parm);
#endif

#if F_E10 == ON
	void	pic_init_ns_e10_meta_ssdu	(Void_parm);
	void	pic_init_ns_e10_ssdu		(Void_parm);
#endif

#if F_AT4 == ON
	void	pic_init_ns_at4_meta_ssdu	(Void_parm);
	void	pic_init_ns_at4_ssdu		(Void_parm);
#endif

#if F_BIP == ON
	void	pic_init_ns_bip_meta_ssdu	(Void_parm);
	void	pic_init_ns_bip_ssdu		(Void_parm);
#endif

#if F_AU1 == ON
	void	pic_init_ns_au1_meta_ssdu	(Void_parm);
	void	pic_init_ns_au1_ssdu		(Void_parm);
#endif

#if F_HKT == ON
	void	pic_init_ns_hkt_meta_ssdu	(Void_parm);
	void	pic_init_ns_hkt_ssdu		(Void_parm);
#endif

#if F_NTT == ON
	void	pic_init_ns_ntt_meta_ssdu	(Void_parm);
	void	pic_init_ns_ntt_ssdu		(Void_parm);
#endif

#if F_KDD == ON
	void	pic_init_ns_kdd_meta_ssdu	(Void_parm);
	void	pic_init_ns_kdd_ssdu		(Void_parm);
#endif

#if F_A11 == ON
	void	pic_init_ns_a11_meta_ssdu	(Void_parm);
	void	pic_init_ns_a11_ssdu		(Void_parm);
#endif

#if F_A17 == ON
	void	pic_init_ns_a17_meta_ssdu	(Void_parm);
	void	pic_init_ns_a17_ssdu		(Void_parm);
#endif

/*-------------------------------------------------------------------------*/

#define NS_INCLUDE_SSDU_META_FUNCTION		ON		/* include prototypes of functions inside mp_ssdu.xxx */

#include "ssdu_ml.h"		/* standard definitions for SSDU meta-program */
#include "pic_ssdu.h"		/* new definitions of Macros so that each meta-program is a function */

	/* inclusion of all meta-programs : definitions of all initialization functions */

#if F_ETS == ON
#	include "ets.net_indx"
#	include "ets.mp_ssdu"
#endif

#if F_VN2 == ON
#	include "vn2.net_indx"
#	include "vn2.mp_ssdu"
#endif

#if F_VN3 == ON
#	include "vn3.net_indx"
#	include "vn3.mp_ssdu"
#endif

#if F_VN6 == ON
#	include "vn6.net_indx"
#	include "vn6.mp_ssdu"
#endif

#if F_QSI == ON
#	include "qsi.net_indx"
#	include "qsi.mp_ssdu"
#endif

#if F_TR6 == ON
#	include "tr6.net_indx"
#	include "tr6.mp_ssdu"
#endif

#if F_SWD == ON
#	include "swd.net_indx"
#	include "swd.mp_ssdu"
#endif

#if F_BV1 == ON
#	include "bv1.net_indx"
#	include "bv1.mp_ssdu"
#endif

#if F_BT2 == ON
#	include "bt2.net_indx"
#	include "bt2.mp_ssdu"
#endif

#if F_DMS == ON
#	include "dms.net_indx"
#	include "dms.mp_ssdu"
#endif

#if F_NI1 == ON
#	include "ni1.net_indx"
#	include "ni1.mp_ssdu"
#endif

#if F_NI2 == ON
#	include "ni2.net_indx"
#	include "ni2.mp_ssdu"
#endif

#if F_AT5 == ON
#	include "at5.net_indx"
#	include "at5.mp_ssdu"
#endif

#if F_AT9 == ON
#	include "at9.net_indx"
#	include "at9.mp_ssdu"
#endif

#if F_E10 == ON
#	include "e10.net_indx"
#	include "e10.mp_ssdu"
#endif

#if F_AT4 == ON
#	include "at4.net_indx"
#	include "at4.mp_ssdu"
#endif

#if F_BIP == ON
#	include "bip.net_indx"
#	include "bip.mp_ssdu"
#endif

#if F_AU1 == ON
#	include "au1.net_indx"
#	include "au1.mp_ssdu"
#endif

#if F_HKT == ON
#	include "hkt.net_indx"
#	include "hkt.mp_ssdu"
#endif

#if F_NTT == ON
#	include "ntt.net_indx"
#	include "ntt.mp_ssdu"
#endif

#if F_KDD == ON
#	include "kdd.net_indx"
#	include "kdd.mp_ssdu"
#endif

#if F_A11 == ON
#	include "a11.net_indx"
#	include "a11.mp_ssdu"
#endif

#if F_A17 == ON
#	include "a17.net_indx"
#	include "a17.mp_ssdu"
#endif

	/* Meta-program used for pseudo-ie "Message Header" : it must be the same as in ns_ssdu1.c */

#if MESSAGE_HEADER_IE == ON
	START	(SSDU_MESSAGE_HEADER)
			ANY_VAL		(&i_message_header.protocol_discr)
			ANY_VAL		(&i_message_header.call_ref_lgth)
			ANY_VAL		(&i_message_header.call_ref_flag)
			ANY_VAL		(&i_message_header.call_ref_val)
			ANY_VAL		(&i_message_header.call_ref_val_ext)
			ANY_VAL		(&i_message_header.message_type)
	END     (0)
#endif

/*-------------------------------------------------------------------------*/

	/*	new re-definitions of Macros so that each meta-program is simply
		the call of its associated function as defined above ! */

#undef D_START
#undef D_TABL
#undef D_TABX
#undef D_VAL
#undef D_IF_VAL
#undef D_IF_TABL
#undef D_ELSE
#undef D_END_IF
#undef D_ANY_VAL
#undef D_PAD
#undef D_TEXT
#undef D_FUNCTION
#undef D_END

#undef START
#undef TABL
#undef TABX
#undef VAL
#undef IF_VAL
#undef IF_TABL
#undef ELSE
#undef END_IF
#undef ANY_VAL
#undef PAD
#undef TEXT
#undef FUNCTION
#undef END

#define D_VAL(xx)
#define D_TABL(xx)
#define D_TABX(xx)
#define D_ANY_VAL(xx)
#define D_PAD(xx)
#define D_TEXT(xx)
#define D_IF_VAL(xx)
#define D_IF_TABL(xx)
#define D_ELSE(xx)
#define D_END_IF(xx)
#define D_END(xx)
#define D_FUNCTION(xx)
#define D_START(xx)

#define START(xx)		CALL (xx)

#define END(fct)
#define TABL(tab_id, pp_val)
#define TABX(tab_id, ppx_val, pp_val)
#define VAL(val, pp_val)
#define IF_VAL(ppx_val, cond, val)
#define ELSE()
#define END_IF()
#define ANY_VAL(pp_val)
#define PAD(lgth)
#define TEXT(mini, maxi, restr, val_lgth, pp_val)
#define FUNCTION(fct)

#undef NS_INCLUDE_SSDU_META_FUNCTION
#define NS_INCLUDE_SSDU_META_FUNCTION		OFF		/* do not include prototypes of functions inside mp_ssdu.xxx */

	/*	Network specific initialization functions : each function simply
		consists of the inclusion of all specific meta-programs */

#if F_ETS == ON

void pic_init_ns_ets_meta_ssdu ()
{
#	include "ets.mp_ssdu"
}

#endif

#if F_VN2 == ON

void pic_init_ns_vn2_meta_ssdu ()
{
#	include "vn2.mp_ssdu"
}

#endif

#if F_VN3 == ON

void pic_init_ns_vn3_meta_ssdu ()
{
#	include "vn3.mp_ssdu"
}

#endif

#if F_VN6 == ON

void pic_init_ns_vn6_meta_ssdu ()
{
#	include "vn6.mp_ssdu"
}

#endif

#if F_QSI == ON

void pic_init_ns_qsi_meta_ssdu ()
{
#	include "qsi.mp_ssdu"
}

#endif

#if F_TR6 == ON

void pic_init_ns_tr6_meta_ssdu ()
{
#	include "tr6.mp_ssdu"
}

#endif

#if F_SWD == ON

void pic_init_ns_swd_meta_ssdu ()
{
#	include "swd.mp_ssdu"
}

#endif

#if F_BV1 == ON

void pic_init_ns_bv1_meta_ssdu ()
{
#	include "bv1.mp_ssdu"
}

#endif

#if F_BT2 == ON

void pic_init_ns_bt2_meta_ssdu ()
{
#	include "bt2.mp_ssdu"
}

#endif

#if F_DMS == ON

void pic_init_ns_dms_meta_ssdu ()
{
#	include "dms.mp_ssdu"
}

#endif

#if F_NI1 == ON

void pic_init_ns_ni1_meta_ssdu ()
{
#	include "ni1.mp_ssdu"
}

#endif

#if F_NI2 == ON

void pic_init_ns_ni2_meta_ssdu ()
{
#	include "ni2.mp_ssdu"
}

#endif

#if F_AT5 == ON

void pic_init_ns_at5_meta_ssdu ()
{
#	include "at5.mp_ssdu"
}

#endif

#if F_AT9 == ON

void pic_init_ns_at9_meta_ssdu ()
{
#	include "at9.mp_ssdu"
}

#endif

#if F_E10 == ON

void pic_init_ns_e10_meta_ssdu ()
{
#	include "e10.mp_ssdu"
}

#endif

#if F_AT4 == ON

void pic_init_ns_at4_meta_ssdu ()
{
#	include "at4.mp_ssdu"
}

#endif

#if F_BIP == ON

void pic_init_ns_bip_meta_ssdu ()
{
#	include "bip.mp_ssdu"
}

#endif

#if F_AU1 == ON

void pic_init_ns_au1_meta_ssdu ()
{
#	include "au1.mp_ssdu"
}

#endif

#if F_HKT == ON

void pic_init_ns_hkt_meta_ssdu ()
{
#	include "hkt.mp_ssdu"
}

#endif

#if F_NTT == ON

void pic_init_ns_ntt_meta_ssdu ()
{
#	include "ntt.mp_ssdu"
}

#endif

#if F_KDD == ON

void pic_init_ns_kdd_meta_ssdu ()
{
#	include "kdd.mp_ssdu"
}

#endif

#if F_A11 == ON

void pic_init_ns_a11_meta_ssdu ()
{
#	include "a11.mp_ssdu"
}

#endif

#if F_A17 == ON

void pic_init_ns_a17_meta_ssdu ()
{
#	include "a17.mp_ssdu"
}

#endif

/*-------------------------------------------------------------------------*/

	/* Common initialization functions that call all the network specific functions */

void pic_init_ns_net_meta_ssdu ()
{

#	if F_ETS == ON
		pic_init_ns_ets_meta_ssdu ();
#	endif

#	if F_VN2 == ON
		pic_init_ns_vn2_meta_ssdu ();
#	endif

#	if F_VN3 == ON
		pic_init_ns_vn3_meta_ssdu ();
#	endif

#	if F_VN6 == ON
		pic_init_ns_vn6_meta_ssdu ();
#	endif

#	if F_QSI == ON
		pic_init_ns_qsi_meta_ssdu ();
#	endif

#	if F_TR6 == ON
		pic_init_ns_tr6_meta_ssdu ();
#	endif

#	if F_SWD == ON
		pic_init_ns_swd_meta_ssdu ();
#	endif

#	if F_BV1 == ON
		pic_init_ns_bv1_meta_ssdu ();
#	endif

#	if F_BT2 == ON
		pic_init_ns_bt2_meta_ssdu ();
#	endif

#	if F_DMS == ON
		pic_init_ns_dms_meta_ssdu ();
#	endif

#	if F_NI1 == ON
		pic_init_ns_ni1_meta_ssdu ();
#	endif

#	if F_NI2 == ON
		pic_init_ns_ni2_meta_ssdu ();
#	endif

#	if F_AT5 == ON
		pic_init_ns_at5_meta_ssdu ();
#	endif

#	if F_AT9 == ON
		pic_init_ns_at9_meta_ssdu ();
#	endif

#	if F_E10 == ON
		pic_init_ns_e10_meta_ssdu ();
#	endif

#	if F_AT4 == ON
		pic_init_ns_at4_meta_ssdu ();
#	endif

#	if F_BIP == ON
		pic_init_ns_bip_meta_ssdu ();
#	endif

#	if F_AU1 == ON
		pic_init_ns_au1_meta_ssdu ();
#	endif

#	if F_HKT == ON
		pic_init_ns_hkt_meta_ssdu ();
#	endif

#	if F_NTT == ON
		pic_init_ns_ntt_meta_ssdu ();
#	endif

#	if F_KDD == ON
		pic_init_ns_kdd_meta_ssdu ();
#	endif

#	if F_A11 == ON
		pic_init_ns_a11_meta_ssdu ();
#	endif

#	if F_A17 == ON
		pic_init_ns_a17_meta_ssdu ();
#	endif

#	if MESSAGE_HEADER_IE == ON
		START	(SSDU_MESSAGE_HEADER)
#	endif

}

void pic_init_ns_net_ssdu ()
{

#	if F_ETS == ON
		pic_init_ns_ets_ssdu ();
#	endif

#	if F_VN2 == ON
		pic_init_ns_vn2_ssdu ();
#	endif

#	if F_VN3 == ON
		pic_init_ns_vn3_ssdu ();
#	endif

#	if F_VN6 == ON
		pic_init_ns_vn6_ssdu ();
#	endif

#	if F_QSI == ON
		pic_init_ns_qsi_ssdu ();
#	endif

#	if F_TR6 == ON
		pic_init_ns_tr6_ssdu ();
#	endif

#	if F_SWD == ON
		pic_init_ns_swd_ssdu ();
#	endif

#	if F_BV1 == ON
		pic_init_ns_bv1_ssdu ();
#	endif

#	if F_BT2 == ON
		pic_init_ns_bt2_ssdu ();
#	endif

#	if F_DMS == ON
		pic_init_ns_dms_ssdu ();
#	endif

#	if F_NI1 == ON
		pic_init_ns_ni1_ssdu ();
#	endif

#	if F_NI2 == ON
		pic_init_ns_ni2_ssdu ();
#	endif

#	if F_AT5 == ON
		pic_init_ns_at5_ssdu ();
#	endif

#	if F_AT9 == ON
		pic_init_ns_at9_ssdu ();
#	endif

#	if F_E10 == ON
		pic_init_ns_e10_ssdu ();
#	endif

#	if F_AT4 == ON
		pic_init_ns_at4_ssdu ();
#	endif

#	if F_BIP == ON
		pic_init_ns_bip_ssdu ();
#	endif

#	if F_AU1 == ON
		pic_init_ns_au1_ssdu ();
#	endif

#	if F_HKT == ON
		pic_init_ns_hkt_ssdu ();
#	endif

#	if F_NTT == ON
		pic_init_ns_ntt_ssdu ();
#	endif

#	if F_KDD == ON
		pic_init_ns_kdd_ssdu ();
#	endif

#	if F_A11 == ON
		pic_init_ns_a11_ssdu ();
#	endif

#	if F_A17 == ON
		pic_init_ns_a17_ssdu ();
#	endif

}

#endif	/* end of "if OM_CODE_TYPE == OM_PIC"} */

/*EOF*/
