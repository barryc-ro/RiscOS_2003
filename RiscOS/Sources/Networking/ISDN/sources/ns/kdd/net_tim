
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_tim.kdd
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the British Telecom ISDN2 specific timer tables
 * 		  of the NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

			/* TIMERS IMPLICIT VALUES */

				/* Network timer implicit values */

#define KDD_NET_T300				 (3 * SECOND)	/* T300 */
#define KDD_NET_T303				 (4 * SECOND)	/* T303 */
#define KDD_NET_T305				(30 * SECOND)	/* T305 */
#define KDD_NET_T308				 (4 * SECOND)	/* T308 */
#define KDD_NET_T309				(90 * SECOND)	/* T309 */
#define KDD_NET_T310				(10 * SECOND)	/* T310 */
#define KDD_NET_T322				 (4 * SECOND)   /* T322 */

#define KDD_NET_T316			   (120 * SECOND)	/* T316 RESTART */
#define KDD_NET_T317			   (100 * SECOND)	/* T317 RESTART */

#define KDD_NET_T314			   (4 * SECOND)		/* T314 */

				/* User timer values */

#define KDD_USER_T300				 (3 * SECOND)	/* T300 */
#define KDD_USER_T303				 (4 * SECOND)	/* T303 */
#define KDD_USER_T305				(30 * SECOND)	/* T305 */
#define KDD_USER_T308				 (4 * SECOND)	/* T308 */
#define KDD_USER_T309				(90 * SECOND)	/* T309 */
#define KDD_USER_T310				(10 * SECOND)	/* T310 */
#define KDD_USER_T313				 (4 * SECOND)	/* T313 */
#define KDD_USER_T322				 (4 * SECOND)   /* T322 */

#define KDD_USER_T316			   (120 * SECOND)	/* T316 RESTART */
#define KDD_USER_T317			   (100 * SECOND)	/* T317 RESTART */

#define KDD_USER_T314				(4 * SECOND)	/* T314 */

			/* NS timer implicit value table */

		/* Call associated timers */

CONST_ARRAY struct ns_timer KDD_TI_CALL[] = {

/*	NT value			User value			Event ID		Index (0 -> NB_CALL_TIMER-1) */

	{KDD_NET_T300,		KDD_USER_T300,		TI_300,				KDD_T300_IDX},		/* T300 */
	{KDD_NET_T303,		KDD_USER_T303,		TI_303,				KDD_T303_IDX},		/* T303 */
	{KDD_NET_T305,		KDD_USER_T305,		TI_305,				KDD_T305_IDX},		/* T305 */
	{KDD_NET_T308,		KDD_USER_T308,		TI_308,				KDD_T308_IDX},		/* T308 */
	{KDD_NET_T310,		KDD_USER_T310,		TI_310,				KDD_T310_IDX},		/* T310 */
	{0,					KDD_USER_T313,		TI_313,				KDD_T313_IDX},		/* T313 */
	{KDD_NET_T322,		KDD_USER_T322,		TI_322,				KDD_T322_IDX},		/* T322 */

#	if NS_T309 == ON
		{KDD_NET_T309,	KDD_USER_T309,		TI_309,				KDD_T309_IDX},		/* T309 */
#	endif

};

		/* DLCI associated timers */

CONST_ARRAY struct ns_timer KDD_TI_DLCI[] = {

/*	NT value			User value			Event ID		Index (0 -> MX_DLCI_TIMER-1) */

	{TI_DL_VAL,			TI_DL_VAL,			TI_DL	},		/* T3DL */
	{TI_DL_EST_VAL,		TI_DL_EST_VAL,		TI_DL_EST},		/* T3_DL_EST */

#	if NS_RESTART_PROCEDURE == ON
		{KDD_NET_T316,	KDD_USER_T316,		TI_316	},		/* T316 */
		{KDD_NET_T317,	KDD_USER_T317,		TI_317	},		/* T317 */
#	endif

#	if NS_SEGMENTATION == ON
		{KDD_NET_T314,	KDD_USER_T314,		TI_314	},		/* T314 */
#	endif

};


	/* Index table for timers used in the kernel */

CONST_ARRAY uchar KDD_TI_IDX[] = {

#	if NS_T309 == ON
		KDD_T309,
#	endif

#	if NS_SEGMENTATION == ON
		KDD_T314,
#	endif

#	if NS_RESTART_PROCEDURE == ON
		KDD_T316,
		KDD_T317,
#	endif

	TI_EOT,
};



/*EOF*/
