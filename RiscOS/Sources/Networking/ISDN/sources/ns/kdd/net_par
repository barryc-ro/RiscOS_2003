
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - net_par.kdd
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the specific options and parameters
 * 		  of the NETWORK SIGNALLING layer of the ISDN-BRICKS product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Network Signalling (NS) Entity                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/


/*--------------------------------------------------------------------------*/

		/*
			NS interface sizing constants for IE variable length fields :
				maximum number of significant bytes only
				(i.e. as defined in the NS Standards).
		*/

#define KDD_MX_SZ_CALLED_NB			20		/* called number string */
#define KDD_MX_SZ_CALLED_SUB_ADD    20		/* called sub-address string */
#define KDD_MX_SZ_CALLING_NB		20		/* calling number string */
#define KDD_MX_SZ_CALLING_SUB_ADD   20		/* calling sub-address string */

#define KDD_MX_SZ_UUI               133		/* user-to-user string  */
#define KDD_MX_SZ_CAUSE_DIAG		27		/* cause diagnostic string */

/*--------------------------------------------------------------------------*/

			/* NETWORK SIGNALLING SIZING CONSTANTS */

#define KDD_MX_ADDITIONAL_OCTET 	10		/* maximum number of additional octet (extra octet after an EXT 1 octet) */
#define	KDD_MX_DL_RETRY				 0		/* maximum number of restablish Data Link retry */

/*--------------------------------------------------------------------------*/

					/*
							Call timer index affectation

						If timers are not used simultaneously
						they can have the same index (overlaping).

					*/
						/* User and network side */

#define KDD_T300_IDX					0
#define KDD_T303_IDX					0
#define KDD_T305_IDX					0
#define KDD_T308_IDX					0
#define KDD_T310_IDX					0
#define KDD_T313_IDX					0
#define KDD_T322_IDX					1

#if NS_T309 == ON
#	define KDD_T309_IDX					2
#	define KDD_MX_CALL_TIMER			8		/* maximum number of timer index */
#	define KDD_NB_CALL_TIMER			3		/* Nb of simultaneous NS call timers */

#else
#	define KDD_MX_CALL_TIMER			7		/* maximum number of timer index */
#	define KDD_NB_CALL_TIMER			2		/* Nb of simultaneous NS call timers */

#endif


					/*
							DL Connection timer index affectation

						If timers are not used simultaneously
						they can have the same index (overlaping).

					*/
#define	T3DL							0
#define	T3_DL_EST						1

#define	KDD_NB_DL_TIMER					2

#if NS_RESTART_PROCEDURE == ON
#	define KDD_T316						2
#	define KDD_T317						3

#	define KDD_NB_TIMER_RESTART			2
#	define KDD_MX_N316					2						/* maximum repetition for T316 expiry */
#else
#	define KDD_NB_TIMER_RESTART			0
#endif


#if NS_SEGMENTATION == ON
#	define KDD_T314						(KDD_NB_DL_TIMER + KDD_NB_TIMER_RESTART)	/* This index must follow the last defined index */
#	define KDD_NB_TIMER_SEGMENTATION	1
#else
#	define KDD_NB_TIMER_SEGMENTATION	0
#endif

#define KDD_MX_DLCI_TIMER				(KDD_NB_DL_TIMER + KDD_NB_TIMER_RESTART + KDD_NB_TIMER_SEGMENTATION)	/* maximum number of DLCI timer index */

	/*----------------------------------------------------------*/

		/* Maximum number of repeated IE in a SPDU message */

				/* Codeset 0 */

#define KDD_MX_BC					1					/* bearer capability */
#define KDD_MX_CALLED_NB			1					/* called party number */
#define KDD_MX_CALLED_SUB_ADD		1					/* called party subaddress */
#define KDD_MX_CALLING_NB			2					/* calling party number */
#define KDD_MX_CALLING_SUB_ADD		1					/* calling party subaddress */
#define KDD_MX_CALL_STATE			1					/* call state */
#define KDD_MX_CAUSE				1					/* cause */
#define KDD_MX_CHAN_ID				1					/* channel identification */
#define KDD_MX_HLC					1					/* high layer compatibility */
#define KDD_MX_LLC					1					/* low layer compatibility */
#define KDD_MX_PROGRESS_IND			1					/* progress indicator */
#define KDD_MX_RESTART_IND			1					/* restart indicator */
#define KDD_MX_UUI					1					/* user-user */

/*EOF*/
