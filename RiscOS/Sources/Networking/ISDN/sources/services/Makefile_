#
#         Example Makefile for Omnitel Services entity
#

# ----------------------------------------------------------------- #
# Include files and Lib files
# ----------------------------------------------------------------- #

INCLUDES = -Ic: -I^.^.PAR -I^.ns -I^.dl 

LIBFILES = 



# ----------------------------------------------------------------- #
# Various Macros
# ----------------------------------------------------------------- #



CC = cc
NOTMODULE_CFLAGS = $(INCLUDES) -c -Throwback -depend !Depend -DD_ASSERT $(VARIANT_CFLAGS)
MODULE_CFLAGS = $(NOTMODULE_CFLAGS) -zM 

LINK = link
NOTMODULE_LINKFLAGS = -AOF
MODULE_LINKFLAGS = $(NOTMODULE_LINKFLAGS) 

CMHG = cmhg
CMHGFLAGS =

OBJASM = objasm 

AR = libfile
AR_FLAGS = -c -o

WIPE = -wipe
WIPEFLAGS = F~C~R~V

MODSQZ = modsqz -fv

# ----------------------------------------------------------------- #
# Rules for making things - do not change.
# ----------------------------------------------------------------- #
	   
.SUFFIXES:	.o_ .c .cmhg .s
.cmhg.o_:;	$(CMHG) $(CMHGFLAGS) -o $@ $<
.c.o_:;		$(CC) $(MODULE_CFLAGS) $< -o $@
.s.o_:;		$(OBJASM) -from $< -to $@

# ----------------------------------------------------------------- #
# Targets to be compiled
# ----------------------------------------------------------------- #

TARGETS = o_.com_proc o_.services o_.to_proc o_.it_proc o_.sm_ram	

#Example of a single target with it's own include path
#com_proc.o:	com_proc.c
#		$(CC) -Iinclude_path com_proc.c


^.^.o_.services:	$(TARGETS)
	    		$(LINK) $(NOTMODULE_LINKFLAGS) -o $@ $(TARGETS) 
		


clean:;	    		@$(WIPE) o_.* $(WIPEFLAGS)

					   

# Dynamic dependencies:
o_.com_proc:	c.com_proc
o_.com_proc:	h.services
o_.com_proc:	^.^.PAR.h.serv_par
o_.com_proc:	^.^.PAR.h.consts
o_.com_proc:	^.^.PAR.h._product
o_.com_proc:	c:h.string
o_.com_proc:	^.^.PAR.h.serv_por
o_.com_proc:	c:sys.h.types
o_.com_proc:	c:h.kernel
o_.com_proc:	c:h.swis
o_.com_proc:	h.it
o_.com_proc:	^.^.PAR.h.it_par
o_.com_proc:	h.ctx_ext
o_.services:	c.services
o_.services:	h.services
o_.services:	^.^.PAR.h.serv_par
o_.services:	^.^.PAR.h.consts
o_.services:	^.^.PAR.h._product
o_.services:	c:h.string
o_.services:	^.^.PAR.h.serv_por
o_.services:	c:sys.h.types
o_.services:	c:h.kernel
o_.services:	c:h.swis
o_.services:	h.ctx_ext
o_.services:	c:sys.h.types
o_.services:	c:sys.h.time
o_.services:	c:sys.h.time
o_.services:	c:h.errno
o_.services:	c:h.stdlib
o_.services:	c:h.kernel
o_.services:	c:h.swis
o_.to_proc:	c.to_proc
o_.to_proc:	h.services
o_.to_proc:	^.^.PAR.h.serv_par
o_.to_proc:	^.^.PAR.h.consts
o_.to_proc:	^.^.PAR.h._product
o_.to_proc:	c:h.string
o_.to_proc:	^.^.PAR.h.serv_por
o_.to_proc:	c:sys.h.types
o_.to_proc:	c:h.kernel
o_.to_proc:	c:h.swis
o_.to_proc:	h.ctx_ext
o_.to_proc:	h.it
o_.to_proc:	^.^.PAR.h.it_par
o_.it_proc:	c.it_proc
o_.it_proc:	h.services
o_.it_proc:	^.^.PAR.h.serv_par
o_.it_proc:	^.^.PAR.h.consts
o_.it_proc:	^.^.PAR.h._product
o_.it_proc:	c:h.string
o_.it_proc:	^.^.PAR.h.serv_por
o_.it_proc:	c:sys.h.types
o_.it_proc:	c:h.kernel
o_.it_proc:	c:h.swis
o_.it_proc:	h.it
o_.it_proc:	^.^.PAR.h.it_par
o_.sm_ram:	c.sm_ram
o_.sm_ram:	h.services
o_.sm_ram:	^.^.PAR.h.serv_par
o_.sm_ram:	^.^.PAR.h.consts
o_.sm_ram:	^.^.PAR.h._product
o_.sm_ram:	c:h.string
o_.sm_ram:	^.^.PAR.h.serv_por
o_.sm_ram:	c:sys.h.types
o_.sm_ram:	c:h.kernel
o_.sm_ram:	c:h.swis
