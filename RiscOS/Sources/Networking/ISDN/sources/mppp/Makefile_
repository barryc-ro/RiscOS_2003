#
#          Makefile for MULTILINK PPP and BACP 
#

# ----------------------------------------------------------------- #
# Include files and Lib files
# ----------------------------------------------------------------- #

INCLUDES = -I^.^.par -I^.^.device -Ic: -I^.services -I^.mppp -I^.cc  -I^.dl -I^.v120 -I^.ph 


LIBFILES = 



# ----------------------------------------------------------------- #
# Various Macros
# ----------------------------------------------------------------- #



CC = cc
NOTMODULE_CFLAGS = $(INCLUDES) -c -Throwback -depend !Depend -DD_ASSERT $(VARIANT_CFLAGS)
MODULE_CFLAGS = $(NOTMODULE_CFLAGS) -zM 
# -fc enables the limited pcc option (allows characters after endif) 
UNIX_CFLAGS = -fc

LINK = link
NOTMODULE_LINKFLAGS = -AOF
MODULE_LINKFLAGS = $(NOTMODULE_LINKFLAGS) 

CMHG = cmhg
CMHGFLAGS =

OBJASM = objasm 

AR = libfile
AR_FLAGS = -c -o

WIPE = -wipe
WIPEFLAGS = F~C~R~V

MODSQZ = modsqz -fv

# ----------------------------------------------------------------- #
# Rules for making things - do not change.
# ----------------------------------------------------------------- #
	   
.SUFFIXES:	.o_ .c .cmhg .s
.cmhg.o_:;	$(CMHG) $(CMHGFLAGS) -o $@ $<
.c.o_:;		$(CC) $(MODULE_CFLAGS) $< -o $@
.s.o_:;		$(OBJASM) -from $< -to $@

# ----------------------------------------------------------------- #
# Targets to be compiled
# ----------------------------------------------------------------- #

TARGETS =   o_.bacp\
    	    o_.bacp_sta\
    	    o_.bap\
    	    o_.bap_sta\
    	    o_.lcp\
    	    o_.lcp_sta\
    	    o_.mlcp\
    	    o_.mlcp_sta\
    	    o_.mp\
   	    o_.mp_proc\
   	    o_.mp_queue\
    	    o_.mppp\
    	    o_.mppp_acc\
    	    o_.mppp_cc\
    	    o_.mppp_cp\
    	    o_.mppp_dbg\
    	    o_.mppp_dl\
    	    o_.mppp_fr\
    	    o_.mppp_ph\
    	    o_.mppp_rcv\
    	    o_.mppp_snd\
    	    o_.mppp_sta\
    	    o_.mppp_uti\
    	    o_.mppp_x25

    	    
#Example of a single target with it's own include path
#com_proc.o:	com_proc.c
#		$(CC) -Iinclude_path com_proc.c


^.^.o_.mppp:	$(TARGETS)
		$(LINK) $(NOTMODULE_LINKFLAGS) -o $@ $(TARGETS) 
		


clean:;		@$(WIPE) o_.* $(WIPEFLAGS)

					   

# Dynamic dependencies:
o_.bacp:	c.bacp
o_.bacp:	h.mppp
o_.bacp:	^.services.h.services
o_.bacp:	^.^.par.h.serv_par
o_.bacp:	^.^.par.h.consts
o_.bacp:	^.^.par.h._product
o_.bacp:	c:h.string
o_.bacp:	^.^.par.h.serv_por
o_.bacp:	c:sys.h.types
o_.bacp:	c:h.kernel
o_.bacp:	c:h.swis
o_.bacp:	h.mppp_int
o_.bacp:	^.^.par.h.mppp_par
o_.bacp:	h.mppp_dbg
o_.bacp_sta:	c.bacp_sta
o_.bacp_sta:	h.mppp
o_.bacp_sta:	^.services.h.services
o_.bacp_sta:	^.^.par.h.serv_par
o_.bacp_sta:	^.^.par.h.consts
o_.bacp_sta:	^.^.par.h._product
o_.bacp_sta:	c:h.string
o_.bacp_sta:	^.^.par.h.serv_por
o_.bacp_sta:	c:sys.h.types
o_.bacp_sta:	c:h.kernel
o_.bacp_sta:	c:h.swis
o_.bacp_sta:	h.mppp_int
o_.bacp_sta:	^.^.par.h.mppp_par
o_.bacp_sta:	h.mppp_dbg
o_.bap:	c.bap
o_.bap:	h.mppp
o_.bap:	^.services.h.services
o_.bap:	^.^.par.h.serv_par
o_.bap:	^.^.par.h.consts
o_.bap:	^.^.par.h._product
o_.bap:	c:h.string
o_.bap:	^.^.par.h.serv_por
o_.bap:	c:sys.h.types
o_.bap:	c:h.kernel
o_.bap:	c:h.swis
o_.bap:	h.mppp_int
o_.bap:	^.^.par.h.mppp_par
o_.bap:	h.mppp_dbg
o_.bap_sta:	c.bap_sta
o_.bap_sta:	h.mppp
o_.bap_sta:	^.services.h.services
o_.bap_sta:	^.^.par.h.serv_par
o_.bap_sta:	^.^.par.h.consts
o_.bap_sta:	^.^.par.h._product
o_.bap_sta:	c:h.string
o_.bap_sta:	^.^.par.h.serv_por
o_.bap_sta:	c:sys.h.types
o_.bap_sta:	c:h.kernel
o_.bap_sta:	c:h.swis
o_.bap_sta:	h.mppp_int
o_.bap_sta:	^.^.par.h.mppp_par
o_.bap_sta:	h.mppp_dbg
o_.lcp:	c.lcp
o_.lcp:	h.mppp
o_.lcp:	^.services.h.services
o_.lcp:	^.^.par.h.serv_par
o_.lcp:	^.^.par.h.consts
o_.lcp:	^.^.par.h._product
o_.lcp:	c:h.string
o_.lcp:	^.^.par.h.serv_por
o_.lcp:	c:sys.h.types
o_.lcp:	c:h.kernel
o_.lcp:	c:h.swis
o_.lcp:	h.mppp_int
o_.lcp:	^.^.par.h.mppp_par
o_.lcp:	h.mppp_dbg
o_.lcp:	h.mppp_ext
o_.lcp:	^.services.h.ctx_ext
o_.lcp:	h.lcp
o_.lcp_sta:	c.lcp_sta
o_.lcp_sta:	h.mppp
o_.lcp_sta:	^.services.h.services
o_.lcp_sta:	^.^.par.h.serv_par
o_.lcp_sta:	^.^.par.h.consts
o_.lcp_sta:	^.^.par.h._product
o_.lcp_sta:	c:h.string
o_.lcp_sta:	^.^.par.h.serv_por
o_.lcp_sta:	c:sys.h.types
o_.lcp_sta:	c:h.kernel
o_.lcp_sta:	c:h.swis
o_.lcp_sta:	h.mppp_int
o_.lcp_sta:	^.^.par.h.mppp_par
o_.lcp_sta:	h.mppp_dbg
o_.lcp_sta:	h.mppp_ext
o_.lcp_sta:	^.services.h.ctx_ext
o_.lcp_sta:	h.lcp
o_.mlcp:	c.mlcp
o_.mlcp:	h.mppp
o_.mlcp:	^.services.h.services
o_.mlcp:	^.^.par.h.serv_par
o_.mlcp:	^.^.par.h.consts
o_.mlcp:	^.^.par.h._product
o_.mlcp:	c:h.string
o_.mlcp:	^.^.par.h.serv_por
o_.mlcp:	c:sys.h.types
o_.mlcp:	c:h.kernel
o_.mlcp:	c:h.swis
o_.mlcp:	h.mppp_int
o_.mlcp:	^.^.par.h.mppp_par
o_.mlcp:	h.mppp_dbg
o_.mlcp_sta:	c.mlcp_sta
o_.mlcp_sta:	h.mppp
o_.mlcp_sta:	^.services.h.services
o_.mlcp_sta:	^.^.par.h.serv_par
o_.mlcp_sta:	^.^.par.h.consts
o_.mlcp_sta:	^.^.par.h._product
o_.mlcp_sta:	c:h.string
o_.mlcp_sta:	^.^.par.h.serv_por
o_.mlcp_sta:	c:sys.h.types
o_.mlcp_sta:	c:h.kernel
o_.mlcp_sta:	c:h.swis
o_.mlcp_sta:	h.mppp_int
o_.mlcp_sta:	^.^.par.h.mppp_par
o_.mlcp_sta:	h.mppp_dbg
o_.mp:	c.mp
o_.mp:	h.mppp
o_.mp:	^.services.h.services
o_.mp:	^.^.par.h.serv_par
o_.mp:	^.^.par.h.consts
o_.mp:	^.^.par.h._product
o_.mp:	c:h.string
o_.mp:	^.^.par.h.serv_por
o_.mp:	c:sys.h.types
o_.mp:	c:h.kernel
o_.mp:	c:h.swis
o_.mp:	h.mppp_int
o_.mp:	^.^.par.h.mppp_par
o_.mp:	h.mppp_dbg
o_.mp:	h.mppp_ext
o_.mp:	^.services.h.ctx_ext
o_.mp:	h.mp
o_.mp_proc:	c.mp_proc
o_.mp_proc:	h.mppp
o_.mp_proc:	^.services.h.services
o_.mp_proc:	^.^.par.h.serv_par
o_.mp_proc:	^.^.par.h.consts
o_.mp_proc:	^.^.par.h._product
o_.mp_proc:	c:h.string
o_.mp_proc:	^.^.par.h.serv_por
o_.mp_proc:	c:sys.h.types
o_.mp_proc:	c:h.kernel
o_.mp_proc:	c:h.swis
o_.mp_proc:	h.mppp_int
o_.mp_proc:	^.^.par.h.mppp_par
o_.mp_proc:	h.mppp_dbg
o_.mp_proc:	h.mppp_ext
o_.mp_proc:	^.services.h.ctx_ext
o_.mp_proc:	^.services.h.it
o_.mp_proc:	^.^.par.h.it_par
o_.mp_proc:	h.mp
o_.mp_queue:	c.mp_queue
o_.mp_queue:	h.mppp
o_.mp_queue:	^.services.h.services
o_.mp_queue:	^.^.par.h.serv_par
o_.mp_queue:	^.^.par.h.consts
o_.mp_queue:	^.^.par.h._product
o_.mp_queue:	c:h.string
o_.mp_queue:	^.^.par.h.serv_por
o_.mp_queue:	c:sys.h.types
o_.mp_queue:	c:h.kernel
o_.mp_queue:	c:h.swis
o_.mp_queue:	h.mppp_int
o_.mp_queue:	^.^.par.h.mppp_par
o_.mp_queue:	h.mppp_dbg
o_.mp_queue:	h.mppp_ext
o_.mp_queue:	^.services.h.ctx_ext
o_.mp_queue:	^.services.h.it
o_.mp_queue:	^.^.par.h.it_par
o_.mp_queue:	h.mp
o_.mppp:	c.mppp
o_.mppp:	h.mppp
o_.mppp:	^.services.h.services
o_.mppp:	^.^.par.h.serv_par
o_.mppp:	^.^.par.h.consts
o_.mppp:	^.^.par.h._product
o_.mppp:	c:h.string
o_.mppp:	^.^.par.h.serv_por
o_.mppp:	c:sys.h.types
o_.mppp:	c:h.kernel
o_.mppp:	c:h.swis
o_.mppp:	h.mppp_int
o_.mppp:	^.^.par.h.mppp_par
o_.mppp:	h.mppp_dbg
o_.mppp:	h.lcp
o_.mppp:	h.mlcp
o_.mppp:	h.mp
o_.mppp_acc:	c.mppp_acc
o_.mppp_acc:	h.mppp
o_.mppp_acc:	^.services.h.services
o_.mppp_acc:	^.^.par.h.serv_par
o_.mppp_acc:	^.^.par.h.consts
o_.mppp_acc:	^.^.par.h._product
o_.mppp_acc:	c:h.string
o_.mppp_acc:	^.^.par.h.serv_por
o_.mppp_acc:	c:sys.h.types
o_.mppp_acc:	c:h.kernel
o_.mppp_acc:	c:h.swis
o_.mppp_acc:	h.mppp_int
o_.mppp_acc:	^.^.par.h.mppp_par
o_.mppp_acc:	h.mppp_dbg
o_.mppp_acc:	h.mppp_ext
o_.mppp_acc:	^.services.h.ctx_ext
o_.mppp_cc:	c.mppp_cc
o_.mppp_cc:	h.mppp
o_.mppp_cc:	^.services.h.services
o_.mppp_cc:	^.^.par.h.serv_par
o_.mppp_cc:	^.^.par.h.consts
o_.mppp_cc:	^.^.par.h._product
o_.mppp_cc:	c:h.string
o_.mppp_cc:	^.^.par.h.serv_por
o_.mppp_cc:	c:sys.h.types
o_.mppp_cc:	c:h.kernel
o_.mppp_cc:	c:h.swis
o_.mppp_cc:	h.mppp_int
o_.mppp_cc:	^.^.par.h.mppp_par
o_.mppp_cc:	h.mppp_dbg
o_.mppp_cc:	h.mppp_ext
o_.mppp_cc:	^.services.h.ctx_ext
o_.mppp_cc:	^.cc.h.cc_int
o_.mppp_cc:	^.^.par.h.cc_par
o_.mppp_cc:	^.cc.h.acu_int
o_.mppp_cp:	c.mppp_cp
o_.mppp_cp:	h.mppp
o_.mppp_cp:	^.services.h.services
o_.mppp_cp:	^.^.par.h.serv_par
o_.mppp_cp:	^.^.par.h.consts
o_.mppp_cp:	^.^.par.h._product
o_.mppp_cp:	c:h.string
o_.mppp_cp:	^.^.par.h.serv_por
o_.mppp_cp:	c:sys.h.types
o_.mppp_cp:	c:h.kernel
o_.mppp_cp:	c:h.swis
o_.mppp_cp:	h.mppp_int
o_.mppp_cp:	^.^.par.h.mppp_par
o_.mppp_cp:	h.mppp_dbg
o_.mppp_cp:	h.mppp_ext
o_.mppp_cp:	^.services.h.ctx_ext
o_.mppp_cp:	h.lcp
o_.mppp_cp:	h.mp
o_.mppp_dbg:	c.mppp_dbg
o_.mppp_dbg:	h.mppp
o_.mppp_dbg:	^.services.h.services
o_.mppp_dbg:	^.^.par.h.serv_par
o_.mppp_dbg:	^.^.par.h.consts
o_.mppp_dbg:	^.^.par.h._product
o_.mppp_dbg:	c:h.string
o_.mppp_dbg:	^.^.par.h.serv_por
o_.mppp_dbg:	c:sys.h.types
o_.mppp_dbg:	c:h.kernel
o_.mppp_dbg:	c:h.swis
o_.mppp_dbg:	h.mppp_int
o_.mppp_dbg:	^.^.par.h.mppp_par
o_.mppp_dbg:	h.mppp_dbg
o_.mppp_dl:	c.mppp_dl
o_.mppp_dl:	h.mppp
o_.mppp_dl:	^.services.h.services
o_.mppp_dl:	^.^.par.h.serv_par
o_.mppp_dl:	^.^.par.h.consts
o_.mppp_dl:	^.^.par.h._product
o_.mppp_dl:	c:h.string
o_.mppp_dl:	^.^.par.h.serv_por
o_.mppp_dl:	c:sys.h.types
o_.mppp_dl:	c:h.kernel
o_.mppp_dl:	c:h.swis
o_.mppp_dl:	h.mppp_int
o_.mppp_dl:	^.^.par.h.mppp_par
o_.mppp_dl:	h.mppp_dbg
o_.mppp_dl:	h.mppp_ext
o_.mppp_dl:	^.services.h.ctx_ext
o_.mppp_fr:	c.mppp_fr
o_.mppp_fr:	h.mppp
o_.mppp_fr:	^.services.h.services
o_.mppp_fr:	^.^.par.h.serv_par
o_.mppp_fr:	^.^.par.h.consts
o_.mppp_fr:	^.^.par.h._product
o_.mppp_fr:	c:h.string
o_.mppp_fr:	^.^.par.h.serv_por
o_.mppp_fr:	c:sys.h.types
o_.mppp_fr:	c:h.kernel
o_.mppp_fr:	c:h.swis
o_.mppp_fr:	h.mppp_int
o_.mppp_fr:	^.^.par.h.mppp_par
o_.mppp_fr:	h.mppp_dbg
o_.mppp_fr:	h.mppp_ext
o_.mppp_fr:	^.services.h.ctx_ext
o_.mppp_ph:	c.mppp_ph
o_.mppp_ph:	h.mppp
o_.mppp_ph:	^.services.h.services
o_.mppp_ph:	^.^.par.h.serv_par
o_.mppp_ph:	^.^.par.h.consts
o_.mppp_ph:	^.^.par.h._product
o_.mppp_ph:	c:h.string
o_.mppp_ph:	^.^.par.h.serv_por
o_.mppp_ph:	c:sys.h.types
o_.mppp_ph:	c:h.kernel
o_.mppp_ph:	c:h.swis
o_.mppp_ph:	h.mppp_int
o_.mppp_ph:	^.^.par.h.mppp_par
o_.mppp_ph:	h.mppp_dbg
o_.mppp_ph:	h.mppp_ext
o_.mppp_ph:	^.services.h.ctx_ext
o_.mppp_ph:	^.ph.h.ph_int
o_.mppp_ph:	^.^.par.h.ph_par
o_.mppp_rcv:	c.mppp_rcv
o_.mppp_rcv:	h.mppp
o_.mppp_rcv:	^.services.h.services
o_.mppp_rcv:	^.^.par.h.serv_par
o_.mppp_rcv:	^.^.par.h.consts
o_.mppp_rcv:	^.^.par.h._product
o_.mppp_rcv:	c:h.string
o_.mppp_rcv:	^.^.par.h.serv_por
o_.mppp_rcv:	c:sys.h.types
o_.mppp_rcv:	c:h.kernel
o_.mppp_rcv:	c:h.swis
o_.mppp_rcv:	h.mppp_int
o_.mppp_rcv:	^.^.par.h.mppp_par
o_.mppp_rcv:	h.mppp_dbg
o_.mppp_rcv:	h.mppp_ext
o_.mppp_rcv:	^.services.h.ctx_ext
o_.mppp_rcv:	h.mp
o_.mppp_snd:	c.mppp_snd
o_.mppp_snd:	h.mppp
o_.mppp_snd:	^.services.h.services
o_.mppp_snd:	^.^.par.h.serv_par
o_.mppp_snd:	^.^.par.h.consts
o_.mppp_snd:	^.^.par.h._product
o_.mppp_snd:	c:h.string
o_.mppp_snd:	^.^.par.h.serv_por
o_.mppp_snd:	c:sys.h.types
o_.mppp_snd:	c:h.kernel
o_.mppp_snd:	c:h.swis
o_.mppp_snd:	h.mppp_int
o_.mppp_snd:	^.^.par.h.mppp_par
o_.mppp_snd:	h.mppp_dbg
o_.mppp_snd:	h.mppp_ext
o_.mppp_snd:	^.services.h.ctx_ext
o_.mppp_snd:	h.mp
o_.mppp_snd:	^.ph.h.ph_int
o_.mppp_snd:	^.^.par.h.ph_par
o_.mppp_snd:	^.cc.h.cc_int
o_.mppp_snd:	^.^.par.h.cc_par
o_.mppp_snd:	^.cc.h.acu_int
o_.mppp_sta:	c.mppp_sta
o_.mppp_sta:	h.mppp
o_.mppp_sta:	^.services.h.services
o_.mppp_sta:	^.^.par.h.serv_par
o_.mppp_sta:	^.^.par.h.consts
o_.mppp_sta:	^.^.par.h._product
o_.mppp_sta:	c:h.string
o_.mppp_sta:	^.^.par.h.serv_por
o_.mppp_sta:	c:sys.h.types
o_.mppp_sta:	c:h.kernel
o_.mppp_sta:	c:h.swis
o_.mppp_sta:	h.mppp_int
o_.mppp_sta:	^.^.par.h.mppp_par
o_.mppp_sta:	h.mppp_dbg
o_.mppp_sta:	h.mppp_ext
o_.mppp_sta:	^.services.h.ctx_ext
o_.mppp_sta:	h.mp
o_.mppp_sta:	^.cc.h.cc_int
o_.mppp_sta:	^.^.par.h.cc_par
o_.mppp_sta:	^.cc.h.acu_int
o_.mppp_uti:	c.mppp_uti
o_.mppp_uti:	h.mppp
o_.mppp_uti:	^.services.h.services
o_.mppp_uti:	^.^.par.h.serv_par
o_.mppp_uti:	^.^.par.h.consts
o_.mppp_uti:	^.^.par.h._product
o_.mppp_uti:	c:h.string
o_.mppp_uti:	^.^.par.h.serv_por
o_.mppp_uti:	c:sys.h.types
o_.mppp_uti:	c:h.kernel
o_.mppp_uti:	c:h.swis
o_.mppp_uti:	h.mppp_int
o_.mppp_uti:	^.^.par.h.mppp_par
o_.mppp_uti:	h.mppp_dbg
o_.mppp_uti:	h.mppp_ext
o_.mppp_uti:	^.services.h.ctx_ext
o_.mppp_x25:	c.mppp_x25
o_.mppp_x25:	h.mppp
o_.mppp_x25:	^.services.h.services
o_.mppp_x25:	^.^.par.h.serv_par
o_.mppp_x25:	^.^.par.h.consts
o_.mppp_x25:	^.^.par.h._product
o_.mppp_x25:	c:h.string
o_.mppp_x25:	^.^.par.h.serv_por
o_.mppp_x25:	c:sys.h.types
o_.mppp_x25:	c:h.kernel
o_.mppp_x25:	c:h.swis
o_.mppp_x25:	h.mppp_int
o_.mppp_x25:	^.^.par.h.mppp_par
o_.mppp_x25:	h.mppp_dbg
o_.mppp_x25:	h.mppp_ext
o_.mppp_x25:	^.services.h.ctx_ext
