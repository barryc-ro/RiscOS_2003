		/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/
		/*                                   */
		/*  Multi Link PPP and BACP Entity   */
		/*      versions descriptions        */
		/*                                   */
		/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/

Revision_string (_MPPP_VERSION, "(@)MLPPP v1.7 (28 Aug 97)")

#if 0

v1.7 (28 Aug 97)
----------------

	*** BUG FIX

		- mppp_rcv.c:
			- corrected the handling of PPP frames with no Address and Control
			fields and Protocol Field Compressed, in the mppp_dispatch_frame()
			function.

		- mppp_cp.c, lcp\lcp_sta.c:
			- added some missing "p_octet" initializations.

		- mppp_cp.c:
			- added a mechanism to detect reordered LCP options and to reorder
			these options before sending the LCP Configure-Ack to the peer.


	*** PARAMETERS FILE

		- mppp_par.h:
			*** New sizing constant defined ***
			MPPP_MX_LCP_OPT_NB (maximum number of LCP options in a packet)
			(See usage in mppp_cp.c and mppp.h)


	*** OTHER MODIFICATIONS

		- mppp_int.h:
			- added #error directives for the checking of LCP EXTENSIONS
			compile options.

		- mppp.h:
			- corrected the definitions of some macros used if the
			MPPP_LCP_EXTENSIONS option is turned ON.

		- mp\mp.c, mp\mp_proc.c, mp\mp_queue.c:
			- changed R_mp_xxx into Get_r_mp_xxx to consider the case of
			MP (0x003d) Protocol Field Compression.


	*** SIMULATION ONLY

		New scenarios files (see scenarios headers for description).

			test\lcp_ech2.s

		- sim_mppp.c, sim_ph.c, sim_ppp.c, sim_ppp.h:
			- added support of Address and Control Field Compression.


v1.6 (08 Jul 97)
----------------

	*** Corrected the support of Multilink with MPPP_CC flag turned OFF
		See files mppp_cp.c, mppp_rcv.c, mppp_snd.c, mppp_sta.c.

	- mppp_rcv.c:
		- added sending of error indication messages in case of failure
		to access contexts for a request on the MPPP_SAPI_EXT_EVENTS SAPI.

	- mppp_sta.c:
		- corrected the processing of ACU_CONN_IN on NOT-first member link.

	*** Commented unused source files code
		- mlcp\*.*

	*** NEW SCENARIO FILES - (SIMULATION ONLY)

			See scenarios headers for description.

			test\conn_clr.s
			test\conn_ldo.s
			test\conn_ll.s
			test\iconn.s
			test\iconn2.s
			test\res_cfg.s


v1.5 (01 Jul 97)
----------------

	*** USE OF CHAP WITH MULTILINK (Client Side ONLY)

		- Corrected the processing of CHAP Response Packets on a per-link
		basis, with use of a queue of received Challenge Packets.
		At any time, we have only one Challenge packet waiting for a Response
		from the local PPP who knows the CHAP Secrets.

		- mppp_sta.c:
			- allowed sending multiple Challenge (from the same link) to the
			upper entity.


	*** BUGS FIX

		- mppp_cp.c:
			- added a call to Mppp_inc_ptr() macro, upon receipt of unknown
			Configuration Option, to update the pointer used to parsed the
			Configure packet, in check_user_configure_xxx() routines.

		- mppp_rcv.c, mppp_snd.c:
			- review the initialization of error messages addressing
			parameters and the sending of these messages.

		- mppp_snd.c:
			- removed extra tests of the p_snd_msg pointer, in functions
			other than mppp_snd().

		- mp\mp_proc.c:
			- added, in mp_split_frame() routine, a missing reset of
			the "p_data" pointer to "Buffer_a_start_data", after moving
			data from a buffer containing a hole not large enough for the
			MP header storage.

		-lcp\lcp_sta.c:
			- return STOP, for LCP packets we receive with bad option length
			value, indicating that a LCP-Reject MUST be sent, even over the
			1st member link (see "lcp_check_configure_request()" routine).

		- Return to Link DEAD Phase.
			- added reset of the PPP link phase in the case of ISDN call
			INIT or CLEAR, even without receipt of Data Layer DOWN Event.
			In some cases, we receive ISDN call clearance message before
			the Data Layer DOWN event, which is then ignored
			(no valid context present).

	*** ENHANCEMENTS

		- Support of RESET_CONFIG feature

		- mppp_rcv.c:
			- according to RFC 1990, allowed use of Multilink Header for
			LCP packets having control functions not associated with changing
			the defaults for the bundle itself:
			Code-Reject, Protocol-Reject, Echo-Request, Echo-Reply and
			Discard-Request packets.

		- mppp_sta.c:
			- added handling of CHAP packets.


	*** OTHER MODIFICATIONS

		- lcp\lcp_sta.c:
		- bacp\bacp_sta.c:
			- PPP Packet Identifier is incremented even after a Timeout Event
			causing the retransmission of Configure-Request or Terminate-Request
			packet.

		- mppp.c, mppp_cp.c, mppp_sta.c:
			- replaced MPPP_DIAG_SUCCESS by MPPP_DIAG_NO_INFO.

	*** NEW SCENARIO FILES - (SIMULATION ONLY)

			See scenarios headers for description.

			test\bad_opt.s
			test\bad_opt2.s
			test\connchap.s
			test\conchap2.s
			test\conchap3.s
			test\conn_ti2.s
			test\lcp_echo.s
			test\i_ssnhf.s


v1.4 (06 Jun 97)
----------------

	*** BUG FIX

		- mppp_cp.c:
			- corrected the adding of LCP SSNHF and LCP EDO options in
			LCP-Configure-Ack packet received from the local PPP stack.

	*** INTERFACE FILE

		- mppp_int.h: (if SIMULATION is OFF)
			- added "#error message" directives to control the setting of
			some compile options defined in mppp_par.h.


	*** NEW FEATURE: Dynamic handling of MP header format according
					 to the negotiation of LCP SSNHF option, allowing
					 the use of either long or short MP frames header.

					 see files:

					 mppp.c
					 mppp_cp.c
					 mppp_snd.c
					 mp\mp.c
					 mp\mp_proc.c
					 mp\mp.h

	*** OTHER MODIFICATIONS

		- mppp.c, mppp_cp.c:
			- added a reset of ACCMs (to Local and to the Peer) at
			configuration time and upon receipt of LCP-Configure-Request
			over the First Member Link.

		- mppp_cp.c: (with MPPP_DEBUG turned ON only)
			- corrected the calls to MPPP_DBG_PACKETS for Control Protocol
			Tx packets from the user.

		- mppp_fr.c:
			- removed the "check_flags" parameter from the mppp_async_to_sync()
			function.

		- mppp_ph.c, mppp_x25.c:
			- removed the "check_flags" parameter from the calls to the
			mppp_async_to_sync() function.

		- mppp.h:
			- updated the mppp_async_to_sync() function prototype.


v1.3 (03 Jun 97)
----------------

	*** INTERFACE, CONFIGURATION AND PARAMETER FILES

		- mppp_int.h:
			- defined a unique value for MPPP_MX_CP_TIMER (= 2) and
			  removed the conditional #if MPPP_BAP == ON.

		- mppp_par.h:
			- moved the definitions of MpppTraceXXX macros from
			  mppp_dbg.h to mppp_par.h:
				MpppTraceByte(val)
				MpppTraceInt(val)
				MpppTracePtr(ptr)
				MpppTraceStr(str)

			These macros are used if MPPP_DEBUG_PRINTF is turned OFF.
			If these MpppTracexxx macros are defined as nothing,
			and MPPP_DEBUG_PRINTF is turned OFF, then the MPPP_DEBUG
			option MUST be turned OFF to avoid compiler complaints.


	*** BUGS FIX

		- lcp\lcp_sta:
			- added updates of the PPP link phase when sending LCP
			  Terminate Request or LCP Terminate Ack packet.

		- mppp.c:
			- exit from the mppp_process() function if
			  "mppp_check_link_busy()" returns STOP (MPPP_BUSY_IN
			  or MPPP_CLEAR_BUSY_IN sent to the user entity).


	*** OTHER MODIFICATIONS

		- mppp_fr.c:
			- removed the "Sppp_cep_link_mode" tests from the
			mppp_async_to_sync() function.

		- mppp.h:
			- changed Trap codes format from (TRAP_MPPP + xxx) to
			  direct values.


v1.2a (30 May 97)
-----------------

	*** BUGS FIX (appear when MESSAGE_SEND_DATA is turned ON)

		- mppp_cp.c:
			- added the checking of the room left in message data area
			before putting MP options in the CP packets from the local
			user entity.

		- mppp_sta.c
			- added retrieval of the B channel ID upon receipt of
			ACU_ALERT_IN and ACU_PROGRESS_IN messages.

		- mp\mp_proc.c:
			- corrected careless usage of message data area size/offset.


v1.2 (29 May 97)
----------------

	*** INTERFACE FILE, PARAMETERS FILE AND CONFIGURATION

		a) Checking/Generating PPP FCS and PPP Flags
		b) Disabling Multilink Protocol for Single Link PPP support
		c) Support of PAP authentication on the client side
		d) REMOVED these SAPIs definitions:
				MPPP_SAPI_CMD and MPPP_SAPI_CP
		e) DEFINED a new SAP for External Events: MPPP_SAPI_EXT_EVENTS
		h) CHANGED MPPP_CP_xxx primitives as MPPP_EXT_xxx
		i) NEW configuration error codes returned in the "confirm.cause"
		   field of the configuration buffer (SM_SET_CONFIG_CO) :
			MPPP_CFG_ERR_LCP_INIT   (LCP context initialization failed)
			MPPP_CFG_ERR_MLCP_INIT  (MLCP context initialization failed)
			MPPP_CFG_ERR_BACP_INIT  (BACP context initialization failed)
			MPPP_CFG_ERR_AUTH_INIT  (PAP/CHAP context initialization failed)

		- mppp_int.h, conf_ppp.h:
			- NEW field in "struct sppp_cfg_cep", used to set whether
			the PPP FCS and PPP Flags should be checked and generated
			by the ML-PPP entity (ON/OFF) or not.
			- NEW sub-struct, "struct tag_cfg_other_info"  whithin the
			"struct mppp_cfg_lcp_opt" indicating the disabling of the
			Multilink Protocol in a bundle (ON --> MP disabled).
			This value MUST be turned ON when the bundle is used for a
			single link PPP purpose.

		- mppp_par.h and mppp.h:
			- defined two new sizing constants related to PAP authentication

				MPPP_MX_SZ_USERNAME		(maximum size of PAP Username)
				MPPP_MX_SZ_PASSWORD		(maximum size of PAP Password)

				If not defined in mpp_par.h file, then they both default
				to the value defined in mppp.h (64 in this version).



	*** ENHANCEMENTS

		a) PAP authentication (client side) with specific state machine
		b) Dynamic ADD/DROP with automatic bandwidth updates
		c) Processing of Timer events for the PPP packets retransmission
		d) Dynamic support of both SYNC and ASYN PPP frames
		e) Sending of error messages (MPPP_ERROR_IN and MPPP_EXT_ERROR_IN)
		   for both Data SAPIs and External Events SAPI.
		f) Management of the PPP link phases for all the member links.
		g) Support of single link PPP negotiation

		See files mppp.c, mppp_cp.c, mppp_rcv.c, mppp_snd.c, mppp_sta.c,
		mppp.h, mppp_ext.h,	mppp_int.h, mppp_par.h



	*** OTHER CHANGES

		- mppp.h, lcp\lcp.h:
			- LCP_NEG_xxx defintions from lcp.h to mppp.h for a larger
			scope usage.

		- mppp_dbg.c, mppp_dbg.h: (Only if MPPP_DEBUG is turned ON)
			- corrected the MPPP_DBG_xxx macros.

		- bacp\*.*, bap\*.*:
			- BACP/BAP definitions and basic routines created

		- lcp\lcp_sta.c:
			- changed Mppp_opt_XXX_yyy macros into Lcp_opt_XXX_yyy


	*** SIMULATION ONLY

		- ana_mppp.c, sim_ppp.c:
			- removed unused pr_xxx functions, and extended the analyzer
			features.

		- updated and extended analyser functions features.

		- new scenario files (see scenarios header for description):
			add_drop
			conn
			conn2
			conn3
			conn4
			conn_lp
			conn4_lp
			conn_ti
			conn_pap
			data_lp
			drop
			mp_rej
			mp_dis



v1.1 (20 May 97)
----------------

	*** SOURCES FILES: moved module-specific header files from MPPP.H to the
	*** the source files that required them

	*** CONFIGURATION (mppp_int.h)

		- added "auto_open" field in "struct mppp_cfg_cep" to indicate
		automatic OPEN event for the first member link (ON/OFF).
		If turned ON, the first member link initial state is "STARTING"
		instead of "INITIAL", meaning that an Administrative OPEN event
		has occured.

		- added an entry for MPPP Sapi Management in "struct mppp_cfg_sap"

		- new values for the member links modes
			SPPP_MODE_SYNC	(synchronous mode)
			SPPP_MODE_ASYN	(asynchronous block mode)


	*** PARAMETER FILE (mppp_par.h)

		- deleted compile options
			MPPP_PH
			MPPP_DL
			MPPP_ASYNC_SPPP
		- new compile options (ON/OFF)
			MPPP_PH_SYNC
			MPPP_PH_ASYN
			MPPP_DL_V120
			MPPP_DL_LAPB
			MPPP_DL_LAPD

	*** INTERFACE FILES

		- mppp_int.h:
			- defined 2 SAPIs for DATA transfer:
				* MPPP_SAPI_DATA_SYNC	(synchronous PPP frames)
				* MPPP_SAPI_DATA_ASYN (asynchronous PPP frames, HDLC-like)


	*** DELETED FILES

		bacp\bacp_int.h
		bacp\bacp_par.h
		bap\bap_int.h
		bap\bap_par.h
		lcp\lcp_int.h
		lcp\lcp_par.h
		mlcp\mlcp_int.h
		mlcp\mlcp_par.h


	*** EXTENSIONS

		- added an entry for CC Sapi Management in "struct sppp_cep"
		data structure

		- added an entry for MPPP Sapi Management in "struct mppp_sap"
		data structure

		- mppp_cc.c:
			- defined the following macros for the future support of multiple
			called number wh=ithing a single MPPP_ACU_CONN_RQ message.
				Mppp_get_other_called_nb_size(_p)
				Mppp_get_p_other_called_nb(_p)
				Mppp_set_p_next_other_called_nb(_p)

		- mppp_rcv.c:
			- started the processing of external events (MPPP_SAPI_CP)


	*** OTHER CHANGES

		- mppp_cc.c:
			- new function, "mppp_clear_cc_call_rq()" for clearing calls
			- new function, "mppp_save_conn_rq_info()" for saving connection
			request messages information

		- mppp_cp.c:
			- completed the processing of the events on the first member link,
			in "mppp_c_prot_state_machine()"

		- mppp_dl.c:
			- additional processing related to flow control.

		- mppp_fr.c:
			- editing changes

		- mppp_ph.c:
			- reviewed the processing of PH_DA_IN messages.

		- mppp_snd.c:
			- while sending to the peer, the message addressing information
			(NAI,SPI,CONN_ID) is now taken from the current member link
			context.
			- added checking of the signalling state while trying to
			activate the lower layer data connection

		- mppp_sta.c:
			- processing of ACU_CLEAR_IN
			- considered the automatic OPEN event while processing the
			MPPP_ACU_CONN_RQ message.
			- added update of the total bandwidth upon receipt of call
			connect or clear messages.
			- reviewed the processing of MPPP_ACU_CLEAR_RQ.

		- mppp.h:
			- new functions prototypes
			- contexts updates


	*** SIMULATION ONLY

		- ana_mppp.c:
			- updated the usage of MPPP DATA SAPIs according to the new
			definitions in mppp_int.h

		- sim_mppp.c:
		- sim_ppp.c:
			- extended for new messages formatting


v1.0 (25 Apr 97)
----------------
	Initial version.

#endif

/*EOF*/
