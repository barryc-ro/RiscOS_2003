
/*--------------------------------------------------------------------------*
 *						 M O D U L E   H E A D E R
 *
 * filename - mppp_par.h
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *		- Implements the options and parameters header module of the
 *		  Multi Link Point-to-Point Protocol (ML PPP) of the
 *		  OMNITEL-BRICKS family product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    OMNITEL-BRICKS                                   |*/
/*|    Multi Link PPP Entity                            |*/
/*|                                                     |*/
/*|    Copyright (c) 1997 by OMNITEL SA                 |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#ifndef _MPPP_PAR_H /* { */
#define _MPPP_PAR_H

/*-----------------------------------------------------------------------*/

					/* MPPP COMPILATION OPTIONS */

					/*
						Support of LCP extensions
						(ON/OFF)
					*/


#define	MPPP_LCP_EXTENSIONS		OFF			/* general compilation option */
#define	MPPP_CALLBACK_PER_LINK 	OFF			/* ON -> EACH member link has its own callback information */


					/*
						Bandwidth Allocation Protocol
						and
						Bandwidth Allocation Control Protocol support
						(ON/OFF)
					*/

#define MPPP_BAP			OFF

					/* ISDN Signalling Call Control */

#define MPPP_CC					ON			/* ISDN Call Control entity */

					/* Lower layer services types (ON/OFF) */

#define MPPP_PH_SYNC			ON			/* SYNC PHysical layer (member links) */
#define MPPP_PH_ASYN		OFF				/* ASYN PHysical layer (member links) */
#define MPPP_DL_V120		OFF				/* DL_V120 Data Link layer (member links) */
#define MPPP_DL_LAPB		OFF				/* DL_LAPB Data Link layer (member links) */
#define MPPP_DL_LAPD		OFF				/* DL_LAPD Data Link layer (member links) */
#define MPPP_X25			OFF				/* X.25 packet layer protocol (member links) */

					/* ML PPP Flow Control (ON/OFF) */

#define MPPP_FC					ON


/*--------------------------------------------------------------------------*/

						/* ML PPP SIZING PARAMETERS */

#define MPPP_MX_AUDIT				100		/* size of the ML PPP audit array */

#if EQUIPMENT == TE
#	define MPPP_MX_CEP				3		/* maximum number of connection end point per SAP in a TE */
#else
#	define MPPP_MX_CEP				10		/* maximum number of end point per SAP in a NT2 */
#endif

						/* Multilink Endpoint  Discriminator */

#define MPPP_MX_SZ_EDO_ADD			20	/* maximum size of the endpoint discriminator address */

						/* Callback message length */


#define	MPPP_MX_SZ_CALLBACK_MSG		20		/* maximum size of the Callback message */

#define MPPP_MX_SPPP				2		/* maximum number of single line PPP connection in a ML PPP connection */

						/* PAP Username and Password */

#define MPPP_MX_SZ_USERNAME			64		/* maximum size of PAP Username */
#define MPPP_MX_SZ_PASSWORD			64		/* maximum size of PAP Password */

						/* ML PPP configuration structure */

#define MPPP_CONFIG_MX_NA			2	/* maximum number of ML PPP network access supported */
#define MPPP_CONFIG_MX_SAP			3	/* maximum number of SAP per ML PPP NA */
#define MPPP_CONFIG_MX_CEP			3	/* maximum number of CEP per SAP in a ML PPP config message */

						/* SL PPP configuration structure */

#define MPPP_CONFIG_MX_SPPP_NA		2	/* maximum number of SL PPP network access supported */
#define MPPP_CONFIG_MX_SPPP_CEP		6	/* maximum number of SAP/CEP per NA in a SL PPP config message */

/*------------------------------------------------------------------------*/

					/* IMPLICIT PARAMETERS VALUES */


#define MPPP_MODULO_I				0x1000000L	/* ML PPP modulo implicit value */
#define MPPP_W_I					15			/* ML PPP windowing implicit value */
#define MPPP_X_I					15			/* ML PPP guard implicit value */

				/*
					Control Protocols parameters default values defined
					according to RFC 1661
				*/

#define MPPP_CP_MX_TERMINATE_I		2			/* maximum number of Terminate-Request */
#define MPPP_CP_MX_CONFIGURE_I		10			/* maximum number of Configure-Request */
#define MPPP_CP_MX_FAILURE_I		5			/* maximum number of Configure-Nak */

#define MPPP_CP_RESTART_TI_VAL_I	(3*SECOND)	/* restart timer implicit value */

/*------------------------------------------------------------------------*/

					/* SIMULATION AND AUDIT */

#if SIM_BUILDER == ON
#	define MPPP_SIM_BUILDER		ON				/* message building	 : ON or OFF */
#else
#	define MPPP_SIM_BUILDER		OFF				/* message building	 : ON or OFF */
#endif

#if SIM_ANALYSER == ON
#	define MPPP_SIM_ANALYSER	ON				/* message analysing : ON or OFF */
#else
#	define MPPP_SIM_ANALYSER	OFF				/* message analysing : ON or OFF */
#endif

#define MPPP_AUDIT				ON				/* MPPP audit ON or OFF */

					/* Use of debugging functions */

#define MPPP_DEBUG				ON				/* ON: MPPP_DBG_xxx macros are expanded */
#define MPPP_DEBUG_PRINTF		ON				/* ON: debug using printf format */

					/*
						Macros used in MPPP_DBG_xxx calls
						if MPPP_DEBUG_PRINTF is turned OFF

						If these MpppTracexxx macros are defined as nothing,
						and MPPP_DEBUG_PRINTF is turned OFF,
						then the MPPP_DEBUG option MUST be turned OFF to avoid
						compiler complaints.

					*/

#define	MpppTraceByte(val)
#define	MpppTraceInt(val)
#define	MpppTracePtr(ptr)
#define	MpppTraceStr(str)

#if SIMULATION == ON
#	define	MPPP_DBG_MAX_BYTES_TO_PRINT	128		/* maximum number of packet bytes to print */
#else
#	define	MPPP_DBG_MAX_BYTES_TO_PRINT	32		/* maximum number of packet bytes to print */
#endif

/*-----------------------------------------------------------------------*/

#endif	/* } _MPPP_PAR_H */

/*EOF*/

