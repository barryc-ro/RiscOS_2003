
/*--------------------------------------------------------------------------*
 *						 M O D U L E   H E A D E R
 *
 * filename - mppp_ext.h
 *
 * $Revision$
 *
 * $Date$
 *
 * Implements the ML PPP common declarations.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    OMNITEL-BRICKS                                   |*/
/*|    Multi Link PPP Entity                            |*/
/*|                                                     |*/
/*|    Copyright (c) 1997 by OMNITEL SA                 |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/


#include "ctx_ext.h"								/* common external context */

		/* Flags */

extern	uchar				mppp_init_flag;		/* init done flag */

		/* Pointers to current object contexts */

extern	struct node			FAR *p_mppp_tree;		/* pointer to the top node of the ML PPP tree object structure */
extern	struct node			FAR *p_sppp_tree;		/* pointer to the top node of the SL PPP tree object structure */

#if OPTIMIZATION == SPEED
	extern struct mppp_na	FAR *FAR *p_mppp_na_tab;	/* access table */
	extern struct sppp_na	FAR *FAR *p_sppp_na_tab;	/* access table */
#endif

extern	struct mppp_c_prot	FAR *p_mppp_c_prot;		/* pointer on the current Control Protocol context */
extern	struct sppp_auth	FAR *p_sppp_auth;		/* pointer on the current Authentication context */

extern	struct	mppp_na		FAR *p_mppp_na;			/* network access object */
extern	struct	mppp_sap	FAR *p_mppp_sap;		/* service access point */
extern	struct	mppp_cep	FAR *p_mppp_cep;		/* connection endpoint object */

extern	struct	sppp_na		FAR *p_sppp_na;			/* pointer on the current SL PPP network access object */
extern	struct	sppp_cep	FAR *p_sppp_cep;		/* pointer on the current SL PPP CEP */

extern	code_t				mppp_event_type;		/* ML PPP event type */
extern	sapi_t				mppp_local_sapi;		/* ML PPP internal local SAPI */

extern	ushort				mppp_current_ppp_pid;	/* curent PPP protocol ID */

extern	uchar				mppp_c_prot_rej_packet_code; /* rejected control packet code */
extern	code_t				mppp_c_prot_event_id;		/* Control Protocol event ID */

extern	nai_t				mppp_error_nai;			/* cuurrent NAI for error message */
extern	sapi_t				mppp_error_sapi;		/* cuurrent SAPI for error message */
extern	add_t				mppp_error_ces;			/* CES for error message */
extern	ent_id_t			mppp_error_entity_id;	/* entity ID for error message */

extern	CONST_ARRAY code_t	MPPP_CP_TI_EV_ID [];
extern	CONST_ARRAY code_t	MPPP_AUTH_TI_EV_ID [];



/*EOF*/

