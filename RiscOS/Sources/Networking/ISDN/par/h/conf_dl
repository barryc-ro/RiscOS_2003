/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - conf_dl.h
 *
 * $Revision$
 *
 * $Date$
 *
 *		DL entity configuration structure.
 *
 *		This file is to be included into the "config.h" file.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    LAP-BRICKS                                       |*/
/*|    ISDN-BRICKS                                      |*/
/*|    X25-BRICKS                                       |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1996 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/


/*							Functional Grouping
							-------------------

					 TE                              NT1
				----------------	0 BRI   	----------------
				|              |----------------|   Public     |
				|  FG_TE_NET   |----------------|   Network    |
				|              |    1 PRI       |              |
				----------------                ----------------
					  User <======================>  Network

*/

			/* DL & MDL configuration structure for a TERMINAL */

CONST struct dl_config dl_config_data = {

    {0},								/* confirm */

    1,									/* number of network access */

		/* Network Access description table */
    {
			/* first access 0 : BRI to NETWORK */

    	{

				/* NA description */

	    {
		0,					/* nai */
		BRI,					/* access type (BRI or PRI) */
		FG_TE_NET,				/* function grouping */
		2,					/* nb of B channels */
		3,					/* nb of SAP */
				/* TEI list */
		{0,             /* CES 0 BROADCAST 					*/
		127,            /* CES 1 signalling, automatic TEI      		*/
		127},		/* CES 2 second signalling for U.S. , automatic TEI     */	

#		if CFG_US_SUPPORT == OFF
			0,0,		/* TEI management */
#		else
			DL_TEI_TIME_POWER_ON,
			DL_TEI_TIME_POWER_OFF,
#		endif	

#		if DL_PH_MUX == ON
			ON,					/* MUX ON */
#		endif

	    },

				/* SAP descriptions */

	    {

		{	/* DLSAP[0] : Signalling SAPI */
		    DL_SAPI_SIG,			/* sapi */
		    ENT_DL_D,				/* entity */
		    128,				/* modulo */
		    1,					/* k */
		    1*SCD,				/* timer T200 (or T201) value (0 for implicit value) */
		    10*SCD,				/* timer T203 (or T202) value (0 for implicit value) */
		    0,					/* timer for TEI assignement procedure */
		    3,					/* retry nb (N201) */
		    3,					/* nb of connection enpoints */
		    260,				/* I or UI frames max size of information field (n201) */
		    ENT_NS				/* NS Upper entity */
		},

		{	/* DLSAP[1] : Management SAPI */
		    DL_SAPI_MDL,			/* sapi */
		    ENT_DL_D,				/* entity */
		    128,				/* modulo */
		    1,					/* k */
		    1*SCD,				/* timer T200 (or T201) value (0 for implicit value) */
		    10*SCD,				/* timer T203 (or T202) value (0 for implicit value) */
		    2*SCD,				/* timer for TEI assignement procedure */
		    3,					/* retry nb (N201) */
		    1,					/* nb of connection enpoints */
		    260,				/* I or UI frames max size of information field (n201) */
		    ENT_MDL				/* MDL Upper entity */
		},
		{	/* DLSAP[2] : V.120 in B channel */
		
		    DL_SAPI_V120,			/* sapi */
		    ENT_DL_V120,			/* entity */
		    128,				/* modulo */
		    3,					/* k */
		    1*SCD,				/* timer T200 (or T201) value (0 for implicit value) */
		    10*SCD,				/* timer T203 (or T202) value (0 for implicit value) */
		    NOT_USED(0),			/* timer for TEI assignement procedure */
		    10,					/* retry nb (N201) */
		    2,					/* nb of connection enpoints */
		    DEF_V120_FRAME_SIZE,		/* I or UI frames max size of information field (n201) */
		    ENT_VS,				/* ENT_VS Upper entity */

#		    if DL_FC == ON
			3,		/* outgoing flow control low mark */
			6,		/* outgoing flow control high mark */
#		    endif

#		    if DL_XID == ON || DL_IDENTIFICATION == ON
			0,			/* XID retransmission timer value */
			3,			/* XID retransmission max value */
#		    endif
		},

	    },

	},

    },	/* End NAI 0 */

};


	/*-------------------------------------------------------------------*/
	/* 	DL update list 						     */
	/*-------------------------------------------------------------------*/
struct cfg_update CONST_ARRAY p_update_dl [] = {
	{UPDATE_ID_NIL},
};


/*EOF*/
