
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - ph_d_par.h
 *
 * $Revision$
 *
 * $Date$
 *
 *  Header implementing the parameters interface of the PHYSICAL layer of
 *  the OMNITEL_BRICKS packages with a SIEMENS ISAC-S chip.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    ISDN-BRICKS                                      |*/
/*|    Siemens ISAC-S Driver                            |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#ifndef _PH_D_PAR_H_
#define _PH_D_PAR_H_

					/* COMPILE TIME PARAMETERS */

#define PH_PEB_MODEL						PH_PEB2086	/* Chip model ID: PH_PEB2085, PH_PEB2086, PH_PEB2186 */

			/* Power detection at S interface using XXX pin */

#define PH_D_POWER_S                		OFF     /* ON or OFF */

			/* Frame address recognition */

#define PH_FRAME_ADD_RECOGNITION            OFF     /* frame address recognition by LIU chip */

			/* Active mode */

#define PH_ACTIVE_PER_CALL                  ON      /* Active ICC after activation done */
#define PH_ACTIVE_POR                       OFF     /* Active ICC at Power On Reset */

			/*  CODEC chip type */

#define PH_CODEC                           PH_CODEC_NIL	/* ARCOFI_2160, ARCOFI_2163, ARCOFI_2165 or PH_CODEC_NIL */

			/* ICC FIFO management */

#define PH_FIFO_MOVE                        OFF      /* FIFO read or write using move string function : ON or OFF */
#define PH_FIFO_SIZE                        32      /* FIFO size */

			/* State change pipe length */

#define PH_D_MX_STATE_PIPE_LGTH             5       /* Maximum state changes in the pipe */

			/* TX watchdog timer */

#define PH_TX_WATCHDOG_TIMER                ON      /* TX watch dog timer */

			/* Driver audit cyclic buffer */

#if ASSERT == ON
#   define PH_D_AUDIT                       ON      /* PH D BRI audit facility */
#else
#   define PH_D_AUDIT                       OFF     /* PH D BRI audit facility */
#endif

#define	PH_REPORTING_TO_SM					ON		/* reporting to System Management : ON or OFF */

#define PH_D_CODEC_POWER_UP					OFF		/* CODEC Power Up management : ON or OFF */
#define PH_D_CODEC_POWER_DOWN				OFF		/* CODEC Power down management : ON or OFF */

#define PH_D_WA_1 							ON		/* Workaround 1 to avoid "Lost framing" event upon receipt of INFO_0 in F6 (Siemens problem) */

#define PH_D_U                              ON		/* for U interface */
#define PH_D_MODE			MODE_IT /* MODE_IT or MODE_BG or MODE_TIMER  */

#if PH_D_U == ON
#       define MX_CHIP_STORAGE_B_U                      49              /* U   Byte */
#       define MX_CHIP_STORAGE_W_U                      4               /* U   word */
#       define PH_D_EOC                                 OFF
#       define PH_D_WA_2                                ON              /* Workaround 2 for IEC-Q V5.1: monitor receive handler related bug concerning MER interrupt */
#       define PH_D_WA_3                                ON              /* Workaround 3 for IEC-Q V5.1: monitor receive handler related bug concerning MER interrupt */
#else
#       define PH_D_EOC                                 OFF
#       define PH_D_WA_2                                OFF             /* Workaround 2 for IEC-Q V5.1: monitor receive handler related bug concerning MER interrupt */
#       define PH_D_WA_3                                OFF             /* Workaround 3 for IEC-Q V5.1: monitor receive handler related bug concerning MER interrupt */
#endif


/*-------------------------------------------------------------------------*/

			/* Timer implicit values */

#define PH_D_T101_I                         (30   * SECOND)  	 /* NT 		: T1 timer */
#define PH_D_T102_I                         (75  * MILLISECOND)  /* NT 		: T2 timer */
#define PH_D_T103_I                         (1   * SECOND)       /* TE 		: T3 activation timer */
#define PH_D_T104_I                         (500 * MILLISECOND)  /* TE 		: T4 ETSI timer delay MPH_DI event */
#define PH_D_T105_I                         (500 * MILLISECOND)  /* TE 		: T5 ETSI timer delay loss of power event */
#define PH_D_T199_I                         (900 * MILLISECOND)	 /* TE/NT 	: TX watch dog timer */

#if (PH_D_U == ON) && (PH_D_MODE == MODE_TIMER)
#	define PH_D_T999_I                      (100 * MILLISECOND)	 /* TE/NT 	: LIU scheduling timer */
#endif

/*-------------------------------------------------------------------------*/

			/*
				C/I WAIT COUNT :
				to be ajusted according to the CPU speed.
			*/


#define CPU_MUL               			    20

#define SBC_WAIT_COUNT_POWER_UP             (CPU_MUL*3000L)
#define SBC_WAIT_COUNT_POWER_DOWN           (CPU_MUL*3000L)
#define SBC_WAIT_COUNT_NEW_STATE            (CPU_MUL*90000L)
#define SBC_WAIT_COUNT_CLOCK                (CPU_MUL*1500L)
#define SBC_WAIT_COUNT_DIU_AIU              (CPU_MUL*60000L)

/*-------------------------------------------------------------------------*/

			/* Configuration structure sizing constants */

#define PH_D_CONFIG_MX_NA					2		/* Max nb of NA sub-structures */

/*-------------------------------------------------------------------------*/

			/*
				PH_MX_CHANI:
				Used to size the chan_id_list sub-structure within
				MPH_B_INIT_RQ, MPH_B_ACT_RQ and MPH_B_SWITCH_RQ primitives.
				Specifies the maximum number of B-channel ids provided to
				the layer 1 in order to establish multi B-channels calls.
				Usually defined to 1 for a Basic Rate Interface,
				it may be defined up to 32 for Primary Rate Interface.
			*/

#define PH_MX_CHANI                         1

/*-------------------------------------------------------------------------*/

			/* USER VOICE and AUDIO FUNCTIONS : INIT and STOP */

#define Ph_b_init_codec_voice(device_id,chan_id)
#define Ph_b_init_codec_audio(device_id,chan_id)
#define Ph_b_stop_codec(device_id,chan_id)

/*-------------------------------------------------------------------------*/

					/* INTEL 80X86 and SIEMENS ISAC-S parameters */

			/* Definition of the Intel 8259 command words and masks */

#define PH_MEMORY_MAPPED_IO                 ON      /* Memory mapped IO or inp/outp */

#define IT_CONTROLLER                       ITC_IOC/* Interrupt Controller : ITC_8259, ITC_80186, ITC_68302, ITC_68901, ITC_PRIVATE */

		/* ISAC-S IT enable/disable */

#define Isac_mask(mask_value)               It_mask (p_peitab -> it_mask, mask_value)
#define Isac_ldmask(mask_value)             It_ldmask (mask_value)

		/* ISAC IT enable/disable */

#define It_disable_isac(old_mask)           Isac_mask   (old_mask)
#define It_enable_isac(old_mask)            Isac_ldmask (old_mask)

#define It_disable_sbc(old_mask)            Isac_mask   (old_mask)
#define It_enable_sbc(old_mask)             Isac_ldmask (old_mask)

#define It_disable_icc(old_mask)            Isac_mask   (old_mask)
#define It_enable_icc(old_mask)             Isac_ldmask (old_mask)

#if PH_D_U == ON
#       define It_disable_iec(old_mask)            It_mask   (p_PI_tab -> it_mask, old_mask)
#       define It_enable_iec(old_mask)             It_ldmask (old_mask)
#endif

#define PH_ADD_REG_NB                       2       /* max number of register allowed for address recognition */

/*-------------------------------------------------------------------------*/

#endif

/*EOF*/
