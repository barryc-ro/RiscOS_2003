
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - _product.h
 *
 * $Revision$
 *
 * $Date$
 *
 *	*** ISDN ACORN Generic version ***
 * should be copied on _product.h to produce a S european version
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|														|*/
/*|	OMNITEL-BRICKS - Version 2.0						|*/
/*|														|*/
/*|														|*/
/*|	Copyright (c) 1994 by OMNITEL SA					|*/
/*|	All Rights Reserved.								|*/
/*|														|*/
/*[]---------------------------------------------------[]*/

#ifndef	_PRODUCT_H
#define	_PRODUCT_H

#define ISDN_CARD_EEPROM_LOADED     	OFF 	/* EEPROM on ISDN card not loaded yet */

#if ASSERT == ON
#define TRACE_RECORD_SIZE  500
#define TRACE_RECORD_NB    60
#define TRACE_SIZE  	   TRACE_RECORD_SIZE*TRACE_RECORD_NB

#endif

#define CFG_PRODUCT_INFORMATIONS
#define CFG_PRODUCT_MANUFACTURER

#define ISDN_CARD_VERSION     	    	3 	/* First version of ISDN card */
						/* version 1 had only 1 bit to enable U and S chips */
						/* version 2 has 2 bits to enable U and S chips */
						/* version 3 has 1 bit to reset HSCX chip */

/***************************************************************
*
*	ISDN operators supported 
* 
****************************************************************/
	/* European variants */
	
#define F_ETS			ON		/* European ETSI Technical Comittee */
#define F_KDD			ON		/* Kokusai Denshin Denwa (Japan) Flag */
#define F_NTT			ON		/* Nippon Telegraph Telephone (Japan) Flag */

	/* American variants */

#define F_DMS			OFF		/* Northern Telecom DMS100 */
#define	F_E10			OFF		/* AT&T 5ESS10 */
#define F_NI2			OFF		/* National ISDN-2 */

#define F_NI1			OFF		/* National ISDN-1 */
#define F_A11			OFF		/* ARINC CTU to  Bearer system BS */
#define F_A17			OFF		/* ARINC CTU to zone units in the CDS */
#define F_AT4			OFF		/* AT&T 4ESS (AT&T TR41459, August 1995) */
#define F_AT5			OFF		/* AT&T 5ESS5 CUSTOM Flag */
#define F_AT9			OFF		/* AT&T 5ESS9 NATIONAL Flag */
#define F_AU1			OFF		/* Australian Telecom 1 Flag */
#define F_BIP			OFF		/* Bellcore ISDN Primary rate, TR-NWT-001268 */
#define F_BT2			OFF		/* British Telecom ISDN2 Flag */
#define F_BV1			OFF		/* Belgian V1 Flag */
#define F_HKT			OFF		/* European Hong Kong Telephone Flag */
#define F_QSI			OFF		/* ECMA QSIG Flag */
#define F_SWD			OFF		/* Sweedish Televerket Flag */
#define F_TR6			OFF		/* Deutsche Telekom 1TR6 Flag */
#define F_VN2			OFF		/* France Telecom VN2 Flag */
#define F_VN3			OFF		/* France Telecom VN3 Flag */
#define F_VN6			OFF		/* France Telecom VN6 Flag */



#define CFG_EUROPE_SUPPORT			ON		/* european version */
#define CFG_US_SUPPORT				OFF		/* ammerican version */

#define MULTILINK_PPP_SUPPORT			ON		/* Multi-link PPP is supported */
 
#if CFG_EUROPE_SUPPORT == ON
#	define	CFG_DEF_COUNTRY		EUROPE
#	define	CFG_DEF_OPERATOR	ETSI
#else
#	define	CFG_DEF_COUNTRY		USA
#	define	CFG_DEF_OPERATOR	N_ISDN2
#endif

/******************************************************************/
/*                                                                */
/*       ISDN EXPANSION CARD definitions                          */
/*                                                                */
/******************************************************************/


#define ISDN_CARD_DEVICE_NUMBER		    	    13
#define ISDN_CARD_ISR_OFFSET		    	    0x400000	    /* offset from start of EASI start address */
#define ISDN_CARD_CR_OFFSET		    	    0x600000	    /* offset from start of EASI start address */
#define ISDN_CARD_CR_VALUE_AT_RESET	    	    0	    	    /* value of Control register at reset */

	/* CONTROL REGISTER BITS 		    */
	
#define ISDN_CARD_CR_SPU_ENABLE_BIT  	    	    0	/* SPU activation bit */
#define ISDN_CARD_CR_HSCX_RESET_BIT  	    	    1	/* in version 3 boards only */
#define ISDN_CARD_CR_MLT_INT_BIT  	    	    2	/* clears latch MLT_INT (not used yet) */
#define ISDN_CARD_CR_IT_ENABLE_BIT  	    	    3	/* interrupt mask bit */
#define ISDN_CARD_CR_FI_SELECT_BIT  	    	    4	/* interrupt select bit (0:PIRQ 1:PFIRQ) */
#define ISDN_CARD_CR_S_U_ENABLE_BIT  	    	    5	/* in first board only one bit for S and U chips */
#define ISDN_CARD_CR_S_ENABLE_BIT  	    	    5	/* in second board 2 bits one for each chip */
#define ISDN_CARD_CR_U_ENABLE_BIT  	    	    6
#define ISDN_CARD_CR_OPTO_INV_BIT  	    	    7   /* OPTO signal inversion */

#define ISDN_CARD_INTERRUPT_MASK	    	    (1 << 3)	    /* bit 3 of interrupt status */
#define EXPANSION_CARD_PRODUCT_TYPE_MASK    	    (1 << 6)        /* bit 6 in R0 for PoduleReadInfo */
#define EASI_SPACE_ADDRESS_MASK     	 	    (1 << 9)        /* bit 9 in R0 for PoduleReadInfo */
#define ISDN_CARD_SLOT_OFFSET(n)	    	    (n << 24)
#define ISDN_CARD_PRODUCT_ID	    	    	    0x11b   	    /* temporary */

#if ISDN_CARD_EEPROM_LOADED == OFF
/* #   define ISDN_CARD_SLOT_NUMBER	    	    0 */

#   define ISDN_CARD_EASI_ADDRESS   	      	    0x88000000
#endif

    	/* specific error codes */

#define ISDN_CARD_NOT_FOUND 	    	    	    0x0080fd00	    /* temporary */
#define CAPTURE_FILE_OPEN_ERROR    	    	    0x0080fd01	    /* temporary */
#define ISDN_SERVICES_INIT_ERROR    	    	    0x0080fd02	    /* temporary */
#define ISDN_IT_INIT_ERROR      	    	    0x0080fd03	    /* temporary */

    /* current slot number for ISDN card */

extern 	    	int  	isdn_card_slot_number;
extern volatile int  	isdn_card_isr_address;
extern volatile int  	isdn_card_cr_address;
extern unsigned char  	isdn_card_cr_val;
extern volatile int  	isdn_card_EASI_address;

    /* access macros to ISDN Card Control register */

#define Isdn_card_cr_reset()    isdn_card_cr_val = ISDN_CARD_CR_VALUE_AT_RESET;		\
				 *((uchar FAR *)isdn_card_cr_address) = isdn_card_cr_val
#define Isdn_card_cr_write(val) *((uchar FAR *)isdn_card_cr_address) = (val)
#define Isdn_card_cr_on(bit)    isdn_card_cr_val |= (1 << bit);  \
    	    	    	        *((uchar FAR *)isdn_card_cr_address) = isdn_card_cr_val;
#define Isdn_card_cr_off(bit)    isdn_card_cr_val &=(~(1 << bit));  \
    	    	    	        *((uchar FAR *)isdn_card_cr_address) = isdn_card_cr_val;
#define Isdn_card_it_enable()	Isdn_card_cr_on (ISDN_CARD_CR_IT_ENABLE_BIT)
#define Isdn_card_it_disable()	Isdn_card_cr_off (ISDN_CARD_CR_IT_ENABLE_BIT)

	/* from ISDN board version 1 */

#define Isdn_card_s_u_enable()	Isdn_card_cr_on (ISDN_CARD_CR_S_U_ENABLE_BIT)
#define Isdn_card_s_u_disable()	Isdn_card_cr_off (ISDN_CARD_CR_S_U_ENABLE_BIT)

	/* from ISDN board version 2 */

#define Isdn_card_s_enable()	Isdn_card_cr_on (ISDN_CARD_CR_S_ENABLE_BIT)
#define Isdn_card_s_disable()	Isdn_card_cr_off (ISDN_CARD_CR_S_ENABLE_BIT)
#define Isdn_card_u_enable()	Isdn_card_cr_on (ISDN_CARD_CR_U_ENABLE_BIT)
#define Isdn_card_u_disable()	Isdn_card_cr_off (ISDN_CARD_CR_U_ENABLE_BIT)
#define Isdn_card_spu_enable()	Isdn_card_cr_on (ISDN_CARD_CR_SPU_ENABLE_BIT)
#define Isdn_card_spu_disable()	Isdn_card_cr_off (ISDN_CARD_CR_SPU_ENABLE_BIT)

	/* from ISDN board version 3 */

#define ISDN_CARD_HSCX_RESET_LOOP_MAX	0x0000ffffL	/* to wait for 1.8 microseconds */


#define Isdn_card_hscx_reset_on()	Isdn_card_cr_on (ISDN_CARD_CR_HSCX_RESET_BIT)
#define Isdn_card_hscx_reset_off()	Isdn_card_cr_off (ISDN_CARD_CR_HSCX_RESET_BIT)

	/* for memcpy and memset */
	
#include "string.h"


#endif	/* _PRODUCT_H */

/*EOF*/
