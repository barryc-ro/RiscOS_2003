;
;
;
;	name : podule_irq
;       usage : turn on or off Podule IRQ
;
; set up register names
; 12 Jan 1995, A.S.

r0	RN	0
r1	RN	1
r2	RN	2
r3	RN	3
r4	RN	4
r5	RN	5
r6	RN	6
r7	RN	7
r8	RN	8
r9	RN	9
r10	RN	10
r11	RN	11
r12	RN	12
r13	RN	13
r14	RN	14
r15	RN	15

; APCS style definitions

sp	RN	13

lr	RN	14
pc	RN	15

			AREA		iomd_irqs, PIC, CODE, REL
			EXPORT		enable_podule_irqs
			EXPORT		disable_podule_irqs

; stuff to turn on podule IRQs, and also to enable type C memory cycles for our podule
; we need r0 = podule slot number on entry to do this.
N_bit_number	    *			31                      ; Processor condition flags
Z_bit_number	    *			30
C_bit_number	    *			29
V_bit_number	    *			28
I_bit_number	    *			27
F_bit_number	    *			26

N_bit		    *			1 :SHL: N_bit_number    ; Processor condition flags
Z_bit		    *			1 :SHL: Z_bit_number
C_bit		    *			1 :SHL: C_bit_number
V_bit		    *			1 :SHL: V_bit_number
I_bit		    *			1 :SHL: I_bit_number
F_bit		    *			1 :SHL: F_bit_number

USR_mode	    *			2_00                    ; Processor mode bits
FIQ_mode	    *			2_01
IRQ_mode	    *			2_10
SVC_mode	    *			2_11

IOC_IRQMSKB	    *			&28		    ; IRQ Mask
IOC_FIQMASK	    *			&38		    ; FIQ Mask
IOC_ECTCR	    *			&c8		    ; EASI bus timing control register
podule_IRQ_bit	    *			1 :SHL: 5	    ; Podule IRQ request
podule_FIQ_bit	    *			1 :SHL: 6	    ; Podule FIQ request


IOC		    *			&03200000


enable_podule_irqs
		    STMDB		sp!, {r0-r2, lr}
		    MOV			r1, #1
		    MOV			r0, r1, LSL r0	    			; convert podule num to bit

		    MOV			lr,pc 		    			;Hold current I_bit & F_bit & Mode
		    SWI			&20016		    			;XOS_EnterOS
		    TEQP		pc, #I_bit+F_bit+SVC_mode    		;Disable IRQs & FIRQs

		    MOV			r2, #IOC                      		;whilst enabling Podule IRQs

		    LDRB		r1, [r2, #IOC_IRQMSKB]         		;in IOC
		    ORR			r1, r1, #podule_IRQ_bit
		    STRB		r1, [r2, #IOC_IRQMSKB]
		    TEQP		pc, lr		    			;Restore original I_bit & F_bit
		    MOV			r0, r0			   		;And the Mode.
		    LDMIA		sp!, {r0-r2, pc}^			; exit

disable_podule_irqs
		    STMDB		sp!, {r0-r2, lr}
		    MOV			r1, #1
		    MOV			r0, r1, LSL r0

		    MOV			lr, pc		    			;Hold current I_bit & F_bit &Mode
		    SWI			&20016		    			;XOS_EnterOS
		    TEQP		pc, #I_bit+F_bit+SVC_mode		;Disable IRQs & FIRQs

		    MOV			r2, #IOC	    			; whilst disabling Podule IRQs

		    LDRB		r1, [r2, #IOC_IRQMSKB]			; in IOC
		    BIC			r1, r1, #podule_IRQ_bit
		    STRB		r1, [r2, #IOC_IRQMSKB]
		    TEQP		pc, lr		    			;Restore original I_bit & F_bit
		    MOV			r0, r0		    			;And mode.

		    LDMIA		sp!, {r0-r2, pc}^

		    END

