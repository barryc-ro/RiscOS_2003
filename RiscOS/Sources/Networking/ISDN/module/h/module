#define MAXCMD 18

struct cmdent {
        /* command handler */
    static _kernel_oserror *(*cmd_call)(int argc, char **argv);
};
/* temporary */
#define ISDN_CARD_SLOT_NUMBER        0       /* 0 for new ISDN S board */
                                             /* 2 for old ISDN S and U board */
    /* command numbers */

#define CMD_ISDNDial    0       /* outgoing call command        */
#define CMD_ISDNHook    1       /* call hook up command         */
#define CMD_ISDNAnsw    2       /* incoming call answer command */
#define CMD_ISDNHookin  3       /* incoming call hook command   */
#define CMD_ISDNLog     4       /* log capture and trace files  */
#define CMD_ISDNLoop    5       /* loop B channel  */
#define CMD_ISDNList    6       /* Show ISDNctrl log  */
#define CMD_MPPPDbg     7       /* set the ML PPP debugging flags */
#define CMD_MPPPAdd     8       /* add a link to an existing bundle */
#define CMD_MPPPDrop    9       /* drop a member link from an existing bundle */

    /* command functions */

static _kernel_oserror *do_ISDNDial     (int argc , char **argv);
static _kernel_oserror *do_ISDNHook     (int argc, char **argv);
static _kernel_oserror *do_ISDNAnsw     (int argc , char **argv);
static _kernel_oserror *do_ISDNHookin   (int argc, char **argv);
static _kernel_oserror *do_ISDNLog      (int argc, char **argv);
static _kernel_oserror *do_ISDNLoop     (int argc, char **argv);
static _kernel_oserror *do_MPPPDbg      (int argc, char **argv);
static _kernel_oserror *do_MPPPAdd      (int argc, char **argv);
static _kernel_oserror *do_MPPPDrop     (int argc, char **argv);
static _kernel_oserror *do_ISDNList     (int argc, char **argv);
static _kernel_oserror *do_nothing      (int argc, char **argv);




#define MAXSWI 18

struct swient {
int        (*swi_call)();      /* swi handler */
};


void *module_wsp;


int isdn_nullswi(_kernel_swi_regs *);
int cmd_isdn_nullcmd(char *, int);
_kernel_oserror *module_final(int , int , void *);
_kernel_oserror *module_swi_handler(int , _kernel_swi_regs *, void *);
_kernel_oserror *module_cmd_handler(char *, int , int , void *);
_kernel_oserror *module_init(char *, int , void *);

