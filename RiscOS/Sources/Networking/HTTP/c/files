/* -*-c-*- */

#include "kernel.h"

#include "files.h"

int ro_fopen(char *fname, int mode)
{
    int fh = _kernel_osfind( (mode == RO_OPEN_READ) ? 0x43: 0x83 , fname);
    if (fh < 0 )
        fh = 0;
    return fh;
}

void ro_fclose(int fh)
{
    if (fh == 0)
	return;

    _kernel_osfind(0, (char*) fh);
}

int ro_fwrite(void *ptr, int size, int items, int fh)
{
    _kernel_osgbpb_block gpb;

    gpb.dataptr = ptr;
    gpb.nbytes = size * items;

    _kernel_osgbpb(2, fh, &gpb);

    return (size * items) - gpb.nbytes;
}

int ro_fwritepos(void *ptr, int size, int items, int fh, int pos)
{
    _kernel_osgbpb_block gpb;

    gpb.dataptr = ptr;
    gpb.nbytes = size * items;
    gpb.fileptr = pos;

    _kernel_osgbpb(1, fh, &gpb);

    return (size * items) - gpb.nbytes;
}

int ro_fread(void *ptr, int size, int items, int fh)
{
    _kernel_osgbpb_block gpb;

    gpb.dataptr = ptr;
    gpb.nbytes = size * items;

    _kernel_osgbpb(4, fh, &gpb);

    return (size * items) - gpb.nbytes;
}

int ro_ensure_size(int fh, int size)
{
    return _kernel_osargs(3, fh, size);
}
