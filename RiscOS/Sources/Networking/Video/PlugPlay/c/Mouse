/**************************************************************/
/* File:    Mouse.c                                           */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Mouse pointer related functions.                  */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 14-Mar-1997 (ADH): Created.                       */
/*          24-May-2000 (ADH): 64-wide comments adopted.      */
/*          07-Jul-2000 (ADH): Imported from Browse.          */
/**************************************************************/

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include <kernel.h>
#include <swis.h>

#include <HTMLLib/HTMLLib.h>

#include <tboxlibs/wimp.h>

#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

#include "Mouse.h"

/* Locals */

static int mouse_shape = 1;

/**************************************************************/
/* mouse_pointer_on()                                         */
/*                                                            */
/* Turns the mouse pointer on immediately.                    */
/**************************************************************/

void mouse_pointer_on(void)
{
  mouse_set_pointer_shape(mouse_shape);
}

/**************************************************************/
/* mouse_pointer_off()                                        */
/*                                                            */
/* Turns the mouse pointer off immediately.                   */
/**************************************************************/

void mouse_pointer_off(void)
{
  mouse_set_pointer_shape(Mouse_Shape_Off);
}

/**************************************************************/
/* mouse_set_pointer_shape()                                  */
/*                                                            */
/* Sets the shape of the pointer; shape 0 turns it off. If    */
/* mouse_on is set to zero, this will *not* override that     */
/* setting.                                                   */
/*                                                            */
/* Parameters: Pointer shape; see Mouse.h for definitions of  */
/*             shapes.                                        */
/**************************************************************/

void mouse_set_pointer_shape(int shape)
{
  if (shape) mouse_shape = shape;

  /* Otherwise change to the required shape */

  switch (shape)
  {
    case Mouse_Shape_Off:       _swix(OS_CLI,
                                      _IN(0),

                                      "Pointer 0");
    break;

    default: /* Catchall - use normal pointer, so no 'break' */

    case Mouse_Shape_Normal:    _swix(OS_CLI,
                                      _IN(0),

                                      "Pointer 1");
    break;
  }
}

/**************************************************************/
/* mouse_to()                                                 */
/*                                                            */
/* Moves the mouse to a given screen coordinate.              */
/*                                                            */
/* Parameters: X coordinate to move to;                       */
/*                                                            */
/*             Y coordinate to move to.                       */
/**************************************************************/

void mouse_to(int x, int y)
{
  char block[5];

  block[0] = 3;
  block[1] = x & 0xff;
  block[2] = x >> 8;
  block[3] = y & 0xff;
  block[4] = y >> 8;

  _swix(OS_Word,
        _INR(0, 1),

        21,
        block);
}

/**************************************************************/
/* mouse_rectangle()                                          */
/*                                                            */
/* Constrains the mouse pointer to a given rectangle, or      */
/* returns the last rectangle set with this function.         */
/*                                                            */
/* Parameters: Pointer to a BBox, in which the new rectangle  */
/*             is held, or NULL to set no new rectangle.      */
/*                                                            */
/* Returns:    Pointer to a BBox, in which the previously set */
/*             coordinates are stored if the BBox pointer     */
/*             given as a parameter is NULL (else the         */
/*             coordinates in the given BBox will be the same */
/*             as the coords in the returned BBox).           */
/**************************************************************/

BBox * mouse_rectangle(BBox * rect)
{
  char        block[9];
  static BBox last_rect;

  if (rect)
  {
    block[0] = 1;
    block[1] = rect->xmin & 0xff;
    block[2] = rect->xmin >> 8;
    block[3] = rect->ymin & 0xff;
    block[4] = rect->ymin >> 8;
    block[5] = rect->xmax & 0xff;
    block[6] = rect->xmax >> 8;
    block[7] = rect->ymax & 0xff;
    block[8] = rect->ymax >> 8;

    _swix(OS_Word,
          _INR(0, 1),

          21,
          block);
  }

  last_rect = *rect;

  return &last_rect;
}
