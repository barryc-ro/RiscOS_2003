Video plug-in ReadMe 28-Apr-2000
================================

The video plug-in can currently be built in the following ways, and
can take different application names. At present, only "PlugPlay" is
used. There are five variants directly available:

  * !MkRom

    Compile and link to AOF file the PlugPlay module, as would happen
    during a ROM build. The !Boot and !Run files for a full install
    would come from LocalRes:PlugPlay.ROM.!Boot and !Run. See the
    Makefile for more information.

  * !PlgPlyAp

    Compile, link and export into the Targets directory an application
    build of PlugPlay. Application builds use a rectangle and copy
    filter to set a pollword to non-zero, and as such will have a
    significant lag between window and video movement.

  * !PlgPlyApD

    As !PlgPlyAp but builds a DebImage debug build for running under
    DDT. This is the primary reason for retaining application build
    capabilities, rather than just modules, at all. The !Run file for
    this comes from LocalRes:PlugPlay.!RunD.

  * !PlgPlyRM

    Build a module version of PlugPlay for RAM loading, exporting an
    appropriate application into the Targets directory. This is the
    recommended form for RAM builds. Filters are registered to C
    functions that move the video immediately, removing most of the
    lag between window and video movement. The !Boot and !Run files
    come from LocalRes:PlugPlay.RAM.!Boot and !Run.

  * !PlgPlyRMD

    As !PlgPlyRM but creates a debug build allowing debuglib output
    to be produced. The !Boot and !Run files come from
    LocalRes:PlugPlay.RAM.!Boot and !RunD.

At all times, COMPONENT must be set to the application name, which at
present as already mentioned is always "PlugPlay".

Debug levels are specified in the command line. See Global.c for
details. Commented out examples are also in the various !RunD files.

To clean but leave targets and symbols intact, use !MkClean. To clean
everything including targets and symbols, use !MkCleanAll. To build
every non-debug build including ROM, use !All. To build every debug
RAM loading build use !AllD.

-- 
Andrew Hodgkinson, Senior Software Engineer
Pace Micro Technology plc                    Tel: +44 1223 518 560
645 Newmarket Road                           Fax: +44 1223 518 526
Cambridge, CB5 8PB, United Kingdom           WWW: http://www.pace.co.uk/