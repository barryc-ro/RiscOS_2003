/**************************************************************/
/* File:    Play.h                                            */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Handle video playback.                            */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 20-Jun-2000 (ADH): Created.                       */
/**************************************************************/

#ifndef PlugPlay_Play__
  #define PlugPlay_Play__

  #include <stdbool.h>
  #include <kernel.h>

  /* Useful definitions */

  #define Play_Response_OK_Lower              (200u)
  #define Play_Response_OK_Upper              (299u)
  #define Play_Response_NotSupported          (501u)

  #define Play_RTSPSkip                       "RTSP/1.0 "
  #define Play_ReducedRateSlowmoSupportModule "MPEGDriver"

  #define Play_DefaultLoopingValue            false

  /* Important structures */

  typedef enum play_mode
  {
    play_mode_none = 0,
    play_mode_frwd,
    play_mode_srwd,
    play_mode_pause,
    play_mode_sfwd,
    play_mode_normal,
    play_mode_ffwd
  }
  play_mode;

  struct play_session;
  typedef _kernel_oserror *(*play_callback)(struct play_session * s, unsigned int response);

  typedef struct play_session
  {
    struct play_session * prev;
    struct play_session * next;

    unsigned int          handle;   /* Video Control handle */
    unsigned int          swi_base; /* Protocol module SWI base (after calling play_setup only) */
    unsigned int          plugin;   /* Set before calling play_setup to get options for Video Control from the given plug-in or its launcher */

    play_mode             current;
    unsigned int          current_speed;
    play_mode             destination;
    unsigned int          destination_speed;

    play_callback         callback; /* Called for any server response */

    unsigned              in_transition   :1; /* Play mode transition in progress */
    unsigned              setting_up      :1; /* In transition due to SETUP */
    unsigned              go_via_normal   :1; /* Go through normal speed playback to reach target speed and mode */
    unsigned              went_via_normal :1; /* For '501' response recovery, flags that we went through normal speed to get here */
    unsigned              restoring       :1; /* Flags that the next '2xx' is for a background tidy-up play restoration after a '501' following a go_via_normal session */
    unsigned              auto_destruct   :1; /* Set & play_poll auto-destructs */
    unsigned              seek            :1; /* Seek to end/start in play_play */
    unsigned              loop            :1; /* Looping is set for this session; this is a read-only flag, and is valid once you've called play_setup and not before */
  }
  play_session;

  /* Function prototypes */

  _kernel_oserror * play_generate_error  (unsigned int handle);
  void              play_build_speed     (play_mode mode, unsigned int speed, char * sp, bool decimal);

  _kernel_oserror * play_setup           (play_session * s, const char * url);
  _kernel_oserror * play_play            (play_session * s, play_mode mode, unsigned int speed);
  _kernel_oserror * play_poll            (void);

  _kernel_oserror * play_new_session     (play_session ** news);
  void              play_delete_session  (play_session * s);
  void              play_shutdown        (void);

#endif /* PlugPlay_Play__ */
