/* Copyright (c) 1995 by Oracle Corporation. All rights reserved.
 *
 * smtl.h - System-dependent Media Tools Logger 
 *
 * PURPOSE
 * Provides routines for sending log data to various destinations.
 */

#ifndef SMTL_ORACLE
#define SMTL_ORACLE

#ifndef SYSI_ORACLE
# include <sysi.h>
#endif

/*
 * NOTE: this file is *not* allowed to include mtl.h.  Also, clients of
 * the mtlLogging facility should only include the portable header mtl.h
 * and not smtl.h.
 */

/*
 * All modules composing the video server engine use the mtlLog() function to
 * print out information.  This initialization routine will cause all
 * messages to be mtlLogged by a method implemented in the system specific
 * code.  The system specific code defines the mapping between each
 * component and a mtlLogging method.  'str' is an optional string to
 * pass in that each mtlLogging method deals with in its own way (eg. to
 * label all subsequent messages with a header.
 */
void   smtlInit( sb1   method, CONST char  *str );

/*
 * Logs a message via any method defined in the system specific layer and
 * initialized at runtime above.  This can be done via printf, a system
 * level facility to log to files, etc.
 */
void   smtlLog(CONST char  *fmt,va_list);

/*
 * Logs a message associated with an unrecoverable internal error
 * (eg. the program state went bad because of a programming bug).
 * Performs actions to facilitate debugging (eg. dumping a stack or
 * core file, leaving the process in bkpt state, etc).
 */
void   smtlFatal(CONST char  *fmt,va_list );

/*
 * Logs a message associated with an unrecoverable error that, unlike
 * above, doesn't require special debugging operations to be performed
 * (eg. a system call returned an error).  Simply exits the process.
 */
void   smtlExit(CONST char  *fmt,va_list );

#endif /* SMTL_ORACLE */
