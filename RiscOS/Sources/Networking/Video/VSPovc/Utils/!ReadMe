Utilities ReadMe, 23-Apr-1999
=============================

Read this through before trying to use any of the utilities on a new
MediaNet source tree. If using an existing source tree from CVS, you
shouldn't need any of the utilities here anyway. There's only one
exception, 'SetPaths', which sets up various useful path variables
used in the main MakeFile - kept in here just to be tidy.

!Reverser takes files like 'this/c', 'this/h' or 'this/idl', and
creates directories 'c', 'h' or 'idl', putting file 'this' into
them without the filename extension. When importing a new set of
MediaNet sources, run Reverser on the whole source tree (well, on
a copy of it, not on the original sources obviously!) before doing
anything else. If you already have a copy of !Reverser, make sure
you use the one here, or remember to add 'idl', 'IDL', 'msg', 'MSG',
'mot' and 'MOT' to the file '!Reverser.Extensions', taking note of
any file length restrictions documented in your copy of
'!Reverser.!Help' (e.g. a maximum of 19 extensions).

Note that the messages files (.msg) and any compiled versions of the
messages files (.mod) are NOT put into directories, as the filename
translation routines in the RISC OS specific sources will be getting
requests to open files like "omnidlc.mot" and turning these into
"omnidlc/mot". Thus, the filename-with-extension approach must be
taken. ****THIS WILL ALMOST CERTAINLY MEAN YOUR CHOSEN BUILD FILE
SYSTEM MUST SUPPORT LEAFNAMES GREATER THAN 10 CHARACTERS LONG****.

Next, run 'PrepareSrc'; this deletes files that aren't needed within
MediaNet. Its actions should be broadly correct but since things may
well move around from release to release, always check that the
things it wipes looks sane compared with the source tree before
running it.

PrepareSrc eventually runs the MungeIDL program. "MungeIDL" takes
IDL files and looks for lines looking like:

  #include <this.idl>
  # include <this.idl>

where '<' and '>' can be any single character, and turns them into:

  #include "this"

This is useful as the IDL compiler port doesn't know about reversing
'xxx.idl' to 'idl.xxx', or even altering it to 'xxx/idl', so some
munging has to be done either way (since at the time of writing we
can't get the compiler to rebuild!).

MungeIDL looks in file 'IDLList' to determine which files to
alter; it isn't clever enough to scan directories yet. So you'll
need to make sure that this file lists all the IDL files in the
MediaNet sources that you want to alter.

To run the munge process outside of the PrepareSrc script, just run
'RunMunge'.

-- 
Andrew Hodgkinson, Senior Software Engineer
Element 14 Ltd.                              Tel: +44 (0) 1223 725247
645 Newmarket Road                           Fax: +44 (0) 1223 725347
Cambridge, CB5 8PB, United Kingdom           WWW: http://www.e-14.com/