
/*---------------------------------------------------------------------------*/
/* smtcctx.h    oSd Media Tools Context ConTeXt manager specification        */
/*                                                                           */
/* This is the specification for the OSD part of the context manager         */
/* component.  This OSD component is crucial, since underlying the context   */
/* manager is the assumption that this OSD component can create one "global" */
/* variable pointer.  If so, the context manager will hang all global        */
/* global context off this one variable.                                     */
/*                                                                           */
/* MODIFIED                                                                  */
/*   dpawson    06/19/94        Creation                                     */
/*---------------------------------------------------------------------------*/

#ifndef SMTCCTX_ORACLE
#define SMTCCTX_ORACLE

#ifndef SYSI_ORACLE
#include <sysi.h>
#endif /* !SYSI_ORACLE */

/*----------------------------- Memory Management ---------------------------*/
/* The context manager needs to do simple memory management.  The following  */
/* two OSD's will be called to do malloc/free type memory management, and    */
/* must be defined on all ports.                                             */
/*---------------------------------------------------------------------------*/
dvoid *smtcctxAlloc(ub4 amount);        /* Allocate "amount" bytes of memory */
void smtcctxFree(dvoid *aptr);     /* Dispose of a pointer from smtcctxAlloc */

/*------------------------- Global Variable Management ----------------------*/
/* Underlying the context manager is the idea that every port can find one   */
/* "global" variable.  On most ports, this will just be a global variable in */
/* the conventional sense.  On ports like the Macintosh that cannot          */
/* necessarily have true global variables, the port must find some way to    */
/* store a pointer in a global location where it can later be retrieved.     */
/* Note: until PutGlobal is called, GetGlobal should return a NULL pointer.  */
/*---------------------------------------------------------------------------*/
void smtcctxPutGlobal(dvoid *aptr);                 /* Store into THE global */
dvoid *smtcctxGetGlobal(void);                            /* Read THE global */

#endif /* !SMTCCTX_ORACLE */
