/* mx/src/inc/ydyoidl.idl */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/





#ifndef YDYOIDL_ORACLE
#define YDYOIDL_ORACLE

#ifndef YOSTD_ORACLE
#include "yostd/idl"
#endif YOSTD_ORACLE

#ifndef YOIDL_ORACLE
#include "yoidl/idl"
#endif

module ydim {
  interface active;
};

module ydyo {

  exception notUnique {};

  struct activeInfo
  {
                ydim::active  self_ydyo_activeInfo; 

    string          intf_ydyo_activeInfo;
    string	    impl_ydyo_activeInfo;
    yort::proc	    yort_ydyo_activeInfo;
    yort::impl	    yortImpl_ydyo_activeInfo;
    yort::implFlags implFlags_ydyo_activeInfo;
  };

  typedef sequence <activeInfo> activeInfoList;

  exception notOwner { yort::proc realOwner; };

  
  interface imr {

            void addActiveGlobal( in yort::procInfo pinfo,
			 in activeInfoList ailist );

            void destroyActiveGlobal( in activeInfoList ailist );

            void destroyYortGlobal( in yort::proc y );

            boolean exists( in string intf, in string impl );

    void stake( in yort::claim what, in yoevt replyTo );

    void abandon( in yort::claim what )
      raises( notOwner );

            yostd::stringList listProperties( in string regexp );

            Object propertyResolve( in string property )
      raises( notUnique );
  };
};

#endif
