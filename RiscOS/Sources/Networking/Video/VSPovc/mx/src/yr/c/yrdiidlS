/* mx/src/yr/yrdiidlS.c */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif
#include <yrdiidlC.c>

EXTC_START


STATICF void yr_dii_reqDescByName_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args);

STATICF void yr_dii_reqDescByName_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args)
{
  *(yr_reqDescList*)args[0] = (*((struct yr_dii__tyimpl*)impldef)
    ->reqDescByName)( (yr_dii)or, ev,(yr_scopedNameList*)args[1]);
}

STATICF void yr_dii_intfDescByName_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yr_dii_intfDescByName_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  *(yr_intfDescList*)args[0] = (*((struct yr_dii__tyimpl*)impldef)
    ->intfDescByName)( (yr_dii)or, ev,(yr_scopedNameList*)args[1]);
}

STATICF void yr_dii_intfDescById_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args);

STATICF void yr_dii_intfDescById_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args)
{
  *(yr_intfDescList*)args[0] = (*((struct yr_dii__tyimpl*)impldef)
    ->intfDescById)( (yr_dii)or, ev,(yr_intfIdList*)args[1]);
}

STATICF void yr_dii_intfDescByObj_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args);

STATICF void yr_dii_intfDescByObj_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args)
{
  *(yr_intfDescList*)args[0] = (*((struct yr_dii__tyimpl*)impldef)
    ->intfDescByObj)( (yr_dii)or, ev,(yostd_objList*)args[1]);
}

yostub* yr_dii__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*4), 
    "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "reqDescByName";
  _stubs[0].parms = yr_dii_reqDescByName_pars;
  _stubs[0].oper = yr_dii_reqDescByName_s;
  _stubs[1].opernm = "intfDescByName";
  _stubs[1].parms = yr_dii_intfDescByName_pars;
  _stubs[1].oper = yr_dii_intfDescByName_s;
  _stubs[2].opernm = "intfDescById";
  _stubs[2].parms = yr_dii_intfDescById_pars;
  _stubs[2].oper = yr_dii_intfDescById_s;
  _stubs[3].opernm = "intfDescByObj";
  _stubs[3].parms = yr_dii_intfDescByObj_pars;
  _stubs[3].oper = yr_dii_intfDescByObj_s;
  _stubs[4].opernm = (CONST char*)0;
  _stubs[4].parms = (yopar*)0;
  _stubs[4].oper = (void (*)(dvoid *,yoenv*,dvoid *,dvoid **))0;

  return _result;
}


EXTC_END
