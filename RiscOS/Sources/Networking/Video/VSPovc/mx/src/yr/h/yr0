/* mx/src/yr/yr0.h */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef YR0_ORACLE
#define YR0_ORACLE

#ifndef YS_ORACLE
#include <ys.h>
#endif
#ifndef SYSFP_ORACLE
#include <sysfp.h>
#endif
#ifndef YRTYPES_ORACLE
#include <yr.h>
#endif


#define YR_SCOPED_SEP "::"
#define YR_SCOPED_SEP_SIZE 2


typedef void (*yrclean)(yrobj*, ysmff, ysmff);


void yrSetName( yrobj* obj, CONST char* name);
void yrSetSrcnm( yrobj* obj, CONST char* name);
yrobj* yrCreateObj(CONST char* tag);
yrobj* yrCreatePrimitive( yrobj* or, yrpk kind);
void yrDestroyObj( yrobj* obj, yslst* deferred, ysmff usrpFree, ysmff objFree);
void yrContainerAdd( yrobj* container, yrobj* item);


struct yrprivate
{
  ub4 seqnum;			
  sword trace;		        
  yrobj* object;                
  yrobj* corba_object;          
  yslst* anon;		        
  
};
#define YR_SEQ_MAX UB4MAXVAL



externref ysidDecl(YR_EX_READONLY);
externref ysidDecl(YR_EX_REPFULL);
externref ysidDecl(YR_EX_EXISTS);
void yrAssignId( yrobj* repository, yrobj* robj, boolean usePrefix);

void yrDump( yrobj* obj);





struct yrldblk
{
  boolean merge;
  boolean visited;
  boolean equal;
  yrobj* newobj;
  yrobj* existing;
};
typedef struct yrldblk yrldblk;



typedef struct yrwrtblk
{
  dvoid* ptr;
  ub4 recnum;
} yrwrtblk;


#define YRX_BUFF_SZ ((size_t) 16000)


#define YR_IO_VERS 6
#define YR_IO_NOBACK 6               
#define YR_IO_TAG "OMXIFR"
#define YR_IO_TAG_SZ 7


typedef struct yrwrtdesc
{
  yshsh* tbl;
  yslst* list; 
} yrwrtdesc;

typedef struct yrctx
{
  union 
  {
    yrwrtdesc wrt;
    yrldblk* rd;
  } objs;                    
  union
  {
    yrwrtdesc wrt;
    char** rd;
  } strs;                    
  ub4 ioVers;                
  sysfp* fp;                 
  ysx* xstr;                 
  ub4 maxPrim;               
  yrobj* repository;         
} yrctx;




void yrWrite( yrobj* root, CONST char* fn);
void yrRead( yrobj* rep, CONST char* fn, ub4* count, yrldblk** data);

externref ysidDecl( YR_EX_WRITE_FAIL);
externref ysidDecl( YR_EX_READ_FAIL);
externref ysidDecl( YR_EX_OPEN_FAIL);
externref ysidDecl(YR_EX_BADHDR);
externref ysidDecl(YR_EX_UNDEFINED);
externref ysidDecl(YR_EX_REDEFINED);



#define YR_MAX_PRIM 16



#ifndef YRSRV_DEFAULT_TAG
#define YRSRV_DEFAULT_TAG "OMNIFR"
#endif 




#define YR_PROD "OMN"
#define YRMCL_FAC "YR"
#define YRSRV_FAC "YR"
#define YR_FAC "YR"
#define YRMSG_BASE ((ub4) 5500)
#define YR_MSG( num, fac) YR_PROD, (fac), (YRMSG_BASE + (ub4)(num))

#endif 
