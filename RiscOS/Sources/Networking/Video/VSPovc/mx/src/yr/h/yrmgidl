/* mx/src/yr/yrmgidl.h */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef YRMGIDL_IDL
#define YRMGIDL_IDL

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

EXTC_START


#ifndef YCIDL_sequence_CORBA_Object_DEFINED
#define YCIDL_sequence_CORBA_Object_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_Object* _buffer;
} YCIDL_sequence_CORBA_Object;
#ifndef YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#define YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#endif 

#endif 



#ifndef CORBA_IRObject_DECLARED
#define CORBA_IRObject_DECLARED
typedef struct YCCORBA_IRObject* CORBA_IRObject;
yotk* CORBA_IRObject__getTC(void);
#ifndef YCTC_CORBA_IRObject
#define YCTC_CORBA_IRObject   (CORBA_IRObject__getTC())
#endif
#endif 

#ifndef CORBA_IRObject_SUPP_FUNCS
#define CORBA_IRObject_SUPP_FUNCS
void CORBA_IRObject__free( CORBA_IRObject* val, ysmff ffunc);
void CORBA_IRObject__copy( CORBA_IRObject* dest, CORBA_IRObject* src, ysmaf 
  afunc);
#endif 

#ifndef YCIDL_sequence_CORBA_IRObject_DEFINED
#define YCIDL_sequence_CORBA_IRObject_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_IRObject* _buffer;
} YCIDL_sequence_CORBA_IRObject;
#ifndef YCIDL_sequence_CORBA_IRObject_SUPP_FUNCS
#define YCIDL_sequence_CORBA_IRObject_SUPP_FUNCS
#endif 

#endif 




#ifndef yoevt_DECLARED
#define yoevt_DECLARED
typedef struct YCyoevt* yoevt;
yotk* yoevt__getTC(void);
#ifndef YCTC_yoevt
#define YCTC_yoevt   (yoevt__getTC())
#endif
#endif 

#ifndef yoevt_SUPP_FUNCS
#define yoevt_SUPP_FUNCS
void yoevt__free( yoevt* val, ysmff ffunc);
void yoevt__copy( yoevt* dest, yoevt* src, ysmaf afunc);
#endif 

#ifndef yostd_stringList_DECLARED
#define yostd_stringList_DECLARED
typedef YCIDL_sequence_string yostd_stringList;
yotk* yostd_stringList__getTC(void);
#ifndef YCTC_yostd_stringList
#define YCTC_yostd_stringList   (yostd_stringList__getTC())
#endif
#endif 

#ifndef yostd_stringList_SUPP_FUNCS
#define yostd_stringList_SUPP_FUNCS
void yostd_stringList__free( yostd_stringList* val, ysmff ffunc);
void yostd_stringList__copy( yostd_stringList* dest, yostd_stringList* src, 
  ysmaf afunc);
#endif 

#ifndef yostd_objList_DECLARED
#define yostd_objList_DECLARED
typedef YCIDL_sequence_CORBA_Object yostd_objList;
yotk* yostd_objList__getTC(void);
#ifndef YCTC_yostd_objList
#define YCTC_yostd_objList   (yostd_objList__getTC())
#endif
#endif 

#ifndef yostd_objList_SUPP_FUNCS
#define yostd_objList_SUPP_FUNCS
void yostd_objList__free( yostd_objList* val, ysmff ffunc);
void yostd_objList__copy( yostd_objList* dest, yostd_objList* src, ysmaf 
  afunc);
#endif 

#ifndef yostd_octetSeq_DECLARED
#define yostd_octetSeq_DECLARED
typedef YCIDL_sequence_ub1 yostd_octetSeq;
yotk* yostd_octetSeq__getTC(void);
#ifndef YCTC_yostd_octetSeq
#define YCTC_yostd_octetSeq   (yostd_octetSeq__getTC())
#endif
#endif 

#ifndef yostd_octetSeq_SUPP_FUNCS
#define yostd_octetSeq_SUPP_FUNCS
void yostd_octetSeq__free( yostd_octetSeq* val, ysmff ffunc);
void yostd_octetSeq__copy( yostd_octetSeq* dest, yostd_octetSeq* src, ysmaf 
  afunc);
#endif 

#ifndef CORBA_Identifier_DECLARED
#define CORBA_Identifier_DECLARED
typedef char* CORBA_Identifier;
yotk* CORBA_Identifier__getTC(void);
#ifndef YCTC_CORBA_Identifier
#define YCTC_CORBA_Identifier   (CORBA_Identifier__getTC())
#endif
#endif 

#ifndef CORBA_Identifier_SUPP_FUNCS
#define CORBA_Identifier_SUPP_FUNCS
#endif 

#ifndef CORBA_ScopedName_DECLARED
#define CORBA_ScopedName_DECLARED
typedef char* CORBA_ScopedName;
yotk* CORBA_ScopedName__getTC(void);
#ifndef YCTC_CORBA_ScopedName
#define YCTC_CORBA_ScopedName   (CORBA_ScopedName__getTC())
#endif
#endif 

#ifndef CORBA_ScopedName_SUPP_FUNCS
#define CORBA_ScopedName_SUPP_FUNCS
#endif 

#ifndef CORBA_RepositoryId_DECLARED
#define CORBA_RepositoryId_DECLARED
typedef char* CORBA_RepositoryId;
yotk* CORBA_RepositoryId__getTC(void);
#ifndef YCTC_CORBA_RepositoryId
#define YCTC_CORBA_RepositoryId   (CORBA_RepositoryId__getTC())
#endif
#endif 

#ifndef CORBA_RepositoryId_SUPP_FUNCS
#define CORBA_RepositoryId_SUPP_FUNCS
#endif 

#ifndef CORBA_RepositoryIdSeq_DECLARED
#define CORBA_RepositoryIdSeq_DECLARED
typedef YCIDL_sequence_string CORBA_RepositoryIdSeq;
yotk* CORBA_RepositoryIdSeq__getTC(void);
#ifndef YCTC_CORBA_RepositoryIdSeq
#define YCTC_CORBA_RepositoryIdSeq   (CORBA_RepositoryIdSeq__getTC())
#endif
#endif 

#ifndef CORBA_RepositoryIdSeq_SUPP_FUNCS
#define CORBA_RepositoryIdSeq_SUPP_FUNCS
void CORBA_RepositoryIdSeq__free( CORBA_RepositoryIdSeq* val, ysmff ffunc);
void CORBA_RepositoryIdSeq__copy( CORBA_RepositoryIdSeq* dest, 
  CORBA_RepositoryIdSeq* src, ysmaf afunc);
#endif 

#ifndef CORBA_VersionSpec_DECLARED
#define CORBA_VersionSpec_DECLARED
typedef char* CORBA_VersionSpec;
yotk* CORBA_VersionSpec__getTC(void);
#ifndef YCTC_CORBA_VersionSpec
#define YCTC_CORBA_VersionSpec   (CORBA_VersionSpec__getTC())
#endif
#endif 

#ifndef CORBA_VersionSpec_SUPP_FUNCS
#define CORBA_VersionSpec_SUPP_FUNCS
#endif 



#ifndef CORBA_IRObject_DECLARED
#define CORBA_IRObject_DECLARED
typedef struct YCCORBA_IRObject* CORBA_IRObject;
yotk* CORBA_IRObject__getTC(void);
#ifndef YCTC_CORBA_IRObject
#define YCTC_CORBA_IRObject   (CORBA_IRObject__getTC())
#endif
#endif 

#ifndef CORBA_IRObject_SUPP_FUNCS
#define CORBA_IRObject_SUPP_FUNCS
void CORBA_IRObject__free( CORBA_IRObject* val, ysmff ffunc);
void CORBA_IRObject__copy( CORBA_IRObject* dest, CORBA_IRObject* src, ysmaf 
  afunc);
#endif 

#ifndef CORBA_IRObjectSeq_DECLARED
#define CORBA_IRObjectSeq_DECLARED
typedef YCIDL_sequence_CORBA_IRObject CORBA_IRObjectSeq;
yotk* CORBA_IRObjectSeq__getTC(void);
#ifndef YCTC_CORBA_IRObjectSeq
#define YCTC_CORBA_IRObjectSeq   (CORBA_IRObjectSeq__getTC())
#endif
#endif 

#ifndef CORBA_IRObjectSeq_SUPP_FUNCS
#define CORBA_IRObjectSeq_SUPP_FUNCS
void CORBA_IRObjectSeq__free( CORBA_IRObjectSeq* val, ysmff ffunc);
void CORBA_IRObjectSeq__copy( CORBA_IRObjectSeq* dest, CORBA_IRObjectSeq* 
  src, ysmaf afunc);
#endif 

#ifndef yr_repid_DECLARED
#define yr_repid_DECLARED
typedef CORBA_RepositoryId yr_repid;
yotk* yr_repid__getTC(void);
#ifndef YCTC_yr_repid
#define YCTC_yr_repid   (yr_repid__getTC())
#endif
#endif 

#ifndef yr_repid_SUPP_FUNCS
#define yr_repid_SUPP_FUNCS
#endif 

#ifndef yr_repidseq_DECLARED
#define yr_repidseq_DECLARED
typedef CORBA_RepositoryIdSeq yr_repidseq;
yotk* yr_repidseq__getTC(void);
#ifndef YCTC_yr_repidseq
#define YCTC_yr_repidseq   (yr_repidseq__getTC())
#endif
#endif 

#ifndef yr_repidseq_SUPP_FUNCS
#define yr_repidseq_SUPP_FUNCS
#define yr_repidseq__free(val, ffunc) CORBA_RepositoryIdSeq__free((val),( \
  ffunc))
#define yr_repidseq__copy(dest, src, afunc) CORBA_RepositoryIdSeq__copy(( \
  dest),(src),(afunc))
#endif 

#ifndef yr_vers_DECLARED
#define yr_vers_DECLARED
typedef CORBA_VersionSpec yr_vers;
yotk* yr_vers__getTC(void);
#ifndef YCTC_yr_vers
#define YCTC_yr_vers   (yr_vers__getTC())
#endif
#endif 

#ifndef yr_vers_SUPP_FUNCS
#define yr_vers_SUPP_FUNCS
#endif 

#ifndef yr_objseq_DECLARED
#define yr_objseq_DECLARED
typedef CORBA_IRObjectSeq yr_objseq;
yotk* yr_objseq__getTC(void);
#ifndef YCTC_yr_objseq
#define YCTC_yr_objseq   (yr_objseq__getTC())
#endif
#endif 

#ifndef yr_objseq_SUPP_FUNCS
#define yr_objseq_SUPP_FUNCS
#define yr_objseq__free(val, ffunc) CORBA_IRObjectSeq__free((val),(ffunc))
#define yr_objseq__copy(dest, src, afunc) CORBA_IRObjectSeq__copy((dest),( \
  src),(afunc))
#endif 

#ifndef yr_srcref_DECLARED
#define yr_srcref_DECLARED
typedef struct yr_srcref yr_srcref;
#endif 

#ifndef yr_srcref_DEFINED
#define yr_srcref_DEFINED
struct yr_srcref
{
  char* filename;
  ub4 lineno;
};
yotk* yr_srcref__getTC(void);
#ifndef YCTC_yr_srcref
#define YCTC_yr_srcref   (yr_srcref__getTC())
#endif
#endif 

#ifndef yr_srcref_SUPP_FUNCS
#define yr_srcref_SUPP_FUNCS
void yr_srcref__free( yr_srcref* val, ysmff ffunc);
void yr_srcref__copy( yr_srcref* dest, yr_srcref* src, ysmaf afunc);
#endif 

#ifndef yr_path_DECLARED
#define yr_path_DECLARED
typedef char* yr_path;
yotk* yr_path__getTC(void);
#ifndef YCTC_yr_path
#define YCTC_yr_path   (yr_path__getTC())
#endif
#endif 

#ifndef yr_path_SUPP_FUNCS
#define yr_path_SUPP_FUNCS
#endif 

#ifndef yr_pathSeq_DECLARED
#define yr_pathSeq_DECLARED
typedef YCIDL_sequence_string yr_pathSeq;
yotk* yr_pathSeq__getTC(void);
#ifndef YCTC_yr_pathSeq
#define YCTC_yr_pathSeq   (yr_pathSeq__getTC())
#endif
#endif 

#ifndef yr_pathSeq_SUPP_FUNCS
#define yr_pathSeq_SUPP_FUNCS
void yr_pathSeq__free( yr_pathSeq* val, ysmff ffunc);
void yr_pathSeq__copy( yr_pathSeq* dest, yr_pathSeq* src, ysmaf afunc);
#endif 



#ifndef CORBA_Repository_DECLARED
#define CORBA_Repository_DECLARED
typedef struct YCCORBA_Repository* CORBA_Repository;
yotk* CORBA_Repository__getTC(void);
#ifndef YCTC_CORBA_Repository
#define YCTC_CORBA_Repository   (CORBA_Repository__getTC())
#endif
#endif 

#ifndef CORBA_Repository_SUPP_FUNCS
#define CORBA_Repository_SUPP_FUNCS
void CORBA_Repository__free( CORBA_Repository* val, ysmff ffunc);
void CORBA_Repository__copy( CORBA_Repository* dest, CORBA_Repository* src, 
  ysmaf afunc);
#endif 



#ifndef yr_mgr_DECLARED
#define yr_mgr_DECLARED
typedef struct YCyr_mgr* yr_mgr;
yotk* yr_mgr__getTC(void);
#ifndef YCTC_yr_mgr
#define YCTC_yr_mgr   (yr_mgr__getTC())
#endif
#endif 

#ifndef yr_mgr_SUPP_FUNCS
#define yr_mgr_SUPP_FUNCS
void yr_mgr__free( yr_mgr* val, ysmff ffunc);
void yr_mgr__copy( yr_mgr* dest, yr_mgr* src, ysmaf afunc);
#endif 

#ifndef yr_mgr_DEFINED
#define yr_mgr_DEFINED
struct yostub* yr_mgr__getStubs(void);
#define yr_mgr__stubs (yr_mgr__getStubs())
#endif 

CONST ysid* yr_mgr__getId(void);
#ifndef yr_mgr__id
#define yr_mgr__id   (yr_mgr__getId())
#endif
#ifndef yr_mgr_err_max_DECLARED
#define yr_mgr_err_max_DECLARED
#define yr_mgr_err_max ((ub4) 10)
#endif 

#ifndef YR_MGR_EX_LOADCONFLICT_DECLARED
#define YR_MGR_EX_LOADCONFLICT_DECLARED
CONST ysid* yr_mgr_LoadConflict__getId(void);
#ifndef YR_MGR_EX_LOADCONFLICT
#define YR_MGR_EX_LOADCONFLICT   (yr_mgr_LoadConflict__getId())
#endif
#endif 

#ifndef yr_mgr_LoadConflict_DECLARED
#define yr_mgr_LoadConflict_DECLARED
typedef struct yr_mgr_LoadConflict yr_mgr_LoadConflict;
#endif 

#ifndef yr_mgr_LoadConflict_DEFINED
#define yr_mgr_LoadConflict_DEFINED
struct yr_mgr_LoadConflict
{
  yr_path filename;
  YCIDL_sequence_string undefined;
  YCIDL_sequence_string redefined;
};
yotk* yr_mgr_LoadConflict__getTC(void);
#ifndef YCTC_yr_mgr_LoadConflict
#define YCTC_yr_mgr_LoadConflict   (yr_mgr_LoadConflict__getTC())
#endif
#endif 

#ifndef yr_mgr_LoadConflict_SUPP_FUNCS
#define yr_mgr_LoadConflict_SUPP_FUNCS
void yr_mgr_LoadConflict__free( yr_mgr_LoadConflict* val, ysmff ffunc);
void yr_mgr_LoadConflict__copy( yr_mgr_LoadConflict* dest, 
  yr_mgr_LoadConflict* src, ysmaf afunc);
#endif 

#ifndef YR_MGR_EX_FILENOTFOUND_DECLARED
#define YR_MGR_EX_FILENOTFOUND_DECLARED
CONST ysid* yr_mgr_fileNotFound__getId(void);
#ifndef YR_MGR_EX_FILENOTFOUND
#define YR_MGR_EX_FILENOTFOUND   (yr_mgr_fileNotFound__getId())
#endif
#endif 

#ifndef yr_mgr_fileNotFound_DECLARED
#define yr_mgr_fileNotFound_DECLARED
typedef struct yr_mgr_fileNotFound yr_mgr_fileNotFound;
#endif 

#ifndef yr_mgr_fileNotFound_DEFINED
#define yr_mgr_fileNotFound_DEFINED
struct yr_mgr_fileNotFound
{
  yr_path path;
};
yotk* yr_mgr_fileNotFound__getTC(void);
#ifndef YCTC_yr_mgr_fileNotFound
#define YCTC_yr_mgr_fileNotFound   (yr_mgr_fileNotFound__getTC())
#endif
#endif 

#ifndef yr_mgr_fileNotFound_SUPP_FUNCS
#define yr_mgr_fileNotFound_SUPP_FUNCS
void yr_mgr_fileNotFound__free( yr_mgr_fileNotFound* val, ysmff ffunc);
void yr_mgr_fileNotFound__copy( yr_mgr_fileNotFound* dest, 
  yr_mgr_fileNotFound* src, ysmaf afunc);
#endif 

#ifndef YR_MGR_EX_FILECORRUPTED_DECLARED
#define YR_MGR_EX_FILECORRUPTED_DECLARED
CONST ysid* yr_mgr_fileCorrupted__getId(void);
#ifndef YR_MGR_EX_FILECORRUPTED
#define YR_MGR_EX_FILECORRUPTED   (yr_mgr_fileCorrupted__getId())
#endif
#endif 

#ifndef yr_mgr_fileCorrupted_DECLARED
#define yr_mgr_fileCorrupted_DECLARED
typedef struct yr_mgr_fileCorrupted yr_mgr_fileCorrupted;
#endif 

#ifndef yr_mgr_fileCorrupted_DEFINED
#define yr_mgr_fileCorrupted_DEFINED
struct yr_mgr_fileCorrupted
{
  yr_path path;
};
yotk* yr_mgr_fileCorrupted__getTC(void);
#ifndef YCTC_yr_mgr_fileCorrupted
#define YCTC_yr_mgr_fileCorrupted   (yr_mgr_fileCorrupted__getTC())
#endif
#endif 

#ifndef yr_mgr_fileCorrupted_SUPP_FUNCS
#define yr_mgr_fileCorrupted_SUPP_FUNCS
void yr_mgr_fileCorrupted__free( yr_mgr_fileCorrupted* val, ysmff ffunc);
void yr_mgr_fileCorrupted__copy( yr_mgr_fileCorrupted* dest, 
  yr_mgr_fileCorrupted* src, ysmaf afunc);
#endif 

yr_pathSeq yr_mgr__get_loadlist( yr_mgr or, yoenv* ev);
yopar* yr_mgr__get_loadlist__getPars(void);
#ifndef yr_mgr__get_loadlist_pars
#define yr_mgr__get_loadlist_pars (yr_mgr__get_loadlist__getPars())
#endif

void yr_mgr_load( yr_mgr or, yoenv* ev, yr_path fn);
yopar* yr_mgr_load__getPars(void);
#ifndef yr_mgr_load_pars
#define yr_mgr_load_pars (yr_mgr_load__getPars())
#endif

CORBA_Repository yr_mgr__get_repository( yr_mgr or, yoenv* ev);
yopar* yr_mgr__get_repository__getPars(void);
#ifndef yr_mgr__get_repository_pars
#define yr_mgr__get_repository_pars (yr_mgr__get_repository__getPars())
#endif

void yr_mgr_shutdown( yr_mgr or, yoenv* ev);
yopar* yr_mgr_shutdown__getPars(void);
#ifndef yr_mgr_shutdown_pars
#define yr_mgr_shutdown_pars (yr_mgr_shutdown__getPars())
#endif

#ifndef yr_mgr__tyimpl_DEFINED
#define yr_mgr__tyimpl_DEFINED
struct yr_mgr__tyimpl
{
  void (*load)( yr_mgr, yoenv*, yr_path);
  void (*shutdown)( yr_mgr, yoenv*);
  yr_pathSeq (*_get_loadlist)( yr_mgr, yoenv*);
  CORBA_Repository (*_get_repository)( yr_mgr, yoenv*);
};
#endif 

EXTC_END
#endif 
