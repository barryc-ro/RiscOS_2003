/* mx/src/yr/yrdiidlC.c */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

#ifndef YRDIIDL_IDL
#include <yrdiidl.h>
#endif

EXTC_START

static CONST_DATA yotk yo_par__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'T',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x0f,'I','D','L',':','y','o','/','p','a','r',
  ':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0a,':',':','y','o'
  ,':',':','p','a','r',0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x05,'m','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x03,0x00,0x00,0x00,0x03,'t','k',0x00,0x00,0x00,0x00,0x00
  ,0x0c,0x00,0x00,0x00,0x03,'s','z',0x00,0x00,0x00,0x00,0x00,0x05
  };

yotk* yo_par__getTC(void)
{
  return (yotk*)yo_par__tc;
}

void yo_par__free( yo_par* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yo_par, (dvoid *)val, ffunc);
}

void yo_par__copy( yo_par* dest, yo_par* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_yo_par, (dvoid *)dest, (dvoid *)src, afunc);
}

static CONST_DATA yotk yo_parList__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x00,0x9c,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x13,'I','D','L',':','y','o','/','p','a','r'
  ,'L','i','s','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e
  ,':',':','y','o',':',':','p','a','r','L','i','s','t',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,'d',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'T',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0f,'I','D','L',':','y','o','/','p','a','r'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0a,':',':','y','o'
  ,':',':','p','a','r',0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x05,'m','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x03,0x00,0x00,0x00,0x03,'t','k',0x00,0x00,0x00,0x00,0x00
  ,0x0c,0x00,0x00,0x00,0x03,'s','z',0x00,0x00,0x00,0x00,0x00,0x05
  ,0x00,0x00,0x00,0x00};

yotk* yo_parList__getTC(void)
{
  return (yotk*)yo_parList__tc;
}

void yo_parList__free( yo_parList* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yo_parList, (dvoid *)val, ffunc);
}

void yo_parList__copy( yo_parList* dest, yo_parList* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_yo_parList, (dvoid *)dest, (dvoid *)src, afunc);
}

static CONST_DATA yotk yr_scopedNameList__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x00,'X',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x1a,'I','D','L',':','y','r','/','s','c','o',
  'p','e','d','N','a','m','e','L','i','s','t',':','1','.','0',
  0x00,0x00,0x00,0x00,0x00,0x00,0x15,':',':','y','r',':',':','s'
  ,'c','o','p','e','d','N','a','m','e','L','i','s','t',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x10,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00};

yotk* yr_scopedNameList__getTC(void)
{
  return (yotk*)yr_scopedNameList__tc;
}

void yr_scopedNameList__free( yr_scopedNameList* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yr_scopedNameList, (dvoid *)val, ffunc);
}

void yr_scopedNameList__copy( yr_scopedNameList* dest, yr_scopedNameList* 
  src, ysmaf afunc)
{
  yotkCopyVal( YCTC_yr_scopedNameList, (dvoid *)dest, (dvoid *)src, afunc);
}

static CONST_DATA yotk yr_parNameList__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x00,'P',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x17,'I','D','L',':','y','r','/','p','a','r',
  'N','a','m','e','L','i','s','t',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x12,':',':','y','r',':',':','p','a','r','N','a',
  'm','e','L','i','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00
  ,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

yotk* yr_parNameList__getTC(void)
{
  return (yotk*)yr_parNameList__tc;
}

void yr_parNameList__free( yr_parNameList* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yr_parNameList, (dvoid *)val, ffunc);
}

void yr_parNameList__copy( yr_parNameList* dest, yr_parNameList* src, ysmaf 
  afunc)
{
  yotkCopyVal( YCTC_yr_parNameList, (dvoid *)dest, (dvoid *)src, afunc);
}

static CONST_DATA yotk yr_reqDesc__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x01,'t',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x13,'I','D','L',':','y','r','/','r','e','q',
  'D','e','s','c',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e
  ,':',':','y','r',':',':','r','e','q','D','e','s','c',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x05,'n','a','m','e'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x09,'i','s','O','n','e','w','a','y',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x09,'p','a','r'
  ,'N','a','m','e','s',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15
  ,0x00,0x00,0x00,'P',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,
  'I','D','L',':','y','r','/','p','a','r','N','a','m','e','L',
  'i','s','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':'
  ,':','y','r',':',':','p','a','r','N','a','m','e','L','i','s'
  ,'t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x10,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,'p','a','r','s',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,0x9c,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','y','o',
  '/','p','a','r','L','i','s','t',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x0e,':',':','y','o',':',':','p','a','r','L','i',
  's','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,'d'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'T',
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'I','D','L',':','y',
  'o','/','p','a','r',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x0a,':',':','y','o',':',':','p','a','r',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x03,0x00,0x00,0x00,0x05,'m','o','d','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03,'t','k',0x00
  ,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x03,'s','z',0x00,0x00
  ,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00};

yotk* yr_reqDesc__getTC(void)
{
  return (yotk*)yr_reqDesc__tc;
}

void yr_reqDesc__free( yr_reqDesc* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yr_reqDesc, (dvoid *)val, ffunc);
}

void yr_reqDesc__copy( yr_reqDesc* dest, yr_reqDesc* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_yr_reqDesc, (dvoid *)dest, (dvoid *)src, afunc);
}

static CONST_DATA yotk yr_reqDescList__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x01,0xc4,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x17,'I','D','L',':','y','r','/','r','e','q'
  ,'D','e','s','c','L','i','s','t',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x12,':',':','y','r',':',':','r','e','q','D','e',
  's','c','L','i','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00
  ,0x00,0x01,0x84,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00
  ,0x00,0x01,'t',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D'
  ,'L',':','y','r','/','r','e','q','D','e','s','c',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x00,0x0e,':',':','y','r',':',':','r'
  ,'e','q','D','e','s','c',0x00,0x00,0x00,0x00,0x00,0x00,0x04,
  0x00,0x00,0x00,0x05,'n','a','m','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,'i',
  's','O','n','e','w','a','y',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08,0x00,0x00,0x00,0x09,'p','a','r','N','a','m','e','s',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'P',0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D','L',':','y','r','/'
  ,'p','a','r','N','a','m','e','L','i','s','t',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x12,':',':','y','r',':',':','p','a'
  ,'r','N','a','m','e','L','i','s','t',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x13,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x05,'p','a','r','s',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x15,0x00,0x00,0x00,0x9c,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x13,'I','D','L',':','y','o','/','p','a','r','L','i','s','t'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e,':',':','y','o'
  ,':',':','p','a','r','L','i','s','t',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x13,0x00,0x00,0x00,'d',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x0f,0x00,0x00,0x00,'T',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0f,'I','D','L',':','y','o','/','p','a','r',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x0a,':',':','y','o',':',':','p','a'
  ,'r',0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x05,
  'm','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x03,'t','k',0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00
  ,0x00,0x03,'s','z',0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00};

yotk* yr_reqDescList__getTC(void)
{
  return (yotk*)yr_reqDescList__tc;
}

void yr_reqDescList__free( yr_reqDescList* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yr_reqDescList, (dvoid *)val, ffunc);
}

void yr_reqDescList__copy( yr_reqDescList* dest, yr_reqDescList* src, ysmaf 
  afunc)
{
  yotkCopyVal( YCTC_yr_reqDescList, (dvoid *)dest, (dvoid *)src, afunc);
}

static CONST_DATA yotk yr_intfDesc__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x02,'x',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','y','r','/','i','n','t',
  'f','D','e','s','c',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','y','r',':',':','i','n','t','f','D','e','s','c',0x00
  ,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x05,'n','a','m','e'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'D',
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x19,'I','D','L',':','C',
  'O','R','B','A','/','S','c','o','p','e','d','N','a','m','e',
  ':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,':',
  ':','C','O','R','B','A',':',':','S','c','o','p','e','d','N',
  'a','m','e',0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0c,'i','n','t','e','r','f','a','c','e','I','d',
  0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x04,'o','p','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x01,0xc4
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D','L',':','y'
  ,'r','/','r','e','q','D','e','s','c','L','i','s','t',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x00,0x12,':',':','y','r',':',':'
  ,'r','e','q','D','e','s','c','L','i','s','t',0x00,0x00,0x00,
  0x00,0x00,0x00,0x13,0x00,0x00,0x01,0x84,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x0f,0x00,0x00,0x01,'t',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x13,'I','D','L',':','y','r','/','r','e','q','D',
  'e','s','c',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e,':'
  ,':','y','r',':',':','r','e','q','D','e','s','c',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x05,'n','a','m','e',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x09,'i','s','O','n','e','w','a','y',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x09,'p','a','r','N'
  ,'a','m','e','s',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00
  ,0x00,0x00,'P',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D'
  ,'L',':','y','r','/','p','a','r','N','a','m','e','L','i','s'
  ,'t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':',':','y'
  ,'r',':',':','p','a','r','N','a','m','e','L','i','s','t',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x10,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x05,'p','a','r','s',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,0x9c,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','y','o','/','p','a'
  ,'r','L','i','s','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x0e,':',':','y','o',':',':','p','a','r','L','i','s','t',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,'d',0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'T',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0f,'I','D','L',':','y','o','/','p','a'
  ,'r',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0a,':',':','y'
  ,'o',':',':','p','a','r',0x00,0x00,0x00,0x00,0x00,0x00,0x03,
  0x00,0x00,0x00,0x05,'m','o','d','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x03,0x00,0x00,0x00,0x03,'t','k',0x00,0x00,0x00,0x00
  ,0x00,0x0c,0x00,0x00,0x00,0x03,'s','z',0x00,0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

yotk* yr_intfDesc__getTC(void)
{
  return (yotk*)yr_intfDesc__tc;
}

void yr_intfDesc__free( yr_intfDesc* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yr_intfDesc, (dvoid *)val, ffunc);
}

void yr_intfDesc__copy( yr_intfDesc* dest, yr_intfDesc* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_yr_intfDesc, (dvoid *)dest, (dvoid *)src, afunc);
}

static CONST_DATA yotk yr_intfDescList__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x02,0xc8,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x18,'I','D','L',':','y','r','/','i','n','t'
  ,'f','D','e','s','c','L','i','s','t',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x13,':',':','y','r',':',':','i','n','t','f','D',
  'e','s','c','L','i','s','t',0x00,0x00,0x00,0x00,0x00,0x13,0x00
  ,0x00,0x02,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00
  ,0x00,0x02,'x',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D'
  ,'L',':','y','r','/','i','n','t','f','D','e','s','c',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x0f,':',':','y','r',':',':','i'
  ,'n','t','f','D','e','s','c',0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x05,'n','a','m','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x15,0x00,0x00,0x00,'D',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x19,'I','D','L',':','C','O','R','B','A','/','S','c','o'
  ,'p','e','d','N','a','m','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x14,':',':','C','O','R','B','A',':',':'
  ,'S','c','o','p','e','d','N','a','m','e',0x00,0x00,0x00,0x00
  ,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,'i','n','t','e'
  ,'r','f','a','c','e','I','d',0x00,0x00,0x00,0x00,0x12,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x04,'o','p','s',0x00,0x00,0x00,0x00
  ,0x15,0x00,0x00,0x01,0xc4,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x17,'I','D','L',':','y','r','/','r','e','q','D','e','s','c'
  ,'L','i','s','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12
  ,':',':','y','r',':',':','r','e','q','D','e','s','c','L','i'
  ,'s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x01,0x84
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x01,'t',
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','y',
  'r','/','r','e','q','D','e','s','c',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x00,0x0e,':',':','y','r',':',':','r','e','q','D'
  ,'e','s','c',0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00
  ,0x05,'n','a','m','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,'i','s','O','n','e'
  ,'w','a','y',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00
  ,0x00,0x09,'p','a','r','N','a','m','e','s',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'P',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x17,'I','D','L',':','y','r','/','p','a','r',
  'N','a','m','e','L','i','s','t',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x12,':',':','y','r',':',':','p','a','r','N','a',
  'm','e','L','i','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00
  ,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,'p',
  'a','r','s',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00
  ,0x00,0x9c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L'
  ,':','y','o','/','p','a','r','L','i','s','t',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x0e,':',':','y','o',':',':','p','a'
  ,'r','L','i','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00
  ,0x00,0x00,'d',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,
  0x00,0x00,'T',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'I','D'
  ,'L',':','y','o','/','p','a','r',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x0a,':',':','y','o',':',':','p','a','r',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x05,'m','o','d','e'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03
  ,'t','k',0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x03,'s'
  ,'z',0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00};

yotk* yr_intfDescList__getTC(void)
{
  return (yotk*)yr_intfDescList__tc;
}

void yr_intfDescList__free( yr_intfDescList* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yr_intfDescList, (dvoid *)val, ffunc);
}

void yr_intfDescList__copy( yr_intfDescList* dest, yr_intfDescList* src, 
  ysmaf afunc)
{
  yotkCopyVal( YCTC_yr_intfDescList, (dvoid *)dest, (dvoid *)src, afunc);
}

static CONST_DATA yotk yr_intfIdList__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x00,'P',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x16,'I','D','L',':','y','r','/','i','n','t',
  'f','I','d','L','i','s','t',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x11,':',':','y','r',':',':','i','n','t','f','I',
  'd','L','i','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,
  0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

yotk* yr_intfIdList__getTC(void)
{
  return (yotk*)yr_intfIdList__tc;
}

void yr_intfIdList__free( yr_intfIdList* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yr_intfIdList, (dvoid *)val, ffunc);
}

void yr_intfIdList__copy( yr_intfIdList* dest, yr_intfIdList* src, ysmaf 
  afunc)
{
  yotkCopyVal( YCTC_yr_intfIdList, (dvoid *)dest, (dvoid *)src, afunc);
}


static ysidDecl(yr_dii___id) = "IDL:yr/dii:1.0";

CONST ysid* yr_dii__getId(void)
{
  return (CONST ysid*)yr_dii___id;
}

static CONST_DATA yotk yr_dii__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'&',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x0f,'I','D','L',':','y','r','/','d','i','i',
  ':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0a,':',':','y','r'
  ,':',':','d','i','i',0x00};

yotk* yr_dii__getTC(void)
{
  return (yotk*)yr_dii__tc;
}


void yr_dii__free( yr_dii* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yr_dii, (dvoid *)val, ffunc);
}

void yr_dii__copy( yr_dii* dest, yr_dii* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_yr_dii, (dvoid *)dest, (dvoid *)src, afunc);
}

static ysidDecl(yr_dii_NotFound___id) = "IDL:yr/dii/NotFound:1.0";

CONST ysid* yr_dii_NotFound__getId(void)
{
  return (CONST ysid*)yr_dii_NotFound___id;
}

static CONST_DATA yotk yr_dii_NotFound__tc[] = 
  {0x00,0x00,0x00,0x16,0x00,0x00,0x00,0x94,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x18,'I','D','L',':','y','r','/','d','i','i'
  ,'/','N','o','t','F','o','u','n','d',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x14,':',':','y','r',':',':','d','i','i',':',':',
  'N','o','t','F','o','u','n','d',0x00,0x00,0x00,0x00,0x01,0x00
  ,0x00,0x00,0x05,'n','a','m','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x15,0x00,0x00,0x00,'D',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x19,'I','D','L',':','C','O','R','B','A','/','S','c','o'
  ,'p','e','d','N','a','m','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x14,':',':','C','O','R','B','A',':',':'
  ,'S','c','o','p','e','d','N','a','m','e',0x00,0x00,0x00,0x00
  ,0x12,0x00,0x00,0x00,0x00};

yotk* yr_dii_NotFound__getTC(void)
{
  return (yotk*)yr_dii_NotFound__tc;
}

void yr_dii_NotFound__free( yr_dii_NotFound* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_yr_dii_NotFound, (dvoid *)val, ffunc);
}

void yr_dii_NotFound__copy( yr_dii_NotFound* dest, yr_dii_NotFound* src, 
  ysmaf afunc)
{
  yotkCopyVal( YCTC_yr_dii_NotFound, (dvoid *)dest, (dvoid *)src, afunc);
}


yopar* yr_dii_reqDescByName__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "yr_dii_reqDescByName");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "yr_dii_reqDescByName", (ub4)3);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_yr_reqDescList;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)YCTC_yr_scopedNameList;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_yr_dii_NotFound;
    _pars[3].mode = YOMODE_INVALID;
    _pars[3].tk = (yotk*)yoTcNull;
    _pars[3].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

yr_reqDescList yr_dii_reqDescByName( yr_dii or, yoenv* ev, 
  yr_scopedNameList* names)
{
  yr_reqDescList _result;
  ysevt* noreg _sem = (ysevt*)0;
  struct yr_dii__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  NOREG(_sem);
  _impl = (struct yr_dii__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)
    &_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (dvoid *)_impl, yr_dii__id);
      _result = (*(yr_reqDescList (*)( yr_dii, yoenv*, yr_scopedNameList*))
        _f)(or, ev, names);
    }
    else
      _result = (*_impl->reqDescByName)(or, ev, names);
  }
  else
  {
    yoFilterRunEx((dvoid *)or, ev, YOFLTR_CSND, (CONST  char*)0, (dvoid *)0)
      ;
    yseTry
    {
      _sem = ysSemCreate((dvoid *)0);
      {
        dvoid * _parvec[1];

        _parvec[0] = (dvoid *) names;
        yoSendReq( (dvoid *)or, ev, "reqDescByName", TRUE, _sem, (sword)1, 
          yr_dii_reqDescByName_pars, _parvec);
      }
    }
    yseCatchAll
    {
      CONST ysid* _exid;
      dvoid * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((dvoid *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (dvoid *)&_result);
    }
    yseFinally
      yoFilterRunEx((dvoid *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

yopar* yr_dii_intfDescByName__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "yr_dii_intfDescByName");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "yr_dii_intfDescByName", (ub4)3);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_yr_intfDescList;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)YCTC_yr_scopedNameList;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_yr_dii_NotFound;
    _pars[3].mode = YOMODE_INVALID;
    _pars[3].tk = (yotk*)yoTcNull;
    _pars[3].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

yr_intfDescList yr_dii_intfDescByName( yr_dii or, yoenv* ev, 
  yr_scopedNameList* names)
{
  yr_intfDescList _result;
  ysevt* noreg _sem = (ysevt*)0;
  struct yr_dii__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  NOREG(_sem);
  _impl = (struct yr_dii__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)
    &_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (dvoid *)_impl, yr_dii__id);
      _result = (*(yr_intfDescList (*)( yr_dii, yoenv*, yr_scopedNameList*))
        _f)(or, ev, names);
    }
    else
      _result = (*_impl->intfDescByName)(or, ev, names);
  }
  else
  {
    yoFilterRunEx((dvoid *)or, ev, YOFLTR_CSND, (CONST  char*)0, (dvoid *)0)
      ;
    yseTry
    {
      _sem = ysSemCreate((dvoid *)0);
      {
        dvoid * _parvec[1];

        _parvec[0] = (dvoid *) names;
        yoSendReq( (dvoid *)or, ev, "intfDescByName", TRUE, _sem, (sword)1, 
          yr_dii_intfDescByName_pars, _parvec);
      }
    }
    yseCatchAll
    {
      CONST ysid* _exid;
      dvoid * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((dvoid *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (dvoid *)&_result);
    }
    yseFinally
      yoFilterRunEx((dvoid *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

yopar* yr_dii_intfDescById__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "yr_dii_intfDescById");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "yr_dii_intfDescById", (ub4)3);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_yr_intfDescList;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)YCTC_yr_intfIdList;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_yr_dii_NotFound;
    _pars[3].mode = YOMODE_INVALID;
    _pars[3].tk = (yotk*)yoTcNull;
    _pars[3].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

yr_intfDescList yr_dii_intfDescById( yr_dii or, yoenv* ev, yr_intfIdList* 
  ids)
{
  yr_intfDescList _result;
  ysevt* noreg _sem = (ysevt*)0;
  struct yr_dii__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  NOREG(_sem);
  _impl = (struct yr_dii__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)
    &_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)2, (dvoid *)_impl, yr_dii__id);
      _result = (*(yr_intfDescList (*)( yr_dii, yoenv*, yr_intfIdList*))_f)(
        or, ev, ids);
    }
    else
      _result = (*_impl->intfDescById)(or, ev, ids);
  }
  else
  {
    yoFilterRunEx((dvoid *)or, ev, YOFLTR_CSND, (CONST  char*)0, (dvoid *)0)
      ;
    yseTry
    {
      _sem = ysSemCreate((dvoid *)0);
      {
        dvoid * _parvec[1];

        _parvec[0] = (dvoid *) ids;
        yoSendReq( (dvoid *)or, ev, "intfDescById", TRUE, _sem, (sword)1, 
          yr_dii_intfDescById_pars, _parvec);
      }
    }
    yseCatchAll
    {
      CONST ysid* _exid;
      dvoid * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((dvoid *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (dvoid *)&_result);
    }
    yseFinally
      yoFilterRunEx((dvoid *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

yopar* yr_dii_intfDescByObj__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "yr_dii_intfDescByObj");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "yr_dii_intfDescByObj", (ub4)3);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_yr_intfDescList;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)YCTC_yostd_objList;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_yr_dii_NotFound;
    _pars[3].mode = YOMODE_INVALID;
    _pars[3].tk = (yotk*)yoTcNull;
    _pars[3].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

yr_intfDescList yr_dii_intfDescByObj( yr_dii or, yoenv* ev, yostd_objList* 
  intfObjs)
{
  yr_intfDescList _result;
  ysevt* noreg _sem = (ysevt*)0;
  struct yr_dii__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  NOREG(_sem);
  _impl = (struct yr_dii__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)
    &_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)3, (dvoid *)_impl, yr_dii__id);
      _result = (*(yr_intfDescList (*)( yr_dii, yoenv*, yostd_objList*))_f)(
        or, ev, intfObjs);
    }
    else
      _result = (*_impl->intfDescByObj)(or, ev, intfObjs);
  }
  else
  {
    yoFilterRunEx((dvoid *)or, ev, YOFLTR_CSND, (CONST  char*)0, (dvoid *)0)
      ;
    yseTry
    {
      _sem = ysSemCreate((dvoid *)0);
      {
        dvoid * _parvec[1];

        _parvec[0] = (dvoid *) intfObjs;
        yoSendReq( (dvoid *)or, ev, "intfDescByObj", TRUE, _sem, (sword)1, 
          yr_dii_intfDescByObj_pars, _parvec);
      }
    }
    yseCatchAll
    {
      CONST ysid* _exid;
      dvoid * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((dvoid *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (dvoid *)&_result);
    }
    yseFinally
      yoFilterRunEx((dvoid *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}



EXTC_END
