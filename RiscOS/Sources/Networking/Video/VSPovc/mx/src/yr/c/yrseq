/* mx/src/yr/yrseq.c */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/


 
#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif
 
#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif

#ifndef YRCORBAI_H
#include <yrcorbaI.h>
#endif
 
#ifndef YR_ORACLE
#include <yr.h>
#endif
 
#ifndef YOORB_ORACLE
#include <yoorb.h>
#endif
 
#ifndef YR0UTIL_ORACLE
#include <yr0util.h>
#endif

externdef ysidDecl(CORBA_SequenceDef_implid) = "ORA_SequenceDef";




 
CORBA_DefinitionKind CORBA_SequenceDef__get_def_kind_i(
     CORBA_SequenceDef or, yoenv* ev)
{
  return CORBA_IRObject__get_def_kind_i( (CORBA_IRObject) or, ev);
}
 

 
yotk* CORBA_SequenceDef__get_type_i(
     CORBA_SequenceDef or, yoenv* ev)
{
  return CORBA_IDLType__get_type_i( (CORBA_IDLType) or, ev);
}
 

 
ub4 CORBA_SequenceDef__get_bound_i( CORBA_SequenceDef or, yoenv* ev)
{
  return yrSeqData(yrCORBAtoYR( (CORBA_IRObject) or)).bound;
}
 

 
yotk* CORBA_SequenceDef__get_element_type_i( CORBA_SequenceDef or, yoenv* ev)
{
  yrobj* obj = yrCORBAtoYR( (CORBA_IRObject) or);
 
  return yrCopyTypeCode( yrSeqData(obj).elmtype);
}
 

 
CORBA_IDLType CORBA_SequenceDef__get_element_type_def_i(
     CORBA_SequenceDef or, yoenv* ev)
{
  yrobj* obj = yrCORBAtoYR( (CORBA_IRObject) or);
 
  return yoDuplicate( yrYRtoCORBA( yrSeqData(obj).elmtype));
}
 

 
 
externdef struct CORBA_SequenceDef__tyimpl CORBA_SequenceDef__impl =
 {
  CORBA_SequenceDef__get_bound_i,
  CORBA_SequenceDef__get_element_type_i,
  CORBA_SequenceDef__get_element_type_def_i,
  CORBA_SequenceDef__get_type_i,
  CORBA_SequenceDef__get_def_kind_i
 };




void Init_CORBA_SequenceDef()
{
  YR_SET_IMPL(CORBA_SequenceDef, FALSE, 0);
  YR_IMPL_READY(CORBA_SequenceDef, 0);
}

void Term_CORBA_SequenceDef()
{
  YR_IMPL_DEACTIVATE(CORBA_SequenceDef);
}
