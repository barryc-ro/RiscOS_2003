/* mx/src/yr/yrdump.c */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/


#ifndef SYSX_ORACLE
#include <sysi.h>
#endif
#ifndef YS_ORACLE
#include <ys.h>
#endif
#ifndef YR_ORACLE
#include <yr.h>
#endif
#ifndef YR0_ORACLE
#include <yr0.h>
#endif




void yrSetTraceLevel( yrobj* repository, sword lvl)
{
  yrRepData(repository->repository)->trace = lvl;
}




STATICF void yrDumpHdr( yrobj* obj, CONST char* kind)
{
  yslPrint("IFR: kind=%s, name=\"%s\", id=\"%s\"\n",
	   kind, yrGetAbsoluteName( obj), obj->repid);
  yslPrint("IFR:\tsrc=\"%s\", line=%d\n",
	   obj->srcnm ? obj->srcnm : "<unknown>", yrGetSrcLine(obj));
}




void yrDump( yrobj* obj)
{
  ysle* le;
  char* nm;

  switch ( yrGetKind(obj) )
  {
    case yrdkRepository:
    {
      yslPrint("IFR: kind=Repository, seqnum=%s, trace=%d, #items=%d, #anon=%d\n",
               yrRepData(obj)->seqnum, 
               yrRepData(obj)->trace,
               ysLstCount(obj->contents),
               ysLstCount(yrRepData(obj)->anon));
      break;
    }
    case yrdkAttribute:
    {
      yrDumpHdr(obj, "Attribute");
      yslPrint("IFR:\treadonly=%s\n", yrAttrData(obj).mode ? "TRUE" : "FALSE");
      nm = yrGetAbsoluteName( yrAttrData(obj).type);
      yslPrint("IFR:\ttype=\"%s\"\n", nm);
      ysmGlbFree((dvoid*) nm);
      break;
    }
    case yrdkConstant:
    {
      yrDumpHdr(obj, "Constant");
      nm = yrGetAbsoluteName( yrConstData(obj).type);
      yslPrint("IFR:\ttype: \"%s\"\n", nm);
      ysmGlbFree((dvoid*) nm);
      break;
    }
    case yrdkException:
    {
      yrDumpHdr(obj, "Exception");
      if ( yrStructData(obj).mbrs )
      {
        yslPrint("IFR:\tfields=%d\n", ysLstCount( yrStructData(obj).mbrs));
        for ( le = ysLstHead(yrStructData(obj).mbrs); le; le = ysLstNext(le))
        {
          yrstrmbr* m = (yrstrmbr*) ysLstVal(le);

          nm = yrGetAbsoluteName(m->type);
          yslPrint("IFR:\tField '%s' of type \"%s\"\n", m->name, nm);
          ysmGlbFree((dvoid*)nm);
        }
      }
      else
        yslPrint("IFR:\tfields=none\n");
      break;
    }
    case yrdkInterface:
    {
      yrDumpHdr(obj, "Interface");
      yslPrint("IFR:\tDefined=%s, #Ops=%d, #Attrs=%d\n", 
            yrInterfaceData(obj).defined ? "TRUE" : "FALSE", 
            yrInterfaceData(obj).ops ? ysLstCount(yrInterfaceData(obj).ops)
                                     : 0,
            yrInterfaceData(obj).attrs ? ysLstCount(yrInterfaceData(obj).attrs)
                                     : 0);
      if ( yrInterfaceData(obj).bases )
      {
        yslPrint("IFR:\tInheritance Spec: ");
        for (le = ysLstHead(yrInterfaceData(obj).bases); le; le=ysLstNext(le))
          yslPrint("%s ", yrGetAbsoluteName((yrobj*) ysLstVal(le)));
        yslPrint("\n");
      }
      for ( le = ysLstHead( obj->contents); le; le = ysLstNext(le))
        yrDump( (yrobj*) ysLstVal(le));
      break;
    }
    case yrdkModule:
    {
      yrDumpHdr(obj, "Module");
      yslPrint("IFR:\t#Decls=%d\n", ysLstCount(obj->contents));
      for ( le = ysLstHead( obj->contents); le; le = ysLstNext(le))
        yrDump( (yrobj*) ysLstVal(le));
      break;
    }
    case yrdkOperation:
    {
      yrDumpHdr(obj, "Operation");
      yslPrint("IFR:\toneway=%s\n", yrOpData(obj).mode ? "TRUE" : "FALSE");
      break;
    }
    case yrdkAlias:
    {
      yrDumpHdr(obj, "Alias");
      nm = yrGetAbsoluteName( yrAliasData(obj).type);
      yslPrint("\tBase type: %s\n", nm);
      ysmGlbFree((dvoid*)nm);
      break;
    }
    case yrdkStruct:
    {
      yrDumpHdr(obj, "Struct");
      yslPrint("IFR:\tfields=%d\n", ysLstCount( yrStructData(obj).mbrs));
      for ( le = ysLstHead(yrStructData(obj).mbrs); le; le = ysLstNext(le))
      {
        yrstrmbr* m = (yrstrmbr*) ysLstVal(le);

        nm = yrGetAbsoluteName(m->type);
        yslPrint("IFR:\tField '%s' of type \"%s\"\n", m->name, nm);
        ysmGlbFree((dvoid*)nm);
      }
      break;
    }
    case yrdkUnion:
    {
      yrDumpHdr(obj, "Union");
      yslPrint("IFR:\tfields=%d\n", ysLstCount( yrUnionData(obj).arms));
      break;
    }
    case yrdkEnum:
    {
      yrDumpHdr(obj, "Enum");
      break;
    }
    default:
      break;
  }
}

