/ Copyright (c) 1996 by Oracle Corporation.  All Rights Reserved.
/
/ OMNYEEVLD.msg - OMN YEEVLD messages
/
// Range of messages: 300-500

// ----------------------------------------------------------------
// yeevld.c:

300, "yeevldServer: Becoming ORBD Event Log/Forward server"
// *Cause:
// *Action:

301, "yeevldServer: claiming impl %s"
// *Cause:  The logger will act as this implementation.
// *Action: none

302, "yeevldServer:  %d default filters:"
// *Cause:  The logger is coming up with this many default filters.
// *Action: none.

303, "yeevldServer:  filter %d '%s'"
// *Cause:  this is the value of one filter in a list.
// *Action: none.

304, "Logger Startup"
// *Cause:  The logger is starting up.
// *Action: none.

305, "yeevldServer: Entering service loop"
// *Cause:  The logger is entering the object service loop.
// *Action: none.

306, "yeevldServer: Exited service loop"
// *Cause:  The logger has exited the object service loop.
// *Action: none.

307, "Logger Shutdown"
// *Cause:  The logger id down.
// *Action: none.

308, "yeevldServer: exiting"
// *Cause:  The logger process is exiting. 
// *Action: none.

309, "Log capacity alarm: %s"
// *Cause:  The log is approaching its size limit.
// *Action: 

310, "Log capacity limit hit: %s"
// *Cause:  The log has hit it's size limit.
// *Action: none.

320, "unexpected log type %d in %s"
// *Cause:  internal error.
// *Action: contact Oracle.

321, "yeevldStartLog: set dest to lg %s"
// *Cause:  the initial log dest is being set.
// *Action: none.

322, "yeevldLogCreate: log object %s for %s, with receiver %s"
// *Cause:  created a log object.
// *Action: none.

323, "yeevldGetRec: unexpected EOF reading file %s"
// *Cause:  problem reading the file.
// *Action: contact Oracle.

324, "yeevldLimitCheck: failed to open new %s: %s" */
// *Cause:  error opening the rollover log file
// *Action: as implied by the error.

325, "yeevldLimitCheck: rolled over log file %s"
// *Cause:  the file has been rolled over
// *Action: look for old log data in different files.

330, "%s: Error on sysfpOpen of %s, mode %s, kind %s, reason %s"
// *Cause:  osd operation error, reason given.
// *Action: none.

331, "%s: Error on sysfpFlush to %s"
// *Cause: some osd error
// *Action: check contents of the specified file

340, "yeevl_logProc_createReceiver"
// *Cause:  creating a log receiver.
// *Action: none.

341, "yeevl_logProc_createDiscList"
// *Cause:  creating a log discr list.
// *Action: none.

342, "yeevl_logProc_raise"
// *Cause:  raising a log event.
// *Action: none

343, "yeevl_logProc_raiseMany"
// *Cause:  raising multiple log events.
// *Action: none

344, "yeevl_logProc_forward"
// *Cause:  forwarding a log event
// *Action: none.

345, "yeevl_logProc_connectSender (%d senders)"
// *Cause:  Connecting a log sender, with this many already connected.
// *Action: none.

346, "yeevl_logProc_connectSender: dup evsender %s, (ev %s)"
// *Cause:  the sender is already connected.
// *Action: none.

347, "yeevl_logProc_connectSender: connecting %s"
// *Cause:  the sender is being connected.
// *Action: none.

348, "yeevl_logProc_connectSender: made and enqed-node"
// *Cause:  the sender has been entered correctly.
// *Action: none.

349, "yeevl_logProc_connectSender: is self!"
// *Cause:  the sender being connected is the logger.
// *Action: none.

350, "yeevl_logProc_connectSender: not self, get def quals"
// *Cause:  getting the default qualifications for the new sender.
// *Action: none.

351, "yeevl_logProc_connectSender: sender %s, receiver %s, proc %s"
// *Cause:  the sender is completely connected.
// *Action: none.

352, "yeevl_logProc_createLog"
// *Cause:  a log is being created.
// *Action: none.

353, "yeevl_logProc_openLog"
// *Cause:  a log is being opened (for reading)
// *Action: none.

354, "yeevl_logProc_shutdown"
// *Cause:  method request to shutdown the logger received.
// *Action: none.

355, "yeevl_logProc__get_info"
// *Cause:  get_info request received.
// *Action: none.

356, "yeevl_logProc__get_receivers"
// *Cause:  method request received.
// *Action:

357, "yeevl_logProc__get_filters"
// *Cause:  method request received.
// *Action: none.

358, "yeevl_logProc__set_filters"
// *Cause:  method request received.
// *Action: none.

359, "yeevl_logProc__get_limit_drop, is %s"
// *Cause:  
// *Action:

360, "yeevl_logProc__set_limit_drop, new %s"
// *Cause:  
// *Action:

361, "yeevl_logProc__get_globalEventHighWater, is %d"),
// *Cause:  
// *Action:

362, "yeevl_logProc__set_globalEventHighWater, new %d"),
// *Cause:  
// *Action:

363, "yeevl_logProc__get_globalEventRestart, is %d"
// *Cause:  
// *Action:

364, "yeevl_logProc__set_globalEventRestart, new %d"
// *Cause:  
// *Action:

365, "yeevl_logProc__get_defQuals"
// *Cause:  method request received.
// *Action:

366, "yeevl_logProc__set_defQuals"
// *Cause:  
// *Action:

367, "yeevl_logProc__get_senders"
// *Cause:  
// *Action:

368, "yeevl_logProc__get_logs"
// *Cause:  
// *Action:

369, "yeevl_logProc__get_mzlfiles"
// *Cause:  
// *Action:

370, "yeevl_logProc__set_mzlfiles"
// *Cause:  
// *Action:

371, "yeevl_sender_destroy_i: sender %s, receiver %s proc %s:%s%s%s"
// *Cause:  
// *Action:

372, "yeevl_sender__get_info"
// *Cause:  
// *Action:

373, "yeevl_log_destroy_i"
// *Cause:  
// *Action:

374, "yeevl_log_push"
// *Cause:  
// *Action:

375, "yeevl_log_pushMany"
// *Cause:  
// *Action:

376, "yeevl_log_pull"
// *Cause:  
// *Action:

377, "yeevl_log_deleteRecord"
// *Cause:  
// *Action:

378, "yeevl_log_getRecord"
// *Cause:  
// *Action:

379, "yeevl_log_getRecordRange"
// *Cause:  
// *Action:

380, "yeevl_log_getRecordTime"
// *Cause:  
// *Action:

381, "yeevl_log__get_name"
// *Cause:  
// *Action:

382, "yeevl_log__get_fixedattr"
// *Cause:  
// *Action:

383, "yeevl_log__get_varattr"
// *Cause:  
// *Action:

384, "yeevl_log__set_varattr"
// *Cause:  
// *Action:

385, "yeevl_listIterator_getNextOne"
// *Cause:  
// *Action:

386, "yeevl_listIterator_getNextN"
// *Cause:  
// *Action:

387, "yeevl_listIterator_destroy"
// *Cause:  
// *Action:

// *Cause:  
// *Action:

