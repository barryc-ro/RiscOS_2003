/* yo/yoi.h */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/








#ifndef YOI_ORACLE
#define YOI_ORACLE

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef YS_ORACLE
#include <ys.h>
#endif
#ifndef YSTHR_ORACLE
#include <ysthr.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif
#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif
#ifndef YOT_ORACLE
#include <yot.h>
#endif
#ifndef YOGIOP_ORACLE
#include <yogiop.h>
#endif
#ifndef YOIDL_ORACLE
#include <yoidl.h>
#endif
#ifndef YORC5_ORACLE
#include <yorc5.h>
#endif
#ifndef YOSX_ORACLE
#include <yosx.h>
#endif
#ifndef YOTRANS_ORACLE
#include <yotrans.h>
#endif


#define YO_YDRETRY      1000000             
#define YO_RRPORT       (ub2)666                       
#define YO_HBPORT       (ub2)667                          
#define YO_REQ_HB       15             
#define YO_REQ_TO       30               

#define YO_RCVPGSZ      4096                            
#define YO_BYTESEX      (SYSX_BYTE_ORDER == SYSX_LSB)             

#define YOSTID_INV      (ub4)0x000                       
#define YOSTID_YORT     (ub4)0x001                
#define YOSTID_BASE     (ub4)0x100             

#define YOBR_IIOP_ADDR  "0xffffffff.3"          


#define YOMSGT_INVALID  (ub1)0xff
#define YOMSGT_REQ      (ub1)0x00
#define YOMSGT_REP      (ub1)0x01
#define YOMSGT_PNG      (ub1)0x04

#define YO_FACILITY     "YO"
#define YOGEN_BASE      ((ub4) 7000)
#define YOGEN_ERR(n)    YS_PRODUCT, YO_FACILITY, (YOGEN_BASE + (ub4) (n))
#define YOCLI_BASE      ((ub4) 7300)
#define YOCLI_ERR(n)    YS_PRODUCT, YO_FACILITY, (YOCLI_BASE + (ub4) (n))
#define YOSRV_BASE      ((ub4) 7600)
#define YOSRV_ERR(n)    YS_PRODUCT, YO_FACILITY, (YOSRV_BASE + (ub4) (n))
#define YOBR_BASE       ((ub4)7800)
#define YOBR_ERR(n)     YS_PRODUCT, YO_FACILITY, (YOBR_BASE + (ub4) (n))
#define YORT_BASE       ((ub4) 7900)
#define YORT_ERR(n)     YS_PRODUCT, YO_FACILITY, (YORT_BASE + (ub4) (n))

typedef struct yoo yoo;                                  


typedef struct yoctx yoctx;
struct yoctx
{
  CONST char    *hostname;                                 
  CONST char    *pid;                                           

  ub4      flags;                                               
#define YOCTXFL_SNDYORT         0x00000001      
#define YOCTXFL_SNDYORT_WT      0x00000002           
#define YOCTXFL_SNTYORT         0x00000004     
  ysque   *evtq;                                              
  ysbv     rcvbuf;
  ysmhp   *rcvhp;                                            
  ysbv     sndbuf;
  ysmhp   *sndhp;                                               

  yslst   *fltrs;                                             

  yshsh   *strs;                                    
  yshsh   *refs;                                              
  yshsh   *partab;                                        

  ysque   *reqq;                                            
  yshsh   *intfs;                                         
  ub4      stateid;                                 
  ysthrkey *srvmeml;      
  yslst   *deltaq;         
  ysevt   *dqesem;                            
  yslst   *iirefl;                                
  ysthrkey *dspreq;         
  yslst    *actreqs;       
  yslst   *replst;                                        
  sysb8    reqhb;                         
  yslst   *yoques;                         
  yslst   *svclps;                                  
  ub4      ltridseq;
  ysthrkey *cur;                                          
  yotp     *rrport;                                  
  yota     *rrpaddr;                        
  ysevt    *rrevt;                          
  yotp     *hbport;                                        
  ysevt    *hbevt;                              
  ysmtx    ydmtx;                                          
  yscv     ydcv;               
  yoo     *ydimref;                    
  yota     *ydaddr;                    
  yshsh   *preqs;                                        
  ub4      reqid;                                         
  yslst   *reqsndq;                                    
  sysb8    reqto;                                   

  ysstr   *rtpnm;                
  ysque   *rtq;                                  
  ysHndlr  rthdlr;                             
  dvoid   *rtusrp;                                

  yota    *iiopbr;                     
  char    *iiopexta;                         
  ub2      iiopextp;                            

  yoo     *yort;                                           
  ysque   *yortq;                                      
  ub4      yortidle;                                      
  yort_procState ypadst;                            

  ub4      yoidle;                                           
  ub4      yoinit;                                 
  ysque   *scq;                                       

  dvoid   *cycx;                  
};


#define yoCtx ((yoctx *)yscGet(YSC_YOCTX))

typedef struct yoimp yoimp;


struct yoo
{
  ub4 flags;                                                              
#define YOOFL_MTHREAD   (ub4)0x00000001             
#define YOOFL_COLOCATE  (ub4)0x00000002                 
#define YOOFL_IOR       (ub4)0x00000004                               
#define YOOFL_INVALID   (ub4)0x00010000      
#define YOOFL_DEBUG     (ub4)0x80000000                
  CONST ysid *intf;                                  
  CONST char *impl;                             
  yoRefData id;                                            
  dvoid *birthdate;                                       
  yota *addr;                                   
  ub4 key;                             
  dvoid *state;                              
  ub4 ucnt;                                                   
  boolean single;                                              
  ub4 grpid;                                     
  yoimp *imp;                
  ysque *refq;                            
  yogiIOR ior;                                         
};

typedef struct yoifl yoifl;
struct yoifl
{
  CONST ysid *intf;                                          
  yslst *impll;                                   
};

struct yoimp
{
  CONST ysid *intf;
  CONST char *impl;
  ub4         flags;
#define  YOIMPF_STLESS (ub4)0x0001      
  ub4         state;                                 
#define  YOIMP_DN     (ub4)0x0000                      
#define  YOIMP_RDY_WT (ub4)0x0001                
#define  YOIMP_RDY    (ub4)0x0002                     
#define  YOIMP_SSP_WT (ub4)0x0003              
#define  YOIMP_SSP    (ub4)0x0004                
#define  YOIMP_DN_WT  (ub4)0x0005                
  ub4         nstate;                                     
  ub4         pstate;                                         
  ysle       *deltaqe;                       

  yostub     *stubs;
  dvoid      *impldef;
  yodir       dir;                         
  yoload      loader;
  dvoid      *usrst;                            
  ysque      *q;                                     

  yort_methodInfoList minfo;                         
  yort_implInfo  iinfo;                        
  yoimpadm    admcb;                             
  dvoid      *admcbup;                       
};


typedef struct yomd yomd;
struct yomd
{
  dvoid  *usrp;                                          
  yota    *addr;                                           
  yosx    *x;                                             
  sb4     len;                                       
  ysbv   *bv;                                                 
  sword   nbv;                                    
};


typedef struct yomopt yomopt;
struct yomopt
{
  ub2 type;                                                   
  ub2 size;                                                   
  ub1 val[1];                                                
};

typedef struct yosvcxs yosvcxs;
struct yosvcxs
{
  yoenv	*uev;                       
  yoenv  ev;                           
  yoTrans_pctx *upctx;      
  yoTrans_pctx pctx;                             
  yslst *scl;                              
};


typedef struct yoreqh yoreqh;                              
struct yoreqh
{
  yosvcxs     scxs;                                      
  ub4         id;                                              
  yoo        *ref;                          
  char       *op;                                               
  boolean     resp;                                            
  CONST ysid *exid;                                          
  dvoid      *exobj;                                     
};


typedef struct yoreph yoreph;
struct yoreph
{
  yosvcxs scxs;                                          
  ub4     id;                                            
  ub1     sts;                                               
};


typedef struct yocreq yocreq;
struct yocreq
{
  ub4      type;                                      
  ub4      reftag;                              
  yosxPos  lp;                                            
  yoreqh   hdr;                                       
  ysevt   *uevt;                             
  CONST yopar *pars;                                 
  yosvcxs   scxs;                                    
  yslst   *outs;                            
  ysevt   *sevt;                                               
  ysevt   *ttl;                                              
  
  yosx    *x;                                               
  ysbv    *bv;
  sword    nbv;
};


struct yosreq                                         
{
  ub4      type;                                             
  ub4      reftag;                              
  yoreqh   hdr;                                            
  yomd    *md;                                         
  ysevt   *hb;                                            
  sysb8    start;                                              
  sysb8    finish;                                            
  yoimp   *imp;                                              
  CONST yopar *parms;                               
  dvoid  **args;                                        
  yslst   *orlst;                            
  ysstr   *ltrid;                             
};

typedef struct yosrep yosrep;
struct yosrep
{
  yota   *addr;                                             
  yosx   *x;                                     
  yosxPos lp;                           
  yoimp  *imp;                             
  char   *op;                       
  yoreph  hdr;                                               
  yomd   *md;                                       
};

struct yodsrep
{
  yoreph  hdr;
  yomd   *md;
};

typedef struct yoerr yoerr;
struct yoerr
{
  ub4 type;
  ub4 reqid;
};

struct yoevm
{
  CONST char* name;
  yoany value;
};

typedef struct yofltr yofltr;
struct yofltr
{
  CONST char *name;
  sword type;
  yofilter filter;
  dvoid *usrp;
};

typedef struct yoqi yoqi;            
struct yoqi
{
  dvoid *or;                              
  char  *name;                                                 
  yslst *qdl;                          
  ysle  *yoqle;                           
};

typedef struct yosvcl yosvcl;
struct yosvcl
{
  dvoid *or;                                          
  ysque *q;                                          
  ysevt *sem;                                           
  ub4    count;                                 
  yort_svcState admst;                               
  ysle  *svcle;                                 
  ysle  *qdle;                                
};




struct yocur
{
  yoreqh       reqh;		
};


externref CONST_DATA yotk yoevm__tc[];
externref CONST_DATA yotk yoenv__tc[];




externref ysmtagDecl(yoTagObjRef);
externref ysmtagDecl(yoTagMsgDesc);
externref ysmtagDecl(yoTagYoAlloc);
externref ysmtagDecl(yoTagQueInfo);


boolean yoExistsLocal(yoctx *ctx, yoo *ref);
#define yoGetRef(ctx,key) \
  ((yoo *)(ysHshFind(ctx->refs,(dvoid *)&key,sizeof(key))))
void yoSndReq(yoctx *ctx, yoo *ref, yoenv *ev, CONST char *op,
              boolean response, ysevt *uevt, sword args, CONST yopar *pars,
              dvoid **values, ysbv *bv, sword nbv);
yoo *yoRefCreate(yoctx *ctx, CONST ysid *intf,CONST char *impl,
                 yoRefData *id, ub4 key, yota *addr, dvoid *state,
                 boolean yocreate);
yoo *yoRefCreateIOR(yoctx *ctx, yogiIOR *ior);
void yoSndLocReq(yoctx *ctx, yoo *ref, ysevt *evt);
sword yoRefEq(dvoid *elm, dvoid *key, size_t keysz);
sword yoIntfEq(dvoid *elm, dvoid *key, size_t keysz);
void yoDumpLog(ub4 level);


void yoReqRcv(yoctx *ctx, yomd *md, ub4 reftag);
void yoLocReqRcv(yoctx *ctx, yomd *md, ub4 reftag);
void yoLocReqReply(yoctx *ctx, yosreq *req, ub4 sts, yoo *ref);
yoimp *yoFindImp(yoctx *ctx, CONST ysid *intf, CONST char *impl,
                 boolean ready);
yoo *yoCreateOID(CONST ysid *intf, CONST char *impl, yoRefData *id,
                 dvoid *state, ub4 oid);
boolean yoRunDeltaQ(yoctx *ctx);
void yoSendBounceReqs(yoctx *ctx);
boolean yoIsALocal(yoimp *imp, CONST char *intf);
void yoErrSnd(yoctx *ctx, yosreq *req, CONST ysid *exid, yoreqsts sts);
void yoFreeSReq(ysmhp *hp, yosreq *req);
yosrep *yoSRepCreate(yoctx *ctx, yosreq *req, ub4 sts);
void yoSRepSend(yoctx *ctx, yosrep *rep, ysbv *bv, sword nbv);
void yoSRepDestroy(yoctx *ctx, yosrep *rep);



#define yoStr(s) ((s)?(s):"<null>")
void yoDeadORBD(yoctx *ctx);
void yoFindORBD(yoctx *ctx);
void yoAllocMsgBufs(ysmhp *hp, sb4 len, ysbv **bv, sword *nbv);
char *yoGetStr(yoctx *ctx, CONST char *str);
void yoFreeStr(yoctx *ctx, char *str);
void yoFreeRepLst(dvoid *ptr);
void yoFreeRef(dvoid *ref);
void yoFreeImpLst(dvoid *ifl);
void yoFreeImp(dvoid *imp);
void yoFreeSrvrAlloc(yoctx *ctx);
void yoFreeMsgDesc(ysmhp *hp, yomd *md);
sb4 yoGetUpTimeCs(void);
boolean yoExMNSys(CONST ysid *exid, ub4 minor, CONST ysid **newid);


void yoydRouteMsg(yosreq *req);


void yoxPutPing(yosx *x, ub4 reqid);
ub4 yoxGetPing(yosx *x);
yslst *yoxPutReqParms(yosx *x, ub4 reftag, sword args, CONST yopar *pars,
                      dvoid **values);
dvoid **yoxGetReqParms(yosx *x, CONST yopar *pars, yslst *orlst);
void yoxFreeReqParms(CONST yopar *pars, dvoid **args);
void yoxPutRepParms(yosx *x, ub4 reftag, CONST yopar *pars, dvoid **args);
void yoxGetRepParms(yosx *x, CONST yopar *pars, yslst *outs, dvoid **arg,
                    size_t *argsz);
void yoxPutSysEx(yosx *x, CONST ysid *exid, yoreqsts exsts, ub4 minor);
void yoxPutUserEx(yosx *x, ub4 reftag, CONST ysid *exid, CONST yotk *extk,
                  dvoid *arg);
CONST ysid *yoxGetSysEx(yosx *x, dvoid **arg, size_t *argsz);
CONST ysid *yoxGetUserEx(yosx *x, CONST yopar *pars, dvoid **arg, 
                         size_t *argsz);


void yogiPutMsgHeader(yosx *x, ub1 type, yosxPos *lenpos);
void yogiFixupMsgHeader(yosx *x, yosxPos *lenpos);
ub1 yogiGetMsgHeader(yosx *x, ub4 *len);
void yogiGetMsgHdr(yosx *x, yogiMsgHdr *gmh);
void yogiPutReqHeader(yosx *x, ub4 reftag, yoreqh *hdr);
void yogiGetReqHeader(yosx *x, yoreqh *hdr);
void yogiFreeReqHeader(yoreqh *hdr);
void yogiPutRepHeader(yosx *x, ub4 reftag, yoreph *hdr);
void yogiGetRepHeader(yosx *x, yoreph *hdr);
void yogiGetRepHdr(yosx *x, yogiRepHdr *greph);
void yogiFreeRepHdr(yogiRepHdr *greph);
void yogiPutLocReqHeader(yosx *x, ub4 reftag, yoreqh *hdr);
void yogiGetLocReqHeader(yosx *x, yoreqh *hdr);
void yogiPutLocRepHeader(yosx *x, yoreph *hdr);
void yogiGetLocRepHeader(yosx *x, yoreph *hdr);
void yogiPutLocRep(yosx *x, yogiLocRep *lr, yogiIOR *ior);
void yogiPutOR(yosx *x, dvoid *ref, ub4 reftag);
dvoid *yogiGetOR(yosx *x);
void yogiPutIOR(yosx *x, yogiIOR *ior);
void yogiGetIOR(yoctx *ctx, yosx *x, yogiIOR *ior, yoo **r);
void yogiFreeIOR(yogiIOR *ior);
yoo *yogiGetObjKey(yoctx *ctx, yosx *x, yota *addr, boolean local);
void yogiPutSvcCtxLst(yosx *x, yslst *scl);
yslst *yogiGetSvcCtxLst(yosx *x);
void yogiFreeSvcCtx(yogiSvcCtx *sc);
#ifdef LINT
void yogiFreeSvcCtxLst(yslst *scl);
#else
#define yogiFreeSvcCtxLst(scl) \
  do if(scl) ysLstDestroy(scl,(ysmff)yogiFreeSvcCtx); while(0)
#endif
void yogiPutOctSeq(yosx *x, yogiOctSeq *os);
yogiOctSeq *yogiGetOctSeq(yosx *x);
ub4 yogiHashIOR(yogiIOR *ior);
sword yogiCmpIOR(yogiIOR *i1, yogiIOR *i2);


externref ysidDecl(yortImpl__simpl);
externref ysidDecl(yortDispatcher__simpl);
void yortInit(yoctx *ctx);
void yortTerm(yoctx *ctx);
void yortIdle(dvoid *usrp, CONST ysid *exid, dvoid *arg, size_t argsz);
void yortGetProcInfo(yoctx *ctx, yort_procInfo *ypi);


void yoevtInit(yoctx *ctx);
void yoevtTerm(yoctx *ctx);


void yoCheckRefcnt(CONST dvoid *ref, boolean on);
void yoCheckRefcnt_here(CONST dvoid *ref, ub4 ucnt);

void yotkEncode(CONST yotk *tk, dvoid *val, yosx *x, ub4 reftag);
void yotkEncodeRR(CONST yotk *tk, dvoid *val, yosx *x,ub4 reftag,
                  boolean relrefs);
void yotkDecode(CONST yotk *tk, dvoid *val, yosx *x, ysmaf af);
void yotkDecodeRL(CONST yotk *tk, dvoid *val, yosx *x, ysmaf af, yslst *orlst);
#endif

