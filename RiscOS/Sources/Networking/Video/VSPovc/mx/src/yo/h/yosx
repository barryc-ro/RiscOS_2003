/* yo/yosx.h */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/








#ifndef YOSX_ORACLE
#define YOSX_ORACLE

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef SYSXCD_ORACLE
#include <sysxcd.h>
#endif
#ifndef YS_ORACLE
#include <ys.h>
#endif

EXTC_START



typedef struct yosx yosx;                        

typedef boolean (*yosxcb)(ysbv *bv, dvoid *usrp);

typedef ub2 (*yosxGet2)( yosx *x );
typedef ub4 (*yosxGet4)( yosx *x );
typedef void (*yosxGet8)( yosx *x, sysb8 *val );

struct yosx
{
  boolean enc;                                         
  ysbv   *bv;                                               
  sword   nbv;                                
  ub1    *ptr;                         
  size_t  cnt;               
  sword   idx;                               
  ysmhp  *hp;                                      
  yosxcb   cb;                       
  dvoid  *usrp;                                 

  dvoid	    *item;                              
  boolean   noswap;                                        
  yosxGet8   get8;                                   
};

typedef struct yosxPos yosxPos;

struct yosxPos
{
  sword	    idx;                                         
  size_t    off;                                         
};



externref ysidDecl(YO_EX_ENDOFDATA);                
externref ysidDecl(YO_EX_ENCODEERROR);  



yosx *yosxDecode( boolean lsborder, ysbv *bv, sword nbv);
void yosxDecInit( yosx *x, boolean lsborder, ysbv* bv, sword nbv);
boolean yosxDecGet(yosx *x);
void yosxDecSet(yosx *x, boolean lsborder);
void yosxDecEnd(yosx *x);



void yosxGetPos(yosx *x, yosxPos *pos);


void yosxSetPos(yosx *x, yosxPos *pos);


ub4 yosxGetLength(yosx *x, yosxPos *pos1, yosxPos *pos2);




dvoid *yosxGetAlign( yosx *x, sword amt );

#define yosxGetUB1(x) ( *(ub1*)yosxGetAlign((x),1) ) 

#define yosxGetUB2(x) ( (x)->item = yosxGetAlign((x), 2), \
	     (x)->noswap ? *(ub2*)(x)->item : sysxGetSwap2( (ub1*)(x)->item ))
			
#define yosxGetUB4(x) ( (x)->item = yosxGetAlign((x), 4), \
	     (x)->noswap ? *(ub4*)(x)->item : sysxGetSwap4( (ub1*)(x)->item ))
			
#define yosxGetSB8(x, val) (*(x)->get8)((x), val)



#define yosxGetNetUB1(x) ( *(ub1*)yosxGetAlign(x,1) ) 
#define yosxGetNetUB2(x) \
       ( (x)->item = yosxGetAlign((x), 2), sysxGetUaB2((ub1*)(x)->item) )
#define yosxGetNetUB4(x) \
       ( (x)->item = yosxGetAlign((x), 4), sysxGetUaB4((ub1*)(x)->item) )



void yosxSkip(yosx *x, size_t len);


yosx *yosxEncode(size_t len, ysmhp *hp);
void yosxEncEnd(yosx *x, ysbv **bv, sword *nbv);



dvoid *yosxPutAlign( yosx *x, sword amt );

#define yosxPutUB1(x, val) do { *(ub1*)yosxPutAlign(x, 1) = val; } while(0)
#define yosxPutUB2(x, val) do { *(ub2*)yosxPutAlign(x, 2) = val; } while(0)
#define yosxPutUB4(x, val) do { *(ub4*)yosxPutAlign(x, 4) = val; } while(0)

void yosxPutSB8(yosx *x, sysb8 *val);


void yosxPutUB4AtPos(yosx *x, yosxPos *pos, ub4 val);


#define yosxPutNetUB1(x, val) yosxPutUB1(x, val)
void yosxPutNetUB2(yosx *x, ub2 val);
void yosxPutNetUB4(yosx *x, ub4 val);
void yosxPutNetUB4AtPos(yosx *x, yosxPos *pos, ub4 val);


void yosxCopy(yosx *x, ub1 *buf, size_t len);


void yosxAlign(yosx *x, sword boundary);


yosx *yosxDecodeFromStream(yosxcb getbufcb, boolean lsborder,
			   ysbv *bv, dvoid *usrp);


yosx *yosxEncodeToStream(yosxcb putbufcb, ysbv *bv, dvoid *usrp);

EXTC_END
#endif 
