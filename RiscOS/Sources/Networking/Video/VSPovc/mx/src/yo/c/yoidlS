/* yo/yoidlS.c */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif
#include <yoidlC.c>

EXTC_START


STATICF void yort_proc_getImplAll_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args);

STATICF void yort_proc_getImplAll_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->getImplAll)( (yort_proc)or, ev,*(
    yort_implFlags*)args[0],(yort_procInfo*)args[1],(yort_dispInfoList*)
    args[2],(yort_implAllList*)args[3]);
}

STATICF void yort_proc_getResource_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_proc_getResource_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->getResource)( (yort_proc)or, ev,*(
    char**)args[0],(yostd_stringList*)args[1]);
}

STATICF void yort_proc_setResource_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_proc_setResource_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->setResource)( (yort_proc)or, ev,*(
    char**)args[0],(yostd_stringList*)args[1]);
}

STATICF void yort_proc_setAdminState_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_proc_setAdminState_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->setAdminState)( (yort_proc)or, ev,
    *(yort_procState*)args[0]);
}

STATICF void yort_proc_exists_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args);

STATICF void yort_proc_exists_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args)
{
  *(boolean*)args[0] = (*((struct yort_proc__tyimpl*)impldef)->exists)( (
    yort_proc)or, ev,*(CORBA_Object*)args[1]);
}

STATICF void yort_proc_getIiopExtAddr_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_proc_getIiopExtAddr_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->getIiopExtAddr)( (yort_proc)or, 
    ev,(char**)args[0],(ub2*)args[1]);
}

STATICF void yort_proc__get_resources_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_proc__get_resources_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  *(yort_resourceList*)args[0] = (*((struct yort_proc__tyimpl*)impldef)
    ->_get_resources)( (yort_proc)or, ev);
}

STATICF void yort_proc__get_impls_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args);

STATICF void yort_proc__get_impls_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args)
{
  *(yort_implList*)args[0] = (*((struct yort_proc__tyimpl*)impldef)
    ->_get_impls)( (yort_proc)or, ev);
}

STATICF void yort_proc__get_queues_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_proc__get_queues_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  *(yort_queueList*)args[0] = (*((struct yort_proc__tyimpl*)impldef)
    ->_get_queues)( (yort_proc)or, ev);
}

STATICF void yort_proc__get_dispatchers_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_proc__get_dispatchers_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  *(yort_dispatcherList*)args[0] = (*((struct yort_proc__tyimpl*)impldef)
    ->_get_dispatchers)( (yort_proc)or, ev);
}

STATICF void yort_proc__get_pInfo_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args);

STATICF void yort_proc__get_pInfo_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args)
{
  *(yort_procInfo*)args[0] = (*((struct yort_proc__tyimpl*)impldef)
    ->_get_pInfo)( (yort_proc)or, ev);
}

yostub* yort_proc__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*11), 
    "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "getImplAll";
  _stubs[0].parms = yort_proc_getImplAll_pars;
  _stubs[0].oper = yort_proc_getImplAll_s;
  _stubs[1].opernm = "getResource";
  _stubs[1].parms = yort_proc_getResource_pars;
  _stubs[1].oper = yort_proc_getResource_s;
  _stubs[2].opernm = "setResource";
  _stubs[2].parms = yort_proc_setResource_pars;
  _stubs[2].oper = yort_proc_setResource_s;
  _stubs[3].opernm = "setAdminState";
  _stubs[3].parms = yort_proc_setAdminState_pars;
  _stubs[3].oper = yort_proc_setAdminState_s;
  _stubs[4].opernm = "exists";
  _stubs[4].parms = yort_proc_exists_pars;
  _stubs[4].oper = yort_proc_exists_s;
  _stubs[5].opernm = "getIiopExtAddr";
  _stubs[5].parms = yort_proc_getIiopExtAddr_pars;
  _stubs[5].oper = yort_proc_getIiopExtAddr_s;
  _stubs[6].opernm = "_get_resources";
  _stubs[6].parms = yort_proc__get_resources_pars;
  _stubs[6].oper = yort_proc__get_resources_s;
  _stubs[7].opernm = "_get_impls";
  _stubs[7].parms = yort_proc__get_impls_pars;
  _stubs[7].oper = yort_proc__get_impls_s;
  _stubs[8].opernm = "_get_queues";
  _stubs[8].parms = yort_proc__get_queues_pars;
  _stubs[8].oper = yort_proc__get_queues_s;
  _stubs[9].opernm = "_get_dispatchers";
  _stubs[9].parms = yort_proc__get_dispatchers_pars;
  _stubs[9].oper = yort_proc__get_dispatchers_s;
  _stubs[10].opernm = "_get_pInfo";
  _stubs[10].parms = yort_proc__get_pInfo_pars;
  _stubs[10].oper = yort_proc__get_pInfo_s;
  _stubs[11].opernm = (CONST char*)0;
  _stubs[11].parms = (yopar*)0;
  _stubs[11].oper = (void (*)(dvoid *,yoenv*,dvoid *,dvoid **))0;

  return _result;
}


STATICF void yort_impl_getAll_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args);

STATICF void yort_impl_getAll_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args)
{
  (*((struct yort_impl__tyimpl*)impldef)->getAll)( (yort_impl)or, ev,(
    yort_implInfo*)args[0],(yort_methodInfoList*)args[1],(yort_queueInfo*)
    args[2]);
}

STATICF void yort_impl_setAdminState_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_impl_setAdminState_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  (*((struct yort_impl__tyimpl*)impldef)->setAdminState)( (yort_impl)or, ev,
    *(yort_svcState*)args[0]);
}

STATICF void yort_impl__get_info_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args);

STATICF void yort_impl__get_info_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args)
{
  *(yort_implInfo*)args[0] = (*((struct yort_impl__tyimpl*)impldef)
    ->_get_info)( (yort_impl)or, ev);
}

STATICF void yort_impl__get_methods_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_impl__get_methods_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  *(yort_methodInfoList*)args[0] = (*((struct yort_impl__tyimpl*)impldef)
    ->_get_methods)( (yort_impl)or, ev);
}

STATICF void yort_impl__get_qinfo_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args);

STATICF void yort_impl__get_qinfo_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args)
{
  *(yort_queueInfo*)args[0] = (*((struct yort_impl__tyimpl*)impldef)
    ->_get_qinfo)( (yort_impl)or, ev);
}

yostub* yort_impl__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*5), 
    "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "getAll";
  _stubs[0].parms = yort_impl_getAll_pars;
  _stubs[0].oper = yort_impl_getAll_s;
  _stubs[1].opernm = "setAdminState";
  _stubs[1].parms = yort_impl_setAdminState_pars;
  _stubs[1].oper = yort_impl_setAdminState_s;
  _stubs[2].opernm = "_get_info";
  _stubs[2].parms = yort_impl__get_info_pars;
  _stubs[2].oper = yort_impl__get_info_s;
  _stubs[3].opernm = "_get_methods";
  _stubs[3].parms = yort_impl__get_methods_pars;
  _stubs[3].oper = yort_impl__get_methods_s;
  _stubs[4].opernm = "_get_qinfo";
  _stubs[4].parms = yort_impl__get_qinfo_pars;
  _stubs[4].oper = yort_impl__get_qinfo_s;
  _stubs[5].opernm = (CONST char*)0;
  _stubs[5].parms = (yopar*)0;
  _stubs[5].oper = (void (*)(dvoid *,yoenv*,dvoid *,dvoid **))0;

  return _result;
}


STATICF void yort_queue_setName_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args);

STATICF void yort_queue_setName_s( dvoid * or, yoenv* ev, dvoid * impldef, 
  dvoid ** args)
{
  (*((struct yort_queue__tyimpl*)impldef)->setName)( (yort_queue)or, ev,*(
    char**)args[0]);
}

STATICF void yort_queue_shutdownDispatchers_s( dvoid * or, yoenv* ev, dvoid 
  * impldef, dvoid ** args);

STATICF void yort_queue_shutdownDispatchers_s( dvoid * or, yoenv* ev, dvoid 
  * impldef, dvoid ** args )
{
  (*((struct yort_queue__tyimpl*)impldef)->shutdownDispatchers)( (
    yort_queue)or, ev);
}

STATICF void yort_queue__get_info_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args);

STATICF void yort_queue__get_info_s( dvoid * or, yoenv* ev, dvoid * impldef,
   dvoid ** args)
{
  *(yort_queueInfo*)args[0] = (*((struct yort_queue__tyimpl*)impldef)
    ->_get_info)( (yort_queue)or, ev);
}

yostub* yort_queue__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*3), 
    "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "setName";
  _stubs[0].parms = yort_queue_setName_pars;
  _stubs[0].oper = yort_queue_setName_s;
  _stubs[1].opernm = "shutdownDispatchers";
  _stubs[1].parms = yort_queue_shutdownDispatchers_pars;
  _stubs[1].oper = yort_queue_shutdownDispatchers_s;
  _stubs[2].opernm = "_get_info";
  _stubs[2].parms = yort_queue__get_info_pars;
  _stubs[2].oper = yort_queue__get_info_s;
  _stubs[3].opernm = (CONST char*)0;
  _stubs[3].parms = (yopar*)0;
  _stubs[3].oper = (void (*)(dvoid *,yoenv*,dvoid *,dvoid **))0;

  return _result;
}


STATICF void yort_dispatcher_setAdminState_s( dvoid * or, yoenv* ev, dvoid 
  * impldef, dvoid ** args);

STATICF void yort_dispatcher_setAdminState_s( dvoid * or, yoenv* ev, dvoid 
  * impldef, dvoid ** args)
{
  (*((struct yort_dispatcher__tyimpl*)impldef)->setAdminState)( (
    yort_dispatcher)or, ev,*(yort_svcState*)args[0]);
}

STATICF void yort_dispatcher__get_dinfo_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args);

STATICF void yort_dispatcher__get_dinfo_s( dvoid * or, yoenv* ev, dvoid * 
  impldef, dvoid ** args)
{
  *(yort_dispInfo*)args[0] = (*((struct yort_dispatcher__tyimpl*)impldef)
    ->_get_dinfo)( (yort_dispatcher)or, ev);
}

yostub* yort_dispatcher__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*2), 
    "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "setAdminState";
  _stubs[0].parms = yort_dispatcher_setAdminState_pars;
  _stubs[0].oper = yort_dispatcher_setAdminState_s;
  _stubs[1].opernm = "_get_dinfo";
  _stubs[1].parms = yort_dispatcher__get_dinfo_pars;
  _stubs[1].oper = yort_dispatcher__get_dinfo_s;
  _stubs[2].opernm = (CONST char*)0;
  _stubs[2].parms = (yopar*)0;
  _stubs[2].oper = (void (*)(dvoid *,yoenv*,dvoid *,dvoid **))0;

  return _result;
}


EXTC_END
