/* yo/ydyoidl.h */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef YDYOIDL_IDL
#define YDYOIDL_IDL

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

EXTC_START


#ifndef YCIDL_sequence_CORBA_Object_DEFINED
#define YCIDL_sequence_CORBA_Object_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_Object* _buffer;
} YCIDL_sequence_CORBA_Object;
#ifndef YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#define YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#endif 

#endif 



#ifndef yort_impl_DECLARED
#define yort_impl_DECLARED
typedef struct YCyort_impl* yort_impl;
yotk* yort_impl__getTC(void);
#ifndef YCTC_yort_impl
#define YCTC_yort_impl   (yort_impl__getTC())
#endif
#endif 

#ifndef yort_impl_SUPP_FUNCS
#define yort_impl_SUPP_FUNCS
void yort_impl__free( yort_impl* val, ysmff ffunc);
void yort_impl__copy( yort_impl* dest, yort_impl* src, ysmaf afunc);
#endif 

#ifndef YCIDL_sequence_yort_impl_DEFINED
#define YCIDL_sequence_yort_impl_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  yort_impl* _buffer;
} YCIDL_sequence_yort_impl;
#ifndef YCIDL_sequence_yort_impl_SUPP_FUNCS
#define YCIDL_sequence_yort_impl_SUPP_FUNCS
#endif 

#endif 



#ifndef yort_queue_DECLARED
#define yort_queue_DECLARED
typedef struct YCyort_queue* yort_queue;
yotk* yort_queue__getTC(void);
#ifndef YCTC_yort_queue
#define YCTC_yort_queue   (yort_queue__getTC())
#endif
#endif 

#ifndef yort_queue_SUPP_FUNCS
#define yort_queue_SUPP_FUNCS
void yort_queue__free( yort_queue* val, ysmff ffunc);
void yort_queue__copy( yort_queue* dest, yort_queue* src, ysmaf afunc);
#endif 

#ifndef YCIDL_sequence_yort_queue_DEFINED
#define YCIDL_sequence_yort_queue_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  yort_queue* _buffer;
} YCIDL_sequence_yort_queue;
#ifndef YCIDL_sequence_yort_queue_SUPP_FUNCS
#define YCIDL_sequence_yort_queue_SUPP_FUNCS
#endif 

#endif 



#ifndef yort_dispatcher_DECLARED
#define yort_dispatcher_DECLARED
typedef struct YCyort_dispatcher* yort_dispatcher;
yotk* yort_dispatcher__getTC(void);
#ifndef YCTC_yort_dispatcher
#define YCTC_yort_dispatcher   (yort_dispatcher__getTC())
#endif
#endif 

#ifndef yort_dispatcher_SUPP_FUNCS
#define yort_dispatcher_SUPP_FUNCS
void yort_dispatcher__free( yort_dispatcher* val, ysmff ffunc);
void yort_dispatcher__copy( yort_dispatcher* dest, yort_dispatcher* src, 
  ysmaf afunc);
#endif 

#ifndef YCIDL_sequence_yort_dispatcher_DEFINED
#define YCIDL_sequence_yort_dispatcher_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  yort_dispatcher* _buffer;
} YCIDL_sequence_yort_dispatcher;
#ifndef YCIDL_sequence_yort_dispatcher_SUPP_FUNCS
#define YCIDL_sequence_yort_dispatcher_SUPP_FUNCS
#endif 

#endif 

#ifndef yort_resource_DECLARED
#define yort_resource_DECLARED
typedef struct yort_resource yort_resource;
#endif 

#ifndef YCIDL_sequence_yort_resource_DEFINED
#define YCIDL_sequence_yort_resource_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  yort_resource* _buffer;
} YCIDL_sequence_yort_resource;
#ifndef YCIDL_sequence_yort_resource_SUPP_FUNCS
#define YCIDL_sequence_yort_resource_SUPP_FUNCS
#endif 

#endif 

#ifndef yort_implInfo_DECLARED
#define yort_implInfo_DECLARED
typedef struct yort_implInfo yort_implInfo;
#endif 

#ifndef YCIDL_sequence_yort_implInfo_DEFINED
#define YCIDL_sequence_yort_implInfo_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  yort_implInfo* _buffer;
} YCIDL_sequence_yort_implInfo;
#ifndef YCIDL_sequence_yort_implInfo_SUPP_FUNCS
#define YCIDL_sequence_yort_implInfo_SUPP_FUNCS
#endif 

#endif 

#ifndef yort_methodInfo_DECLARED
#define yort_methodInfo_DECLARED
typedef struct yort_methodInfo yort_methodInfo;
#endif 

#ifndef YCIDL_sequence_yort_methodInfo_DEFINED
#define YCIDL_sequence_yort_methodInfo_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  yort_methodInfo* _buffer;
} YCIDL_sequence_yort_methodInfo;
#ifndef YCIDL_sequence_yort_methodInfo_SUPP_FUNCS
#define YCIDL_sequence_yort_methodInfo_SUPP_FUNCS
#endif 

#endif 

#ifndef yort_dispInfo_DECLARED
#define yort_dispInfo_DECLARED
typedef struct yort_dispInfo yort_dispInfo;
#endif 

#ifndef YCIDL_sequence_yort_dispInfo_DEFINED
#define YCIDL_sequence_yort_dispInfo_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  yort_dispInfo* _buffer;
} YCIDL_sequence_yort_dispInfo;
#ifndef YCIDL_sequence_yort_dispInfo_SUPP_FUNCS
#define YCIDL_sequence_yort_dispInfo_SUPP_FUNCS
#endif 

#endif 

#ifndef yort_implAll_DECLARED
#define yort_implAll_DECLARED
typedef struct yort_implAll yort_implAll;
#endif 

#ifndef YCIDL_sequence_yort_implAll_DEFINED
#define YCIDL_sequence_yort_implAll_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  yort_implAll* _buffer;
} YCIDL_sequence_yort_implAll;
#ifndef YCIDL_sequence_yort_implAll_SUPP_FUNCS
#define YCIDL_sequence_yort_implAll_SUPP_FUNCS
#endif 

#endif 

#ifndef yort_claim_DECLARED
#define yort_claim_DECLARED
typedef struct yort_claim yort_claim;
#endif 

#ifndef YCIDL_sequence_yort_claim_DEFINED
#define YCIDL_sequence_yort_claim_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  yort_claim* _buffer;
} YCIDL_sequence_yort_claim;
#ifndef YCIDL_sequence_yort_claim_SUPP_FUNCS
#define YCIDL_sequence_yort_claim_SUPP_FUNCS
#endif 

#endif 

#ifndef ydyo_activeInfo_DECLARED
#define ydyo_activeInfo_DECLARED
typedef struct ydyo_activeInfo ydyo_activeInfo;
#endif 

#ifndef YCIDL_sequence_ydyo_activeInfo_DEFINED
#define YCIDL_sequence_ydyo_activeInfo_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  ydyo_activeInfo* _buffer;
} YCIDL_sequence_ydyo_activeInfo;
#ifndef YCIDL_sequence_ydyo_activeInfo_SUPP_FUNCS
#define YCIDL_sequence_ydyo_activeInfo_SUPP_FUNCS
#endif 

#endif 




#ifndef yoevt_DECLARED
#define yoevt_DECLARED
typedef struct YCyoevt* yoevt;
yotk* yoevt__getTC(void);
#ifndef YCTC_yoevt
#define YCTC_yoevt   (yoevt__getTC())
#endif
#endif 

#ifndef yoevt_SUPP_FUNCS
#define yoevt_SUPP_FUNCS
void yoevt__free( yoevt* val, ysmff ffunc);
void yoevt__copy( yoevt* dest, yoevt* src, ysmaf afunc);
#endif 

#ifndef yostd_stringList_DECLARED
#define yostd_stringList_DECLARED
typedef YCIDL_sequence_string yostd_stringList;
yotk* yostd_stringList__getTC(void);
#ifndef YCTC_yostd_stringList
#define YCTC_yostd_stringList   (yostd_stringList__getTC())
#endif
#endif 

#ifndef yostd_stringList_SUPP_FUNCS
#define yostd_stringList_SUPP_FUNCS
void yostd_stringList__free( yostd_stringList* val, ysmff ffunc);
void yostd_stringList__copy( yostd_stringList* dest, yostd_stringList* src, 
  ysmaf afunc);
#endif 

#ifndef yostd_objList_DECLARED
#define yostd_objList_DECLARED
typedef YCIDL_sequence_CORBA_Object yostd_objList;
yotk* yostd_objList__getTC(void);
#ifndef YCTC_yostd_objList
#define YCTC_yostd_objList   (yostd_objList__getTC())
#endif
#endif 

#ifndef yostd_objList_SUPP_FUNCS
#define yostd_objList_SUPP_FUNCS
void yostd_objList__free( yostd_objList* val, ysmff ffunc);
void yostd_objList__copy( yostd_objList* dest, yostd_objList* src, ysmaf 
  afunc);
#endif 

#ifndef yostd_octetSeq_DECLARED
#define yostd_octetSeq_DECLARED
typedef YCIDL_sequence_ub1 yostd_octetSeq;
yotk* yostd_octetSeq__getTC(void);
#ifndef YCTC_yostd_octetSeq
#define YCTC_yostd_octetSeq   (yostd_octetSeq__getTC())
#endif
#endif 

#ifndef yostd_octetSeq_SUPP_FUNCS
#define yostd_octetSeq_SUPP_FUNCS
void yostd_octetSeq__free( yostd_octetSeq* val, ysmff ffunc);
void yostd_octetSeq__copy( yostd_octetSeq* dest, yostd_octetSeq* src, ysmaf 
  afunc);
#endif 



#ifndef yort_proc_DECLARED
#define yort_proc_DECLARED
typedef struct YCyort_proc* yort_proc;
yotk* yort_proc__getTC(void);
#ifndef YCTC_yort_proc
#define YCTC_yort_proc   (yort_proc__getTC())
#endif
#endif 

#ifndef yort_proc_SUPP_FUNCS
#define yort_proc_SUPP_FUNCS
void yort_proc__free( yort_proc* val, ysmff ffunc);
void yort_proc__copy( yort_proc* dest, yort_proc* src, ysmaf afunc);
#endif 



#ifndef yort_impl_DECLARED
#define yort_impl_DECLARED
typedef struct YCyort_impl* yort_impl;
yotk* yort_impl__getTC(void);
#ifndef YCTC_yort_impl
#define YCTC_yort_impl   (yort_impl__getTC())
#endif
#endif 

#ifndef yort_impl_SUPP_FUNCS
#define yort_impl_SUPP_FUNCS
void yort_impl__free( yort_impl* val, ysmff ffunc);
void yort_impl__copy( yort_impl* dest, yort_impl* src, ysmaf afunc);
#endif 



#ifndef yort_queue_DECLARED
#define yort_queue_DECLARED
typedef struct YCyort_queue* yort_queue;
yotk* yort_queue__getTC(void);
#ifndef YCTC_yort_queue
#define YCTC_yort_queue   (yort_queue__getTC())
#endif
#endif 

#ifndef yort_queue_SUPP_FUNCS
#define yort_queue_SUPP_FUNCS
void yort_queue__free( yort_queue* val, ysmff ffunc);
void yort_queue__copy( yort_queue* dest, yort_queue* src, ysmaf afunc);
#endif 



#ifndef yort_dispatcher_DECLARED
#define yort_dispatcher_DECLARED
typedef struct YCyort_dispatcher* yort_dispatcher;
yotk* yort_dispatcher__getTC(void);
#ifndef YCTC_yort_dispatcher
#define YCTC_yort_dispatcher   (yort_dispatcher__getTC())
#endif
#endif 

#ifndef yort_dispatcher_SUPP_FUNCS
#define yort_dispatcher_SUPP_FUNCS
void yort_dispatcher__free( yort_dispatcher* val, ysmff ffunc);
void yort_dispatcher__copy( yort_dispatcher* dest, yort_dispatcher* src, 
  ysmaf afunc);
#endif 



#ifndef yort_objIterator_DECLARED
#define yort_objIterator_DECLARED
typedef struct YCyort_objIterator* yort_objIterator;
yotk* yort_objIterator__getTC(void);
#ifndef YCTC_yort_objIterator
#define YCTC_yort_objIterator   (yort_objIterator__getTC())
#endif
#endif 

#ifndef yort_objIterator_SUPP_FUNCS
#define yort_objIterator_SUPP_FUNCS
void yort_objIterator__free( yort_objIterator* val, ysmff ffunc);
void yort_objIterator__copy( yort_objIterator* dest, yort_objIterator* src, 
  ysmaf afunc);
#endif 



#ifndef yort_claimIterator_DECLARED
#define yort_claimIterator_DECLARED
typedef struct YCyort_claimIterator* yort_claimIterator;
yotk* yort_claimIterator__getTC(void);
#ifndef YCTC_yort_claimIterator
#define YCTC_yort_claimIterator   (yort_claimIterator__getTC())
#endif
#endif 

#ifndef yort_claimIterator_SUPP_FUNCS
#define yort_claimIterator_SUPP_FUNCS
void yort_claimIterator__free( yort_claimIterator* val, ysmff ffunc);
void yort_claimIterator__copy( yort_claimIterator* dest, 
  yort_claimIterator* src, ysmaf afunc);
#endif 

#ifndef yort_implList_DECLARED
#define yort_implList_DECLARED
typedef YCIDL_sequence_yort_impl yort_implList;
yotk* yort_implList__getTC(void);
#ifndef YCTC_yort_implList
#define YCTC_yort_implList   (yort_implList__getTC())
#endif
#endif 

#ifndef yort_implList_SUPP_FUNCS
#define yort_implList_SUPP_FUNCS
void yort_implList__free( yort_implList* val, ysmff ffunc);
void yort_implList__copy( yort_implList* dest, yort_implList* src, ysmaf 
  afunc);
#endif 

#ifndef yort_queueList_DECLARED
#define yort_queueList_DECLARED
typedef YCIDL_sequence_yort_queue yort_queueList;
yotk* yort_queueList__getTC(void);
#ifndef YCTC_yort_queueList
#define YCTC_yort_queueList   (yort_queueList__getTC())
#endif
#endif 

#ifndef yort_queueList_SUPP_FUNCS
#define yort_queueList_SUPP_FUNCS
void yort_queueList__free( yort_queueList* val, ysmff ffunc);
void yort_queueList__copy( yort_queueList* dest, yort_queueList* src, ysmaf 
  afunc);
#endif 

#ifndef yort_dispatcherList_DECLARED
#define yort_dispatcherList_DECLARED
typedef YCIDL_sequence_yort_dispatcher yort_dispatcherList;
yotk* yort_dispatcherList__getTC(void);
#ifndef YCTC_yort_dispatcherList
#define YCTC_yort_dispatcherList   (yort_dispatcherList__getTC())
#endif
#endif 

#ifndef yort_dispatcherList_SUPP_FUNCS
#define yort_dispatcherList_SUPP_FUNCS
void yort_dispatcherList__free( yort_dispatcherList* val, ysmff ffunc);
void yort_dispatcherList__copy( yort_dispatcherList* dest, 
  yort_dispatcherList* src, ysmaf afunc);
#endif 

#ifndef yort_svcState_DECLARED
#define yort_svcState_DECLARED
typedef ub4 yort_svcState;
yotk* yort_svcState__getTC(void);
#ifndef YCTC_yort_svcState
#define YCTC_yort_svcState   (yort_svcState__getTC())
#endif
#endif 

#ifndef yort_svcState_DEFINED
#define yort_svcState_DEFINED
#define yort_SvcStDown ((yort_svcState) 0)
#define yort_SvcStRun ((yort_svcState) 1)
#define yort_SvcStHalted ((yort_svcState) 2)
#define yort_SvcStCongested ((yort_svcState) 3)
#define yort_SvcStRestart ((yort_svcState) 4)
#define yort_SvcStQuiesce ((yort_svcState) 5)
#endif 

#ifndef yort_svcState_SUPP_FUNCS
#define yort_svcState_SUPP_FUNCS
void yort_svcState__free( yort_svcState* val, ysmff ffunc);
void yort_svcState__copy( yort_svcState* dest, yort_svcState* src, ysmaf 
  afunc);
#endif 

#ifndef yort_procState_DECLARED
#define yort_procState_DECLARED
typedef ub4 yort_procState;
yotk* yort_procState__getTC(void);
#ifndef YCTC_yort_procState
#define YCTC_yort_procState   (yort_procState__getTC())
#endif
#endif 

#ifndef yort_procState_DEFINED
#define yort_procState_DEFINED
#define yort_ProcStRunning ((yort_procState) 0)
#define yort_ProcStRunnable ((yort_procState) 1)
#define yort_ProcStNotRunnable ((yort_procState) 2)
#define yort_ProcStInvalid ((yort_procState) 3)
#endif 

#ifndef yort_procState_SUPP_FUNCS
#define yort_procState_SUPP_FUNCS
void yort_procState__free( yort_procState* val, ysmff ffunc);
void yort_procState__copy( yort_procState* dest, yort_procState* src, ysmaf 
  afunc);
#endif 

#ifndef yort_counter_DECLARED
#define yort_counter_DECLARED
typedef ub4 yort_counter;
yotk* yort_counter__getTC(void);
#ifndef YCTC_yort_counter
#define YCTC_yort_counter   (yort_counter__getTC())
#endif
#endif 

#ifndef yort_counter_SUPP_FUNCS
#define yort_counter_SUPP_FUNCS
#endif 

#ifndef yort_gauge_DECLARED
#define yort_gauge_DECLARED
typedef ub4 yort_gauge;
yotk* yort_gauge__getTC(void);
#ifndef YCTC_yort_gauge
#define YCTC_yort_gauge   (yort_gauge__getTC())
#endif
#endif 

#ifndef yort_gauge_SUPP_FUNCS
#define yort_gauge_SUPP_FUNCS
#endif 

#ifndef yort_timeTicks_DECLARED
#define yort_timeTicks_DECLARED
typedef sb4 yort_timeTicks;
yotk* yort_timeTicks__getTC(void);
#ifndef YCTC_yort_timeTicks
#define YCTC_yort_timeTicks   (yort_timeTicks__getTC())
#endif
#endif 

#ifndef yort_timeTicks_SUPP_FUNCS
#define yort_timeTicks_SUPP_FUNCS
#endif 

#ifndef yort_timeCs_DECLARED
#define yort_timeCs_DECLARED
typedef sb4 yort_timeCs;
yotk* yort_timeCs__getTC(void);
#ifndef YCTC_yort_timeCs
#define YCTC_yort_timeCs   (yort_timeCs__getTC())
#endif
#endif 

#ifndef yort_timeCs_SUPP_FUNCS
#define yort_timeCs_SUPP_FUNCS
#endif 

#ifndef yort_timeMs_DECLARED
#define yort_timeMs_DECLARED
typedef sb4 yort_timeMs;
yotk* yort_timeMs__getTC(void);
#ifndef YCTC_yort_timeMs
#define YCTC_yort_timeMs   (yort_timeMs__getTC())
#endif
#endif 

#ifndef yort_timeMs_SUPP_FUNCS
#define yort_timeMs_SUPP_FUNCS
#endif 

#ifndef yort_resource_DECLARED
#define yort_resource_DECLARED
typedef struct yort_resource yort_resource;
#endif 

#ifndef yort_resource_DEFINED
#define yort_resource_DEFINED
struct yort_resource
{
  char* name_yort_resource;
  yostd_stringList vals_yort_resource;
};
yotk* yort_resource__getTC(void);
#ifndef YCTC_yort_resource
#define YCTC_yort_resource   (yort_resource__getTC())
#endif
#endif 

#ifndef yort_resource_SUPP_FUNCS
#define yort_resource_SUPP_FUNCS
void yort_resource__free( yort_resource* val, ysmff ffunc);
void yort_resource__copy( yort_resource* dest, yort_resource* src, ysmaf 
  afunc);
#endif 

#ifndef yort_resourceList_DECLARED
#define yort_resourceList_DECLARED
typedef YCIDL_sequence_yort_resource yort_resourceList;
yotk* yort_resourceList__getTC(void);
#ifndef YCTC_yort_resourceList
#define YCTC_yort_resourceList   (yort_resourceList__getTC())
#endif
#endif 

#ifndef yort_resourceList_SUPP_FUNCS
#define yort_resourceList_SUPP_FUNCS
void yort_resourceList__free( yort_resourceList* val, ysmff ffunc);
void yort_resourceList__copy( yort_resourceList* dest, yort_resourceList* 
  src, ysmaf afunc);
#endif 

#ifndef yort_implFlags_DECLARED
#define yort_implFlags_DECLARED
typedef ub4 yort_implFlags;
yotk* yort_implFlags__getTC(void);
#ifndef YCTC_yort_implFlags
#define YCTC_yort_implFlags   (yort_implFlags__getTC())
#endif
#endif 

#ifndef yort_implFlags_SUPP_FUNCS
#define yort_implFlags_SUPP_FUNCS
#endif 

#ifndef yort_stateless_implFlag_DECLARED
#define yort_stateless_implFlag_DECLARED
#define yort_stateless_implFlag ((yort_implFlags) 1)
#endif 

#ifndef yort_psf_implFlag_DECLARED
#define yort_psf_implFlag_DECLARED
#define yort_psf_implFlag ((yort_implFlags) 2)
#endif 

#ifndef yort_suspended_implFlag_DECLARED
#define yort_suspended_implFlag_DECLARED
#define yort_suspended_implFlag ((yort_implFlags) 4)
#endif 

#ifndef yort_implInfo_DECLARED
#define yort_implInfo_DECLARED
typedef struct yort_implInfo yort_implInfo;
#endif 

#ifndef yort_implInfo_DEFINED
#define yort_implInfo_DEFINED
struct yort_implInfo
{
  yort_impl self_yort_implInfo;
  char* intf_yort_implInfo;
  char* impl_yort_implInfo;
  yort_timeTicks upTimeCs_yort_implInfo;
  yort_svcState operStatus_yort_implInfo;
  yort_timeTicks operStatusChanged_yort_implInfo;
  yort_svcState adminStatus_yort_implInfo;
  yort_timeTicks adminStatusChanged_yort_implInfo;
  yort_counter inboundAssocs_yort_implInfo;
  yort_counter outboundAssocs_yort_implInfo;
  yort_counter totalInboundAssocs_yort_implInfo;
  yort_counter totalOutboundAssocs_yort_implInfo;
  yort_timeTicks lastInbound_yort_implInfo;
  yort_timeTicks lastOutbound_yort_implInfo;
  yort_counter rejectedInbounds_yort_implInfo;
  yort_counter failedOutbounds_yort_implInfo;
  yort_implFlags implFlags_yort_implInfo;
};
yotk* yort_implInfo__getTC(void);
#ifndef YCTC_yort_implInfo
#define YCTC_yort_implInfo   (yort_implInfo__getTC())
#endif
#endif 

#ifndef yort_implInfo_SUPP_FUNCS
#define yort_implInfo_SUPP_FUNCS
void yort_implInfo__free( yort_implInfo* val, ysmff ffunc);
void yort_implInfo__copy( yort_implInfo* dest, yort_implInfo* src, ysmaf 
  afunc);
#endif 

#ifndef yort_implInfoList_DECLARED
#define yort_implInfoList_DECLARED
typedef YCIDL_sequence_yort_implInfo yort_implInfoList;
yotk* yort_implInfoList__getTC(void);
#ifndef YCTC_yort_implInfoList
#define YCTC_yort_implInfoList   (yort_implInfoList__getTC())
#endif
#endif 

#ifndef yort_implInfoList_SUPP_FUNCS
#define yort_implInfoList_SUPP_FUNCS
void yort_implInfoList__free( yort_implInfoList* val, ysmff ffunc);
void yort_implInfoList__copy( yort_implInfoList* dest, yort_implInfoList* 
  src, ysmaf afunc);
#endif 

#ifndef yort_methodInfo_DECLARED
#define yort_methodInfo_DECLARED
typedef struct yort_methodInfo yort_methodInfo;
#endif 

#ifndef yort_methodInfo_DEFINED
#define yort_methodInfo_DEFINED
struct yort_methodInfo
{
  char* name_yort_methodInfo;
  yort_counter cnt_yort_methodInfo;
  yort_timeMs lastTimeMs_yort_methodInfo;
  yort_timeMs maxTimeMs_yort_methodInfo;
  yort_timeMs avgTimeMs_yort_methodInfo;
};
yotk* yort_methodInfo__getTC(void);
#ifndef YCTC_yort_methodInfo
#define YCTC_yort_methodInfo   (yort_methodInfo__getTC())
#endif
#endif 

#ifndef yort_methodInfo_SUPP_FUNCS
#define yort_methodInfo_SUPP_FUNCS
void yort_methodInfo__free( yort_methodInfo* val, ysmff ffunc);
void yort_methodInfo__copy( yort_methodInfo* dest, yort_methodInfo* src, 
  ysmaf afunc);
#endif 

#ifndef yort_methodInfoList_DECLARED
#define yort_methodInfoList_DECLARED
typedef YCIDL_sequence_yort_methodInfo yort_methodInfoList;
yotk* yort_methodInfoList__getTC(void);
#ifndef YCTC_yort_methodInfoList
#define YCTC_yort_methodInfoList   (yort_methodInfoList__getTC())
#endif
#endif 

#ifndef yort_methodInfoList_SUPP_FUNCS
#define yort_methodInfoList_SUPP_FUNCS
void yort_methodInfoList__free( yort_methodInfoList* val, ysmff ffunc);
void yort_methodInfoList__copy( yort_methodInfoList* dest, 
  yort_methodInfoList* src, ysmaf afunc);
#endif 

#ifndef yort_queueInfo_DECLARED
#define yort_queueInfo_DECLARED
typedef struct yort_queueInfo yort_queueInfo;
#endif 

#ifndef yort_queueInfo_DEFINED
#define yort_queueInfo_DEFINED
struct yort_queueInfo
{
  yort_queue self_yort_queueInfo;
  char* name_yort_queueInfo;
  yort_counter totEnq_yort_queueInfo;
  yort_gauge curLen_yort_queueInfo;
  yort_gauge maxLen_yort_queueInfo;
  yort_gauge avgLen_yort_queueInfo;
  yort_timeMs curDelayMs_yort_queueInfo;
  yort_timeMs maxDelayMs_yort_queueInfo;
  yort_timeMs avgDelayMs_yort_queueInfo;
  yort_dispatcherList dispatchers_yort_queueInfo;
};
yotk* yort_queueInfo__getTC(void);
#ifndef YCTC_yort_queueInfo
#define YCTC_yort_queueInfo   (yort_queueInfo__getTC())
#endif
#endif 

#ifndef yort_queueInfo_SUPP_FUNCS
#define yort_queueInfo_SUPP_FUNCS
void yort_queueInfo__free( yort_queueInfo* val, ysmff ffunc);
void yort_queueInfo__copy( yort_queueInfo* dest, yort_queueInfo* src, ysmaf 
  afunc);
#endif 

#ifndef yort_dispInfo_DECLARED
#define yort_dispInfo_DECLARED
typedef struct yort_dispInfo yort_dispInfo;
#endif 

#ifndef yort_dispInfo_DEFINED
#define yort_dispInfo_DEFINED
struct yort_dispInfo
{
  yort_dispatcher self_yort_dispInfo;
  yort_queue queue_yort_dispInfo;
  yort_counter numDispatches_yort_dispInfo;
  yort_svcState operState_yort_dispInfo;
  yort_svcState adminState_yort_dispInfo;
};
yotk* yort_dispInfo__getTC(void);
#ifndef YCTC_yort_dispInfo
#define YCTC_yort_dispInfo   (yort_dispInfo__getTC())
#endif
#endif 

#ifndef yort_dispInfo_SUPP_FUNCS
#define yort_dispInfo_SUPP_FUNCS
void yort_dispInfo__free( yort_dispInfo* val, ysmff ffunc);
void yort_dispInfo__copy( yort_dispInfo* dest, yort_dispInfo* src, ysmaf 
  afunc);
#endif 

#ifndef yort_dispInfoList_DECLARED
#define yort_dispInfoList_DECLARED
typedef YCIDL_sequence_yort_dispInfo yort_dispInfoList;
yotk* yort_dispInfoList__getTC(void);
#ifndef YCTC_yort_dispInfoList
#define YCTC_yort_dispInfoList   (yort_dispInfoList__getTC())
#endif
#endif 

#ifndef yort_dispInfoList_SUPP_FUNCS
#define yort_dispInfoList_SUPP_FUNCS
void yort_dispInfoList__free( yort_dispInfoList* val, ysmff ffunc);
void yort_dispInfoList__copy( yort_dispInfoList* dest, yort_dispInfoList* 
  src, ysmaf afunc);
#endif 

#ifndef yort_implAll_DECLARED
#define yort_implAll_DECLARED
typedef struct yort_implAll yort_implAll;
#endif 

#ifndef yort_implAll_DEFINED
#define yort_implAll_DEFINED
struct yort_implAll
{
  yort_implInfo info_yort_implAll;
  yort_methodInfoList methods_yort_implAll;
  yort_queueInfo queue_yort_implAll;
};
yotk* yort_implAll__getTC(void);
#ifndef YCTC_yort_implAll
#define YCTC_yort_implAll   (yort_implAll__getTC())
#endif
#endif 

#ifndef yort_implAll_SUPP_FUNCS
#define yort_implAll_SUPP_FUNCS
void yort_implAll__free( yort_implAll* val, ysmff ffunc);
void yort_implAll__copy( yort_implAll* dest, yort_implAll* src, ysmaf afunc)
  ;
#endif 

#ifndef yort_implAllList_DECLARED
#define yort_implAllList_DECLARED
typedef YCIDL_sequence_yort_implAll yort_implAllList;
yotk* yort_implAllList__getTC(void);
#ifndef YCTC_yort_implAllList
#define YCTC_yort_implAllList   (yort_implAllList__getTC())
#endif
#endif 

#ifndef yort_implAllList_SUPP_FUNCS
#define yort_implAllList_SUPP_FUNCS
void yort_implAllList__free( yort_implAllList* val, ysmff ffunc);
void yort_implAllList__copy( yort_implAllList* dest, yort_implAllList* src, 
  ysmaf afunc);
#endif 

#ifndef yort_procInfo_DECLARED
#define yort_procInfo_DECLARED
typedef struct yort_procInfo yort_procInfo;
#endif 

#ifndef yort_procInfo_DEFINED
#define yort_procInfo_DEFINED
struct yort_procInfo
{
  yort_proc self_yort_procInfo;
  char* name_yort_procInfo;
  char* host_yort_procInfo;
  char* affinity_yort_procInfo;
  char* pid_yort_procInfo;
  yort_procState operState_yort_procInfo;
  yort_procState adminState_yort_procInfo;
  ub4 cpuCs_yort_procInfo;
  ub4 memKb_yort_procInfo;
  yort_timeTicks upTime_yort_procInfo;
};
yotk* yort_procInfo__getTC(void);
#ifndef YCTC_yort_procInfo
#define YCTC_yort_procInfo   (yort_procInfo__getTC())
#endif
#endif 

#ifndef yort_procInfo_SUPP_FUNCS
#define yort_procInfo_SUPP_FUNCS
void yort_procInfo__free( yort_procInfo* val, ysmff ffunc);
void yort_procInfo__copy( yort_procInfo* dest, yort_procInfo* src, ysmaf 
  afunc);
#endif 

#ifndef yort_claim_DECLARED
#define yort_claim_DECLARED
typedef struct yort_claim yort_claim;
#endif 

#ifndef yort_claim_DEFINED
#define yort_claim_DEFINED
struct yort_claim
{
  char* property;
  CORBA_Object obj;
  yort_proc owner;
};
yotk* yort_claim__getTC(void);
#ifndef YCTC_yort_claim
#define YCTC_yort_claim   (yort_claim__getTC())
#endif
#endif 

#ifndef yort_claim_SUPP_FUNCS
#define yort_claim_SUPP_FUNCS
void yort_claim__free( yort_claim* val, ysmff ffunc);
void yort_claim__copy( yort_claim* dest, yort_claim* src, ysmaf afunc);
#endif 

#ifndef yort_claimList_DECLARED
#define yort_claimList_DECLARED
typedef YCIDL_sequence_yort_claim yort_claimList;
yotk* yort_claimList__getTC(void);
#ifndef YCTC_yort_claimList
#define YCTC_yort_claimList   (yort_claimList__getTC())
#endif
#endif 

#ifndef yort_claimList_SUPP_FUNCS
#define yort_claimList_SUPP_FUNCS
void yort_claimList__free( yort_claimList* val, ysmff ffunc);
void yort_claimList__copy( yort_claimList* dest, yort_claimList* src, ysmaf 
  afunc);
#endif 



#ifndef yort_proc_DECLARED
#define yort_proc_DECLARED
typedef struct YCyort_proc* yort_proc;
yotk* yort_proc__getTC(void);
#ifndef YCTC_yort_proc
#define YCTC_yort_proc   (yort_proc__getTC())
#endif
#endif 

#ifndef yort_proc_SUPP_FUNCS
#define yort_proc_SUPP_FUNCS
void yort_proc__free( yort_proc* val, ysmff ffunc);
void yort_proc__copy( yort_proc* dest, yort_proc* src, ysmaf afunc);
#endif 

CONST ysid* yort_proc__getId(void);
#ifndef yort_proc__id
#define yort_proc__id   (yort_proc__getId())
#endif


#ifndef yort_impl_DECLARED
#define yort_impl_DECLARED
typedef struct YCyort_impl* yort_impl;
yotk* yort_impl__getTC(void);
#ifndef YCTC_yort_impl
#define YCTC_yort_impl   (yort_impl__getTC())
#endif
#endif 

#ifndef yort_impl_SUPP_FUNCS
#define yort_impl_SUPP_FUNCS
void yort_impl__free( yort_impl* val, ysmff ffunc);
void yort_impl__copy( yort_impl* dest, yort_impl* src, ysmaf afunc);
#endif 

CONST ysid* yort_impl__getId(void);
#ifndef yort_impl__id
#define yort_impl__id   (yort_impl__getId())
#endif


#ifndef yort_queue_DECLARED
#define yort_queue_DECLARED
typedef struct YCyort_queue* yort_queue;
yotk* yort_queue__getTC(void);
#ifndef YCTC_yort_queue
#define YCTC_yort_queue   (yort_queue__getTC())
#endif
#endif 

#ifndef yort_queue_SUPP_FUNCS
#define yort_queue_SUPP_FUNCS
void yort_queue__free( yort_queue* val, ysmff ffunc);
void yort_queue__copy( yort_queue* dest, yort_queue* src, ysmaf afunc);
#endif 

CONST ysid* yort_queue__getId(void);
#ifndef yort_queue__id
#define yort_queue__id   (yort_queue__getId())
#endif


#ifndef yort_dispatcher_DECLARED
#define yort_dispatcher_DECLARED
typedef struct YCyort_dispatcher* yort_dispatcher;
yotk* yort_dispatcher__getTC(void);
#ifndef YCTC_yort_dispatcher
#define YCTC_yort_dispatcher   (yort_dispatcher__getTC())
#endif
#endif 

#ifndef yort_dispatcher_SUPP_FUNCS
#define yort_dispatcher_SUPP_FUNCS
void yort_dispatcher__free( yort_dispatcher* val, ysmff ffunc);
void yort_dispatcher__copy( yort_dispatcher* dest, yort_dispatcher* src, 
  ysmaf afunc);
#endif 

CONST ysid* yort_dispatcher__getId(void);
#ifndef yort_dispatcher__id
#define yort_dispatcher__id   (yort_dispatcher__getId())
#endif


#ifndef ydim_active_DECLARED
#define ydim_active_DECLARED
typedef struct YCydim_active* ydim_active;
yotk* ydim_active__getTC(void);
#ifndef YCTC_ydim_active
#define YCTC_ydim_active   (ydim_active__getTC())
#endif
#endif 

#ifndef ydim_active_SUPP_FUNCS
#define ydim_active_SUPP_FUNCS
void ydim_active__free( ydim_active* val, ysmff ffunc);
void ydim_active__copy( ydim_active* dest, ydim_active* src, ysmaf afunc);
#endif 

#ifndef YDYO_EX_NOTUNIQUE_DECLARED
#define YDYO_EX_NOTUNIQUE_DECLARED
CONST ysid* ydyo_notUnique__getId(void);
#ifndef YDYO_EX_NOTUNIQUE
#define YDYO_EX_NOTUNIQUE   (ydyo_notUnique__getId())
#endif
#endif 

yotk* ydyo_notUnique__getTC(void);
#ifndef YCTC_ydyo_notUnique
#define YCTC_ydyo_notUnique   (ydyo_notUnique__getTC())
#endif
#ifndef ydyo_activeInfo_DECLARED
#define ydyo_activeInfo_DECLARED
typedef struct ydyo_activeInfo ydyo_activeInfo;
#endif 

#ifndef ydyo_activeInfo_DEFINED
#define ydyo_activeInfo_DEFINED
struct ydyo_activeInfo
{
  ydim_active self_ydyo_activeInfo;
  char* intf_ydyo_activeInfo;
  char* impl_ydyo_activeInfo;
  yort_proc yort_ydyo_activeInfo;
  yort_impl yortImpl_ydyo_activeInfo;
  yort_implFlags implFlags_ydyo_activeInfo;
};
yotk* ydyo_activeInfo__getTC(void);
#ifndef YCTC_ydyo_activeInfo
#define YCTC_ydyo_activeInfo   (ydyo_activeInfo__getTC())
#endif
#endif 

#ifndef ydyo_activeInfo_SUPP_FUNCS
#define ydyo_activeInfo_SUPP_FUNCS
void ydyo_activeInfo__free( ydyo_activeInfo* val, ysmff ffunc);
void ydyo_activeInfo__copy( ydyo_activeInfo* dest, ydyo_activeInfo* src, 
  ysmaf afunc);
#endif 

#ifndef ydyo_activeInfoList_DECLARED
#define ydyo_activeInfoList_DECLARED
typedef YCIDL_sequence_ydyo_activeInfo ydyo_activeInfoList;
yotk* ydyo_activeInfoList__getTC(void);
#ifndef YCTC_ydyo_activeInfoList
#define YCTC_ydyo_activeInfoList   (ydyo_activeInfoList__getTC())
#endif
#endif 

#ifndef ydyo_activeInfoList_SUPP_FUNCS
#define ydyo_activeInfoList_SUPP_FUNCS
void ydyo_activeInfoList__free( ydyo_activeInfoList* val, ysmff ffunc);
void ydyo_activeInfoList__copy( ydyo_activeInfoList* dest, 
  ydyo_activeInfoList* src, ysmaf afunc);
#endif 

#ifndef YDYO_EX_NOTOWNER_DECLARED
#define YDYO_EX_NOTOWNER_DECLARED
CONST ysid* ydyo_notOwner__getId(void);
#ifndef YDYO_EX_NOTOWNER
#define YDYO_EX_NOTOWNER   (ydyo_notOwner__getId())
#endif
#endif 

#ifndef ydyo_notOwner_DECLARED
#define ydyo_notOwner_DECLARED
typedef struct ydyo_notOwner ydyo_notOwner;
#endif 

#ifndef ydyo_notOwner_DEFINED
#define ydyo_notOwner_DEFINED
struct ydyo_notOwner
{
  yort_proc realOwner;
};
yotk* ydyo_notOwner__getTC(void);
#ifndef YCTC_ydyo_notOwner
#define YCTC_ydyo_notOwner   (ydyo_notOwner__getTC())
#endif
#endif 

#ifndef ydyo_notOwner_SUPP_FUNCS
#define ydyo_notOwner_SUPP_FUNCS
void ydyo_notOwner__free( ydyo_notOwner* val, ysmff ffunc);
void ydyo_notOwner__copy( ydyo_notOwner* dest, ydyo_notOwner* src, ysmaf 
  afunc);
#endif 



#ifndef ydyo_imr_DECLARED
#define ydyo_imr_DECLARED
typedef struct YCydyo_imr* ydyo_imr;
yotk* ydyo_imr__getTC(void);
#ifndef YCTC_ydyo_imr
#define YCTC_ydyo_imr   (ydyo_imr__getTC())
#endif
#endif 

#ifndef ydyo_imr_SUPP_FUNCS
#define ydyo_imr_SUPP_FUNCS
void ydyo_imr__free( ydyo_imr* val, ysmff ffunc);
void ydyo_imr__copy( ydyo_imr* dest, ydyo_imr* src, ysmaf afunc);
#endif 

#ifndef ydyo_imr_DEFINED
#define ydyo_imr_DEFINED
struct yostub* ydyo_imr__getStubs(void);
#define ydyo_imr__stubs (ydyo_imr__getStubs())
#endif 

CONST ysid* ydyo_imr__getId(void);
#ifndef ydyo_imr__id
#define ydyo_imr__id   (ydyo_imr__getId())
#endif
void ydyo_imr_addActiveGlobal( ydyo_imr or, yoenv* ev, yort_procInfo* pinfo,
   ydyo_activeInfoList* ailist);
void ydyo_imr_addActiveGlobal_nw( ydyo_imr or, yoenv* ev, yort_procInfo* 
  pinfo, ydyo_activeInfoList* ailist, ysevt* _sem);
yopar* ydyo_imr_addActiveGlobal__getPars(void);
#ifndef ydyo_imr_addActiveGlobal_pars
#define ydyo_imr_addActiveGlobal_pars (ydyo_imr_addActiveGlobal__getPars())
#endif

void ydyo_imr_destroyActiveGlobal( ydyo_imr or, yoenv* ev, 
  ydyo_activeInfoList* ailist);
void ydyo_imr_destroyActiveGlobal_nw( ydyo_imr or, yoenv* ev, 
  ydyo_activeInfoList* ailist, ysevt* _sem);
yopar* ydyo_imr_destroyActiveGlobal__getPars(void);
#ifndef ydyo_imr_destroyActiveGlobal_pars
#define ydyo_imr_destroyActiveGlobal_pars ( \
  ydyo_imr_destroyActiveGlobal__getPars())
#endif

void ydyo_imr_destroyYortGlobal( ydyo_imr or, yoenv* ev, yort_proc y);
void ydyo_imr_destroyYortGlobal_nw( ydyo_imr or, yoenv* ev, yort_proc y, 
  ysevt* _sem);
yopar* ydyo_imr_destroyYortGlobal__getPars(void);
#ifndef ydyo_imr_destroyYortGlobal_pars
#define ydyo_imr_destroyYortGlobal_pars ( \
  ydyo_imr_destroyYortGlobal__getPars())
#endif

boolean ydyo_imr_exists( ydyo_imr or, yoenv* ev, char* intf, char* impl);
void ydyo_imr_exists_nw( ydyo_imr or, yoenv* ev, char* intf, char* impl, 
  ysevt* _sem);
yopar* ydyo_imr_exists__getPars(void);
#ifndef ydyo_imr_exists_pars
#define ydyo_imr_exists_pars (ydyo_imr_exists__getPars())
#endif

void ydyo_imr_stake( ydyo_imr or, yoenv* ev, yort_claim* what, yoevt 
  replyTo);
void ydyo_imr_stake_nw( ydyo_imr or, yoenv* ev, yort_claim* what, yoevt 
  replyTo, ysevt* _sem);
yopar* ydyo_imr_stake__getPars(void);
#ifndef ydyo_imr_stake_pars
#define ydyo_imr_stake_pars (ydyo_imr_stake__getPars())
#endif

void ydyo_imr_abandon( ydyo_imr or, yoenv* ev, yort_claim* what);
void ydyo_imr_abandon_nw( ydyo_imr or, yoenv* ev, yort_claim* what, ysevt* 
  _sem);
yopar* ydyo_imr_abandon__getPars(void);
#ifndef ydyo_imr_abandon_pars
#define ydyo_imr_abandon_pars (ydyo_imr_abandon__getPars())
#endif

yostd_stringList ydyo_imr_listProperties( ydyo_imr or, yoenv* ev, char* 
  regexp);
void ydyo_imr_listProperties_nw( ydyo_imr or, yoenv* ev, char* regexp, 
  ysevt* _sem);
yopar* ydyo_imr_listProperties__getPars(void);
#ifndef ydyo_imr_listProperties_pars
#define ydyo_imr_listProperties_pars (ydyo_imr_listProperties__getPars())
#endif

CORBA_Object ydyo_imr_propertyResolve( ydyo_imr or, yoenv* ev, char* 
  property);
void ydyo_imr_propertyResolve_nw( ydyo_imr or, yoenv* ev, char* property, 
  ysevt* _sem);
yopar* ydyo_imr_propertyResolve__getPars(void);
#ifndef ydyo_imr_propertyResolve_pars
#define ydyo_imr_propertyResolve_pars (ydyo_imr_propertyResolve__getPars())
#endif

#ifndef ydyo_imr__tyimpl_DEFINED
#define ydyo_imr__tyimpl_DEFINED
struct ydyo_imr__tyimpl
{
  void (*addActiveGlobal)( ydyo_imr, yoenv*, yort_procInfo*, 
    ydyo_activeInfoList*);
  void (*destroyActiveGlobal)( ydyo_imr, yoenv*, ydyo_activeInfoList*);
  void (*destroyYortGlobal)( ydyo_imr, yoenv*, yort_proc);
  boolean (*exists)( ydyo_imr, yoenv*, char*, char*);
  void (*stake)( ydyo_imr, yoenv*, yort_claim*, yoevt);
  void (*abandon)( ydyo_imr, yoenv*, yort_claim*);
  yostd_stringList (*listProperties)( ydyo_imr, yoenv*, char*);
  CORBA_Object (*propertyResolve)( ydyo_imr, yoenv*, char*);
};
#endif 

EXTC_END
#endif 
