/* mx/src/ys/ysi.h */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef YSI_ORACLE
#define YSI_ORACLE

#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YS_ORACLE
#include <ys.h>
#endif
#ifndef YSTHR_ORACLE
#include <ysthr.h>
#endif


typedef struct yslctx yslctx;                             
typedef struct ysthrctx ysthrctx;                          


typedef struct ysctx ysctx;


struct ysctx
{
  
  ysbv   *bv;                               
  sword   nbv;                               

  
  ysthrctx *tctx;                                       
  yslst    *thrkeys;                              

  
  ysepf     pfunc;                                         
  dvoid    *pfptr;                                     
  ysthrkey *errkey;                                

  
  yslst  *rdb;                                          

  
  boolean detach;                             

  
  ub4       last;                        
  sysb8     ticks;  
  sysb8     start;               

  
  ysmtx   inyield;                           
  yslst  *idlers;                                
  sysimsk mask;                                            
  ub4     intrcnt;                                        
  CONST ysid *usrintr;                            
  void  (*waiter)(dvoid *usrp, ub4 timeout);                 
  dvoid  *waiterusrp;                           
  ysHndlr intrhndlr;                                    
  dvoid  *intrusrp;                        
  yslst  *tmrs;                                            

  
  yslst  *msgdlst;                         
  sword   msgdmax;                               
  yslctx *lctx;                                           

  
  ub4         initcnt;                                  
  dvoid      *osdp;                                    
  CONST char *prognm;                                     
};



externref ysidDecl(YS_FACILITY);


void ysResFree(dvoid *ptr);
void yscTerm(ysctx *ctx);

void ystmInit(ysctx *ctx);
void ystmIdler(dvoid *usrp, CONST ysid *exid, dvoid *arg, size_t argsz);

void ysEvtInit(ysctx *ctx);
void ysEvtTerm(ysctx *ctx);

void ysLogInit(ysctx *ctx);
void ysLogTerm(ysctx *ctx);

void ysMsgInit(ysctx *ctx);
void ysMsgTerm(ysctx *ctx);

void ysBlock(void);
boolean ysIdle(void);
void ysEnterCR(void);
void ysExitCR(void);
void ysIntrHandle(ysctx *ctx);

void ysThrYield(void);

#endif 
