/* mx/src/ys/ysrprs.c */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YS_ORACLE
#include <ys.h>
#endif
#ifndef YSI_ORACLE
#include <ysi.h>
#endif

STATICF boolean ysResPrs(CONST char *nm, sword ln, CONST char *res,
			 boolean dflt);


boolean ysResParse(CONST char *nm, sword ln, CONST char *res)
{
  return ysResPrs(nm, ln, res, FALSE);
}


void ysResDefaults(char **dflts)
{
  sword ln = 1;

  while (*dflts)
    {
      DISCARD ysResPrs("defaults", ln++, *dflts, TRUE);
      dflts++;
    }
}


STATICF boolean ysResPrs(CONST char *nm, sword ln, CONST char *res,
			 boolean dflt)
{
  char   *buf;
  boolean fst;
  CONST char *scc, *msg;

  
  while (isspace(*res))
    res++;

  
  if (*res == '#' || !*res)
    return TRUE;

  
  scc = res;
  fst = (*scc != '*');
  do
    {
      if (!fst)
	scc++;

      fst = TRUE;
      while (isalpha(*scc) || isdigit(*scc) || *scc == '_' || *scc == '-')
	scc++, fst = FALSE;

      if (fst)
	break;
    }
  while (*scc == '.' || *scc == '*');

  
  while (isspace(*scc))
    scc++;

  
  if (!*scc)
    msg = "separator not found";
  else if (*scc != '=' && *scc != ':')
    msg = "syntax error in resource name";
  else
    {
      msg = (char *) 0;
      buf = (char *) ysmGlbAlloc(scc - res + 1, "temp");
      DISCARD memcpy((dvoid *) buf, res, scc - res);
      buf[scc - res] = '\0';

      
      do
	scc++;
      while (isspace(*scc));

      if (!dflt || !ysResGet(buf))
	ysResSet(buf, scc);

      ysmGlbFree((dvoid *) buf);
    }

  
  if (msg)
    {
      if (nm)
	yslError("%s:%d: %s", nm, ln, msg);
      else
	yslError("%s: %s", ysProgName(), msg);
      return FALSE;
    }
  else
    return TRUE;
}
