/* mx/src/yc/yci0.h */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef YCI0_ORACLE
#define YCI0_ORACLE

#ifndef YC_ORACLE
#include <yc.h>
#endif
#ifndef YCC0_ORACLE
#include <ycc0.h>
#endif


ycgmap* yciLangMap(ycctx *ctx);
void yciGenSysIncls(ycctx* ctx, yccfp* fp, boolean impl);
void yciGenTypeCodeDecl(ycctx* ctx, yccfp* fp, CONST char* name, boolean defn);
void yciGenFuncHdr( ycctx* ctx, yccfp* fp, yrobj* rettype, yrobj* intf,
	CONST char* funcName, yslst* params, boolean fptr, boolean async);
void yciGenCopyFree( ycctx* ctx, yccfp* fp, yrobj* type, boolean defn);
boolean yciIsAnonymous( ycctx* ctx, yrobj* type);
void yciGenTypeCodeMacro( ycctx* ctx, yccfp* fp, CONST char* alias, 
                          yrobj* basetype);


void yciPrtTypeName(ycctx *ctx, yccfp *fp, yrobj *type, sword fmt);
void ycihdr(ycctx *ctx, char *base, ycfile* fd);
void yciGenDecl(ycctx* ctx, yccfp* fp, yrobj* obj, boolean fwd);
void yciGenConstDecl(ycctx *ctx, yccfp *fp, yrobj *obj);
void yciGenIntfDecl(ycctx* ctx, yccfp* fp, yrobj* intf, boolean fwd);
void yciGenExDecl( ycctx* ctx, yccfp* fp, yrobj* ex, boolean fwd);
void yciGenStructDecl( ycctx* ctx, yccfp* fp, yrobj* sobj, boolean fwd);
void yciGenUnionDecl( ycctx* ctx, yccfp* fp, yrobj* uobj, boolean fwd);
void yciGenField( ycctx* ctx, yccfp* fp, yrobj* type, CONST char* name);
void yciGenAliasDecl(ycctx* ctx, yccfp* fp, yrobj* alias, boolean fwd);
void yciGenEnumDecl(ycctx* ctx, yccfp* fp, yrobj* eobj, boolean fwd);
void yciGenSequenceDecl(ycctx* ctx, yccfp* fp, yrobj* seq);
void yciGenArrayDecl(ycctx* ctx, yccfp* fp, yrobj* arr);
void yciGenAttrDecl(ycctx* ctx, yccfp* fp, yrobj* attr, boolean fptr);
void yciGenOpDecl(ycctx* ctx, yccfp* fp, yrobj* op, boolean fptr);
void yciGenParam( ycctx* ctx, yccfp* fp, yrpar* par);
void yciGenObjParam( ycctx* ctx, yccfp* fp, yrobj* intf);
void yciGenParamType( ycctx* ctx, yccfp* fp, yrobj* type, sword mode);


void yciclnt( ycctx* ctx, char* base, ycfile* fd);


void yciGenTypeCodeName( ycctx* ctx, yccfp* fp, yrobj* type);

#endif 
