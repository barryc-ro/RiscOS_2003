/* mx/src/mn/mnsc.h */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef MNSC_ORACLE
#define MNSC_ORACLE

#ifndef SX_ORACLE
#include <sx.h>
#endif
#ifndef MN_ORACLE
#include <mn.h>
#endif
#ifndef MNRC_ORACLE
#include <mnrc.h>
#endif




typedef struct mnsqent mnsqent;                               
typedef struct mnscent mnscent;                           
typedef struct mnsient mnsient;                       
typedef struct mnshinf mnshinf;	 

externref const mnrid mnscPid;
externref const mnrid mnscCid;


#define MNSC_PAUSE      1                     
#define MNSC_REGISTER   2                          
#define MNSC_CALLGET    3                    
#define MNSC_CALLFWD    4                     
#define MNSC_PAUSENEXT  5   
#define MNSC_STOPNEXT   6  
#define MNSC_STOP       7       
#define MNSC_CALLFWD_PAUSENEXT	8	


#define MNSC_DAEMON 0x01 


struct mnsqent
{
  mnsqent    *next;                                   

  const char *name;                                       
  mnrid       progid;                       
  sb4         status;                                     
  ub4         flags;                                       
  mnp        *cport;                                 
  mnp        *iport;                               
  mna         caddr;                              
  mna         iaddr;                            
  ub4	      qlenlim;		     
  ub4	      exectim;		       

  ub4         regcur;                   
  ub4         regavg;                   
  ub4         regmax;                         
  ub4         regtot;                                  

  ub4         reglo;                            
  ub4         reghi;                           

  ub4         cllcur;                       
  ub4         cllavg;                 
  ub4         cllmax;                 
  ub4         clltot;                    

  ub4         quecur;                                
  ub4         queavg;                                
  ub4         quemax;                                
  ub4         quedel;                

  mnscent    *calls;                                
  mnsient    *instances;                     
  mnshinf    *hosts;	 
};


struct mnscent
{
  mnscent *next;                                  

  mna      addr;                                          
  ub4      arrival;                                       

  ub1     *buf;                                        
  ub4      len;                                      
};


struct mnsient
{
  mnsient *next;                              

  mnsqent *queue;                               
  sb4      status;                                        
  mna      addr;                               
  ub4      cllget;        
  ub4      cllfwd;           
  ub4      clltot;           
  ub4      clldel;           
  mna      origaddr;          
};


struct mnshinf
{
  char    *hostname;					     
  ub2      started;	    
  mnshinf *next;
};

sb4 mnsRegister(mnrb *bh, CONST char *name, CONST mnrid *progid, mna *addr);
sb4 mnsGetNext(mnrb *bh, mna *addr);
sb4 mnsUnregister(mnrb *bh, mna *addr);
sb4 mnsPause(mnrb *bh, mna *addr, boolean pause);
sb4 mnsStop(mnrb *bh, mna *addr);
sb4 mnsQuery(mnrb *bh, mnxStream *stream, ub4 *clock);

boolean mnsxQent(mnx *, dvoid *);
boolean mnsxCent(mnx *, dvoid *);
boolean mnsxIent(mnx *, dvoid *);





#endif 
