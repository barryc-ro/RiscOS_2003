/* mx/src/mn/mnrid.c */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/



#ifndef SYSI_ORACLE
#include <sysi.h>
#endif

#ifndef SMN_ORACLE
#include <smn.h>
#endif

#ifndef YS_ORACLE
#include <ys.h>
#endif

#ifndef YSR_ORACLE
#include <ysr.h>
#endif

#ifndef MTL_ORACLE
#include <mtl.h>
#endif

#ifndef SMNI_ORACLE
#include <smni.h>
#endif

static struct ysargmap mnridArgs[] =
{
  { 'c', "mnrid.oracle=true", 0 },
  { YSARG_PARAM, "mnrid.symbol", 1 },
  { 0 }
};

void printid(ub4 hi, ub4 lo, char *buf, boolean cs);

boolean mnridMain(dvoid *osdCtx, const char *nm, sword argc, char **argv)
{
  ub4     hi, lo;
  char    buf[128], *sym;
  boolean cs;
  sword   sts;

  
  cs = FALSE;

  sts = ysArgParse( argc, argv, mnridArgs );
  if (sts == YSARG_VERSION)
    yslError(ysVersion(buf, sizeof(buf)));
  if (sts != YSARG_NORMAL)
    return FALSE;

  if( ysResGetLast( "mnrid.oracle" ) )
    cs = TRUE;

  if( !(sym = ysResGetLast( "mnrid.symbol" ) ) )
  {
    mtlLog("Must specify symbol to generate an id for");
    return( FALSE );
  }

  
  hi = 0;
  if (!hi)
    hi = ~smnClock();

  lo = smnClock();

  
  sprintf(buf, "%sPid", sym);
  printid(hi, lo, buf, cs);
  sprintf(buf, "%sCid", sym);
  printid(hi, lo + 1, buf, cs);

  return( TRUE );
}

void printid(ub4 hi, ub4 lo, char *buf, boolean cs)
{
  ub4 i;

  if (cs)
    yslPrint("externdef CONST_DATA ");
  else
    yslPrint("const ");

  yslPrint("mnrid %s =\n  { { ", buf);

  for (i = 0; i < 4; i++)
    {
      yslPrint("%d, ", hi & 0xff);
      hi >>= 8;
    }

  for (i = 0; i < 4; i++)
    {
      yslPrint("%d%c ", lo & 0xff, (i < 3 ? ',' : ' '));
      lo >>= 8;
    }

  yslPrint("}, MNVERS(1, 0) };\n");
}
