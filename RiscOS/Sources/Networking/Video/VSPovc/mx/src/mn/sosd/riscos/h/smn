/* Copyright (c) 1994 by Oracle Corporation.  All Rights Reserved.
 *
 * smn.h - OMN Virtual O/S (Sparc version w/ gcc)
 *
 * DESCRIPTION
 * This header file defines the virtual O/S that OMN requires for all
 * platforms.
 *
 * REVISIONS
 * bholroyd  01/23/95  Added smnGetHostName()
 * jolkin    09/01/94  Creation of Version 2.1
 * jolkin    04/20/94  Creation of Version 2.0
 *
 * RISCOS port
 */

#ifndef SMN_ORACLE
#define SMN_ORACLE

/*
 * Modular Subtraction
 *
 * SYNOPSIS
 * sb4 smnModSub(sb4 v1, sb4 v2);
 *
 * DESCRIPTION
 * This routine must return the difference between v1 and v2 using signed
 * 32-bit modulo arithmetic.  32-bit two's complement arithmetic will
 * always produce the correct result.  In any case, the following
 * subtractions must produce the indicated results:
 *    smnModSub(0x00000003, 0xfffffff7) == 12
 *    smnModSub(0x80000000, 0x7fffffff) == 1
 */
#define smnModSub(v1, v2)  ((v1) - (v2))

/*
 * Representation Conversion Functions
 *
 * SYNOPSIS
 * ub2 smnHton2(ub2 val);
 * ub4 smnHton4(ub4 val);
 * ub2 smnNtoh2(ub2 val);
 * ub4 smnNtoh4(ub4 val);
 *
 * DESCRIPTION
 * These routines convert between host- and network-byte order.
 * The smnHton*() routines convert from a host to a network
 * representation.  The smnNtoh*() routines convert from a
 * network to a host representation.
 *
 * NOTES
 * OMN assumes that these routines may be used on signed or unsigned
 * integers.
 */

/* 2 bytes = RiscOS short, 4 bytes = RiscOS long */
#define smnHton2(x)  htons(x)
#define smnHton4(x)  htonl(x)
#define smnNtoh2(x)  ntohs(x)
#define smnNtoh4(x)  ntohl(x)

#endif /* SMN_ORACLE */
