/* mx/inc/yeevent.idl */


/*
ORACLE, Copyright (c) 1982, 1983, 1986, 1990 ORACLE Corporation
ORACLE Utilities, Copyright (c) 1981, 1982, 1983, 1986, 1990, 1991 ORACLE Corp

Restricted Rights
This program is an unpublished work under the Copyright Act of the
United States and is subject to the terms and conditions stated in
your  license  agreement  with  ORACORP  including  retrictions on
use, duplication, and disclosure.

Certain uncopyrighted ideas and concepts are also contained herein.
These are trade secrets of ORACORP and cannot be  used  except  in
accordance with the written permission of ORACLE Corporation.
*/





#ifndef YEEVENT_ORACLE
#define YEEVENT_ORACLE

#ifndef YOSTD_ORACLE
#include "yostd.idl"
#endif




interface yeevDiscList;
interface yeevReceiver;
interface yeev;


typedef sb8 yeevTimestamp;

typedef sequence <any> yeevSeqAny;
typedef sequence <yeev> yeevList;
typedef sequence <yeevReceiver> yeevReceiverList;

struct yeevr
{
  yeev	    orig_yeevr;		  ub4	    origseq_yeevr;	  yeevTimestamp	origtime_yeevr;	  string    orighost_yeevr;	  string    origpid_yeevr;	  string    origaff_yeevr;	  string    origprog_yeevr;	  yeev	    forw_yeevr;		  ub4	    hops_yeevr;		  string    prod_yeevr;		  string    fac_yeevr;		  ub4	    msgid_yeevr;	  ub4	    sev_yeevr;		  string    assoc_yeevr;	  any	    val_yeevr;		};

typedef sequence <yeevr> yeevrList;

struct yeevd
{
  string	qual_yeevd;	  yeevReceiver	dest_yeevd;	};

typedef sequence <yeevd> yeevdSeq;

struct yeevInfo
{
  string    host_yeevInfo;
  string    pid_yeevInfo;
  string    affinity_yeevInfo;
  string    prog_yeevInfo;

  ub4	nevent_yeevInfo;	  ub4	npush_yeevInfo;		  ub4	npushm_yeevInfo;	  ub4	npull_yeevInfo;		  ub4	ntpull_yeevInfo;	  ub4	npullm_yeevInfo;	  ub4	ntpullm_yeevInfo;	  ub4	nlimits_yeevInfo;	  ub4	ndropped_yeevInfo;	};

    
exception yeevYsLogEvent
{
  ub4		seqid;		  yeevSeqAny	vals;		};


exception yeev_not_same_dest { };
exception yeev_qual_invalid { string qual; };



interface yeevDiscList
{
        
      readonly attribute yeevdSeq dlist;
    
    readonly attribute ub4 numEntries;

        
    void destroy();

    void replace( in yeevdSeq newSeq )
    raises( yeev_qual_invalid );

    void append( in yeevdSeq ds )
    raises( yeev_qual_invalid );

    void remove( in yeevd evd );

    void listDest( in yeevReceiver dest, out yeevdSeq ds );

        void replaceDest( in yeevdSeq newSeq )
    raises( yeev_not_same_dest, yeev_qual_invalid);

    void destroyDest( in yeevReceiver dest );
};

interface yeevReceiver
{
        
    readonly attribute string name;

        
    void destroy();

    oneway void push( in yeevr rec );
  oneway void pushMany( in yeevrList recs );

      void pull( out yeevr rec );
  void pullMany( out yeevrList recs );

    boolean tryPull( out yeevr rec );
  boolean tryPullMany( out yeevrList recs );
};

interface yeev
{
      
  readonly attribute yeevInfo info;

    readonly attribute yeevReceiverList receivers;

    attribute yeevDiscList filters;

    attribute boolean limit_drop;

        attribute ub4 globalEventHighWater;
    
        attribute ub4 globalEventRestart;

        
          yeevReceiver createReceiver( in string name );
			   
    yeevDiscList createDiscList( in yeevdSeq dlist );

      void raise( in yeevr rec );
  void raiseMany( in yeevrList recs );

    void forward( in yeevr rec );
};

#endif                                                          
