/* Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
 *
 * yrtypes.h - Oracle MOOSE Interface Repository type declarations
 *
 * NOTES
 * These typedefs are extracted from yr.h to break a circular dependency
 * between yr.h and yotk.h
 *
 * HISTORY
 * 08/02/95 kcoleman	Added operations on yrid's
 * 07/20/95 kcoleman	Extracted from yr.h
 */
#ifndef YRTYPES_ORACLE
#define YRTYPES_ORACLE

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif

EXTC_START

/*
 * yrdk - Interface Repository Definition Kinds
 *
 * Enumerated in yr.h. Equates to CORBA::DefinitionKind and
 * represents the kinds of objects the IFR can contain.
 */
typedef ub4 yrdk;

/*
 * yrpk - Interface Repository Primitive Type Kinds
 *
 * Enumerated in yr.h. Equates to CORBA::PrimitiveKind and
 * represents the various types of yrdkPrimitive objects.
 * Enumerates the IDL builtin type like long, unsigned, any, etc.
 */
typedef ub4 yrpk;

/*
 * Interface Repository Object Components
 *
 * These are all defined in yr.h. Yrobj is the fundamental IFR
 * object. It represents both CORBA::Contained and CORBA::Container
 * types. Yrobj's have further type-specific sub-components.
 * Each decl below is tagged with it's corresponding CORBA type name.
 */
typedef struct yrobj yrobj;		/* Contained/Container */
typedef struct yrconst yrconst;		/* ConstantDef */
typedef struct yrstruct yrstruct;	/* StructDef */
typedef struct yrstrmbr yrstrmbr;	/* StructMemberSeq */
typedef struct yrunion yrunion;		/* UnionDef */
typedef struct yrunmbr yrunmbr;		/* UnionMemberSeq */
typedef struct yrenum yrenum;		/* EnumDef */
typedef struct yralias yralias;		/* AliasDef (typedefs) */
typedef struct yrstring yrstring;	/* StringDef */
typedef struct yrseq yrseq;		/* SequenceDef */
typedef struct yrarray yrarray;		/* ArrayDef */
typedef struct yrattr yrattr;		/* AttributeDef */
typedef struct yrop yrop;		/* OperationDef */
typedef struct yrpar yrpar;		/* ParameterDescription */
typedef struct yrintf yrintf;		/* InterfaceDef */
typedef struct yrprim yrprim;		/* PrimitiveDef */

/*
 * yrid - Repository Id
 *
 * Every object in the repository must have a unique ID. Id's are assigned
 * by the repository. Equivalent to CORBA::RepositoryId.
 *
 * Use yridDecl to generate correct yrid declarations, yridEq to compare
 * two yrid's, and yridToStr to convert a yrid to a printable string. Do
 * not attempt to free the storage returned by yridToStr.
 *
 * boolean yridEq( CONST yrid* id1, CONST yrid* id2);
 * CONST char* yridToStr( CONST yrid* id);
 */
typedef char yrid;
#define yridDecl(nm)      CONST_DATA yrid nm[]
#define yridEq(id1, id2)  (!strcmp((CONST char *) (id1), (CONST char *) (id2)))
#define yridToStr(id)     ((CONST char *) (id))

EXTC_END
#endif /* YRTYPES_ORACLE */
