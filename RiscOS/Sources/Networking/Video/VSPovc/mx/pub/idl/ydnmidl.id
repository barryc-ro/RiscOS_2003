// Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
//
// ydnmidl.idl - Interface to CORBA name service, with name changes.

#include "yostd/idl"

interface ydnmNamingContext;
interface ydnmBindingIterator;

struct ydnmNameComponent
{
  string id;
  string kind;
};
typedef sequence <ydnmNameComponent> ydnmName;

enum ydnmBindingType {ydnmObject, ydnmContext};

struct ydnmBinding
{
  ydnmNameComponent name_ydnmBinding;
  ydnmBindingType   type_ydnmBinding;
};
typedef sequence <ydnmBinding> ydnmBindingList;

enum ydnmNotFoundReason {missing_node, not_context, not_object};
exception ydnmNotFound
{
  ydnmNotFoundReason why_ydnmNotFound;
  ydnmName rest_ydnmNotFound;
};

exception ydnmCannotProceed
{
  ydnmNamingContext ctx_ydnmCannotProceed;
  ydnmName rest_ydnmCannotProceed;
};

exception ydnmInvalidName {}; 
exception ydnmAlreadyBound {};
exception ydnmNotEmpty {};

interface ydnmInitialNamingContext
{
  ydnmNamingContext get();
};  

interface ydnmNamingContext
{
  void bind(in ydnmName n, in Object obj)
    raises(ydnmNotFound,ydnmCannotProceed,ydnmInvalidName,ydnmAlreadyBound);
  void rebind(in ydnmName n, in Object obj)
    raises(ydnmNotFound,ydnmCannotProceed,ydnmInvalidName);
  void bind_context(in ydnmName n, in Object obj)
    raises(ydnmNotFound,ydnmCannotProceed,ydnmInvalidName,ydnmAlreadyBound);
  Object resolve(in ydnmName n)
    raises(ydnmNotFound,ydnmCannotProceed,ydnmInvalidName);
  Object unbind(in ydnmName n)
    raises(ydnmNotFound,ydnmCannotProceed,ydnmInvalidName);
  ydnmNamingContext new_context();
  ydnmNamingContext bind_new_context(in ydnmName n)
    raises(ydnmNotFound,ydnmCannotProceed,ydnmInvalidName);
  void destroy()
    raises(ydnmNotEmpty);
  void list(in ub4 count, out ydnmBindingList bl, out ydnmBindingIterator bi);
};

interface ydnmBindingIterator
{
  boolean next_one(out ydnmBinding b);
  boolean next_n(in ub4 count, out ydnmBindingList bl);
  void destroy();
};
