/* GENERATED FILE
 * yoevt - server stubs
 * from <Obey$Dir>.yoevt/idl
 */

#ifndef YO_ORACLE
#include <yo.h>
#endif

#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif
#include "c.yoevtC"

EXTC_START

/* Server stubs for interface ::yoevtc */
static void yoevtc_cancel_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yoevtc_cancel_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yoevtc__tyimpl*)impldef)->cancel)( (yoevtc)or, ev);
}

yostub* yoevtc__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*1), "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "cancel";
  _stubs[0].parms = yoevtc_cancel_pars;
  _stubs[0].oper = yoevtc_cancel_s;
  _stubs[1].opernm = (const char*)0;
  _stubs[1].parms = (yopar*)0;
  _stubs[1].oper = (void (*)(void *,yoenv*,void *,void **))0;

  return _result;
}

/* Server stubs for interface ::yoevt */
static void yoevt_trigger_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yoevt_trigger_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yoevt__tyimpl*)impldef)->trigger)( (yoevt)or, ev,*(char**)args[0],(yoany*)args[1]);
}

static void yoevt_setCancel_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yoevt_setCancel_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yoevt__tyimpl*)impldef)->setCancel)( (yoevt)or, ev,*(yoevtc*)args[0]);
}

yostub* yoevt__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*2), "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "trigger";
  _stubs[0].parms = yoevt_trigger_pars;
  _stubs[0].oper = yoevt_trigger_s;
  _stubs[1].opernm = "setCancel";
  _stubs[1].parms = yoevt_setCancel_pars;
  _stubs[1].oper = yoevt_setCancel_s;
  _stubs[2].opernm = (const char*)0;
  _stubs[2].parms = (yopar*)0;
  _stubs[2].oper = (void (*)(void *,yoenv*,void *,void **))0;

  return _result;
}


EXTC_END
