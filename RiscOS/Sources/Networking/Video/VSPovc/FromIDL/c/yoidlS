/* GENERATED FILE
 * yoidl - server stubs
 * from <Obey$Dir>.yoidl/idl
 */

#ifndef YO_ORACLE
#include <yo.h>
#endif

#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif
#include "c.yoidlC"

EXTC_START

/* Server stubs for interface ::yort::proc */
static void yort_proc_getImplAll_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc_getImplAll_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->getImplAll)( (yort_proc)or, ev,*(yort_implFlags*)args[0],(yort_procInfo*)args[1],(yort_dispInfoList*)args[2],(yort_implAllList*)args[3]);
}

static void yort_proc_getResource_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc_getResource_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->getResource)( (yort_proc)or, ev,*(char**)args[0],(yostd_stringList*)args[1]);
}

static void yort_proc_setResource_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc_setResource_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->setResource)( (yort_proc)or, ev,*(char**)args[0],(yostd_stringList*)args[1]);
}

static void yort_proc_setAdminState_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc_setAdminState_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->setAdminState)( (yort_proc)or, ev,*(yort_procState*)args[0]);
}

static void yort_proc_exists_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc_exists_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(boolean*)args[0] = (*((struct yort_proc__tyimpl*)impldef)->exists)( (yort_proc)or, ev,*(CORBA_Object*)args[1]);
}

static void yort_proc_getIiopExtAddr_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc_getIiopExtAddr_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_proc__tyimpl*)impldef)->getIiopExtAddr)( (yort_proc)or, ev,(char**)args[0],(ub2*)args[1]);
}

static void yort_proc__get_resources_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc__get_resources_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_resourceList*)args[0] = (*((struct yort_proc__tyimpl*)impldef)->_get_resources)( (yort_proc)or, ev);
}

static void yort_proc__get_impls_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc__get_impls_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_implList*)args[0] = (*((struct yort_proc__tyimpl*)impldef)->_get_impls)( (yort_proc)or, ev);
}

static void yort_proc__get_queues_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc__get_queues_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_queueList*)args[0] = (*((struct yort_proc__tyimpl*)impldef)->_get_queues)( (yort_proc)or, ev);
}

static void yort_proc__get_dispatchers_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc__get_dispatchers_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_dispatcherList*)args[0] = (*((struct yort_proc__tyimpl*)impldef)->_get_dispatchers)( (yort_proc)or, ev);
}

static void yort_proc__get_pInfo_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_proc__get_pInfo_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_procInfo*)args[0] = (*((struct yort_proc__tyimpl*)impldef)->_get_pInfo)( (yort_proc)or, ev);
}

yostub* yort_proc__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*11), "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "getImplAll";
  _stubs[0].parms = yort_proc_getImplAll_pars;
  _stubs[0].oper = yort_proc_getImplAll_s;
  _stubs[1].opernm = "getResource";
  _stubs[1].parms = yort_proc_getResource_pars;
  _stubs[1].oper = yort_proc_getResource_s;
  _stubs[2].opernm = "setResource";
  _stubs[2].parms = yort_proc_setResource_pars;
  _stubs[2].oper = yort_proc_setResource_s;
  _stubs[3].opernm = "setAdminState";
  _stubs[3].parms = yort_proc_setAdminState_pars;
  _stubs[3].oper = yort_proc_setAdminState_s;
  _stubs[4].opernm = "exists";
  _stubs[4].parms = yort_proc_exists_pars;
  _stubs[4].oper = yort_proc_exists_s;
  _stubs[5].opernm = "getIiopExtAddr";
  _stubs[5].parms = yort_proc_getIiopExtAddr_pars;
  _stubs[5].oper = yort_proc_getIiopExtAddr_s;
  _stubs[6].opernm = "_get_resources";
  _stubs[6].parms = yort_proc__get_resources_pars;
  _stubs[6].oper = yort_proc__get_resources_s;
  _stubs[7].opernm = "_get_impls";
  _stubs[7].parms = yort_proc__get_impls_pars;
  _stubs[7].oper = yort_proc__get_impls_s;
  _stubs[8].opernm = "_get_queues";
  _stubs[8].parms = yort_proc__get_queues_pars;
  _stubs[8].oper = yort_proc__get_queues_s;
  _stubs[9].opernm = "_get_dispatchers";
  _stubs[9].parms = yort_proc__get_dispatchers_pars;
  _stubs[9].oper = yort_proc__get_dispatchers_s;
  _stubs[10].opernm = "_get_pInfo";
  _stubs[10].parms = yort_proc__get_pInfo_pars;
  _stubs[10].oper = yort_proc__get_pInfo_s;
  _stubs[11].opernm = (const char*)0;
  _stubs[11].parms = (yopar*)0;
  _stubs[11].oper = (void (*)(void *,yoenv*,void *,void **))0;

  return _result;
}

/* Server stubs for interface ::yort::impl */
static void yort_impl_getAll_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_impl_getAll_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_impl__tyimpl*)impldef)->getAll)( (yort_impl)or, ev,(yort_implInfo*)args[0],(yort_methodInfoList*)args[1],(yort_queueInfo*)args[2]);
}

static void yort_impl_setAdminState_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_impl_setAdminState_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_impl__tyimpl*)impldef)->setAdminState)( (yort_impl)or, ev,*(yort_svcState*)args[0]);
}

static void yort_impl__get_info_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_impl__get_info_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_implInfo*)args[0] = (*((struct yort_impl__tyimpl*)impldef)->_get_info)( (yort_impl)or, ev);
}

static void yort_impl__get_methods_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_impl__get_methods_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_methodInfoList*)args[0] = (*((struct yort_impl__tyimpl*)impldef)->_get_methods)( (yort_impl)or, ev);
}

static void yort_impl__get_qinfo_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_impl__get_qinfo_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_queueInfo*)args[0] = (*((struct yort_impl__tyimpl*)impldef)->_get_qinfo)( (yort_impl)or, ev);
}

yostub* yort_impl__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*5), "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "getAll";
  _stubs[0].parms = yort_impl_getAll_pars;
  _stubs[0].oper = yort_impl_getAll_s;
  _stubs[1].opernm = "setAdminState";
  _stubs[1].parms = yort_impl_setAdminState_pars;
  _stubs[1].oper = yort_impl_setAdminState_s;
  _stubs[2].opernm = "_get_info";
  _stubs[2].parms = yort_impl__get_info_pars;
  _stubs[2].oper = yort_impl__get_info_s;
  _stubs[3].opernm = "_get_methods";
  _stubs[3].parms = yort_impl__get_methods_pars;
  _stubs[3].oper = yort_impl__get_methods_s;
  _stubs[4].opernm = "_get_qinfo";
  _stubs[4].parms = yort_impl__get_qinfo_pars;
  _stubs[4].oper = yort_impl__get_qinfo_s;
  _stubs[5].opernm = (const char*)0;
  _stubs[5].parms = (yopar*)0;
  _stubs[5].oper = (void (*)(void *,yoenv*,void *,void **))0;

  return _result;
}

/* Server stubs for interface ::yort::queue */
static void yort_queue_setName_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_queue_setName_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_queue__tyimpl*)impldef)->setName)( (yort_queue)or, ev,*(char**)args[0]);
}

static void yort_queue_shutdownDispatchers_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_queue_shutdownDispatchers_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_queue__tyimpl*)impldef)->shutdownDispatchers)( (yort_queue)or, ev);
}

static void yort_queue__get_info_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_queue__get_info_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_queueInfo*)args[0] = (*((struct yort_queue__tyimpl*)impldef)->_get_info)( (yort_queue)or, ev);
}

yostub* yort_queue__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*3), "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "setName";
  _stubs[0].parms = yort_queue_setName_pars;
  _stubs[0].oper = yort_queue_setName_s;
  _stubs[1].opernm = "shutdownDispatchers";
  _stubs[1].parms = yort_queue_shutdownDispatchers_pars;
  _stubs[1].oper = yort_queue_shutdownDispatchers_s;
  _stubs[2].opernm = "_get_info";
  _stubs[2].parms = yort_queue__get_info_pars;
  _stubs[2].oper = yort_queue__get_info_s;
  _stubs[3].opernm = (const char*)0;
  _stubs[3].parms = (yopar*)0;
  _stubs[3].oper = (void (*)(void *,yoenv*,void *,void **))0;

  return _result;
}

/* Server stubs for interface ::yort::dispatcher */
static void yort_dispatcher_setAdminState_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_dispatcher_setAdminState_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  (*((struct yort_dispatcher__tyimpl*)impldef)->setAdminState)( (yort_dispatcher)or, ev,*(yort_svcState*)args[0]);
}

static void yort_dispatcher__get_dinfo_s( void * or, yoenv* ev, void * impldef, void ** args);

static void yort_dispatcher__get_dinfo_s( void * or, yoenv* ev, void * impldef, void ** args)
{
  *(yort_dispInfo*)args[0] = (*((struct yort_dispatcher__tyimpl*)impldef)->_get_dinfo)( (yort_dispatcher)or, ev);
}

yostub* yort_dispatcher__getStubs(void)
{
  yostub* _result;
  yostbb* _stubs;

  _result = (yostub*) ysmGlbAlloc( sizeof(yostub)+(sizeof(yostbb)*2), "yostubs");
  _result->widen = (yowiden)0;
  _result->bases = (const char**)0;
  _stubs = &(_result->stuba[0]);

  _stubs[0].opernm = "setAdminState";
  _stubs[0].parms = yort_dispatcher_setAdminState_pars;
  _stubs[0].oper = yort_dispatcher_setAdminState_s;
  _stubs[1].opernm = "_get_dinfo";
  _stubs[1].parms = yort_dispatcher__get_dinfo_pars;
  _stubs[1].oper = yort_dispatcher__get_dinfo_s;
  _stubs[2].opernm = (const char*)0;
  _stubs[2].parms = (yopar*)0;
  _stubs[2].oper = (void (*)(void *,yoenv*,void *,void **))0;

  return _result;
}


EXTC_END
