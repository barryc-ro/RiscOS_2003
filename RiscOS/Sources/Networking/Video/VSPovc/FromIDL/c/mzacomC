/* GENERATED FILE
 * mzacom - client stubs
 * from mzacom.idl
 */

#ifndef YO_ORACLE
#include <yo.h>
#endif

#ifndef MZACOM_IDL
#include <mzacom.h>
#endif

EXTC_START

static const yotk ObjLst__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x00,'t',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x0f,'I','D','L',':','O','b','j','L','s','t',
  ':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x09,':',':','O','b'
  ,'j','L','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00
  ,0x00,0x00,'D',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x00,
  0x00,0x00,'4',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D'
  ,'L',':','C','O','R','B','A','/','O','b','j','e','c','t',':'
  ,'1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':'
  ,'C','O','R','B','A',':',':','O','b','j','e','c','t',0x00,0x00
  ,0x00,0x00,0x00};

CONST yotk* ObjLst__getTC(void)
{
  return ObjLst__tc;
}

void ObjLst__free( ObjLst* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_ObjLst, (void *)val, ffunc);
}

void ObjLst__copy( ObjLst* dest, ObjLst* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_ObjLst, (void *)dest, (void *)src, afunc);
}

static const yotk Itr__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'L',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x0c,'I','D','L',':','I','t','r',':','1','.',
  '0',0x00,0x00,0x00,0x00,0x06,':',':','I','t','r',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x09,'P','o','s','i','t'
  ,'i','o','n',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00
  ,0x00,0x09,'N','u','m','I','t','e','m','s',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x03};

CONST yotk* Itr__getTC(void)
{
  return Itr__tc;
}

void Itr__free( Itr* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_Itr, (void *)val, ffunc);
}

void Itr__copy( Itr* dest, Itr* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_Itr, (void *)dest, (void *)src, afunc);
}

static const yotk mza_Itr__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x00,'|',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x10,'I','D','L',':','m','z','a','/','I','t',
  'r',':','1','.','0',0x00,0x00,0x00,0x00,0x0b,':',':','m','z'
  ,'a',':',':','I','t','r',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,
  0x00,0x00,'L',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,'I','D'
  ,'L',':','I','t','r',':','1','.','0',0x00,0x00,0x00,0x00,0x06
  ,':',':','I','t','r',0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00
  ,0x00,0x00,0x09,'P','o','s','i','t','i','o','n',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x09,'N','u','m','I'
  ,'t','e','m','s',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03};

CONST yotk* mza_Itr__getTC(void)
{
  return mza_Itr__tc;
}

static const yotk mza_opstatus__tc[] = 
  {0x00,0x00,0x00,0x11,0x00,0x00,0x00,'X',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x15,'I','D','L',':','m','z','a','/','o','p',
  's','t','a','t','u','s',':','1','.','0',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x10,':',':','m','z','a',':',':','o','p','s',
  't','a','t','u','s',0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
  0x0a,'c','o','m','p','l','e','t','e','d',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0c,'n','o','t','C','o','m','p','l','e','t','e',
  0x00};

CONST yotk* mza_opstatus__getTC(void)
{
  return mza_opstatus__tc;
}

void mza_opstatus__free( mza_opstatus* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_opstatus, (void *)val, ffunc);
}

void mza_opstatus__copy( mza_opstatus* dest, mza_opstatus* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_opstatus, (void *)dest, (void *)src, afunc);
}

static ysidDecl(mza_PersistenceError___id) = "IDL:mza/PersistenceError:1.0";

CONST ysid* mza_PersistenceError__getId(void)
{
  return (CONST ysid*)mza_PersistenceError___id;
}

static const yotk mza_PersistenceError__tc[] = 
  {0x00,0x00,0x00,0x16,0x00,0x00,0x01,0x08,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x1d,'I','D','L',':','m','z','a','/','P','e'
  ,'r','s','i','s','t','e','n','c','e','E','r','r','o','r',':'
  ,'1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,':',':'
  ,'m','z','a',':',':','P','e','r','s','i','s','t','e','n','c'
  ,'e','E','r','r','o','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,
  0x00,0x07,'s','t','a','t','u','s',0x00,0x00,0x00,0x00,0x00,0x11
  ,0x00,0x00,0x00,'X',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,
  'I','D','L',':','m','z','a','/','o','p','s','t','a','t','u',
  's',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,
  ':',':','m','z','a',':',':','o','p','s','t','a','t','u','s',
  0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0a,'c','o','m','p'
  ,'l','e','t','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0c,'n',
  'o','t','C','o','m','p','l','e','t','e',0x00,0x00,0x00,0x00,
  0x0c,'d','e','s','c','r','i','p','t','i','o','n',0x00,0x00,0x00
  ,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,'s','q','l'
  ,'c','o','d','e',0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x09
  ,'s','q','l','e','r','r','m','c',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,'e','r','r'
  ,'o','r','C','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x03}
  ;

CONST yotk* mza_PersistenceError__getTC(void)
{
  return mza_PersistenceError__tc;
}

void mza_PersistenceError__free( mza_PersistenceError* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_PersistenceError, (void *)val, ffunc);
}

void mza_PersistenceError__copy( mza_PersistenceError* dest, mza_PersistenceError* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_PersistenceError, (void *)dest, (void *)src, afunc);
}

static ysidDecl(mza_Internal___id) = "IDL:mza/Internal:1.0";

CONST ysid* mza_Internal__getId(void)
{
  return (CONST ysid*)mza_Internal___id;
}

static const yotk mza_Internal__tc[] = 
  {0x00,0x00,0x00,0x16,0x00,0x00,0x00,0xd0,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x15,'I','D','L',':','m','z','a','/','I','n'
  ,'t','e','r','n','a','l',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x10,':',':','m','z','a',':',':','I','n','t'
  ,'e','r','n','a','l',0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00
  ,0x07,'s','t','a','t','u','s',0x00,0x00,0x00,0x00,0x00,0x11,
  0x00,0x00,0x00,'X',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I'
  ,'D','L',':','m','z','a','/','o','p','s','t','a','t','u','s'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':'
  ,':','m','z','a',':',':','o','p','s','t','a','t','u','s',0x00
  ,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0a,'c','o','m','p','l'
  ,'e','t','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0c,'n','o',
  't','C','o','m','p','l','e','t','e',0x00,0x00,0x00,0x00,0x0c
  ,'d','e','s','c','r','i','p','t','i','o','n',0x00,0x00,0x00,
  0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,'e','r','r'
  ,'o','r','C','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x03}
  ;

CONST yotk* mza_Internal__getTC(void)
{
  return mza_Internal__tc;
}

void mza_Internal__free( mza_Internal* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_Internal, (void *)val, ffunc);
}

void mza_Internal__copy( mza_Internal* dest, mza_Internal* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_Internal, (void *)dest, (void *)src, afunc);
}

static ysidDecl(mza_DataConversion___id) = "IDL:mza/DataConversion:1.0";

CONST ysid* mza_DataConversion__getId(void)
{
  return (CONST ysid*)mza_DataConversion___id;
}

static const yotk mza_DataConversion__tc[] = 
  {0x00,0x00,0x00,0x16,0x00,0x00,0x00,0xf4,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x1b,'I','D','L',':','m','z','a','/','D','a'
  ,'t','a','C','o','n','v','e','r','s','i','o','n',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x00,0x16,':',':','m','z','a',':',':'
  ,'D','a','t','a','C','o','n','v','e','r','s','i','o','n',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x07,'s','t','a'
  ,'t','u','s',0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x00,'X'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':','m'
  ,'z','a','/','o','p','s','t','a','t','u','s',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m','z','a'
  ,':',':','o','p','s','t','a','t','u','s',0x00,0x00,0x00,0x00
  ,0x02,0x00,0x00,0x00,0x0a,'c','o','m','p','l','e','t','e','d'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,'n','o','t','C','o','m',
  'p','l','e','t','e',0x00,0x00,0x00,0x00,0x0c,'d','e','s','c'
  ,'r','i','p','t','i','o','n',0x00,0x00,0x00,0x00,0x12,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0e,'p','a','r','a','m','P','o','s'
  ,'i','t','i','o','n',0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00
  ,0x00,0x00,0x0a,'e','r','r','o','r','C','o','d','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x03};

CONST yotk* mza_DataConversion__getTC(void)
{
  return mza_DataConversion__tc;
}

void mza_DataConversion__free( mza_DataConversion* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_DataConversion, (void *)val, ffunc);
}

void mza_DataConversion__copy( mza_DataConversion* dest, mza_DataConversion* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_DataConversion, (void *)dest, (void *)src, afunc);
}

static ysidDecl(mza_NotImplemented___id) = "IDL:mza/NotImplemented:1.0";

CONST ysid* mza_NotImplemented__getId(void)
{
  return (CONST ysid*)mza_NotImplemented___id;
}

static const yotk mza_NotImplemented__tc[] = 
  {0x00,0x00,0x00,0x16,0x00,0x00,0x00,0xdc,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x1b,'I','D','L',':','m','z','a','/','N','o'
  ,'t','I','m','p','l','e','m','e','n','t','e','d',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x00,0x16,':',':','m','z','a',':',':'
  ,'N','o','t','I','m','p','l','e','m','e','n','t','e','d',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x07,'s','t','a'
  ,'t','u','s',0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x00,'X'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':','m'
  ,'z','a','/','o','p','s','t','a','t','u','s',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m','z','a'
  ,':',':','o','p','s','t','a','t','u','s',0x00,0x00,0x00,0x00
  ,0x02,0x00,0x00,0x00,0x0a,'c','o','m','p','l','e','t','e','d'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,'n','o','t','C','o','m',
  'p','l','e','t','e',0x00,0x00,0x00,0x00,0x0c,'d','e','s','c'
  ,'r','i','p','t','i','o','n',0x00,0x00,0x00,0x00,0x12,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0a,'e','r','r','o','r','C','o','d'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x03};

CONST yotk* mza_NotImplemented__getTC(void)
{
  return mza_NotImplemented__tc;
}

void mza_NotImplemented__free( mza_NotImplemented* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_NotImplemented, (void *)val, ffunc);
}

void mza_NotImplemented__copy( mza_NotImplemented* dest, mza_NotImplemented* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_NotImplemented, (void *)dest, (void *)src, afunc);
}

static ysidDecl(mza_XaException___id) = "IDL:mza/XaException:1.0";

CONST ysid* mza_XaException__getId(void)
{
  return (CONST ysid*)mza_XaException___id;
}

static const yotk mza_XaException__tc[] = 
  {0x00,0x00,0x00,0x16,0x00,0x00,0x00,0xd4,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x18,'I','D','L',':','m','z','a','/','X','a'
  ,'E','x','c','e','p','t','i','o','n',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x13,':',':','m','z','a',':',':','X','a','E','x',
  'c','e','p','t','i','o','n',0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x07,'s','t','a','t','u','s',0x00,0x00,0x00,0x00,
  0x00,0x11,0x00,0x00,0x00,'X',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x15,'I','D','L',':','m','z','a','/','o','p','s','t','a','t'
  ,'u','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x10,':',':','m','z','a',':',':','o','p','s','t','a','t','u'
  ,'s',0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0a,'c','o','m'
  ,'p','l','e','t','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0c,
  'n','o','t','C','o','m','p','l','e','t','e',0x00,0x00,0x00,0x00
  ,0x0c,'d','e','s','c','r','i','p','t','i','o','n',0x00,0x00,
  0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,'e','r'
  ,'r','o','r','C','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x03
  };

CONST yotk* mza_XaException__getTC(void)
{
  return mza_XaException__tc;
}

void mza_XaException__free( mza_XaException* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_XaException, (void *)val, ffunc);
}

void mza_XaException__copy( mza_XaException* dest, mza_XaException* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_XaException, (void *)dest, (void *)src, afunc);
}

static const yotk mza_svrId__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'X',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x12,'I','D','L',':','m','z','a','/','s','v',
  'r','I','d',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x0d
  ,':',':','m','z','a',':',':','s','v','r','I','d',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x05,'a','d','d','r'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x0a
  ,'c','a','l','l','_','t','i','m','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x17};

CONST yotk* mza_svrId__getTC(void)
{
  return mza_svrId__tc;
}

void mza_svrId__free( mza_svrId* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_svrId, (void *)val, ffunc);
}

void mza_svrId__copy( mza_svrId* dest, mza_svrId* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_svrId, (void *)dest, (void *)src, afunc);
}

static const yotk mza_otid_t__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x94,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x13,'I','D','L',':','m','z','a','/','o','t'
  ,'i','d','_','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e
  ,':',':','m','z','a',':',':','o','t','i','d','_','t',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x09,'f','o','r','m'
  ,'a','t','I','D',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x0d,'g','t','r','i','d','_','l','e','n','g','t',
  'h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0d
  ,'b','q','u','a','l','_','l','e','n','g','t','h',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x04,'t','i','d',0x00
  ,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x00};

CONST yotk* mza_otid_t__getTC(void)
{
  return mza_otid_t__tc;
}

void mza_otid_t__free( mza_otid_t* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_otid_t, (void *)val, ffunc);
}

void mza_otid_t__copy( mza_otid_t* dest, mza_otid_t* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_otid_t, (void *)dest, (void *)src, afunc);
}

static const yotk mza_transx__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x13,'I','D','L',':','m','z','a','/','t','r'
  ,'a','n','s','x',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e
  ,':',':','m','z','a',':',':','t','r','a','n','s','x',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x04,'X','I','D',0x00
  ,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x94,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x13,'I','D','L',':','m','z','a','/','o','t'
  ,'i','d','_','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e
  ,':',':','m','z','a',':',':','o','t','i','d','_','t',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x09,'f','o','r','m'
  ,'a','t','I','D',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x0d,'g','t','r','i','d','_','l','e','n','g','t',
  'h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0d
  ,'b','q','u','a','l','_','l','e','n','g','t','h',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x04,'t','i','d',0x00
  ,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e
  ,'m','z','a','X','a','c','t','S','t','a','t','u','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x0c,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00};

CONST yotk* mza_transx__getTC(void)
{
  return mza_transx__tc;
}

void mza_transx__free( mza_transx* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_transx, (void *)val, ffunc);
}

void mza_transx__copy( mza_transx* dest, mza_transx* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_transx, (void *)dest, (void *)src, afunc);
}


EXTC_END
