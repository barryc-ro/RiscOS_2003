/* GENERATED FILE
 * mzalgctn - client stubs
 * from <Obey$Dir>.mzalgctn/i
 */

#ifndef YO_ORACLE
#include <yo.h>
#endif

#ifndef MZALGCTN_IDL
#include <mzalgctn.h>
#endif

EXTC_START

static ysidDecl(mza_NoLgCtnt___id) = "IDL:mza/NoLgCtnt:1.0";

CONST ysid* mza_NoLgCtnt__getId(void)
{
  return (CONST ysid*)mza_NoLgCtnt___id;
}

static const yotk mza_NoLgCtnt__tc[] = 
  {0x00,0x00,0x00,0x16,0x00,0x00,0x00,0xd0,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x15,'I','D','L',':','m','z','a','/','N','o'
  ,'L','g','C','t','n','t',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x10,':',':','m','z','a',':',':','N','o','L'
  ,'g','C','t','n','t',0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00
  ,0x07,'s','t','a','t','u','s',0x00,0x00,0x00,0x00,0x00,0x11,
  0x00,0x00,0x00,'X',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I'
  ,'D','L',':','m','z','a','/','o','p','s','t','a','t','u','s'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':'
  ,':','m','z','a',':',':','o','p','s','t','a','t','u','s',0x00
  ,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0a,'c','o','m','p','l'
  ,'e','t','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0c,'n','o',
  't','C','o','m','p','l','e','t','e',0x00,0x00,0x00,0x00,0x0c
  ,'d','e','s','c','r','i','p','t','i','o','n',0x00,0x00,0x00,
  0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,'e','r','r'
  ,'o','r','C','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x03}
  ;

yotk* mza_NoLgCtnt__getTC(void)
{
  return (yotk*)mza_NoLgCtnt__tc;
}

void mza_NoLgCtnt__free( mza_NoLgCtnt* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_NoLgCtnt, (void *)val, ffunc);
}

void mza_NoLgCtnt__copy( mza_NoLgCtnt* dest, mza_NoLgCtnt* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_NoLgCtnt, (void *)dest, (void *)src, afunc);
}

static ysidDecl(mza_BadPosition___id) = "IDL:mza/BadPosition:1.0";

CONST ysid* mza_BadPosition__getId(void)
{
  return (CONST ysid*)mza_BadPosition___id;
}

static const yotk mza_BadPosition__tc[] = 
  {0x00,0x00,0x00,0x16,0x00,0x00,0x00,0xec,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x18,'I','D','L',':','m','z','a','/','B','a'
  ,'d','P','o','s','i','t','i','o','n',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x13,':',':','m','z','a',':',':','B','a','d','P',
  'o','s','i','t','i','o','n',0x00,0x00,0x00,0x00,0x00,0x04,0x00
  ,0x00,0x00,0x07,'s','t','a','t','u','s',0x00,0x00,0x00,0x00,
  0x00,0x11,0x00,0x00,0x00,'X',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x15,'I','D','L',':','m','z','a','/','o','p','s','t','a','t'
  ,'u','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x10,':',':','m','z','a',':',':','o','p','s','t','a','t','u'
  ,'s',0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0a,'c','o','m'
  ,'p','l','e','t','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0c,
  'n','o','t','C','o','m','p','l','e','t','e',0x00,0x00,0x00,0x00
  ,0x0c,'d','e','s','c','r','i','p','t','i','o','n',0x00,0x00,
  0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,'p','o'
  ,'s','i','t','i','o','n',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,'e','r','r','o'
  ,'r','C','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x03};

yotk* mza_BadPosition__getTC(void)
{
  return (yotk*)mza_BadPosition__tc;
}

void mza_BadPosition__free( mza_BadPosition* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_BadPosition, (void *)val, ffunc);
}

void mza_BadPosition__copy( mza_BadPosition* dest, mza_BadPosition* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_BadPosition, (void *)dest, (void *)src, afunc);
}

static ysidDecl(mza_BadProhib___id) = "IDL:mza/BadProhib:1.0";

CONST ysid* mza_BadProhib__getId(void)
{
  return (CONST ysid*)mza_BadProhib___id;
}

static const yotk mza_BadProhib__tc[] = 
  {0x00,0x00,0x00,0x16,0x00,0x00,0x00,0xe8,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x16,'I','D','L',':','m','z','a','/','B','a'
  ,'d','P','r','o','h','i','b',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x00,0x11,':',':','m','z','a',':',':','B','a','d',
  'P','r','o','h','i','b',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  ,0x00,0x00,0x00,0x07,'s','t','a','t','u','s',0x00,0x00,0x00,
  0x00,0x00,0x11,0x00,0x00,0x00,'X',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x15,'I','D','L',':','m','z','a','/','o','p','s','t','a'
  ,'t','u','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x10,':',':','m','z','a',':',':','o','p','s','t','a','t','u'
  ,'s',0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0a,'c','o','m'
  ,'p','l','e','t','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0c,
  'n','o','t','C','o','m','p','l','e','t','e',0x00,0x00,0x00,0x00
  ,0x0c,'d','e','s','c','r','i','p','t','i','o','n',0x00,0x00,
  0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,'p','r'
  ,'o','h','i','b',0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,'e','r','r','o','r','C','o','d','e'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x03};

yotk* mza_BadProhib__getTC(void)
{
  return (yotk*)mza_BadProhib__tc;
}

void mza_BadProhib__free( mza_BadProhib* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_BadProhib, (void *)val, ffunc);
}

void mza_BadProhib__copy( mza_BadProhib* dest, mza_BadProhib* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_BadProhib, (void *)dest, (void *)src, afunc);
}

static const yotk mza_ClipAtr__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x11,'(',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','z','a','/','C','l',
  'i','p','A','t','r',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','z','a',':',':','C','l','i','p','A','t','r',0x00
  ,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x07,'c','l','i','p'
  ,'O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,',',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x11,'I','D','L',':','m','z',
  'a','/','C','l','i','p',':','1','.','0',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x0c,':',':','m','z','a',':',':','C','l','i',
  'p',0x00,0x00,0x00,0x00,0x07,'c','t','n','t','O','R',0x00,0x00
  ,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,',',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x11,'I','D','L',':','m','z','a','/','C','t',
  'n','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c
  ,':',':','m','z','a',':',':','C','t','n','t',0x00,0x00,0x00,
  0x00,0x05,'n','a','m','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,'d','e','s','c'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x07,'c','t','n','t','N','m',0x00,0x00,0x00,
  0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,'s','t'
  ,'a','r','t','P','o','s',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x10,0x00,0x00,0x07,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x10,'I','D','L',':','m','k','d','/','p','o','s',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0b,':',':','m','k','d',':',':','p'
  ,'o','s',0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x01,0x20,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k',
  'd','/','p','o','s','T','y','p','e',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T',
  'y','p','e',0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x11
  ,'p','o','s','T','y','p','e','B','e','g','i','n','n','i','n'
  ,'g',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'p','o','s','T'
  ,'y','p','e','C','u','r','r','e','n','t',0x00,0x00,0x00,0x00
  ,0x00,0x0b,'p','o','s','T','y','p','e','E','n','d',0x00,0x00
  ,0x00,0x00,0x00,0x0c,'p','o','s','T','y','p','e','B','y','t'
  ,'e',0x00,0x00,0x00,0x00,0x0c,'p','o','s','T','y','p','e','T'
  ,'i','m','e',0x00,0x00,0x00,0x00,0x11,'p','o','s','T','y','p'
  ,'e','M','i','l','l','i','s','e','c','s',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p','e','M','p','e'
  ,'g','S','C','R',0x00,0x00,0x00,0x00,0x00,0x0f,'p','o','s','T'
  ,'y','p','e','M','p','e','g','P','C','R',0x00,0x00,0x00,0x00
  ,0x00,0x0d,'p','o','s','T','y','p','e','B','l','o','c','k',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,'p','o','s','T','y','p',
  'e','D','s','m','c','c',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10
  ,'p','o','s','T','y','p','e','C','o','n','t','F','e','e','d'
  ,0x00,0x00,0x00,0x00,0x10,'p','o','s','T','y','p','e','U','n'
  ,'f','o','r','m','e','d',0x00,0xff,0xff,0xff,0xff,0x00,0x00,
  0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,'m','k','d'
  ,'_','p','o','s','B','e','g','i','n',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s',
  'T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':'
  ,':','m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p'
  ,'o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i'
  ,'m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
  0x0b,'m','k','d','_','p','o','s','C','u','r',0x00,0x00,0x00,
  0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s','T'
  ,'i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':'
  ,'m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00,0x00
  ,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p','o',
  's','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00,0x05
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i','m'
  ,'e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0b
  ,'m','k','d','_','p','o','s','E','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s','T','i'
  ,'m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m'
  ,'k','d',':',':','p','o','s','T','i','m','e',0x00,0x00,0x00,
  0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s'
  ,'T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00,0x05,0x00
  ,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m','e',
  'M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00
  ,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m','e',
  'S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00
  ,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i','m','e',
  'H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,'m',
  'k','d','_','p','o','s','B','y','t','e','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'L',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o',
  's','B','y','t','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','B','y','t','e',0x00
  ,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0f,'m','k','d','_'
  ,'p','o','s','B','y','t','e','O','f','f',0x00,0x00,0x00,0x00
  ,0x00,0x17,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0f,'m','k','d'
  ,'_','p','o','s','T','i','m','e','P','o','s',0x00,0x00,0x00,
  0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s','T'
  ,'i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':'
  ,'m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00,0x00
  ,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p','o',
  's','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00,0x05
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i','m'
  ,'e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0d
  ,'m','k','d','_','p','o','s','M','s','P','o','s',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x12,'I','D','L',':','m','k','d','/','p'
  ,'o','s','M','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0d,':',':','m','k','d',':',':','p','o','s','M','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x06,0x00,0x00
  ,0x00,0x0e,'m','k','d','_','p','o','s','S','C','R','P','o','s'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k','d'
  ,'/','p','o','s','S','C','R',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o','s','S','C'
  ,'R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x07,
  0x00,0x00,0x00,0x0e,'m','k','d','_','p','o','s','P','C','R',
  'P','o','s',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00
  ,'4',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':'
  ,'m','k','d','/','p','o','s','P','C','R',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o'
  ,'s','P','C','R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00
  ,0x00,0x08,0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s','B'
  ,'l','o','c','k','P','o','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00
  ,0x00,'8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L'
  ,':','m','k','d','/','p','o','s','B','l','o','c','k',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m'
  ,'k','d',':',':','p','o','s','B','l','o','c','k',0x00,0x00,0x00
  ,0x00,0x05,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x0d,'m','k','d'
  ,'_','p','o','s','D','s','m','c','c',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x15,0x00,0x00,0x00,'8',0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x15,'I','D','L',':','m','k','d','/','p','o','s','B'
  ,'l','o','c','k',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x10,':',':','m','k','d',':',':','p','o','s','B','l','o'
  ,'c','k',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0a,0x00,0x00
  ,0x00,0x0c,'m','k','d','_','p','o','s','F','e','e','d',0x00,
  0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o',
  's','T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','T','i','m','e',0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_'
  ,'p','o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,
  0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T'
  ,'i','m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x0b,0x00,0x00,0x00
  ,0x0d,'m','k','d','_','p','o','s','N','o','W','a','y',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/'
  ,'p','o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k'
  ,'d','_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o',
  's','T','i','m','e','H','u','n','d','r','e','d','t','h',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x08,'s',
  't','o','p','P','o','s',0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x07
  ,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,'I','D','L',':'
  ,'m','k','d','/','p','o','s',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0b,':',':','m','k','d',':',':','p','o','s',0x00,0x00,
  0x00,0x00,0x00,0x11,0x00,0x00,0x01,0x20,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o',
  's','T','y','p','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','T','y','p','e',0x00
  ,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x11,'p','o','s','T'
  ,'y','p','e','B','e','g','i','n','n','i','n','g',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p','e','C','u'
  ,'r','r','e','n','t',0x00,0x00,0x00,0x00,0x00,0x0b,'p','o','s'
  ,'T','y','p','e','E','n','d',0x00,0x00,0x00,0x00,0x00,0x0c,'p'
  ,'o','s','T','y','p','e','B','y','t','e',0x00,0x00,0x00,0x00
  ,0x0c,'p','o','s','T','y','p','e','T','i','m','e',0x00,0x00,
  0x00,0x00,0x11,'p','o','s','T','y','p','e','M','i','l','l','i'
  ,'s','e','c','s',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'p'
  ,'o','s','T','y','p','e','M','p','e','g','S','C','R',0x00,0x00
  ,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p','e','M','p','e'
  ,'g','P','C','R',0x00,0x00,0x00,0x00,0x00,0x0d,'p','o','s','T'
  ,'y','p','e','B','l','o','c','k',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0d,'p','o','s','T','y','p','e','D','s','m','c','c',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x10,'p','o','s','T','y','p',
  'e','C','o','n','t','F','e','e','d',0x00,0x00,0x00,0x00,0x10
  ,'p','o','s','T','y','p','e','U','n','f','o','r','m','e','d'
  ,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x0c,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0d,'m','k','d','_','p','o','s','B','e'
  ,'g','i','n',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0b,'m','k','d','_','p'
  ,'o','s','C','u','r',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0b,'m','k','d','_','p'
  ,'o','s','E','n','d',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,'m','k','d','_','p'
  ,'o','s','B','y','t','e','P','o','s',0x00,0x00,0x00,0x00,0x00
  ,0x0f,0x00,0x00,0x00,'L',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x14,'I','D','L',':','m','k','d','/','p','o','s','B','y','t'
  ,'e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k'
  ,'d',':',':','p','o','s','B','y','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x01,0x00,0x00,0x00,0x0f,'m','k','d','_','p','o','s','B'
  ,'y','t','e','O','f','f',0x00,0x00,0x00,0x00,0x00,0x17,0x00,
  0x00,0x00,0x04,0x00,0x00,0x00,0x0f,'m','k','d','_','p','o','s'
  ,'T','i','m','e','P','o','s',0x00,0x00,0x00,0x00,0x00,0x0f,0x00
  ,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I',
  'D','L',':','m','k','d','/','p','o','s','T','i','m','e',':',
  '1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':'
  ,':','p','o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04
  ,0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m'
  ,'e','H','o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00
  ,0x12,'m','k','d','_','p','o','s','T','i','m','e','M','i','n'
  ,'u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00
  ,0x12,'m','k','d','_','p','o','s','T','i','m','e','S','e','c'
  ,'o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00
  ,0x15,'m','k','d','_','p','o','s','T','i','m','e','H','u','n'
  ,'d','r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x0a,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0d,'m','k','d','_'
  ,'p','o','s','M','s','P','o','s',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x12,'I','D','L',':','m','k','d','/','p','o','s','M','s'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x0d,':',':',
  'm','k','d',':',':','p','o','s','M','s',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x0e,
  'm','k','d','_','p','o','s','S','C','R','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k','d','/','p'
  ,'o','s','S','C','R',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x0e,':',':','m','k','d',':',':','p','o','s','S','C','R',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x07,0x00,0x00
  ,0x00,0x0e,'m','k','d','_','p','o','s','P','C','R','P','o','s'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k','d'
  ,'/','p','o','s','P','C','R',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o','s','P','C'
  ,'R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x08,
  0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s','B','l','o',
  'c','k','P','o','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,
  '8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':',
  'm','k','d','/','p','o','s','B','l','o','c','k',':','1','.',
  '0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m','k',
  'd',':',':','p','o','s','B','l','o','c','k',0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x0d,'m','k','d','_'
  ,'p','o','s','D','s','m','c','c',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x15,0x00,0x00,0x00,'8',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x15,'I','D','L',':','m','k','d','/','p','o','s','B','l'
  ,'o','c','k',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x10,':',':','m','k','d',':',':','p','o','s','B','l','o','c'
  ,'k',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0a,0x00,0x00,
  0x00,0x0c,'m','k','d','_','p','o','s','F','e','e','d',0x00,0x00
  ,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s',
  'T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':'
  ,':','m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p'
  ,'o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i'
  ,'m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x0b,0x00,0x00,0x00,
  0x0d,'m','k','d','_','p','o','s','N','o','W','a','y',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/'
  ,'p','o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k'
  ,'d','_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o',
  's','T','i','m','e','H','u','n','d','r','e','d','t','h',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x09,'a',
  's','s','i','g','n','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08};

yotk* mza_ClipAtr__getTC(void)
{
  return (yotk*)mza_ClipAtr__tc;
}

void mza_ClipAtr__free( mza_ClipAtr* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_ClipAtr, (void *)val, ffunc);
}

void mza_ClipAtr__copy( mza_ClipAtr* dest, mza_ClipAtr* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_ClipAtr, (void *)dest, (void *)src, afunc);
}

static const yotk mza_ClipAtrLst__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x11,'x',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x17,'I','D','L',':','m','z','a','/','C','l',
  'i','p','A','t','r','L','s','t',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x12,':',':','m','z','a',':',':','C','l','i','p',
  'A','t','r','L','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00
  ,0x00,0x11,'8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,
  0x00,0x11,'(',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D'
  ,'L',':','m','z','a','/','C','l','i','p','A','t','r',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','z','a',':',':'
  ,'C','l','i','p','A','t','r',0x00,0x00,0x00,0x00,0x00,0x08,0x00
  ,0x00,0x00,0x07,'c','l','i','p','O','R',0x00,0x00,0x00,0x00,
  0x00,0x0e,0x00,0x00,0x00,',',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x11,'I','D','L',':','m','z','a','/','C','l','i','p',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,':',':','m'
  ,'z','a',':',':','C','l','i','p',0x00,0x00,0x00,0x00,0x07,'c'
  ,'t','n','t','O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00
  ,0x00,',',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,'I','D','L'
  ,':','m','z','a','/','C','t','n','t',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0c,':',':','m','z','a',':',':','C'
  ,'t','n','t',0x00,0x00,0x00,0x00,0x05,'n','a','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x05,'d','e','s','c',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,'c','t','n','t'
  ,'N','m',0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x09,'s','t','a','r','t','P','o','s',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0xfc,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x10,'I','D','L',':','m','k','d','/','p'
  ,'o','s',':','1','.','0',0x00,0x00,0x00,0x00,0x0b,':',':','m'
  ,'k','d',':',':','p','o','s',0x00,0x00,0x00,0x00,0x00,0x11,0x00
  ,0x00,0x01,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I',
  'D','L',':','m','k','d','/','p','o','s','T','y','p','e',':',
  '1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':'
  ,':','p','o','s','T','y','p','e',0x00,0x00,0x00,0x00,0x00,0x0c
  ,0x00,0x00,0x00,0x11,'p','o','s','T','y','p','e','B','e','g'
  ,'i','n','n','i','n','g',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x0f,'p','o','s','T','y','p','e','C','u','r','r','e','n','t'
  ,0x00,0x00,0x00,0x00,0x00,0x0b,'p','o','s','T','y','p','e','E'
  ,'n','d',0x00,0x00,0x00,0x00,0x00,0x0c,'p','o','s','T','y','p'
  ,'e','B','y','t','e',0x00,0x00,0x00,0x00,0x0c,'p','o','s','T'
  ,'y','p','e','T','i','m','e',0x00,0x00,0x00,0x00,0x11,'p','o'
  ,'s','T','y','p','e','M','i','l','l','i','s','e','c','s',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p',
  'e','M','p','e','g','S','C','R',0x00,0x00,0x00,0x00,0x00,0x0f
  ,'p','o','s','T','y','p','e','M','p','e','g','P','C','R',0x00
  ,0x00,0x00,0x00,0x00,0x0d,'p','o','s','T','y','p','e','B','l'
  ,'o','c','k',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,'p','o'
  ,'s','T','y','p','e','D','s','m','c','c',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x10,'p','o','s','T','y','p','e','C','o','n'
  ,'t','F','e','e','d',0x00,0x00,0x00,0x00,0x10,'p','o','s','T'
  ,'y','p','e','U','n','f','o','r','m','e','d',0x00,0xff,0xff,
  0xff,0xff,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x0d,'m','k','d','_','p','o','s','B','e','g','i','n',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k',
  'd','/','p','o','s','T','i','m','e',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T',
  'i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10
  ,'m','k','d','_','p','o','s','T','i','m','e','H','o','u','r'
  ,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_'
  ,'p','o','s','T','i','m','e','M','i','n','u','t','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_'
  ,'p','o','s','T','i','m','e','S','e','c','o','n','d',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_'
  ,'p','o','s','T','i','m','e','H','u','n','d','r','e','d','t'
  ,'h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,
  0x01,0x00,0x00,0x00,0x0b,'m','k','d','_','p','o','s','C','u'
  ,'r',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d'
  ,'/','p','o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k'
  ,'d','_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o',
  's','T','i','m','e','H','u','n','d','r','e','d','t','h',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x02,0x00
  ,0x00,0x00,0x0b,'m','k','d','_','p','o','s','E','n','d',0x00
  ,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p'
  ,'o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m','e'
  ,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d'
  ,'_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00
  ,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T'
  ,'i','m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x03,0x00,0x00,0x00
  ,0x0f,'m','k','d','_','p','o','s','B','y','t','e','P','o','s'
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'L',0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/'
  ,'p','o','s','B','y','t','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','k','d',':',':','p','o','s','B','y','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0f,'m','k'
  ,'d','_','p','o','s','B','y','t','e','O','f','f',0x00,0x00,0x00
  ,0x00,0x00,0x17,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0f,'m',
  'k','d','_','p','o','s','T','i','m','e','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o'
  ,'s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','T','i','m','e',0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_'
  ,'p','o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,
  0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T'
  ,'i','m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x05,0x00,0x00,0x00
  ,0x0d,'m','k','d','_','p','o','s','M','s','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x12,'I','D','L',':','m','k','d','/'
  ,'p','o','s','M','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0d,':',':','m','k','d',':',':','p','o','s','M','s',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x06,0x00
  ,0x00,0x00,0x0e,'m','k','d','_','p','o','s','S','C','R','P',
  'o','s',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m'
  ,'k','d','/','p','o','s','S','C','R',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o','s'
  ,'S','C','R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00
  ,0x07,0x00,0x00,0x00,0x0e,'m','k','d','_','p','o','s','P','C'
  ,'R','P','o','s',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00
  ,0x00,'4',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L'
  ,':','m','k','d','/','p','o','s','P','C','R',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x0e,':',':','m','k','d',':',':','p'
  ,'o','s','P','C','R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00
  ,0x00,0x00,0x08,0x00,0x00,0x00,0x10,'m','k','d','_','p','o',
  's','B','l','o','c','k','P','o','s',0x00,0x00,0x00,0x00,0x15
  ,0x00,0x00,0x00,'8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,
  'I','D','L',':','m','k','d','/','p','o','s','B','l','o','c',
  'k',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,
  ':',':','m','k','d',':',':','p','o','s','B','l','o','c','k',
  0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x09,0x00,0x00,0x00,
  0x0d,'m','k','d','_','p','o','s','D','s','m','c','c',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'8',0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':','m','k','d','/'
  ,'p','o','s','B','l','o','c','k',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x10,':',':','m','k','d',':',':','p','o'
  ,'s','B','l','o','c','k',0x00,0x00,0x00,0x00,0x05,0x00,0x00,
  0x00,0x0a,0x00,0x00,0x00,0x0c,'m','k','d','_','p','o','s','F'
  ,'e','e','d',0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k',
  'd','/','p','o','s','T','i','m','e',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T',
  'i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10
  ,'m','k','d','_','p','o','s','T','i','m','e','H','o','u','r'
  ,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_'
  ,'p','o','s','T','i','m','e','M','i','n','u','t','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_'
  ,'p','o','s','T','i','m','e','S','e','c','o','n','d',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_'
  ,'p','o','s','T','i','m','e','H','u','n','d','r','e','d','t'
  ,'h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,
  0x0b,0x00,0x00,0x00,0x0d,'m','k','d','_','p','o','s','N','o'
  ,'W','a','y',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x08,'s','t','o','p','P','o','s',0x00,0x00,0x00
  ,0x00,0x10,0x00,0x00,0x07,0xfc,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x10,'I','D','L',':','m','k','d','/','p','o','s',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x0b,':',':','m','k','d',':',':'
  ,'p','o','s',0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x01,0x20
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m'
  ,'k','d','/','p','o','s','T','y','p','e',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p','o','s'
  ,'T','y','p','e',0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00
  ,0x11,'p','o','s','T','y','p','e','B','e','g','i','n','n','i'
  ,'n','g',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'p','o','s'
  ,'T','y','p','e','C','u','r','r','e','n','t',0x00,0x00,0x00,
  0x00,0x00,0x0b,'p','o','s','T','y','p','e','E','n','d',0x00,
  0x00,0x00,0x00,0x00,0x0c,'p','o','s','T','y','p','e','B','y'
  ,'t','e',0x00,0x00,0x00,0x00,0x0c,'p','o','s','T','y','p','e'
  ,'T','i','m','e',0x00,0x00,0x00,0x00,0x11,'p','o','s','T','y'
  ,'p','e','M','i','l','l','i','s','e','c','s',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p','e','M','p'
  ,'e','g','S','C','R',0x00,0x00,0x00,0x00,0x00,0x0f,'p','o','s'
  ,'T','y','p','e','M','p','e','g','P','C','R',0x00,0x00,0x00,
  0x00,0x00,0x0d,'p','o','s','T','y','p','e','B','l','o','c','k'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,'p','o','s','T','y'
  ,'p','e','D','s','m','c','c',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x10,'p','o','s','T','y','p','e','C','o','n','t','F','e','e'
  ,'d',0x00,0x00,0x00,0x00,0x10,'p','o','s','T','y','p','e','U'
  ,'n','f','o','r','m','e','d',0x00,0xff,0xff,0xff,0xff,0x00,0x00
  ,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,'m','k','d'
  ,'_','p','o','s','B','e','g','i','n',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s',
  'T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':'
  ,':','m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p'
  ,'o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i'
  ,'m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
  0x0b,'m','k','d','_','p','o','s','C','u','r',0x00,0x00,0x00,
  0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s','T'
  ,'i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':'
  ,'m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00,0x00
  ,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p','o',
  's','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00,0x05
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i','m'
  ,'e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0b
  ,'m','k','d','_','p','o','s','E','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s','T','i'
  ,'m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m'
  ,'k','d',':',':','p','o','s','T','i','m','e',0x00,0x00,0x00,
  0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s'
  ,'T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00,0x05,0x00
  ,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m','e',
  'M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00
  ,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m','e',
  'S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00
  ,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i','m','e',
  'H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,'m',
  'k','d','_','p','o','s','B','y','t','e','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'L',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o',
  's','B','y','t','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','B','y','t','e',0x00
  ,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0f,'m','k','d','_'
  ,'p','o','s','B','y','t','e','O','f','f',0x00,0x00,0x00,0x00
  ,0x00,0x17,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0f,'m','k','d'
  ,'_','p','o','s','T','i','m','e','P','o','s',0x00,0x00,0x00,
  0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s','T'
  ,'i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':'
  ,'m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00,0x00
  ,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p','o',
  's','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00,0x05
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i','m'
  ,'e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0d
  ,'m','k','d','_','p','o','s','M','s','P','o','s',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x12,'I','D','L',':','m','k','d','/','p'
  ,'o','s','M','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0d,':',':','m','k','d',':',':','p','o','s','M','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x06,0x00,0x00
  ,0x00,0x0e,'m','k','d','_','p','o','s','S','C','R','P','o','s'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k','d'
  ,'/','p','o','s','S','C','R',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o','s','S','C'
  ,'R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x07,
  0x00,0x00,0x00,0x0e,'m','k','d','_','p','o','s','P','C','R',
  'P','o','s',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00
  ,'4',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':'
  ,'m','k','d','/','p','o','s','P','C','R',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o'
  ,'s','P','C','R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00
  ,0x00,0x08,0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s','B'
  ,'l','o','c','k','P','o','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00
  ,0x00,'8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L'
  ,':','m','k','d','/','p','o','s','B','l','o','c','k',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m'
  ,'k','d',':',':','p','o','s','B','l','o','c','k',0x00,0x00,0x00
  ,0x00,0x05,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x0d,'m','k','d'
  ,'_','p','o','s','D','s','m','c','c',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x15,0x00,0x00,0x00,'8',0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x15,'I','D','L',':','m','k','d','/','p','o','s','B'
  ,'l','o','c','k',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x10,':',':','m','k','d',':',':','p','o','s','B','l','o'
  ,'c','k',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0a,0x00,0x00
  ,0x00,0x0c,'m','k','d','_','p','o','s','F','e','e','d',0x00,
  0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o',
  's','T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','T','i','m','e',0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_'
  ,'p','o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,
  0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T'
  ,'i','m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x0b,0x00,0x00,0x00
  ,0x0d,'m','k','d','_','p','o','s','N','o','W','a','y',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/'
  ,'p','o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k'
  ,'d','_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o',
  's','T','i','m','e','H','u','n','d','r','e','d','t','h',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x09,'a',
  's','s','i','g','n','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08,0x00,0x00,0x00,0x00};

yotk* mza_ClipAtrLst__getTC(void)
{
  return (yotk*)mza_ClipAtrLst__tc;
}

void mza_ClipAtrLst__free( mza_ClipAtrLst* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_ClipAtrLst, (void *)val, ffunc);
}

void mza_ClipAtrLst__copy( mza_ClipAtrLst* dest, mza_ClipAtrLst* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_ClipAtrLst, (void *)dest, (void *)src, afunc);
}

static const yotk mza_CtntAtr__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x04,0xb8,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x14,'I','D','L',':','m','z','a','/','C','t'
  ,'n','t','A','t','r',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','z','a',':',':','C','t','n','t','A','t','r',0x00
  ,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x00,0x07,'c','t','n','t'
  ,'O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,',',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x11,'I','D','L',':','m','z',
  'a','/','C','t','n','t',':','1','.','0',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x0c,':',':','m','z','a',':',':','C','t','n',
  't',0x00,0x00,0x00,0x00,0x0b,'c','t','n','t','P','v','d','r'
  ,'O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'4',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':','m','z',
  'a','/','C','t','n','t','P','v','d','r',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m','z','a',':',
  ':','C','t','n','t','P','v','d','r',0x00,0x00,0x00,0x00,0x05
  ,'n','a','m','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x05,'d','e','s','c',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0b,'c','r','e','a','t','e','D','a','t','e',0x00,0x00
  ,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09
  ,'f','i','l','e','n','a','m','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,'l','e','n'
  ,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x06,'m','s','e','c'
  ,'s',0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x05,
  'r','a','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x0a,'f','i','r','s','t','T','i','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x09,'l','a','s','t'
  ,'T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00
  ,0x00,0x00,0x07,'f','o','r','m','a','t',0x00,0x00,0x00,0x00,
  0x00,0x0f,0x00,0x00,0x01,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x17,'I','D','L',':','m','k','d','/','c','o','n','t','F'
  ,'o','r','m','a','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x12,':',':','m','k','d',':',':','c','o','n','t','F','o','r'
  ,'m','a','t',0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00
  ,0x08,'c','r','e','a','t','o','r',0x00,0x00,0x00,0x00,0x12,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,'c','o','n','t','a','i',
  'n','e','r',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00
  ,'@',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D','L',':'
  ,'m','k','d','/','f','o','r','m','a','t','C','o','d','e',':'
  ,'1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':',':','m','k','d'
  ,':',':','f','o','r','m','a','t','C','o','d','e',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06
  ,'v','i','d','e','o',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00
  ,0x00,0x00,'@',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D'
  ,'L',':','m','k','d','/','f','o','r','m','a','t','C','o','d'
  ,'e',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':',':','m'
  ,'k','d',':',':','f','o','r','m','a','t','C','o','d','e',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x06,'a','u','d','i','o',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x15,0x00,0x00,0x00,'@',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x17,'I','D','L',':','m','k','d','/','f','o','r','m','a','t'
  ,'C','o','d','e',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12
  ,':',':','m','k','d',':',':','f','o','r','m','a','t','C','o'
  ,'d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0c,'f','r','a','m','e','H','e','i','g','h'
  ,'t',0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0b,'f','r','a'
  ,'m','e','W','i','d','t','h',0x00,0x00,0x00,0x00,0x00,0x04,0x00
  ,0x00,0x00,0x0f,'p','e','l','A','s','p','e','c','t','R','a',
  't','i','o',0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0a
  ,'f','r','a','m','e','R','a','t','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x05,0x00,0x00,0x00,0x0c,'p','r','o','h','i','b','F','l'
  ,'a','g','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k',
  'd','/','p','r','o','h','i','b',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x0e,':',':','m','k','d',':',':','p','r','o','h',
  'i','b',0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x09
  ,'t','a','g','s','F','l','a','g',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x08,0x00,0x00,0x00,0x0e,'m','u','l','t','i','R','a','t'
  ,'e','F','l','a','g',0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00
  ,0x00,0x00,0x0d,'r','e','l','i','a','b','l','e','F','l','a',
  'g',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x0c
  ,'v','o','l','L','o','c','a','t','i','o','n',0x00,0x00,0x00,
  0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,'c','o','n'
  ,'t','S','t','a','t','u','s',0x00,0x00,0x00,0x00,0x00,0x11,0x00
  ,0x00,0x00,0xaa,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I',
  'D','L',':','m','k','d','/','c','o','n','t','S','t','a','t',
  'u','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':',':'
  ,'m','k','d',':',':','c','o','n','t','S','t','a','t','u','s'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0f,'c',
  'o','n','t','S','t','a','t','u','s','D','i','s','k',0x00,0x00
  ,0x00,0x00,0x00,0x0f,'c','o','n','t','S','t','a','t','u','s'
  ,'T','a','p','e',0x00,0x00,0x00,0x00,0x00,0x0f,'c','o','n','t'
  ,'S','t','a','t','u','s','F','e','e','d',0x00,0x00,0x00,0x00
  ,0x00,0x12,'c','o','n','t','S','t','a','t','u','s','R','o','l'
  ,'l','i','n','g',0x00,0x00,0x00,0x00,0x00,0x00,0x16,'c','o',
  'n','t','S','t','a','t','u','s','U','n','a','v','a','i','l',
  'a','b','l','e',0x00,0x00,0x00,0x00,0x00,0x00,0x09,'a','s','s'
  ,'i','g','n','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08
  ,0x00,0x00,0x00,0x09,'s','u','g','B','u','f','S','z',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x03};

yotk* mza_CtntAtr__getTC(void)
{
  return (yotk*)mza_CtntAtr__tc;
}

void mza_CtntAtr__free( mza_CtntAtr* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_CtntAtr, (void *)val, ffunc);
}

void mza_CtntAtr__copy( mza_CtntAtr* dest, mza_CtntAtr* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_CtntAtr, (void *)dest, (void *)src, afunc);
}

static const yotk mza_CtntAtrLst__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x05,0x08,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x17,'I','D','L',':','m','z','a','/','C','t'
  ,'n','t','A','t','r','L','s','t',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x12,':',':','m','z','a',':',':','C','t','n','t',
  'A','t','r','L','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00
  ,0x00,0x04,0xc8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00
  ,0x00,0x04,0xb8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I',
  'D','L',':','m','z','a','/','C','t','n','t','A','t','r',':',
  '1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','z','a',':'
  ,':','C','t','n','t','A','t','r',0x00,0x00,0x00,0x00,0x00,0x14
  ,0x00,0x00,0x00,0x07,'c','t','n','t','O','R',0x00,0x00,0x00,
  0x00,0x00,0x0e,0x00,0x00,0x00,',',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x11,'I','D','L',':','m','z','a','/','C','t','n','t',':'
  ,'1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,':',':'
  ,'m','z','a',':',':','C','t','n','t',0x00,0x00,0x00,0x00,0x0b
  ,'c','t','n','t','P','v','d','r','O','R',0x00,0x00,0x00,0x00
  ,0x00,0x0e,0x00,0x00,0x00,'4',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x15,'I','D','L',':','m','z','a','/','C','t','n','t','P'
  ,'v','d','r',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x10,':',':','m','z','a',':',':','C','t','n','t','P','v','d'
  ,'r',0x00,0x00,0x00,0x00,0x05,'n','a','m','e',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x05,'d','e','s','c',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,'c','r','e','a','t'
  ,'e','D','a','t','e',0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x09,'f','i','l','e','n','a','m','e'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x04,'l','e','n',0x00,0x00,0x00,0x00,0x17,0x00
  ,0x00,0x00,0x06,'m','s','e','c','s',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x03,0x00,0x00,0x00,0x05,'r','a','t','e',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0a,'f','i','r','s'
  ,'t','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00
  ,0x00,0x00,0x09,'l','a','s','t','T','i','m','e',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x07,'f','o','r','m'
  ,'a','t',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x01,0xa4,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D','L',':','m','k',
  'd','/','c','o','n','t','F','o','r','m','a','t',':','1','.',
  '0',0x00,0x00,0x00,0x00,0x00,0x12,':',':','m','k','d',':',':'
  ,'c','o','n','t','F','o','r','m','a','t',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x08,0x00,0x00,0x00,0x08,'c','r','e','a','t','o',
  'r',0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,'c','o','n','t','a','i','n','e','r',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x15,0x00,0x00,0x00,'@',0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x17,'I','D','L',':','m','k','d','/','f','o','r','m'
  ,'a','t','C','o','d','e',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x00,0x12,':',':','m','k','d',':',':','f','o','r','m','a','t'
  ,'C','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x06,'v','i','d','e','o',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'@',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x17,'I','D','L',':','m','k','d','/','f'
  ,'o','r','m','a','t','C','o','d','e',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x00,0x12,':',':','m','k','d',':',':','f','o','r'
  ,'m','a','t','C','o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x12
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,'a','u','d','i','o'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'@',0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D','L',':','m','k','d'
  ,'/','f','o','r','m','a','t','C','o','d','e',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x12,':',':','m','k','d',':',':','f'
  ,'o','r','m','a','t','C','o','d','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,'f','r','a'
  ,'m','e','H','e','i','g','h','t',0x00,0x00,0x00,0x00,0x04,0x00
  ,0x00,0x00,0x0b,'f','r','a','m','e','W','i','d','t','h',0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0f,'p','e','l','A'
  ,'s','p','e','c','t','R','a','t','i','o',0x00,0x00,0x00,0x00
  ,0x00,0x03,0x00,0x00,0x00,0x0a,'f','r','a','m','e','R','a','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0c,
  'p','r','o','h','i','b','F','l','a','g','s',0x00,0x00,0x00,0x00
  ,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x13,'I','D','L',':','m','k','d','/','p','r','o','h','i','b'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e,':',':','m','k'
  ,'d',':',':','p','r','o','h','i','b',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x05,0x00,0x00,0x00,0x09,'t','a','g','s','F','l','a','g'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x0e
  ,'m','u','l','t','i','R','a','t','e','F','l','a','g',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x0d,'r','e','l','i'
  ,'a','b','l','e','F','l','a','g',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x08,0x00,0x00,0x00,0x0c,'v','o','l','L','o','c','a','t'
  ,'i','o','n',0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0b,'c','o','n','t','S','t','a','t','u','s',0x00
  ,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x00,0xaa,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x17,'I','D','L',':','m','k','d','/','c'
  ,'o','n','t','S','t','a','t','u','s',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x00,0x12,':',':','m','k','d',':',':','c','o','n'
  ,'t','S','t','a','t','u','s',0x00,0x00,0x00,0x00,0x00,0x00,0x05
  ,0x00,0x00,0x00,0x0f,'c','o','n','t','S','t','a','t','u','s'
  ,'D','i','s','k',0x00,0x00,0x00,0x00,0x00,0x0f,'c','o','n','t'
  ,'S','t','a','t','u','s','T','a','p','e',0x00,0x00,0x00,0x00
  ,0x00,0x0f,'c','o','n','t','S','t','a','t','u','s','F','e','e'
  ,'d',0x00,0x00,0x00,0x00,0x00,0x12,'c','o','n','t','S','t','a'
  ,'t','u','s','R','o','l','l','i','n','g',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x16,'c','o','n','t','S','t','a','t','u','s','U',
  'n','a','v','a','i','l','a','b','l','e',0x00,0x00,0x00,0x00,
  0x00,0x00,0x09,'a','s','s','i','g','n','e','d',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x09,'s','u','g','B'
  ,'u','f','S','z',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x00};

yotk* mza_CtntAtrLst__getTC(void)
{
  return (yotk*)mza_CtntAtrLst__tc;
}

void mza_CtntAtrLst__free( mza_CtntAtrLst* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_CtntAtrLst, (void *)val, ffunc);
}

void mza_CtntAtrLst__copy( mza_CtntAtrLst* dest, mza_CtntAtrLst* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_CtntAtrLst, (void *)dest, (void *)src, afunc);
}

static const yotk mza_CtntPvdrAtr__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xb0,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x18,'I','D','L',':','m','z','a','/','C','t'
  ,'n','t','P','v','d','r','A','t','r',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x13,':',':','m','z','a',':',':','C','t','n','t',
  'P','v','d','r','A','t','r',0x00,0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x0b,'c','t','n','t','P','v','d','r','O','R',0x00
  ,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'4',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x15,'I','D','L',':','m','z','a','/','C'
  ,'t','n','t','P','v','d','r',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x10,':',':','m','z','a',':',':','C','t'
  ,'n','t','P','v','d','r',0x00,0x00,0x00,0x00,0x05,'n','a','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x05,'d','e','s','c',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00};

yotk* mza_CtntPvdrAtr__getTC(void)
{
  return (yotk*)mza_CtntPvdrAtr__tc;
}

void mza_CtntPvdrAtr__free( mza_CtntPvdrAtr* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_CtntPvdrAtr, (void *)val, ffunc);
}

void mza_CtntPvdrAtr__copy( mza_CtntPvdrAtr* dest, mza_CtntPvdrAtr* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_CtntPvdrAtr, (void *)dest, (void *)src, afunc);
}

static const yotk mza_CtntPvdrAtrLst__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x01,0x08,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x1b,'I','D','L',':','m','z','a','/','C','t'
  ,'n','t','P','v','d','r','A','t','r','L','s','t',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x00,0x16,':',':','m','z','a',':',':'
  ,'C','t','n','t','P','v','d','r','A','t','r','L','s','t',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0xc0,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xb0,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x18,'I','D','L',':','m','z','a','/'
  ,'C','t','n','t','P','v','d','r','A','t','r',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x13,':',':','m','z','a',':',':','C','t'
  ,'n','t','P','v','d','r','A','t','r',0x00,0x00,0x00,0x00,0x00
  ,0x03,0x00,0x00,0x00,0x0b,'c','t','n','t','P','v','d','r','O'
  ,'R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'4',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':','m','z','a','/'
  ,'C','t','n','t','P','v','d','r',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x10,':',':','m','z','a',':',':','C','t'
  ,'n','t','P','v','d','r',0x00,0x00,0x00,0x00,0x05,'n','a','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x05,'d','e','s','c',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  };

yotk* mza_CtntPvdrAtrLst__getTC(void)
{
  return (yotk*)mza_CtntPvdrAtrLst__tc;
}

void mza_CtntPvdrAtrLst__free( mza_CtntPvdrAtrLst* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_CtntPvdrAtrLst, (void *)val, ffunc);
}

void mza_CtntPvdrAtrLst__copy( mza_CtntPvdrAtrLst* dest, mza_CtntPvdrAtrLst* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_CtntPvdrAtrLst, (void *)dest, (void *)src, afunc);
}

static const yotk mza_LgCtntAtr__tc[] = 
  {0x00,0x00,0x00,0x0f,0x00,0x00,0x18,0x20,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x16,'I','D','L',':','m','z','a','/','L','g'
  ,'C','t','n','t','A','t','r',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x00,0x11,':',':','m','z','a',':',':','L','g','C',
  't','n','t','A','t','r',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c
  ,0x00,0x00,0x00,0x09,'l','g','C','t','n','t','O','R',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'.',0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','z','a','/'
  ,'L','g','C','t','n','t',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x00,0x0e,':',':','m','z','a',':',':','L','g','C','t','n','t'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x05,'n','a','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x05,'d','e','s','c',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,'c','r','e','a'
  ,'t','e','D','a','t','e',0x00,0x00,0x00,0x00,0x00,0x12,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x06,'m','s','e','c','s',0x00,
  0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0c,'m','a','x'
  ,'S','u','g','B','u','f','S','z',0x00,0x00,0x00,0x00,0x03,0x00
  ,0x00,0x00,0x08,'m','a','x','R','a','t','e',0x00,0x00,0x00,0x00
  ,0x03,0x00,0x00,0x00,0x09,'n','u','m','C','l','i','p','s',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x07,'c',
  'o','o','k','i','e',0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,
  0x00,'@',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,'I','D','L'
  ,':','m','k','d','/','a','s','s','e','t','C','o','o','k','i'
  ,'e',':','1','.','0',0x00,0x00,0x00,0x00,0x13,':',':','m','k'
  ,'d',':',':','a','s','s','e','t','C','o','o','k','i','e',0x00
  ,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08,'l','o','n','g','F','m','t',0x00,0x00,0x00,0x00,0x08,0x00
  ,0x00,0x00,0x0b,'c','l','i','p','A','t','r','L','s','t',0x00
  ,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x11,'x',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x17,'I','D','L',':','m','z','a','/','C'
  ,'l','i','p','A','t','r','L','s','t',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x00,0x12,':',':','m','z','a',':',':','C','l','i'
  ,'p','A','t','r','L','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13
  ,0x00,0x00,0x11,'8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,
  0x00,0x00,0x11,'(',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I'
  ,'D','L',':','m','z','a','/','C','l','i','p','A','t','r',':'
  ,'1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','z','a',':'
  ,':','C','l','i','p','A','t','r',0x00,0x00,0x00,0x00,0x00,0x08
  ,0x00,0x00,0x00,0x07,'c','l','i','p','O','R',0x00,0x00,0x00,
  0x00,0x00,0x0e,0x00,0x00,0x00,',',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x11,'I','D','L',':','m','z','a','/','C','l','i','p',':'
  ,'1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,':',':'
  ,'m','z','a',':',':','C','l','i','p',0x00,0x00,0x00,0x00,0x07
  ,'c','t','n','t','O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,
  0x00,0x00,',',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,'I','D'
  ,'L',':','m','z','a','/','C','t','n','t',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,':',':','m','z','a',':',
  ':','C','t','n','t',0x00,0x00,0x00,0x00,0x05,'n','a','m','e'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x05,'d','e','s','c',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,'c',
  't','n','t','N','m',0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x09,'s','t','a','r','t','P','o','s'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0xfc
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,'I','D','L',':','m'
  ,'k','d','/','p','o','s',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x0b,':',':','m','k','d',':',':','p','o','s',0x00,0x00,0x00
  ,0x00,0x00,0x11,0x00,0x00,0x01,0x20,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s',
  'T','y','p','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':'
  ,':','m','k','d',':',':','p','o','s','T','y','p','e',0x00,0x00
  ,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x11,'p','o','s','T','y'
  ,'p','e','B','e','g','i','n','n','i','n','g',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p','e','C','u'
  ,'r','r','e','n','t',0x00,0x00,0x00,0x00,0x00,0x0b,'p','o','s'
  ,'T','y','p','e','E','n','d',0x00,0x00,0x00,0x00,0x00,0x0c,'p'
  ,'o','s','T','y','p','e','B','y','t','e',0x00,0x00,0x00,0x00
  ,0x0c,'p','o','s','T','y','p','e','T','i','m','e',0x00,0x00,
  0x00,0x00,0x11,'p','o','s','T','y','p','e','M','i','l','l','i'
  ,'s','e','c','s',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'p'
  ,'o','s','T','y','p','e','M','p','e','g','S','C','R',0x00,0x00
  ,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p','e','M','p','e'
  ,'g','P','C','R',0x00,0x00,0x00,0x00,0x00,0x0d,'p','o','s','T'
  ,'y','p','e','B','l','o','c','k',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0d,'p','o','s','T','y','p','e','D','s','m','c','c',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x10,'p','o','s','T','y','p',
  'e','C','o','n','t','F','e','e','d',0x00,0x00,0x00,0x00,0x10
  ,'p','o','s','T','y','p','e','U','n','f','o','r','m','e','d'
  ,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x0c,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0d,'m','k','d','_','p','o','s','B','e'
  ,'g','i','n',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0b,'m','k','d','_','p'
  ,'o','s','C','u','r',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0b,'m','k','d','_','p'
  ,'o','s','E','n','d',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,'m','k','d','_','p'
  ,'o','s','B','y','t','e','P','o','s',0x00,0x00,0x00,0x00,0x00
  ,0x0f,0x00,0x00,0x00,'L',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x14,'I','D','L',':','m','k','d','/','p','o','s','B','y','t'
  ,'e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k'
  ,'d',':',':','p','o','s','B','y','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x01,0x00,0x00,0x00,0x0f,'m','k','d','_','p','o','s','B'
  ,'y','t','e','O','f','f',0x00,0x00,0x00,0x00,0x00,0x17,0x00,
  0x00,0x00,0x04,0x00,0x00,0x00,0x0f,'m','k','d','_','p','o','s'
  ,'T','i','m','e','P','o','s',0x00,0x00,0x00,0x00,0x00,0x0f,0x00
  ,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I',
  'D','L',':','m','k','d','/','p','o','s','T','i','m','e',':',
  '1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':'
  ,':','p','o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04
  ,0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m'
  ,'e','H','o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00
  ,0x12,'m','k','d','_','p','o','s','T','i','m','e','M','i','n'
  ,'u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00
  ,0x12,'m','k','d','_','p','o','s','T','i','m','e','S','e','c'
  ,'o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00
  ,0x15,'m','k','d','_','p','o','s','T','i','m','e','H','u','n'
  ,'d','r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x0a,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0d,'m','k','d','_'
  ,'p','o','s','M','s','P','o','s',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x12,'I','D','L',':','m','k','d','/','p','o','s','M','s'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x0d,':',':',
  'm','k','d',':',':','p','o','s','M','s',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x0e,
  'm','k','d','_','p','o','s','S','C','R','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k','d','/','p'
  ,'o','s','S','C','R',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x0e,':',':','m','k','d',':',':','p','o','s','S','C','R',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x07,0x00,0x00
  ,0x00,0x0e,'m','k','d','_','p','o','s','P','C','R','P','o','s'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k','d'
  ,'/','p','o','s','P','C','R',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o','s','P','C'
  ,'R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x08,
  0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s','B','l','o',
  'c','k','P','o','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,
  '8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':',
  'm','k','d','/','p','o','s','B','l','o','c','k',':','1','.',
  '0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m','k',
  'd',':',':','p','o','s','B','l','o','c','k',0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x0d,'m','k','d','_'
  ,'p','o','s','D','s','m','c','c',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x15,0x00,0x00,0x00,'8',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x15,'I','D','L',':','m','k','d','/','p','o','s','B','l'
  ,'o','c','k',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x10,':',':','m','k','d',':',':','p','o','s','B','l','o','c'
  ,'k',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0a,0x00,0x00,
  0x00,0x0c,'m','k','d','_','p','o','s','F','e','e','d',0x00,0x00
  ,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s',
  'T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':'
  ,':','m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p'
  ,'o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i'
  ,'m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x0b,0x00,0x00,0x00,
  0x0d,'m','k','d','_','p','o','s','N','o','W','a','y',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/'
  ,'p','o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k'
  ,'d','_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o',
  's','T','i','m','e','H','u','n','d','r','e','d','t','h',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x08,'s',
  't','o','p','P','o','s',0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x07
  ,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,'I','D','L',':'
  ,'m','k','d','/','p','o','s',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0b,':',':','m','k','d',':',':','p','o','s',0x00,0x00,
  0x00,0x00,0x00,0x11,0x00,0x00,0x01,0x20,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o',
  's','T','y','p','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','T','y','p','e',0x00
  ,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x11,'p','o','s','T'
  ,'y','p','e','B','e','g','i','n','n','i','n','g',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p','e','C','u'
  ,'r','r','e','n','t',0x00,0x00,0x00,0x00,0x00,0x0b,'p','o','s'
  ,'T','y','p','e','E','n','d',0x00,0x00,0x00,0x00,0x00,0x0c,'p'
  ,'o','s','T','y','p','e','B','y','t','e',0x00,0x00,0x00,0x00
  ,0x0c,'p','o','s','T','y','p','e','T','i','m','e',0x00,0x00,
  0x00,0x00,0x11,'p','o','s','T','y','p','e','M','i','l','l','i'
  ,'s','e','c','s',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'p'
  ,'o','s','T','y','p','e','M','p','e','g','S','C','R',0x00,0x00
  ,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p','e','M','p','e'
  ,'g','P','C','R',0x00,0x00,0x00,0x00,0x00,0x0d,'p','o','s','T'
  ,'y','p','e','B','l','o','c','k',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0d,'p','o','s','T','y','p','e','D','s','m','c','c',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x10,'p','o','s','T','y','p',
  'e','C','o','n','t','F','e','e','d',0x00,0x00,0x00,0x00,0x10
  ,'p','o','s','T','y','p','e','U','n','f','o','r','m','e','d'
  ,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x0c,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0d,'m','k','d','_','p','o','s','B','e'
  ,'g','i','n',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0b,'m','k','d','_','p'
  ,'o','s','C','u','r',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0b,'m','k','d','_','p'
  ,'o','s','E','n','d',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,'m','k','d','_','p'
  ,'o','s','B','y','t','e','P','o','s',0x00,0x00,0x00,0x00,0x00
  ,0x0f,0x00,0x00,0x00,'L',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x14,'I','D','L',':','m','k','d','/','p','o','s','B','y','t'
  ,'e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k'
  ,'d',':',':','p','o','s','B','y','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x01,0x00,0x00,0x00,0x0f,'m','k','d','_','p','o','s','B'
  ,'y','t','e','O','f','f',0x00,0x00,0x00,0x00,0x00,0x17,0x00,
  0x00,0x00,0x04,0x00,0x00,0x00,0x0f,'m','k','d','_','p','o','s'
  ,'T','i','m','e','P','o','s',0x00,0x00,0x00,0x00,0x00,0x0f,0x00
  ,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I',
  'D','L',':','m','k','d','/','p','o','s','T','i','m','e',':',
  '1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':'
  ,':','p','o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04
  ,0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m'
  ,'e','H','o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00
  ,0x12,'m','k','d','_','p','o','s','T','i','m','e','M','i','n'
  ,'u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00
  ,0x12,'m','k','d','_','p','o','s','T','i','m','e','S','e','c'
  ,'o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00
  ,0x15,'m','k','d','_','p','o','s','T','i','m','e','H','u','n'
  ,'d','r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x0a,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0d,'m','k','d','_'
  ,'p','o','s','M','s','P','o','s',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x12,'I','D','L',':','m','k','d','/','p','o','s','M','s'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x0d,':',':',
  'm','k','d',':',':','p','o','s','M','s',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x0e,
  'm','k','d','_','p','o','s','S','C','R','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k','d','/','p'
  ,'o','s','S','C','R',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x0e,':',':','m','k','d',':',':','p','o','s','S','C','R',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x07,0x00,0x00
  ,0x00,0x0e,'m','k','d','_','p','o','s','P','C','R','P','o','s'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k','d'
  ,'/','p','o','s','P','C','R',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o','s','P','C'
  ,'R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x08,
  0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s','B','l','o',
  'c','k','P','o','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,
  '8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':',
  'm','k','d','/','p','o','s','B','l','o','c','k',':','1','.',
  '0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m','k',
  'd',':',':','p','o','s','B','l','o','c','k',0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x0d,'m','k','d','_'
  ,'p','o','s','D','s','m','c','c',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x15,0x00,0x00,0x00,'8',0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x15,'I','D','L',':','m','k','d','/','p','o','s','B','l'
  ,'o','c','k',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x10,':',':','m','k','d',':',':','p','o','s','B','l','o','c'
  ,'k',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0a,0x00,0x00,
  0x00,0x0c,'m','k','d','_','p','o','s','F','e','e','d',0x00,0x00
  ,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s',
  'T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':'
  ,':','m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p'
  ,'o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i'
  ,'m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x0b,0x00,0x00,0x00,
  0x0d,'m','k','d','_','p','o','s','N','o','W','a','y',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/'
  ,'p','o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k'
  ,'d','_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o',
  's','T','i','m','e','H','u','n','d','r','e','d','t','h',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x09,'a',
  's','s','i','g','n','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,'c','t','n','t'
  ,'A','t','r','L','s','t',0x00,0x00,0x00,0x00,0x00,0x15,0x00,
  0x00,0x05,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D'
  ,'L',':','m','z','a','/','C','t','n','t','A','t','r','L','s'
  ,'t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':',':','m'
  ,'z','a',':',':','C','t','n','t','A','t','r','L','s','t',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x04,0xc8,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x04,0xb8,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','z','a','/'
  ,'C','t','n','t','A','t','r',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','z','a',':',':','C','t','n','t','A','t'
  ,'r',0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x00,0x07,'c','t'
  ,'n','t','O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00
  ,',',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,'I','D','L',':'
  ,'m','z','a','/','C','t','n','t',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0c,':',':','m','z','a',':',':','C','t'
  ,'n','t',0x00,0x00,0x00,0x00,0x0b,'c','t','n','t','P','v','d'
  ,'r','O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'4'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':','m'
  ,'z','a','/','C','t','n','t','P','v','d','r',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m','z','a'
  ,':',':','C','t','n','t','P','v','d','r',0x00,0x00,0x00,0x00
  ,0x05,'n','a','m','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,'d','e','s','c',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0b,'c','r','e','a','t','e','D','a','t','e',0x00
  ,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x09,'f','i','l','e','n','a','m','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,'l',
  'e','n',0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x06,'m','s'
  ,'e','c','s',0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00
  ,0x05,'r','a','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03
  ,0x00,0x00,0x00,0x0a,'f','i','r','s','t','T','i','m','e',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x09,'l','a','s'
  ,'t','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17
  ,0x00,0x00,0x00,0x07,'f','o','r','m','a','t',0x00,0x00,0x00,
  0x00,0x00,0x0f,0x00,0x00,0x01,0xa4,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x17,'I','D','L',':','m','k','d','/','c','o','n','t'
  ,'F','o','r','m','a','t',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x00,0x12,':',':','m','k','d',':',':','c','o','n','t','F','o'
  ,'r','m','a','t',0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00
  ,0x00,0x08,'c','r','e','a','t','o','r',0x00,0x00,0x00,0x00,0x12
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,'c','o','n','t','a'
  ,'i','n','e','r',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00
  ,0x00,'@',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D','L'
  ,':','m','k','d','/','f','o','r','m','a','t','C','o','d','e'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':',':','m','k'
  ,'d',':',':','f','o','r','m','a','t','C','o','d','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x06,'v','i','d','e','o',0x00,0x00,0x00,0x00,0x00,0x00,0x15
  ,0x00,0x00,0x00,'@',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,
  'I','D','L',':','m','k','d','/','f','o','r','m','a','t','C',
  'o','d','e',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':'
  ,':','m','k','d',':',':','f','o','r','m','a','t','C','o','d'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x06,'a','u','d','i','o',0x00,0x00,0x00,0x00,
  0x00,0x00,0x15,0x00,0x00,0x00,'@',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x17,'I','D','L',':','m','k','d','/','f','o','r','m','a'
  ,'t','C','o','d','e',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x12,':',':','m','k','d',':',':','f','o','r','m','a','t','C'
  ,'o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0c,'f','r','a','m','e','H','e','i','g'
  ,'h','t',0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0b,'f','r'
  ,'a','m','e','W','i','d','t','h',0x00,0x00,0x00,0x00,0x00,0x04
  ,0x00,0x00,0x00,0x0f,'p','e','l','A','s','p','e','c','t','R'
  ,'a','t','i','o',0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00
  ,0x0a,'f','r','a','m','e','R','a','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x0c,'p','r','o','h','i','b',
  'F','l','a','g','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,
  '4',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':',
  'm','k','d','/','p','r','o','h','i','b',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x00,0x0e,':',':','m','k','d',':',':','p','r'
  ,'o','h','i','b',0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00
  ,0x00,0x09,'t','a','g','s','F','l','a','g',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x0e,'m','u','l','t','i'
  ,'R','a','t','e','F','l','a','g',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08,0x00,0x00,0x00,0x0d,'r','e','l','i','a','b','l','e','F'
  ,'l','a','g',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00
  ,0x00,0x0c,'v','o','l','L','o','c','a','t','i','o','n',0x00,
  0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,
  'c','o','n','t','S','t','a','t','u','s',0x00,0x00,0x00,0x00,
  0x00,0x11,0x00,0x00,0x00,0xaa,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x17,'I','D','L',':','m','k','d','/','c','o','n','t','S'
  ,'t','a','t','u','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x12,':',':','m','k','d',':',':','c','o','n','t','S','t','a'
  ,'t','u','s',0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00
  ,0x0f,'c','o','n','t','S','t','a','t','u','s','D','i','s','k'
  ,0x00,0x00,0x00,0x00,0x00,0x0f,'c','o','n','t','S','t','a','t'
  ,'u','s','T','a','p','e',0x00,0x00,0x00,0x00,0x00,0x0f,'c','o'
  ,'n','t','S','t','a','t','u','s','F','e','e','d',0x00,0x00,0x00
  ,0x00,0x00,0x12,'c','o','n','t','S','t','a','t','u','s','R',
  'o','l','l','i','n','g',0x00,0x00,0x00,0x00,0x00,0x00,0x16,'c'
  ,'o','n','t','S','t','a','t','u','s','U','n','a','v','a','i'
  ,'l','a','b','l','e',0x00,0x00,0x00,0x00,0x00,0x00,0x09,'a',
  's','s','i','g','n','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08,0x00,0x00,0x00,0x09,'s','u','g','B','u','f','S','z',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00};

yotk* mza_LgCtntAtr__getTC(void)
{
  return (yotk*)mza_LgCtntAtr__tc;
}

void mza_LgCtntAtr__free( mza_LgCtntAtr* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_LgCtntAtr, (void *)val, ffunc);
}

void mza_LgCtntAtr__copy( mza_LgCtntAtr* dest, mza_LgCtntAtr* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_LgCtntAtr, (void *)dest, (void *)src, afunc);
}

static const yotk mza_LgCtntAtrLst__tc[] = 
  {0x00,0x00,0x00,0x15,0x00,0x00,0x18,'t',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x19,'I','D','L',':','m','z','a','/','L','g',
  'C','t','n','t','A','t','r','L','s','t',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x14,':',':','m','z','a',':',
  ':','L','g','C','t','n','t','A','t','r','L','s','t',0x00,0x00
  ,0x00,0x00,0x13,0x00,0x00,0x18,'0',0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x0f,0x00,0x00,0x18,0x20,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x16,'I','D','L',':','m','z','a','/','L','g','C','t'
  ,'n','t','A','t','r',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x11,':',':','m','z','a',':',':','L','g','C','t','n','t'
  ,'A','t','r',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00
  ,0x00,0x09,'l','g','C','t','n','t','O','R',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'.',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x13,'I','D','L',':','m','z','a','/','L','g',
  'C','t','n','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e
  ,':',':','m','z','a',':',':','L','g','C','t','n','t',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x05,'n','a','m','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05
  ,'d','e','s','c',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,'c','r','e','a','t','e',
  'D','a','t','e',0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x06,'m','s','e','c','s',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0c,'m','a','x','S','u'
  ,'g','B','u','f','S','z',0x00,0x00,0x00,0x00,0x03,0x00,0x00,
  0x00,0x08,'m','a','x','R','a','t','e',0x00,0x00,0x00,0x00,0x03
  ,0x00,0x00,0x00,0x09,'n','u','m','C','l','i','p','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x07,'c','o','o'
  ,'k','i','e',0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'@'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,'I','D','L',':','m'
  ,'k','d','/','a','s','s','e','t','C','o','o','k','i','e',':'
  ,'1','.','0',0x00,0x00,0x00,0x00,0x13,':',':','m','k','d',':'
  ,':','a','s','s','e','t','C','o','o','k','i','e',0x00,0x00,0x00
  ,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,'l',
  'o','n','g','F','m','t',0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00
  ,0x0b,'c','l','i','p','A','t','r','L','s','t',0x00,0x00,0x00
  ,0x00,0x00,0x15,0x00,0x00,0x11,'x',0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x17,'I','D','L',':','m','z','a','/','C','l','i','p'
  ,'A','t','r','L','s','t',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x00,0x12,':',':','m','z','a',':',':','C','l','i','p','A','t'
  ,'r','L','s','t',0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00
  ,0x11,'8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,
  0x11,'(',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','z','a','/','C','l','i','p','A','t','r',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','z','a',':',':','C'
  ,'l','i','p','A','t','r',0x00,0x00,0x00,0x00,0x00,0x08,0x00,
  0x00,0x00,0x07,'c','l','i','p','O','R',0x00,0x00,0x00,0x00,0x00
  ,0x0e,0x00,0x00,0x00,',',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x11,'I','D','L',':','m','z','a','/','C','l','i','p',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,':',':','m'
  ,'z','a',':',':','C','l','i','p',0x00,0x00,0x00,0x00,0x07,'c'
  ,'t','n','t','O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00
  ,0x00,',',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,'I','D','L'
  ,':','m','z','a','/','C','t','n','t',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0c,':',':','m','z','a',':',':','C'
  ,'t','n','t',0x00,0x00,0x00,0x00,0x05,'n','a','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x05,'d','e','s','c',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,'c','t','n','t'
  ,'N','m',0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x09,'s','t','a','r','t','P','o','s',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0xfc,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x10,'I','D','L',':','m','k','d','/','p'
  ,'o','s',':','1','.','0',0x00,0x00,0x00,0x00,0x0b,':',':','m'
  ,'k','d',':',':','p','o','s',0x00,0x00,0x00,0x00,0x00,0x11,0x00
  ,0x00,0x01,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I',
  'D','L',':','m','k','d','/','p','o','s','T','y','p','e',':',
  '1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':'
  ,':','p','o','s','T','y','p','e',0x00,0x00,0x00,0x00,0x00,0x0c
  ,0x00,0x00,0x00,0x11,'p','o','s','T','y','p','e','B','e','g'
  ,'i','n','n','i','n','g',0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x0f,'p','o','s','T','y','p','e','C','u','r','r','e','n','t'
  ,0x00,0x00,0x00,0x00,0x00,0x0b,'p','o','s','T','y','p','e','E'
  ,'n','d',0x00,0x00,0x00,0x00,0x00,0x0c,'p','o','s','T','y','p'
  ,'e','B','y','t','e',0x00,0x00,0x00,0x00,0x0c,'p','o','s','T'
  ,'y','p','e','T','i','m','e',0x00,0x00,0x00,0x00,0x11,'p','o'
  ,'s','T','y','p','e','M','i','l','l','i','s','e','c','s',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p',
  'e','M','p','e','g','S','C','R',0x00,0x00,0x00,0x00,0x00,0x0f
  ,'p','o','s','T','y','p','e','M','p','e','g','P','C','R',0x00
  ,0x00,0x00,0x00,0x00,0x0d,'p','o','s','T','y','p','e','B','l'
  ,'o','c','k',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,'p','o'
  ,'s','T','y','p','e','D','s','m','c','c',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x10,'p','o','s','T','y','p','e','C','o','n'
  ,'t','F','e','e','d',0x00,0x00,0x00,0x00,0x10,'p','o','s','T'
  ,'y','p','e','U','n','f','o','r','m','e','d',0x00,0xff,0xff,
  0xff,0xff,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x0d,'m','k','d','_','p','o','s','B','e','g','i','n',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k',
  'd','/','p','o','s','T','i','m','e',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T',
  'i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10
  ,'m','k','d','_','p','o','s','T','i','m','e','H','o','u','r'
  ,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_'
  ,'p','o','s','T','i','m','e','M','i','n','u','t','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_'
  ,'p','o','s','T','i','m','e','S','e','c','o','n','d',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_'
  ,'p','o','s','T','i','m','e','H','u','n','d','r','e','d','t'
  ,'h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,
  0x01,0x00,0x00,0x00,0x0b,'m','k','d','_','p','o','s','C','u'
  ,'r',0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d'
  ,'/','p','o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k'
  ,'d','_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o',
  's','T','i','m','e','H','u','n','d','r','e','d','t','h',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x02,0x00
  ,0x00,0x00,0x0b,'m','k','d','_','p','o','s','E','n','d',0x00
  ,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p'
  ,'o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m','e'
  ,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d'
  ,'_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00
  ,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T'
  ,'i','m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x03,0x00,0x00,0x00
  ,0x0f,'m','k','d','_','p','o','s','B','y','t','e','P','o','s'
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'L',0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/'
  ,'p','o','s','B','y','t','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','k','d',':',':','p','o','s','B','y','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0f,'m','k'
  ,'d','_','p','o','s','B','y','t','e','O','f','f',0x00,0x00,0x00
  ,0x00,0x00,0x17,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0f,'m',
  'k','d','_','p','o','s','T','i','m','e','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o'
  ,'s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','T','i','m','e',0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_'
  ,'p','o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,
  0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T'
  ,'i','m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x05,0x00,0x00,0x00
  ,0x0d,'m','k','d','_','p','o','s','M','s','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x12,'I','D','L',':','m','k','d','/'
  ,'p','o','s','M','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0d,':',':','m','k','d',':',':','p','o','s','M','s',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x06,0x00
  ,0x00,0x00,0x0e,'m','k','d','_','p','o','s','S','C','R','P',
  'o','s',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m'
  ,'k','d','/','p','o','s','S','C','R',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o','s'
  ,'S','C','R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00
  ,0x07,0x00,0x00,0x00,0x0e,'m','k','d','_','p','o','s','P','C'
  ,'R','P','o','s',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00
  ,0x00,'4',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L'
  ,':','m','k','d','/','p','o','s','P','C','R',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x0e,':',':','m','k','d',':',':','p'
  ,'o','s','P','C','R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00
  ,0x00,0x00,0x08,0x00,0x00,0x00,0x10,'m','k','d','_','p','o',
  's','B','l','o','c','k','P','o','s',0x00,0x00,0x00,0x00,0x15
  ,0x00,0x00,0x00,'8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,
  'I','D','L',':','m','k','d','/','p','o','s','B','l','o','c',
  'k',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,
  ':',':','m','k','d',':',':','p','o','s','B','l','o','c','k',
  0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x09,0x00,0x00,0x00,
  0x0d,'m','k','d','_','p','o','s','D','s','m','c','c',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'8',0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':','m','k','d','/'
  ,'p','o','s','B','l','o','c','k',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x10,':',':','m','k','d',':',':','p','o'
  ,'s','B','l','o','c','k',0x00,0x00,0x00,0x00,0x05,0x00,0x00,
  0x00,0x0a,0x00,0x00,0x00,0x0c,'m','k','d','_','p','o','s','F'
  ,'e','e','d',0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k',
  'd','/','p','o','s','T','i','m','e',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T',
  'i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10
  ,'m','k','d','_','p','o','s','T','i','m','e','H','o','u','r'
  ,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_'
  ,'p','o','s','T','i','m','e','M','i','n','u','t','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_'
  ,'p','o','s','T','i','m','e','S','e','c','o','n','d',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_'
  ,'p','o','s','T','i','m','e','H','u','n','d','r','e','d','t'
  ,'h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,
  0x0b,0x00,0x00,0x00,0x0d,'m','k','d','_','p','o','s','N','o'
  ,'W','a','y',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00
  ,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L'
  ,':','m','k','d','/','p','o','s','T','i','m','e',':','1','.'
  ,'0',0x00,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p'
  ,'o','s','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,
  0x00,0x00,0x10,'m','k','d','_','p','o','s','T','i','m','e','H'
  ,'o','u','r',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m'
  ,'k','d','_','p','o','s','T','i','m','e','M','i','n','u','t'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,
  'm','k','d','_','p','o','s','T','i','m','e','S','e','c','o',
  'n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x15
  ,'m','k','d','_','p','o','s','T','i','m','e','H','u','n','d'
  ,'r','e','d','t','h',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x08,'s','t','o','p','P','o','s',0x00,0x00,0x00
  ,0x00,0x10,0x00,0x00,0x07,0xfc,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x10,'I','D','L',':','m','k','d','/','p','o','s',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x0b,':',':','m','k','d',':',':'
  ,'p','o','s',0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x01,0x20
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m'
  ,'k','d','/','p','o','s','T','y','p','e',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x0f,':',':','m','k','d',':',':','p','o','s'
  ,'T','y','p','e',0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00
  ,0x11,'p','o','s','T','y','p','e','B','e','g','i','n','n','i'
  ,'n','g',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,'p','o','s'
  ,'T','y','p','e','C','u','r','r','e','n','t',0x00,0x00,0x00,
  0x00,0x00,0x0b,'p','o','s','T','y','p','e','E','n','d',0x00,
  0x00,0x00,0x00,0x00,0x0c,'p','o','s','T','y','p','e','B','y'
  ,'t','e',0x00,0x00,0x00,0x00,0x0c,'p','o','s','T','y','p','e'
  ,'T','i','m','e',0x00,0x00,0x00,0x00,0x11,'p','o','s','T','y'
  ,'p','e','M','i','l','l','i','s','e','c','s',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0f,'p','o','s','T','y','p','e','M','p'
  ,'e','g','S','C','R',0x00,0x00,0x00,0x00,0x00,0x0f,'p','o','s'
  ,'T','y','p','e','M','p','e','g','P','C','R',0x00,0x00,0x00,
  0x00,0x00,0x0d,'p','o','s','T','y','p','e','B','l','o','c','k'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,'p','o','s','T','y'
  ,'p','e','D','s','m','c','c',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x10,'p','o','s','T','y','p','e','C','o','n','t','F','e','e'
  ,'d',0x00,0x00,0x00,0x00,0x10,'p','o','s','T','y','p','e','U'
  ,'n','f','o','r','m','e','d',0x00,0xff,0xff,0xff,0xff,0x00,0x00
  ,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,'m','k','d'
  ,'_','p','o','s','B','e','g','i','n',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s',
  'T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':'
  ,':','m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00
  ,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p'
  ,'o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00
  ,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i'
  ,'m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i'
  ,'m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
  0x0b,'m','k','d','_','p','o','s','C','u','r',0x00,0x00,0x00,
  0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s','T'
  ,'i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':'
  ,'m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00,0x00
  ,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p','o',
  's','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00,0x05
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i','m'
  ,'e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0b
  ,'m','k','d','_','p','o','s','E','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s','T','i'
  ,'m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':','m'
  ,'k','d',':',':','p','o','s','T','i','m','e',0x00,0x00,0x00,
  0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s'
  ,'T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00,0x05,0x00
  ,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m','e',
  'M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00
  ,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m','e',
  'S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00
  ,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i','m','e',
  'H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,'m',
  'k','d','_','p','o','s','B','y','t','e','P','o','s',0x00,0x00
  ,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,'L',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o',
  's','B','y','t','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','B','y','t','e',0x00
  ,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0f,'m','k','d','_'
  ,'p','o','s','B','y','t','e','O','f','f',0x00,0x00,0x00,0x00
  ,0x00,0x17,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0f,'m','k','d'
  ,'_','p','o','s','T','i','m','e','P','o','s',0x00,0x00,0x00,
  0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o','s','T'
  ,'i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f,':',':'
  ,'m','k','d',':',':','p','o','s','T','i','m','e',0x00,0x00,0x00
  ,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_','p','o',
  's','T','i','m','e','H','o','u','r',0x00,0x00,0x00,0x00,0x05
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T','i','m'
  ,'e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  ,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T','i','m'
  ,'e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0d
  ,'m','k','d','_','p','o','s','M','s','P','o','s',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x12,'I','D','L',':','m','k','d','/','p'
  ,'o','s','M','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x0d,':',':','m','k','d',':',':','p','o','s','M','s',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x06,0x00,0x00
  ,0x00,0x0e,'m','k','d','_','p','o','s','S','C','R','P','o','s'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,'4',0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':','m','k','d'
  ,'/','p','o','s','S','C','R',':','1','.','0',0x00,0x00,0x00,
  0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o','s','S','C'
  ,'R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x07,
  0x00,0x00,0x00,0x0e,'m','k','d','_','p','o','s','P','C','R',
  'P','o','s',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00
  ,'4',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':'
  ,'m','k','d','/','p','o','s','P','C','R',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x00,0x0e,':',':','m','k','d',':',':','p','o'
  ,'s','P','C','R',0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00
  ,0x00,0x08,0x00,0x00,0x00,0x10,'m','k','d','_','p','o','s','B'
  ,'l','o','c','k','P','o','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00
  ,0x00,'8',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L'
  ,':','m','k','d','/','p','o','s','B','l','o','c','k',':','1'
  ,'.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m'
  ,'k','d',':',':','p','o','s','B','l','o','c','k',0x00,0x00,0x00
  ,0x00,0x05,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x0d,'m','k','d'
  ,'_','p','o','s','D','s','m','c','c',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x15,0x00,0x00,0x00,'8',0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x15,'I','D','L',':','m','k','d','/','p','o','s','B'
  ,'l','o','c','k',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x10,':',':','m','k','d',':',':','p','o','s','B','l','o'
  ,'c','k',0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0a,0x00,0x00
  ,0x00,0x0c,'m','k','d','_','p','o','s','F','e','e','d',0x00,
  0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/','p','o',
  's','T','i','m','e',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','k','d',':',':','p','o','s','T','i','m','e',0x00
  ,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k','d','_'
  ,'p','o','s','T','i','m','e','H','o','u','r',0x00,0x00,0x00,
  0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o','s','T'
  ,'i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o','s','T'
  ,'i','m','e','H','u','n','d','r','e','d','t','h',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x0b,0x00,0x00,0x00
  ,0x0d,'m','k','d','_','p','o','s','N','o','W','a','y',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0xa4,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','k','d','/'
  ,'p','o','s','T','i','m','e',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','k','d',':',':','p','o','s','T','i','m'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x10,'m','k'
  ,'d','_','p','o','s','T','i','m','e','H','o','u','r',0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','M','i','n','u','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x12,'m','k','d','_','p','o',
  's','T','i','m','e','S','e','c','o','n','d',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0a,0x00,0x00,0x00,0x15,'m','k','d','_','p','o',
  's','T','i','m','e','H','u','n','d','r','e','d','t','h',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x09,'a',
  's','s','i','g','n','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,'c','t','n','t'
  ,'A','t','r','L','s','t',0x00,0x00,0x00,0x00,0x00,0x15,0x00,
  0x00,0x05,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D'
  ,'L',':','m','z','a','/','C','t','n','t','A','t','r','L','s'
  ,'t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':',':','m'
  ,'z','a',':',':','C','t','n','t','A','t','r','L','s','t',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x04,0xc8,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x04,0xb8,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x14,'I','D','L',':','m','z','a','/'
  ,'C','t','n','t','A','t','r',':','1','.','0',0x00,0x00,0x00,
  0x00,0x0f,':',':','m','z','a',':',':','C','t','n','t','A','t'
  ,'r',0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x00,0x07,'c','t'
  ,'n','t','O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00
  ,',',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,'I','D','L',':'
  ,'m','z','a','/','C','t','n','t',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0c,':',':','m','z','a',':',':','C','t'
  ,'n','t',0x00,0x00,0x00,0x00,0x0b,'c','t','n','t','P','v','d'
  ,'r','O','R',0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'4'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,'I','D','L',':','m'
  ,'z','a','/','C','t','n','t','P','v','d','r',':','1','.','0'
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,':',':','m','z','a'
  ,':',':','C','t','n','t','P','v','d','r',0x00,0x00,0x00,0x00
  ,0x05,'n','a','m','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,'d','e','s','c',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x0b,'c','r','e','a','t','e','D','a','t','e',0x00
  ,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x09,'f','i','l','e','n','a','m','e',0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,'l',
  'e','n',0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x06,'m','s'
  ,'e','c','s',0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00
  ,0x05,'r','a','t','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03
  ,0x00,0x00,0x00,0x0a,'f','i','r','s','t','T','i','m','e',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x09,'l','a','s'
  ,'t','T','i','m','e',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17
  ,0x00,0x00,0x00,0x07,'f','o','r','m','a','t',0x00,0x00,0x00,
  0x00,0x00,0x0f,0x00,0x00,0x01,0xa4,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x17,'I','D','L',':','m','k','d','/','c','o','n','t'
  ,'F','o','r','m','a','t',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x00,0x12,':',':','m','k','d',':',':','c','o','n','t','F','o'
  ,'r','m','a','t',0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00
  ,0x00,0x08,'c','r','e','a','t','o','r',0x00,0x00,0x00,0x00,0x12
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,'c','o','n','t','a'
  ,'i','n','e','r',0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00
  ,0x00,'@',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,'I','D','L'
  ,':','m','k','d','/','f','o','r','m','a','t','C','o','d','e'
  ,':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':',':','m','k'
  ,'d',':',':','f','o','r','m','a','t','C','o','d','e',0x00,0x00
  ,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x06,'v','i','d','e','o',0x00,0x00,0x00,0x00,0x00,0x00,0x15
  ,0x00,0x00,0x00,'@',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,
  'I','D','L',':','m','k','d','/','f','o','r','m','a','t','C',
  'o','d','e',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x12,':'
  ,':','m','k','d',':',':','f','o','r','m','a','t','C','o','d'
  ,'e',0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x06,'a','u','d','i','o',0x00,0x00,0x00,0x00,
  0x00,0x00,0x15,0x00,0x00,0x00,'@',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x17,'I','D','L',':','m','k','d','/','f','o','r','m','a'
  ,'t','C','o','d','e',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x12,':',':','m','k','d',':',':','f','o','r','m','a','t','C'
  ,'o','d','e',0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x0c,'f','r','a','m','e','H','e','i','g'
  ,'h','t',0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0b,'f','r'
  ,'a','m','e','W','i','d','t','h',0x00,0x00,0x00,0x00,0x00,0x04
  ,0x00,0x00,0x00,0x0f,'p','e','l','A','s','p','e','c','t','R'
  ,'a','t','i','o',0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00
  ,0x0a,'f','r','a','m','e','R','a','t','e',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x05,0x00,0x00,0x00,0x0c,'p','r','o','h','i','b',
  'F','l','a','g','s',0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,
  '4',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,'I','D','L',':',
  'm','k','d','/','p','r','o','h','i','b',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x00,0x0e,':',':','m','k','d',':',':','p','r'
  ,'o','h','i','b',0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00
  ,0x00,0x09,'t','a','g','s','F','l','a','g',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x0e,'m','u','l','t','i'
  ,'R','a','t','e','F','l','a','g',0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08,0x00,0x00,0x00,0x0d,'r','e','l','i','a','b','l','e','F'
  ,'l','a','g',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00
  ,0x00,0x0c,'v','o','l','L','o','c','a','t','i','o','n',0x00,
  0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,
  'c','o','n','t','S','t','a','t','u','s',0x00,0x00,0x00,0x00,
  0x00,0x11,0x00,0x00,0x00,0xaa,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x17,'I','D','L',':','m','k','d','/','c','o','n','t','S'
  ,'t','a','t','u','s',':','1','.','0',0x00,0x00,0x00,0x00,0x00
  ,0x12,':',':','m','k','d',':',':','c','o','n','t','S','t','a'
  ,'t','u','s',0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00
  ,0x0f,'c','o','n','t','S','t','a','t','u','s','D','i','s','k'
  ,0x00,0x00,0x00,0x00,0x00,0x0f,'c','o','n','t','S','t','a','t'
  ,'u','s','T','a','p','e',0x00,0x00,0x00,0x00,0x00,0x0f,'c','o'
  ,'n','t','S','t','a','t','u','s','F','e','e','d',0x00,0x00,0x00
  ,0x00,0x00,0x12,'c','o','n','t','S','t','a','t','u','s','R',
  'o','l','l','i','n','g',0x00,0x00,0x00,0x00,0x00,0x00,0x16,'c'
  ,'o','n','t','S','t','a','t','u','s','U','n','a','v','a','i'
  ,'l','a','b','l','e',0x00,0x00,0x00,0x00,0x00,0x00,0x09,'a',
  's','s','i','g','n','e','d',0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x08,0x00,0x00,0x00,0x09,'s','u','g','B','u','f','S','z',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00};

yotk* mza_LgCtntAtrLst__getTC(void)
{
  return (yotk*)mza_LgCtntAtrLst__tc;
}

void mza_LgCtntAtrLst__free( mza_LgCtntAtrLst* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_LgCtntAtrLst, (void *)val, ffunc);
}

void mza_LgCtntAtrLst__copy( mza_LgCtntAtrLst* dest, mza_LgCtntAtrLst* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_LgCtntAtrLst, (void *)dest, (void *)src, afunc);
}

/* Client stubs for interface ::mza::LgCtnt */
static ysidDecl(mza_LgCtnt___id) = "IDL:mza/LgCtnt:1.0";

CONST ysid* mza_LgCtnt__getId(void)
{
  return (CONST ysid*)mza_LgCtnt___id;
}

static const yotk mza_LgCtnt__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'.',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x13,'I','D','L',':','m','z','a','/','L','g',
  'C','t','n','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x0e
  ,':',':','m','z','a',':',':','L','g','C','t','n','t',0x00};

yotk* mza_LgCtnt__getTC(void)
{
  return (yotk*)mza_LgCtnt__tc;
}


void mza_LgCtnt__free( mza_LgCtnt* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_LgCtnt, (void *)val, ffunc);
}

void mza_LgCtnt__copy( mza_LgCtnt* dest, mza_LgCtnt* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_LgCtnt, (void *)dest, (void *)src, afunc);
}


yopar* mza_LgCtnt_getAtr__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt_getAtr");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt_getAtr", (ub4)6);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcBoolean;
    _pars[1].mode = YOMODE_OUT;
    _pars[1].tk = (yotk*)YCTC_mza_LgCtntAtr;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_NoLgCtnt;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_BadProhib;
    _pars[5].mode = YOMODE_EXCEPT;
    _pars[5].tk = (yotk*)YCTC_mza_BadPosition;
    _pars[6].mode = YOMODE_INVALID;
    _pars[6].tk = (yotk*)yoTcNull;
    _pars[6].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_LgCtnt_getAtr( mza_LgCtnt or, yoenv* ev, boolean longFmt, mza_LgCtntAtr* lcAtr)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_LgCtnt__id);
      (*(void (*)( mza_LgCtnt, yoenv*, boolean, mza_LgCtntAtr*))_f)(or, ev, longFmt, lcAtr);
    }
    else
      (*_impl->getAtr)(or, ev, longFmt, lcAtr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt_getAtr_nw( or, ev, longFmt, lcAtr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_LgCtnt_getAtr_nw( mza_LgCtnt or, yoenv* ev, boolean longFmt, mza_LgCtntAtr* lcAtr, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&longFmt;
  _parvec[1] = (void *) lcAtr;
  yoSendReq( (void *)or, ev, "getAtr", TRUE, _sem, (sword)2, mza_LgCtnt_getAtr_pars, _parvec);
}

yopar* mza_LgCtnt_destroy__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt_destroy");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt_destroy", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_EXCEPT;
    _pars[0].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_LgCtnt_destroy( mza_LgCtnt or, yoenv* ev)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (void *)_impl, mza_LgCtnt__id);
      (*(void (*)( mza_LgCtnt, yoenv*))_f)(or, ev);
    }
    else
      (*_impl->destroy)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt_destroy_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_LgCtnt_destroy_nw( mza_LgCtnt or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "destroy", TRUE, _sem, (sword)0, mza_LgCtnt_destroy_pars, (void **)0);
}

yopar* mza_LgCtnt_getAtrClipByPos__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt_getAtrClipByPos");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt_getAtrClipByPos", (ub4)5);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcLong;
    _pars[1].mode = YOMODE_OUT;
    _pars[1].tk = (yotk*)YCTC_mza_ClipAtr;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_NoLgCtnt;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_BadPosition;
    _pars[5].mode = YOMODE_INVALID;
    _pars[5].tk = (yotk*)yoTcNull;
    _pars[5].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_LgCtnt_getAtrClipByPos( mza_LgCtnt or, yoenv* ev, sb4 position, mza_ClipAtr* clipAtr)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)2, (void *)_impl, mza_LgCtnt__id);
      (*(void (*)( mza_LgCtnt, yoenv*, sb4, mza_ClipAtr*))_f)(or, ev, position, clipAtr);
    }
    else
      (*_impl->getAtrClipByPos)(or, ev, position, clipAtr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt_getAtrClipByPos_nw( or, ev, position, clipAtr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_LgCtnt_getAtrClipByPos_nw( mza_LgCtnt or, yoenv* ev, sb4 position, mza_ClipAtr* clipAtr, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&position;
  _parvec[1] = (void *) clipAtr;
  yoSendReq( (void *)or, ev, "getAtrClipByPos", TRUE, _sem, (sword)2, mza_LgCtnt_getAtrClipByPos_pars, _parvec);
}

yopar* mza_LgCtnt_lstAtrClips__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt_lstAtrClips");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt_lstAtrClips", (ub4)4);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_ClipAtrLst;
    _pars[1].mode = YOMODE_INOUT;
    _pars[1].tk = (yotk*)YCTC_mza_Itr;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_BadPosition;
    _pars[4].mode = YOMODE_INVALID;
    _pars[4].tk = (yotk*)yoTcNull;
    _pars[4].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_ClipAtrLst mza_LgCtnt_lstAtrClips( mza_LgCtnt or, yoenv* ev, mza_Itr* iterator)
{
  mza_ClipAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)3, (void *)_impl, mza_LgCtnt__id);
      _result = (*(mza_ClipAtrLst (*)( mza_LgCtnt, yoenv*, mza_Itr*))_f)(or, ev, iterator);
    }
    else
      _result = (*_impl->lstAtrClips)(or, ev, iterator);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt_lstAtrClips_nw( or, ev, iterator, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtnt_lstAtrClips_nw( mza_LgCtnt or, yoenv* ev, mza_Itr* iterator, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) iterator;
  yoSendReq( (void *)or, ev, "lstAtrClips", TRUE, _sem, (sword)1, mza_LgCtnt_lstAtrClips_pars, _parvec);
}

yopar* mza_LgCtnt_addClip__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt_addClip");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt_addClip", (ub4)4);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcLong;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)YCTC_mza_Clip;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_NoLgCtnt;
    _pars[4].mode = YOMODE_INVALID;
    _pars[4].tk = (yotk*)yoTcNull;
    _pars[4].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

sb4 mza_LgCtnt_addClip( mza_LgCtnt or, yoenv* ev, mza_Clip clipOR)
{
  sb4 _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)4, (void *)_impl, mza_LgCtnt__id);
      _result = (*(sb4 (*)( mza_LgCtnt, yoenv*, mza_Clip))_f)(or, ev, clipOR);
    }
    else
      _result = (*_impl->addClip)(or, ev, clipOR);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt_addClip_nw( or, ev, clipOR, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtnt_addClip_nw( mza_LgCtnt or, yoenv* ev, mza_Clip clipOR, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&clipOR;
  yoSendReq( (void *)or, ev, "addClip", TRUE, _sem, (sword)1, mza_LgCtnt_addClip_pars, _parvec);
}

yopar* mza_LgCtnt_addClipByPos__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt_addClipByPos");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt_addClipByPos", (ub4)4);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)YCTC_mza_Clip;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcLong;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_NoLgCtnt;
    _pars[4].mode = YOMODE_INVALID;
    _pars[4].tk = (yotk*)yoTcNull;
    _pars[4].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_LgCtnt_addClipByPos( mza_LgCtnt or, yoenv* ev, mza_Clip clipOR, sb4 position)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)5, (void *)_impl, mza_LgCtnt__id);
      (*(void (*)( mza_LgCtnt, yoenv*, mza_Clip, sb4))_f)(or, ev, clipOR, position);
    }
    else
      (*_impl->addClipByPos)(or, ev, clipOR, position);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt_addClipByPos_nw( or, ev, clipOR, position, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_LgCtnt_addClipByPos_nw( mza_LgCtnt or, yoenv* ev, mza_Clip clipOR, sb4 position, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&clipOR;
  _parvec[1] = (void *)&position;
  yoSendReq( (void *)or, ev, "addClipByPos", TRUE, _sem, (sword)2, mza_LgCtnt_addClipByPos_pars, _parvec);
}

yopar* mza_LgCtnt_delClip__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt_delClip");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt_delClip", (ub4)3);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)YCTC_mza_Clip;
    _pars[1].mode = YOMODE_EXCEPT;
    _pars[1].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_NoLgCtnt;
    _pars[3].mode = YOMODE_INVALID;
    _pars[3].tk = (yotk*)yoTcNull;
    _pars[3].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_LgCtnt_delClip( mza_LgCtnt or, yoenv* ev, mza_Clip clipOR)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)6, (void *)_impl, mza_LgCtnt__id);
      (*(void (*)( mza_LgCtnt, yoenv*, mza_Clip))_f)(or, ev, clipOR);
    }
    else
      (*_impl->delClip)(or, ev, clipOR);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt_delClip_nw( or, ev, clipOR, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_LgCtnt_delClip_nw( mza_LgCtnt or, yoenv* ev, mza_Clip clipOR, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&clipOR;
  yoSendReq( (void *)or, ev, "delClip", TRUE, _sem, (sword)1, mza_LgCtnt_delClip_pars, _parvec);
}

yopar* mza_LgCtnt_delClipByPos__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt_delClipByPos");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt_delClipByPos", (ub4)3);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcLong;
    _pars[1].mode = YOMODE_EXCEPT;
    _pars[1].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_NoLgCtnt;
    _pars[3].mode = YOMODE_INVALID;
    _pars[3].tk = (yotk*)yoTcNull;
    _pars[3].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_LgCtnt_delClipByPos( mza_LgCtnt or, yoenv* ev, sb4 position)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)7, (void *)_impl, mza_LgCtnt__id);
      (*(void (*)( mza_LgCtnt, yoenv*, sb4))_f)(or, ev, position);
    }
    else
      (*_impl->delClipByPos)(or, ev, position);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt_delClipByPos_nw( or, ev, position, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_LgCtnt_delClipByPos_nw( mza_LgCtnt or, yoenv* ev, sb4 position, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&position;
  yoSendReq( (void *)or, ev, "delClipByPos", TRUE, _sem, (sword)1, mza_LgCtnt_delClipByPos_pars, _parvec);
}

yopar* mza_LgCtnt__get_name__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt__get_name");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt__get_name", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

char* mza_LgCtnt__get_name( mza_LgCtnt or, yoenv* ev)
{
  char* _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)8, (void *)_impl, mza_LgCtnt__id);
      _result = (*(char* (*)( mza_LgCtnt, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_name)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt__get_name_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtnt__get_name_nw( mza_LgCtnt or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_name", TRUE, _sem, (sword)0, mza_LgCtnt__get_name_pars, (void **)0);
}

void mza_LgCtnt__set_name( mza_LgCtnt or, yoenv* ev, char* val)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)9, (void *)_impl, mza_LgCtnt__id);
      (*(void (*)( mza_LgCtnt, yoenv*, char*))_f)(or, ev, val);
    }
    else
      (*_impl->_set_name)(or, ev, val);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt__set_name_nw( or, ev, val, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

yopar* mza_LgCtnt__set_name__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt__set_name");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt__set_name", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_LgCtnt__set_name_nw( mza_LgCtnt or, yoenv* ev, char* val, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&val;
  yoSendReq( (void *)or, ev, "_set_name", TRUE, _sem, (sword)1, mza_LgCtnt__set_name_pars, _parvec);
}

yopar* mza_LgCtnt__get_desc__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt__get_desc");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt__get_desc", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

char* mza_LgCtnt__get_desc( mza_LgCtnt or, yoenv* ev)
{
  char* _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)10, (void *)_impl, mza_LgCtnt__id);
      _result = (*(char* (*)( mza_LgCtnt, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_desc)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt__get_desc_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtnt__get_desc_nw( mza_LgCtnt or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_desc", TRUE, _sem, (sword)0, mza_LgCtnt__get_desc_pars, (void **)0);
}

void mza_LgCtnt__set_desc( mza_LgCtnt or, yoenv* ev, char* val)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)11, (void *)_impl, mza_LgCtnt__id);
      (*(void (*)( mza_LgCtnt, yoenv*, char*))_f)(or, ev, val);
    }
    else
      (*_impl->_set_desc)(or, ev, val);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt__set_desc_nw( or, ev, val, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

yopar* mza_LgCtnt__set_desc__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt__set_desc");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt__set_desc", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_LgCtnt__set_desc_nw( mza_LgCtnt or, yoenv* ev, char* val, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&val;
  yoSendReq( (void *)or, ev, "_set_desc", TRUE, _sem, (sword)1, mza_LgCtnt__set_desc_pars, _parvec);
}

yopar* mza_LgCtnt__get_msecs__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt__get_msecs");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt__get_msecs", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcLong;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

sb4 mza_LgCtnt__get_msecs( mza_LgCtnt or, yoenv* ev)
{
  sb4 _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)12, (void *)_impl, mza_LgCtnt__id);
      _result = (*(sb4 (*)( mza_LgCtnt, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_msecs)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt__get_msecs_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtnt__get_msecs_nw( mza_LgCtnt or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_msecs", TRUE, _sem, (sword)0, mza_LgCtnt__get_msecs_pars, (void **)0);
}

yopar* mza_LgCtnt__get_numClips__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtnt__get_numClips");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtnt__get_numClips", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcLong;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

sb4 mza_LgCtnt__get_numClips( mza_LgCtnt or, yoenv* ev)
{
  sb4 _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)13, (void *)_impl, mza_LgCtnt__id);
      _result = (*(sb4 (*)( mza_LgCtnt, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_numClips)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtnt__get_numClips_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtnt__get_numClips_nw( mza_LgCtnt or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_numClips", TRUE, _sem, (sword)0, mza_LgCtnt__get_numClips_pars, (void **)0);
}


/* Client stubs for interface ::mza::LgCtntFac */
static ysidDecl(mza_LgCtntFac___id) = "IDL:mza/LgCtntFac:1.0";

CONST ysid* mza_LgCtntFac__getId(void)
{
  return (CONST ysid*)mza_LgCtntFac___id;
}

static const yotk mza_LgCtntFac__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'5',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x16,'I','D','L',':','m','z','a','/','L','g',
  'C','t','n','t','F','a','c',':','1','.','0',0x00,0x00,0x00,0x00
  ,0x00,0x00,0x11,':',':','m','z','a',':',':','L','g','C','t',
  'n','t','F','a','c',0x00};

yotk* mza_LgCtntFac__getTC(void)
{
  return (yotk*)mza_LgCtntFac__tc;
}


void mza_LgCtntFac__free( mza_LgCtntFac* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_LgCtntFac, (void *)val, ffunc);
}

void mza_LgCtntFac__copy( mza_LgCtntFac* dest, mza_LgCtntFac* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_LgCtntFac, (void *)dest, (void *)src, afunc);
}


yopar* mza_LgCtntFac_create__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtntFac_create");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtntFac_create", (ub4)5);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_LgCtnt;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcString;
    _pars[2].mode = YOMODE_IN;
    _pars[2].tk = (yotk*)yoTcString;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[5].mode = YOMODE_INVALID;
    _pars[5].tk = (yotk*)yoTcNull;
    _pars[5].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_LgCtnt mza_LgCtntFac_create( mza_LgCtntFac or, yoenv* ev, char* name, char* desc)
{
  mza_LgCtnt _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtntFac__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtntFac__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_LgCtntFac__id);
      _result = (*(mza_LgCtnt (*)( mza_LgCtntFac, yoenv*, char*, char*))_f)(or, ev, name, desc);
    }
    else
      _result = (*_impl->create)(or, ev, name, desc);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtntFac_create_nw( or, ev, name, desc, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtntFac_create_nw( mza_LgCtntFac or, yoenv* ev, char* name, char* desc, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&name;
  _parvec[1] = (void *)&desc;
  yoSendReq( (void *)or, ev, "create", TRUE, _sem, (sword)2, mza_LgCtntFac_create_pars, _parvec);
}

yopar* mza_LgCtntFac_createCtnt__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtntFac_createCtnt");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtntFac_createCtnt", (ub4)6);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_LgCtnt;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)YCTC_mza_CtntAtr;
    _pars[2].mode = YOMODE_OUT;
    _pars[2].tk = (yotk*)YCTC_mza_Clip;
    _pars[3].mode = YOMODE_OUT;
    _pars[3].tk = (yotk*)YCTC_mza_Ctnt;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[5].mode = YOMODE_EXCEPT;
    _pars[5].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[6].mode = YOMODE_INVALID;
    _pars[6].tk = (yotk*)yoTcNull;
    _pars[6].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_LgCtnt mza_LgCtntFac_createCtnt( mza_LgCtntFac or, yoenv* ev, mza_CtntAtr* ctntAtr, mza_Clip* clipOR, mza_Ctnt* ctntOR)
{
  mza_LgCtnt _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtntFac__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtntFac__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (void *)_impl, mza_LgCtntFac__id);
      _result = (*(mza_LgCtnt (*)( mza_LgCtntFac, yoenv*, mza_CtntAtr*, mza_Clip*, mza_Ctnt*))_f)(or, ev, ctntAtr, clipOR, ctntOR);
    }
    else
      _result = (*_impl->createCtnt)(or, ev, ctntAtr, clipOR, ctntOR);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtntFac_createCtnt_nw( or, ev, ctntAtr, clipOR, ctntOR, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtntFac_createCtnt_nw( mza_LgCtntFac or, yoenv* ev, mza_CtntAtr* ctntAtr, mza_Clip* clipOR, mza_Ctnt* ctntOR, ysevt* _sem)
{
  void * _parvec[3];

  _parvec[0] = (void *) ctntAtr;
  _parvec[1] = (void *) clipOR;
  _parvec[2] = (void *) ctntOR;
  yoSendReq( (void *)or, ev, "createCtnt", TRUE, _sem, (sword)3, mza_LgCtntFac_createCtnt_pars, _parvec);
}


/* Client stubs for interface ::mza::LgCtntMgmt */
static ysidDecl(mza_LgCtntMgmt___id) = "IDL:mza/LgCtntMgmt:1.0";

CONST ysid* mza_LgCtntMgmt__getId(void)
{
  return (CONST ysid*)mza_LgCtntMgmt___id;
}

static const yotk mza_LgCtntMgmt__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'6',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x17,'I','D','L',':','m','z','a','/','L','g',
  'C','t','n','t','M','g','m','t',':','1','.','0',0x00,0x00,0x00
  ,0x00,0x00,0x12,':',':','m','z','a',':',':','L','g','C','t',
  'n','t','M','g','m','t',0x00};

yotk* mza_LgCtntMgmt__getTC(void)
{
  return (yotk*)mza_LgCtntMgmt__tc;
}


void mza_LgCtntMgmt__free( mza_LgCtntMgmt* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_LgCtntMgmt, (void *)val, ffunc);
}

void mza_LgCtntMgmt__copy( mza_LgCtntMgmt* dest, mza_LgCtntMgmt* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_LgCtntMgmt, (void *)dest, (void *)src, afunc);
}


yopar* mza_LgCtntMgmt_lstAtr__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtntMgmt_lstAtr");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtntMgmt_lstAtr", (ub4)4);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_LgCtntAtrLst;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcBoolean;
    _pars[2].mode = YOMODE_INOUT;
    _pars[2].tk = (yotk*)YCTC_mza_Itr;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[4].mode = YOMODE_INVALID;
    _pars[4].tk = (yotk*)yoTcNull;
    _pars[4].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_LgCtntAtrLst mza_LgCtntMgmt_lstAtr( mza_LgCtntMgmt or, yoenv* ev, boolean longFmt, mza_Itr* itr)
{
  mza_LgCtntAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtntMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtntMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_LgCtntMgmt__id);
      _result = (*(mza_LgCtntAtrLst (*)( mza_LgCtntMgmt, yoenv*, boolean, mza_Itr*))_f)(or, ev, longFmt, itr);
    }
    else
      _result = (*_impl->lstAtr)(or, ev, longFmt, itr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtntMgmt_lstAtr_nw( or, ev, longFmt, itr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtntMgmt_lstAtr_nw( mza_LgCtntMgmt or, yoenv* ev, boolean longFmt, mza_Itr* itr, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&longFmt;
  _parvec[1] = (void *) itr;
  yoSendReq( (void *)or, ev, "lstAtr", TRUE, _sem, (sword)2, mza_LgCtntMgmt_lstAtr_pars, _parvec);
}

yopar* mza_LgCtntMgmt_lstAtrByNm__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtntMgmt_lstAtrByNm");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtntMgmt_lstAtrByNm", (ub4)8);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_LgCtntAtrLst;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcString;
    _pars[2].mode = YOMODE_IN;
    _pars[2].tk = (yotk*)yoTcBoolean;
    _pars[3].mode = YOMODE_INOUT;
    _pars[3].tk = (yotk*)YCTC_mza_Itr;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[5].mode = YOMODE_EXCEPT;
    _pars[5].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[6].mode = YOMODE_EXCEPT;
    _pars[6].tk = (yotk*)YCTC_mza_BadPosition;
    _pars[7].mode = YOMODE_EXCEPT;
    _pars[7].tk = (yotk*)YCTC_mza_BadProhib;
    _pars[8].mode = YOMODE_INVALID;
    _pars[8].tk = (yotk*)yoTcNull;
    _pars[8].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_LgCtntAtrLst mza_LgCtntMgmt_lstAtrByNm( mza_LgCtntMgmt or, yoenv* ev, char* lgCtntName, boolean longFmt, mza_Itr* itr)
{
  mza_LgCtntAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtntMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtntMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (void *)_impl, mza_LgCtntMgmt__id);
      _result = (*(mza_LgCtntAtrLst (*)( mza_LgCtntMgmt, yoenv*, char*, boolean, mza_Itr*))_f)(or, ev, lgCtntName, longFmt, itr);
    }
    else
      _result = (*_impl->lstAtrByNm)(or, ev, lgCtntName, longFmt, itr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtntMgmt_lstAtrByNm_nw( or, ev, lgCtntName, longFmt, itr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtntMgmt_lstAtrByNm_nw( mza_LgCtntMgmt or, yoenv* ev, char* lgCtntName, boolean longFmt, mza_Itr* itr, ysevt* _sem)
{
  void * _parvec[3];

  _parvec[0] = (void *)&lgCtntName;
  _parvec[1] = (void *)&longFmt;
  _parvec[2] = (void *) itr;
  yoSendReq( (void *)or, ev, "lstAtrByNm", TRUE, _sem, (sword)3, mza_LgCtntMgmt_lstAtrByNm_pars, _parvec);
}

yopar* mza_LgCtntMgmt_usingDB__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_LgCtntMgmt_usingDB");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_LgCtntMgmt_usingDB", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcBoolean;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

boolean mza_LgCtntMgmt_usingDB( mza_LgCtntMgmt or, yoenv* ev)
{
  boolean _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_LgCtntMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_LgCtntMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)2, (void *)_impl, mza_LgCtntMgmt__id);
      _result = (*(boolean (*)( mza_LgCtntMgmt, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->usingDB)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_LgCtntMgmt_usingDB_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_LgCtntMgmt_usingDB_nw( mza_LgCtntMgmt or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "usingDB", TRUE, _sem, (sword)0, mza_LgCtntMgmt_usingDB_pars, (void **)0);
}


/* Client stubs for interface ::mza::Clip */
static ysidDecl(mza_Clip___id) = "IDL:mza/Clip:1.0";

CONST ysid* mza_Clip__getId(void)
{
  return (CONST ysid*)mza_Clip___id;
}

static const yotk mza_Clip__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,',',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x11,'I','D','L',':','m','z','a','/','C','l',
  'i','p',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c
  ,':',':','m','z','a',':',':','C','l','i','p',0x00};

yotk* mza_Clip__getTC(void)
{
  return (yotk*)mza_Clip__tc;
}


void mza_Clip__free( mza_Clip* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_Clip, (void *)val, ffunc);
}

void mza_Clip__copy( mza_Clip* dest, mza_Clip* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_Clip, (void *)dest, (void *)src, afunc);
}


yopar* mza_Clip_getAtr__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip_getAtr");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip_getAtr", (ub4)2);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_OUT;
    _pars[0].tk = (yotk*)YCTC_mza_ClipAtr;
    _pars[1].mode = YOMODE_EXCEPT;
    _pars[1].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[2].mode = YOMODE_INVALID;
    _pars[2].tk = (yotk*)yoTcNull;
    _pars[2].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Clip_getAtr( mza_Clip or, yoenv* ev, mza_ClipAtr* clipAtr)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_Clip__id);
      (*(void (*)( mza_Clip, yoenv*, mza_ClipAtr*))_f)(or, ev, clipAtr);
    }
    else
      (*_impl->getAtr)(or, ev, clipAtr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip_getAtr_nw( or, ev, clipAtr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_Clip_getAtr_nw( mza_Clip or, yoenv* ev, mza_ClipAtr* clipAtr, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) clipAtr;
  yoSendReq( (void *)or, ev, "getAtr", TRUE, _sem, (sword)1, mza_Clip_getAtr_pars, _parvec);
}

yopar* mza_Clip_destroy__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip_destroy");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip_destroy", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_EXCEPT;
    _pars[0].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Clip_destroy( mza_Clip or, yoenv* ev)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (void *)_impl, mza_Clip__id);
      (*(void (*)( mza_Clip, yoenv*))_f)(or, ev);
    }
    else
      (*_impl->destroy)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip_destroy_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_Clip_destroy_nw( mza_Clip or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "destroy", TRUE, _sem, (sword)0, mza_Clip_destroy_pars, (void **)0);
}

yopar* mza_Clip__get_ctntOR__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__get_ctntOR");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__get_ctntOR", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_Ctnt;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_Ctnt mza_Clip__get_ctntOR( mza_Clip or, yoenv* ev)
{
  mza_Ctnt _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)2, (void *)_impl, mza_Clip__id);
      _result = (*(mza_Ctnt (*)( mza_Clip, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_ctntOR)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__get_ctntOR_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_Clip__get_ctntOR_nw( mza_Clip or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_ctntOR", TRUE, _sem, (sword)0, mza_Clip__get_ctntOR_pars, (void **)0);
}

void mza_Clip__set_ctntOR( mza_Clip or, yoenv* ev, mza_Ctnt val)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)3, (void *)_impl, mza_Clip__id);
      (*(void (*)( mza_Clip, yoenv*, mza_Ctnt))_f)(or, ev, val);
    }
    else
      (*_impl->_set_ctntOR)(or, ev, val);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__set_ctntOR_nw( or, ev, val, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

yopar* mza_Clip__set_ctntOR__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__set_ctntOR");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__set_ctntOR", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)YCTC_mza_Ctnt;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Clip__set_ctntOR_nw( mza_Clip or, yoenv* ev, mza_Ctnt val, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&val;
  yoSendReq( (void *)or, ev, "_set_ctntOR", TRUE, _sem, (sword)1, mza_Clip__set_ctntOR_pars, _parvec);
}

yopar* mza_Clip__get_name__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__get_name");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__get_name", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

char* mza_Clip__get_name( mza_Clip or, yoenv* ev)
{
  char* _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)4, (void *)_impl, mza_Clip__id);
      _result = (*(char* (*)( mza_Clip, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_name)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__get_name_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_Clip__get_name_nw( mza_Clip or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_name", TRUE, _sem, (sword)0, mza_Clip__get_name_pars, (void **)0);
}

void mza_Clip__set_name( mza_Clip or, yoenv* ev, char* val)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)5, (void *)_impl, mza_Clip__id);
      (*(void (*)( mza_Clip, yoenv*, char*))_f)(or, ev, val);
    }
    else
      (*_impl->_set_name)(or, ev, val);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__set_name_nw( or, ev, val, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

yopar* mza_Clip__set_name__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__set_name");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__set_name", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Clip__set_name_nw( mza_Clip or, yoenv* ev, char* val, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&val;
  yoSendReq( (void *)or, ev, "_set_name", TRUE, _sem, (sword)1, mza_Clip__set_name_pars, _parvec);
}

yopar* mza_Clip__get_desc__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__get_desc");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__get_desc", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

char* mza_Clip__get_desc( mza_Clip or, yoenv* ev)
{
  char* _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)6, (void *)_impl, mza_Clip__id);
      _result = (*(char* (*)( mza_Clip, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_desc)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__get_desc_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_Clip__get_desc_nw( mza_Clip or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_desc", TRUE, _sem, (sword)0, mza_Clip__get_desc_pars, (void **)0);
}

void mza_Clip__set_desc( mza_Clip or, yoenv* ev, char* val)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)7, (void *)_impl, mza_Clip__id);
      (*(void (*)( mza_Clip, yoenv*, char*))_f)(or, ev, val);
    }
    else
      (*_impl->_set_desc)(or, ev, val);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__set_desc_nw( or, ev, val, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

yopar* mza_Clip__set_desc__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__set_desc");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__set_desc", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Clip__set_desc_nw( mza_Clip or, yoenv* ev, char* val, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&val;
  yoSendReq( (void *)or, ev, "_set_desc", TRUE, _sem, (sword)1, mza_Clip__set_desc_pars, _parvec);
}

yopar* mza_Clip__get_startPos__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__get_startPos");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__get_startPos", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mkd_pos;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mkd_pos mza_Clip__get_startPos( mza_Clip or, yoenv* ev)
{
  mkd_pos _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)8, (void *)_impl, mza_Clip__id);
      _result = (*(mkd_pos (*)( mza_Clip, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_startPos)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__get_startPos_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_Clip__get_startPos_nw( mza_Clip or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_startPos", TRUE, _sem, (sword)0, mza_Clip__get_startPos_pars, (void **)0);
}

void mza_Clip__set_startPos( mza_Clip or, yoenv* ev, mkd_pos* val)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)9, (void *)_impl, mza_Clip__id);
      (*(void (*)( mza_Clip, yoenv*, mkd_pos*))_f)(or, ev, val);
    }
    else
      (*_impl->_set_startPos)(or, ev, val);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__set_startPos_nw( or, ev, val, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

yopar* mza_Clip__set_startPos__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__set_startPos");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__set_startPos", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)YCTC_mkd_pos;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Clip__set_startPos_nw( mza_Clip or, yoenv* ev, mkd_pos* val, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) val;
  yoSendReq( (void *)or, ev, "_set_startPos", TRUE, _sem, (sword)1, mza_Clip__set_startPos_pars, _parvec);
}

yopar* mza_Clip__get_stopPos__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__get_stopPos");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__get_stopPos", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mkd_pos;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mkd_pos mza_Clip__get_stopPos( mza_Clip or, yoenv* ev)
{
  mkd_pos _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)10, (void *)_impl, mza_Clip__id);
      _result = (*(mkd_pos (*)( mza_Clip, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_stopPos)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__get_stopPos_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_Clip__get_stopPos_nw( mza_Clip or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_stopPos", TRUE, _sem, (sword)0, mza_Clip__get_stopPos_pars, (void **)0);
}

void mza_Clip__set_stopPos( mza_Clip or, yoenv* ev, mkd_pos* val)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Clip__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Clip__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)11, (void *)_impl, mza_Clip__id);
      (*(void (*)( mza_Clip, yoenv*, mkd_pos*))_f)(or, ev, val);
    }
    else
      (*_impl->_set_stopPos)(or, ev, val);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Clip__set_stopPos_nw( or, ev, val, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

yopar* mza_Clip__set_stopPos__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Clip__set_stopPos");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Clip__set_stopPos", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)YCTC_mkd_pos;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Clip__set_stopPos_nw( mza_Clip or, yoenv* ev, mkd_pos* val, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) val;
  yoSendReq( (void *)or, ev, "_set_stopPos", TRUE, _sem, (sword)1, mza_Clip__set_stopPos_pars, _parvec);
}


/* Client stubs for interface ::mza::ClipFac */
static ysidDecl(mza_ClipFac___id) = "IDL:mza/ClipFac:1.0";

CONST ysid* mza_ClipFac__getId(void)
{
  return (CONST ysid*)mza_ClipFac___id;
}

static const yotk mza_ClipFac__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'/',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','z','a','/','C','l',
  'i','p','F','a','c',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','z','a',':',':','C','l','i','p','F','a','c',0x00
  };

yotk* mza_ClipFac__getTC(void)
{
  return (yotk*)mza_ClipFac__tc;
}


void mza_ClipFac__free( mza_ClipFac* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_ClipFac, (void *)val, ffunc);
}

void mza_ClipFac__copy( mza_ClipFac* dest, mza_ClipFac* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_ClipFac, (void *)dest, (void *)src, afunc);
}


yopar* mza_ClipFac_create__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_ClipFac_create");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_ClipFac_create", (ub4)8);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_Clip;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)YCTC_mza_Ctnt;
    _pars[2].mode = YOMODE_IN;
    _pars[2].tk = (yotk*)yoTcString;
    _pars[3].mode = YOMODE_IN;
    _pars[3].tk = (yotk*)yoTcString;
    _pars[4].mode = YOMODE_IN;
    _pars[4].tk = (yotk*)YCTC_mkd_pos;
    _pars[5].mode = YOMODE_IN;
    _pars[5].tk = (yotk*)YCTC_mkd_pos;
    _pars[6].mode = YOMODE_EXCEPT;
    _pars[6].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[7].mode = YOMODE_EXCEPT;
    _pars[7].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[8].mode = YOMODE_INVALID;
    _pars[8].tk = (yotk*)yoTcNull;
    _pars[8].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_Clip mza_ClipFac_create( mza_ClipFac or, yoenv* ev, mza_Ctnt ctnt, char* name, char* desc, mkd_pos* startPos, mkd_pos* stopPos)
{
  mza_Clip _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_ClipFac__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_ClipFac__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_ClipFac__id);
      _result = (*(mza_Clip (*)( mza_ClipFac, yoenv*, mza_Ctnt, char*, char*, mkd_pos*, mkd_pos*))_f)(or, ev, ctnt, name, desc, startPos, stopPos);
    }
    else
      _result = (*_impl->create)(or, ev, ctnt, name, desc, startPos, stopPos);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_ClipFac_create_nw( or, ev, ctnt, name, desc, startPos, stopPos, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_ClipFac_create_nw( mza_ClipFac or, yoenv* ev, mza_Ctnt ctnt, char* name, char* desc, mkd_pos* startPos, mkd_pos* stopPos, ysevt* _sem)
{
  void * _parvec[5];

  _parvec[0] = (void *)&ctnt;
  _parvec[1] = (void *)&name;
  _parvec[2] = (void *)&desc;
  _parvec[3] = (void *) startPos;
  _parvec[4] = (void *) stopPos;
  yoSendReq( (void *)or, ev, "create", TRUE, _sem, (sword)5, mza_ClipFac_create_pars, _parvec);
}


/* Client stubs for interface ::mza::ClipMgmt */
static ysidDecl(mza_ClipMgmt___id) = "IDL:mza/ClipMgmt:1.0";

CONST ysid* mza_ClipMgmt__getId(void)
{
  return (CONST ysid*)mza_ClipMgmt___id;
}

static const yotk mza_ClipMgmt__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'4',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x15,'I','D','L',':','m','z','a','/','C','l',
  'i','p','M','g','m','t',':','1','.','0',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x10,':',':','m','z','a',':',':','C','l','i',
  'p','M','g','m','t',0x00};

yotk* mza_ClipMgmt__getTC(void)
{
  return (yotk*)mza_ClipMgmt__tc;
}


void mza_ClipMgmt__free( mza_ClipMgmt* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_ClipMgmt, (void *)val, ffunc);
}

void mza_ClipMgmt__copy( mza_ClipMgmt* dest, mza_ClipMgmt* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_ClipMgmt, (void *)dest, (void *)src, afunc);
}


yopar* mza_ClipMgmt_lstAtr__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_ClipMgmt_lstAtr");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_ClipMgmt_lstAtr", (ub4)4);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_ClipAtrLst;
    _pars[1].mode = YOMODE_INOUT;
    _pars[1].tk = (yotk*)YCTC_mza_Itr;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_BadPosition;
    _pars[4].mode = YOMODE_INVALID;
    _pars[4].tk = (yotk*)yoTcNull;
    _pars[4].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_ClipAtrLst mza_ClipMgmt_lstAtr( mza_ClipMgmt or, yoenv* ev, mza_Itr* iterator)
{
  mza_ClipAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_ClipMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_ClipMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_ClipMgmt__id);
      _result = (*(mza_ClipAtrLst (*)( mza_ClipMgmt, yoenv*, mza_Itr*))_f)(or, ev, iterator);
    }
    else
      _result = (*_impl->lstAtr)(or, ev, iterator);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_ClipMgmt_lstAtr_nw( or, ev, iterator, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_ClipMgmt_lstAtr_nw( mza_ClipMgmt or, yoenv* ev, mza_Itr* iterator, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) iterator;
  yoSendReq( (void *)or, ev, "lstAtr", TRUE, _sem, (sword)1, mza_ClipMgmt_lstAtr_pars, _parvec);
}

yopar* mza_ClipMgmt_lstAtrByCtnt__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_ClipMgmt_lstAtrByCtnt");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_ClipMgmt_lstAtrByCtnt", (ub4)5);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_ClipAtrLst;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)YCTC_mza_Ctnt;
    _pars[2].mode = YOMODE_INOUT;
    _pars[2].tk = (yotk*)YCTC_mza_Itr;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_BadPosition;
    _pars[5].mode = YOMODE_INVALID;
    _pars[5].tk = (yotk*)yoTcNull;
    _pars[5].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_ClipAtrLst mza_ClipMgmt_lstAtrByCtnt( mza_ClipMgmt or, yoenv* ev, mza_Ctnt ctnt, mza_Itr* iterator)
{
  mza_ClipAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_ClipMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_ClipMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (void *)_impl, mza_ClipMgmt__id);
      _result = (*(mza_ClipAtrLst (*)( mza_ClipMgmt, yoenv*, mza_Ctnt, mza_Itr*))_f)(or, ev, ctnt, iterator);
    }
    else
      _result = (*_impl->lstAtrByCtnt)(or, ev, ctnt, iterator);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_ClipMgmt_lstAtrByCtnt_nw( or, ev, ctnt, iterator, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_ClipMgmt_lstAtrByCtnt_nw( mza_ClipMgmt or, yoenv* ev, mza_Ctnt ctnt, mza_Itr* iterator, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&ctnt;
  _parvec[1] = (void *) iterator;
  yoSendReq( (void *)or, ev, "lstAtrByCtnt", TRUE, _sem, (sword)2, mza_ClipMgmt_lstAtrByCtnt_pars, _parvec);
}

yopar* mza_ClipMgmt_lstAtrByNm__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_ClipMgmt_lstAtrByNm");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_ClipMgmt_lstAtrByNm", (ub4)6);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_ClipAtrLst;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcString;
    _pars[2].mode = YOMODE_INOUT;
    _pars[2].tk = (yotk*)YCTC_mza_Itr;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[5].mode = YOMODE_EXCEPT;
    _pars[5].tk = (yotk*)YCTC_mza_BadPosition;
    _pars[6].mode = YOMODE_INVALID;
    _pars[6].tk = (yotk*)yoTcNull;
    _pars[6].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_ClipAtrLst mza_ClipMgmt_lstAtrByNm( mza_ClipMgmt or, yoenv* ev, char* name, mza_Itr* iterator)
{
  mza_ClipAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_ClipMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_ClipMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)2, (void *)_impl, mza_ClipMgmt__id);
      _result = (*(mza_ClipAtrLst (*)( mza_ClipMgmt, yoenv*, char*, mza_Itr*))_f)(or, ev, name, iterator);
    }
    else
      _result = (*_impl->lstAtrByNm)(or, ev, name, iterator);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_ClipMgmt_lstAtrByNm_nw( or, ev, name, iterator, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_ClipMgmt_lstAtrByNm_nw( mza_ClipMgmt or, yoenv* ev, char* name, mza_Itr* iterator, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&name;
  _parvec[1] = (void *) iterator;
  yoSendReq( (void *)or, ev, "lstAtrByNm", TRUE, _sem, (sword)2, mza_ClipMgmt_lstAtrByNm_pars, _parvec);
}


/* Client stubs for interface ::mza::Ctnt */
static ysidDecl(mza_Ctnt___id) = "IDL:mza/Ctnt:1.0";

CONST ysid* mza_Ctnt__getId(void)
{
  return (CONST ysid*)mza_Ctnt___id;
}

static const yotk mza_Ctnt__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,',',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x11,'I','D','L',':','m','z','a','/','C','t',
  'n','t',':','1','.','0',0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c
  ,':',':','m','z','a',':',':','C','t','n','t',0x00};

yotk* mza_Ctnt__getTC(void)
{
  return (yotk*)mza_Ctnt__tc;
}


void mza_Ctnt__free( mza_Ctnt* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_Ctnt, (void *)val, ffunc);
}

void mza_Ctnt__copy( mza_Ctnt* dest, mza_Ctnt* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_Ctnt, (void *)dest, (void *)src, afunc);
}


yopar* mza_Ctnt_updateStats__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Ctnt_updateStats");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Ctnt_updateStats", (ub4)5);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcLongLong;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcLong;
    _pars[2].mode = YOMODE_IN;
    _pars[2].tk = (yotk*)yoTcLong;
    _pars[3].mode = YOMODE_IN;
    _pars[3].tk = (yotk*)yoTcString;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[5].mode = YOMODE_INVALID;
    _pars[5].tk = (yotk*)yoTcNull;
    _pars[5].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Ctnt_updateStats( mza_Ctnt or, yoenv* ev, sysb8 len, sb4 msecs, sb4 sugBufSz, char* status)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Ctnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Ctnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_Ctnt__id);
      (*(void (*)( mza_Ctnt, yoenv*, sysb8, sb4, sb4, char*))_f)(or, ev, len, msecs, sugBufSz, status);
    }
    else
      (*_impl->updateStats)(or, ev, len, msecs, sugBufSz, status);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Ctnt_updateStats_nw( or, ev, len, msecs, sugBufSz, status, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_Ctnt_updateStats_nw( mza_Ctnt or, yoenv* ev, sysb8 len, sb4 msecs, sb4 sugBufSz, char* status, ysevt* _sem)
{
  void * _parvec[4];

  _parvec[0] = (void *)&len;
  _parvec[1] = (void *)&msecs;
  _parvec[2] = (void *)&sugBufSz;
  _parvec[3] = (void *)&status;
  yoSendReq( (void *)or, ev, "updateStats", TRUE, _sem, (sword)4, mza_Ctnt_updateStats_pars, _parvec);
}

yopar* mza_Ctnt_updateSugBufSz__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Ctnt_updateSugBufSz");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Ctnt_updateSugBufSz", (ub4)2);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcLong;
    _pars[1].mode = YOMODE_EXCEPT;
    _pars[1].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[2].mode = YOMODE_INVALID;
    _pars[2].tk = (yotk*)yoTcNull;
    _pars[2].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Ctnt_updateSugBufSz( mza_Ctnt or, yoenv* ev, sb4 sugBufSz)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Ctnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Ctnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (void *)_impl, mza_Ctnt__id);
      (*(void (*)( mza_Ctnt, yoenv*, sb4))_f)(or, ev, sugBufSz);
    }
    else
      (*_impl->updateSugBufSz)(or, ev, sugBufSz);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Ctnt_updateSugBufSz_nw( or, ev, sugBufSz, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_Ctnt_updateSugBufSz_nw( mza_Ctnt or, yoenv* ev, sb4 sugBufSz, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&sugBufSz;
  yoSendReq( (void *)or, ev, "updateSugBufSz", TRUE, _sem, (sword)1, mza_Ctnt_updateSugBufSz_pars, _parvec);
}

yopar* mza_Ctnt_updateTimes__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Ctnt_updateTimes");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Ctnt_updateTimes", (ub4)3);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcLongLong;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcLongLong;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[3].mode = YOMODE_INVALID;
    _pars[3].tk = (yotk*)yoTcNull;
    _pars[3].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Ctnt_updateTimes( mza_Ctnt or, yoenv* ev, sysb8 firstTime, sysb8 lastTime)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Ctnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Ctnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)2, (void *)_impl, mza_Ctnt__id);
      (*(void (*)( mza_Ctnt, yoenv*, sysb8, sysb8))_f)(or, ev, firstTime, lastTime);
    }
    else
      (*_impl->updateTimes)(or, ev, firstTime, lastTime);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Ctnt_updateTimes_nw( or, ev, firstTime, lastTime, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_Ctnt_updateTimes_nw( mza_Ctnt or, yoenv* ev, sysb8 firstTime, sysb8 lastTime, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&firstTime;
  _parvec[1] = (void *)&lastTime;
  yoSendReq( (void *)or, ev, "updateTimes", TRUE, _sem, (sword)2, mza_Ctnt_updateTimes_pars, _parvec);
}

yopar* mza_Ctnt_setAtr__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Ctnt_setAtr");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Ctnt_setAtr", (ub4)3);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)YCTC_mza_CtntAtr;
    _pars[1].mode = YOMODE_EXCEPT;
    _pars[1].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[3].mode = YOMODE_INVALID;
    _pars[3].tk = (yotk*)yoTcNull;
    _pars[3].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Ctnt_setAtr( mza_Ctnt or, yoenv* ev, mza_CtntAtr* ctntAtr)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Ctnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Ctnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)3, (void *)_impl, mza_Ctnt__id);
      (*(void (*)( mza_Ctnt, yoenv*, mza_CtntAtr*))_f)(or, ev, ctntAtr);
    }
    else
      (*_impl->setAtr)(or, ev, ctntAtr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Ctnt_setAtr_nw( or, ev, ctntAtr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_Ctnt_setAtr_nw( mza_Ctnt or, yoenv* ev, mza_CtntAtr* ctntAtr, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) ctntAtr;
  yoSendReq( (void *)or, ev, "setAtr", TRUE, _sem, (sword)1, mza_Ctnt_setAtr_pars, _parvec);
}

yopar* mza_Ctnt_getAtr__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Ctnt_getAtr");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Ctnt_getAtr", (ub4)2);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_OUT;
    _pars[0].tk = (yotk*)YCTC_mza_CtntAtr;
    _pars[1].mode = YOMODE_EXCEPT;
    _pars[1].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[2].mode = YOMODE_INVALID;
    _pars[2].tk = (yotk*)yoTcNull;
    _pars[2].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Ctnt_getAtr( mza_Ctnt or, yoenv* ev, mza_CtntAtr* ctntAtr)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Ctnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Ctnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)4, (void *)_impl, mza_Ctnt__id);
      (*(void (*)( mza_Ctnt, yoenv*, mza_CtntAtr*))_f)(or, ev, ctntAtr);
    }
    else
      (*_impl->getAtr)(or, ev, ctntAtr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Ctnt_getAtr_nw( or, ev, ctntAtr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_Ctnt_getAtr_nw( mza_Ctnt or, yoenv* ev, mza_CtntAtr* ctntAtr, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) ctntAtr;
  yoSendReq( (void *)or, ev, "getAtr", TRUE, _sem, (sword)1, mza_Ctnt_getAtr_pars, _parvec);
}

yopar* mza_Ctnt_destroy__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_Ctnt_destroy");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_Ctnt_destroy", (ub4)2);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcBoolean;
    _pars[1].mode = YOMODE_EXCEPT;
    _pars[1].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[2].mode = YOMODE_INVALID;
    _pars[2].tk = (yotk*)yoTcNull;
    _pars[2].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_Ctnt_destroy( mza_Ctnt or, yoenv* ev, boolean cascade)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_Ctnt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_Ctnt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)5, (void *)_impl, mza_Ctnt__id);
      (*(void (*)( mza_Ctnt, yoenv*, boolean))_f)(or, ev, cascade);
    }
    else
      (*_impl->destroy)(or, ev, cascade);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_Ctnt_destroy_nw( or, ev, cascade, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_Ctnt_destroy_nw( mza_Ctnt or, yoenv* ev, boolean cascade, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&cascade;
  yoSendReq( (void *)or, ev, "destroy", TRUE, _sem, (sword)1, mza_Ctnt_destroy_pars, _parvec);
}


/* Client stubs for interface ::mza::CtntFac */
static ysidDecl(mza_CtntFac___id) = "IDL:mza/CtntFac:1.0";

CONST ysid* mza_CtntFac__getId(void)
{
  return (CONST ysid*)mza_CtntFac___id;
}

static const yotk mza_CtntFac__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'/',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x14,'I','D','L',':','m','z','a','/','C','t',
  'n','t','F','a','c',':','1','.','0',0x00,0x00,0x00,0x00,0x0f
  ,':',':','m','z','a',':',':','C','t','n','t','F','a','c',0x00
  };

yotk* mza_CtntFac__getTC(void)
{
  return (yotk*)mza_CtntFac__tc;
}


void mza_CtntFac__free( mza_CtntFac* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_CtntFac, (void *)val, ffunc);
}

void mza_CtntFac__copy( mza_CtntFac* dest, mza_CtntFac* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_CtntFac, (void *)dest, (void *)src, afunc);
}


yopar* mza_CtntFac_create__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntFac_create");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntFac_create", (ub4)4);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_Ctnt;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)YCTC_mza_CtntAtr;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[4].mode = YOMODE_INVALID;
    _pars[4].tk = (yotk*)yoTcNull;
    _pars[4].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_Ctnt mza_CtntFac_create( mza_CtntFac or, yoenv* ev, mza_CtntAtr* ctntAtr)
{
  mza_Ctnt _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntFac__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntFac__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_CtntFac__id);
      _result = (*(mza_Ctnt (*)( mza_CtntFac, yoenv*, mza_CtntAtr*))_f)(or, ev, ctntAtr);
    }
    else
      _result = (*_impl->create)(or, ev, ctntAtr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntFac_create_nw( or, ev, ctntAtr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_CtntFac_create_nw( mza_CtntFac or, yoenv* ev, mza_CtntAtr* ctntAtr, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) ctntAtr;
  yoSendReq( (void *)or, ev, "create", TRUE, _sem, (sword)1, mza_CtntFac_create_pars, _parvec);
}


/* Client stubs for interface ::mza::CtntMgmt */
static ysidDecl(mza_CtntMgmt___id) = "IDL:mza/CtntMgmt:1.0";

CONST ysid* mza_CtntMgmt__getId(void)
{
  return (CONST ysid*)mza_CtntMgmt___id;
}

static const yotk mza_CtntMgmt__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'4',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x15,'I','D','L',':','m','z','a','/','C','t',
  'n','t','M','g','m','t',':','1','.','0',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x10,':',':','m','z','a',':',':','C','t','n',
  't','M','g','m','t',0x00};

yotk* mza_CtntMgmt__getTC(void)
{
  return (yotk*)mza_CtntMgmt__tc;
}


void mza_CtntMgmt__free( mza_CtntMgmt* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_CtntMgmt, (void *)val, ffunc);
}

void mza_CtntMgmt__copy( mza_CtntMgmt* dest, mza_CtntMgmt* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_CtntMgmt, (void *)dest, (void *)src, afunc);
}


yopar* mza_CtntMgmt_lstAtr__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntMgmt_lstAtr");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntMgmt_lstAtr", (ub4)4);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_CtntAtrLst;
    _pars[1].mode = YOMODE_INOUT;
    _pars[1].tk = (yotk*)YCTC_mza_Itr;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_BadProhib;
    _pars[4].mode = YOMODE_INVALID;
    _pars[4].tk = (yotk*)yoTcNull;
    _pars[4].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_CtntAtrLst mza_CtntMgmt_lstAtr( mza_CtntMgmt or, yoenv* ev, mza_Itr* itr)
{
  mza_CtntAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_CtntMgmt__id);
      _result = (*(mza_CtntAtrLst (*)( mza_CtntMgmt, yoenv*, mza_Itr*))_f)(or, ev, itr);
    }
    else
      _result = (*_impl->lstAtr)(or, ev, itr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntMgmt_lstAtr_nw( or, ev, itr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_CtntMgmt_lstAtr_nw( mza_CtntMgmt or, yoenv* ev, mza_Itr* itr, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) itr;
  yoSendReq( (void *)or, ev, "lstAtr", TRUE, _sem, (sword)1, mza_CtntMgmt_lstAtr_pars, _parvec);
}

yopar* mza_CtntMgmt_lstAtrByNm__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntMgmt_lstAtrByNm");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntMgmt_lstAtrByNm", (ub4)5);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_CtntAtrLst;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcString;
    _pars[2].mode = YOMODE_INOUT;
    _pars[2].tk = (yotk*)YCTC_mza_Itr;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_BadProhib;
    _pars[5].mode = YOMODE_INVALID;
    _pars[5].tk = (yotk*)yoTcNull;
    _pars[5].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_CtntAtrLst mza_CtntMgmt_lstAtrByNm( mza_CtntMgmt or, yoenv* ev, char* name, mza_Itr* itr)
{
  mza_CtntAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (void *)_impl, mza_CtntMgmt__id);
      _result = (*(mza_CtntAtrLst (*)( mza_CtntMgmt, yoenv*, char*, mza_Itr*))_f)(or, ev, name, itr);
    }
    else
      _result = (*_impl->lstAtrByNm)(or, ev, name, itr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntMgmt_lstAtrByNm_nw( or, ev, name, itr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_CtntMgmt_lstAtrByNm_nw( mza_CtntMgmt or, yoenv* ev, char* name, mza_Itr* itr, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&name;
  _parvec[1] = (void *) itr;
  yoSendReq( (void *)or, ev, "lstAtrByNm", TRUE, _sem, (sword)2, mza_CtntMgmt_lstAtrByNm_pars, _parvec);
}

yopar* mza_CtntMgmt_lstAtrByFileNm__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntMgmt_lstAtrByFileNm");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntMgmt_lstAtrByFileNm", (ub4)5);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_CtntAtrLst;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcString;
    _pars[2].mode = YOMODE_INOUT;
    _pars[2].tk = (yotk*)YCTC_mza_Itr;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_BadProhib;
    _pars[5].mode = YOMODE_INVALID;
    _pars[5].tk = (yotk*)yoTcNull;
    _pars[5].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_CtntAtrLst mza_CtntMgmt_lstAtrByFileNm( mza_CtntMgmt or, yoenv* ev, char* filename, mza_Itr* itr)
{
  mza_CtntAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)2, (void *)_impl, mza_CtntMgmt__id);
      _result = (*(mza_CtntAtrLst (*)( mza_CtntMgmt, yoenv*, char*, mza_Itr*))_f)(or, ev, filename, itr);
    }
    else
      _result = (*_impl->lstAtrByFileNm)(or, ev, filename, itr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntMgmt_lstAtrByFileNm_nw( or, ev, filename, itr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_CtntMgmt_lstAtrByFileNm_nw( mza_CtntMgmt or, yoenv* ev, char* filename, mza_Itr* itr, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&filename;
  _parvec[1] = (void *) itr;
  yoSendReq( (void *)or, ev, "lstAtrByFileNm", TRUE, _sem, (sword)2, mza_CtntMgmt_lstAtrByFileNm_pars, _parvec);
}


/* Client stubs for interface ::mza::CtntPvdr */
static ysidDecl(mza_CtntPvdr___id) = "IDL:mza/CtntPvdr:1.0";

CONST ysid* mza_CtntPvdr__getId(void)
{
  return (CONST ysid*)mza_CtntPvdr___id;
}

static const yotk mza_CtntPvdr__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'4',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x15,'I','D','L',':','m','z','a','/','C','t',
  'n','t','P','v','d','r',':','1','.','0',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x10,':',':','m','z','a',':',':','C','t','n',
  't','P','v','d','r',0x00};

yotk* mza_CtntPvdr__getTC(void)
{
  return (yotk*)mza_CtntPvdr__tc;
}


void mza_CtntPvdr__free( mza_CtntPvdr* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_CtntPvdr, (void *)val, ffunc);
}

void mza_CtntPvdr__copy( mza_CtntPvdr* dest, mza_CtntPvdr* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_CtntPvdr, (void *)dest, (void *)src, afunc);
}


yopar* mza_CtntPvdr_getAtr__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntPvdr_getAtr");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntPvdr_getAtr", (ub4)2);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_OUT;
    _pars[0].tk = (yotk*)YCTC_mza_CtntPvdrAtr;
    _pars[1].mode = YOMODE_EXCEPT;
    _pars[1].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[2].mode = YOMODE_INVALID;
    _pars[2].tk = (yotk*)yoTcNull;
    _pars[2].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_CtntPvdr_getAtr( mza_CtntPvdr or, yoenv* ev, mza_CtntPvdrAtr* ctntpvdrAtr)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntPvdr__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntPvdr__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_CtntPvdr__id);
      (*(void (*)( mza_CtntPvdr, yoenv*, mza_CtntPvdrAtr*))_f)(or, ev, ctntpvdrAtr);
    }
    else
      (*_impl->getAtr)(or, ev, ctntpvdrAtr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntPvdr_getAtr_nw( or, ev, ctntpvdrAtr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_CtntPvdr_getAtr_nw( mza_CtntPvdr or, yoenv* ev, mza_CtntPvdrAtr* ctntpvdrAtr, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) ctntpvdrAtr;
  yoSendReq( (void *)or, ev, "getAtr", TRUE, _sem, (sword)1, mza_CtntPvdr_getAtr_pars, _parvec);
}

yopar* mza_CtntPvdr_destroy__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntPvdr_destroy");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntPvdr_destroy", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_EXCEPT;
    _pars[0].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_CtntPvdr_destroy( mza_CtntPvdr or, yoenv* ev)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntPvdr__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntPvdr__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (void *)_impl, mza_CtntPvdr__id);
      (*(void (*)( mza_CtntPvdr, yoenv*))_f)(or, ev);
    }
    else
      (*_impl->destroy)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntPvdr_destroy_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_CtntPvdr_destroy_nw( mza_CtntPvdr or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "destroy", TRUE, _sem, (sword)0, mza_CtntPvdr_destroy_pars, (void **)0);
}

yopar* mza_CtntPvdr__get_name__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntPvdr__get_name");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntPvdr__get_name", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

char* mza_CtntPvdr__get_name( mza_CtntPvdr or, yoenv* ev)
{
  char* _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntPvdr__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntPvdr__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)2, (void *)_impl, mza_CtntPvdr__id);
      _result = (*(char* (*)( mza_CtntPvdr, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_name)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntPvdr__get_name_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_CtntPvdr__get_name_nw( mza_CtntPvdr or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_name", TRUE, _sem, (sword)0, mza_CtntPvdr__get_name_pars, (void **)0);
}

void mza_CtntPvdr__set_name( mza_CtntPvdr or, yoenv* ev, char* val)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntPvdr__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntPvdr__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)3, (void *)_impl, mza_CtntPvdr__id);
      (*(void (*)( mza_CtntPvdr, yoenv*, char*))_f)(or, ev, val);
    }
    else
      (*_impl->_set_name)(or, ev, val);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntPvdr__set_name_nw( or, ev, val, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

yopar* mza_CtntPvdr__set_name__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntPvdr__set_name");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntPvdr__set_name", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_CtntPvdr__set_name_nw( mza_CtntPvdr or, yoenv* ev, char* val, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&val;
  yoSendReq( (void *)or, ev, "_set_name", TRUE, _sem, (sword)1, mza_CtntPvdr__set_name_pars, _parvec);
}

yopar* mza_CtntPvdr__get_desc__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntPvdr__get_desc");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntPvdr__get_desc", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

char* mza_CtntPvdr__get_desc( mza_CtntPvdr or, yoenv* ev)
{
  char* _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntPvdr__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntPvdr__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)4, (void *)_impl, mza_CtntPvdr__id);
      _result = (*(char* (*)( mza_CtntPvdr, yoenv*))_f)(or, ev);
    }
    else
      _result = (*_impl->_get_desc)(or, ev);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntPvdr__get_desc_nw( or, ev, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_CtntPvdr__get_desc_nw( mza_CtntPvdr or, yoenv* ev, ysevt* _sem)
{
  yoSendReq( (void *)or, ev, "_get_desc", TRUE, _sem, (sword)0, mza_CtntPvdr__get_desc_pars, (void **)0);
}

void mza_CtntPvdr__set_desc( mza_CtntPvdr or, yoenv* ev, char* val)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntPvdr__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntPvdr__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)5, (void *)_impl, mza_CtntPvdr__id);
      (*(void (*)( mza_CtntPvdr, yoenv*, char*))_f)(or, ev, val);
    }
    else
      (*_impl->_set_desc)(or, ev, val);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntPvdr__set_desc_nw( or, ev, val, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

yopar* mza_CtntPvdr__set_desc__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntPvdr__set_desc");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntPvdr__set_desc", (ub4)1);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_INVALID;
    _pars[1].tk = (yotk*)yoTcNull;
    _pars[1].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_CtntPvdr__set_desc_nw( mza_CtntPvdr or, yoenv* ev, char* val, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *)&val;
  yoSendReq( (void *)or, ev, "_set_desc", TRUE, _sem, (sword)1, mza_CtntPvdr__set_desc_pars, _parvec);
}


/* Client stubs for interface ::mza::CtntPvdrFac */
static ysidDecl(mza_CtntPvdrFac___id) = "IDL:mza/CtntPvdrFac:1.0";

CONST ysid* mza_CtntPvdrFac__getId(void)
{
  return (CONST ysid*)mza_CtntPvdrFac___id;
}

static const yotk mza_CtntPvdrFac__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'7',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x18,'I','D','L',':','m','z','a','/','C','t',
  'n','t','P','v','d','r','F','a','c',':','1','.','0',0x00,0x00
  ,0x00,0x00,0x13,':',':','m','z','a',':',':','C','t','n','t',
  'P','v','d','r','F','a','c',0x00};

yotk* mza_CtntPvdrFac__getTC(void)
{
  return (yotk*)mza_CtntPvdrFac__tc;
}


void mza_CtntPvdrFac__free( mza_CtntPvdrFac* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_CtntPvdrFac, (void *)val, ffunc);
}

void mza_CtntPvdrFac__copy( mza_CtntPvdrFac* dest, mza_CtntPvdrFac* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_CtntPvdrFac, (void *)dest, (void *)src, afunc);
}


yopar* mza_CtntPvdrFac_create__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntPvdrFac_create");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntPvdrFac_create", (ub4)5);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_CtntPvdr;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcString;
    _pars[2].mode = YOMODE_IN;
    _pars[2].tk = (yotk*)yoTcString;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[4].mode = YOMODE_EXCEPT;
    _pars[4].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[5].mode = YOMODE_INVALID;
    _pars[5].tk = (yotk*)yoTcNull;
    _pars[5].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_CtntPvdr mza_CtntPvdrFac_create( mza_CtntPvdrFac or, yoenv* ev, char* name, char* desc)
{
  mza_CtntPvdr _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntPvdrFac__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntPvdrFac__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_CtntPvdrFac__id);
      _result = (*(mza_CtntPvdr (*)( mza_CtntPvdrFac, yoenv*, char*, char*))_f)(or, ev, name, desc);
    }
    else
      _result = (*_impl->create)(or, ev, name, desc);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntPvdrFac_create_nw( or, ev, name, desc, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_CtntPvdrFac_create_nw( mza_CtntPvdrFac or, yoenv* ev, char* name, char* desc, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&name;
  _parvec[1] = (void *)&desc;
  yoSendReq( (void *)or, ev, "create", TRUE, _sem, (sword)2, mza_CtntPvdrFac_create_pars, _parvec);
}


/* Client stubs for interface ::mza::CtntPvdrMgmt */
static ysidDecl(mza_CtntPvdrMgmt___id) = "IDL:mza/CtntPvdrMgmt:1.0";

CONST ysid* mza_CtntPvdrMgmt__getId(void)
{
  return (CONST ysid*)mza_CtntPvdrMgmt___id;
}

static const yotk mza_CtntPvdrMgmt__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'<',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x19,'I','D','L',':','m','z','a','/','C','t',
  'n','t','P','v','d','r','M','g','m','t',':','1','.','0',0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x14,':',':','m','z','a',':',
  ':','C','t','n','t','P','v','d','r','M','g','m','t',0x00};

yotk* mza_CtntPvdrMgmt__getTC(void)
{
  return (yotk*)mza_CtntPvdrMgmt__tc;
}


void mza_CtntPvdrMgmt__free( mza_CtntPvdrMgmt* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_CtntPvdrMgmt, (void *)val, ffunc);
}

void mza_CtntPvdrMgmt__copy( mza_CtntPvdrMgmt* dest, mza_CtntPvdrMgmt* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_CtntPvdrMgmt, (void *)dest, (void *)src, afunc);
}


yopar* mza_CtntPvdrMgmt_lstAtr__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntPvdrMgmt_lstAtr");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntPvdrMgmt_lstAtr", (ub4)3);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_CtntPvdrAtrLst;
    _pars[1].mode = YOMODE_INOUT;
    _pars[1].tk = (yotk*)YCTC_mza_Itr;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[3].mode = YOMODE_INVALID;
    _pars[3].tk = (yotk*)yoTcNull;
    _pars[3].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_CtntPvdrAtrLst mza_CtntPvdrMgmt_lstAtr( mza_CtntPvdrMgmt or, yoenv* ev, mza_Itr* itr)
{
  mza_CtntPvdrAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntPvdrMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntPvdrMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_CtntPvdrMgmt__id);
      _result = (*(mza_CtntPvdrAtrLst (*)( mza_CtntPvdrMgmt, yoenv*, mza_Itr*))_f)(or, ev, itr);
    }
    else
      _result = (*_impl->lstAtr)(or, ev, itr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntPvdrMgmt_lstAtr_nw( or, ev, itr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_CtntPvdrMgmt_lstAtr_nw( mza_CtntPvdrMgmt or, yoenv* ev, mza_Itr* itr, ysevt* _sem)
{
  void * _parvec[1];

  _parvec[0] = (void *) itr;
  yoSendReq( (void *)or, ev, "lstAtr", TRUE, _sem, (sword)1, mza_CtntPvdrMgmt_lstAtr_pars, _parvec);
}

yopar* mza_CtntPvdrMgmt_getAtrByNm__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_CtntPvdrMgmt_getAtrByNm");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_CtntPvdrMgmt_getAtrByNm", (ub4)4);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_IN;
    _pars[0].tk = (yotk*)yoTcString;
    _pars[1].mode = YOMODE_OUT;
    _pars[1].tk = (yotk*)YCTC_mza_CtntPvdrAtr;
    _pars[2].mode = YOMODE_EXCEPT;
    _pars[2].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_PersistenceError;
    _pars[4].mode = YOMODE_INVALID;
    _pars[4].tk = (yotk*)yoTcNull;
    _pars[4].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

void mza_CtntPvdrMgmt_getAtrByNm( mza_CtntPvdrMgmt or, yoenv* ev, char* name, mza_CtntPvdrAtr* ctntPvdrAtr)
{
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_CtntPvdrMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_CtntPvdrMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)1, (void *)_impl, mza_CtntPvdrMgmt__id);
      (*(void (*)( mza_CtntPvdrMgmt, yoenv*, char*, mza_CtntPvdrAtr*))_f)(or, ev, name, ctntPvdrAtr);
    }
    else
      (*_impl->getAtrByNm)(or, ev, name, ctntPvdrAtr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_CtntPvdrMgmt_getAtrByNm_nw( or, ev, name, ctntPvdrAtr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)0);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
}

void mza_CtntPvdrMgmt_getAtrByNm_nw( mza_CtntPvdrMgmt or, yoenv* ev, char* name, mza_CtntPvdrAtr* ctntPvdrAtr, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&name;
  _parvec[1] = (void *) ctntPvdrAtr;
  yoSendReq( (void *)or, ev, "getAtrByNm", TRUE, _sem, (sword)2, mza_CtntPvdrMgmt_getAtrByNm_pars, _parvec);
}


/* Client stubs for interface ::mza::BlobMgmt */
static ysidDecl(mza_BlobMgmt___id) = "IDL:mza/BlobMgmt:1.0";

CONST ysid* mza_BlobMgmt__getId(void)
{
  return (CONST ysid*)mza_BlobMgmt___id;
}

static const yotk mza_BlobMgmt__tc[] = 
  {0x00,0x00,0x00,0x0e,0x00,0x00,0x00,'4',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x15,'I','D','L',':','m','z','a','/','B','l',
  'o','b','M','g','m','t',':','1','.','0',0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x10,':',':','m','z','a',':',':','B','l','o',
  'b','M','g','m','t',0x00};

yotk* mza_BlobMgmt__getTC(void)
{
  return (yotk*)mza_BlobMgmt__tc;
}


void mza_BlobMgmt__free( mza_BlobMgmt* val, ysmff ffunc)
{
  yotkFreeVal( YCTC_mza_BlobMgmt, (void *)val, ffunc);
}

void mza_BlobMgmt__copy( mza_BlobMgmt* dest, mza_BlobMgmt* src, ysmaf afunc)
{
  yotkCopyVal( YCTC_mza_BlobMgmt, (void *)dest, (void *)src, afunc);
}


yopar* mza_BlobMgmt_lstAtrByNm__getPars(void)
{
  yopar* _pars = (yopar*)0;

  _pars = yoParsGet( "mza_BlobMgmt_lstAtrByNm");
  if ( _pars == (yopar*)0 )
  {
    yopard* _desc = yoPardCreate( "mza_BlobMgmt_lstAtrByNm", (ub4)4);
    _pars = _desc->pars;
    _pars[0].mode = YOMODE_RETURN;
    _pars[0].tk = (yotk*)YCTC_mza_LgCtntAtrLst;
    _pars[1].mode = YOMODE_IN;
    _pars[1].tk = (yotk*)yoTcString;
    _pars[2].mode = YOMODE_INOUT;
    _pars[2].tk = (yotk*)YCTC_mza_Itr;
    _pars[3].mode = YOMODE_EXCEPT;
    _pars[3].tk = (yotk*)YCTC_mza_DataConversion;
    _pars[4].mode = YOMODE_INVALID;
    _pars[4].tk = (yotk*)yoTcNull;
    _pars[4].sz = (ub4)0;
    yoParsSize( _pars);
    yoParsSet( _desc);
  }
  return _pars;
}

mza_LgCtntAtrLst mza_BlobMgmt_lstAtrByNm( mza_BlobMgmt or, yoenv* ev, char* blobName, mza_Itr* itr)
{
  mza_LgCtntAtrLst _result;
  ysevt* volatile _sem = (ysevt*)0;
  struct mza_BlobMgmt__tyimpl* _impl;
  yowiden _widen = (yowiden)0;

  _impl = (struct mza_BlobMgmt__tyimpl*) yoLocalObj( (CORBA_Object)or, (yowiden*)&_widen);
  if ( _impl )
  {
    if ( _widen )
    {
      yogfp _f = (*_widen)( (ub4)0, (void *)_impl, mza_BlobMgmt__id);
      _result = (*(mza_LgCtntAtrLst (*)( mza_BlobMgmt, yoenv*, char*, mza_Itr*))_f)(or, ev, blobName, itr);
    }
    else
      _result = (*_impl->lstAtrByNm)(or, ev, blobName, itr);
  }
  else
  {
    yoFilterRunEx((void *)or, ev, YOFLTR_CSND, (const  char*)0, (void *)0);
    yseTry
    {
      _sem = ysSemCreate((void *)0);
      mza_BlobMgmt_lstAtrByNm_nw( or, ev, blobName, itr, (ysevt*)_sem);
    }
    yseCatchAll
    {
      const ysid* _exid;
      void * _exbody;

      _exid = yseExid;
      _exbody = yseExobj;
      yseTry
      {
        yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, _exid, _exbody);
      }
      yseFinally
      {
        if ( _sem )
          ysSemDestroy( (ysevt*)_sem);
      }
      yseEnd
      yseRethrow;
    }
    yseEnd
    yseTry
    {
      ysSemSynch( (ysevt*)_sem, (void *)&_result);
    }
    yseFinally
      yoFilterRunEx((void *)or, ev, YOFLTR_CRCV, yseExid, yseExobj);
    yseEnd
  }
  return _result;
}

void mza_BlobMgmt_lstAtrByNm_nw( mza_BlobMgmt or, yoenv* ev, char* blobName, mza_Itr* itr, ysevt* _sem)
{
  void * _parvec[2];

  _parvec[0] = (void *)&blobName;
  _parvec[1] = (void *) itr;
  yoSendReq( (void *)or, ev, "lstAtrByNm", TRUE, _sem, (sword)2, mza_BlobMgmt_lstAtrByNm_pars, _parvec);
}



EXTC_END
