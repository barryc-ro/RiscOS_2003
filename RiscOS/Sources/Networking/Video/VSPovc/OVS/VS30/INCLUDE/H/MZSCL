/*----------------------------------------------------------------------------
// File: mzscl.h - Media Zerver Streams CLient interface
// Description:
//   This is a layer of C code that can be used by clients that want a
//   simplified interface for getting notified of server events.  Clients
//   that require more flexibility can 
// Modification History:
//   Date	Name	Comments
//   01-Dec-97  dpawson Olint
//   16-Sep-97  plord   #(551848)Use unique key for Idler      
//   17-Dec-96  dpawson Cleanup and recomment
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
// Oracle Corporation							     
// Oracle Media Server (TM)						     
// All Rights Reserved
// Copyright (C) 1993-1996						     
//--------------------------------------------------------------------------*/

#ifndef MZSCL_ORACLE
#define MZSCL_ORACLE

/*-------------------------------- Includes ---------------------------------*/

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif

#ifndef MZSCLI_ORACLE
#include <mzscli.h>     /* Client side ORB interface */
#endif

#ifndef MZS_ORACLE
#include <mzs.h>        /* Generated mzs interface */
#endif

/*--------------------------------------------------------------------------
// Public Structures
//------------------------------------------------------------------------*/

/*------------------------ mzs_stream_cliCallbackHdlr -----------------------
// This type describes a client callback function.  The client passes a    
// pointer to such a function into the mzs client size interface.  When a  
// callback event arrives from the server, this function is called to      
// inform the client.
// Input:
//   ctx        A context opaque to mzs.  It is passed in when the callback
//              function is registered, and handed back to the client
//              whenever a callback event occurs.
//   reason     The reason why the client is being called back.  These are
//              enumerated in mzscli.idl.
// Output:
//   Nothing
// Returns:
//   Nothing
// Raises:
//   Dependent upon the client implementation
//-------------------------------------------------------------------------*/
typedef void (*mzs_stream_cliCallbackHdlr)(dvoid *ctx, mzs_notify reason);

/*---------------------------------------------------------------------------
// This is an example callback function that a client might provide:
// void TestCliFunc1(dvoid  *argv, mzs_notify reason)
// {
//   ClientDefinedType  *p = (ClientDefinedType *) argv;
//
//   (void)fprintf(stderr, 
//                 "TestCliFunc1 called from mzs, argv=%d, reason=%d\n",
//                 p->ClientDefinedFields, (ub4)reason); 
// } 
//-------------------------------------------------------------------------*/

/*--------------------------------------------------------------------------
// Private Structures
//   The following structures are private to mzs and should not be used
//   directly by client code.
//------------------------------------------------------------------------*/
typedef struct mzsclCliCtx
{
  mzs_clientCB                  orCli_mzsclCliCtx;
  ysque                        *ImplCliQueCB_mzsclCliCtx;
  mzs_stream_cliCallbackHdlr    fup_mzsclCliCtx;
  dvoid                        *argv_mzsclCliCtx;
  mzs_notify                    reason_mzsclCliCtx;
  char                         *idler_mzsclCliCtx;
} mzsclCliCtx;


/*-------------------------------------------------------------------------
// Public Functions
//-----------------------------------------------------------------------*/

/*-------------------------------------------------------------------------
// Name: mzscl::stream::cliInit
// Function:
//   This function should be called once by the client before calling the
//   setCallback function defined below.
// Input:
//   None
// Output:
//   None
// Returns:
//   Nothing
// Raises:
//   Nothing
//-----------------------------------------------------------------------*/
void mzscl_stream_cliInit(void);

/*-------------------------------------------------------------------------
// Name: mzscl::stream::cliTerm
// Function:
//   This function should be called once by the client when it no longer
//   requires the callback functionality and is not going to call
//   setCallback or removeCallback anymore.
// Input:
//   None
// Output:
//   None
// Returns:
//   Nothing
// Raises:
//   Nothing
//-----------------------------------------------------------------------*/
void mzscl_stream_cliTerm(void);

/*-------------------------------------------------------------------------
// Name: mzscl::stream::setCallback
// Function:
//   This function is called by a client that wishes to be informed when
//   interesting events occur in the stream service.  The events that may
//   be notified can be found in mzscli.idl.  When an event is sent from
//   the server to the client, the passed function will be called.  This
//   will happen in the time period where MediaNet is idled.
// Input:
//   orS        A stream object obtained from the mzs::stream::alloc call.
//   fup        The function pointer that the client wishes to be called
//              when an event occurs.  This call will occur at mnIdle time.
//              The type of this function is described above.
//   argv       A user-specified context pointer.  This pointer will be
//              passed as an argument to the callback function when an
//              event occurs.
// Output:
//   None
// Returns:
//   Nothing
// Raises:
//   Nothing
//-----------------------------------------------------------------------*/
void mzscl_stream_setCallback(mzs_stream orS, yoenv *evCli,
                              mzs_stream_cliCallbackHdlr fup, dvoid *argv);

/*-------------------------------------------------------------------------
// Name: mzscl::stream::removeCallback
// Function:
//   This function is called by a client that has previously registered a
//   callback function via mzscl::stream::setCallback, but no longer wishes
//   to be informed when server events occur.
// Input:
//   orS        A stream object obtained from the mzs::stream::alloc call.
//   evCli      A yoenv the client wishes to be passed to the server for
//              the remove callback operation.
// Output:
//   None
// Returns:
//   Nothing
// Raises:
//   Nothing
//-----------------------------------------------------------------------*/
void mzscl_stream_removeCallback(mzs_stream orS, yoenv  *evCli);

#endif
