/* Copyright (c) 1997 by Oracle Corporation.  All Rights Reserved.
 *
 * ovsf.h
 *
 * This defines the "Oracle Streaming Format" for low-bitrate audio/video
 * applications.
 *
 * Description:
 *
 * In order to make the NCV (Network Computer Video) Project work for very low
 * bitrates, we are compelled to use AVI sourced content. Using the AVI files
 * directly is not practical in this application as a) the whole process of
 * getting the contents of an AVI file from disk-to-screen in windows relies
 * heavily on the VCM/ACM services (which do not exist on the NC), 2) AVI is
 * not an inherently streamable format as there is no concept of a "system
 * stream" to deal with missing or out-of-sequence data. To work around these
 * defenciencies, the following describes a low-bitrate streaming format which
 * can be generated using data present in an AVI file but which has some
 * built-in ways of compensating for transport problems. There are also some
 * hooks in the record design to (potentially) allow us to leverage this work
 * for projects other than NCV.
 * 
 * The basic idea here is to remux an A/V stream into records which contain all
 * the audio, video, and index information for a fixed time interval (note that
 * the number of bytes per record may vary) along with a certain number of
 * records which contain data necessary to initialize the audio/video
 * codec/renderer framework.
 * 
 * Assumptions:
 *
 * 1) Underlying transport assures integrity of data passed up (i.e. no bit
 *    errors within record).
 *
 * 2) Underlying transport either guarantees reliability of stream or can
 *    detect and inform of stream errors (e.g. out-of-sequence and/or missing
 *    or duplicate data).
 *
 * Notes:
 *
 * 1) The contents of an A/V Data Record represents the content over a fixed
 *    unit of time as defined by the A/V Init Record. The implications of this
 *    are that a) the data record will have a variable size (in bytes), b) the
 *    nature of the content's audio/video rates and blocking characteristics
 *    will determine the minumum length of time which may be represented by
 *    a record.
 *
 * 2) The Index Entries of an A/V Data Record are assumed to be arranged in
 *    time order (i.e. the index entry of a video frame will precede the index
 *    entry of a video frame which is temporally after that frame).
 *
 * 3) The record formats are all byte-aligned but should not be assumed
 *    to be either 2 or 4 byte-aligned even for those fields which are
 *    2 or 4 byte quantities. Also note that all fields defined by the
 *    record format are big-endian, but that data within a field (such as
 *    the actual A/V data itself) may be aligned in any random byte ordering
 *    the codec wanted it to be.
 *
 * 4) Unpacked A/V Index Entries, while defined, are not currently implemented.
 *
 * Revision history:
 * 09-Jul-97  mflee  added a 32-bit bitrate field to the initrecord
 * 06-May-97  mflee  added VFR delta time length
 * 28-Feb-97  alind  added record header version number.
 * 26-Feb-97  alind  revised to include sequence number for A/V records.
 *                   this is done to allow derivation of time from the
 *                   record stream.
 * 20-Feb-97  alind  revised to include variable frame-rate A/V records.
 * 12-Feb-97  alind  creation.
 *
 */
#ifndef OVSF_ORACLE
#define OVSF_ORACLE

/*
 * Record Format Version
 * NOTE: mask the two bytes located at OVSF_RECD_PROP_OFF with
 *       OVSF_RECD_VERS_MASK to obtain value to compare with OVSF_RECD_VERSION.
 */
#define OVSF_RECD_VERSION       (ub2)0x0200

/*
 * Psuedo-BNF for Record Format
 * ============================
 *
 * Record           := Record_Header [Extended_Header] Init_Data_Record
 *                  |  Record_Header [Extended_Header] A/V_Record_CFR
 *                  |  Record_Header [Extended_Header] A/V_Record_VFR
 * 
 * Record_Header    := Record_Sync Record_Properties Record_Length
 *  
 * Extended_Header  := Extended_Header_Length Extended_Header_Data
 *
 * Init_Data_Record := Record_TimeScale Video_Header Audio_Header
 *  
 * Record_TimeScale := Record_Rate Record_Scale
 *  
 * Video_Header     := Video_Timescale Video_Type Video_Codec_Init_Offset
 *  
 * Video_TimeScale  := Video_Rate Video_Scale
 *  
 * Audio_Header     := Audio_Timescale Audio_Type Audio_Codec_Init_Offset
 *  
 * Audio_TimeScale  := Audio_Rate Audio_Scale
 *  
 * A/V_Record_CFR   := Record_Sequence [Key_Skew_Time] {Index_Entry}+ A/V_Data
 *  
 * A/V_Record_VFR   := Record_Sequence [Key_Skew_Time]
 *                     {Index_Entry | Index_Entry Delta_Time}+ A/V_Data
 *  
 * Index_Entry      := A/V_Data_Properties A/V_Data_Offset
 *  
 */

/*
 * Enumerations of Record types.
 *
 * New record types must have an id assigned by Oracle and added to 
 * this section of this file.
 */

/* Record Types */
#define OVSF_RECD_TYPE_INIT_AV      0x01 /* A/V init data                  */
#define OVSF_RECD_TYPE_DATA_AV_CFR  0x02 /* A/V data (constant frame rate) */
#define OVSF_RECD_TYPE_DATA_AV_VFR  0x04 /* A/V data (variable frame rate) */

/*
 * Record Header
 * =============
 * 
 * XH - eXtended Header      - if 1 (0), extended header is (not) present
 * MM - record Memory Model  - if 0 (1), offset/length fields are 2 (4) bytes
 * PI - Packed Index entries - if 1 (0), A/V index entries are (not) packed
 * KS - Key Skew time        - if 1 (0), A/V index is (not) preceeded by the
 *                             number of milliseconds the first video key frame
 *                             is offset from the first audio sample block
 * VD - Video Delta Size     - if 1 (0), and record is a variable frame rate
 *                             A/V record, delta times will be represented
 *                             using 2 (1) byte
 *
 * "Small Record Model" (i.e. MM == 0):
 * 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +-----------------------+-----------------------+ 
 * |         0xF7          |         0x1A          | \
 * +-----------------------+-----------------------+  +--- Record Sync Pattern
 * |         0xCF          |         0x1D          | /
 * +--+--+-----+-----------+--+--+--+--------------+
 * |XH|MM| Rsvd| Recd Vers |VD|PI|KS|  Recd Type   | >---- Record Properties
 * +--+--+-----+-----------+--+--+--+--------------+
 * |     Recd Len (MSB)    |   Recd Len (LSB)      | >---- Record Length
 * +-----------------------+-----------------------+
 * 
 * "Large Record Model" (i.e. MM == 1):
 * 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +-----------------------+-----------------------+
 * |         0xF7          |         0x1A          | \
 * +-----------------------+-----------------------+  +--- Record Sync Pattern
 * |         0xCF          |         0x1D          | /
 * +--+--+-----+-----------+--+--+--+--------------+
 * |XH|MM| Rsvd| Recd Vers |VD|PI|KS|  Recd Type   | >---- Record Properties
 * +--+--+-----+-----------+--+--+--+--------------+
 * |     Recd Len (B3)     |   Recd Len (B2)       | \
 * +-----------------------+-----------------------+  +--- Record Length
 * |     Recd Len (B1)     |   Recd Len (B0)       | /
 * +-----------------------+-----------------------+
 * 
 */

/* Record Sync Pattern */
#define OVSF_RECD_SYNC_OFF        0
#define OVSF_RECD_SYNC_LEN        4

#define OVSF_RECD_SYNC            (ub4)0xf71acf1d

/* Record Properties */
#define OVSF_RECD_PROP_OFF       (OVSF_RECD_SYNC_OFF + OVSF_RECD_SYNC_LEN)
#define OVSF_RECD_PROP_LEN        2

#define OVSF_RECD_XHDR_MASK       (ub2)0x8000
#define OVSF_RECD_OFSZ_MASK       (ub2)0x4000
#define OVSF_RECD_RSVD_MASK       (ub2)0x3000
#define OVSF_RECD_VERS_MASK       (ub2)0x0f00

#define OVSF_RECD_VDSZ_MASK       (ub2)0x0080
#define OVSF_RECD_INDX_PACK_MASK  (ub2)0x0040
#define OVSF_RECD_INDX_SKEW_MASK  (ub2)0x0020
#define OVSF_RECD_TYPE_MASK       (ub2)0x001f

/* Record Length */
#define OVSF_RECD_LEN_OFF        (OVSF_RECD_PROP_OFF + OVSF_RECD_PROP_LEN)
#define OVSF_RECD_LEN_LEN(mm)   ((mm) ? 4 : 2)         

/*
 * Extended Header
 * ===============
 * "Small Record Model" (i.e. MM == 0):
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +-----------------------+-----------------------+
 * |  Ext Header Len (MSB) | Ext Header Len (LSB)  | >-- Extended Header Length
 * +-----------------------+-----------------------+
 * |          .            |           .           | \
 * ~          .            ~           .           ~  +- Extended Header Data
 * |          .            |           .           | /
 * +-----------------------+-----------------------+
 * 
 * "Large Record Model" (i.e. MM == 1):
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +-----------------------+-----------------------+
 * |  Ext Header Len (B3)  |  Ext Header Len (B2)  | \
 * +-----------------------+-----------------------+  +- Extended Header Length
 * |  Ext Header Len (B1)  |  Ext Header Len (B0)  | /
 * +-----------------------+-----------------------+
 * |          .            |           .           | \
 * ~          .            ~           .           ~  +- Extended Header Data
 * |          .            |           .           | /
 * +-----------------------+-----------------------+
 * 
 */
#define OVSF_RECD_XHDR_OFF             0
#define OVSF_RECD_XHDR_LEN(mm)         ((mm) ? 4 : 2)         
#define OVSF_RECD_XHDR_DATA_OFF(mm)    OVSF_RECD_XHDR_LEN(mm)

/*
 * A/V Init Record
 * ===============
 * 
 * Recd Rate  - RECorD RATE  - number of records which will arrive in Recd 
 *                             Scale seconds
 * Recd Scale - RECorD SCALE - number of seconds in which Recd Rate records
 *                             will arrive
 * Video Codec Id            - video codec used for video in stream
 * Video Init Format         - format of data pointed to by Video Codec
 *                             Init Offset (see ovvcd.h for types supported)
 * Frame Rate                - number of video frames which must be displayed
 * Frame Scale               - number of seconds in which Frame Rate video
 *                             frames must be displayed
 *                             in Frame Scale seconds
 * Video Codec Init Offset   - byte offset (measured from end of record header)
 *                             at which the video codec init data begins. This
 *                             data will be passed to the ovvd init function.
 * Audio Codec Id            - audio codec used for audio in stream
 * Audio Init Format         - format of data pointed to by Audio Codec
 *                             Init Offset (see ovacd.h for types supported)
 * Sample Rate               - number of audio samples which must be played
 *                             in Sample Scale milliseconds
 * Sample Scale              - number of milliseconds in which Sample Rate 
 *                             audio samples must be played
 * Audio Codec Init Offset   - byte offset (measured from end of record header)
 *                             at which the audio codec init data begins. This
 *                             data will be passed to the ovad init function.
 *
 *"Small Record Model" (i.e. MM == 0):
 *
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +-----------+-----------+-----------------------+
 * | Recd Rate | Recd Scale|   Video Init Format   |
 * +-----------+-----------+-----------------------+
 * | (B3)          Video Co|dec Id            (B2) |
 * +-----------------------+-----------------------+
 * | (B1)          Video Co|dec Id            (B0) |
 * +-----------------------+-----------------------+
 * |      Frame Rate       |      Frame Scale      |
 * +-----------------------+-----------------------+
 * |   Audio Init Format   | (B3)          Audio Co|
 * +-----------------------+-----------------------+
 * |dec Id            (B2) | (B1)          Audio Co|
 * +-----------------------+-----------------------+
 * |dec Id            (B0) | (MSB)     Sample Rate |
 * +-----------------------+-----------------------+
 * | Sample Rate     (LSB) |     Sample Scale      |
 * +-----------------------+-----------------------+
 * | (B3)      Bitrate     | Bitrate         (B2)  |
 * +-----------------------+-----------------------+
 * | (B1)      Bitrate     | Bitrate         (B0)  |
 * +-----------------------+-----------------------+
 * | (MSB)     Video Codec | Init Offset     (LSB) |
 * +-----------------------+-----------------------+
 * | (MSB)     Audio Codec | Init Offset     (LSB) |
 * +-----------------------+-----------------------+
 *
 *"Large Record Model" (i.e. MM == 1):
 *
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +-----------+-----------+-----------------------+
 * | Recd Rate | Recd Scale|   Video Init Format   |
 * +-----------+-----------+-----------------------+
 * | (B3)          Video Co|dec Id            (B2) |
 * +-----------------------+-----------------------+
 * | (B1)          Video Co|dec Id            (B0) |
 * +-----------------------+-----------------------+
 * |      Frame Rate       |      Frame Scale      |
 * +-----------------------+-----------------------+
 * |   Audio Init Format   | (B3)          Audio Co|
 * +-----------------------+-----------------------+
 * |dec Id            (B2) | (B1)          Audio Co|
 * +-----------------------+-----------------------+
 * |dec Id            (B0) | (MSB)     Sample Rate |
 * +-----------------------+-----------------------+
 * | Sample Rate     (LSB) |     Sample Scale      |
 * +-----------------------+-----------------------+
 * | (B3)      Bitrate     | Bitrate         (B2)  |
 * +-----------------------+-----------------------+
 * | (B1)      Bitrate     | Bitrate         (B0)  |
 * +-----------------------+-----------------------+
 * | (B3)      Video Codec | Init Offset      (B2) |
 * +-----------------------+-----------------------+
 * | (B1)      Video Codec | Init Offset      (B0) |
 * +-----------------------+-----------------------+
 * | (B3)      Audio Codec | Init Offset      (B2) |
 * +-----------------------+-----------------------+
 * | (B1)      Audio Codec | Init Offset      (B0) |
 * +-----------------------+-----------------------+
 *
 */
#define OVSF_INIT_RECD_OFF         OVSF_INIT_OFF
#define OVSF_INIT_RECD_LEN         1
#define OVSF_INIT_RECD_RATE_MASK   (ub1)0xf0
#define OVSF_INIT_RECD_SCAL_MASK   (ub1)0x0f

#define OVSF_INIT_VID_FRMT_OFF     (OVSF_INIT_RECD_OFF + OVSF_INIT_RECD_LEN)
#define OVSF_INIT_VID_FRMT_LEN     1

#define OVSF_INIT_VID_CODC_OFF     (OVSF_INIT_VID_FRMT_OFF +\
OVSF_INIT_VID_FRMT_LEN)
#define OVSF_INIT_VID_CODC_LEN     4

#define OVSF_INIT_VID_RATE_OFF     (OVSF_INIT_VID_CODC_OFF +\
OVSF_INIT_VID_CODC_LEN)
#define OVSF_INIT_VID_RATE_LEN     1

#define OVSF_INIT_VID_SCAL_OFF     (OVSF_INIT_VID_RATE_OFF +\
OVSF_INIT_VID_RATE_LEN)
#define OVSF_INIT_VID_SCAL_LEN     1

#define OVSF_INIT_AUD_FRMT_OFF     (OVSF_INIT_VID_SCAL_OFF +\
OVSF_INIT_VID_SCAL_LEN)
#define OVSF_INIT_AUD_FRMT_LEN     1

#define OVSF_INIT_AUD_CODC_OFF     (OVSF_INIT_AUD_FRMT_OFF +\
OVSF_INIT_AUD_FRMT_LEN)
#define OVSF_INIT_AUD_CODC_LEN     4

#define OVSF_INIT_AUD_RATE_OFF     (OVSF_INIT_AUD_CODC_OFF +\
OVSF_INIT_AUD_CODC_LEN)
#define OVSF_INIT_AUD_RATE_LEN     2

#define OVSF_INIT_AUD_SCAL_OFF     (OVSF_INIT_AUD_RATE_OFF +\
OVSF_INIT_AUD_RATE_LEN)
#define OVSF_INIT_AUD_SCAL_LEN     1

#define OVSF_INIT_BITRATE_OFF      (OVSF_INIT_AUD_SCAL_OFF +\
OVSF_INIT_AUD_SCAL_LEN)
#define OVSF_INIT_BITRATE_LEN	   4

#define OVSF_INIT_VID_INIT_OFF(mm) (OVSF_INIT_BITRATE_OFF +\
OVSF_INIT_BITRATE_LEN)
#define OVSF_INIT_VID_INIT_LEN(mm) ((mm) ? 4 : 2)

#define OVSF_INIT_AUD_INIT_OFF(mm) (OVSF_INIT_VID_INIT_OFF(mm) +\
OVSF_INIT_VID_INIT_LEN(mm))
#define OVSF_INIT_AUD_INIT_LEN(mm) ((mm) ? 4 : 2)

#define OVSF_INIT_OFF              0
#define OVSF_INIT_LEN(mm)          (OVSF_INIT_AUD_INIT_OFF(mm) +\
OVSF_INIT_AUD_INIT_LEN(mm))

/*
 * A/V Data Record
 * ===============
 */
/*
 * A/V Record Sequence Number
 * ==========================
 * The Record Sequence number indicates which record this is in a stream
 * and is present to allow us to reconstruct our position in time within the
 * stream in the presence of dropped A/V data. Depending on the duration of
 * a drop it is necessary to reconstruct time after, it may be possible to
 * save some bits and use a 7-bit sequence count instead of a 15-bit sequence
 * count. For instance, if the record rate of a stream were 2 records every
 * seconds, a 7-bit sequence would allow you to successfully recover
 * your timebase provided no more than 128 records (64 seconds) of data
 * was dropped (a 15-bit sequence would yield 32767 records or ~4.551 hours).
 * 
 *   7  6  5  4  3  2  1  0
 * +--+--------------------+
 * |SS|  Record Sequence   | (SS == 0)
 * +--+--------------------+
 * 
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--------------------+-----------------------+
 * |SS| (MSB)       Record | Sequence        (LSB) | (SS == 1)
 * +--+--------------------+-----------------------+
 * 
 * SS == 0 (1) => record sequence number is one (two) bytes wide with range
 *                0 -> 127 (32767)
 *
 */
#define OVSF_SEQ_OFF            0
#define OVSF_SEQ_LEN(ss)        ((ss) ? 2 : 1)

#define OVSF_SEQ_SIZE_MASK      0x80
#define OVSF_SEQ_MASK(ss)       ((ss) ? (ub2)0x7fff : (ub1)0x7f)

/*
 *
 * A/V Key Skew Time Entry
 * =======================
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--------------------+-----------------------+
 * |SG| (MSB)         Skew | Time            (LSB) |
 * +--+--------------------+-----------------------+
 * 
 * SG == 0 (1) => 1st video key frame lags (leads) 1st audio sample block by
 *                Skew Time milliseconds
 * 
 */
#define OVSF_SKEW_OFF             0
#define OVSF_SKEW_LEN             2

#define OVSF_SKEW_TIME_MASK       (ub2)0x7fff
#define OVSF_SKEW_LEAD_MASK       (ub2)0x8000

/*
 * A/V Index Entry
 * ===============
 * AV - Audio or Video - if 1 (0), offset points to a Video (Audio) block
 * KY - KeY            - if 1 (0), block (does not) contain a key block
 * SY - SYnc           - if 1 (0), block (is not) a sync block. The first
 *                       audio and video blocks which both have sync set are
 *                       presumed to start at the the same time.
 *
 * If the Record is a variable frame rate A/V record, all index entries
 * for video frames will be followed by a 1 or 2 byte quantity representing
 * the amount of time (in ms) elapsed between the start of the record (if the
 * first frame) or the previous frame in the record.
 *  
 * Since A/V Data is defined to immediately follow the A/V Index, the total
 * length of the A/V index is the A/V Data Offset of the first A/V Index
 * Entry minus the offset at which the first A/V Index Entry occured within the
 * record.
 * 
 * Constant Frame Rate Index Entry
 * ===============================
 * "Small Memory Model, Packed Index" (i.e. MM == 0 && PI == 1)
 * 
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--+--+--------------+-----------------------+
 * |AV|KY|SY| (MSB)  A/V Da|ta Offset        (LSB) |
 * +--+--+--+--------------+-----------------------+
 *
 * "Large Memory Model, Packed Index" (i.e. MM == 1 && PI == 1)
 * 
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--+--+--------------+-----------------------+
 * |AV|KY|SY|  (B3)  A/V Da|ta Offset         (B2) |
 * +--+--+--+--------------+-----------------------+
 * | (B2)            A/V Da|ta Offset         (B0) |
 * +-----------------------+-----------------------+
 * 
 * Variable Frame Rate Index Entry
 * ===============================
 * For Audio Index Entries, the format will be identical to a Constant Frame
 * Rate Index Entry, for video the delta time is appended to the Constant Frame
 * Rate Index Entry as shown:
 *
 * "Small Memory Model, Packed Index, Small Delta" (i.e. MM == 0 && PI == 1)
 * 
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--+--+--------------+-----------------------+
 * |AV|KY|SY| (MSB)  A/V Da|ta Offset        (LSB) |
 * +--+--+--+--------------+-----------------------+
 * |      Delta Time       |
 * +-----------------------+
 *
 * "Large Memory Model, Packed Index, Small Delta" (i.e. MM == 1 && PI == 1)
 * 
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--+--+--------------+-----------------------+
 * |AV|KY|SY|  (B3)  A/V Da|ta Offset         (B2) |
 * +--+--+--+--------------+-----------------------+
 * | (B2)            A/V Da|ta Offset         (B0) |
 * +-----------------------+-----------------------+
 * |      Delta Time       |
 * +-----------------------+
 *
 * "Small Memory Model, Packed Index, Large Delta" (i.e. MM == 0 && PI == 1)
 * 
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--+--+--------------+-----------------------+
 * |AV|KY|SY| (MSB)  A/V Da|ta Offset        (LSB) |
 * +--+--+--+--------------+-----------------------+
 * | (MSB)           Delta | Time            (LSB) |
 * +-----------------------+-----------------------+
 *
 * "Large Memory Model, Packed Index, Large Delta" (i.e. MM == 1 && PI == 1)
 * 
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--+--+--------------+-----------------------+
 * |AV|KY|SY|  (B3)  A/V Da|ta Offset         (B2) |
 * +--+--+--+--------------+-----------------------+
 * | (B2)            A/V Da|ta Offset         (B0) |
 * +-----------------------+-----------------------+
 * | (MSB)           Delta | Time            (LSB) |
 * +-----------------------+-----------------------+
 *
 */
#define OVSF_INDX_PACK_AV_MASK(mm)   ((mm) ? (ub4)0x80000000 : (ub2)0x8000)
#define OVSF_INDX_PACK_KEY_MASK(mm)  ((mm) ? (ub4)0x40000000 : (ub2)0x4000)
#define OVSF_INDX_PACK_SYNC_MASK(mm) ((mm) ? (ub4)0x20000000 : (ub2)0x2000)
#define OVSF_INDX_PACK_DATA_MASK(mm) ((mm) ? (ub4)0x1fffffff : (ub2)0x1fff)

#define OVSF_RECD_VDSZ_LEN(vd)       ((vd) ? 2 : 1)

/*
 *  Layout of (currently unimplemented) unpacked A/V Index Entries
 * 
 * "Small Memory Model, Unpacked Index" (i.e. MM == 0 && PI == 0)
 * 
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 * |A7|A6|A5|A4|A3|A2|A1|A0|K7|K6|K5|K4|K3|K2|K1|K0|
 * +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 * |S7|S6|S5|S4|S3|S2|S1|S0|(MSB) A/V Data Offset0 |
 * +--+--+--+--+--+--+--+--+-----------------------+
 * | A/V Data Offset0 (LSB)|(MSB) A/V Data Offset1 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset1 (LSB)|(MSB) A/V Data Offset2 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset2 (LSB)|(MSB) A/V Data Offset3 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset3 (LSB)|(MSB) A/V Data Offset4 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset4 (LSB)|(MSB) A/V Data Offset5 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset5 (LSB)|(MSB) A/V Data Offset6 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset6 (LSB)|(MSB) A/V Data Offset7 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset7 (LSB)|
 * +-----------------------+
 * 
 * "Large Memory Model, Unpacked Index" (i.e. MM == 1 && PI == 0)
 * 
 *  15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
 * +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 * |A7|A6|A5|A4|A3|A2|A1|A0|K7|K6|K5|K4|K3|K2|K1|K0|
 * +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 * |S7|S6|S5|S4|S3|S2|S1|S0| (B3) A/V Data Offset0 |
 * +--+--+--+--+--+--+--+--+-----------------------+
 * | A/V Data Offset0 (B2) | (B1) A/V Data Offset0 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset0 (B0) | (B3) A/V Data Offset1 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset1 (B2) | (B1) A/V Data Offset1 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset1 (B0) | (B3) A/V Data Offset2 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset2 (B2) | (B1) A/V Data Offset2 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset2 (B0) | (B3) A/V Data Offset3 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset3 (B2) | (B1) A/V Data Offset3 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset3 (B0) | (B3) A/V Data Offset4 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset4 (B2) | (B1) A/V Data Offset4 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset4 (B0) | (B3) A/V Data Offset5 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset5 (B2) | (B1) A/V Data Offset5 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset5 (B0) | (B3) A/V Data Offset6 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset6 (B2) | (B1) A/V Data Offset6 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset6 (B0) | (B3) A/V Data Offset7 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset7 (B2) | (B1) A/V Data Offset7 |
 * +-----------------------+-----------------------+
 * | A/V Data Offset7 (B0) |
 * +-----------------------+
 * 
 */

#endif
