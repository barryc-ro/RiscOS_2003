//----------------------------------------------------------------------------
// File: mzscli.idl - Media Zerver Streams CLIent callback interface
//
// Description:
//   This is the actual interface a client must implement and publish if it
//   wishes to be called back and informed of server events.  Generally, a
//   client does not call this directly; it instead uses the C wrappers in
//   mzscl.h.  If a client is not writing in C, or for some other reason 
//   finds the wrappers in mzscl.h insufficient for their needs, it is
//   recommended that they contact Oracle to explore the possibility of them
//   using this interface directly.
//   This interface also defines the reasons for client callback.  These are
//   passed directly to clients through the callback function, so all clients
//   who desire callbacks, even through the wrappers in mzscl.h, will need to
//   see these callback reasons.
// Modification History:
//   Date	Name	  Comments
//   17-Dec-96  dpawson   Update comments
//   03-Sep-96  nkavantz  Creation
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
// Oracle Corporation							     
// Oracle Media Server (TM)						     
// All Rights Reserved
// Copyright (C) 1993-1996						     
//---------------------------------------------------------------------------

#ifndef MZSCLI_ORACLE
#define MZSCLI_ORACLE

//---------------------------------------------------------------------------
// Notification Events
//   This enumerated type lists the events that may cause the server to call
//   a client back.  
//----------------------------------------------------------------------------
enum mzs_notify
{
   mzs_notify_playDone,		// Play request from the client has completed
   mzs_notify_finish,		// Client called mzs::stream::finish
   mzs_notify_badFile,		// The server found it was asked to play a
				// content file that doesn't exist
   mzs_notify_srvInternal	// When trying to process a play request, the
				// server had to stop due to an internal error.
};

//----------------------------------------------------------------------------
// Interface: mzs_clientCB
// Function:
//   This is the interface that must be implemented on the client to receive
//   callback events.  Clients using the wrapper routines specified in 
//   mzscl.h and linking in the appropriate client side code get this 
//   interface implemented for them.
//----------------------------------------------------------------------------
interface mzs_clientCB
{
  //-------------------------------------------------------------------------
  // Name: mzs_clientCB::endOfStream
  // Function:
  //   Receive notifification that a playing stream has stopped.  When the
  //   server stops delivering a stream for some reason, it can call this
  //   callback interface to indicate that the play stopped, and to inform
  //   the client why.
  // Input:
  //   reason		The reason, as defined above, for the server 
  //			stopping the stream.
  // Output:
  //   None
  // Returns:
  //   Nothing
  // Raises:
  //   Nothing
  //------------------------------------------------------------------------
   void endOfStream(in mzs_notify reason);
};

#endif
