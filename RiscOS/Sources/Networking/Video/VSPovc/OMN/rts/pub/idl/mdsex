// Copyright (c) Oracle Corporation 1996. All Rights Reserved.
//
// mdsex.idl - Public MDS IDL Exception Definitions
//
// DESCRIPTION:
// The MDS public API is described in mds.h, mdsex.h (generated from this 
// file), and mdsnm.h.  Clients who wish to catch or rethrow MDS exceptions 
// across their IDL interfaces must include this file.  The methods and types 
// used by MDS for communication between server and client are not public; a 
// function call may result in zero, one or several method invocations on the 
// MDS server.

#ifndef MDSEX_ORACLE
#define MDSEX_ORACLE

module mds
{
  // -- EXCEPTIONS --
  //
  // From a caller's perspective, the Mds exceptions of note are:
  //   MDS_EX_FILEEX and MDS_EX_IO.
  // 
  // MDS_EX_FILEEX is thrown with an accompanying object containing a reason
  // code and the name of the offending volume or file.  If the filename 
  // corresponds to a host file and is longer than 256 bytes, it will be
  // truncated.  
  //
  // MDS_EX_IO is thrown without an accompanying object.  A message is 
  // usually logged when the exception is generated.
  //

  enum fileExReason
  {
    // Attributed to underlying volume
    fileExReadOnlyVol,  // Volume is in read-only mode and cannot be modified
    fileExTocFull,      // Volume's TOC is full (no space for file meta-data)
    fileExVolFull,      // Volume is full (no space for file data)
    fileExMinBw,        // Unable to allocate required bandwidth for volume
  
    // Attributed to file
    fileExMissing,      // Filename does not exist
    fileExIllegal,      // Filename has illegal characters, is too long, etc.
    fileExMatch,        // Specified wildcard expression has no matches
    fileExParse,        // Can't parse filename
    fileExReadOnlyFile, // File is in read-only mode
    fileExDeleted,      // File exists but is deleted
    fileExLocked,       // File is locked by another writer
    fileExHostNop,      // Operation is not available on host files
    fileExPerm,         // No permission
    fileExCallBack	// file callback time-out
  };

  exception fileEx
  {
    fileExReason   fileExSts;                                    // Reason code
    char           fileExNm[256];                        // Offending file name
  };
 
  // An IO error occurred.
  exception io {};

  // The following exceptions are not thrown with any user information and 
  // are not thrown from server to client.  We define them in IDL because they 
  // can be thrown by the MDS API, and the IDL definition is necessary for 
  // callers who wish to transparently throw these exceptions across
  // their interfaces.

  exception badParam {};                                 // Bad input parameter
  exception occupied {};                            // Defragger-only exception
  exception internal {};                                      // Internal error
  exception notinit {};                                  // Mds not initialized
  exception notimpl {};                   // Function or method not implemented
  exception badres {};                                  // Bad resource setting

};

#endif  /* MDSEX_ORACLE */



