/* Copyright (c) 1995, 1996 by Oracle Corporation.  All Rights Reserved.
 *
 * ysbv.h - OMN System Layer Buffer Vectors
 *
 * DESCRIPTION
 * A buffer vector is used to describe some block of (possibly discontiguous)
 * memory.  It is formed by an array of one or more ysbv structures.  For
 * each element in the array, buf points to a contiguous block of memory of
 * len bytes.  Under no circumstances should len or the total length described
 * by the buffer vector exceed 2^31-1.
 *
 * THREAD SAFETY
 * Routines in this package manipulate the given buffers only.  Coordinating
 * access (if necessary) is therefore the responsibility of the caller.
 */

#ifndef YSBV_ORACLE
#define YSBV_ORACLE

EXTC_START

/* DISABLE check_naming */
struct ysbv
{
  size_t len;                                            /* length of buffer */
  ub1   *buf;                                           /* pointer to buffer */
};
/* ENABLE check_naming */

/*
 * ysBvScatter - scatter to a buffer vector
 *
 * DESCRIPTION
 * ysBvScatter() scatters the data in buf to the buffer vector described
 * by bv and nbv.  bv must contain pre-allocated buffers with the len
 * fields indicating how long each of the buffers is.  This routine copies
 * until len bytes have been transferred, or until the destination buffer
 * vector is exhausted.  In any case, the routine returns the total number
 * of bytes transferred.
 */
ub4 ysBvScatter(ub1 *buf, size_t len, ysbv *bv, sword nbv);

/*
 * ysBvGather - gather from a buffer vector
 *
 * DESCRIPTION
 * ysBvGather() gathers data from a buffer vector described by bv and nbv
 * and copies it to the buffer pointed to by buf.  buf must be a pre-
 * allocated buffer of len bytes.  This routine copies until len bytes
 * have transferred, or until the entire buffer vector has been transferred.
 * In any case, the routine returns the total number of bytes transferred.
 */
ub4 ysBvGather(ub1 *buf, size_t len, ysbv *bv, sword nbv);

/*
 * ysBvCopy - copy a buffer vector
 *
 * DESCRIPTION
 * ysBvCopy() copies the contents of one buffer vector (described by
 * src and srcnbv) to another (described by dst and dstnbv).  The
 * source and destination may be shaped differently.  This routine
 * copies until the entire source buffer vector has been transferred
 * or until the destination buffer vector is exhausted.  In any case,
 * the routine returns the total number of bytes transferred.
 */
ub4 ysBvCopy(ysbv *dst, sword dstnbv, ysbv *src, sword srcnbv);

/*
 * ysBvFree - free a buffer vector
 *
 * DESCRIPTION
 * ysBvFree() frees the given buffer vector.  All of the buffer elements
 * and the buffer vector itself must have been allocated from the given
 * heap.
 */
void ysBvFree(ysmhp *hp, ysbv *bv, sword nbv);

EXTC_END
#endif /* YSBV_ORACLE */
