/* Copyright (c) 1996 by Oracle Corporation.  All Rights Reserved.
 *
 * yscksm.c - compute a checksum
 */

#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef SYSXCD_ORACLE
#include <sysxcd.h>
#endif
#ifndef YSMSC_ORACLE
#include <ysmsc.h>
#endif

/*
 * ysChecksum - compute a checksum over a buffer
 */
ub2 ysChecksum(ub1 *buf, size_t len)
{
  ub4  sum, cnt;
  ub2 *ptr;
  ub1  *rb, tmp[2];

  /* align pointer */
  rb = sysxAlignPtr(buf, sizeof(ub2));

  /* if we skip first byte, add it in */
  if (rb - buf > 1)
    ysePanic(YS_EX_FAILURE);
  else if (rb - buf == 1)
    {
      /* add in leading byte */
      tmp[0] = 0;
      tmp[1] = *buf;
      sum = *((ub2 *) tmp);
      
      len -= 1;
    }
  else
    sum = 0;

  /* compute inner checksum */
  for (ptr = (ub2 *) rb, cnt = len >> 1; cnt; cnt--)
    sum += *ptr++;

  /* add in trailing byte */
  if (len & 0x1)
    {
      tmp[0] = *((ub1 *) ptr);
      tmp[1] = 0;
      sum += *((ub2 *) tmp);
    }

  /* now add in the carries */
  sum = (sum >> 16) + (sum & 0xffff);
  sum += (sum >> 16);

  /* if we skipped the first byte, swap the bytes */
  if (rb - buf == 1)
    sum = (sum >> 8) + ((sum & 0xff) << 8);

  /* return checksum */
  sum = ~sum;
  return (ub2) (sum & 0xffff);
}
