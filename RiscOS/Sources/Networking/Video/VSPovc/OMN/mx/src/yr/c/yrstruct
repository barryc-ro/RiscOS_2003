/* Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
 *
 * NAME
 *   yrstruct.c - Implementation of CORBA::StructDef
 *
 * NOTES
 *
 * HISTORY
 * 02/27/97 kcoleman	Bug #336120: Structs are Containers. See yrunion.c.
 * 11/09/95 kcoleman    Creation
 */
 
#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif
 
#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif

#ifndef YRCORBAI_H
#include <yrcorbaI.h>
#endif
 
#ifndef YR_ORACLE
#include <yr.h>
#endif
 
#ifndef YOORB_ORACLE
#include <yoorb.h>
#endif
 
#ifndef YR0UTIL_ORACLE
#include <yr0util.h>
#endif

externdef ysidDecl(CORBA_StructDef_implid) = "ORA_StructDef";

/************************************************************************/
/* Interface CORBA::StructDef */
/************************************************************************/
 
CORBA_Contained_Description CORBA_StructDef_describe_i(
     CORBA_StructDef or, yoenv* ev)
{
  CORBA_Contained_Description result;
  CORBA_TypeDescription* noreg desc = (CORBA_TypeDescription*)0;
  yotk* noreg tc = (yotk*) 0;
 
  NOREG(desc);
  NOREG(tc);
  yseTry
  {
    CONST yotk* temp = YCTC_CORBA_TypeDescription;

    desc = (CORBA_TypeDescription*)
                yoAlloc( sizeof( CORBA_TypeDescription));
    CLRSTRUCT( *desc);
 
    desc->name = CORBA_StructDef__get_name_i(or, ev);
    desc->id = CORBA_StructDef__get_id_i( or, ev);
    desc->defined_in = CORBA_StructDef__get_defined_in_i( or, ev);
    desc->version = CORBA_StructDef__get_version_i( or, ev);
    desc->type = CORBA_StructDef__get_type_i( or, ev);
    yotkCopyVal( yoTcTypeCode, (dvoid*) &tc, (dvoid*) &temp, yoAlloc);
  }
  yseCatchAll
  {
    if ( desc )
    {
      if ( desc->name )
        yoFree( (dvoid*) desc->name);
      if ( desc->id )
        yoFree( (dvoid*) desc->id);
      if ( desc->defined_in )
        yoFree( (dvoid*) desc->defined_in);
      if ( desc->version )
        yoFree( (dvoid*) desc->version);
      if ( desc->type )
        yotkFreeVal( yoTcTypeCode, &desc->type, yoFree);
      if ( tc )
        yotkFreeVal( yoTcTypeCode, (dvoid*) &tc, yoFree);
    }
    yseRethrow;
  }
  yseEnd
 
  result.kind = CORBA_dk_Typedef;
  result.value._type = tc;
  result.value._value = desc;
  return result;
}
 
/* ---------------------------------------------------------------------- */

CORBA_Contained CORBA_StructDef_lookup_i( 
    CORBA_StructDef or, yoenv* ev, CORBA_ScopedName search_name)
{
  return CORBA_Container_lookup_i( (CORBA_Container) or, ev, search_name);
}
 
/* ---------------------------------------------------------------------- */

CORBA_ContainedSeq CORBA_StructDef_contents_i( 
    CORBA_StructDef or, yoenv* ev, CORBA_DefinitionKind limit_type, 
    boolean exclude_inherited)
{
  return CORBA_Container_contents_i( (CORBA_Container) or, ev,
                                     limit_type,
                                     exclude_inherited);
}
 
/* ---------------------------------------------------------------------- */

CORBA_ContainedSeq CORBA_StructDef_lookup_name_i( 
    CORBA_StructDef or, yoenv* ev, CORBA_Identifier search_name, 
    sb4 levels_to_search, CORBA_DefinitionKind limit_type, 
    boolean exclude_inherited)
{
  return CORBA_Container_lookup_name_i( (CORBA_Container) or, ev,
                                        search_name, levels_to_search,
                                        limit_type, exclude_inherited);
}

/* ---------------------------------------------------------------------- */

CORBA_Container_DescriptionSeq CORBA_StructDef_describe_contents_i( 
    CORBA_StructDef or, yoenv* ev, CORBA_DefinitionKind limit_type, 
    boolean exclude_inherited, sb4 max_returned_objs)
{
  return CORBA_Container_describe_contents_i( (CORBA_Container) or,
                                              ev, limit_type,
                                              exclude_inherited,
                                              max_returned_objs);
}

/* ---------------------------------------------------------------------- */
 
CORBA_DefinitionKind CORBA_StructDef__get_def_kind_i(
     CORBA_StructDef or, yoenv* ev)
{
  return CORBA_IRObject__get_def_kind_i( (CORBA_IRObject) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_RepositoryId CORBA_StructDef__get_id_i( CORBA_StructDef or, yoenv* ev)
{
  return CORBA_Contained__get_id_i( (CORBA_Contained) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_Identifier CORBA_StructDef__get_name_i( CORBA_StructDef or, yoenv* ev)
{
  return CORBA_Contained__get_name_i( (CORBA_Contained)or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_VersionSpec CORBA_StructDef__get_version_i(
     CORBA_StructDef or, yoenv* ev)
{
  return CORBA_Contained__get_version_i( (CORBA_Contained) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_Container CORBA_StructDef__get_defined_in_i(
     CORBA_StructDef or, yoenv* ev)
{
  return CORBA_Contained__get_defined_in_i( (CORBA_Contained) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_ScopedName CORBA_StructDef__get_absolute_name_i(
     CORBA_StructDef or, yoenv* ev)
{
  return CORBA_Contained__get_absolute_name_i( (CORBA_Contained) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_Repository CORBA_StructDef__get_containing_repository_i(
     CORBA_StructDef or, yoenv* ev)
{
  return CORBA_Contained__get_containing_repository_i((CORBA_Contained)or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
yotk* CORBA_StructDef__get_type_i( CORBA_StructDef or, yoenv* ev)
{
  return CORBA_IDLType__get_type_i( (CORBA_IDLType) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_StructMemberSeq CORBA_StructDef__get_members_i(
     CORBA_StructDef or, yoenv* ev)
{
  CORBA_StructMemberSeq result;
  yrobj* obj = yrCORBAtoYR( (CORBA_IRObject) or);
 
  yrStructMbrsToSeq( yrStructData(obj).mbrs, &result);
  return result;
}
 
/* ---------------------------------------------------------------------- */
 
 
externdef struct CORBA_StructDef__tyimpl CORBA_StructDef__impl =
 {
  CORBA_StructDef__get_members_i,
  CORBA_StructDef_describe_i,
  CORBA_StructDef__get_id_i,
  CORBA_StructDef__get_name_i,
  CORBA_StructDef__get_version_i,
  CORBA_StructDef__get_defined_in_i,
  CORBA_StructDef__get_absolute_name_i,
  CORBA_StructDef__get_containing_repository_i,
  CORBA_StructDef__get_def_kind_i,
  CORBA_StructDef__get_type_i,
  CORBA_StructDef_lookup_i,
  CORBA_StructDef_contents_i,
  CORBA_StructDef_lookup_name_i,
  CORBA_StructDef_describe_contents_i
 };


/* ---------------------------------------------------------------------- */

void Init_CORBA_StructDef()
{
  YR_SET_IMPL(CORBA_StructDef, FALSE, 0);
  YR_IMPL_READY(CORBA_StructDef, 0);
}

void Term_CORBA_StructDef()
{
  YR_IMPL_DEACTIVATE(CORBA_StructDef);
}
