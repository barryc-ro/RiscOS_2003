/* GENERATED FILE
 * yrtypidl - public declarations
 * from /home/alind/work/portkit/mn335/mx/pub/yrtypidl.idl
 */

#ifndef YRTYPIDL_ORACLE
#define YRTYPIDL_ORACLE

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

EXTC_START

/**********  SEQUENCE DECLARATIONS *********/
#ifndef YCIDL_sequence_CORBA_Object_DEFINED
#define YCIDL_sequence_CORBA_Object_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_Object* _buffer;
} YCIDL_sequence_CORBA_Object;
#ifndef YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#define YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_Object_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_Object_DEFINED */


/* interface CORBA_IRObject declarations */
#ifndef CORBA_IRObject_DECLARED
#define CORBA_IRObject_DECLARED
typedef struct YCCORBA_IRObject* CORBA_IRObject;
CONST yotk* CORBA_IRObject__getTC(void);
#ifndef YCTC_CORBA_IRObject
#define YCTC_CORBA_IRObject   (CORBA_IRObject__getTC())
#endif
#endif /* CORBA_IRObject_DECLARED */

#ifndef CORBA_IRObject_SUPP_FUNCS
#define CORBA_IRObject_SUPP_FUNCS
void CORBA_IRObject__free( CORBA_IRObject* val, ysmff ffunc);
void CORBA_IRObject__copy( CORBA_IRObject* dest, CORBA_IRObject* src, ysmaf 
  afunc);
#endif /* CORBA_IRObject_SUPP_FUNCS */

#ifndef YCIDL_sequence_CORBA_IRObject_DEFINED
#define YCIDL_sequence_CORBA_IRObject_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_IRObject* _buffer;
} YCIDL_sequence_CORBA_IRObject;
#ifndef YCIDL_sequence_CORBA_IRObject_SUPP_FUNCS
#define YCIDL_sequence_CORBA_IRObject_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_IRObject_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_IRObject_DEFINED */

/******* NON-SEQUENCE DECLARATIONS *******/

/* interface yoevt declarations */
#ifndef yoevt_DECLARED
#define yoevt_DECLARED
typedef struct YCyoevt* yoevt;
CONST yotk* yoevt__getTC(void);
#ifndef YCTC_yoevt
#define YCTC_yoevt   (yoevt__getTC())
#endif
#endif /* yoevt_DECLARED */

#ifndef yoevt_SUPP_FUNCS
#define yoevt_SUPP_FUNCS
void yoevt__free( yoevt* val, ysmff ffunc);
void yoevt__copy( yoevt* dest, yoevt* src, ysmaf afunc);
#endif /* yoevt_SUPP_FUNCS */

#ifndef yostd_stringList_DECLARED
#define yostd_stringList_DECLARED
typedef YCIDL_sequence_string yostd_stringList;
CONST yotk* yostd_stringList__getTC(void);
#ifndef YCTC_yostd_stringList
#define YCTC_yostd_stringList   (yostd_stringList__getTC())
#endif
#endif /* yostd_stringList_DECLARED */

#ifndef yostd_stringList_SUPP_FUNCS
#define yostd_stringList_SUPP_FUNCS
void yostd_stringList__free( yostd_stringList* val, ysmff ffunc);
void yostd_stringList__copy( yostd_stringList* dest, yostd_stringList* src, 
  ysmaf afunc);
#endif /* yostd_stringList_SUPP_FUNCS */

#ifndef yostd_objList_DECLARED
#define yostd_objList_DECLARED
typedef YCIDL_sequence_CORBA_Object yostd_objList;
CONST yotk* yostd_objList__getTC(void);
#ifndef YCTC_yostd_objList
#define YCTC_yostd_objList   (yostd_objList__getTC())
#endif
#endif /* yostd_objList_DECLARED */

#ifndef yostd_objList_SUPP_FUNCS
#define yostd_objList_SUPP_FUNCS
void yostd_objList__free( yostd_objList* val, ysmff ffunc);
void yostd_objList__copy( yostd_objList* dest, yostd_objList* src, ysmaf 
  afunc);
#endif /* yostd_objList_SUPP_FUNCS */

#ifndef yostd_octetSeq_DECLARED
#define yostd_octetSeq_DECLARED
typedef YCIDL_sequence_ub1 yostd_octetSeq;
CONST yotk* yostd_octetSeq__getTC(void);
#ifndef YCTC_yostd_octetSeq
#define YCTC_yostd_octetSeq   (yostd_octetSeq__getTC())
#endif
#endif /* yostd_octetSeq_DECLARED */

#ifndef yostd_octetSeq_SUPP_FUNCS
#define yostd_octetSeq_SUPP_FUNCS
void yostd_octetSeq__free( yostd_octetSeq* val, ysmff ffunc);
void yostd_octetSeq__copy( yostd_octetSeq* dest, yostd_octetSeq* src, ysmaf 
  afunc);
#endif /* yostd_octetSeq_SUPP_FUNCS */

#ifndef CORBA_Identifier_DECLARED
#define CORBA_Identifier_DECLARED
typedef char* CORBA_Identifier;
CONST yotk* CORBA_Identifier__getTC(void);
#ifndef YCTC_CORBA_Identifier
#define YCTC_CORBA_Identifier   (CORBA_Identifier__getTC())
#endif
#endif /* CORBA_Identifier_DECLARED */

#ifndef CORBA_Identifier_SUPP_FUNCS
#define CORBA_Identifier_SUPP_FUNCS
#endif /* CORBA_Identifier_SUPP_FUNCS */

#ifndef CORBA_ScopedName_DECLARED
#define CORBA_ScopedName_DECLARED
typedef char* CORBA_ScopedName;
CONST yotk* CORBA_ScopedName__getTC(void);
#ifndef YCTC_CORBA_ScopedName
#define YCTC_CORBA_ScopedName   (CORBA_ScopedName__getTC())
#endif
#endif /* CORBA_ScopedName_DECLARED */

#ifndef CORBA_ScopedName_SUPP_FUNCS
#define CORBA_ScopedName_SUPP_FUNCS
#endif /* CORBA_ScopedName_SUPP_FUNCS */

#ifndef CORBA_RepositoryId_DECLARED
#define CORBA_RepositoryId_DECLARED
typedef char* CORBA_RepositoryId;
CONST yotk* CORBA_RepositoryId__getTC(void);
#ifndef YCTC_CORBA_RepositoryId
#define YCTC_CORBA_RepositoryId   (CORBA_RepositoryId__getTC())
#endif
#endif /* CORBA_RepositoryId_DECLARED */

#ifndef CORBA_RepositoryId_SUPP_FUNCS
#define CORBA_RepositoryId_SUPP_FUNCS
#endif /* CORBA_RepositoryId_SUPP_FUNCS */

#ifndef CORBA_RepositoryIdSeq_DECLARED
#define CORBA_RepositoryIdSeq_DECLARED
typedef YCIDL_sequence_string CORBA_RepositoryIdSeq;
CONST yotk* CORBA_RepositoryIdSeq__getTC(void);
#ifndef YCTC_CORBA_RepositoryIdSeq
#define YCTC_CORBA_RepositoryIdSeq   (CORBA_RepositoryIdSeq__getTC())
#endif
#endif /* CORBA_RepositoryIdSeq_DECLARED */

#ifndef CORBA_RepositoryIdSeq_SUPP_FUNCS
#define CORBA_RepositoryIdSeq_SUPP_FUNCS
void CORBA_RepositoryIdSeq__free( CORBA_RepositoryIdSeq* val, ysmff ffunc);
void CORBA_RepositoryIdSeq__copy( CORBA_RepositoryIdSeq* dest, 
  CORBA_RepositoryIdSeq* src, ysmaf afunc);
#endif /* CORBA_RepositoryIdSeq_SUPP_FUNCS */

#ifndef CORBA_VersionSpec_DECLARED
#define CORBA_VersionSpec_DECLARED
typedef char* CORBA_VersionSpec;
CONST yotk* CORBA_VersionSpec__getTC(void);
#ifndef YCTC_CORBA_VersionSpec
#define YCTC_CORBA_VersionSpec   (CORBA_VersionSpec__getTC())
#endif
#endif /* CORBA_VersionSpec_DECLARED */

#ifndef CORBA_VersionSpec_SUPP_FUNCS
#define CORBA_VersionSpec_SUPP_FUNCS
#endif /* CORBA_VersionSpec_SUPP_FUNCS */


/* interface CORBA_IRObject declarations */
#ifndef CORBA_IRObject_DECLARED
#define CORBA_IRObject_DECLARED
typedef struct YCCORBA_IRObject* CORBA_IRObject;
CONST yotk* CORBA_IRObject__getTC(void);
#ifndef YCTC_CORBA_IRObject
#define YCTC_CORBA_IRObject   (CORBA_IRObject__getTC())
#endif
#endif /* CORBA_IRObject_DECLARED */

#ifndef CORBA_IRObject_SUPP_FUNCS
#define CORBA_IRObject_SUPP_FUNCS
void CORBA_IRObject__free( CORBA_IRObject* val, ysmff ffunc);
void CORBA_IRObject__copy( CORBA_IRObject* dest, CORBA_IRObject* src, ysmaf 
  afunc);
#endif /* CORBA_IRObject_SUPP_FUNCS */

#ifndef CORBA_IRObjectSeq_DECLARED
#define CORBA_IRObjectSeq_DECLARED
typedef YCIDL_sequence_CORBA_IRObject CORBA_IRObjectSeq;
CONST yotk* CORBA_IRObjectSeq__getTC(void);
#ifndef YCTC_CORBA_IRObjectSeq
#define YCTC_CORBA_IRObjectSeq   (CORBA_IRObjectSeq__getTC())
#endif
#endif /* CORBA_IRObjectSeq_DECLARED */

#ifndef CORBA_IRObjectSeq_SUPP_FUNCS
#define CORBA_IRObjectSeq_SUPP_FUNCS
void CORBA_IRObjectSeq__free( CORBA_IRObjectSeq* val, ysmff ffunc);
void CORBA_IRObjectSeq__copy( CORBA_IRObjectSeq* dest, CORBA_IRObjectSeq* 
  src, ysmaf afunc);
#endif /* CORBA_IRObjectSeq_SUPP_FUNCS */

#ifndef yr_repid_DECLARED
#define yr_repid_DECLARED
typedef CORBA_RepositoryId yr_repid;
CONST yotk* yr_repid__getTC(void);
#ifndef YCTC_yr_repid
#define YCTC_yr_repid   (yr_repid__getTC())
#endif
#endif /* yr_repid_DECLARED */

#ifndef yr_repid_SUPP_FUNCS
#define yr_repid_SUPP_FUNCS
#endif /* yr_repid_SUPP_FUNCS */

#ifndef yr_repidseq_DECLARED
#define yr_repidseq_DECLARED
typedef CORBA_RepositoryIdSeq yr_repidseq;
CONST yotk* yr_repidseq__getTC(void);
#ifndef YCTC_yr_repidseq
#define YCTC_yr_repidseq   (yr_repidseq__getTC())
#endif
#endif /* yr_repidseq_DECLARED */

#ifndef yr_repidseq_SUPP_FUNCS
#define yr_repidseq_SUPP_FUNCS
#define yr_repidseq__free(val, ffunc) CORBA_RepositoryIdSeq__free((val),( \
  ffunc))
#define yr_repidseq__copy(dest, src, afunc) CORBA_RepositoryIdSeq__copy(( \
  dest),(src),(afunc))
#endif /* yr_repidseq_SUPP_FUNCS */

#ifndef yr_vers_DECLARED
#define yr_vers_DECLARED
typedef CORBA_VersionSpec yr_vers;
CONST yotk* yr_vers__getTC(void);
#ifndef YCTC_yr_vers
#define YCTC_yr_vers   (yr_vers__getTC())
#endif
#endif /* yr_vers_DECLARED */

#ifndef yr_vers_SUPP_FUNCS
#define yr_vers_SUPP_FUNCS
#endif /* yr_vers_SUPP_FUNCS */

#ifndef yr_objseq_DECLARED
#define yr_objseq_DECLARED
typedef CORBA_IRObjectSeq yr_objseq;
CONST yotk* yr_objseq__getTC(void);
#ifndef YCTC_yr_objseq
#define YCTC_yr_objseq   (yr_objseq__getTC())
#endif
#endif /* yr_objseq_DECLARED */

#ifndef yr_objseq_SUPP_FUNCS
#define yr_objseq_SUPP_FUNCS
#define yr_objseq__free(val, ffunc) CORBA_IRObjectSeq__free((val),(ffunc))
#define yr_objseq__copy(dest, src, afunc) CORBA_IRObjectSeq__copy((dest),( \
  src),(afunc))
#endif /* yr_objseq_SUPP_FUNCS */

#ifndef yr_srcref_DECLARED
#define yr_srcref_DECLARED
typedef struct yr_srcref yr_srcref;
#endif /* yr_srcref_DECLARED */

#ifndef yr_srcref_DEFINED
#define yr_srcref_DEFINED
struct yr_srcref
{
  char* filename;
  ub4 lineno;
};
CONST yotk* yr_srcref__getTC(void);
#ifndef YCTC_yr_srcref
#define YCTC_yr_srcref   (yr_srcref__getTC())
#endif
#endif /* yr_srcref_DEFINED */

#ifndef yr_srcref_SUPP_FUNCS
#define yr_srcref_SUPP_FUNCS
void yr_srcref__free( yr_srcref* val, ysmff ffunc);
void yr_srcref__copy( yr_srcref* dest, yr_srcref* src, ysmaf afunc);
#endif /* yr_srcref_SUPP_FUNCS */

#ifndef yr_path_DECLARED
#define yr_path_DECLARED
typedef char* yr_path;
CONST yotk* yr_path__getTC(void);
#ifndef YCTC_yr_path
#define YCTC_yr_path   (yr_path__getTC())
#endif
#endif /* yr_path_DECLARED */

#ifndef yr_path_SUPP_FUNCS
#define yr_path_SUPP_FUNCS
#endif /* yr_path_SUPP_FUNCS */

#ifndef yr_pathSeq_DECLARED
#define yr_pathSeq_DECLARED
typedef YCIDL_sequence_string yr_pathSeq;
CONST yotk* yr_pathSeq__getTC(void);
#ifndef YCTC_yr_pathSeq
#define YCTC_yr_pathSeq   (yr_pathSeq__getTC())
#endif
#endif /* yr_pathSeq_DECLARED */

#ifndef yr_pathSeq_SUPP_FUNCS
#define yr_pathSeq_SUPP_FUNCS
void yr_pathSeq__free( yr_pathSeq* val, ysmff ffunc);
void yr_pathSeq__copy( yr_pathSeq* dest, yr_pathSeq* src, ysmaf afunc);
#endif /* yr_pathSeq_SUPP_FUNCS */

EXTC_END
#endif /* YRTYPIDL_ORACLE */
