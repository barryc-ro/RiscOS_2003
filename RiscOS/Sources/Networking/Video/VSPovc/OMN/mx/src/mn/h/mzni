/* Copyright (c) 1994 by Oracle Corporation.  All Rights Reserved.
 *
 * mzni.h - OMN Name Server Definitions
 *
 * REVISIONS
 * jolkin    05/25/94  Creation
 * dbrower   01/25/95 -  add common mib.
 */

#ifndef MZNI_ORACLE
#define MZNI_ORACLE

#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef MN_ORACLE
#include <mn.h>
#endif
#ifndef MNX_ORACLE
#include <mnx.h>
#endif
#ifndef MZN_ORACLE
#include <mzn.h>
#endif
#ifndef MNRS_ORACLE
#include <mnrs.h>
#endif
#ifndef MZMGU_ORACLE
#include <mzmgu.h>
#endif
#ifndef MZMGS_ORACLE
#include <mzmgs.h>
#endif

#ifndef YS_ORACLE
#include <ys.h>
#endif

/*
 * Type and constant declarations
 */
typedef struct mznctx mznctx;                         /* name server context */
typedef struct mznbkt mznbkt;                           /* hash table bucket */

#define MZNROWS  1021                       /* number of rows in hash tables */

/*
 * Hash table bucket
 */
struct mznbkt
{
  mznbkt *next;                                   /* next bucket in hash row */
  mznbkt *older;                                   /* next program in bucket */
  mznent *entry;                                         /* entry descriptor */
  char   *alias;                                             /* aliased name */
  mznctx *nsctx;                 /* name server context for death call backs */
};

/*
 * Name server context
 */
struct mznctx
{
  mzmguSStats stats;                                     /* common mib stats */
  mznbkt *names[MZNROWS];                     /* hash table of named entries */
};

/* backbone */
boolean mznMain(dvoid *osdCtx, const char *nm, sword argc, char **argv);
void mznRequestHandler(dvoid *nsctxp, sb4 sts);
void mznDeathHandler(dvoid *usrp, sb4 val);

/* stubs */
void mznssInsert(mnrsc *call, mnbv *inargs, ub4 incnt);
void mznssFind(mnrsc *call, mnbv *inargs, ub4 incnt);
void mznssDelete(mnrsc *call, mnbv *inargs, ub4 incnt);
void mznssQuery(mnrsc *call, mnbv *inargs, ub4 incnt);
void mznssTerm(mnrsc *call, mnbv *inargs, ub4 incnt);
void mznssMakeAlias(mnrsc *call, mnbv *inargs, ub4 incnt);

/* operations */
sb4 mznsInsert(mznctx *nsctx, mznent *entry);
mznent *mznsFind(mznctx *nsctx, const char *name, const mnrid *id);
sb4 mznsDelete(mznctx *nsctx, const char *name, const mnrid *id);
sb4 mznsQuery(mznctx *nsctx, const char *name, ub4 qt, mnxStream *stream);
sb4 mznsMakeAlias(mznctx *nsctx, const char *name, const char *alias);

/* name server utility routines */
ub4 mznsKey(ub1 *buf, size_t sz);
sb4 mznsStrcmp(const char *s1, const char *s2);
boolean mznsNameEq(const char *str, const char *regexp);

#endif /* MZNI_ORACLE */
