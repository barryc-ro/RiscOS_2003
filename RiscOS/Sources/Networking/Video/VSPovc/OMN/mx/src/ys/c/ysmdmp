/* Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
 *
 * ysmdmp.c - Oracle MOOSE Memory Manager Dump Facility
 */

#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YS_ORACLE
#include <ys.h>
#endif
#ifndef YSL_ORACLE
#include <ysl.h>
#endif
#ifndef YSMI_ORACLE
#include <ysmi.h>
#endif

/*
 * ysmDump - dump a heap to the standard error output
 */
void ysmDump(ysmhp *hp)
{
  sword    i;
  ysmahdr *ahdr;
  sb4      cnt, fsz;

  ysmCheck((dvoid *) hp, YSMHP_TAG);

  yslError("limit - %ld", hp->limit);
  yslError("inuse - %ld", hp->inuse);
  yslError("maxusg - %ld", hp->maxusg);
  yslError("bhvr - %s", hp->bhvr == YSM_THROW ? "throw" : "return");
  yslError("afcnt - %ld", hp->afcnt);

  if (hp->af)
    {
      yslError("heap is routine-based");
      return;
    }

  for (i = 0; i < hp->nbv; i++)
    yslError("bv[%d].len - %ld", i, hp->bv[i].len);

  cnt = 0;
  fsz = 0;
  for (i = 0; i < hp->nbv; i++)
    {
      ahdr = (ysmahdr *) (hp->bv[i].buf);

      while (ahdr->tag != YSMEOB_TAG)
	{
	  yslError("%02d:%08x - %7d bytes %s %s",
		   i, ((ub1 *) ahdr) - hp->bv[i].buf,
		   (ahdr->sz < 0 ? -ahdr->sz : ahdr->sz),
		   (ahdr->sz < 0 ? "allocated" : "free     "),
		   (ahdr->sz < 0 ? ahdr->tag : ""));

	  if (ahdr->sz >= 0)
	    fsz += ahdr->sz;
	  else if (fsz)
	    cnt++, fsz = 0;

	  if (!ahdr->sz)
	    {
	      yslError("illegal 0 byte block; aborting");
	      break;
	    }

	  ahdr = (ysmahdr *) (((ub1 *) ahdr) +
			      (ahdr->sz < 0 ? -ahdr->sz : ahdr->sz));
	}
    }

  yslError("%d discontiguous free blocks", cnt);
}
