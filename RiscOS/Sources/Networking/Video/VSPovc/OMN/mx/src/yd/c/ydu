/* Copyright (c) Oracle Corporation 1995.  All Rights Reserved. */

/*
  NAME
    ydu.c
  DESCRIPTION
    ORB Daemon utility functions
  PUBLIC FUNCTIONS

    sb4 yduSafeStrcmp( CONST char *a, CONST char *b );

    sb4 yduWildStrcmp( CONST char *a, CONST char *b );

    void yduFreeCopyString( char **, char **s, ydmff ff, ysmaf af );

    void yduExitOnIntr(void);

  MODIFIED   (MM/DD/YY)
    dbrower   07/26/95 -  created.
    dbrower   03/ 1/96 -  olint
    dbrower   10/11/96 -  interrupts, bug 411328.
*/
#ifndef SYSI_ORACLE
#include <sysi.h>
#endif

#ifndef YDU_ORACLE
#include <ydu.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif
#ifndef YT_ORACLE
#include <yt.h>
#endif
#ifndef YOTK_ORACLE
#include <yotk.h>
#endif

/* PRIVATE TYPES AND CONSTANTS */

/* PRIVATE FUNCTION DECLARATIONS */

/* PUBLIC FUNCTIONS */

sword yduSafeStrcmp( CONST char *a, CONST char *b )
{
  sword rv;
  if( !a )
  {
    rv = b ? -1 : 0;
  }
  else if ( !b )
  {
    rv = 1;
  }
  else				/* have two strs */
  {
    rv = (*a == *b) ? (sword)strcmp( a, b ) : (*a - *b); 
  }
  return rv;
}

sword yduWildStrcmp( register CONST char *a, register CONST char *b )
{
  sword rv;

  if( !a || !b )
    rv = 0;
  else if (*a == *b)
    rv = (sword)strcmp( a, b );
  else
    rv = *a - *b; 
  return rv;
}

void yduFreeCopyStr( char **dp, CONST char *s, ysmff ff, ysmaf af )
{
  if( *dp )
  {
    if(ff)
    {
      if( ff != yotkFreeStr )
	(*ff)((dvoid*)*dp);
      else
	yotkFreeVal( yoTcString, (dvoid*)dp, yotkFreeStr );
    }
    else ysmGlbFree((dvoid*)*dp); 
    *dp = (char*)0;
  }
  if( s )
  {
    if( af != yotkAllocStr )
      *dp = ysStrDupWaf( s, af );
    else
      yotkCopyVal( yoTcString, (dvoid*)dp, (dvoid*)&s, yotkAllocStr );
  }
}


char *yduCopyCacheStr( CONST char *s )
{
  char *rv = (char*)s;

  if( s )
    yotkCopyVal( yoTcString, (dvoid*)&rv, (dvoid*)&s, yotkAllocStr );  

  return rv;
}

void yduFreeCacheStr( char *s )
{
  yotkFreeVal( yoTcString, (dvoid*)&s, yotkFreeStr );
}


/* PRIVATE FUNCTIONS */
