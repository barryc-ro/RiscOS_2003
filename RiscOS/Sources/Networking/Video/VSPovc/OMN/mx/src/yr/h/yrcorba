/* GENERATED FILE
 * yrcorba - public declarations
 * from /home/alind/work/portkit/mn335/mx/pub/yrcorba.idl
 */

#ifndef YRCORBA_ORACLE
#define YRCORBA_ORACLE

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

EXTC_START

/**********  SEQUENCE DECLARATIONS *********/
#ifndef YCIDL_sequence_CORBA_Object_DEFINED
#define YCIDL_sequence_CORBA_Object_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_Object* _buffer;
} YCIDL_sequence_CORBA_Object;
#ifndef YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#define YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_Object_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_Object_DEFINED */


/* interface CORBA_IRObject declarations */
#ifndef CORBA_IRObject_DECLARED
#define CORBA_IRObject_DECLARED
typedef struct YCCORBA_IRObject* CORBA_IRObject;
CONST yotk* CORBA_IRObject__getTC(void);
#ifndef YCTC_CORBA_IRObject
#define YCTC_CORBA_IRObject   (CORBA_IRObject__getTC())
#endif
#endif /* CORBA_IRObject_DECLARED */

#ifndef CORBA_IRObject_SUPP_FUNCS
#define CORBA_IRObject_SUPP_FUNCS
void CORBA_IRObject__free( CORBA_IRObject* val, ysmff ffunc);
void CORBA_IRObject__copy( CORBA_IRObject* dest, CORBA_IRObject* src, ysmaf 
  afunc);
#endif /* CORBA_IRObject_SUPP_FUNCS */

#ifndef YCIDL_sequence_CORBA_IRObject_DEFINED
#define YCIDL_sequence_CORBA_IRObject_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_IRObject* _buffer;
} YCIDL_sequence_CORBA_IRObject;
#ifndef YCIDL_sequence_CORBA_IRObject_SUPP_FUNCS
#define YCIDL_sequence_CORBA_IRObject_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_IRObject_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_IRObject_DEFINED */


/* interface CORBA_Contained declarations */
#ifndef CORBA_Contained_DECLARED
#define CORBA_Contained_DECLARED
typedef struct YCCORBA_Contained* CORBA_Contained;
CONST yotk* CORBA_Contained__getTC(void);
#ifndef YCTC_CORBA_Contained
#define YCTC_CORBA_Contained   (CORBA_Contained__getTC())
#endif
#endif /* CORBA_Contained_DECLARED */

#ifndef CORBA_Contained_SUPP_FUNCS
#define CORBA_Contained_SUPP_FUNCS
void CORBA_Contained__free( CORBA_Contained* val, ysmff ffunc);
void CORBA_Contained__copy( CORBA_Contained* dest, CORBA_Contained* src, 
  ysmaf afunc);
#endif /* CORBA_Contained_SUPP_FUNCS */

#ifndef YCIDL_sequence_CORBA_Contained_DEFINED
#define YCIDL_sequence_CORBA_Contained_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_Contained* _buffer;
} YCIDL_sequence_CORBA_Contained;
#ifndef YCIDL_sequence_CORBA_Contained_SUPP_FUNCS
#define YCIDL_sequence_CORBA_Contained_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_Contained_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_Contained_DEFINED */


/* interface CORBA_InterfaceDef declarations */
#ifndef CORBA_InterfaceDef_DECLARED
#define CORBA_InterfaceDef_DECLARED
typedef struct YCCORBA_InterfaceDef* CORBA_InterfaceDef;
CONST yotk* CORBA_InterfaceDef__getTC(void);
#ifndef YCTC_CORBA_InterfaceDef
#define YCTC_CORBA_InterfaceDef   (CORBA_InterfaceDef__getTC())
#endif
#endif /* CORBA_InterfaceDef_DECLARED */

#ifndef CORBA_InterfaceDef_SUPP_FUNCS
#define CORBA_InterfaceDef_SUPP_FUNCS
void CORBA_InterfaceDef__free( CORBA_InterfaceDef* val, ysmff ffunc);
void CORBA_InterfaceDef__copy( CORBA_InterfaceDef* dest, 
  CORBA_InterfaceDef* src, ysmaf afunc);
#endif /* CORBA_InterfaceDef_SUPP_FUNCS */

#ifndef YCIDL_sequence_CORBA_InterfaceDef_DEFINED
#define YCIDL_sequence_CORBA_InterfaceDef_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_InterfaceDef* _buffer;
} YCIDL_sequence_CORBA_InterfaceDef;
#ifndef YCIDL_sequence_CORBA_InterfaceDef_SUPP_FUNCS
#define YCIDL_sequence_CORBA_InterfaceDef_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_InterfaceDef_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_InterfaceDef_DEFINED */

#ifndef CORBA_StructMember_DECLARED
#define CORBA_StructMember_DECLARED
typedef struct CORBA_StructMember CORBA_StructMember;
#endif /* CORBA_StructMember_DECLARED */

#ifndef YCIDL_sequence_CORBA_StructMember_DEFINED
#define YCIDL_sequence_CORBA_StructMember_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_StructMember* _buffer;
} YCIDL_sequence_CORBA_StructMember;
#ifndef YCIDL_sequence_CORBA_StructMember_SUPP_FUNCS
#define YCIDL_sequence_CORBA_StructMember_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_StructMember_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_StructMember_DEFINED */

#ifndef CORBA_UnionMember_DECLARED
#define CORBA_UnionMember_DECLARED
typedef struct CORBA_UnionMember CORBA_UnionMember;
#endif /* CORBA_UnionMember_DECLARED */

#ifndef YCIDL_sequence_CORBA_UnionMember_DEFINED
#define YCIDL_sequence_CORBA_UnionMember_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_UnionMember* _buffer;
} YCIDL_sequence_CORBA_UnionMember;
#ifndef YCIDL_sequence_CORBA_UnionMember_SUPP_FUNCS
#define YCIDL_sequence_CORBA_UnionMember_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_UnionMember_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_UnionMember_DEFINED */

#ifndef CORBA_Container_Description_DECLARED
#define CORBA_Container_Description_DECLARED
typedef struct CORBA_Container_Description CORBA_Container_Description;
#endif /* CORBA_Container_Description_DECLARED */

#ifndef YCIDL_sequence_CORBA_Container_Description_DEFINED
#define YCIDL_sequence_CORBA_Container_Description_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_Container_Description* _buffer;
} YCIDL_sequence_CORBA_Container_Description;
#ifndef YCIDL_sequence_CORBA_Container_Description_SUPP_FUNCS
#define YCIDL_sequence_CORBA_Container_Description_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_Container_Description_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_Container_Description_DEFINED */

#ifndef CORBA_ParameterDescription_DECLARED
#define CORBA_ParameterDescription_DECLARED
typedef struct CORBA_ParameterDescription CORBA_ParameterDescription;
#endif /* CORBA_ParameterDescription_DECLARED */

#ifndef YCIDL_sequence_CORBA_ParameterDescription_DEFINED
#define YCIDL_sequence_CORBA_ParameterDescription_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_ParameterDescription* _buffer;
} YCIDL_sequence_CORBA_ParameterDescription;
#ifndef YCIDL_sequence_CORBA_ParameterDescription_SUPP_FUNCS
#define YCIDL_sequence_CORBA_ParameterDescription_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_ParameterDescription_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_ParameterDescription_DEFINED */


/* interface CORBA_ExceptionDef declarations */
#ifndef CORBA_ExceptionDef_DECLARED
#define CORBA_ExceptionDef_DECLARED
typedef struct YCCORBA_ExceptionDef* CORBA_ExceptionDef;
CONST yotk* CORBA_ExceptionDef__getTC(void);
#ifndef YCTC_CORBA_ExceptionDef
#define YCTC_CORBA_ExceptionDef   (CORBA_ExceptionDef__getTC())
#endif
#endif /* CORBA_ExceptionDef_DECLARED */

#ifndef CORBA_ExceptionDef_SUPP_FUNCS
#define CORBA_ExceptionDef_SUPP_FUNCS
void CORBA_ExceptionDef__free( CORBA_ExceptionDef* val, ysmff ffunc);
void CORBA_ExceptionDef__copy( CORBA_ExceptionDef* dest, 
  CORBA_ExceptionDef* src, ysmaf afunc);
#endif /* CORBA_ExceptionDef_SUPP_FUNCS */

#ifndef YCIDL_sequence_CORBA_ExceptionDef_DEFINED
#define YCIDL_sequence_CORBA_ExceptionDef_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_ExceptionDef* _buffer;
} YCIDL_sequence_CORBA_ExceptionDef;
#ifndef YCIDL_sequence_CORBA_ExceptionDef_SUPP_FUNCS
#define YCIDL_sequence_CORBA_ExceptionDef_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_ExceptionDef_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_ExceptionDef_DEFINED */

#ifndef CORBA_ExceptionDescription_DECLARED
#define CORBA_ExceptionDescription_DECLARED
typedef struct CORBA_ExceptionDescription CORBA_ExceptionDescription;
#endif /* CORBA_ExceptionDescription_DECLARED */

#ifndef YCIDL_sequence_CORBA_ExceptionDescription_DEFINED
#define YCIDL_sequence_CORBA_ExceptionDescription_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_ExceptionDescription* _buffer;
} YCIDL_sequence_CORBA_ExceptionDescription;
#ifndef YCIDL_sequence_CORBA_ExceptionDescription_SUPP_FUNCS
#define YCIDL_sequence_CORBA_ExceptionDescription_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_ExceptionDescription_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_ExceptionDescription_DEFINED */

#ifndef CORBA_OperationDescription_DECLARED
#define CORBA_OperationDescription_DECLARED
typedef struct CORBA_OperationDescription CORBA_OperationDescription;
#endif /* CORBA_OperationDescription_DECLARED */

#ifndef YCIDL_sequence_CORBA_OperationDescription_DEFINED
#define YCIDL_sequence_CORBA_OperationDescription_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_OperationDescription* _buffer;
} YCIDL_sequence_CORBA_OperationDescription;
#ifndef YCIDL_sequence_CORBA_OperationDescription_SUPP_FUNCS
#define YCIDL_sequence_CORBA_OperationDescription_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_OperationDescription_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_OperationDescription_DEFINED */

#ifndef CORBA_AttributeDescription_DECLARED
#define CORBA_AttributeDescription_DECLARED
typedef struct CORBA_AttributeDescription CORBA_AttributeDescription;
#endif /* CORBA_AttributeDescription_DECLARED */

#ifndef YCIDL_sequence_CORBA_AttributeDescription_DEFINED
#define YCIDL_sequence_CORBA_AttributeDescription_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_AttributeDescription* _buffer;
} YCIDL_sequence_CORBA_AttributeDescription;
#ifndef YCIDL_sequence_CORBA_AttributeDescription_SUPP_FUNCS
#define YCIDL_sequence_CORBA_AttributeDescription_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_AttributeDescription_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_AttributeDescription_DEFINED */

/******* NON-SEQUENCE DECLARATIONS *******/

/* interface yoevt declarations */
#ifndef yoevt_DECLARED
#define yoevt_DECLARED
typedef struct YCyoevt* yoevt;
CONST yotk* yoevt__getTC(void);
#ifndef YCTC_yoevt
#define YCTC_yoevt   (yoevt__getTC())
#endif
#endif /* yoevt_DECLARED */

#ifndef yoevt_SUPP_FUNCS
#define yoevt_SUPP_FUNCS
void yoevt__free( yoevt* val, ysmff ffunc);
void yoevt__copy( yoevt* dest, yoevt* src, ysmaf afunc);
#endif /* yoevt_SUPP_FUNCS */

#ifndef yostd_stringList_DECLARED
#define yostd_stringList_DECLARED
typedef YCIDL_sequence_string yostd_stringList;
CONST yotk* yostd_stringList__getTC(void);
#ifndef YCTC_yostd_stringList
#define YCTC_yostd_stringList   (yostd_stringList__getTC())
#endif
#endif /* yostd_stringList_DECLARED */

#ifndef yostd_stringList_SUPP_FUNCS
#define yostd_stringList_SUPP_FUNCS
void yostd_stringList__free( yostd_stringList* val, ysmff ffunc);
void yostd_stringList__copy( yostd_stringList* dest, yostd_stringList* src, 
  ysmaf afunc);
#endif /* yostd_stringList_SUPP_FUNCS */

#ifndef yostd_objList_DECLARED
#define yostd_objList_DECLARED
typedef YCIDL_sequence_CORBA_Object yostd_objList;
CONST yotk* yostd_objList__getTC(void);
#ifndef YCTC_yostd_objList
#define YCTC_yostd_objList   (yostd_objList__getTC())
#endif
#endif /* yostd_objList_DECLARED */

#ifndef yostd_objList_SUPP_FUNCS
#define yostd_objList_SUPP_FUNCS
void yostd_objList__free( yostd_objList* val, ysmff ffunc);
void yostd_objList__copy( yostd_objList* dest, yostd_objList* src, ysmaf 
  afunc);
#endif /* yostd_objList_SUPP_FUNCS */

#ifndef yostd_octetSeq_DECLARED
#define yostd_octetSeq_DECLARED
typedef YCIDL_sequence_ub1 yostd_octetSeq;
CONST yotk* yostd_octetSeq__getTC(void);
#ifndef YCTC_yostd_octetSeq
#define YCTC_yostd_octetSeq   (yostd_octetSeq__getTC())
#endif
#endif /* yostd_octetSeq_DECLARED */

#ifndef yostd_octetSeq_SUPP_FUNCS
#define yostd_octetSeq_SUPP_FUNCS
void yostd_octetSeq__free( yostd_octetSeq* val, ysmff ffunc);
void yostd_octetSeq__copy( yostd_octetSeq* dest, yostd_octetSeq* src, ysmaf 
  afunc);
#endif /* yostd_octetSeq_SUPP_FUNCS */

#ifndef CORBA_Identifier_DECLARED
#define CORBA_Identifier_DECLARED
typedef char* CORBA_Identifier;
CONST yotk* CORBA_Identifier__getTC(void);
#ifndef YCTC_CORBA_Identifier
#define YCTC_CORBA_Identifier   (CORBA_Identifier__getTC())
#endif
#endif /* CORBA_Identifier_DECLARED */

#ifndef CORBA_Identifier_SUPP_FUNCS
#define CORBA_Identifier_SUPP_FUNCS
#endif /* CORBA_Identifier_SUPP_FUNCS */

#ifndef CORBA_ScopedName_DECLARED
#define CORBA_ScopedName_DECLARED
typedef char* CORBA_ScopedName;
CONST yotk* CORBA_ScopedName__getTC(void);
#ifndef YCTC_CORBA_ScopedName
#define YCTC_CORBA_ScopedName   (CORBA_ScopedName__getTC())
#endif
#endif /* CORBA_ScopedName_DECLARED */

#ifndef CORBA_ScopedName_SUPP_FUNCS
#define CORBA_ScopedName_SUPP_FUNCS
#endif /* CORBA_ScopedName_SUPP_FUNCS */

#ifndef CORBA_RepositoryId_DECLARED
#define CORBA_RepositoryId_DECLARED
typedef char* CORBA_RepositoryId;
CONST yotk* CORBA_RepositoryId__getTC(void);
#ifndef YCTC_CORBA_RepositoryId
#define YCTC_CORBA_RepositoryId   (CORBA_RepositoryId__getTC())
#endif
#endif /* CORBA_RepositoryId_DECLARED */

#ifndef CORBA_RepositoryId_SUPP_FUNCS
#define CORBA_RepositoryId_SUPP_FUNCS
#endif /* CORBA_RepositoryId_SUPP_FUNCS */

#ifndef CORBA_RepositoryIdSeq_DECLARED
#define CORBA_RepositoryIdSeq_DECLARED
typedef YCIDL_sequence_string CORBA_RepositoryIdSeq;
CONST yotk* CORBA_RepositoryIdSeq__getTC(void);
#ifndef YCTC_CORBA_RepositoryIdSeq
#define YCTC_CORBA_RepositoryIdSeq   (CORBA_RepositoryIdSeq__getTC())
#endif
#endif /* CORBA_RepositoryIdSeq_DECLARED */

#ifndef CORBA_RepositoryIdSeq_SUPP_FUNCS
#define CORBA_RepositoryIdSeq_SUPP_FUNCS
void CORBA_RepositoryIdSeq__free( CORBA_RepositoryIdSeq* val, ysmff ffunc);
void CORBA_RepositoryIdSeq__copy( CORBA_RepositoryIdSeq* dest, 
  CORBA_RepositoryIdSeq* src, ysmaf afunc);
#endif /* CORBA_RepositoryIdSeq_SUPP_FUNCS */

#ifndef CORBA_VersionSpec_DECLARED
#define CORBA_VersionSpec_DECLARED
typedef char* CORBA_VersionSpec;
CONST yotk* CORBA_VersionSpec__getTC(void);
#ifndef YCTC_CORBA_VersionSpec
#define YCTC_CORBA_VersionSpec   (CORBA_VersionSpec__getTC())
#endif
#endif /* CORBA_VersionSpec_DECLARED */

#ifndef CORBA_VersionSpec_SUPP_FUNCS
#define CORBA_VersionSpec_SUPP_FUNCS
#endif /* CORBA_VersionSpec_SUPP_FUNCS */


/* interface CORBA_IRObject declarations */
#ifndef CORBA_IRObject_DECLARED
#define CORBA_IRObject_DECLARED
typedef struct YCCORBA_IRObject* CORBA_IRObject;
CONST yotk* CORBA_IRObject__getTC(void);
#ifndef YCTC_CORBA_IRObject
#define YCTC_CORBA_IRObject   (CORBA_IRObject__getTC())
#endif
#endif /* CORBA_IRObject_DECLARED */

#ifndef CORBA_IRObject_SUPP_FUNCS
#define CORBA_IRObject_SUPP_FUNCS
void CORBA_IRObject__free( CORBA_IRObject* val, ysmff ffunc);
void CORBA_IRObject__copy( CORBA_IRObject* dest, CORBA_IRObject* src, ysmaf 
  afunc);
#endif /* CORBA_IRObject_SUPP_FUNCS */

#ifndef CORBA_IRObjectSeq_DECLARED
#define CORBA_IRObjectSeq_DECLARED
typedef YCIDL_sequence_CORBA_IRObject CORBA_IRObjectSeq;
CONST yotk* CORBA_IRObjectSeq__getTC(void);
#ifndef YCTC_CORBA_IRObjectSeq
#define YCTC_CORBA_IRObjectSeq   (CORBA_IRObjectSeq__getTC())
#endif
#endif /* CORBA_IRObjectSeq_DECLARED */

#ifndef CORBA_IRObjectSeq_SUPP_FUNCS
#define CORBA_IRObjectSeq_SUPP_FUNCS
void CORBA_IRObjectSeq__free( CORBA_IRObjectSeq* val, ysmff ffunc);
void CORBA_IRObjectSeq__copy( CORBA_IRObjectSeq* dest, CORBA_IRObjectSeq* 
  src, ysmaf afunc);
#endif /* CORBA_IRObjectSeq_SUPP_FUNCS */

#ifndef yr_repid_DECLARED
#define yr_repid_DECLARED
typedef CORBA_RepositoryId yr_repid;
CONST yotk* yr_repid__getTC(void);
#ifndef YCTC_yr_repid
#define YCTC_yr_repid   (yr_repid__getTC())
#endif
#endif /* yr_repid_DECLARED */

#ifndef yr_repid_SUPP_FUNCS
#define yr_repid_SUPP_FUNCS
#endif /* yr_repid_SUPP_FUNCS */

#ifndef yr_repidseq_DECLARED
#define yr_repidseq_DECLARED
typedef CORBA_RepositoryIdSeq yr_repidseq;
CONST yotk* yr_repidseq__getTC(void);
#ifndef YCTC_yr_repidseq
#define YCTC_yr_repidseq   (yr_repidseq__getTC())
#endif
#endif /* yr_repidseq_DECLARED */

#ifndef yr_repidseq_SUPP_FUNCS
#define yr_repidseq_SUPP_FUNCS
#define yr_repidseq__free(val, ffunc) CORBA_RepositoryIdSeq__free((val),( \
  ffunc))
#define yr_repidseq__copy(dest, src, afunc) CORBA_RepositoryIdSeq__copy(( \
  dest),(src),(afunc))
#endif /* yr_repidseq_SUPP_FUNCS */

#ifndef yr_vers_DECLARED
#define yr_vers_DECLARED
typedef CORBA_VersionSpec yr_vers;
CONST yotk* yr_vers__getTC(void);
#ifndef YCTC_yr_vers
#define YCTC_yr_vers   (yr_vers__getTC())
#endif
#endif /* yr_vers_DECLARED */

#ifndef yr_vers_SUPP_FUNCS
#define yr_vers_SUPP_FUNCS
#endif /* yr_vers_SUPP_FUNCS */

#ifndef yr_objseq_DECLARED
#define yr_objseq_DECLARED
typedef CORBA_IRObjectSeq yr_objseq;
CONST yotk* yr_objseq__getTC(void);
#ifndef YCTC_yr_objseq
#define YCTC_yr_objseq   (yr_objseq__getTC())
#endif
#endif /* yr_objseq_DECLARED */

#ifndef yr_objseq_SUPP_FUNCS
#define yr_objseq_SUPP_FUNCS
#define yr_objseq__free(val, ffunc) CORBA_IRObjectSeq__free((val),(ffunc))
#define yr_objseq__copy(dest, src, afunc) CORBA_IRObjectSeq__copy((dest),( \
  src),(afunc))
#endif /* yr_objseq_SUPP_FUNCS */

#ifndef yr_srcref_DECLARED
#define yr_srcref_DECLARED
typedef struct yr_srcref yr_srcref;
#endif /* yr_srcref_DECLARED */

#ifndef yr_srcref_DEFINED
#define yr_srcref_DEFINED
struct yr_srcref
{
  char* filename;
  ub4 lineno;
};
CONST yotk* yr_srcref__getTC(void);
#ifndef YCTC_yr_srcref
#define YCTC_yr_srcref   (yr_srcref__getTC())
#endif
#endif /* yr_srcref_DEFINED */

#ifndef yr_srcref_SUPP_FUNCS
#define yr_srcref_SUPP_FUNCS
void yr_srcref__free( yr_srcref* val, ysmff ffunc);
void yr_srcref__copy( yr_srcref* dest, yr_srcref* src, ysmaf afunc);
#endif /* yr_srcref_SUPP_FUNCS */

#ifndef yr_path_DECLARED
#define yr_path_DECLARED
typedef char* yr_path;
CONST yotk* yr_path__getTC(void);
#ifndef YCTC_yr_path
#define YCTC_yr_path   (yr_path__getTC())
#endif
#endif /* yr_path_DECLARED */

#ifndef yr_path_SUPP_FUNCS
#define yr_path_SUPP_FUNCS
#endif /* yr_path_SUPP_FUNCS */

#ifndef yr_pathSeq_DECLARED
#define yr_pathSeq_DECLARED
typedef YCIDL_sequence_string yr_pathSeq;
CONST yotk* yr_pathSeq__getTC(void);
#ifndef YCTC_yr_pathSeq
#define YCTC_yr_pathSeq   (yr_pathSeq__getTC())
#endif
#endif /* yr_pathSeq_DECLARED */

#ifndef yr_pathSeq_SUPP_FUNCS
#define yr_pathSeq_SUPP_FUNCS
void yr_pathSeq__free( yr_pathSeq* val, ysmff ffunc);
void yr_pathSeq__copy( yr_pathSeq* dest, yr_pathSeq* src, ysmaf afunc);
#endif /* yr_pathSeq_SUPP_FUNCS */

#ifndef CORBA_DefinitionKind_DECLARED
#define CORBA_DefinitionKind_DECLARED
typedef ub4 CORBA_DefinitionKind;
CONST yotk* CORBA_DefinitionKind__getTC(void);
#ifndef YCTC_CORBA_DefinitionKind
#define YCTC_CORBA_DefinitionKind   (CORBA_DefinitionKind__getTC())
#endif
#endif /* CORBA_DefinitionKind_DECLARED */

#ifndef CORBA_DefinitionKind_DEFINED
#define CORBA_DefinitionKind_DEFINED
#define CORBA_dk_none ((CORBA_DefinitionKind) 0)
#define CORBA_dk_all ((CORBA_DefinitionKind) 1)
#define CORBA_dk_Attribute ((CORBA_DefinitionKind) 2)
#define CORBA_dk_Constant ((CORBA_DefinitionKind) 3)
#define CORBA_dk_Exception ((CORBA_DefinitionKind) 4)
#define CORBA_dk_Interface ((CORBA_DefinitionKind) 5)
#define CORBA_dk_Module ((CORBA_DefinitionKind) 6)
#define CORBA_dk_Operation ((CORBA_DefinitionKind) 7)
#define CORBA_dk_Typedef ((CORBA_DefinitionKind) 8)
#define CORBA_dk_Alias ((CORBA_DefinitionKind) 9)
#define CORBA_dk_Struct ((CORBA_DefinitionKind) 10)
#define CORBA_dk_Union ((CORBA_DefinitionKind) 11)
#define CORBA_dk_Enum ((CORBA_DefinitionKind) 12)
#define CORBA_dk_Primitive ((CORBA_DefinitionKind) 13)
#define CORBA_dk_String ((CORBA_DefinitionKind) 14)
#define CORBA_dk_Sequence ((CORBA_DefinitionKind) 15)
#define CORBA_dk_Array ((CORBA_DefinitionKind) 16)
#define CORBA_dk_Repository ((CORBA_DefinitionKind) 17)
#endif /* CORBA_DefinitionKind_DEFINED */

#ifndef CORBA_DefinitionKind_SUPP_FUNCS
#define CORBA_DefinitionKind_SUPP_FUNCS
void CORBA_DefinitionKind__free( CORBA_DefinitionKind* val, ysmff ffunc);
void CORBA_DefinitionKind__copy( CORBA_DefinitionKind* dest, 
  CORBA_DefinitionKind* src, ysmaf afunc);
#endif /* CORBA_DefinitionKind_SUPP_FUNCS */


/* interface CORBA_IRObject declarations */
#ifndef CORBA_IRObject_DECLARED
#define CORBA_IRObject_DECLARED
typedef struct YCCORBA_IRObject* CORBA_IRObject;
CONST yotk* CORBA_IRObject__getTC(void);
#ifndef YCTC_CORBA_IRObject
#define YCTC_CORBA_IRObject   (CORBA_IRObject__getTC())
#endif
#endif /* CORBA_IRObject_DECLARED */

#ifndef CORBA_IRObject_SUPP_FUNCS
#define CORBA_IRObject_SUPP_FUNCS
void CORBA_IRObject__free( CORBA_IRObject* val, ysmff ffunc);
void CORBA_IRObject__copy( CORBA_IRObject* dest, CORBA_IRObject* src, ysmaf 
  afunc);
#endif /* CORBA_IRObject_SUPP_FUNCS */

#ifndef CORBA_IRObject_DEFINED
#define CORBA_IRObject_DEFINED
struct yostub* CORBA_IRObject__getStubs(void);
#define CORBA_IRObject__stubs (CORBA_IRObject__getStubs())
#endif /* CORBA_IRObject_DEFINED */

CONST ysid* CORBA_IRObject__getId(void);
#ifndef CORBA_IRObject__id
#define CORBA_IRObject__id   (CORBA_IRObject__getId())
#endif
#ifndef CORBA_IROBJECT_EX_BADOBJ_DECLARED
#define CORBA_IROBJECT_EX_BADOBJ_DECLARED
CONST ysid* CORBA_IRObject_BadObj__getId(void);
#ifndef CORBA_IROBJECT_EX_BADOBJ
#define CORBA_IROBJECT_EX_BADOBJ   (CORBA_IRObject_BadObj__getId())
#endif
#endif /* CORBA_IROBJECT_EX_BADOBJ_DECLARED */

CONST yotk* CORBA_IRObject_BadObj__getTC(void);
#ifndef YCTC_CORBA_IRObject_BadObj
#define YCTC_CORBA_IRObject_BadObj   (CORBA_IRObject_BadObj__getTC())
#endif
CORBA_DefinitionKind CORBA_IRObject__get_def_kind( CORBA_IRObject or, 
  yoenv* ev);
yopar* CORBA_IRObject__get_def_kind__getPars(void);
#ifndef CORBA_IRObject__get_def_kind_pars
#define CORBA_IRObject__get_def_kind_pars ( \
  CORBA_IRObject__get_def_kind__getPars())
#endif

#ifndef CORBA_IRObject__tyimpl_DEFINED
#define CORBA_IRObject__tyimpl_DEFINED
struct CORBA_IRObject__tyimpl
{
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_IRObject, yoenv*);
};
#endif /* CORBA_IRObject__tyimpl_DEFINED */


/* interface CORBA_Repository declarations */
#ifndef CORBA_Repository_DECLARED
#define CORBA_Repository_DECLARED
typedef struct YCCORBA_Repository* CORBA_Repository;
CONST yotk* CORBA_Repository__getTC(void);
#ifndef YCTC_CORBA_Repository
#define YCTC_CORBA_Repository   (CORBA_Repository__getTC())
#endif
#endif /* CORBA_Repository_DECLARED */

#ifndef CORBA_Repository_SUPP_FUNCS
#define CORBA_Repository_SUPP_FUNCS
void CORBA_Repository__free( CORBA_Repository* val, ysmff ffunc);
void CORBA_Repository__copy( CORBA_Repository* dest, CORBA_Repository* src, 
  ysmaf afunc);
#endif /* CORBA_Repository_SUPP_FUNCS */


/* interface CORBA_Container declarations */
#ifndef CORBA_Container_DECLARED
#define CORBA_Container_DECLARED
typedef struct YCCORBA_Container* CORBA_Container;
CONST yotk* CORBA_Container__getTC(void);
#ifndef YCTC_CORBA_Container
#define YCTC_CORBA_Container   (CORBA_Container__getTC())
#endif
#endif /* CORBA_Container_DECLARED */

#ifndef CORBA_Container_SUPP_FUNCS
#define CORBA_Container_SUPP_FUNCS
void CORBA_Container__free( CORBA_Container* val, ysmff ffunc);
void CORBA_Container__copy( CORBA_Container* dest, CORBA_Container* src, 
  ysmaf afunc);
#endif /* CORBA_Container_SUPP_FUNCS */


/* interface CORBA_Contained declarations */
#ifndef CORBA_Contained_DECLARED
#define CORBA_Contained_DECLARED
typedef struct YCCORBA_Contained* CORBA_Contained;
CONST yotk* CORBA_Contained__getTC(void);
#ifndef YCTC_CORBA_Contained
#define YCTC_CORBA_Contained   (CORBA_Contained__getTC())
#endif
#endif /* CORBA_Contained_DECLARED */

#ifndef CORBA_Contained_SUPP_FUNCS
#define CORBA_Contained_SUPP_FUNCS
void CORBA_Contained__free( CORBA_Contained* val, ysmff ffunc);
void CORBA_Contained__copy( CORBA_Contained* dest, CORBA_Contained* src, 
  ysmaf afunc);
#endif /* CORBA_Contained_SUPP_FUNCS */

#ifndef CORBA_Contained_DEFINED
#define CORBA_Contained_DEFINED
struct yostub* CORBA_Contained__getStubs(void);
#define CORBA_Contained__stubs (CORBA_Contained__getStubs())
#endif /* CORBA_Contained_DEFINED */

CONST ysid* CORBA_Contained__getId(void);
#ifndef CORBA_Contained__id
#define CORBA_Contained__id   (CORBA_Contained__getId())
#endif
#ifndef CORBA_CONTAINED_EX_BADOBJ
#define CORBA_CONTAINED_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_CONTAINED_EX_BADOBJ */

#ifndef YCTC_CORBA_CONTAINED_EX_BADOBJ
#define YCTC_CORBA_CONTAINED_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_CONTAINED_EX_BADOBJ */

#ifndef CORBA_Contained__get_def_kind
#define CORBA_Contained__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_Contained__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_Contained__get_def_kind */

CORBA_RepositoryId CORBA_Contained__get_id( CORBA_Contained or, yoenv* ev);
yopar* CORBA_Contained__get_id__getPars(void);
#ifndef CORBA_Contained__get_id_pars
#define CORBA_Contained__get_id_pars (CORBA_Contained__get_id__getPars())
#endif

CORBA_Identifier CORBA_Contained__get_name( CORBA_Contained or, yoenv* ev);
yopar* CORBA_Contained__get_name__getPars(void);
#ifndef CORBA_Contained__get_name_pars
#define CORBA_Contained__get_name_pars (CORBA_Contained__get_name__getPars() \
  )
#endif

CORBA_VersionSpec CORBA_Contained__get_version( CORBA_Contained or, yoenv* 
  ev);
yopar* CORBA_Contained__get_version__getPars(void);
#ifndef CORBA_Contained__get_version_pars
#define CORBA_Contained__get_version_pars ( \
  CORBA_Contained__get_version__getPars())
#endif

CORBA_Container CORBA_Contained__get_defined_in( CORBA_Contained or, yoenv* 
  ev);
yopar* CORBA_Contained__get_defined_in__getPars(void);
#ifndef CORBA_Contained__get_defined_in_pars
#define CORBA_Contained__get_defined_in_pars ( \
  CORBA_Contained__get_defined_in__getPars())
#endif

CORBA_ScopedName CORBA_Contained__get_absolute_name( CORBA_Contained or, 
  yoenv* ev);
yopar* CORBA_Contained__get_absolute_name__getPars(void);
#ifndef CORBA_Contained__get_absolute_name_pars
#define CORBA_Contained__get_absolute_name_pars ( \
  CORBA_Contained__get_absolute_name__getPars())
#endif

CORBA_Repository CORBA_Contained__get_containing_repository( 
  CORBA_Contained or, yoenv* ev);
yopar* CORBA_Contained__get_containing_repository__getPars(void);
#ifndef CORBA_Contained__get_containing_repository_pars
#define CORBA_Contained__get_containing_repository_pars ( \
  CORBA_Contained__get_containing_repository__getPars())
#endif

#ifndef CORBA_Contained_Description_DECLARED
#define CORBA_Contained_Description_DECLARED
typedef struct CORBA_Contained_Description CORBA_Contained_Description;
#endif /* CORBA_Contained_Description_DECLARED */

#ifndef CORBA_Contained_Description_DEFINED
#define CORBA_Contained_Description_DEFINED
struct CORBA_Contained_Description
{
  CORBA_DefinitionKind kind;
  yoany value;
};
CONST yotk* CORBA_Contained_Description__getTC(void);
#ifndef YCTC_CORBA_Contained_Description
#define YCTC_CORBA_Contained_Description   ( \
  CORBA_Contained_Description__getTC())
#endif
#endif /* CORBA_Contained_Description_DEFINED */

#ifndef CORBA_Contained_Description_SUPP_FUNCS
#define CORBA_Contained_Description_SUPP_FUNCS
void CORBA_Contained_Description__free( CORBA_Contained_Description* val, 
  ysmff ffunc);
void CORBA_Contained_Description__copy( CORBA_Contained_Description* dest, 
  CORBA_Contained_Description* src, ysmaf afunc);
#endif /* CORBA_Contained_Description_SUPP_FUNCS */

CORBA_Contained_Description CORBA_Contained_describe( CORBA_Contained or, 
  yoenv* ev);
yopar* CORBA_Contained_describe__getPars(void);
#ifndef CORBA_Contained_describe_pars
#define CORBA_Contained_describe_pars (CORBA_Contained_describe__getPars())
#endif

#ifndef CORBA_Contained__tyimpl_DEFINED
#define CORBA_Contained__tyimpl_DEFINED
struct CORBA_Contained__tyimpl
{
  CORBA_Contained_Description (*describe)( CORBA_Contained, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_Contained, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_Contained, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_Contained, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_Contained, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_Contained, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_Contained, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_Contained, yoenv*);
};
#endif /* CORBA_Contained__tyimpl_DEFINED */


/* interface CORBA_ModuleDef declarations */
#ifndef CORBA_ModuleDef_DECLARED
#define CORBA_ModuleDef_DECLARED
typedef struct YCCORBA_ModuleDef* CORBA_ModuleDef;
CONST yotk* CORBA_ModuleDef__getTC(void);
#ifndef YCTC_CORBA_ModuleDef
#define YCTC_CORBA_ModuleDef   (CORBA_ModuleDef__getTC())
#endif
#endif /* CORBA_ModuleDef_DECLARED */

#ifndef CORBA_ModuleDef_SUPP_FUNCS
#define CORBA_ModuleDef_SUPP_FUNCS
void CORBA_ModuleDef__free( CORBA_ModuleDef* val, ysmff ffunc);
void CORBA_ModuleDef__copy( CORBA_ModuleDef* dest, CORBA_ModuleDef* src, 
  ysmaf afunc);
#endif /* CORBA_ModuleDef_SUPP_FUNCS */


/* interface CORBA_ConstantDef declarations */
#ifndef CORBA_ConstantDef_DECLARED
#define CORBA_ConstantDef_DECLARED
typedef struct YCCORBA_ConstantDef* CORBA_ConstantDef;
CONST yotk* CORBA_ConstantDef__getTC(void);
#ifndef YCTC_CORBA_ConstantDef
#define YCTC_CORBA_ConstantDef   (CORBA_ConstantDef__getTC())
#endif
#endif /* CORBA_ConstantDef_DECLARED */

#ifndef CORBA_ConstantDef_SUPP_FUNCS
#define CORBA_ConstantDef_SUPP_FUNCS
void CORBA_ConstantDef__free( CORBA_ConstantDef* val, ysmff ffunc);
void CORBA_ConstantDef__copy( CORBA_ConstantDef* dest, CORBA_ConstantDef* 
  src, ysmaf afunc);
#endif /* CORBA_ConstantDef_SUPP_FUNCS */


/* interface CORBA_IDLType declarations */
#ifndef CORBA_IDLType_DECLARED
#define CORBA_IDLType_DECLARED
typedef struct YCCORBA_IDLType* CORBA_IDLType;
CONST yotk* CORBA_IDLType__getTC(void);
#ifndef YCTC_CORBA_IDLType
#define YCTC_CORBA_IDLType   (CORBA_IDLType__getTC())
#endif
#endif /* CORBA_IDLType_DECLARED */

#ifndef CORBA_IDLType_SUPP_FUNCS
#define CORBA_IDLType_SUPP_FUNCS
void CORBA_IDLType__free( CORBA_IDLType* val, ysmff ffunc);
void CORBA_IDLType__copy( CORBA_IDLType* dest, CORBA_IDLType* src, ysmaf 
  afunc);
#endif /* CORBA_IDLType_SUPP_FUNCS */


/* interface CORBA_StructDef declarations */
#ifndef CORBA_StructDef_DECLARED
#define CORBA_StructDef_DECLARED
typedef struct YCCORBA_StructDef* CORBA_StructDef;
CONST yotk* CORBA_StructDef__getTC(void);
#ifndef YCTC_CORBA_StructDef
#define YCTC_CORBA_StructDef   (CORBA_StructDef__getTC())
#endif
#endif /* CORBA_StructDef_DECLARED */

#ifndef CORBA_StructDef_SUPP_FUNCS
#define CORBA_StructDef_SUPP_FUNCS
void CORBA_StructDef__free( CORBA_StructDef* val, ysmff ffunc);
void CORBA_StructDef__copy( CORBA_StructDef* dest, CORBA_StructDef* src, 
  ysmaf afunc);
#endif /* CORBA_StructDef_SUPP_FUNCS */


/* interface CORBA_UnionDef declarations */
#ifndef CORBA_UnionDef_DECLARED
#define CORBA_UnionDef_DECLARED
typedef struct YCCORBA_UnionDef* CORBA_UnionDef;
CONST yotk* CORBA_UnionDef__getTC(void);
#ifndef YCTC_CORBA_UnionDef
#define YCTC_CORBA_UnionDef   (CORBA_UnionDef__getTC())
#endif
#endif /* CORBA_UnionDef_DECLARED */

#ifndef CORBA_UnionDef_SUPP_FUNCS
#define CORBA_UnionDef_SUPP_FUNCS
void CORBA_UnionDef__free( CORBA_UnionDef* val, ysmff ffunc);
void CORBA_UnionDef__copy( CORBA_UnionDef* dest, CORBA_UnionDef* src, ysmaf 
  afunc);
#endif /* CORBA_UnionDef_SUPP_FUNCS */


/* interface CORBA_EnumDef declarations */
#ifndef CORBA_EnumDef_DECLARED
#define CORBA_EnumDef_DECLARED
typedef struct YCCORBA_EnumDef* CORBA_EnumDef;
CONST yotk* CORBA_EnumDef__getTC(void);
#ifndef YCTC_CORBA_EnumDef
#define YCTC_CORBA_EnumDef   (CORBA_EnumDef__getTC())
#endif
#endif /* CORBA_EnumDef_DECLARED */

#ifndef CORBA_EnumDef_SUPP_FUNCS
#define CORBA_EnumDef_SUPP_FUNCS
void CORBA_EnumDef__free( CORBA_EnumDef* val, ysmff ffunc);
void CORBA_EnumDef__copy( CORBA_EnumDef* dest, CORBA_EnumDef* src, ysmaf 
  afunc);
#endif /* CORBA_EnumDef_SUPP_FUNCS */


/* interface CORBA_AliasDef declarations */
#ifndef CORBA_AliasDef_DECLARED
#define CORBA_AliasDef_DECLARED
typedef struct YCCORBA_AliasDef* CORBA_AliasDef;
CONST yotk* CORBA_AliasDef__getTC(void);
#ifndef YCTC_CORBA_AliasDef
#define YCTC_CORBA_AliasDef   (CORBA_AliasDef__getTC())
#endif
#endif /* CORBA_AliasDef_DECLARED */

#ifndef CORBA_AliasDef_SUPP_FUNCS
#define CORBA_AliasDef_SUPP_FUNCS
void CORBA_AliasDef__free( CORBA_AliasDef* val, ysmff ffunc);
void CORBA_AliasDef__copy( CORBA_AliasDef* dest, CORBA_AliasDef* src, ysmaf 
  afunc);
#endif /* CORBA_AliasDef_SUPP_FUNCS */


/* interface CORBA_InterfaceDef declarations */
#ifndef CORBA_InterfaceDef_DECLARED
#define CORBA_InterfaceDef_DECLARED
typedef struct YCCORBA_InterfaceDef* CORBA_InterfaceDef;
CONST yotk* CORBA_InterfaceDef__getTC(void);
#ifndef YCTC_CORBA_InterfaceDef
#define YCTC_CORBA_InterfaceDef   (CORBA_InterfaceDef__getTC())
#endif
#endif /* CORBA_InterfaceDef_DECLARED */

#ifndef CORBA_InterfaceDef_SUPP_FUNCS
#define CORBA_InterfaceDef_SUPP_FUNCS
void CORBA_InterfaceDef__free( CORBA_InterfaceDef* val, ysmff ffunc);
void CORBA_InterfaceDef__copy( CORBA_InterfaceDef* dest, 
  CORBA_InterfaceDef* src, ysmaf afunc);
#endif /* CORBA_InterfaceDef_SUPP_FUNCS */

#ifndef CORBA_ContainedSeq_DECLARED
#define CORBA_ContainedSeq_DECLARED
typedef YCIDL_sequence_CORBA_Contained CORBA_ContainedSeq;
CONST yotk* CORBA_ContainedSeq__getTC(void);
#ifndef YCTC_CORBA_ContainedSeq
#define YCTC_CORBA_ContainedSeq   (CORBA_ContainedSeq__getTC())
#endif
#endif /* CORBA_ContainedSeq_DECLARED */

#ifndef CORBA_ContainedSeq_SUPP_FUNCS
#define CORBA_ContainedSeq_SUPP_FUNCS
void CORBA_ContainedSeq__free( CORBA_ContainedSeq* val, ysmff ffunc);
void CORBA_ContainedSeq__copy( CORBA_ContainedSeq* dest, 
  CORBA_ContainedSeq* src, ysmaf afunc);
#endif /* CORBA_ContainedSeq_SUPP_FUNCS */

#ifndef CORBA_InterfaceDefSeq_DECLARED
#define CORBA_InterfaceDefSeq_DECLARED
typedef YCIDL_sequence_CORBA_InterfaceDef CORBA_InterfaceDefSeq;
CONST yotk* CORBA_InterfaceDefSeq__getTC(void);
#ifndef YCTC_CORBA_InterfaceDefSeq
#define YCTC_CORBA_InterfaceDefSeq   (CORBA_InterfaceDefSeq__getTC())
#endif
#endif /* CORBA_InterfaceDefSeq_DECLARED */

#ifndef CORBA_InterfaceDefSeq_SUPP_FUNCS
#define CORBA_InterfaceDefSeq_SUPP_FUNCS
void CORBA_InterfaceDefSeq__free( CORBA_InterfaceDefSeq* val, ysmff ffunc);
void CORBA_InterfaceDefSeq__copy( CORBA_InterfaceDefSeq* dest, 
  CORBA_InterfaceDefSeq* src, ysmaf afunc);
#endif /* CORBA_InterfaceDefSeq_SUPP_FUNCS */

#ifndef CORBA_StructMember_DECLARED
#define CORBA_StructMember_DECLARED
typedef struct CORBA_StructMember CORBA_StructMember;
#endif /* CORBA_StructMember_DECLARED */

#ifndef CORBA_StructMember_DEFINED
#define CORBA_StructMember_DEFINED
struct CORBA_StructMember
{
  CORBA_Identifier name;
  yotk* type;
  CORBA_IDLType type_def;
};
CONST yotk* CORBA_StructMember__getTC(void);
#ifndef YCTC_CORBA_StructMember
#define YCTC_CORBA_StructMember   (CORBA_StructMember__getTC())
#endif
#endif /* CORBA_StructMember_DEFINED */

#ifndef CORBA_StructMember_SUPP_FUNCS
#define CORBA_StructMember_SUPP_FUNCS
void CORBA_StructMember__free( CORBA_StructMember* val, ysmff ffunc);
void CORBA_StructMember__copy( CORBA_StructMember* dest, 
  CORBA_StructMember* src, ysmaf afunc);
#endif /* CORBA_StructMember_SUPP_FUNCS */

#ifndef CORBA_StructMemberSeq_DECLARED
#define CORBA_StructMemberSeq_DECLARED
typedef YCIDL_sequence_CORBA_StructMember CORBA_StructMemberSeq;
CONST yotk* CORBA_StructMemberSeq__getTC(void);
#ifndef YCTC_CORBA_StructMemberSeq
#define YCTC_CORBA_StructMemberSeq   (CORBA_StructMemberSeq__getTC())
#endif
#endif /* CORBA_StructMemberSeq_DECLARED */

#ifndef CORBA_StructMemberSeq_SUPP_FUNCS
#define CORBA_StructMemberSeq_SUPP_FUNCS
void CORBA_StructMemberSeq__free( CORBA_StructMemberSeq* val, ysmff ffunc);
void CORBA_StructMemberSeq__copy( CORBA_StructMemberSeq* dest, 
  CORBA_StructMemberSeq* src, ysmaf afunc);
#endif /* CORBA_StructMemberSeq_SUPP_FUNCS */

#ifndef CORBA_UnionMember_DECLARED
#define CORBA_UnionMember_DECLARED
typedef struct CORBA_UnionMember CORBA_UnionMember;
#endif /* CORBA_UnionMember_DECLARED */

#ifndef CORBA_UnionMember_DEFINED
#define CORBA_UnionMember_DEFINED
struct CORBA_UnionMember
{
  CORBA_Identifier name;
  yoany label;
  yotk* type;
  CORBA_IDLType type_def;
};
CONST yotk* CORBA_UnionMember__getTC(void);
#ifndef YCTC_CORBA_UnionMember
#define YCTC_CORBA_UnionMember   (CORBA_UnionMember__getTC())
#endif
#endif /* CORBA_UnionMember_DEFINED */

#ifndef CORBA_UnionMember_SUPP_FUNCS
#define CORBA_UnionMember_SUPP_FUNCS
void CORBA_UnionMember__free( CORBA_UnionMember* val, ysmff ffunc);
void CORBA_UnionMember__copy( CORBA_UnionMember* dest, CORBA_UnionMember* 
  src, ysmaf afunc);
#endif /* CORBA_UnionMember_SUPP_FUNCS */

#ifndef CORBA_UnionMemberSeq_DECLARED
#define CORBA_UnionMemberSeq_DECLARED
typedef YCIDL_sequence_CORBA_UnionMember CORBA_UnionMemberSeq;
CONST yotk* CORBA_UnionMemberSeq__getTC(void);
#ifndef YCTC_CORBA_UnionMemberSeq
#define YCTC_CORBA_UnionMemberSeq   (CORBA_UnionMemberSeq__getTC())
#endif
#endif /* CORBA_UnionMemberSeq_DECLARED */

#ifndef CORBA_UnionMemberSeq_SUPP_FUNCS
#define CORBA_UnionMemberSeq_SUPP_FUNCS
void CORBA_UnionMemberSeq__free( CORBA_UnionMemberSeq* val, ysmff ffunc);
void CORBA_UnionMemberSeq__copy( CORBA_UnionMemberSeq* dest, 
  CORBA_UnionMemberSeq* src, ysmaf afunc);
#endif /* CORBA_UnionMemberSeq_SUPP_FUNCS */

#ifndef CORBA_EnumMemberSeq_DECLARED
#define CORBA_EnumMemberSeq_DECLARED
typedef YCIDL_sequence_string CORBA_EnumMemberSeq;
CONST yotk* CORBA_EnumMemberSeq__getTC(void);
#ifndef YCTC_CORBA_EnumMemberSeq
#define YCTC_CORBA_EnumMemberSeq   (CORBA_EnumMemberSeq__getTC())
#endif
#endif /* CORBA_EnumMemberSeq_DECLARED */

#ifndef CORBA_EnumMemberSeq_SUPP_FUNCS
#define CORBA_EnumMemberSeq_SUPP_FUNCS
void CORBA_EnumMemberSeq__free( CORBA_EnumMemberSeq* val, ysmff ffunc);
void CORBA_EnumMemberSeq__copy( CORBA_EnumMemberSeq* dest, 
  CORBA_EnumMemberSeq* src, ysmaf afunc);
#endif /* CORBA_EnumMemberSeq_SUPP_FUNCS */


/* interface CORBA_Container declarations */
#ifndef CORBA_Container_DECLARED
#define CORBA_Container_DECLARED
typedef struct YCCORBA_Container* CORBA_Container;
CONST yotk* CORBA_Container__getTC(void);
#ifndef YCTC_CORBA_Container
#define YCTC_CORBA_Container   (CORBA_Container__getTC())
#endif
#endif /* CORBA_Container_DECLARED */

#ifndef CORBA_Container_SUPP_FUNCS
#define CORBA_Container_SUPP_FUNCS
void CORBA_Container__free( CORBA_Container* val, ysmff ffunc);
void CORBA_Container__copy( CORBA_Container* dest, CORBA_Container* src, 
  ysmaf afunc);
#endif /* CORBA_Container_SUPP_FUNCS */

#ifndef CORBA_Container_DEFINED
#define CORBA_Container_DEFINED
struct yostub* CORBA_Container__getStubs(void);
#define CORBA_Container__stubs (CORBA_Container__getStubs())
#endif /* CORBA_Container_DEFINED */

CONST ysid* CORBA_Container__getId(void);
#ifndef CORBA_Container__id
#define CORBA_Container__id   (CORBA_Container__getId())
#endif
#ifndef CORBA_CONTAINER_EX_BADOBJ
#define CORBA_CONTAINER_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_CONTAINER_EX_BADOBJ */

#ifndef YCTC_CORBA_CONTAINER_EX_BADOBJ
#define YCTC_CORBA_CONTAINER_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_CONTAINER_EX_BADOBJ */

#ifndef CORBA_Container__get_def_kind
#define CORBA_Container__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_Container__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_Container__get_def_kind */

CORBA_Contained CORBA_Container_lookup( CORBA_Container or, yoenv* ev, 
  CORBA_ScopedName search_name);
yopar* CORBA_Container_lookup__getPars(void);
#ifndef CORBA_Container_lookup_pars
#define CORBA_Container_lookup_pars (CORBA_Container_lookup__getPars())
#endif

CORBA_ContainedSeq CORBA_Container_contents( CORBA_Container or, yoenv* ev, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
yopar* CORBA_Container_contents__getPars(void);
#ifndef CORBA_Container_contents_pars
#define CORBA_Container_contents_pars (CORBA_Container_contents__getPars())
#endif

CORBA_ContainedSeq CORBA_Container_lookup_name( CORBA_Container or, yoenv* 
  ev, CORBA_Identifier search_name, sb4 levels_to_search, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
yopar* CORBA_Container_lookup_name__getPars(void);
#ifndef CORBA_Container_lookup_name_pars
#define CORBA_Container_lookup_name_pars ( \
  CORBA_Container_lookup_name__getPars())
#endif

#ifndef CORBA_Container_Description_DECLARED
#define CORBA_Container_Description_DECLARED
typedef struct CORBA_Container_Description CORBA_Container_Description;
#endif /* CORBA_Container_Description_DECLARED */

#ifndef CORBA_Container_Description_DEFINED
#define CORBA_Container_Description_DEFINED
struct CORBA_Container_Description
{
  CORBA_Contained contained_object;
  CORBA_DefinitionKind kind;
  yoany value;
};
CONST yotk* CORBA_Container_Description__getTC(void);
#ifndef YCTC_CORBA_Container_Description
#define YCTC_CORBA_Container_Description   ( \
  CORBA_Container_Description__getTC())
#endif
#endif /* CORBA_Container_Description_DEFINED */

#ifndef CORBA_Container_Description_SUPP_FUNCS
#define CORBA_Container_Description_SUPP_FUNCS
void CORBA_Container_Description__free( CORBA_Container_Description* val, 
  ysmff ffunc);
void CORBA_Container_Description__copy( CORBA_Container_Description* dest, 
  CORBA_Container_Description* src, ysmaf afunc);
#endif /* CORBA_Container_Description_SUPP_FUNCS */

#ifndef CORBA_Container_DescriptionSeq_DECLARED
#define CORBA_Container_DescriptionSeq_DECLARED
typedef YCIDL_sequence_CORBA_Container_Description 
  CORBA_Container_DescriptionSeq;
CONST yotk* CORBA_Container_DescriptionSeq__getTC(void);
#ifndef YCTC_CORBA_Container_DescriptionSeq
#define YCTC_CORBA_Container_DescriptionSeq   ( \
  CORBA_Container_DescriptionSeq__getTC())
#endif
#endif /* CORBA_Container_DescriptionSeq_DECLARED */

#ifndef CORBA_Container_DescriptionSeq_SUPP_FUNCS
#define CORBA_Container_DescriptionSeq_SUPP_FUNCS
void CORBA_Container_DescriptionSeq__free( CORBA_Container_DescriptionSeq* 
  val, ysmff ffunc);
void CORBA_Container_DescriptionSeq__copy( CORBA_Container_DescriptionSeq* 
  dest, CORBA_Container_DescriptionSeq* src, ysmaf afunc);
#endif /* CORBA_Container_DescriptionSeq_SUPP_FUNCS */

CORBA_Container_DescriptionSeq CORBA_Container_describe_contents( 
  CORBA_Container or, yoenv* ev, CORBA_DefinitionKind limit_type, boolean 
  exclude_inherited, sb4 max_returned_objs);
yopar* CORBA_Container_describe_contents__getPars(void);
#ifndef CORBA_Container_describe_contents_pars
#define CORBA_Container_describe_contents_pars ( \
  CORBA_Container_describe_contents__getPars())
#endif

#ifndef CORBA_Container__tyimpl_DEFINED
#define CORBA_Container__tyimpl_DEFINED
struct CORBA_Container__tyimpl
{
  CORBA_Contained (*lookup)( CORBA_Container, yoenv*, CORBA_ScopedName);
  CORBA_ContainedSeq (*contents)( CORBA_Container, yoenv*, 
    CORBA_DefinitionKind, boolean);
  CORBA_ContainedSeq (*lookup_name)( CORBA_Container, yoenv*, 
    CORBA_Identifier, sb4, CORBA_DefinitionKind, boolean);
  CORBA_Container_DescriptionSeq (*describe_contents)( CORBA_Container, 
    yoenv*, CORBA_DefinitionKind, boolean, sb4);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_Container, yoenv*);
};
#endif /* CORBA_Container__tyimpl_DEFINED */


/* interface CORBA_IDLType declarations */
#ifndef CORBA_IDLType_DECLARED
#define CORBA_IDLType_DECLARED
typedef struct YCCORBA_IDLType* CORBA_IDLType;
CONST yotk* CORBA_IDLType__getTC(void);
#ifndef YCTC_CORBA_IDLType
#define YCTC_CORBA_IDLType   (CORBA_IDLType__getTC())
#endif
#endif /* CORBA_IDLType_DECLARED */

#ifndef CORBA_IDLType_SUPP_FUNCS
#define CORBA_IDLType_SUPP_FUNCS
void CORBA_IDLType__free( CORBA_IDLType* val, ysmff ffunc);
void CORBA_IDLType__copy( CORBA_IDLType* dest, CORBA_IDLType* src, ysmaf 
  afunc);
#endif /* CORBA_IDLType_SUPP_FUNCS */

#ifndef CORBA_IDLType_DEFINED
#define CORBA_IDLType_DEFINED
struct yostub* CORBA_IDLType__getStubs(void);
#define CORBA_IDLType__stubs (CORBA_IDLType__getStubs())
#endif /* CORBA_IDLType_DEFINED */

CONST ysid* CORBA_IDLType__getId(void);
#ifndef CORBA_IDLType__id
#define CORBA_IDLType__id   (CORBA_IDLType__getId())
#endif
#ifndef CORBA_IDLTYPE_EX_BADOBJ
#define CORBA_IDLTYPE_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_IDLTYPE_EX_BADOBJ */

#ifndef YCTC_CORBA_IDLTYPE_EX_BADOBJ
#define YCTC_CORBA_IDLTYPE_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_IDLTYPE_EX_BADOBJ */

#ifndef CORBA_IDLType__get_def_kind
#define CORBA_IDLType__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_IDLType__get_def_kind_pars CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_IDLType__get_def_kind */

yotk* CORBA_IDLType__get_type( CORBA_IDLType or, yoenv* ev);
yopar* CORBA_IDLType__get_type__getPars(void);
#ifndef CORBA_IDLType__get_type_pars
#define CORBA_IDLType__get_type_pars (CORBA_IDLType__get_type__getPars())
#endif

#ifndef CORBA_IDLType__tyimpl_DEFINED
#define CORBA_IDLType__tyimpl_DEFINED
struct CORBA_IDLType__tyimpl
{
  yotk* (*_get_type)( CORBA_IDLType, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_IDLType, yoenv*);
};
#endif /* CORBA_IDLType__tyimpl_DEFINED */


/* interface CORBA_PrimitiveDef declarations */
#ifndef CORBA_PrimitiveDef_DECLARED
#define CORBA_PrimitiveDef_DECLARED
typedef struct YCCORBA_PrimitiveDef* CORBA_PrimitiveDef;
CONST yotk* CORBA_PrimitiveDef__getTC(void);
#ifndef YCTC_CORBA_PrimitiveDef
#define YCTC_CORBA_PrimitiveDef   (CORBA_PrimitiveDef__getTC())
#endif
#endif /* CORBA_PrimitiveDef_DECLARED */

#ifndef CORBA_PrimitiveDef_SUPP_FUNCS
#define CORBA_PrimitiveDef_SUPP_FUNCS
void CORBA_PrimitiveDef__free( CORBA_PrimitiveDef* val, ysmff ffunc);
void CORBA_PrimitiveDef__copy( CORBA_PrimitiveDef* dest, 
  CORBA_PrimitiveDef* src, ysmaf afunc);
#endif /* CORBA_PrimitiveDef_SUPP_FUNCS */


/* interface CORBA_StringDef declarations */
#ifndef CORBA_StringDef_DECLARED
#define CORBA_StringDef_DECLARED
typedef struct YCCORBA_StringDef* CORBA_StringDef;
CONST yotk* CORBA_StringDef__getTC(void);
#ifndef YCTC_CORBA_StringDef
#define YCTC_CORBA_StringDef   (CORBA_StringDef__getTC())
#endif
#endif /* CORBA_StringDef_DECLARED */

#ifndef CORBA_StringDef_SUPP_FUNCS
#define CORBA_StringDef_SUPP_FUNCS
void CORBA_StringDef__free( CORBA_StringDef* val, ysmff ffunc);
void CORBA_StringDef__copy( CORBA_StringDef* dest, CORBA_StringDef* src, 
  ysmaf afunc);
#endif /* CORBA_StringDef_SUPP_FUNCS */


/* interface CORBA_SequenceDef declarations */
#ifndef CORBA_SequenceDef_DECLARED
#define CORBA_SequenceDef_DECLARED
typedef struct YCCORBA_SequenceDef* CORBA_SequenceDef;
CONST yotk* CORBA_SequenceDef__getTC(void);
#ifndef YCTC_CORBA_SequenceDef
#define YCTC_CORBA_SequenceDef   (CORBA_SequenceDef__getTC())
#endif
#endif /* CORBA_SequenceDef_DECLARED */

#ifndef CORBA_SequenceDef_SUPP_FUNCS
#define CORBA_SequenceDef_SUPP_FUNCS
void CORBA_SequenceDef__free( CORBA_SequenceDef* val, ysmff ffunc);
void CORBA_SequenceDef__copy( CORBA_SequenceDef* dest, CORBA_SequenceDef* 
  src, ysmaf afunc);
#endif /* CORBA_SequenceDef_SUPP_FUNCS */


/* interface CORBA_ArrayDef declarations */
#ifndef CORBA_ArrayDef_DECLARED
#define CORBA_ArrayDef_DECLARED
typedef struct YCCORBA_ArrayDef* CORBA_ArrayDef;
CONST yotk* CORBA_ArrayDef__getTC(void);
#ifndef YCTC_CORBA_ArrayDef
#define YCTC_CORBA_ArrayDef   (CORBA_ArrayDef__getTC())
#endif
#endif /* CORBA_ArrayDef_DECLARED */

#ifndef CORBA_ArrayDef_SUPP_FUNCS
#define CORBA_ArrayDef_SUPP_FUNCS
void CORBA_ArrayDef__free( CORBA_ArrayDef* val, ysmff ffunc);
void CORBA_ArrayDef__copy( CORBA_ArrayDef* dest, CORBA_ArrayDef* src, ysmaf 
  afunc);
#endif /* CORBA_ArrayDef_SUPP_FUNCS */

#ifndef CORBA_PrimitiveKind_DECLARED
#define CORBA_PrimitiveKind_DECLARED
typedef ub4 CORBA_PrimitiveKind;
CONST yotk* CORBA_PrimitiveKind__getTC(void);
#ifndef YCTC_CORBA_PrimitiveKind
#define YCTC_CORBA_PrimitiveKind   (CORBA_PrimitiveKind__getTC())
#endif
#endif /* CORBA_PrimitiveKind_DECLARED */

#ifndef CORBA_PrimitiveKind_DEFINED
#define CORBA_PrimitiveKind_DEFINED
#define CORBA_pk_null ((CORBA_PrimitiveKind) 0)
#define CORBA_pk_void ((CORBA_PrimitiveKind) 1)
#define CORBA_pk_short ((CORBA_PrimitiveKind) 2)
#define CORBA_pk_long ((CORBA_PrimitiveKind) 3)
#define CORBA_pk_ushort ((CORBA_PrimitiveKind) 4)
#define CORBA_pk_ulong ((CORBA_PrimitiveKind) 5)
#define CORBA_pk_float ((CORBA_PrimitiveKind) 6)
#define CORBA_pk_double ((CORBA_PrimitiveKind) 7)
#define CORBA_pk_boolean ((CORBA_PrimitiveKind) 8)
#define CORBA_pk_char ((CORBA_PrimitiveKind) 9)
#define CORBA_pk_octet ((CORBA_PrimitiveKind) 10)
#define CORBA_pk_any ((CORBA_PrimitiveKind) 11)
#define CORBA_pk_TypeCode ((CORBA_PrimitiveKind) 12)
#define CORBA_pk_Principal ((CORBA_PrimitiveKind) 13)
#define CORBA_pk_string ((CORBA_PrimitiveKind) 14)
#define CORBA_pk_objref ((CORBA_PrimitiveKind) 15)
#define CORBA_pk_longlong ((CORBA_PrimitiveKind) 16)
#endif /* CORBA_PrimitiveKind_DEFINED */

#ifndef CORBA_PrimitiveKind_SUPP_FUNCS
#define CORBA_PrimitiveKind_SUPP_FUNCS
void CORBA_PrimitiveKind__free( CORBA_PrimitiveKind* val, ysmff ffunc);
void CORBA_PrimitiveKind__copy( CORBA_PrimitiveKind* dest, 
  CORBA_PrimitiveKind* src, ysmaf afunc);
#endif /* CORBA_PrimitiveKind_SUPP_FUNCS */


/* interface CORBA_PrimitiveDef declarations */
#ifndef CORBA_PrimitiveDef_DECLARED
#define CORBA_PrimitiveDef_DECLARED
typedef struct YCCORBA_PrimitiveDef* CORBA_PrimitiveDef;
CONST yotk* CORBA_PrimitiveDef__getTC(void);
#ifndef YCTC_CORBA_PrimitiveDef
#define YCTC_CORBA_PrimitiveDef   (CORBA_PrimitiveDef__getTC())
#endif
#endif /* CORBA_PrimitiveDef_DECLARED */

#ifndef CORBA_PrimitiveDef_SUPP_FUNCS
#define CORBA_PrimitiveDef_SUPP_FUNCS
void CORBA_PrimitiveDef__free( CORBA_PrimitiveDef* val, ysmff ffunc);
void CORBA_PrimitiveDef__copy( CORBA_PrimitiveDef* dest, 
  CORBA_PrimitiveDef* src, ysmaf afunc);
#endif /* CORBA_PrimitiveDef_SUPP_FUNCS */

#ifndef CORBA_PrimitiveDef_DEFINED
#define CORBA_PrimitiveDef_DEFINED
struct yostub* CORBA_PrimitiveDef__getStubs(void);
#define CORBA_PrimitiveDef__stubs (CORBA_PrimitiveDef__getStubs())
#endif /* CORBA_PrimitiveDef_DEFINED */

CONST ysid* CORBA_PrimitiveDef__getId(void);
#ifndef CORBA_PrimitiveDef__id
#define CORBA_PrimitiveDef__id   (CORBA_PrimitiveDef__getId())
#endif
#ifndef CORBA_PRIMITIVEDEF_EX_BADOBJ
#define CORBA_PRIMITIVEDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_PRIMITIVEDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_PRIMITIVEDEF_EX_BADOBJ
#define YCTC_CORBA_PRIMITIVEDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_PRIMITIVEDEF_EX_BADOBJ */

#ifndef CORBA_PrimitiveDef__get_def_kind
#define CORBA_PrimitiveDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_PrimitiveDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_PrimitiveDef__get_def_kind */

#ifndef CORBA_PrimitiveDef__get_type
#define CORBA_PrimitiveDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_PrimitiveDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_PrimitiveDef__get_type */

CORBA_PrimitiveKind CORBA_PrimitiveDef__get_kind( CORBA_PrimitiveDef or, 
  yoenv* ev);
yopar* CORBA_PrimitiveDef__get_kind__getPars(void);
#ifndef CORBA_PrimitiveDef__get_kind_pars
#define CORBA_PrimitiveDef__get_kind_pars ( \
  CORBA_PrimitiveDef__get_kind__getPars())
#endif

#ifndef CORBA_PrimitiveDef__tyimpl_DEFINED
#define CORBA_PrimitiveDef__tyimpl_DEFINED
struct CORBA_PrimitiveDef__tyimpl
{
  CORBA_PrimitiveKind (*_get_kind)( CORBA_PrimitiveDef, yoenv*);
  yotk* (*_get_type)( CORBA_PrimitiveDef, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_PrimitiveDef, yoenv*);
};
#endif /* CORBA_PrimitiveDef__tyimpl_DEFINED */


/* interface CORBA_Repository declarations */
#ifndef CORBA_Repository_DECLARED
#define CORBA_Repository_DECLARED
typedef struct YCCORBA_Repository* CORBA_Repository;
CONST yotk* CORBA_Repository__getTC(void);
#ifndef YCTC_CORBA_Repository
#define YCTC_CORBA_Repository   (CORBA_Repository__getTC())
#endif
#endif /* CORBA_Repository_DECLARED */

#ifndef CORBA_Repository_SUPP_FUNCS
#define CORBA_Repository_SUPP_FUNCS
void CORBA_Repository__free( CORBA_Repository* val, ysmff ffunc);
void CORBA_Repository__copy( CORBA_Repository* dest, CORBA_Repository* src, 
  ysmaf afunc);
#endif /* CORBA_Repository_SUPP_FUNCS */

#ifndef CORBA_Repository_DEFINED
#define CORBA_Repository_DEFINED
struct yostub* CORBA_Repository__getStubs(void);
#define CORBA_Repository__stubs (CORBA_Repository__getStubs())
#endif /* CORBA_Repository_DEFINED */

CONST ysid* CORBA_Repository__getId(void);
#ifndef CORBA_Repository__id
#define CORBA_Repository__id   (CORBA_Repository__getId())
#endif
#ifndef CORBA_REPOSITORY_EX_BADOBJ
#define CORBA_REPOSITORY_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_REPOSITORY_EX_BADOBJ */

#ifndef YCTC_CORBA_REPOSITORY_EX_BADOBJ
#define YCTC_CORBA_REPOSITORY_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_REPOSITORY_EX_BADOBJ */

#ifndef CORBA_Repository__get_def_kind
#define CORBA_Repository__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_Repository__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_Repository__get_def_kind */

#ifndef CORBA_Repository_lookup
#define CORBA_Repository_lookup(or, ev, search_name) \
    CORBA_Container_lookup((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name))
#define CORBA_Repository_lookup_pars CORBA_Container_lookup_pars
#endif /* CORBA_Repository_lookup */

#ifndef CORBA_Repository_contents
#define CORBA_Repository_contents(or, ev, limit_type, exclude_inherited) \
    CORBA_Container_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited))
#define CORBA_Repository_contents_pars CORBA_Container_contents_pars
#endif /* CORBA_Repository_contents */

#ifndef CORBA_Repository_lookup_name
#define CORBA_Repository_lookup_name(or, ev, search_name, levels_to_search,  \
  limit_type, exclude_inherited) \
    CORBA_Container_lookup_name((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name), (levels_to_search), (limit_type), (exclude_inherited))
#define CORBA_Repository_lookup_name_pars CORBA_Container_lookup_name_pars
#endif /* CORBA_Repository_lookup_name */

#ifndef CORBA_Repository_Description
#define CORBA_Repository_Description CORBA_Container_Description
#endif /* CORBA_Repository_Description */

#ifndef YCTC_CORBA_Repository_Description
#define YCTC_CORBA_Repository_Description YCTC_CORBA_Container_Description
#endif /* YCTC_CORBA_Repository_Description */

#ifndef CORBA_Repository_Description_SUPP_FUNCS
#define CORBA_Repository_Description_SUPP_FUNCS
#define CORBA_Repository_Description__free(val, ffunc)  \
  CORBA_Container_Description__free((val),(ffunc))
#define CORBA_Repository_Description__copy(dest, src, afunc)  \
  CORBA_Container_Description__copy((dest),(src),(afunc))
#endif /* CORBA_Repository_Description_SUPP_FUNCS */

#ifndef CORBA_Repository_DescriptionSeq
#define CORBA_Repository_DescriptionSeq CORBA_Container_DescriptionSeq
#endif /* CORBA_Repository_DescriptionSeq */

#ifndef CORBA_Repository_DescriptionSeq_SUPP_FUNCS
#define CORBA_Repository_DescriptionSeq_SUPP_FUNCS
#define CORBA_Repository_DescriptionSeq__free(val, ffunc)  \
  CORBA_Container_DescriptionSeq__free((val),(ffunc))
#define CORBA_Repository_DescriptionSeq__copy(dest, src, afunc)  \
  CORBA_Container_DescriptionSeq__copy((dest),(src),(afunc))
#endif /* CORBA_Repository_DescriptionSeq_SUPP_FUNCS */

#ifndef YCTC_CORBA_Repository_DescriptionSeq
#define YCTC_CORBA_Repository_DescriptionSeq  \
  YCTC_CORBA_Container_DescriptionSeq
#endif /* YCTC_CORBA_Repository_DescriptionSeq */

#ifndef CORBA_Repository_describe_contents
#define CORBA_Repository_describe_contents(or, ev, limit_type,  \
  exclude_inherited, max_returned_objs) \
    CORBA_Container_describe_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited), (max_returned_objs))
#define CORBA_Repository_describe_contents_pars  \
  CORBA_Container_describe_contents_pars
#endif /* CORBA_Repository_describe_contents */

CORBA_Contained CORBA_Repository_lookup_id( CORBA_Repository or, yoenv* ev, 
  CORBA_RepositoryId search_id);
yopar* CORBA_Repository_lookup_id__getPars(void);
#ifndef CORBA_Repository_lookup_id_pars
#define CORBA_Repository_lookup_id_pars ( \
  CORBA_Repository_lookup_id__getPars())
#endif

CORBA_PrimitiveDef CORBA_Repository_get_primitive( CORBA_Repository or, 
  yoenv* ev, CORBA_PrimitiveKind kind);
yopar* CORBA_Repository_get_primitive__getPars(void);
#ifndef CORBA_Repository_get_primitive_pars
#define CORBA_Repository_get_primitive_pars ( \
  CORBA_Repository_get_primitive__getPars())
#endif

#ifndef CORBA_Repository__tyimpl_DEFINED
#define CORBA_Repository__tyimpl_DEFINED
struct CORBA_Repository__tyimpl
{
  CORBA_Contained (*lookup_id)( CORBA_Repository, yoenv*, 
    CORBA_RepositoryId);
  CORBA_PrimitiveDef (*get_primitive)( CORBA_Repository, yoenv*, 
    CORBA_PrimitiveKind);
  CORBA_Contained (*lookup)( CORBA_Repository, yoenv*, CORBA_ScopedName);
  CORBA_ContainedSeq (*contents)( CORBA_Repository, yoenv*, 
    CORBA_DefinitionKind, boolean);
  CORBA_ContainedSeq (*lookup_name)( CORBA_Repository, yoenv*, 
    CORBA_Identifier, sb4, CORBA_DefinitionKind, boolean);
  CORBA_Container_DescriptionSeq (*describe_contents)( CORBA_Repository, 
    yoenv*, CORBA_DefinitionKind, boolean, sb4);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_Repository, yoenv*);
};
#endif /* CORBA_Repository__tyimpl_DEFINED */


/* interface CORBA_ModuleDef declarations */
#ifndef CORBA_ModuleDef_DECLARED
#define CORBA_ModuleDef_DECLARED
typedef struct YCCORBA_ModuleDef* CORBA_ModuleDef;
CONST yotk* CORBA_ModuleDef__getTC(void);
#ifndef YCTC_CORBA_ModuleDef
#define YCTC_CORBA_ModuleDef   (CORBA_ModuleDef__getTC())
#endif
#endif /* CORBA_ModuleDef_DECLARED */

#ifndef CORBA_ModuleDef_SUPP_FUNCS
#define CORBA_ModuleDef_SUPP_FUNCS
void CORBA_ModuleDef__free( CORBA_ModuleDef* val, ysmff ffunc);
void CORBA_ModuleDef__copy( CORBA_ModuleDef* dest, CORBA_ModuleDef* src, 
  ysmaf afunc);
#endif /* CORBA_ModuleDef_SUPP_FUNCS */

#ifndef CORBA_ModuleDef_DEFINED
#define CORBA_ModuleDef_DEFINED
struct yostub* CORBA_ModuleDef__getStubs(void);
#define CORBA_ModuleDef__stubs (CORBA_ModuleDef__getStubs())
#endif /* CORBA_ModuleDef_DEFINED */

CONST ysid* CORBA_ModuleDef__getId(void);
#ifndef CORBA_ModuleDef__id
#define CORBA_ModuleDef__id   (CORBA_ModuleDef__getId())
#endif
#ifndef CORBA_MODULEDEF_EX_BADOBJ
#define CORBA_MODULEDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_MODULEDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_MODULEDEF_EX_BADOBJ
#define YCTC_CORBA_MODULEDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_MODULEDEF_EX_BADOBJ */

#ifndef CORBA_ModuleDef__get_def_kind
#define CORBA_ModuleDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_ModuleDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_ModuleDef__get_def_kind */

#ifndef CORBA_ModuleDef_lookup
#define CORBA_ModuleDef_lookup(or, ev, search_name) \
    CORBA_Container_lookup((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name))
#define CORBA_ModuleDef_lookup_pars CORBA_Container_lookup_pars
#endif /* CORBA_ModuleDef_lookup */

#ifndef CORBA_ModuleDef_contents
#define CORBA_ModuleDef_contents(or, ev, limit_type, exclude_inherited) \
    CORBA_Container_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited))
#define CORBA_ModuleDef_contents_pars CORBA_Container_contents_pars
#endif /* CORBA_ModuleDef_contents */

#ifndef CORBA_ModuleDef_lookup_name
#define CORBA_ModuleDef_lookup_name(or, ev, search_name, levels_to_search,  \
  limit_type, exclude_inherited) \
    CORBA_Container_lookup_name((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name), (levels_to_search), (limit_type), (exclude_inherited))
#define CORBA_ModuleDef_lookup_name_pars CORBA_Container_lookup_name_pars
#endif /* CORBA_ModuleDef_lookup_name */

#ifndef CORBA_ModuleDef_DescriptionSeq
#define CORBA_ModuleDef_DescriptionSeq CORBA_Container_DescriptionSeq
#endif /* CORBA_ModuleDef_DescriptionSeq */

#ifndef CORBA_ModuleDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_ModuleDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_ModuleDef_DescriptionSeq__free(val, ffunc)  \
  CORBA_Container_DescriptionSeq__free((val),(ffunc))
#define CORBA_ModuleDef_DescriptionSeq__copy(dest, src, afunc)  \
  CORBA_Container_DescriptionSeq__copy((dest),(src),(afunc))
#endif /* CORBA_ModuleDef_DescriptionSeq_SUPP_FUNCS */

#ifndef YCTC_CORBA_ModuleDef_DescriptionSeq
#define YCTC_CORBA_ModuleDef_DescriptionSeq  \
  YCTC_CORBA_Container_DescriptionSeq
#endif /* YCTC_CORBA_ModuleDef_DescriptionSeq */

#ifndef CORBA_ModuleDef_describe_contents
#define CORBA_ModuleDef_describe_contents(or, ev, limit_type,  \
  exclude_inherited, max_returned_objs) \
    CORBA_Container_describe_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited), (max_returned_objs))
#define CORBA_ModuleDef_describe_contents_pars  \
  CORBA_Container_describe_contents_pars
#endif /* CORBA_ModuleDef_describe_contents */

#ifndef CORBA_ModuleDef__get_id
#define CORBA_ModuleDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ModuleDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_ModuleDef__get_id */

#ifndef CORBA_ModuleDef__get_name
#define CORBA_ModuleDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ModuleDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_ModuleDef__get_name */

#ifndef CORBA_ModuleDef__get_version
#define CORBA_ModuleDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ModuleDef__get_version_pars CORBA_Contained__get_version_pars
#endif /* CORBA_ModuleDef__get_version */

#ifndef CORBA_ModuleDef__get_defined_in
#define CORBA_ModuleDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ModuleDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_ModuleDef__get_defined_in */

#ifndef CORBA_ModuleDef__get_absolute_name
#define CORBA_ModuleDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ModuleDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_ModuleDef__get_absolute_name */

#ifndef CORBA_ModuleDef__get_containing_repository
#define CORBA_ModuleDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_ModuleDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_ModuleDef__get_containing_repository */

#ifndef CORBA_ModuleDef_describe
#define CORBA_ModuleDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ModuleDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_ModuleDef_describe */

#ifndef CORBA_ModuleDef__tyimpl_DEFINED
#define CORBA_ModuleDef__tyimpl_DEFINED
struct CORBA_ModuleDef__tyimpl
{
  CORBA_Contained (*lookup)( CORBA_ModuleDef, yoenv*, CORBA_ScopedName);
  CORBA_ContainedSeq (*contents)( CORBA_ModuleDef, yoenv*, 
    CORBA_DefinitionKind, boolean);
  CORBA_ContainedSeq (*lookup_name)( CORBA_ModuleDef, yoenv*, 
    CORBA_Identifier, sb4, CORBA_DefinitionKind, boolean);
  CORBA_Container_DescriptionSeq (*describe_contents)( CORBA_ModuleDef, 
    yoenv*, CORBA_DefinitionKind, boolean, sb4);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_ModuleDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_ModuleDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_ModuleDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_ModuleDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_ModuleDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_ModuleDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_ModuleDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_ModuleDef, yoenv*);
};
#endif /* CORBA_ModuleDef__tyimpl_DEFINED */

#ifndef CORBA_ModuleDescription_DECLARED
#define CORBA_ModuleDescription_DECLARED
typedef struct CORBA_ModuleDescription CORBA_ModuleDescription;
#endif /* CORBA_ModuleDescription_DECLARED */

#ifndef CORBA_ModuleDescription_DEFINED
#define CORBA_ModuleDescription_DEFINED
struct CORBA_ModuleDescription
{
  CORBA_Identifier name;
  CORBA_RepositoryId id;
  CORBA_Container defined_in;
  CORBA_VersionSpec version;
};
CONST yotk* CORBA_ModuleDescription__getTC(void);
#ifndef YCTC_CORBA_ModuleDescription
#define YCTC_CORBA_ModuleDescription   (CORBA_ModuleDescription__getTC())
#endif
#endif /* CORBA_ModuleDescription_DEFINED */

#ifndef CORBA_ModuleDescription_SUPP_FUNCS
#define CORBA_ModuleDescription_SUPP_FUNCS
void CORBA_ModuleDescription__free( CORBA_ModuleDescription* val, ysmff 
  ffunc);
void CORBA_ModuleDescription__copy( CORBA_ModuleDescription* dest, 
  CORBA_ModuleDescription* src, ysmaf afunc);
#endif /* CORBA_ModuleDescription_SUPP_FUNCS */


/* interface CORBA_ConstantDef declarations */
#ifndef CORBA_ConstantDef_DECLARED
#define CORBA_ConstantDef_DECLARED
typedef struct YCCORBA_ConstantDef* CORBA_ConstantDef;
CONST yotk* CORBA_ConstantDef__getTC(void);
#ifndef YCTC_CORBA_ConstantDef
#define YCTC_CORBA_ConstantDef   (CORBA_ConstantDef__getTC())
#endif
#endif /* CORBA_ConstantDef_DECLARED */

#ifndef CORBA_ConstantDef_SUPP_FUNCS
#define CORBA_ConstantDef_SUPP_FUNCS
void CORBA_ConstantDef__free( CORBA_ConstantDef* val, ysmff ffunc);
void CORBA_ConstantDef__copy( CORBA_ConstantDef* dest, CORBA_ConstantDef* 
  src, ysmaf afunc);
#endif /* CORBA_ConstantDef_SUPP_FUNCS */

#ifndef CORBA_ConstantDef_DEFINED
#define CORBA_ConstantDef_DEFINED
struct yostub* CORBA_ConstantDef__getStubs(void);
#define CORBA_ConstantDef__stubs (CORBA_ConstantDef__getStubs())
#endif /* CORBA_ConstantDef_DEFINED */

CONST ysid* CORBA_ConstantDef__getId(void);
#ifndef CORBA_ConstantDef__id
#define CORBA_ConstantDef__id   (CORBA_ConstantDef__getId())
#endif
#ifndef CORBA_CONSTANTDEF_EX_BADOBJ
#define CORBA_CONSTANTDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_CONSTANTDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_CONSTANTDEF_EX_BADOBJ
#define YCTC_CORBA_CONSTANTDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_CONSTANTDEF_EX_BADOBJ */

#ifndef CORBA_ConstantDef__get_def_kind
#define CORBA_ConstantDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_ConstantDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_ConstantDef__get_def_kind */

#ifndef CORBA_ConstantDef__get_id
#define CORBA_ConstantDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ConstantDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_ConstantDef__get_id */

#ifndef CORBA_ConstantDef__get_name
#define CORBA_ConstantDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ConstantDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_ConstantDef__get_name */

#ifndef CORBA_ConstantDef__get_version
#define CORBA_ConstantDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ConstantDef__get_version_pars  \
  CORBA_Contained__get_version_pars
#endif /* CORBA_ConstantDef__get_version */

#ifndef CORBA_ConstantDef__get_defined_in
#define CORBA_ConstantDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ConstantDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_ConstantDef__get_defined_in */

#ifndef CORBA_ConstantDef__get_absolute_name
#define CORBA_ConstantDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ConstantDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_ConstantDef__get_absolute_name */

#ifndef CORBA_ConstantDef__get_containing_repository
#define CORBA_ConstantDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_ConstantDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_ConstantDef__get_containing_repository */

#ifndef CORBA_ConstantDef_Description
#define CORBA_ConstantDef_Description CORBA_Contained_Description
#endif /* CORBA_ConstantDef_Description */

#ifndef YCTC_CORBA_ConstantDef_Description
#define YCTC_CORBA_ConstantDef_Description YCTC_CORBA_Contained_Description
#endif /* YCTC_CORBA_ConstantDef_Description */

#ifndef CORBA_ConstantDef_Description_SUPP_FUNCS
#define CORBA_ConstantDef_Description_SUPP_FUNCS
#define CORBA_ConstantDef_Description__free(val, ffunc)  \
  CORBA_Contained_Description__free((val),(ffunc))
#define CORBA_ConstantDef_Description__copy(dest, src, afunc)  \
  CORBA_Contained_Description__copy((dest),(src),(afunc))
#endif /* CORBA_ConstantDef_Description_SUPP_FUNCS */

#ifndef CORBA_ConstantDef_describe
#define CORBA_ConstantDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ConstantDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_ConstantDef_describe */

yotk* CORBA_ConstantDef__get_type( CORBA_ConstantDef or, yoenv* ev);
yopar* CORBA_ConstantDef__get_type__getPars(void);
#ifndef CORBA_ConstantDef__get_type_pars
#define CORBA_ConstantDef__get_type_pars ( \
  CORBA_ConstantDef__get_type__getPars())
#endif

CORBA_IDLType CORBA_ConstantDef__get_type_def( CORBA_ConstantDef or, yoenv* 
  ev);
yopar* CORBA_ConstantDef__get_type_def__getPars(void);
#ifndef CORBA_ConstantDef__get_type_def_pars
#define CORBA_ConstantDef__get_type_def_pars ( \
  CORBA_ConstantDef__get_type_def__getPars())
#endif

yoany CORBA_ConstantDef__get_value( CORBA_ConstantDef or, yoenv* ev);
yopar* CORBA_ConstantDef__get_value__getPars(void);
#ifndef CORBA_ConstantDef__get_value_pars
#define CORBA_ConstantDef__get_value_pars ( \
  CORBA_ConstantDef__get_value__getPars())
#endif

#ifndef CORBA_ConstantDef__tyimpl_DEFINED
#define CORBA_ConstantDef__tyimpl_DEFINED
struct CORBA_ConstantDef__tyimpl
{
  yotk* (*_get_type)( CORBA_ConstantDef, yoenv*);
  CORBA_IDLType (*_get_type_def)( CORBA_ConstantDef, yoenv*);
  yoany (*_get_value)( CORBA_ConstantDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_ConstantDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_ConstantDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_ConstantDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_ConstantDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_ConstantDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_ConstantDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_ConstantDef, yoenv*)
    ;
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_ConstantDef, yoenv*);
};
#endif /* CORBA_ConstantDef__tyimpl_DEFINED */

#ifndef CORBA_ConstantDescription_DECLARED
#define CORBA_ConstantDescription_DECLARED
typedef struct CORBA_ConstantDescription CORBA_ConstantDescription;
#endif /* CORBA_ConstantDescription_DECLARED */

#ifndef CORBA_ConstantDescription_DEFINED
#define CORBA_ConstantDescription_DEFINED
struct CORBA_ConstantDescription
{
  CORBA_Identifier name;
  CORBA_RepositoryId id;
  CORBA_Container defined_in;
  CORBA_VersionSpec version;
  yotk* type;
  yoany value;
};
CONST yotk* CORBA_ConstantDescription__getTC(void);
#ifndef YCTC_CORBA_ConstantDescription
#define YCTC_CORBA_ConstantDescription   (CORBA_ConstantDescription__getTC() \
  )
#endif
#endif /* CORBA_ConstantDescription_DEFINED */

#ifndef CORBA_ConstantDescription_SUPP_FUNCS
#define CORBA_ConstantDescription_SUPP_FUNCS
void CORBA_ConstantDescription__free( CORBA_ConstantDescription* val, ysmff 
  ffunc);
void CORBA_ConstantDescription__copy( CORBA_ConstantDescription* dest, 
  CORBA_ConstantDescription* src, ysmaf afunc);
#endif /* CORBA_ConstantDescription_SUPP_FUNCS */


/* interface CORBA_TypedefDef declarations */
#ifndef CORBA_TypedefDef_DECLARED
#define CORBA_TypedefDef_DECLARED
typedef struct YCCORBA_TypedefDef* CORBA_TypedefDef;
CONST yotk* CORBA_TypedefDef__getTC(void);
#ifndef YCTC_CORBA_TypedefDef
#define YCTC_CORBA_TypedefDef   (CORBA_TypedefDef__getTC())
#endif
#endif /* CORBA_TypedefDef_DECLARED */

#ifndef CORBA_TypedefDef_SUPP_FUNCS
#define CORBA_TypedefDef_SUPP_FUNCS
void CORBA_TypedefDef__free( CORBA_TypedefDef* val, ysmff ffunc);
void CORBA_TypedefDef__copy( CORBA_TypedefDef* dest, CORBA_TypedefDef* src, 
  ysmaf afunc);
#endif /* CORBA_TypedefDef_SUPP_FUNCS */

#ifndef CORBA_TypedefDef_DEFINED
#define CORBA_TypedefDef_DEFINED
struct yostub* CORBA_TypedefDef__getStubs(void);
#define CORBA_TypedefDef__stubs (CORBA_TypedefDef__getStubs())
#endif /* CORBA_TypedefDef_DEFINED */

CONST ysid* CORBA_TypedefDef__getId(void);
#ifndef CORBA_TypedefDef__id
#define CORBA_TypedefDef__id   (CORBA_TypedefDef__getId())
#endif
#ifndef CORBA_TYPEDEFDEF_EX_BADOBJ
#define CORBA_TYPEDEFDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_TYPEDEFDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_TYPEDEFDEF_EX_BADOBJ
#define YCTC_CORBA_TYPEDEFDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_TYPEDEFDEF_EX_BADOBJ */

#ifndef CORBA_TypedefDef__get_def_kind
#define CORBA_TypedefDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_TypedefDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_TypedefDef__get_def_kind */

#ifndef CORBA_TypedefDef__get_id
#define CORBA_TypedefDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_TypedefDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_TypedefDef__get_id */

#ifndef CORBA_TypedefDef__get_name
#define CORBA_TypedefDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_TypedefDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_TypedefDef__get_name */

#ifndef CORBA_TypedefDef__get_version
#define CORBA_TypedefDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_TypedefDef__get_version_pars  \
  CORBA_Contained__get_version_pars
#endif /* CORBA_TypedefDef__get_version */

#ifndef CORBA_TypedefDef__get_defined_in
#define CORBA_TypedefDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_TypedefDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_TypedefDef__get_defined_in */

#ifndef CORBA_TypedefDef__get_absolute_name
#define CORBA_TypedefDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_TypedefDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_TypedefDef__get_absolute_name */

#ifndef CORBA_TypedefDef__get_containing_repository
#define CORBA_TypedefDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_TypedefDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_TypedefDef__get_containing_repository */

#ifndef CORBA_TypedefDef_Description
#define CORBA_TypedefDef_Description CORBA_Contained_Description
#endif /* CORBA_TypedefDef_Description */

#ifndef YCTC_CORBA_TypedefDef_Description
#define YCTC_CORBA_TypedefDef_Description YCTC_CORBA_Contained_Description
#endif /* YCTC_CORBA_TypedefDef_Description */

#ifndef CORBA_TypedefDef_Description_SUPP_FUNCS
#define CORBA_TypedefDef_Description_SUPP_FUNCS
#define CORBA_TypedefDef_Description__free(val, ffunc)  \
  CORBA_Contained_Description__free((val),(ffunc))
#define CORBA_TypedefDef_Description__copy(dest, src, afunc)  \
  CORBA_Contained_Description__copy((dest),(src),(afunc))
#endif /* CORBA_TypedefDef_Description_SUPP_FUNCS */

#ifndef CORBA_TypedefDef_describe
#define CORBA_TypedefDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_TypedefDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_TypedefDef_describe */

#ifndef CORBA_TypedefDef__get_type
#define CORBA_TypedefDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_TypedefDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_TypedefDef__get_type */

#ifndef CORBA_TypedefDef__tyimpl_DEFINED
#define CORBA_TypedefDef__tyimpl_DEFINED
struct CORBA_TypedefDef__tyimpl
{
  CORBA_Contained_Description (*describe)( CORBA_TypedefDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_TypedefDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_TypedefDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_TypedefDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_TypedefDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_TypedefDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_TypedefDef, yoenv*);
    
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_TypedefDef, yoenv*);
  yotk* (*_get_type)( CORBA_TypedefDef, yoenv*);
};
#endif /* CORBA_TypedefDef__tyimpl_DEFINED */

#ifndef CORBA_TypeDescription_DECLARED
#define CORBA_TypeDescription_DECLARED
typedef struct CORBA_TypeDescription CORBA_TypeDescription;
#endif /* CORBA_TypeDescription_DECLARED */

#ifndef CORBA_TypeDescription_DEFINED
#define CORBA_TypeDescription_DEFINED
struct CORBA_TypeDescription
{
  CORBA_Identifier name;
  CORBA_RepositoryId id;
  CORBA_Container defined_in;
  CORBA_VersionSpec version;
  yotk* type;
};
CONST yotk* CORBA_TypeDescription__getTC(void);
#ifndef YCTC_CORBA_TypeDescription
#define YCTC_CORBA_TypeDescription   (CORBA_TypeDescription__getTC())
#endif
#endif /* CORBA_TypeDescription_DEFINED */

#ifndef CORBA_TypeDescription_SUPP_FUNCS
#define CORBA_TypeDescription_SUPP_FUNCS
void CORBA_TypeDescription__free( CORBA_TypeDescription* val, ysmff ffunc);
void CORBA_TypeDescription__copy( CORBA_TypeDescription* dest, 
  CORBA_TypeDescription* src, ysmaf afunc);
#endif /* CORBA_TypeDescription_SUPP_FUNCS */


/* interface CORBA_StructDef declarations */
#ifndef CORBA_StructDef_DECLARED
#define CORBA_StructDef_DECLARED
typedef struct YCCORBA_StructDef* CORBA_StructDef;
CONST yotk* CORBA_StructDef__getTC(void);
#ifndef YCTC_CORBA_StructDef
#define YCTC_CORBA_StructDef   (CORBA_StructDef__getTC())
#endif
#endif /* CORBA_StructDef_DECLARED */

#ifndef CORBA_StructDef_SUPP_FUNCS
#define CORBA_StructDef_SUPP_FUNCS
void CORBA_StructDef__free( CORBA_StructDef* val, ysmff ffunc);
void CORBA_StructDef__copy( CORBA_StructDef* dest, CORBA_StructDef* src, 
  ysmaf afunc);
#endif /* CORBA_StructDef_SUPP_FUNCS */

#ifndef CORBA_StructDef_DEFINED
#define CORBA_StructDef_DEFINED
struct yostub* CORBA_StructDef__getStubs(void);
#define CORBA_StructDef__stubs (CORBA_StructDef__getStubs())
#endif /* CORBA_StructDef_DEFINED */

CONST ysid* CORBA_StructDef__getId(void);
#ifndef CORBA_StructDef__id
#define CORBA_StructDef__id   (CORBA_StructDef__getId())
#endif
#ifndef CORBA_STRUCTDEF_EX_BADOBJ
#define CORBA_STRUCTDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_STRUCTDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_STRUCTDEF_EX_BADOBJ
#define YCTC_CORBA_STRUCTDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_STRUCTDEF_EX_BADOBJ */

#ifndef CORBA_StructDef__get_def_kind
#define CORBA_StructDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_StructDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_StructDef__get_def_kind */

#ifndef CORBA_StructDef__get_id
#define CORBA_StructDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_StructDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_StructDef__get_id */

#ifndef CORBA_StructDef__get_name
#define CORBA_StructDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_StructDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_StructDef__get_name */

#ifndef CORBA_StructDef__get_version
#define CORBA_StructDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_StructDef__get_version_pars CORBA_Contained__get_version_pars
#endif /* CORBA_StructDef__get_version */

#ifndef CORBA_StructDef__get_defined_in
#define CORBA_StructDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_StructDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_StructDef__get_defined_in */

#ifndef CORBA_StructDef__get_absolute_name
#define CORBA_StructDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_StructDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_StructDef__get_absolute_name */

#ifndef CORBA_StructDef__get_containing_repository
#define CORBA_StructDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_StructDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_StructDef__get_containing_repository */

#ifndef CORBA_StructDef_describe
#define CORBA_StructDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_StructDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_StructDef_describe */

#ifndef CORBA_StructDef__get_type
#define CORBA_StructDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_StructDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_StructDef__get_type */

#ifndef CORBA_StructDef_lookup
#define CORBA_StructDef_lookup(or, ev, search_name) \
    CORBA_Container_lookup((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name))
#define CORBA_StructDef_lookup_pars CORBA_Container_lookup_pars
#endif /* CORBA_StructDef_lookup */

#ifndef CORBA_StructDef_contents
#define CORBA_StructDef_contents(or, ev, limit_type, exclude_inherited) \
    CORBA_Container_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited))
#define CORBA_StructDef_contents_pars CORBA_Container_contents_pars
#endif /* CORBA_StructDef_contents */

#ifndef CORBA_StructDef_lookup_name
#define CORBA_StructDef_lookup_name(or, ev, search_name, levels_to_search,  \
  limit_type, exclude_inherited) \
    CORBA_Container_lookup_name((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name), (levels_to_search), (limit_type), (exclude_inherited))
#define CORBA_StructDef_lookup_name_pars CORBA_Container_lookup_name_pars
#endif /* CORBA_StructDef_lookup_name */

#ifndef CORBA_StructDef_DescriptionSeq
#define CORBA_StructDef_DescriptionSeq CORBA_Container_DescriptionSeq
#endif /* CORBA_StructDef_DescriptionSeq */

#ifndef CORBA_StructDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_StructDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_StructDef_DescriptionSeq__free(val, ffunc)  \
  CORBA_Container_DescriptionSeq__free((val),(ffunc))
#define CORBA_StructDef_DescriptionSeq__copy(dest, src, afunc)  \
  CORBA_Container_DescriptionSeq__copy((dest),(src),(afunc))
#endif /* CORBA_StructDef_DescriptionSeq_SUPP_FUNCS */

#ifndef YCTC_CORBA_StructDef_DescriptionSeq
#define YCTC_CORBA_StructDef_DescriptionSeq  \
  YCTC_CORBA_Container_DescriptionSeq
#endif /* YCTC_CORBA_StructDef_DescriptionSeq */

#ifndef CORBA_StructDef_describe_contents
#define CORBA_StructDef_describe_contents(or, ev, limit_type,  \
  exclude_inherited, max_returned_objs) \
    CORBA_Container_describe_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited), (max_returned_objs))
#define CORBA_StructDef_describe_contents_pars  \
  CORBA_Container_describe_contents_pars
#endif /* CORBA_StructDef_describe_contents */

CORBA_StructMemberSeq CORBA_StructDef__get_members( CORBA_StructDef or, 
  yoenv* ev);
yopar* CORBA_StructDef__get_members__getPars(void);
#ifndef CORBA_StructDef__get_members_pars
#define CORBA_StructDef__get_members_pars ( \
  CORBA_StructDef__get_members__getPars())
#endif

#ifndef CORBA_StructDef__tyimpl_DEFINED
#define CORBA_StructDef__tyimpl_DEFINED
struct CORBA_StructDef__tyimpl
{
  CORBA_StructMemberSeq (*_get_members)( CORBA_StructDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_StructDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_StructDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_StructDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_StructDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_StructDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_StructDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_StructDef, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_StructDef, yoenv*);
  yotk* (*_get_type)( CORBA_StructDef, yoenv*);
  CORBA_Contained (*lookup)( CORBA_StructDef, yoenv*, CORBA_ScopedName);
  CORBA_ContainedSeq (*contents)( CORBA_StructDef, yoenv*, 
    CORBA_DefinitionKind, boolean);
  CORBA_ContainedSeq (*lookup_name)( CORBA_StructDef, yoenv*, 
    CORBA_Identifier, sb4, CORBA_DefinitionKind, boolean);
  CORBA_Container_DescriptionSeq (*describe_contents)( CORBA_StructDef, 
    yoenv*, CORBA_DefinitionKind, boolean, sb4);
};
#endif /* CORBA_StructDef__tyimpl_DEFINED */


/* interface CORBA_UnionDef declarations */
#ifndef CORBA_UnionDef_DECLARED
#define CORBA_UnionDef_DECLARED
typedef struct YCCORBA_UnionDef* CORBA_UnionDef;
CONST yotk* CORBA_UnionDef__getTC(void);
#ifndef YCTC_CORBA_UnionDef
#define YCTC_CORBA_UnionDef   (CORBA_UnionDef__getTC())
#endif
#endif /* CORBA_UnionDef_DECLARED */

#ifndef CORBA_UnionDef_SUPP_FUNCS
#define CORBA_UnionDef_SUPP_FUNCS
void CORBA_UnionDef__free( CORBA_UnionDef* val, ysmff ffunc);
void CORBA_UnionDef__copy( CORBA_UnionDef* dest, CORBA_UnionDef* src, ysmaf 
  afunc);
#endif /* CORBA_UnionDef_SUPP_FUNCS */

#ifndef CORBA_UnionDef_DEFINED
#define CORBA_UnionDef_DEFINED
struct yostub* CORBA_UnionDef__getStubs(void);
#define CORBA_UnionDef__stubs (CORBA_UnionDef__getStubs())
#endif /* CORBA_UnionDef_DEFINED */

CONST ysid* CORBA_UnionDef__getId(void);
#ifndef CORBA_UnionDef__id
#define CORBA_UnionDef__id   (CORBA_UnionDef__getId())
#endif
#ifndef CORBA_UNIONDEF_EX_BADOBJ
#define CORBA_UNIONDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_UNIONDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_UNIONDEF_EX_BADOBJ
#define YCTC_CORBA_UNIONDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_UNIONDEF_EX_BADOBJ */

#ifndef CORBA_UnionDef__get_def_kind
#define CORBA_UnionDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_UnionDef__get_def_kind_pars CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_UnionDef__get_def_kind */

#ifndef CORBA_UnionDef__get_id
#define CORBA_UnionDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_UnionDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_UnionDef__get_id */

#ifndef CORBA_UnionDef__get_name
#define CORBA_UnionDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_UnionDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_UnionDef__get_name */

#ifndef CORBA_UnionDef__get_version
#define CORBA_UnionDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_UnionDef__get_version_pars CORBA_Contained__get_version_pars
#endif /* CORBA_UnionDef__get_version */

#ifndef CORBA_UnionDef__get_defined_in
#define CORBA_UnionDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_UnionDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_UnionDef__get_defined_in */

#ifndef CORBA_UnionDef__get_absolute_name
#define CORBA_UnionDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_UnionDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_UnionDef__get_absolute_name */

#ifndef CORBA_UnionDef__get_containing_repository
#define CORBA_UnionDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_UnionDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_UnionDef__get_containing_repository */

#ifndef CORBA_UnionDef_describe
#define CORBA_UnionDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_UnionDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_UnionDef_describe */

#ifndef CORBA_UnionDef__get_type
#define CORBA_UnionDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_UnionDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_UnionDef__get_type */

#ifndef CORBA_UnionDef_lookup
#define CORBA_UnionDef_lookup(or, ev, search_name) \
    CORBA_Container_lookup((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name))
#define CORBA_UnionDef_lookup_pars CORBA_Container_lookup_pars
#endif /* CORBA_UnionDef_lookup */

#ifndef CORBA_UnionDef_contents
#define CORBA_UnionDef_contents(or, ev, limit_type, exclude_inherited) \
    CORBA_Container_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited))
#define CORBA_UnionDef_contents_pars CORBA_Container_contents_pars
#endif /* CORBA_UnionDef_contents */

#ifndef CORBA_UnionDef_lookup_name
#define CORBA_UnionDef_lookup_name(or, ev, search_name, levels_to_search,  \
  limit_type, exclude_inherited) \
    CORBA_Container_lookup_name((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name), (levels_to_search), (limit_type), (exclude_inherited))
#define CORBA_UnionDef_lookup_name_pars CORBA_Container_lookup_name_pars
#endif /* CORBA_UnionDef_lookup_name */

#ifndef CORBA_UnionDef_DescriptionSeq
#define CORBA_UnionDef_DescriptionSeq CORBA_Container_DescriptionSeq
#endif /* CORBA_UnionDef_DescriptionSeq */

#ifndef CORBA_UnionDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_UnionDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_UnionDef_DescriptionSeq__free(val, ffunc)  \
  CORBA_Container_DescriptionSeq__free((val),(ffunc))
#define CORBA_UnionDef_DescriptionSeq__copy(dest, src, afunc)  \
  CORBA_Container_DescriptionSeq__copy((dest),(src),(afunc))
#endif /* CORBA_UnionDef_DescriptionSeq_SUPP_FUNCS */

#ifndef YCTC_CORBA_UnionDef_DescriptionSeq
#define YCTC_CORBA_UnionDef_DescriptionSeq  \
  YCTC_CORBA_Container_DescriptionSeq
#endif /* YCTC_CORBA_UnionDef_DescriptionSeq */

#ifndef CORBA_UnionDef_describe_contents
#define CORBA_UnionDef_describe_contents(or, ev, limit_type,  \
  exclude_inherited, max_returned_objs) \
    CORBA_Container_describe_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited), (max_returned_objs))
#define CORBA_UnionDef_describe_contents_pars  \
  CORBA_Container_describe_contents_pars
#endif /* CORBA_UnionDef_describe_contents */

yotk* CORBA_UnionDef__get_discriminator_type( CORBA_UnionDef or, yoenv* ev);
  
yopar* CORBA_UnionDef__get_discriminator_type__getPars(void);
#ifndef CORBA_UnionDef__get_discriminator_type_pars
#define CORBA_UnionDef__get_discriminator_type_pars ( \
  CORBA_UnionDef__get_discriminator_type__getPars())
#endif

CORBA_IDLType CORBA_UnionDef__get_discriminator_type_def( CORBA_UnionDef or,
   yoenv* ev);
yopar* CORBA_UnionDef__get_discriminator_type_def__getPars(void);
#ifndef CORBA_UnionDef__get_discriminator_type_def_pars
#define CORBA_UnionDef__get_discriminator_type_def_pars ( \
  CORBA_UnionDef__get_discriminator_type_def__getPars())
#endif

CORBA_UnionMemberSeq CORBA_UnionDef__get_members( CORBA_UnionDef or, yoenv* 
  ev);
yopar* CORBA_UnionDef__get_members__getPars(void);
#ifndef CORBA_UnionDef__get_members_pars
#define CORBA_UnionDef__get_members_pars ( \
  CORBA_UnionDef__get_members__getPars())
#endif

#ifndef CORBA_UnionDef__tyimpl_DEFINED
#define CORBA_UnionDef__tyimpl_DEFINED
struct CORBA_UnionDef__tyimpl
{
  yotk* (*_get_discriminator_type)( CORBA_UnionDef, yoenv*);
  CORBA_IDLType (*_get_discriminator_type_def)( CORBA_UnionDef, yoenv*);
  CORBA_UnionMemberSeq (*_get_members)( CORBA_UnionDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_UnionDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_UnionDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_UnionDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_UnionDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_UnionDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_UnionDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_UnionDef, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_UnionDef, yoenv*);
  yotk* (*_get_type)( CORBA_UnionDef, yoenv*);
  CORBA_Contained (*lookup)( CORBA_UnionDef, yoenv*, CORBA_ScopedName);
  CORBA_ContainedSeq (*contents)( CORBA_UnionDef, yoenv*, 
    CORBA_DefinitionKind, boolean);
  CORBA_ContainedSeq (*lookup_name)( CORBA_UnionDef, yoenv*, 
    CORBA_Identifier, sb4, CORBA_DefinitionKind, boolean);
  CORBA_Container_DescriptionSeq (*describe_contents)( CORBA_UnionDef, 
    yoenv*, CORBA_DefinitionKind, boolean, sb4);
};
#endif /* CORBA_UnionDef__tyimpl_DEFINED */


/* interface CORBA_EnumDef declarations */
#ifndef CORBA_EnumDef_DECLARED
#define CORBA_EnumDef_DECLARED
typedef struct YCCORBA_EnumDef* CORBA_EnumDef;
CONST yotk* CORBA_EnumDef__getTC(void);
#ifndef YCTC_CORBA_EnumDef
#define YCTC_CORBA_EnumDef   (CORBA_EnumDef__getTC())
#endif
#endif /* CORBA_EnumDef_DECLARED */

#ifndef CORBA_EnumDef_SUPP_FUNCS
#define CORBA_EnumDef_SUPP_FUNCS
void CORBA_EnumDef__free( CORBA_EnumDef* val, ysmff ffunc);
void CORBA_EnumDef__copy( CORBA_EnumDef* dest, CORBA_EnumDef* src, ysmaf 
  afunc);
#endif /* CORBA_EnumDef_SUPP_FUNCS */

#ifndef CORBA_EnumDef_DEFINED
#define CORBA_EnumDef_DEFINED
struct yostub* CORBA_EnumDef__getStubs(void);
#define CORBA_EnumDef__stubs (CORBA_EnumDef__getStubs())
#endif /* CORBA_EnumDef_DEFINED */

CONST ysid* CORBA_EnumDef__getId(void);
#ifndef CORBA_EnumDef__id
#define CORBA_EnumDef__id   (CORBA_EnumDef__getId())
#endif
#ifndef CORBA_ENUMDEF_EX_BADOBJ
#define CORBA_ENUMDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_ENUMDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_ENUMDEF_EX_BADOBJ
#define YCTC_CORBA_ENUMDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_ENUMDEF_EX_BADOBJ */

#ifndef CORBA_EnumDef__get_def_kind
#define CORBA_EnumDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_EnumDef__get_def_kind_pars CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_EnumDef__get_def_kind */

#ifndef CORBA_EnumDef__get_id
#define CORBA_EnumDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_EnumDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_EnumDef__get_id */

#ifndef CORBA_EnumDef__get_name
#define CORBA_EnumDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_EnumDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_EnumDef__get_name */

#ifndef CORBA_EnumDef__get_version
#define CORBA_EnumDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_EnumDef__get_version_pars CORBA_Contained__get_version_pars
#endif /* CORBA_EnumDef__get_version */

#ifndef CORBA_EnumDef__get_defined_in
#define CORBA_EnumDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_EnumDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_EnumDef__get_defined_in */

#ifndef CORBA_EnumDef__get_absolute_name
#define CORBA_EnumDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_EnumDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_EnumDef__get_absolute_name */

#ifndef CORBA_EnumDef__get_containing_repository
#define CORBA_EnumDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_EnumDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_EnumDef__get_containing_repository */

#ifndef CORBA_EnumDef_Description
#define CORBA_EnumDef_Description CORBA_Contained_Description
#endif /* CORBA_EnumDef_Description */

#ifndef YCTC_CORBA_EnumDef_Description
#define YCTC_CORBA_EnumDef_Description YCTC_CORBA_Contained_Description
#endif /* YCTC_CORBA_EnumDef_Description */

#ifndef CORBA_EnumDef_Description_SUPP_FUNCS
#define CORBA_EnumDef_Description_SUPP_FUNCS
#define CORBA_EnumDef_Description__free(val, ffunc)  \
  CORBA_Contained_Description__free((val),(ffunc))
#define CORBA_EnumDef_Description__copy(dest, src, afunc)  \
  CORBA_Contained_Description__copy((dest),(src),(afunc))
#endif /* CORBA_EnumDef_Description_SUPP_FUNCS */

#ifndef CORBA_EnumDef_describe
#define CORBA_EnumDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_EnumDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_EnumDef_describe */

#ifndef CORBA_EnumDef__get_type
#define CORBA_EnumDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_EnumDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_EnumDef__get_type */

CORBA_EnumMemberSeq CORBA_EnumDef__get_members( CORBA_EnumDef or, yoenv* ev)
  ;
yopar* CORBA_EnumDef__get_members__getPars(void);
#ifndef CORBA_EnumDef__get_members_pars
#define CORBA_EnumDef__get_members_pars ( \
  CORBA_EnumDef__get_members__getPars())
#endif

#ifndef CORBA_EnumDef__tyimpl_DEFINED
#define CORBA_EnumDef__tyimpl_DEFINED
struct CORBA_EnumDef__tyimpl
{
  CORBA_EnumMemberSeq (*_get_members)( CORBA_EnumDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_EnumDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_EnumDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_EnumDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_EnumDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_EnumDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_EnumDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_EnumDef, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_EnumDef, yoenv*);
  yotk* (*_get_type)( CORBA_EnumDef, yoenv*);
};
#endif /* CORBA_EnumDef__tyimpl_DEFINED */


/* interface CORBA_AliasDef declarations */
#ifndef CORBA_AliasDef_DECLARED
#define CORBA_AliasDef_DECLARED
typedef struct YCCORBA_AliasDef* CORBA_AliasDef;
CONST yotk* CORBA_AliasDef__getTC(void);
#ifndef YCTC_CORBA_AliasDef
#define YCTC_CORBA_AliasDef   (CORBA_AliasDef__getTC())
#endif
#endif /* CORBA_AliasDef_DECLARED */

#ifndef CORBA_AliasDef_SUPP_FUNCS
#define CORBA_AliasDef_SUPP_FUNCS
void CORBA_AliasDef__free( CORBA_AliasDef* val, ysmff ffunc);
void CORBA_AliasDef__copy( CORBA_AliasDef* dest, CORBA_AliasDef* src, ysmaf 
  afunc);
#endif /* CORBA_AliasDef_SUPP_FUNCS */

#ifndef CORBA_AliasDef_DEFINED
#define CORBA_AliasDef_DEFINED
struct yostub* CORBA_AliasDef__getStubs(void);
#define CORBA_AliasDef__stubs (CORBA_AliasDef__getStubs())
#endif /* CORBA_AliasDef_DEFINED */

CONST ysid* CORBA_AliasDef__getId(void);
#ifndef CORBA_AliasDef__id
#define CORBA_AliasDef__id   (CORBA_AliasDef__getId())
#endif
#ifndef CORBA_ALIASDEF_EX_BADOBJ
#define CORBA_ALIASDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_ALIASDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_ALIASDEF_EX_BADOBJ
#define YCTC_CORBA_ALIASDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_ALIASDEF_EX_BADOBJ */

#ifndef CORBA_AliasDef__get_def_kind
#define CORBA_AliasDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_AliasDef__get_def_kind_pars CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_AliasDef__get_def_kind */

#ifndef CORBA_AliasDef__get_id
#define CORBA_AliasDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AliasDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_AliasDef__get_id */

#ifndef CORBA_AliasDef__get_name
#define CORBA_AliasDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AliasDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_AliasDef__get_name */

#ifndef CORBA_AliasDef__get_version
#define CORBA_AliasDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AliasDef__get_version_pars CORBA_Contained__get_version_pars
#endif /* CORBA_AliasDef__get_version */

#ifndef CORBA_AliasDef__get_defined_in
#define CORBA_AliasDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AliasDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_AliasDef__get_defined_in */

#ifndef CORBA_AliasDef__get_absolute_name
#define CORBA_AliasDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AliasDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_AliasDef__get_absolute_name */

#ifndef CORBA_AliasDef__get_containing_repository
#define CORBA_AliasDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_AliasDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_AliasDef__get_containing_repository */

#ifndef CORBA_AliasDef_Description
#define CORBA_AliasDef_Description CORBA_Contained_Description
#endif /* CORBA_AliasDef_Description */

#ifndef YCTC_CORBA_AliasDef_Description
#define YCTC_CORBA_AliasDef_Description YCTC_CORBA_Contained_Description
#endif /* YCTC_CORBA_AliasDef_Description */

#ifndef CORBA_AliasDef_Description_SUPP_FUNCS
#define CORBA_AliasDef_Description_SUPP_FUNCS
#define CORBA_AliasDef_Description__free(val, ffunc)  \
  CORBA_Contained_Description__free((val),(ffunc))
#define CORBA_AliasDef_Description__copy(dest, src, afunc)  \
  CORBA_Contained_Description__copy((dest),(src),(afunc))
#endif /* CORBA_AliasDef_Description_SUPP_FUNCS */

#ifndef CORBA_AliasDef_describe
#define CORBA_AliasDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AliasDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_AliasDef_describe */

#ifndef CORBA_AliasDef__get_type
#define CORBA_AliasDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_AliasDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_AliasDef__get_type */

CORBA_IDLType CORBA_AliasDef__get_original_type_def( CORBA_AliasDef or, 
  yoenv* ev);
yopar* CORBA_AliasDef__get_original_type_def__getPars(void);
#ifndef CORBA_AliasDef__get_original_type_def_pars
#define CORBA_AliasDef__get_original_type_def_pars ( \
  CORBA_AliasDef__get_original_type_def__getPars())
#endif

#ifndef CORBA_AliasDef__tyimpl_DEFINED
#define CORBA_AliasDef__tyimpl_DEFINED
struct CORBA_AliasDef__tyimpl
{
  CORBA_IDLType (*_get_original_type_def)( CORBA_AliasDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_AliasDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_AliasDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_AliasDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_AliasDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_AliasDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_AliasDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_AliasDef, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_AliasDef, yoenv*);
  yotk* (*_get_type)( CORBA_AliasDef, yoenv*);
};
#endif /* CORBA_AliasDef__tyimpl_DEFINED */


/* interface CORBA_StringDef declarations */
#ifndef CORBA_StringDef_DECLARED
#define CORBA_StringDef_DECLARED
typedef struct YCCORBA_StringDef* CORBA_StringDef;
CONST yotk* CORBA_StringDef__getTC(void);
#ifndef YCTC_CORBA_StringDef
#define YCTC_CORBA_StringDef   (CORBA_StringDef__getTC())
#endif
#endif /* CORBA_StringDef_DECLARED */

#ifndef CORBA_StringDef_SUPP_FUNCS
#define CORBA_StringDef_SUPP_FUNCS
void CORBA_StringDef__free( CORBA_StringDef* val, ysmff ffunc);
void CORBA_StringDef__copy( CORBA_StringDef* dest, CORBA_StringDef* src, 
  ysmaf afunc);
#endif /* CORBA_StringDef_SUPP_FUNCS */

#ifndef CORBA_StringDef_DEFINED
#define CORBA_StringDef_DEFINED
struct yostub* CORBA_StringDef__getStubs(void);
#define CORBA_StringDef__stubs (CORBA_StringDef__getStubs())
#endif /* CORBA_StringDef_DEFINED */

CONST ysid* CORBA_StringDef__getId(void);
#ifndef CORBA_StringDef__id
#define CORBA_StringDef__id   (CORBA_StringDef__getId())
#endif
#ifndef CORBA_STRINGDEF_EX_BADOBJ
#define CORBA_STRINGDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_STRINGDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_STRINGDEF_EX_BADOBJ
#define YCTC_CORBA_STRINGDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_STRINGDEF_EX_BADOBJ */

#ifndef CORBA_StringDef__get_def_kind
#define CORBA_StringDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_StringDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_StringDef__get_def_kind */

#ifndef CORBA_StringDef__get_type
#define CORBA_StringDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_StringDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_StringDef__get_type */

ub4 CORBA_StringDef__get_bound( CORBA_StringDef or, yoenv* ev);
yopar* CORBA_StringDef__get_bound__getPars(void);
#ifndef CORBA_StringDef__get_bound_pars
#define CORBA_StringDef__get_bound_pars ( \
  CORBA_StringDef__get_bound__getPars())
#endif

#ifndef CORBA_StringDef__tyimpl_DEFINED
#define CORBA_StringDef__tyimpl_DEFINED
struct CORBA_StringDef__tyimpl
{
  ub4 (*_get_bound)( CORBA_StringDef, yoenv*);
  yotk* (*_get_type)( CORBA_StringDef, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_StringDef, yoenv*);
};
#endif /* CORBA_StringDef__tyimpl_DEFINED */


/* interface CORBA_SequenceDef declarations */
#ifndef CORBA_SequenceDef_DECLARED
#define CORBA_SequenceDef_DECLARED
typedef struct YCCORBA_SequenceDef* CORBA_SequenceDef;
CONST yotk* CORBA_SequenceDef__getTC(void);
#ifndef YCTC_CORBA_SequenceDef
#define YCTC_CORBA_SequenceDef   (CORBA_SequenceDef__getTC())
#endif
#endif /* CORBA_SequenceDef_DECLARED */

#ifndef CORBA_SequenceDef_SUPP_FUNCS
#define CORBA_SequenceDef_SUPP_FUNCS
void CORBA_SequenceDef__free( CORBA_SequenceDef* val, ysmff ffunc);
void CORBA_SequenceDef__copy( CORBA_SequenceDef* dest, CORBA_SequenceDef* 
  src, ysmaf afunc);
#endif /* CORBA_SequenceDef_SUPP_FUNCS */

#ifndef CORBA_SequenceDef_DEFINED
#define CORBA_SequenceDef_DEFINED
struct yostub* CORBA_SequenceDef__getStubs(void);
#define CORBA_SequenceDef__stubs (CORBA_SequenceDef__getStubs())
#endif /* CORBA_SequenceDef_DEFINED */

CONST ysid* CORBA_SequenceDef__getId(void);
#ifndef CORBA_SequenceDef__id
#define CORBA_SequenceDef__id   (CORBA_SequenceDef__getId())
#endif
#ifndef CORBA_SEQUENCEDEF_EX_BADOBJ
#define CORBA_SEQUENCEDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_SEQUENCEDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_SEQUENCEDEF_EX_BADOBJ
#define YCTC_CORBA_SEQUENCEDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_SEQUENCEDEF_EX_BADOBJ */

#ifndef CORBA_SequenceDef__get_def_kind
#define CORBA_SequenceDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_SequenceDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_SequenceDef__get_def_kind */

#ifndef CORBA_SequenceDef__get_type
#define CORBA_SequenceDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_SequenceDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_SequenceDef__get_type */

ub4 CORBA_SequenceDef__get_bound( CORBA_SequenceDef or, yoenv* ev);
yopar* CORBA_SequenceDef__get_bound__getPars(void);
#ifndef CORBA_SequenceDef__get_bound_pars
#define CORBA_SequenceDef__get_bound_pars ( \
  CORBA_SequenceDef__get_bound__getPars())
#endif

yotk* CORBA_SequenceDef__get_element_type( CORBA_SequenceDef or, yoenv* ev);
  
yopar* CORBA_SequenceDef__get_element_type__getPars(void);
#ifndef CORBA_SequenceDef__get_element_type_pars
#define CORBA_SequenceDef__get_element_type_pars ( \
  CORBA_SequenceDef__get_element_type__getPars())
#endif

CORBA_IDLType CORBA_SequenceDef__get_element_type_def( CORBA_SequenceDef or,
   yoenv* ev);
yopar* CORBA_SequenceDef__get_element_type_def__getPars(void);
#ifndef CORBA_SequenceDef__get_element_type_def_pars
#define CORBA_SequenceDef__get_element_type_def_pars ( \
  CORBA_SequenceDef__get_element_type_def__getPars())
#endif

#ifndef CORBA_SequenceDef__tyimpl_DEFINED
#define CORBA_SequenceDef__tyimpl_DEFINED
struct CORBA_SequenceDef__tyimpl
{
  ub4 (*_get_bound)( CORBA_SequenceDef, yoenv*);
  yotk* (*_get_element_type)( CORBA_SequenceDef, yoenv*);
  CORBA_IDLType (*_get_element_type_def)( CORBA_SequenceDef, yoenv*);
  yotk* (*_get_type)( CORBA_SequenceDef, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_SequenceDef, yoenv*);
};
#endif /* CORBA_SequenceDef__tyimpl_DEFINED */


/* interface CORBA_ArrayDef declarations */
#ifndef CORBA_ArrayDef_DECLARED
#define CORBA_ArrayDef_DECLARED
typedef struct YCCORBA_ArrayDef* CORBA_ArrayDef;
CONST yotk* CORBA_ArrayDef__getTC(void);
#ifndef YCTC_CORBA_ArrayDef
#define YCTC_CORBA_ArrayDef   (CORBA_ArrayDef__getTC())
#endif
#endif /* CORBA_ArrayDef_DECLARED */

#ifndef CORBA_ArrayDef_SUPP_FUNCS
#define CORBA_ArrayDef_SUPP_FUNCS
void CORBA_ArrayDef__free( CORBA_ArrayDef* val, ysmff ffunc);
void CORBA_ArrayDef__copy( CORBA_ArrayDef* dest, CORBA_ArrayDef* src, ysmaf 
  afunc);
#endif /* CORBA_ArrayDef_SUPP_FUNCS */

#ifndef CORBA_ArrayDef_DEFINED
#define CORBA_ArrayDef_DEFINED
struct yostub* CORBA_ArrayDef__getStubs(void);
#define CORBA_ArrayDef__stubs (CORBA_ArrayDef__getStubs())
#endif /* CORBA_ArrayDef_DEFINED */

CONST ysid* CORBA_ArrayDef__getId(void);
#ifndef CORBA_ArrayDef__id
#define CORBA_ArrayDef__id   (CORBA_ArrayDef__getId())
#endif
#ifndef CORBA_ARRAYDEF_EX_BADOBJ
#define CORBA_ARRAYDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_ARRAYDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_ARRAYDEF_EX_BADOBJ
#define YCTC_CORBA_ARRAYDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_ARRAYDEF_EX_BADOBJ */

#ifndef CORBA_ArrayDef__get_def_kind
#define CORBA_ArrayDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_ArrayDef__get_def_kind_pars CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_ArrayDef__get_def_kind */

#ifndef CORBA_ArrayDef__get_type
#define CORBA_ArrayDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_ArrayDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_ArrayDef__get_type */

ub4 CORBA_ArrayDef__get_length( CORBA_ArrayDef or, yoenv* ev);
yopar* CORBA_ArrayDef__get_length__getPars(void);
#ifndef CORBA_ArrayDef__get_length_pars
#define CORBA_ArrayDef__get_length_pars ( \
  CORBA_ArrayDef__get_length__getPars())
#endif

yotk* CORBA_ArrayDef__get_element_type( CORBA_ArrayDef or, yoenv* ev);
yopar* CORBA_ArrayDef__get_element_type__getPars(void);
#ifndef CORBA_ArrayDef__get_element_type_pars
#define CORBA_ArrayDef__get_element_type_pars ( \
  CORBA_ArrayDef__get_element_type__getPars())
#endif

CORBA_IDLType CORBA_ArrayDef__get_element_type_def( CORBA_ArrayDef or, 
  yoenv* ev);
yopar* CORBA_ArrayDef__get_element_type_def__getPars(void);
#ifndef CORBA_ArrayDef__get_element_type_def_pars
#define CORBA_ArrayDef__get_element_type_def_pars ( \
  CORBA_ArrayDef__get_element_type_def__getPars())
#endif

#ifndef CORBA_ArrayDef__tyimpl_DEFINED
#define CORBA_ArrayDef__tyimpl_DEFINED
struct CORBA_ArrayDef__tyimpl
{
  ub4 (*_get_length)( CORBA_ArrayDef, yoenv*);
  yotk* (*_get_element_type)( CORBA_ArrayDef, yoenv*);
  CORBA_IDLType (*_get_element_type_def)( CORBA_ArrayDef, yoenv*);
  yotk* (*_get_type)( CORBA_ArrayDef, yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_ArrayDef, yoenv*);
};
#endif /* CORBA_ArrayDef__tyimpl_DEFINED */


/* interface CORBA_ExceptionDef declarations */
#ifndef CORBA_ExceptionDef_DECLARED
#define CORBA_ExceptionDef_DECLARED
typedef struct YCCORBA_ExceptionDef* CORBA_ExceptionDef;
CONST yotk* CORBA_ExceptionDef__getTC(void);
#ifndef YCTC_CORBA_ExceptionDef
#define YCTC_CORBA_ExceptionDef   (CORBA_ExceptionDef__getTC())
#endif
#endif /* CORBA_ExceptionDef_DECLARED */

#ifndef CORBA_ExceptionDef_SUPP_FUNCS
#define CORBA_ExceptionDef_SUPP_FUNCS
void CORBA_ExceptionDef__free( CORBA_ExceptionDef* val, ysmff ffunc);
void CORBA_ExceptionDef__copy( CORBA_ExceptionDef* dest, 
  CORBA_ExceptionDef* src, ysmaf afunc);
#endif /* CORBA_ExceptionDef_SUPP_FUNCS */

#ifndef CORBA_ExceptionDef_DEFINED
#define CORBA_ExceptionDef_DEFINED
struct yostub* CORBA_ExceptionDef__getStubs(void);
#define CORBA_ExceptionDef__stubs (CORBA_ExceptionDef__getStubs())
#endif /* CORBA_ExceptionDef_DEFINED */

CONST ysid* CORBA_ExceptionDef__getId(void);
#ifndef CORBA_ExceptionDef__id
#define CORBA_ExceptionDef__id   (CORBA_ExceptionDef__getId())
#endif
#ifndef CORBA_EXCEPTIONDEF_EX_BADOBJ
#define CORBA_EXCEPTIONDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_EXCEPTIONDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_EXCEPTIONDEF_EX_BADOBJ
#define YCTC_CORBA_EXCEPTIONDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_EXCEPTIONDEF_EX_BADOBJ */

#ifndef CORBA_ExceptionDef__get_def_kind
#define CORBA_ExceptionDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_ExceptionDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_ExceptionDef__get_def_kind */

#ifndef CORBA_ExceptionDef__get_id
#define CORBA_ExceptionDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ExceptionDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_ExceptionDef__get_id */

#ifndef CORBA_ExceptionDef__get_name
#define CORBA_ExceptionDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ExceptionDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_ExceptionDef__get_name */

#ifndef CORBA_ExceptionDef__get_version
#define CORBA_ExceptionDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ExceptionDef__get_version_pars  \
  CORBA_Contained__get_version_pars
#endif /* CORBA_ExceptionDef__get_version */

#ifndef CORBA_ExceptionDef__get_defined_in
#define CORBA_ExceptionDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ExceptionDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_ExceptionDef__get_defined_in */

#ifndef CORBA_ExceptionDef__get_absolute_name
#define CORBA_ExceptionDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ExceptionDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_ExceptionDef__get_absolute_name */

#ifndef CORBA_ExceptionDef__get_containing_repository
#define CORBA_ExceptionDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_ExceptionDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_ExceptionDef__get_containing_repository */

#ifndef CORBA_ExceptionDef_describe
#define CORBA_ExceptionDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_ExceptionDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_ExceptionDef_describe */

#ifndef CORBA_ExceptionDef_lookup
#define CORBA_ExceptionDef_lookup(or, ev, search_name) \
    CORBA_Container_lookup((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name))
#define CORBA_ExceptionDef_lookup_pars CORBA_Container_lookup_pars
#endif /* CORBA_ExceptionDef_lookup */

#ifndef CORBA_ExceptionDef_contents
#define CORBA_ExceptionDef_contents(or, ev, limit_type, exclude_inherited)  \
  \
    CORBA_Container_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited))
#define CORBA_ExceptionDef_contents_pars CORBA_Container_contents_pars
#endif /* CORBA_ExceptionDef_contents */

#ifndef CORBA_ExceptionDef_lookup_name
#define CORBA_ExceptionDef_lookup_name(or, ev, search_name,  \
  levels_to_search, limit_type, exclude_inherited) \
    CORBA_Container_lookup_name((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name), (levels_to_search), (limit_type), (exclude_inherited))
#define CORBA_ExceptionDef_lookup_name_pars  \
  CORBA_Container_lookup_name_pars
#endif /* CORBA_ExceptionDef_lookup_name */

#ifndef CORBA_ExceptionDef_DescriptionSeq
#define CORBA_ExceptionDef_DescriptionSeq CORBA_Container_DescriptionSeq
#endif /* CORBA_ExceptionDef_DescriptionSeq */

#ifndef CORBA_ExceptionDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_ExceptionDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_ExceptionDef_DescriptionSeq__free(val, ffunc)  \
  CORBA_Container_DescriptionSeq__free((val),(ffunc))
#define CORBA_ExceptionDef_DescriptionSeq__copy(dest, src, afunc)  \
  CORBA_Container_DescriptionSeq__copy((dest),(src),(afunc))
#endif /* CORBA_ExceptionDef_DescriptionSeq_SUPP_FUNCS */

#ifndef YCTC_CORBA_ExceptionDef_DescriptionSeq
#define YCTC_CORBA_ExceptionDef_DescriptionSeq  \
  YCTC_CORBA_Container_DescriptionSeq
#endif /* YCTC_CORBA_ExceptionDef_DescriptionSeq */

#ifndef CORBA_ExceptionDef_describe_contents
#define CORBA_ExceptionDef_describe_contents(or, ev, limit_type,  \
  exclude_inherited, max_returned_objs) \
    CORBA_Container_describe_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited), (max_returned_objs))
#define CORBA_ExceptionDef_describe_contents_pars  \
  CORBA_Container_describe_contents_pars
#endif /* CORBA_ExceptionDef_describe_contents */

yotk* CORBA_ExceptionDef__get_type( CORBA_ExceptionDef or, yoenv* ev);
yopar* CORBA_ExceptionDef__get_type__getPars(void);
#ifndef CORBA_ExceptionDef__get_type_pars
#define CORBA_ExceptionDef__get_type_pars ( \
  CORBA_ExceptionDef__get_type__getPars())
#endif

CORBA_StructMemberSeq CORBA_ExceptionDef__get_members( CORBA_ExceptionDef 
  or, yoenv* ev);
yopar* CORBA_ExceptionDef__get_members__getPars(void);
#ifndef CORBA_ExceptionDef__get_members_pars
#define CORBA_ExceptionDef__get_members_pars ( \
  CORBA_ExceptionDef__get_members__getPars())
#endif

#ifndef CORBA_ExceptionDef__tyimpl_DEFINED
#define CORBA_ExceptionDef__tyimpl_DEFINED
struct CORBA_ExceptionDef__tyimpl
{
  yotk* (*_get_type)( CORBA_ExceptionDef, yoenv*);
  CORBA_StructMemberSeq (*_get_members)( CORBA_ExceptionDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_ExceptionDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_ExceptionDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_ExceptionDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_ExceptionDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_ExceptionDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_ExceptionDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_ExceptionDef, 
    yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_ExceptionDef, yoenv*);
  CORBA_Contained (*lookup)( CORBA_ExceptionDef, yoenv*, CORBA_ScopedName);
  CORBA_ContainedSeq (*contents)( CORBA_ExceptionDef, yoenv*, 
    CORBA_DefinitionKind, boolean);
  CORBA_ContainedSeq (*lookup_name)( CORBA_ExceptionDef, yoenv*, 
    CORBA_Identifier, sb4, CORBA_DefinitionKind, boolean);
  CORBA_Container_DescriptionSeq (*describe_contents)( CORBA_ExceptionDef, 
    yoenv*, CORBA_DefinitionKind, boolean, sb4);
};
#endif /* CORBA_ExceptionDef__tyimpl_DEFINED */

#ifndef CORBA_ExceptionDescription_DECLARED
#define CORBA_ExceptionDescription_DECLARED
typedef struct CORBA_ExceptionDescription CORBA_ExceptionDescription;
#endif /* CORBA_ExceptionDescription_DECLARED */

#ifndef CORBA_ExceptionDescription_DEFINED
#define CORBA_ExceptionDescription_DEFINED
struct CORBA_ExceptionDescription
{
  CORBA_Identifier name;
  CORBA_RepositoryId id;
  CORBA_Container defined_in;
  CORBA_VersionSpec version;
  yotk* type;
};
CONST yotk* CORBA_ExceptionDescription__getTC(void);
#ifndef YCTC_CORBA_ExceptionDescription
#define YCTC_CORBA_ExceptionDescription   ( \
  CORBA_ExceptionDescription__getTC())
#endif
#endif /* CORBA_ExceptionDescription_DEFINED */

#ifndef CORBA_ExceptionDescription_SUPP_FUNCS
#define CORBA_ExceptionDescription_SUPP_FUNCS
void CORBA_ExceptionDescription__free( CORBA_ExceptionDescription* val, 
  ysmff ffunc);
void CORBA_ExceptionDescription__copy( CORBA_ExceptionDescription* dest, 
  CORBA_ExceptionDescription* src, ysmaf afunc);
#endif /* CORBA_ExceptionDescription_SUPP_FUNCS */

#ifndef CORBA_AttributeMode_DECLARED
#define CORBA_AttributeMode_DECLARED
typedef ub4 CORBA_AttributeMode;
CONST yotk* CORBA_AttributeMode__getTC(void);
#ifndef YCTC_CORBA_AttributeMode
#define YCTC_CORBA_AttributeMode   (CORBA_AttributeMode__getTC())
#endif
#endif /* CORBA_AttributeMode_DECLARED */

#ifndef CORBA_AttributeMode_DEFINED
#define CORBA_AttributeMode_DEFINED
#define CORBA_ATTR_NORMAL ((CORBA_AttributeMode) 0)
#define CORBA_ATTR_READONLY ((CORBA_AttributeMode) 1)
#endif /* CORBA_AttributeMode_DEFINED */

#ifndef CORBA_AttributeMode_SUPP_FUNCS
#define CORBA_AttributeMode_SUPP_FUNCS
void CORBA_AttributeMode__free( CORBA_AttributeMode* val, ysmff ffunc);
void CORBA_AttributeMode__copy( CORBA_AttributeMode* dest, 
  CORBA_AttributeMode* src, ysmaf afunc);
#endif /* CORBA_AttributeMode_SUPP_FUNCS */


/* interface CORBA_AttributeDef declarations */
#ifndef CORBA_AttributeDef_DECLARED
#define CORBA_AttributeDef_DECLARED
typedef struct YCCORBA_AttributeDef* CORBA_AttributeDef;
CONST yotk* CORBA_AttributeDef__getTC(void);
#ifndef YCTC_CORBA_AttributeDef
#define YCTC_CORBA_AttributeDef   (CORBA_AttributeDef__getTC())
#endif
#endif /* CORBA_AttributeDef_DECLARED */

#ifndef CORBA_AttributeDef_SUPP_FUNCS
#define CORBA_AttributeDef_SUPP_FUNCS
void CORBA_AttributeDef__free( CORBA_AttributeDef* val, ysmff ffunc);
void CORBA_AttributeDef__copy( CORBA_AttributeDef* dest, 
  CORBA_AttributeDef* src, ysmaf afunc);
#endif /* CORBA_AttributeDef_SUPP_FUNCS */

#ifndef CORBA_AttributeDef_DEFINED
#define CORBA_AttributeDef_DEFINED
struct yostub* CORBA_AttributeDef__getStubs(void);
#define CORBA_AttributeDef__stubs (CORBA_AttributeDef__getStubs())
#endif /* CORBA_AttributeDef_DEFINED */

CONST ysid* CORBA_AttributeDef__getId(void);
#ifndef CORBA_AttributeDef__id
#define CORBA_AttributeDef__id   (CORBA_AttributeDef__getId())
#endif
#ifndef CORBA_ATTRIBUTEDEF_EX_BADOBJ
#define CORBA_ATTRIBUTEDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_ATTRIBUTEDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_ATTRIBUTEDEF_EX_BADOBJ
#define YCTC_CORBA_ATTRIBUTEDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_ATTRIBUTEDEF_EX_BADOBJ */

#ifndef CORBA_AttributeDef__get_def_kind
#define CORBA_AttributeDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_AttributeDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_AttributeDef__get_def_kind */

#ifndef CORBA_AttributeDef__get_id
#define CORBA_AttributeDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AttributeDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_AttributeDef__get_id */

#ifndef CORBA_AttributeDef__get_name
#define CORBA_AttributeDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AttributeDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_AttributeDef__get_name */

#ifndef CORBA_AttributeDef__get_version
#define CORBA_AttributeDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AttributeDef__get_version_pars  \
  CORBA_Contained__get_version_pars
#endif /* CORBA_AttributeDef__get_version */

#ifndef CORBA_AttributeDef__get_defined_in
#define CORBA_AttributeDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AttributeDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_AttributeDef__get_defined_in */

#ifndef CORBA_AttributeDef__get_absolute_name
#define CORBA_AttributeDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AttributeDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_AttributeDef__get_absolute_name */

#ifndef CORBA_AttributeDef__get_containing_repository
#define CORBA_AttributeDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_AttributeDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_AttributeDef__get_containing_repository */

#ifndef CORBA_AttributeDef_Description
#define CORBA_AttributeDef_Description CORBA_Contained_Description
#endif /* CORBA_AttributeDef_Description */

#ifndef YCTC_CORBA_AttributeDef_Description
#define YCTC_CORBA_AttributeDef_Description  \
  YCTC_CORBA_Contained_Description
#endif /* YCTC_CORBA_AttributeDef_Description */

#ifndef CORBA_AttributeDef_Description_SUPP_FUNCS
#define CORBA_AttributeDef_Description_SUPP_FUNCS
#define CORBA_AttributeDef_Description__free(val, ffunc)  \
  CORBA_Contained_Description__free((val),(ffunc))
#define CORBA_AttributeDef_Description__copy(dest, src, afunc)  \
  CORBA_Contained_Description__copy((dest),(src),(afunc))
#endif /* CORBA_AttributeDef_Description_SUPP_FUNCS */

#ifndef CORBA_AttributeDef_describe
#define CORBA_AttributeDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_AttributeDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_AttributeDef_describe */

yotk* CORBA_AttributeDef__get_type( CORBA_AttributeDef or, yoenv* ev);
yopar* CORBA_AttributeDef__get_type__getPars(void);
#ifndef CORBA_AttributeDef__get_type_pars
#define CORBA_AttributeDef__get_type_pars ( \
  CORBA_AttributeDef__get_type__getPars())
#endif

CORBA_IDLType CORBA_AttributeDef__get_type_def( CORBA_AttributeDef or, 
  yoenv* ev);
yopar* CORBA_AttributeDef__get_type_def__getPars(void);
#ifndef CORBA_AttributeDef__get_type_def_pars
#define CORBA_AttributeDef__get_type_def_pars ( \
  CORBA_AttributeDef__get_type_def__getPars())
#endif

CORBA_AttributeMode CORBA_AttributeDef__get_mode( CORBA_AttributeDef or, 
  yoenv* ev);
yopar* CORBA_AttributeDef__get_mode__getPars(void);
#ifndef CORBA_AttributeDef__get_mode_pars
#define CORBA_AttributeDef__get_mode_pars ( \
  CORBA_AttributeDef__get_mode__getPars())
#endif

#ifndef CORBA_AttributeDef__tyimpl_DEFINED
#define CORBA_AttributeDef__tyimpl_DEFINED
struct CORBA_AttributeDef__tyimpl
{
  yotk* (*_get_type)( CORBA_AttributeDef, yoenv*);
  CORBA_IDLType (*_get_type_def)( CORBA_AttributeDef, yoenv*);
  CORBA_AttributeMode (*_get_mode)( CORBA_AttributeDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_AttributeDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_AttributeDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_AttributeDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_AttributeDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_AttributeDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_AttributeDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_AttributeDef, 
    yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_AttributeDef, yoenv*);
};
#endif /* CORBA_AttributeDef__tyimpl_DEFINED */

#ifndef CORBA_AttributeDescription_DECLARED
#define CORBA_AttributeDescription_DECLARED
typedef struct CORBA_AttributeDescription CORBA_AttributeDescription;
#endif /* CORBA_AttributeDescription_DECLARED */

#ifndef CORBA_AttributeDescription_DEFINED
#define CORBA_AttributeDescription_DEFINED
struct CORBA_AttributeDescription
{
  CORBA_Identifier name;
  CORBA_RepositoryId id;
  CORBA_Container defined_in;
  CORBA_VersionSpec version;
  yotk* type;
  CORBA_AttributeMode mode;
};
CONST yotk* CORBA_AttributeDescription__getTC(void);
#ifndef YCTC_CORBA_AttributeDescription
#define YCTC_CORBA_AttributeDescription   ( \
  CORBA_AttributeDescription__getTC())
#endif
#endif /* CORBA_AttributeDescription_DEFINED */

#ifndef CORBA_AttributeDescription_SUPP_FUNCS
#define CORBA_AttributeDescription_SUPP_FUNCS
void CORBA_AttributeDescription__free( CORBA_AttributeDescription* val, 
  ysmff ffunc);
void CORBA_AttributeDescription__copy( CORBA_AttributeDescription* dest, 
  CORBA_AttributeDescription* src, ysmaf afunc);
#endif /* CORBA_AttributeDescription_SUPP_FUNCS */

#ifndef CORBA_OperationMode_DECLARED
#define CORBA_OperationMode_DECLARED
typedef ub4 CORBA_OperationMode;
CONST yotk* CORBA_OperationMode__getTC(void);
#ifndef YCTC_CORBA_OperationMode
#define YCTC_CORBA_OperationMode   (CORBA_OperationMode__getTC())
#endif
#endif /* CORBA_OperationMode_DECLARED */

#ifndef CORBA_OperationMode_DEFINED
#define CORBA_OperationMode_DEFINED
#define CORBA_OP_NORMAL ((CORBA_OperationMode) 0)
#define CORBA_OP_ONEWAY ((CORBA_OperationMode) 1)
#endif /* CORBA_OperationMode_DEFINED */

#ifndef CORBA_OperationMode_SUPP_FUNCS
#define CORBA_OperationMode_SUPP_FUNCS
void CORBA_OperationMode__free( CORBA_OperationMode* val, ysmff ffunc);
void CORBA_OperationMode__copy( CORBA_OperationMode* dest, 
  CORBA_OperationMode* src, ysmaf afunc);
#endif /* CORBA_OperationMode_SUPP_FUNCS */

#ifndef CORBA_ParameterMode_DECLARED
#define CORBA_ParameterMode_DECLARED
typedef ub4 CORBA_ParameterMode;
CONST yotk* CORBA_ParameterMode__getTC(void);
#ifndef YCTC_CORBA_ParameterMode
#define YCTC_CORBA_ParameterMode   (CORBA_ParameterMode__getTC())
#endif
#endif /* CORBA_ParameterMode_DECLARED */

#ifndef CORBA_ParameterMode_DEFINED
#define CORBA_ParameterMode_DEFINED
#define CORBA_PARAM_IN ((CORBA_ParameterMode) 0)
#define CORBA_PARAM_OUT ((CORBA_ParameterMode) 1)
#define CORBA_PARAM_INOUT ((CORBA_ParameterMode) 2)
#endif /* CORBA_ParameterMode_DEFINED */

#ifndef CORBA_ParameterMode_SUPP_FUNCS
#define CORBA_ParameterMode_SUPP_FUNCS
void CORBA_ParameterMode__free( CORBA_ParameterMode* val, ysmff ffunc);
void CORBA_ParameterMode__copy( CORBA_ParameterMode* dest, 
  CORBA_ParameterMode* src, ysmaf afunc);
#endif /* CORBA_ParameterMode_SUPP_FUNCS */

#ifndef CORBA_ParameterDescription_DECLARED
#define CORBA_ParameterDescription_DECLARED
typedef struct CORBA_ParameterDescription CORBA_ParameterDescription;
#endif /* CORBA_ParameterDescription_DECLARED */

#ifndef CORBA_ParameterDescription_DEFINED
#define CORBA_ParameterDescription_DEFINED
struct CORBA_ParameterDescription
{
  CORBA_Identifier name;
  yotk* type;
  CORBA_IDLType type_def;
  CORBA_ParameterMode mode;
};
CONST yotk* CORBA_ParameterDescription__getTC(void);
#ifndef YCTC_CORBA_ParameterDescription
#define YCTC_CORBA_ParameterDescription   ( \
  CORBA_ParameterDescription__getTC())
#endif
#endif /* CORBA_ParameterDescription_DEFINED */

#ifndef CORBA_ParameterDescription_SUPP_FUNCS
#define CORBA_ParameterDescription_SUPP_FUNCS
void CORBA_ParameterDescription__free( CORBA_ParameterDescription* val, 
  ysmff ffunc);
void CORBA_ParameterDescription__copy( CORBA_ParameterDescription* dest, 
  CORBA_ParameterDescription* src, ysmaf afunc);
#endif /* CORBA_ParameterDescription_SUPP_FUNCS */

#ifndef CORBA_ParDescriptionSeq_DECLARED
#define CORBA_ParDescriptionSeq_DECLARED
typedef YCIDL_sequence_CORBA_ParameterDescription CORBA_ParDescriptionSeq;
CONST yotk* CORBA_ParDescriptionSeq__getTC(void);
#ifndef YCTC_CORBA_ParDescriptionSeq
#define YCTC_CORBA_ParDescriptionSeq   (CORBA_ParDescriptionSeq__getTC())
#endif
#endif /* CORBA_ParDescriptionSeq_DECLARED */

#ifndef CORBA_ParDescriptionSeq_SUPP_FUNCS
#define CORBA_ParDescriptionSeq_SUPP_FUNCS
void CORBA_ParDescriptionSeq__free( CORBA_ParDescriptionSeq* val, ysmff 
  ffunc);
void CORBA_ParDescriptionSeq__copy( CORBA_ParDescriptionSeq* dest, 
  CORBA_ParDescriptionSeq* src, ysmaf afunc);
#endif /* CORBA_ParDescriptionSeq_SUPP_FUNCS */

#ifndef CORBA_ExceptionDefSeq_DECLARED
#define CORBA_ExceptionDefSeq_DECLARED
typedef YCIDL_sequence_CORBA_ExceptionDef CORBA_ExceptionDefSeq;
CONST yotk* CORBA_ExceptionDefSeq__getTC(void);
#ifndef YCTC_CORBA_ExceptionDefSeq
#define YCTC_CORBA_ExceptionDefSeq   (CORBA_ExceptionDefSeq__getTC())
#endif
#endif /* CORBA_ExceptionDefSeq_DECLARED */

#ifndef CORBA_ExceptionDefSeq_SUPP_FUNCS
#define CORBA_ExceptionDefSeq_SUPP_FUNCS
void CORBA_ExceptionDefSeq__free( CORBA_ExceptionDefSeq* val, ysmff ffunc);
void CORBA_ExceptionDefSeq__copy( CORBA_ExceptionDefSeq* dest, 
  CORBA_ExceptionDefSeq* src, ysmaf afunc);
#endif /* CORBA_ExceptionDefSeq_SUPP_FUNCS */

#ifndef CORBA_ExcDescriptionSeq_DECLARED
#define CORBA_ExcDescriptionSeq_DECLARED
typedef YCIDL_sequence_CORBA_ExceptionDescription CORBA_ExcDescriptionSeq;
CONST yotk* CORBA_ExcDescriptionSeq__getTC(void);
#ifndef YCTC_CORBA_ExcDescriptionSeq
#define YCTC_CORBA_ExcDescriptionSeq   (CORBA_ExcDescriptionSeq__getTC())
#endif
#endif /* CORBA_ExcDescriptionSeq_DECLARED */

#ifndef CORBA_ExcDescriptionSeq_SUPP_FUNCS
#define CORBA_ExcDescriptionSeq_SUPP_FUNCS
void CORBA_ExcDescriptionSeq__free( CORBA_ExcDescriptionSeq* val, ysmff 
  ffunc);
void CORBA_ExcDescriptionSeq__copy( CORBA_ExcDescriptionSeq* dest, 
  CORBA_ExcDescriptionSeq* src, ysmaf afunc);
#endif /* CORBA_ExcDescriptionSeq_SUPP_FUNCS */

#ifndef CORBA_ContextIdentifier_DECLARED
#define CORBA_ContextIdentifier_DECLARED
typedef CORBA_Identifier CORBA_ContextIdentifier;
CONST yotk* CORBA_ContextIdentifier__getTC(void);
#ifndef YCTC_CORBA_ContextIdentifier
#define YCTC_CORBA_ContextIdentifier   (CORBA_ContextIdentifier__getTC())
#endif
#endif /* CORBA_ContextIdentifier_DECLARED */

#ifndef CORBA_ContextIdentifier_SUPP_FUNCS
#define CORBA_ContextIdentifier_SUPP_FUNCS
#endif /* CORBA_ContextIdentifier_SUPP_FUNCS */

#ifndef CORBA_ContextIdSeq_DECLARED
#define CORBA_ContextIdSeq_DECLARED
typedef YCIDL_sequence_string CORBA_ContextIdSeq;
CONST yotk* CORBA_ContextIdSeq__getTC(void);
#ifndef YCTC_CORBA_ContextIdSeq
#define YCTC_CORBA_ContextIdSeq   (CORBA_ContextIdSeq__getTC())
#endif
#endif /* CORBA_ContextIdSeq_DECLARED */

#ifndef CORBA_ContextIdSeq_SUPP_FUNCS
#define CORBA_ContextIdSeq_SUPP_FUNCS
void CORBA_ContextIdSeq__free( CORBA_ContextIdSeq* val, ysmff ffunc);
void CORBA_ContextIdSeq__copy( CORBA_ContextIdSeq* dest, 
  CORBA_ContextIdSeq* src, ysmaf afunc);
#endif /* CORBA_ContextIdSeq_SUPP_FUNCS */


/* interface CORBA_OperationDef declarations */
#ifndef CORBA_OperationDef_DECLARED
#define CORBA_OperationDef_DECLARED
typedef struct YCCORBA_OperationDef* CORBA_OperationDef;
CONST yotk* CORBA_OperationDef__getTC(void);
#ifndef YCTC_CORBA_OperationDef
#define YCTC_CORBA_OperationDef   (CORBA_OperationDef__getTC())
#endif
#endif /* CORBA_OperationDef_DECLARED */

#ifndef CORBA_OperationDef_SUPP_FUNCS
#define CORBA_OperationDef_SUPP_FUNCS
void CORBA_OperationDef__free( CORBA_OperationDef* val, ysmff ffunc);
void CORBA_OperationDef__copy( CORBA_OperationDef* dest, 
  CORBA_OperationDef* src, ysmaf afunc);
#endif /* CORBA_OperationDef_SUPP_FUNCS */

#ifndef CORBA_OperationDef_DEFINED
#define CORBA_OperationDef_DEFINED
struct yostub* CORBA_OperationDef__getStubs(void);
#define CORBA_OperationDef__stubs (CORBA_OperationDef__getStubs())
#endif /* CORBA_OperationDef_DEFINED */

CONST ysid* CORBA_OperationDef__getId(void);
#ifndef CORBA_OperationDef__id
#define CORBA_OperationDef__id   (CORBA_OperationDef__getId())
#endif
#ifndef CORBA_OPERATIONDEF_EX_BADOBJ
#define CORBA_OPERATIONDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_OPERATIONDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_OPERATIONDEF_EX_BADOBJ
#define YCTC_CORBA_OPERATIONDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_OPERATIONDEF_EX_BADOBJ */

#ifndef CORBA_OperationDef__get_def_kind
#define CORBA_OperationDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_OperationDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_OperationDef__get_def_kind */

#ifndef CORBA_OperationDef__get_id
#define CORBA_OperationDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_OperationDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_OperationDef__get_id */

#ifndef CORBA_OperationDef__get_name
#define CORBA_OperationDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_OperationDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_OperationDef__get_name */

#ifndef CORBA_OperationDef__get_version
#define CORBA_OperationDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_OperationDef__get_version_pars  \
  CORBA_Contained__get_version_pars
#endif /* CORBA_OperationDef__get_version */

#ifndef CORBA_OperationDef__get_defined_in
#define CORBA_OperationDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_OperationDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_OperationDef__get_defined_in */

#ifndef CORBA_OperationDef__get_absolute_name
#define CORBA_OperationDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_OperationDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_OperationDef__get_absolute_name */

#ifndef CORBA_OperationDef__get_containing_repository
#define CORBA_OperationDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_OperationDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_OperationDef__get_containing_repository */

#ifndef CORBA_OperationDef_Description
#define CORBA_OperationDef_Description CORBA_Contained_Description
#endif /* CORBA_OperationDef_Description */

#ifndef YCTC_CORBA_OperationDef_Description
#define YCTC_CORBA_OperationDef_Description  \
  YCTC_CORBA_Contained_Description
#endif /* YCTC_CORBA_OperationDef_Description */

#ifndef CORBA_OperationDef_Description_SUPP_FUNCS
#define CORBA_OperationDef_Description_SUPP_FUNCS
#define CORBA_OperationDef_Description__free(val, ffunc)  \
  CORBA_Contained_Description__free((val),(ffunc))
#define CORBA_OperationDef_Description__copy(dest, src, afunc)  \
  CORBA_Contained_Description__copy((dest),(src),(afunc))
#endif /* CORBA_OperationDef_Description_SUPP_FUNCS */

#ifndef CORBA_OperationDef_describe
#define CORBA_OperationDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_OperationDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_OperationDef_describe */

yotk* CORBA_OperationDef__get_result( CORBA_OperationDef or, yoenv* ev);
yopar* CORBA_OperationDef__get_result__getPars(void);
#ifndef CORBA_OperationDef__get_result_pars
#define CORBA_OperationDef__get_result_pars ( \
  CORBA_OperationDef__get_result__getPars())
#endif

CORBA_IDLType CORBA_OperationDef__get_result_def( CORBA_OperationDef or, 
  yoenv* ev);
yopar* CORBA_OperationDef__get_result_def__getPars(void);
#ifndef CORBA_OperationDef__get_result_def_pars
#define CORBA_OperationDef__get_result_def_pars ( \
  CORBA_OperationDef__get_result_def__getPars())
#endif

CORBA_ParDescriptionSeq CORBA_OperationDef__get_params( CORBA_OperationDef 
  or, yoenv* ev);
yopar* CORBA_OperationDef__get_params__getPars(void);
#ifndef CORBA_OperationDef__get_params_pars
#define CORBA_OperationDef__get_params_pars ( \
  CORBA_OperationDef__get_params__getPars())
#endif

CORBA_OperationMode CORBA_OperationDef__get_mode( CORBA_OperationDef or, 
  yoenv* ev);
yopar* CORBA_OperationDef__get_mode__getPars(void);
#ifndef CORBA_OperationDef__get_mode_pars
#define CORBA_OperationDef__get_mode_pars ( \
  CORBA_OperationDef__get_mode__getPars())
#endif

CORBA_ExceptionDefSeq CORBA_OperationDef__get_exceptions( 
  CORBA_OperationDef or, yoenv* ev);
yopar* CORBA_OperationDef__get_exceptions__getPars(void);
#ifndef CORBA_OperationDef__get_exceptions_pars
#define CORBA_OperationDef__get_exceptions_pars ( \
  CORBA_OperationDef__get_exceptions__getPars())
#endif

CORBA_ContextIdSeq CORBA_OperationDef__get_contexts( CORBA_OperationDef or, 
  yoenv* ev);
yopar* CORBA_OperationDef__get_contexts__getPars(void);
#ifndef CORBA_OperationDef__get_contexts_pars
#define CORBA_OperationDef__get_contexts_pars ( \
  CORBA_OperationDef__get_contexts__getPars())
#endif

#ifndef CORBA_OperationDef__tyimpl_DEFINED
#define CORBA_OperationDef__tyimpl_DEFINED
struct CORBA_OperationDef__tyimpl
{
  yotk* (*_get_result)( CORBA_OperationDef, yoenv*);
  CORBA_IDLType (*_get_result_def)( CORBA_OperationDef, yoenv*);
  CORBA_ParDescriptionSeq (*_get_params)( CORBA_OperationDef, yoenv*);
  CORBA_OperationMode (*_get_mode)( CORBA_OperationDef, yoenv*);
  CORBA_ExceptionDefSeq (*_get_exceptions)( CORBA_OperationDef, yoenv*);
  CORBA_ContextIdSeq (*_get_contexts)( CORBA_OperationDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_OperationDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_OperationDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_OperationDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_OperationDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_OperationDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_OperationDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_OperationDef, 
    yoenv*);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_OperationDef, yoenv*);
};
#endif /* CORBA_OperationDef__tyimpl_DEFINED */

#ifndef CORBA_OperationDescription_DECLARED
#define CORBA_OperationDescription_DECLARED
typedef struct CORBA_OperationDescription CORBA_OperationDescription;
#endif /* CORBA_OperationDescription_DECLARED */

#ifndef CORBA_OperationDescription_DEFINED
#define CORBA_OperationDescription_DEFINED
struct CORBA_OperationDescription
{
  CORBA_Identifier name;
  CORBA_RepositoryId id;
  CORBA_Container defined_in;
  CORBA_VersionSpec version;
  yotk* result;
  CORBA_OperationMode mode;
  CORBA_ContextIdSeq contexts;
  CORBA_ParDescriptionSeq parameters;
  CORBA_ExcDescriptionSeq exceptions;
};
CONST yotk* CORBA_OperationDescription__getTC(void);
#ifndef YCTC_CORBA_OperationDescription
#define YCTC_CORBA_OperationDescription   ( \
  CORBA_OperationDescription__getTC())
#endif
#endif /* CORBA_OperationDescription_DEFINED */

#ifndef CORBA_OperationDescription_SUPP_FUNCS
#define CORBA_OperationDescription_SUPP_FUNCS
void CORBA_OperationDescription__free( CORBA_OperationDescription* val, 
  ysmff ffunc);
void CORBA_OperationDescription__copy( CORBA_OperationDescription* dest, 
  CORBA_OperationDescription* src, ysmaf afunc);
#endif /* CORBA_OperationDescription_SUPP_FUNCS */

#ifndef CORBA_OpDescriptionSeq_DECLARED
#define CORBA_OpDescriptionSeq_DECLARED
typedef YCIDL_sequence_CORBA_OperationDescription CORBA_OpDescriptionSeq;
CONST yotk* CORBA_OpDescriptionSeq__getTC(void);
#ifndef YCTC_CORBA_OpDescriptionSeq
#define YCTC_CORBA_OpDescriptionSeq   (CORBA_OpDescriptionSeq__getTC())
#endif
#endif /* CORBA_OpDescriptionSeq_DECLARED */

#ifndef CORBA_OpDescriptionSeq_SUPP_FUNCS
#define CORBA_OpDescriptionSeq_SUPP_FUNCS
void CORBA_OpDescriptionSeq__free( CORBA_OpDescriptionSeq* val, ysmff ffunc)
  ;
void CORBA_OpDescriptionSeq__copy( CORBA_OpDescriptionSeq* dest, 
  CORBA_OpDescriptionSeq* src, ysmaf afunc);
#endif /* CORBA_OpDescriptionSeq_SUPP_FUNCS */

#ifndef CORBA_AttrDescriptionSeq_DECLARED
#define CORBA_AttrDescriptionSeq_DECLARED
typedef YCIDL_sequence_CORBA_AttributeDescription CORBA_AttrDescriptionSeq;
CONST yotk* CORBA_AttrDescriptionSeq__getTC(void);
#ifndef YCTC_CORBA_AttrDescriptionSeq
#define YCTC_CORBA_AttrDescriptionSeq   (CORBA_AttrDescriptionSeq__getTC())
#endif
#endif /* CORBA_AttrDescriptionSeq_DECLARED */

#ifndef CORBA_AttrDescriptionSeq_SUPP_FUNCS
#define CORBA_AttrDescriptionSeq_SUPP_FUNCS
void CORBA_AttrDescriptionSeq__free( CORBA_AttrDescriptionSeq* val, ysmff 
  ffunc);
void CORBA_AttrDescriptionSeq__copy( CORBA_AttrDescriptionSeq* dest, 
  CORBA_AttrDescriptionSeq* src, ysmaf afunc);
#endif /* CORBA_AttrDescriptionSeq_SUPP_FUNCS */


/* interface CORBA_InterfaceDef declarations */
#ifndef CORBA_InterfaceDef_DECLARED
#define CORBA_InterfaceDef_DECLARED
typedef struct YCCORBA_InterfaceDef* CORBA_InterfaceDef;
CONST yotk* CORBA_InterfaceDef__getTC(void);
#ifndef YCTC_CORBA_InterfaceDef
#define YCTC_CORBA_InterfaceDef   (CORBA_InterfaceDef__getTC())
#endif
#endif /* CORBA_InterfaceDef_DECLARED */

#ifndef CORBA_InterfaceDef_SUPP_FUNCS
#define CORBA_InterfaceDef_SUPP_FUNCS
void CORBA_InterfaceDef__free( CORBA_InterfaceDef* val, ysmff ffunc);
void CORBA_InterfaceDef__copy( CORBA_InterfaceDef* dest, 
  CORBA_InterfaceDef* src, ysmaf afunc);
#endif /* CORBA_InterfaceDef_SUPP_FUNCS */

#ifndef CORBA_InterfaceDef_DEFINED
#define CORBA_InterfaceDef_DEFINED
struct yostub* CORBA_InterfaceDef__getStubs(void);
#define CORBA_InterfaceDef__stubs (CORBA_InterfaceDef__getStubs())
#endif /* CORBA_InterfaceDef_DEFINED */

CONST ysid* CORBA_InterfaceDef__getId(void);
#ifndef CORBA_InterfaceDef__id
#define CORBA_InterfaceDef__id   (CORBA_InterfaceDef__getId())
#endif
#ifndef CORBA_INTERFACEDEF_EX_BADOBJ
#define CORBA_INTERFACEDEF_EX_BADOBJ CORBA_IROBJECT_EX_BADOBJ
#endif /* CORBA_INTERFACEDEF_EX_BADOBJ */

#ifndef YCTC_CORBA_INTERFACEDEF_EX_BADOBJ
#define YCTC_CORBA_INTERFACEDEF_EX_BADOBJ YCTC_CORBA_IROBJECT_EX_BADOBJ
#endif /* YCTC_CORBA_INTERFACEDEF_EX_BADOBJ */

#ifndef CORBA_InterfaceDef__get_def_kind
#define CORBA_InterfaceDef__get_def_kind(or, ev) \
    CORBA_IRObject__get_def_kind((CORBA_IRObject)(dvoid*)(or), (ev))
#define CORBA_InterfaceDef__get_def_kind_pars  \
  CORBA_IRObject__get_def_kind_pars
#endif /* CORBA_InterfaceDef__get_def_kind */

#ifndef CORBA_InterfaceDef_lookup
#define CORBA_InterfaceDef_lookup(or, ev, search_name) \
    CORBA_Container_lookup((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name))
#define CORBA_InterfaceDef_lookup_pars CORBA_Container_lookup_pars
#endif /* CORBA_InterfaceDef_lookup */

#ifndef CORBA_InterfaceDef_contents
#define CORBA_InterfaceDef_contents(or, ev, limit_type, exclude_inherited)  \
  \
    CORBA_Container_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited))
#define CORBA_InterfaceDef_contents_pars CORBA_Container_contents_pars
#endif /* CORBA_InterfaceDef_contents */

#ifndef CORBA_InterfaceDef_lookup_name
#define CORBA_InterfaceDef_lookup_name(or, ev, search_name,  \
  levels_to_search, limit_type, exclude_inherited) \
    CORBA_Container_lookup_name((CORBA_Container)(dvoid*)(or), (ev), ( \
  search_name), (levels_to_search), (limit_type), (exclude_inherited))
#define CORBA_InterfaceDef_lookup_name_pars  \
  CORBA_Container_lookup_name_pars
#endif /* CORBA_InterfaceDef_lookup_name */

#ifndef CORBA_InterfaceDef_DescriptionSeq
#define CORBA_InterfaceDef_DescriptionSeq CORBA_Container_DescriptionSeq
#endif /* CORBA_InterfaceDef_DescriptionSeq */

#ifndef CORBA_InterfaceDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_InterfaceDef_DescriptionSeq_SUPP_FUNCS
#define CORBA_InterfaceDef_DescriptionSeq__free(val, ffunc)  \
  CORBA_Container_DescriptionSeq__free((val),(ffunc))
#define CORBA_InterfaceDef_DescriptionSeq__copy(dest, src, afunc)  \
  CORBA_Container_DescriptionSeq__copy((dest),(src),(afunc))
#endif /* CORBA_InterfaceDef_DescriptionSeq_SUPP_FUNCS */

#ifndef YCTC_CORBA_InterfaceDef_DescriptionSeq
#define YCTC_CORBA_InterfaceDef_DescriptionSeq  \
  YCTC_CORBA_Container_DescriptionSeq
#endif /* YCTC_CORBA_InterfaceDef_DescriptionSeq */

#ifndef CORBA_InterfaceDef_describe_contents
#define CORBA_InterfaceDef_describe_contents(or, ev, limit_type,  \
  exclude_inherited, max_returned_objs) \
    CORBA_Container_describe_contents((CORBA_Container)(dvoid*)(or), (ev), ( \
  limit_type), (exclude_inherited), (max_returned_objs))
#define CORBA_InterfaceDef_describe_contents_pars  \
  CORBA_Container_describe_contents_pars
#endif /* CORBA_InterfaceDef_describe_contents */

#ifndef CORBA_InterfaceDef__get_id
#define CORBA_InterfaceDef__get_id(or, ev) \
    CORBA_Contained__get_id((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_InterfaceDef__get_id_pars CORBA_Contained__get_id_pars
#endif /* CORBA_InterfaceDef__get_id */

#ifndef CORBA_InterfaceDef__get_name
#define CORBA_InterfaceDef__get_name(or, ev) \
    CORBA_Contained__get_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_InterfaceDef__get_name_pars CORBA_Contained__get_name_pars
#endif /* CORBA_InterfaceDef__get_name */

#ifndef CORBA_InterfaceDef__get_version
#define CORBA_InterfaceDef__get_version(or, ev) \
    CORBA_Contained__get_version((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_InterfaceDef__get_version_pars  \
  CORBA_Contained__get_version_pars
#endif /* CORBA_InterfaceDef__get_version */

#ifndef CORBA_InterfaceDef__get_defined_in
#define CORBA_InterfaceDef__get_defined_in(or, ev) \
    CORBA_Contained__get_defined_in((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_InterfaceDef__get_defined_in_pars  \
  CORBA_Contained__get_defined_in_pars
#endif /* CORBA_InterfaceDef__get_defined_in */

#ifndef CORBA_InterfaceDef__get_absolute_name
#define CORBA_InterfaceDef__get_absolute_name(or, ev) \
    CORBA_Contained__get_absolute_name((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_InterfaceDef__get_absolute_name_pars  \
  CORBA_Contained__get_absolute_name_pars
#endif /* CORBA_InterfaceDef__get_absolute_name */

#ifndef CORBA_InterfaceDef__get_containing_repository
#define CORBA_InterfaceDef__get_containing_repository(or, ev) \
    CORBA_Contained__get_containing_repository((CORBA_Contained)(dvoid*)(or) \
  , (ev))
#define CORBA_InterfaceDef__get_containing_repository_pars  \
  CORBA_Contained__get_containing_repository_pars
#endif /* CORBA_InterfaceDef__get_containing_repository */

#ifndef CORBA_InterfaceDef_describe
#define CORBA_InterfaceDef_describe(or, ev) \
    CORBA_Contained_describe((CORBA_Contained)(dvoid*)(or), (ev))
#define CORBA_InterfaceDef_describe_pars CORBA_Contained_describe_pars
#endif /* CORBA_InterfaceDef_describe */

#ifndef CORBA_InterfaceDef__get_type
#define CORBA_InterfaceDef__get_type(or, ev) \
    CORBA_IDLType__get_type((CORBA_IDLType)(dvoid*)(or), (ev))
#define CORBA_InterfaceDef__get_type_pars CORBA_IDLType__get_type_pars
#endif /* CORBA_InterfaceDef__get_type */

CORBA_InterfaceDefSeq CORBA_InterfaceDef__get_base_interfaces( 
  CORBA_InterfaceDef or, yoenv* ev);
yopar* CORBA_InterfaceDef__get_base_interfaces__getPars(void);
#ifndef CORBA_InterfaceDef__get_base_interfaces_pars
#define CORBA_InterfaceDef__get_base_interfaces_pars ( \
  CORBA_InterfaceDef__get_base_interfaces__getPars())
#endif

boolean CORBA_InterfaceDef_is_a( CORBA_InterfaceDef or, yoenv* ev, 
  CORBA_RepositoryId interface_id);
yopar* CORBA_InterfaceDef_is_a__getPars(void);
#ifndef CORBA_InterfaceDef_is_a_pars
#define CORBA_InterfaceDef_is_a_pars (CORBA_InterfaceDef_is_a__getPars())
#endif

#ifndef CORBA_InterfaceDef_FullInterfaceDescription_DECLARED
#define CORBA_InterfaceDef_FullInterfaceDescription_DECLARED
typedef struct CORBA_InterfaceDef_FullInterfaceDescription 
  CORBA_InterfaceDef_FullInterfaceDescription;
#endif /* CORBA_InterfaceDef_FullInterfaceDescription_DECLARED */

#ifndef CORBA_InterfaceDef_FullInterfaceDescription_DEFINED
#define CORBA_InterfaceDef_FullInterfaceDescription_DEFINED
struct CORBA_InterfaceDef_FullInterfaceDescription
{
  CORBA_Identifier name;
  CORBA_RepositoryId id;
  CORBA_Container defined_in;
  CORBA_VersionSpec version;
  CORBA_OpDescriptionSeq operations;
  CORBA_AttrDescriptionSeq attributes;
  CORBA_RepositoryIdSeq base_interfaces;
  yotk* type;
};
CONST yotk* CORBA_InterfaceDef_FullInterfaceDescription__getTC(void);
#ifndef YCTC_CORBA_InterfaceDef_FullInterfaceDescription
#define YCTC_CORBA_InterfaceDef_FullInterfaceDescription   ( \
  CORBA_InterfaceDef_FullInterfaceDescription__getTC())
#endif
#endif /* CORBA_InterfaceDef_FullInterfaceDescription_DEFINED */

#ifndef CORBA_InterfaceDef_FullInterfaceDescription_SUPP_FUNCS
#define CORBA_InterfaceDef_FullInterfaceDescription_SUPP_FUNCS
void CORBA_InterfaceDef_FullInterfaceDescription__free( 
  CORBA_InterfaceDef_FullInterfaceDescription* val, ysmff ffunc);
void CORBA_InterfaceDef_FullInterfaceDescription__copy( 
  CORBA_InterfaceDef_FullInterfaceDescription* dest, 
  CORBA_InterfaceDef_FullInterfaceDescription* src, ysmaf afunc);
#endif /* CORBA_InterfaceDef_FullInterfaceDescription_SUPP_FUNCS */

CORBA_InterfaceDef_FullInterfaceDescription 
  CORBA_InterfaceDef_describe_interface( CORBA_InterfaceDef or, yoenv* ev);
yopar* CORBA_InterfaceDef_describe_interface__getPars(void);
#ifndef CORBA_InterfaceDef_describe_interface_pars
#define CORBA_InterfaceDef_describe_interface_pars ( \
  CORBA_InterfaceDef_describe_interface__getPars())
#endif

#ifndef CORBA_InterfaceDef__tyimpl_DEFINED
#define CORBA_InterfaceDef__tyimpl_DEFINED
struct CORBA_InterfaceDef__tyimpl
{
  boolean (*is_a)( CORBA_InterfaceDef, yoenv*, CORBA_RepositoryId);
  CORBA_InterfaceDef_FullInterfaceDescription (*describe_interface)( 
    CORBA_InterfaceDef, yoenv*);
  CORBA_InterfaceDefSeq (*_get_base_interfaces)( CORBA_InterfaceDef, yoenv*)
    ;
  CORBA_Contained (*lookup)( CORBA_InterfaceDef, yoenv*, CORBA_ScopedName);
  CORBA_ContainedSeq (*contents)( CORBA_InterfaceDef, yoenv*, 
    CORBA_DefinitionKind, boolean);
  CORBA_ContainedSeq (*lookup_name)( CORBA_InterfaceDef, yoenv*, 
    CORBA_Identifier, sb4, CORBA_DefinitionKind, boolean);
  CORBA_Container_DescriptionSeq (*describe_contents)( CORBA_InterfaceDef, 
    yoenv*, CORBA_DefinitionKind, boolean, sb4);
  CORBA_DefinitionKind (*_get_def_kind)( CORBA_InterfaceDef, yoenv*);
  CORBA_Contained_Description (*describe)( CORBA_InterfaceDef, yoenv*);
  CORBA_RepositoryId (*_get_id)( CORBA_InterfaceDef, yoenv*);
  CORBA_Identifier (*_get_name)( CORBA_InterfaceDef, yoenv*);
  CORBA_VersionSpec (*_get_version)( CORBA_InterfaceDef, yoenv*);
  CORBA_Container (*_get_defined_in)( CORBA_InterfaceDef, yoenv*);
  CORBA_ScopedName (*_get_absolute_name)( CORBA_InterfaceDef, yoenv*);
  CORBA_Repository (*_get_containing_repository)( CORBA_InterfaceDef, 
    yoenv*);
  yotk* (*_get_type)( CORBA_InterfaceDef, yoenv*);
};
#endif /* CORBA_InterfaceDef__tyimpl_DEFINED */

#ifndef CORBA_InterfaceDescription_DECLARED
#define CORBA_InterfaceDescription_DECLARED
typedef struct CORBA_InterfaceDescription CORBA_InterfaceDescription;
#endif /* CORBA_InterfaceDescription_DECLARED */

#ifndef CORBA_InterfaceDescription_DEFINED
#define CORBA_InterfaceDescription_DEFINED
struct CORBA_InterfaceDescription
{
  CORBA_Identifier name;
  CORBA_RepositoryId id;
  CORBA_Container defined_in;
  CORBA_VersionSpec version;
  CORBA_RepositoryIdSeq base_interfaces;
};
CONST yotk* CORBA_InterfaceDescription__getTC(void);
#ifndef YCTC_CORBA_InterfaceDescription
#define YCTC_CORBA_InterfaceDescription   ( \
  CORBA_InterfaceDescription__getTC())
#endif
#endif /* CORBA_InterfaceDescription_DEFINED */

#ifndef CORBA_InterfaceDescription_SUPP_FUNCS
#define CORBA_InterfaceDescription_SUPP_FUNCS
void CORBA_InterfaceDescription__free( CORBA_InterfaceDescription* val, 
  ysmff ffunc);
void CORBA_InterfaceDescription__copy( CORBA_InterfaceDescription* dest, 
  CORBA_InterfaceDescription* src, ysmaf afunc);
#endif /* CORBA_InterfaceDescription_SUPP_FUNCS */

EXTC_END
#endif /* YRCORBA_ORACLE */
