/* Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
 *
 * NAME
 *   yrprim.c - Implementation of CORBA::PrimitiveDef
 *
 * NOTES
 *
 * HISTORY
 * 12/05/95 kcoleman	__get_kind used def kind instead of prim kind. Duh.
 * 11/09/95 kcoleman    Creation
 */
 
#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif
 
#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif

#ifndef YRCORBAI_H
#include <yrcorbaI.h>
#endif
 
#ifndef YR_ORACLE
#include <yr.h>
#endif
 
#ifndef YOORB_ORACLE
#include <yoorb.h>
#endif
 
#ifndef YR0UTIL_ORACLE
#include <yr0util.h>
#endif

externdef ysidDecl(CORBA_PrimitiveDef_implid) = "ORA_PrimitiveDef";

/************************************************************************/
/* interface CORBA::PrimitiveDef */
/************************************************************************/
 
CORBA_DefinitionKind CORBA_PrimitiveDef__get_def_kind_i(
     CORBA_PrimitiveDef or, yoenv* ev)
{
  return CORBA_IRObject__get_def_kind_i( (CORBA_IRObject) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
yotk* CORBA_PrimitiveDef__get_type_i( CORBA_PrimitiveDef or, yoenv* ev)
{
  return CORBA_IDLType__get_type_i( (CORBA_IDLType) or, ev);
}
 
/* ---------------------------------------------------------------------- */
/*
 * CORBA::PrimitiveDef::kind
 *
 * The coupling between yrpk and CORBA::PrimitiveKind can't really safely
 * be a pass thru because we don't really control the values of
 * CORBA::PrimitiveKind. So, map one onto the other explicitly and we
 * won't get in trouble if we or CORBA extend things.
 */
 
CORBA_PrimitiveKind CORBA_PrimitiveDef__get_kind_i(
     CORBA_PrimitiveDef or, yoenv* ev)
{
  yrpk kind = yrPrimData( yrCORBAtoYR( (CORBA_IRObject) or)).kind;

  return yrpkToPrimKind( kind);
}
 
/* ---------------------------------------------------------------------- */
 
 
externdef struct CORBA_PrimitiveDef__tyimpl CORBA_PrimitiveDef__impl =
 {
  CORBA_PrimitiveDef__get_kind_i,
  CORBA_PrimitiveDef__get_type_i,
  CORBA_PrimitiveDef__get_def_kind_i
 };
 


/* ---------------------------------------------------------------------- */

void Init_CORBA_PrimitiveDef()
{
  YR_SET_IMPL(CORBA_PrimitiveDef, FALSE, 0);
  YR_IMPL_READY(CORBA_PrimitiveDef, 0);
}

void Term_CORBA_PrimitiveDef()
{
  YR_IMPL_DEACTIVATE(CORBA_PrimitiveDef);
}
