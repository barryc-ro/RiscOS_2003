/* GENERATED FILE
 * yrcorba - server skeleton header
 * from /home/alind/work/portkit/mn335/mx/pub/yrcorba.idl
 */

#ifndef YRCORBAI_ORACLE
#define YRCORBAI_ORACLE

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

#ifndef YRCORBA_ORACLE
#include <yrcorba.h>
#endif

EXTC_START

CORBA_DefinitionKind CORBA_IRObject__get_def_kind_i( CORBA_IRObject or, 
  yoenv* ev);
CORBA_Contained_Description CORBA_Contained_describe_i( CORBA_Contained or, 
  yoenv* ev);
CORBA_RepositoryId CORBA_Contained__get_id_i( CORBA_Contained or, yoenv* ev)
  ;
CORBA_Identifier CORBA_Contained__get_name_i( CORBA_Contained or, yoenv* ev)
  ;
CORBA_VersionSpec CORBA_Contained__get_version_i( CORBA_Contained or, 
  yoenv* ev);
CORBA_Container CORBA_Contained__get_defined_in_i( CORBA_Contained or, 
  yoenv* ev);
CORBA_ScopedName CORBA_Contained__get_absolute_name_i( CORBA_Contained or, 
  yoenv* ev);
CORBA_Repository CORBA_Contained__get_containing_repository_i( 
  CORBA_Contained or, yoenv* ev);
CORBA_DefinitionKind CORBA_Contained__get_def_kind_i( CORBA_Contained or, 
  yoenv* ev);
CORBA_Contained CORBA_Container_lookup_i( CORBA_Container or, yoenv* ev, 
  CORBA_ScopedName search_name);
CORBA_ContainedSeq CORBA_Container_contents_i( CORBA_Container or, yoenv* 
  ev, CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_ContainedSeq CORBA_Container_lookup_name_i( CORBA_Container or, 
  yoenv* ev, CORBA_Identifier search_name, sb4 levels_to_search, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_Container_DescriptionSeq CORBA_Container_describe_contents_i( 
  CORBA_Container or, yoenv* ev, CORBA_DefinitionKind limit_type, boolean 
  exclude_inherited, sb4 max_returned_objs);
CORBA_DefinitionKind CORBA_Container__get_def_kind_i( CORBA_Container or, 
  yoenv* ev);
yotk* CORBA_IDLType__get_type_i( CORBA_IDLType or, yoenv* ev);
CORBA_DefinitionKind CORBA_IDLType__get_def_kind_i( CORBA_IDLType or, 
  yoenv* ev);
CORBA_PrimitiveKind CORBA_PrimitiveDef__get_kind_i( CORBA_PrimitiveDef or, 
  yoenv* ev);
yotk* CORBA_PrimitiveDef__get_type_i( CORBA_PrimitiveDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_PrimitiveDef__get_def_kind_i( CORBA_PrimitiveDef 
  or, yoenv* ev);
CORBA_Contained CORBA_Repository_lookup_id_i( CORBA_Repository or, yoenv* 
  ev, CORBA_RepositoryId search_id);
CORBA_PrimitiveDef CORBA_Repository_get_primitive_i( CORBA_Repository or, 
  yoenv* ev, CORBA_PrimitiveKind kind);
CORBA_Contained CORBA_Repository_lookup_i( CORBA_Repository or, yoenv* ev, 
  CORBA_ScopedName search_name);
CORBA_ContainedSeq CORBA_Repository_contents_i( CORBA_Repository or, yoenv* 
  ev, CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_ContainedSeq CORBA_Repository_lookup_name_i( CORBA_Repository or, 
  yoenv* ev, CORBA_Identifier search_name, sb4 levels_to_search, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_Container_DescriptionSeq CORBA_Repository_describe_contents_i( 
  CORBA_Repository or, yoenv* ev, CORBA_DefinitionKind limit_type, boolean 
  exclude_inherited, sb4 max_returned_objs);
CORBA_DefinitionKind CORBA_Repository__get_def_kind_i( CORBA_Repository or, 
  yoenv* ev);
CORBA_Contained CORBA_ModuleDef_lookup_i( CORBA_ModuleDef or, yoenv* ev, 
  CORBA_ScopedName search_name);
CORBA_ContainedSeq CORBA_ModuleDef_contents_i( CORBA_ModuleDef or, yoenv* 
  ev, CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_ContainedSeq CORBA_ModuleDef_lookup_name_i( CORBA_ModuleDef or, 
  yoenv* ev, CORBA_Identifier search_name, sb4 levels_to_search, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_Container_DescriptionSeq CORBA_ModuleDef_describe_contents_i( 
  CORBA_ModuleDef or, yoenv* ev, CORBA_DefinitionKind limit_type, boolean 
  exclude_inherited, sb4 max_returned_objs);
CORBA_DefinitionKind CORBA_ModuleDef__get_def_kind_i( CORBA_ModuleDef or, 
  yoenv* ev);
CORBA_Contained_Description CORBA_ModuleDef_describe_i( CORBA_ModuleDef or, 
  yoenv* ev);
CORBA_RepositoryId CORBA_ModuleDef__get_id_i( CORBA_ModuleDef or, yoenv* ev)
  ;
CORBA_Identifier CORBA_ModuleDef__get_name_i( CORBA_ModuleDef or, yoenv* ev)
  ;
CORBA_VersionSpec CORBA_ModuleDef__get_version_i( CORBA_ModuleDef or, 
  yoenv* ev);
CORBA_Container CORBA_ModuleDef__get_defined_in_i( CORBA_ModuleDef or, 
  yoenv* ev);
CORBA_ScopedName CORBA_ModuleDef__get_absolute_name_i( CORBA_ModuleDef or, 
  yoenv* ev);
CORBA_Repository CORBA_ModuleDef__get_containing_repository_i( 
  CORBA_ModuleDef or, yoenv* ev);
yotk* CORBA_ConstantDef__get_type_i( CORBA_ConstantDef or, yoenv* ev);
CORBA_IDLType CORBA_ConstantDef__get_type_def_i( CORBA_ConstantDef or, 
  yoenv* ev);
yoany CORBA_ConstantDef__get_value_i( CORBA_ConstantDef or, yoenv* ev);
CORBA_Contained_Description CORBA_ConstantDef_describe_i( CORBA_ConstantDef 
  or, yoenv* ev);
CORBA_RepositoryId CORBA_ConstantDef__get_id_i( CORBA_ConstantDef or, 
  yoenv* ev);
CORBA_Identifier CORBA_ConstantDef__get_name_i( CORBA_ConstantDef or, 
  yoenv* ev);
CORBA_VersionSpec CORBA_ConstantDef__get_version_i( CORBA_ConstantDef or, 
  yoenv* ev);
CORBA_Container CORBA_ConstantDef__get_defined_in_i( CORBA_ConstantDef or, 
  yoenv* ev);
CORBA_ScopedName CORBA_ConstantDef__get_absolute_name_i( CORBA_ConstantDef 
  or, yoenv* ev);
CORBA_Repository CORBA_ConstantDef__get_containing_repository_i( 
  CORBA_ConstantDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_ConstantDef__get_def_kind_i( CORBA_ConstantDef 
  or, yoenv* ev);
CORBA_Contained_Description CORBA_TypedefDef_describe_i( CORBA_TypedefDef 
  or, yoenv* ev);
CORBA_RepositoryId CORBA_TypedefDef__get_id_i( CORBA_TypedefDef or, yoenv* 
  ev);
CORBA_Identifier CORBA_TypedefDef__get_name_i( CORBA_TypedefDef or, yoenv* 
  ev);
CORBA_VersionSpec CORBA_TypedefDef__get_version_i( CORBA_TypedefDef or, 
  yoenv* ev);
CORBA_Container CORBA_TypedefDef__get_defined_in_i( CORBA_TypedefDef or, 
  yoenv* ev);
CORBA_ScopedName CORBA_TypedefDef__get_absolute_name_i( CORBA_TypedefDef or,
   yoenv* ev);
CORBA_Repository CORBA_TypedefDef__get_containing_repository_i( 
  CORBA_TypedefDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_TypedefDef__get_def_kind_i( CORBA_TypedefDef or, 
  yoenv* ev);
yotk* CORBA_TypedefDef__get_type_i( CORBA_TypedefDef or, yoenv* ev);
CORBA_StructMemberSeq CORBA_StructDef__get_members_i( CORBA_StructDef or, 
  yoenv* ev);
CORBA_Contained_Description CORBA_StructDef_describe_i( CORBA_StructDef or, 
  yoenv* ev);
CORBA_RepositoryId CORBA_StructDef__get_id_i( CORBA_StructDef or, yoenv* ev)
  ;
CORBA_Identifier CORBA_StructDef__get_name_i( CORBA_StructDef or, yoenv* ev)
  ;
CORBA_VersionSpec CORBA_StructDef__get_version_i( CORBA_StructDef or, 
  yoenv* ev);
CORBA_Container CORBA_StructDef__get_defined_in_i( CORBA_StructDef or, 
  yoenv* ev);
CORBA_ScopedName CORBA_StructDef__get_absolute_name_i( CORBA_StructDef or, 
  yoenv* ev);
CORBA_Repository CORBA_StructDef__get_containing_repository_i( 
  CORBA_StructDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_StructDef__get_def_kind_i( CORBA_StructDef or, 
  yoenv* ev);
yotk* CORBA_StructDef__get_type_i( CORBA_StructDef or, yoenv* ev);
CORBA_Contained CORBA_StructDef_lookup_i( CORBA_StructDef or, yoenv* ev, 
  CORBA_ScopedName search_name);
CORBA_ContainedSeq CORBA_StructDef_contents_i( CORBA_StructDef or, yoenv* 
  ev, CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_ContainedSeq CORBA_StructDef_lookup_name_i( CORBA_StructDef or, 
  yoenv* ev, CORBA_Identifier search_name, sb4 levels_to_search, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_Container_DescriptionSeq CORBA_StructDef_describe_contents_i( 
  CORBA_StructDef or, yoenv* ev, CORBA_DefinitionKind limit_type, boolean 
  exclude_inherited, sb4 max_returned_objs);
yotk* CORBA_UnionDef__get_discriminator_type_i( CORBA_UnionDef or, yoenv* 
  ev);
CORBA_IDLType CORBA_UnionDef__get_discriminator_type_def_i( CORBA_UnionDef 
  or, yoenv* ev);
CORBA_UnionMemberSeq CORBA_UnionDef__get_members_i( CORBA_UnionDef or, 
  yoenv* ev);
CORBA_Contained_Description CORBA_UnionDef_describe_i( CORBA_UnionDef or, 
  yoenv* ev);
CORBA_RepositoryId CORBA_UnionDef__get_id_i( CORBA_UnionDef or, yoenv* ev);
CORBA_Identifier CORBA_UnionDef__get_name_i( CORBA_UnionDef or, yoenv* ev);
CORBA_VersionSpec CORBA_UnionDef__get_version_i( CORBA_UnionDef or, yoenv* 
  ev);
CORBA_Container CORBA_UnionDef__get_defined_in_i( CORBA_UnionDef or, yoenv* 
  ev);
CORBA_ScopedName CORBA_UnionDef__get_absolute_name_i( CORBA_UnionDef or, 
  yoenv* ev);
CORBA_Repository CORBA_UnionDef__get_containing_repository_i( 
  CORBA_UnionDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_UnionDef__get_def_kind_i( CORBA_UnionDef or, 
  yoenv* ev);
yotk* CORBA_UnionDef__get_type_i( CORBA_UnionDef or, yoenv* ev);
CORBA_Contained CORBA_UnionDef_lookup_i( CORBA_UnionDef or, yoenv* ev, 
  CORBA_ScopedName search_name);
CORBA_ContainedSeq CORBA_UnionDef_contents_i( CORBA_UnionDef or, yoenv* ev, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_ContainedSeq CORBA_UnionDef_lookup_name_i( CORBA_UnionDef or, yoenv* 
  ev, CORBA_Identifier search_name, sb4 levels_to_search, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_Container_DescriptionSeq CORBA_UnionDef_describe_contents_i( 
  CORBA_UnionDef or, yoenv* ev, CORBA_DefinitionKind limit_type, boolean 
  exclude_inherited, sb4 max_returned_objs);
CORBA_EnumMemberSeq CORBA_EnumDef__get_members_i( CORBA_EnumDef or, yoenv* 
  ev);
CORBA_Contained_Description CORBA_EnumDef_describe_i( CORBA_EnumDef or, 
  yoenv* ev);
CORBA_RepositoryId CORBA_EnumDef__get_id_i( CORBA_EnumDef or, yoenv* ev);
CORBA_Identifier CORBA_EnumDef__get_name_i( CORBA_EnumDef or, yoenv* ev);
CORBA_VersionSpec CORBA_EnumDef__get_version_i( CORBA_EnumDef or, yoenv* ev)
  ;
CORBA_Container CORBA_EnumDef__get_defined_in_i( CORBA_EnumDef or, yoenv* 
  ev);
CORBA_ScopedName CORBA_EnumDef__get_absolute_name_i( CORBA_EnumDef or, 
  yoenv* ev);
CORBA_Repository CORBA_EnumDef__get_containing_repository_i( CORBA_EnumDef 
  or, yoenv* ev);
CORBA_DefinitionKind CORBA_EnumDef__get_def_kind_i( CORBA_EnumDef or, 
  yoenv* ev);
yotk* CORBA_EnumDef__get_type_i( CORBA_EnumDef or, yoenv* ev);
CORBA_IDLType CORBA_AliasDef__get_original_type_def_i( CORBA_AliasDef or, 
  yoenv* ev);
CORBA_Contained_Description CORBA_AliasDef_describe_i( CORBA_AliasDef or, 
  yoenv* ev);
CORBA_RepositoryId CORBA_AliasDef__get_id_i( CORBA_AliasDef or, yoenv* ev);
CORBA_Identifier CORBA_AliasDef__get_name_i( CORBA_AliasDef or, yoenv* ev);
CORBA_VersionSpec CORBA_AliasDef__get_version_i( CORBA_AliasDef or, yoenv* 
  ev);
CORBA_Container CORBA_AliasDef__get_defined_in_i( CORBA_AliasDef or, yoenv* 
  ev);
CORBA_ScopedName CORBA_AliasDef__get_absolute_name_i( CORBA_AliasDef or, 
  yoenv* ev);
CORBA_Repository CORBA_AliasDef__get_containing_repository_i( 
  CORBA_AliasDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_AliasDef__get_def_kind_i( CORBA_AliasDef or, 
  yoenv* ev);
yotk* CORBA_AliasDef__get_type_i( CORBA_AliasDef or, yoenv* ev);
ub4 CORBA_StringDef__get_bound_i( CORBA_StringDef or, yoenv* ev);
yotk* CORBA_StringDef__get_type_i( CORBA_StringDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_StringDef__get_def_kind_i( CORBA_StringDef or, 
  yoenv* ev);
ub4 CORBA_SequenceDef__get_bound_i( CORBA_SequenceDef or, yoenv* ev);
yotk* CORBA_SequenceDef__get_element_type_i( CORBA_SequenceDef or, yoenv* 
  ev);
CORBA_IDLType CORBA_SequenceDef__get_element_type_def_i( CORBA_SequenceDef 
  or, yoenv* ev);
yotk* CORBA_SequenceDef__get_type_i( CORBA_SequenceDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_SequenceDef__get_def_kind_i( CORBA_SequenceDef 
  or, yoenv* ev);
ub4 CORBA_ArrayDef__get_length_i( CORBA_ArrayDef or, yoenv* ev);
yotk* CORBA_ArrayDef__get_element_type_i( CORBA_ArrayDef or, yoenv* ev);
CORBA_IDLType CORBA_ArrayDef__get_element_type_def_i( CORBA_ArrayDef or, 
  yoenv* ev);
yotk* CORBA_ArrayDef__get_type_i( CORBA_ArrayDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_ArrayDef__get_def_kind_i( CORBA_ArrayDef or, 
  yoenv* ev);
yotk* CORBA_ExceptionDef__get_type_i( CORBA_ExceptionDef or, yoenv* ev);
CORBA_StructMemberSeq CORBA_ExceptionDef__get_members_i( CORBA_ExceptionDef 
  or, yoenv* ev);
CORBA_Contained_Description CORBA_ExceptionDef_describe_i( 
  CORBA_ExceptionDef or, yoenv* ev);
CORBA_RepositoryId CORBA_ExceptionDef__get_id_i( CORBA_ExceptionDef or, 
  yoenv* ev);
CORBA_Identifier CORBA_ExceptionDef__get_name_i( CORBA_ExceptionDef or, 
  yoenv* ev);
CORBA_VersionSpec CORBA_ExceptionDef__get_version_i( CORBA_ExceptionDef or, 
  yoenv* ev);
CORBA_Container CORBA_ExceptionDef__get_defined_in_i( CORBA_ExceptionDef or,
   yoenv* ev);
CORBA_ScopedName CORBA_ExceptionDef__get_absolute_name_i( 
  CORBA_ExceptionDef or, yoenv* ev);
CORBA_Repository CORBA_ExceptionDef__get_containing_repository_i( 
  CORBA_ExceptionDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_ExceptionDef__get_def_kind_i( CORBA_ExceptionDef 
  or, yoenv* ev);
CORBA_Contained CORBA_ExceptionDef_lookup_i( CORBA_ExceptionDef or, yoenv* 
  ev, CORBA_ScopedName search_name);
CORBA_ContainedSeq CORBA_ExceptionDef_contents_i( CORBA_ExceptionDef or, 
  yoenv* ev, CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_ContainedSeq CORBA_ExceptionDef_lookup_name_i( CORBA_ExceptionDef or, 
  yoenv* ev, CORBA_Identifier search_name, sb4 levels_to_search, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_Container_DescriptionSeq CORBA_ExceptionDef_describe_contents_i( 
  CORBA_ExceptionDef or, yoenv* ev, CORBA_DefinitionKind limit_type, 
  boolean exclude_inherited, sb4 max_returned_objs);
yotk* CORBA_AttributeDef__get_type_i( CORBA_AttributeDef or, yoenv* ev);
CORBA_IDLType CORBA_AttributeDef__get_type_def_i( CORBA_AttributeDef or, 
  yoenv* ev);
CORBA_AttributeMode CORBA_AttributeDef__get_mode_i( CORBA_AttributeDef or, 
  yoenv* ev);
CORBA_Contained_Description CORBA_AttributeDef_describe_i( 
  CORBA_AttributeDef or, yoenv* ev);
CORBA_RepositoryId CORBA_AttributeDef__get_id_i( CORBA_AttributeDef or, 
  yoenv* ev);
CORBA_Identifier CORBA_AttributeDef__get_name_i( CORBA_AttributeDef or, 
  yoenv* ev);
CORBA_VersionSpec CORBA_AttributeDef__get_version_i( CORBA_AttributeDef or, 
  yoenv* ev);
CORBA_Container CORBA_AttributeDef__get_defined_in_i( CORBA_AttributeDef or,
   yoenv* ev);
CORBA_ScopedName CORBA_AttributeDef__get_absolute_name_i( 
  CORBA_AttributeDef or, yoenv* ev);
CORBA_Repository CORBA_AttributeDef__get_containing_repository_i( 
  CORBA_AttributeDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_AttributeDef__get_def_kind_i( CORBA_AttributeDef 
  or, yoenv* ev);
yotk* CORBA_OperationDef__get_result_i( CORBA_OperationDef or, yoenv* ev);
CORBA_IDLType CORBA_OperationDef__get_result_def_i( CORBA_OperationDef or, 
  yoenv* ev);
CORBA_ParDescriptionSeq CORBA_OperationDef__get_params_i( 
  CORBA_OperationDef or, yoenv* ev);
CORBA_OperationMode CORBA_OperationDef__get_mode_i( CORBA_OperationDef or, 
  yoenv* ev);
CORBA_ExceptionDefSeq CORBA_OperationDef__get_exceptions_i( 
  CORBA_OperationDef or, yoenv* ev);
CORBA_ContextIdSeq CORBA_OperationDef__get_contexts_i( CORBA_OperationDef 
  or, yoenv* ev);
CORBA_Contained_Description CORBA_OperationDef_describe_i( 
  CORBA_OperationDef or, yoenv* ev);
CORBA_RepositoryId CORBA_OperationDef__get_id_i( CORBA_OperationDef or, 
  yoenv* ev);
CORBA_Identifier CORBA_OperationDef__get_name_i( CORBA_OperationDef or, 
  yoenv* ev);
CORBA_VersionSpec CORBA_OperationDef__get_version_i( CORBA_OperationDef or, 
  yoenv* ev);
CORBA_Container CORBA_OperationDef__get_defined_in_i( CORBA_OperationDef or,
   yoenv* ev);
CORBA_ScopedName CORBA_OperationDef__get_absolute_name_i( 
  CORBA_OperationDef or, yoenv* ev);
CORBA_Repository CORBA_OperationDef__get_containing_repository_i( 
  CORBA_OperationDef or, yoenv* ev);
CORBA_DefinitionKind CORBA_OperationDef__get_def_kind_i( CORBA_OperationDef 
  or, yoenv* ev);
boolean CORBA_InterfaceDef_is_a_i( CORBA_InterfaceDef or, yoenv* ev, 
  CORBA_RepositoryId interface_id);
CORBA_InterfaceDef_FullInterfaceDescription 
  CORBA_InterfaceDef_describe_interface_i( CORBA_InterfaceDef or, yoenv* ev)
  ;
CORBA_InterfaceDefSeq CORBA_InterfaceDef__get_base_interfaces_i( 
  CORBA_InterfaceDef or, yoenv* ev);
CORBA_Contained CORBA_InterfaceDef_lookup_i( CORBA_InterfaceDef or, yoenv* 
  ev, CORBA_ScopedName search_name);
CORBA_ContainedSeq CORBA_InterfaceDef_contents_i( CORBA_InterfaceDef or, 
  yoenv* ev, CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_ContainedSeq CORBA_InterfaceDef_lookup_name_i( CORBA_InterfaceDef or, 
  yoenv* ev, CORBA_Identifier search_name, sb4 levels_to_search, 
  CORBA_DefinitionKind limit_type, boolean exclude_inherited);
CORBA_Container_DescriptionSeq CORBA_InterfaceDef_describe_contents_i( 
  CORBA_InterfaceDef or, yoenv* ev, CORBA_DefinitionKind limit_type, 
  boolean exclude_inherited, sb4 max_returned_objs);
CORBA_DefinitionKind CORBA_InterfaceDef__get_def_kind_i( CORBA_InterfaceDef 
  or, yoenv* ev);
CORBA_Contained_Description CORBA_InterfaceDef_describe_i( 
  CORBA_InterfaceDef or, yoenv* ev);
CORBA_RepositoryId CORBA_InterfaceDef__get_id_i( CORBA_InterfaceDef or, 
  yoenv* ev);
CORBA_Identifier CORBA_InterfaceDef__get_name_i( CORBA_InterfaceDef or, 
  yoenv* ev);
CORBA_VersionSpec CORBA_InterfaceDef__get_version_i( CORBA_InterfaceDef or, 
  yoenv* ev);
CORBA_Container CORBA_InterfaceDef__get_defined_in_i( CORBA_InterfaceDef or,
   yoenv* ev);
CORBA_ScopedName CORBA_InterfaceDef__get_absolute_name_i( 
  CORBA_InterfaceDef or, yoenv* ev);
CORBA_Repository CORBA_InterfaceDef__get_containing_repository_i( 
  CORBA_InterfaceDef or, yoenv* ev);
yotk* CORBA_InterfaceDef__get_type_i( CORBA_InterfaceDef or, yoenv* ev);

EXTC_END
#endif /* YRCORBAI_ORACLE */
