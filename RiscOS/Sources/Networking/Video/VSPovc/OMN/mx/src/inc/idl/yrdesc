//////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995 by Oracle Corporation. All Rights Reserved.
//
// NAME
// yrdesc.idl - IDL interface to IFR Object Descriptions
//
// NOTES
// This is a cheap interface to the information provided by the CORBA 2.0
// IFR spec in the form of various interfaces (InterfaceDef, ConstantDef,
// etc.). All this information is available as attributes and operations
// on the various IFR objects, but yrDesc batches all the data up so it
// can be retrieved via a single call to yrObject::describe.
//
// The CORBA spec'd interface can readily be implemented on top of this.
//
// HISTORY
// 10/13/95 kcoleman    Creation
//////////////////////////////////////////////////////////////////////////

#ifndef YRDESC_IDL_ORACLE
#define YRDESC_IDL_ORACLE

#ifndef YOSTD_ORACLE
#include "yostd"
#endif

#ifndef YRTYPES_IDL_ORACLE
#include "yrtypes"
#endif

/////
// Forward declarations
/////
interface yrType;


// =====================================================================
// yrBriefDesc - Minimal IFR object description
//
//   This type has no CORBA equivalent, per se. It encapsulates that
//   portion of an object description that is shared by all named entities
//   and therefore covers some aspects of CORBA::Contained::Description.
// =====================================================================

struct yrBriefDesc      // for when you only want to know the minimum
{
  string name;          // simple name, e.g. for "a::b" it is "b"
  yrid id;              // id of this object
  yrid defined_in;      // defining container
  yrvers version;
};


// =====================================================================
// yrStructMbr - Description of a structure member
//
//   Equivalent to CORBA::StructMember.
// =====================================================================

struct yrStructMbr
{
  string name;
  TypeCode type;        // TypeCode of <type_def>
  yrType type_def;
};
typedef sequence <yrStructMbr> yrStructMbrSeq;


// =====================================================================
// yrStructDesc - Description of a structure type
//
//   This type has no CORBA equivalent. CORBA::TypeDescription is used.
// =====================================================================

struct yrStructDesc
{
  yrBriefDesc brief;
  TypeCode type;
  yrStructMbrSeq mbrs;
};


// =====================================================================
// yrExceptDesc - Description of an exception
//
//   This type has no CORBA equivalent. CORBA::TypeDescription is used.
// =====================================================================

typedef yrStructDesc yrExceptDesc;
typedef sequence <yrExceptDesc> yrExceptDescSeq;


// =====================================================================
// yrUnionMbr - Description of one arm of a union.
//
//   Equivalent to CORBA::UnionMember.
// =====================================================================

struct yrUnionMbr
{
  string name;
  any label;
  TypeCode type;
  yrType type_def;
};
typedef sequence <yrUnionMbr> yrUnionMbrSeq;


// =====================================================================
// yrUnionDesc - Description of a union type
//
//   This type has no CORBA equivalent. CORBA::TypeDescription is used.
// =====================================================================

struct yrUnionDesc
{
  yrBriefDesc brief;
  TypeCode type;
  yrType disctype;
  yrUnionMbrSeq arms;
};


// =====================================================================
// yrConstDesc - Description of a constant.
//
//   Equivalent to CORBA::ConstantDescription.
// =====================================================================

struct yrConstDesc
{
  yrBriefDesc brief;
  TypeCode type;
  any value;
};


// =====================================================================
// yrParmDesc - Description of an interface operation parameter.
//
//   Equivalent to CORBA::ParameterDescription.
// =====================================================================

struct yrParmDesc
{
  string name;
  TypeCode type;
  yrType type_def;
  yomode mode;
};
typedef sequence <yrParmDesc> yrParmDescSeq;


// =====================================================================
// yrAttrDesc - Description of an interface attribute
//
//   Equivalent to CORBA::AttributeDescription.
// =====================================================================

struct yrAttrDesc
{
  yrBriefDesc brief;
  TypeCode type;
  yrAttrMode mode;
};
typedef sequence <yrAttrDesc> yrAttrDescSeq;


// =====================================================================
// yrOpDesc - Description of an interface operation
//
//   Equivalent to CORBA::OperationDescription.
// =====================================================================

struct yrOpDesc
{
  yrBriefDesc brief;
  TypeCode result;
  yrOpMode mode;
  yrParmDescSeq parameters;
  yrExceptDescSeq exceptions;
};
typedef sequence <yrOpDesc> yrOpDescSeq;


// =====================================================================
// yrIntfDesc - Description of an interface
//
//   Equivalent to CORBA::InterfaceDef::FullInterfaceDescription. We do 
//   not have an equivalent to CORBA::InterfaceDescription.
// =====================================================================

struct yrIntfDesc
{
  yrBriefDesc brief;
  yrOpDescSeq operations;
  yrAttrDescSeq attributes;
  yridSeq base_interfaces;
  TypeCode type;
};


// =====================================================================
// yrStringDesc - Description of a string
//
//   This type has no CORBA equivalent.
// =====================================================================

struct yrStringDesc
{
  ub4 bound;
  TypeCode type;
};


// =====================================================================
// yrArrayDesc - Description of an array
//
//   This type has no CORBA equivalent.
// =====================================================================

struct yrArrayDesc
{
  ub4 length;
  yrType element_type;
  TypeCode type;
};


// =====================================================================
// yrSeqDesc - Description of a sequence
//
//   This type has no CORBA equivalent.
// =====================================================================

struct yrSeqDesc
{
  ub4 bound;
  yrType element_type;
  TypeCode type;
};


// =====================================================================
// yrAliasDesc - Description of a typedef
//
//   This type has no CORBA equivalent. CORBA::TypeDescription is used.
// =====================================================================

struct yrAliasDesc
{
  yrType base_type;
  TypeCode type;
};


// =====================================================================
// yrEnumDesc - Description of an enumeration type
//
//   We deviate from CORBA in that the enumeration literals are
//   represented as a sequence of constants, rather than just a
//   list of names.
// 
//   This type has no CORBA equivalent. CORBA::TypeDescription is used.
// =====================================================================

typedef sequence <yrConstDesc> yrEnumMbrDescSeq;
struct yrEnumDesc
{
  yrBriefDesc brief;
  TypeCode type;
  yrEnumMbrDescSeq mbrs;
};


// =====================================================================
// yrPrimDesc - Description of a primitive type (long, unsigned, etc.)
//
//   This type has no CORBA equivalent. 
// =====================================================================

struct yrPrimDesc
{
  yrpk kind;
  TypeCode type;
};


// =====================================================================
// yrDesc - Full IFR object description
//
//   This type has no CORBA equivalent, per se. It is in some respects
//   a combination of CORBA::Contained::Description and all the
//   specializations thereof. We combine it all into one type so that
//   all the information can be retrieved in one call and save us one or
//   more network trips.
// =====================================================================

union yrDesc switch (yrdk)
{
  case yrdkAttribute:
    yrAttrDesc attval;
  case yrdkConstant:
    yrConstDesc cval;
  case yrdkStruct:
    yrStructDesc sval;
  case yrdkException:
    yrExceptDesc exval;
  case yrdkInterface:
    yrIntfDesc intfval;
  case yrdkOperation:
    yrOpDesc opval;
  case yrdkAlias:
    yrAliasDesc aval;
  case yrdkUnion:
    yrUnionDesc uval;
  case yrdkEnum:
    yrEnumDesc eval;
  case yrdkPrimitive:
    yrPrimDesc pval;
  case yrdkString:
    yrStringDesc strval;
  case yrdkSequence:
    yrSeqDesc seqval;
  case yrdkArray:
    yrArrayDesc arrval;
  case yrdkModule:
    yrBriefDesc brief;
  default:
    ub4 dummy;
};
typedef sequence <yrDesc> yrDescSeq;

#endif /* YRDESC_IDL_ORACLE */
