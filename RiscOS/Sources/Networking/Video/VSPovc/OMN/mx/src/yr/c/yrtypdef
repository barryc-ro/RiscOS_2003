/* Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
 *
 * NAME
 *   yrtypdef.c - Implementation of CORBA::TypedefDef
 *
 * NOTES
 * This is an abstract base class representing named non-interface types 
 * (struct, union, enum, alias). The operation and attribute implementations
 * may be called directly by the derived interface implementations, but
 * this implementation should never be activated directly.
 *
 * HISTORY
 * 11/09/95 kcoleman    Creation
 */
 
#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif
 
#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif

#ifndef YRCORBAI_H
#include <yrcorbaI.h>
#endif
 
#ifndef YR_ORACLE
#include <yr.h>
#endif
 
#ifndef YOORB_ORACLE
#include <yoorb.h>
#endif
 
#ifndef YR0UTIL_ORACLE
#include <yr0util.h>
#endif

externdef ysidDecl(CORBA_TypedefDef_implid) = "ORA_TypedefDef";


/************************************************************************/
/* Interface CORBA::TypedefDef */
/************************************************************************/
 
CORBA_Contained_Description CORBA_TypedefDef_describe_i(
     CORBA_TypedefDef or, yoenv* ev)
{
    /* Must be reimplemented by the derived interfaces */
  CORBA_Contained_Description dummy = {CORBA_dk_none, {0,0}};

  yseThrow( YR_EX_UNIMPLEMENTED);
  return dummy;            /* unreachable, but stops compiler warnings */
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_DefinitionKind CORBA_TypedefDef__get_def_kind_i(
     CORBA_TypedefDef or, yoenv* ev)
{
  return CORBA_IRObject__get_def_kind_i( (CORBA_IRObject) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_RepositoryId CORBA_TypedefDef__get_id_i( CORBA_TypedefDef or, yoenv* ev)
{
  return CORBA_Contained__get_id_i( (CORBA_Contained) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_Identifier CORBA_TypedefDef__get_name_i( CORBA_TypedefDef or, yoenv* ev)
{
  return CORBA_Contained__get_name_i( (CORBA_Contained)or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_VersionSpec CORBA_TypedefDef__get_version_i(
     CORBA_TypedefDef or, yoenv* ev)
{
  return CORBA_Contained__get_version_i( (CORBA_Contained) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_Container CORBA_TypedefDef__get_defined_in_i(
     CORBA_TypedefDef or, yoenv* ev)
{
  return CORBA_Contained__get_defined_in_i( (CORBA_Contained) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_ScopedName CORBA_TypedefDef__get_absolute_name_i(
     CORBA_TypedefDef or, yoenv* ev)
{
  return CORBA_Contained__get_absolute_name_i( (CORBA_Contained) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
CORBA_Repository CORBA_TypedefDef__get_containing_repository_i(
     CORBA_TypedefDef or, yoenv* ev)
{
  return CORBA_Contained__get_containing_repository_i((CORBA_Contained)or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
yotk* CORBA_TypedefDef__get_type_i( CORBA_TypedefDef or, yoenv* ev)
{
  return CORBA_IDLType__get_type_i( (CORBA_IDLType) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
 
externdef struct CORBA_TypedefDef__tyimpl CORBA_TypedefDef__impl =
 {
  CORBA_TypedefDef_describe_i,
  CORBA_TypedefDef__get_id_i,
  CORBA_TypedefDef__get_name_i,
  CORBA_TypedefDef__get_version_i,
  CORBA_TypedefDef__get_defined_in_i,
  CORBA_TypedefDef__get_absolute_name_i,
  CORBA_TypedefDef__get_containing_repository_i,
  CORBA_TypedefDef__get_def_kind_i,
  CORBA_TypedefDef__get_type_i
 };
 


/* ---------------------------------------------------------------------- */

void Init_CORBA_TypedefDef()
{
  YR_SET_IMPL(CORBA_TypedefDef, FALSE, 0);
  YR_IMPL_READY(CORBA_TypedefDef, 0);
}

void Term_CORBA_TypedefDef()
{
  YR_IMPL_DEACTIVATE(CORBA_TypedefDef);
}
