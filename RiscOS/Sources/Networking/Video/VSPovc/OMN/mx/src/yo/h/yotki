/* Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
 *
 * yotki.h - Internal typecode manipulation operations
 */

#ifndef YOTKI_ORACLE
#define YOTKI_ORACLE

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef YS_ORACLE
#include <ys.h>
#endif
#ifndef YOTK_ORACLE
#include <yotk.h>
#endif
#ifndef YOSX_ORACLE
#include <yosx.h>
#endif

void yotkUnionArmsSz(ub4 arms, size_t dsz, yosx *x, size_t *sz, size_t *align);
void yotkCollDecomp(const yotk *tk, const yotk **etk, ub4* bounds);

/*
 * yotkInitStream
 *
 * Set up a yosx "unmarshalling" stream for walking through a typecode.
 * The buffer vector and yosx should be allocated by the caller.
 */
void yotkInitStream(yosx *x, const yotk *tk, ysbv *bv);

/*
 * yotkxSkipToBuffer
 *
 * Skip over kind, length, and byte sex at the beginning of a typecode.
 * Stream will be positioned at the real meat of the TC after this call.
 */
void yotkxSkipToBuffer(yosx *x);

/*
 * yotkxSkipString
 *
 * void yotkxSkipString(yosx *x);
 *
 * Skip over a string. Strings are laid down as a 4 byte length follwed
 * by that many bytes of character data.
 */
#define yotkxSkipString(x) (yosxSkip((x), (size_t)yosxGetNetUB4((x))))

/*
 * yotkxSkipTC
 *
 * void yotkxSkipTC(yosx *x);
 *
 * Skip over a typecode in a yosx stream. Pick up the length and skip
 * that many bytes.
 */
#define yotkxSkipTC(x) \
        (yosxAlign((x),4), yosxSkip((x), (size_t)yotkSize((x)->ptr)))

/*
 * yotkxSkipToBuffer
 *
 * Skip over kind, length, and byte sex at the beginning of a typecode.
 * Stream must be positioned at the start of a typecode before this call.
 * Stream will be positioned at the real meat of the TC after this call.
 */
#define yotkxSkipToBuffer(x) (yosxSkip((x),(size_t)9))

/*
 * yotkxSkipByteSex
 *
 * ub1 *yotkSkipByteSex(ub1 *buf);
 *
 * Skip byte sex byte in a typecode header.
 */
#define yotkxSkipByteSex(x) (yosxSkip((x), (size_t)1))

/*
 * yotkGetBuffer
 *
 * ub1 *yotkGetBuffer(yotk *tk);
 *
 * Returns the offset of the complex parameter of a typecode. Only
 * valid for structs, exceptions, unions and enums.
 */
#define yotkGetBuffer(tk) ((ub1 *) (((ub1 *)tk) + 8))


#define YOTKG_SIZE 512

void yotkgPutStr(yosx *x, const char *str);
yotk *yotkgGenTk(ysmhp *hp, yosx *x);

#endif /* YOTKI_ORACLE */
