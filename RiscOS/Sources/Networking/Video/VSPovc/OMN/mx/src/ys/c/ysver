/* Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
 *
 * ysver.c - OMN Version Management
 */

#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YS_ORACLE
#include <ys.h>
#endif
#ifndef YSFMT_ORACLE
#include <ysfmt.h>
#endif

/*
 * Version Number Definitions
 *
 * The YS_VERSION and YS_STATUS symbols must be updated before a
 * base code freeze to reflect the correct version and status of
 * the freeze.  The YSI_VERSION symbol must be defined to refer
 * to a SYSI_VERSION symbol with the current version appended as
 * illustrated below, and YS_STATUS must be defined similarly.
 * See sysi.h for more information.
 */
#define YS_VERSION   "3.3.5"

#ifdef SYSI_VERSION_3_3_5
#define YSI_VERSION  SYSI_VERSION_3_3_5
#else
#define YSI_VERSION  "0.0"
#endif

#ifdef SYSI_STATUS_3_3_5
#define YS_STATUS    SYSI_STATUS_3_3_5
#else
#define YS_STATUS    YSLVL_PROD
#endif

/*
 * ysVersion - version of OMN
 */
char *ysVersion(char *buf, size_t len)
{
  char vbuf[80];

  DISCARD sprintf(vbuf, "%s.%s", YS_VERSION, YSI_VERSION);
  return ysFmtVersion(buf, len, "Oracle Media Net", vbuf, YS_STATUS, __DATE__);
}

/*
 * ysFmtVersion - format a conventional version line
 */
char *ysFmtVersion(char *buf, size_t buflen,
		   CONST char *prodnm, CONST char *vrs, sword sts,
		   CONST char *date)
{
  CONST char *lvl;

  switch (sts)
    {
    case YSLVL_DEVEL: lvl = "Development"; break;
    case YSLVL_DEVRL: lvl = "Developer's Release"; break;
    case YSLVL_ALPHA: lvl = "Alpha"; break;
    case YSLVL_BETA:  lvl = "Beta"; break;
    case YSLVL_LIMIT: lvl = "Limited Production"; break;
    case YSLVL_PROD:  lvl = "Production"; break;
    default: lvl = ""; break;
    }

  if (date)
    ysFmtStrl(buf, buflen, "%s Release %s - %s (built: %s)", prodnm, vrs, lvl,
	      date);
  else
    ysFmtStrl(buf, buflen, "%s Release %s - %s", prodnm, vrs, lvl);
    
  return buf;
}
