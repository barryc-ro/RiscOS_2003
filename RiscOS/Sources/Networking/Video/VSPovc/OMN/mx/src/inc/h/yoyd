/* Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
 *
 * yoyd.h - Oracle Object Runtime Layer Interface for ORBD (yd)
 */

#ifndef YOYD_ORACLE
#define YOYD_ORACLE

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif

EXTC_START

#ifndef YS_ORACLE
#include <ys.h>
#endif
#ifndef YSX_ORACLE
#include <ysx.h>
#endif
#ifndef YSV_ORACLE
#include <ysv.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif
#ifndef YT_ORACLE
#include <yt.h>
#endif
#ifndef YOI_ORACLE
#include <yoi.h>
#endif

/* 
 * yoInitRouter - start request routing
 *
 * DESCRIPTION
 * Creates an ORBD "routing" port.  Requests received on this port are placed
 * on the specified event queue.  The object reference specified should be
 * that of the ORBD IMR.  The specified handler is invoked when the
 * event is dequeued.  The handler is expected to examine the request and
 * forward it via yoFwdRequest().  The handler will be passed a pointer to
 * a yore.
 * 
 */
typedef struct yore yore;
struct yore
{
  dvoid *srcref;                             /* source YORT object reference */
  dvoid *dstref;                                 /* destination process YORT */
  dvoid *usrp;                                      /* user supplied pointer */
  yoreqh hdr;                                              /* request header */
  dvoid *req;                                           /* handle to request */
};
void yoInitRouter(dvoid *ref, ysque *q, ysHndlr hdlr, dvoid *usrp);
void yoTermRouter(void);

/* 
 * yoFwdRequest - forward a request to a specified address
 *
 * DESCRIPTION
 * Forwards the specified request.
 *
 */
void yoFwdRequest(yore *re, ysevt *evt);

/*
 * yoRejRequest - return request to sender
 *
 * DESCRIPTION
 * Returns the specified request to the originator
 *
 */
void yoRejRequest(yore *re);

/* 
 * yoFreeRouteReq - frees data associated with a route request
 *
 * DESCRIPTION
 * Frees memory
 *
 */
void yoFreeRouteReq(yore *re);

/*
 * yoListORBDs - create a list of all registered ORBDs
 *
 * DESCRIPTION
 * Queries the central registry of ORBD's.  Returns a list of object
 * ORBD IMR references.
 */
yslst *yoListORBDs(void);

/* private stuff */
#define yoYort() yoDuplicate((dvoid *)(yoCtx->yort))
#define yoYortBind(intf,impl,yort) \
  (dvoid *)yoRefCreate(yoCtx,(intf),(impl),(yoRefData *)0,YOSTID_INV,\
               yotAddrDup(((yoo *)(yort))->addr),(dvoid*)0,FALSE)
                                 
EXTC_END

#endif

