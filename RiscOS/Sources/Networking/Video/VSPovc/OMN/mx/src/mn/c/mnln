/* Copyright (c) 1994 by Oracle Corporation.  All Rights Reserved.
 *
 * NAME
 * mnln.c - Media Net Name Server Make Alias Utility
 *
 * REVISIONS
 * jolkin    12/08/94  Creation
 * dbrower   06/27/95  convert to new main.
 */

#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef MTL_ORACLE
#include <mtl.h>
#endif
#ifndef MN_ORACLE
#include <mn.h>
#endif
#ifndef MZN_ORACLE
#include <mzn.h>
#endif
#ifndef YSR_ORACLE
#include <ysr.h>
#endif

#ifndef MTL_ORACLE
#include <mtl.h>
#endif

#ifndef SMNI_ORACLE
#include <smni.h>
#endif

static struct ysargmap mnlnArgs[] =
{
  { 'g', "mn.sync-gateway", 1 },
  { YSARG_PARAM, "mnln.path-name", 1 },
  { YSARG_PARAM, "mnln.alias-name", 1 },
  { 0 }
};

boolean mnln(dvoid *osdCtx, const char *nm, sword argc, char **argv)
{
  sb4 sts;
  char *name, *alias;
  char  vbuf[80];

  sts = ysArgParse( argc, argv, mnlnArgs );
  if (sts == YSARG_VERSION)
    yslError(ysVersion(vbuf, sizeof(vbuf)));
  if (sts != YSARG_NORMAL)
    return FALSE;

  name = ysResGetLast( "mnln.path-name" );
  alias = ysResGetLast( "mnln.alias-name" );

  if( !smniInit( osdCtx, (mnLogger)0 ) )
    return( FALSE );

  if( !name || !alias )
  {
    yslError("Must specify name and new alias");
    return( FALSE );
  }

  sts = mznMakeAlias( name, alias );

  if (sts < 0)
    yslError(mnError(sts));

  mnTerm();
  return( sts == 0 );
}
