/* Copyright (c) 1995 by Oracle Corporation.  All Rights Reserved.
 *
 * NAME
 *   yridltyp.c - Implementation of CORBA::IDLType
 *
 * NOTES
 * Strictly an abstract base class for things which signify types
 * (structs, unions, enums, primitives, strings, sequences, arrays,
 * interfaces, aliases), named or otherwise. This operation and
 * attribute implementations may be invoked directly by the derived
 * interfaces, but this implementation in never active itself.
 *
 * HISTORY
 * 11/09/95 kcoleman    Creation
 */
 
#ifndef SYSI_ORACLE
#include <sysi.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif
 
#ifndef YOCOA_ORACLE
#include <yocoa.h>
#endif

#ifndef YRCORBAI_H
#include <yrcorbaI.h>
#endif
 
#ifndef YR_ORACLE
#include <yr.h>
#endif
 
#ifndef YOORB_ORACLE
#include <yoorb.h>
#endif
 
#ifndef YR0UTIL_ORACLE
#include <yr0util.h>
#endif

externdef ysidDecl(CORBA_IDLType_implid) = "ORA_IDLType";

/************************************************************************/
/* Interface CORBA::IDLType */
/************************************************************************/
 
CORBA_DefinitionKind CORBA_IDLType__get_def_kind_i(
     CORBA_IDLType or, yoenv* ev)
{
  return CORBA_IRObject__get_def_kind_i( (CORBA_IRObject) or, ev);
}
 
/* ---------------------------------------------------------------------- */
 
yotk* CORBA_IDLType__get_type_i( CORBA_IDLType or, yoenv* ev)
{
  return yrCopyTypeCode( yrCORBAtoYR( (CORBA_IRObject) or));
}
 
 
/* ---------------------------------------------------------------------- */
 
externdef struct CORBA_IDLType__tyimpl CORBA_IDLType__impl =
 {
  CORBA_IDLType__get_type_i,
  CORBA_IDLType__get_def_kind_i
 };
 



/* ---------------------------------------------------------------------- */

void Init_CORBA_IDLType()
{
  YR_SET_IMPL(CORBA_IDLType, FALSE, 0);
  YR_IMPL_READY(CORBA_IDLType, 0);
}

void Term_CORBA_IDLType()
{
  YR_IMPL_DEACTIVATE(CORBA_IDLType);
}
