/* Copyright (c) Oracle Corporation 1996.  All Rights Reserved. */

/*
  NAME
    yorc5.h
  DESCRIPTION
    
    Interface to RC5 encryption for use by YO.

  PUBLIC FUNCTIONS

    yorc5Init
    yorc5Term
    yorc5Encrypt
    yorc5Decrypt

  MODIFIED   (MM/DD/YY)
    dbrower   12/ 9/96 -  created.
*/

#ifndef YORC5_ORACLE
#define YORC5_ORACLE

#ifndef SYSI_ORACLE
#include <sysi.h>
#endif

/* PUBLIC TYPES AND CONSTANTS */

typedef struct yorc5cx yorc5cx;

/* PUBLIC FUNCTIONS */

/* ---------------------------- yorc5Init ---------------------------- */
/*
  NAME
    yorc5Init
  DESCRIPTION
    Prepare to do rc5 encryption, setting a permanent key for this
    context.

    The actual number of bits may be truncated because of export legalities.

    May throw YO_EX_CRYPTO_ERR.

  PARAMETERS
    key		-- the key bits to use.
    keybytes	-- the number of bytes in key.  
  RETURNS
    pointer to a context to hand in to other calls.
*/
yorc5cx *yorc5Init( ub1 *key, sword keybytes );

/* ---------------------------- yorc5Term ---------------------------- */
/*
  NAME
    yorc5Term
  DESCRIPTION
    Dispose a yorc5 context.
  PARAMETERS
    cx	    -- context from previous call to yorc5Init.
  RETURNS
    none
*/
void yorc5Term( yorc5cx *cx );

/* ---------------------------- yorc5Encrypt ---------------------------- */
/*
  NAME
    yorc5Encrypt
  DESCRIPTION
    Do rc5 encryption.  The initialization vector is filled with a random
    value used to encrypt all the input buffer vectors.  Buffers for
    the new output vector are allocated with the supplied allocator.

    There will be exactly as many output buffers as were input, of the
    same size.  The input buffers must be multiples 8 in size, which is
    the rc5 block size.

    All errors throw exceptions.  Input block size improper throws BADPARAM,
    everything else throws YO_EX_CRYPTO_ERR.
    
    It's up to the caller to free the output vectors.
    
  PARAMETERS
    cx	    -- yorc5cx, containing the key information.
    iv1	    -- the high part of the initialization vector to use [OUT]
    iv2	    -- the low part of  initialization vector to use [OUT]
    ibv	    -- input buffer vectors.
    nibvs   -- number of inputs
    obv	    -- output buffer vectors, at least nibvs.
    hp	    -- heap to use to fill in obv.
  RETURNS
    none
*/
void yorc5Encrypt(yorc5cx *cx, ub4 *iv1, ub4 *iv2,
		  ysbv *ibv, sword nibvs,
		  ysbv *obv, ysmhp *hp );


/* ---------------------------- yorc5Decrypt ---------------------------- */
/*
  NAME
    yorc5Decrypt
  DESCRIPTION
    Do rc5 decryption.  The initialization vector is used to setup
    the decryption of all the input buffer vectors.  Buffers for
    the new output vector are allocated with the supplied allocator.

    There will be exactly as many output buffers as were input, of the
    same size.  The input buffers must be multiples 8 in size, which is
    the rc5 block size.

    All errors throw exceptions.  Input block size improper throws BADPARAM,
    everything else throws YO_EX_CRYPTO_ERR.
    
    It's up to the caller to free the output vectors.

  PARAMETERS
    cx	    -- yorc5cx, containing the key information.
    iv1	    -- the high part of the initialization vector to use
    iv2	    -- the low part of  initialization vector to use
    ibv	    -- input buffer vectors.
    nibvs   -- number of inputs
    obv	    -- output buffer vectors, at least nibvs.
    hp	    -- heap to use to fill in obv.
  RETURNS
    none
*/

void yorc5Decrypt( yorc5cx *cx, ub4 iv1, ub4 iv2,
		  ysbv *ibv, sword ibvs,
		  ysbv *obv, ysmhp *hp );

#endif

