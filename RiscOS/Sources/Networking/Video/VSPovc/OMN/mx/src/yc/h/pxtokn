/*
 * $Header$ pxtokn.h 
 */

/* Copyright (c) 1989 by Oracle Corporation */
 
/* NAME
     pxtokn.h
     SLAX: The token object

   FUNCTION
     This file contains the operations and object description of the
     token object.

   NOTES
     The token object must be used by the client's lexical analyzer. In
     particular, the token object must be returned by the lexical analyzer
     to the parser.

   MODIFIED
    tolkin     08/14/91 -         change ptr_t to dvoid * 
    tolkin     06/05/91 -         make source filename CONST 
    tolkin     06/02/91 -         change pxfile to pgstrm 
    Olkin      03/01/91 - cast text to char
    Olkin      09/07/90 - add pxkywd and pxtoid prototypes
    Olkin      09/05/90 - add PXFREETOK
     Olkin    01/22/90 - creation
*/

#ifndef PXTOKN
#  define PXTOKN

/******************************************************************************
*                                   Private                                   *
******************************************************************************/
/* PXVALTYPE has already been defined */

/*
 * The client should set this number to be the maximum size of an expected
 * token.
 */
#  define PXMAXTOKNAME 32

/*
 * The token object.
 */
typedef struct {
  sb2  tokid;                                   /* token number used by SLAX */
  char toknam[PXMAXTOKNAME];                          /* string rep of token */
  ub2  column;                              /* starting column of this token */
  ub2  line;                                    /* line number of this token */
  char *filnam;                /* name of source file in which token appears */
  PXVALTYPE attrib;                             /* attributes of this token */
} pxtokn;

/******************************************************************************
*                                   Public                                    *
******************************************************************************/

#  define PXGETNEXT  0x01                              /* returns next token */
#  define PXUNGET    0x02       /* ungets a token supplied as third argument */
#  define PXUSDTOK   0x03         /* token is being returned to original lex */
#  define PXFNDERR   0x04        /* found error, third arg is compiler state */
#  define PXGETLINE  0x08      /* get current line of source file into third */
                               /* argument, fourth tells  how much space has */
                               /* been allocated.                            */
#  define PXERRORMSG 0x10                   /* returning with error msg text */
#  define PXCLEARSTK 0x20                          /* clears the unget stack */
#  define PXFREETOK  0x40                     /* frees memory for this token */

/*
** We now have two token creation macros: 
**  pxtcrt(), which has always existed and is unchanged;
*/
#  define pxtcrt(tid, tnam, tcol, tline, tfil, tatt, token) \
     { \
       (token)->tokid = (tid); \
       strncpy((char*)(token)->toknam, (char *)(tnam), PXMAXTOKNAME);\
       (token)->column = (tcol); \
       (token)->line = (tline); \
       (token)->filnam = (char *)(tfil); \
       if (tatt)                 \
	 memcpy((void *)&(token)->attrib, (void *)(tatt), \
		sizeof(PXVALTYPE)); \
     }

#  define pxtgid(token) ((token)->tokid)
#  define pxtnam(token) ((token)->toknam)
#  define pxtcol(token) ((token)->column)
#  define pxtlin(token) ((token)->line)
#  define pxtfil(token) ((token)->filnam)
#  define pxtatt(token) (&((token)->attrib))

#endif
