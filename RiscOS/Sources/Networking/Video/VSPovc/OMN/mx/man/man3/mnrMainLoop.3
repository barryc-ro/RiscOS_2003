.TH mnrMainLoop 3 "31 August 1994"
.SH NAME
mnrMainLoop, mnrTermLoop - conventional main loop of RPC servers
.SH SYNOPSIS
.nf
#include <mn.h>
#include <mnrs.h>
.LP
sb4 mnrMainLoop(mnrs *sh);
.LP
void mnrTermLoop(mnrs *sh, sb4 result);
.SH DESCRIPTION
sh is a server handle created by mnrCreateServer().
.LP
mnrMainLoop() constitutes the main loop of most conventional servers.
It loops repeatedly, calling mnrListen(), mnrGetNextCall(), and then
mnrDispatchCall() until terminated by mnrTermLoop().
.LP
mnrTermLoop() may be called from within a server dispatch routine to
cause mnrMainLoop() to terminate.  The result should be 0 to indicate
normal termination.  A non-zero value indicates abnormal termination.
.SH USAGE
mnrMainLoop() will continue until mnrTermLoop() is called.  If
terminated normally (with a result of 0), mnrMainLoop() will not
actually exit until there are no more open client-based contexts
and there are no more unhandled requests pending in the server's
queue.
.LP
If mnrMainLoop() is terminated abnormally (with a non-zero result),
mnrMainLoop() will immediately return.  Since this may cause
client calls to be aborted, this should only be done under extreme
circumstances.
.LP
mnrTermLoop() may be called automatically if the process server is
controlling the server.
.SH RETURN VALUES
mnrMainLoop() will return with whatever value was passed as the
result argument to mnrTermLoop().
.SH SEE ALSO
mnrCreateServer(3), mnrDispatchCall(3), mnrGetNextCall(3), mnrListen(3).
