.TH mnrCtxCreate 3 "31 August 1994"
.SH NAME
mnrCtxCreate, mnrCtxDestroy, mnrCtxGet, mnrCtxId, mnrConvertId - manage client-based contexts
.SH SYNOPSIS
.nf
#include <mn.h>
#include <mnrs.h>
.LP
sb4 mnrCtxCreate(mnrsc *call, void *clntctx,
	void (*rundown)(mnrsc *, mnbv *, ub4));
.LP
void mnrCtxDestroy(mnrsc *call);
.LP
void *mnrCtxGet(mnrsc *call);
.LP
ub4 mnrCtxId(mnrsc *call);
.LP
void *mnrConvertId(mnrs *sh, ub4 id);
.SH DESCRIPTION
A client-based context is a context associated with a particular client for
a sequence of RPC calls.  call is a call handle created by mnrGetNextCall().
mnrCtxCreate() associates a client context with the call handle given.
The client will receive a context handle that, when passed back in a
subsequent call, will allow another server routine to retrieve the
client context with mnrCtxGet().
.LP
mnrCtxDestroy() destroys the associated between the context and the
client.  This routine does not actually free resources that the server
may have allocated for the context.  It is the responsibility of the server
routine to free these resources.
.LP
If Media Net detects a communication failure with the client, it will
automatically synthesize a call to the routine identified by rundown.
No inbound arguments will be passed to the rundown routine when it is
invoked in this manner.  The rundown routine should call mnrCtxDestroy().
.LP
mnrCtxId() returns a numeric identifier that will identify the context
associated with the call.  mnrConvertId() converts this identifier back
into the original context.  These routines allow the server to pass a
reference to a context to a third party who did not originate a call
to the server.
.SH NOTES
Media Net RPC guarantees that the same server thread will be called by
a client using a context previously created by that server, even if
the server is a participant in a multi-instance pod.
.SH RETURN VALUES
mnrCtxCreate() returns 0 on success; otherwise, it may return:
.TP 20
MNSTS_TERMINATE
The server has been terminated and new contexts cannot be created.
.LP
mnrCtxGet() returns a context pointer previously passed to mnrCtxCreate()
or null if no associated context is found.
.SH SEE ALSO
mnrCall(3), mnrGetNextCall(3).
