.TH mnrGetNextCall 3 "31 August 1994"
.SH NAME
mnrGetNextCall, mnrDispatchCall - get next RPC call and dispatch
.SH SYNOPSIS
.nf
#include <mn.h>
#include <mnrs.h>
.LP
mnrsc *mnrGetNextCall(mnrs *sh);
.LP
boolean mnrDispatchCall(mnrsc *call);
.SH DESCRIPTION
sh is a server handle created by mnrCreateServer(3).  mnrGetNextCall(3)
is used to get a handle to the next call that is pending on the server
queue.  If no request is pending, mnrGetNextCall(3) will block
indefinitely.
.LP
Once a call handle is obtained, it may be passed to mnrDispatchCall()
to invoke the server routine that implements the operation.  call is
a call handle obtained from mnrGetNextCall(3).
.LP
The invoked operation is passed the call descriptor plus a buffer vector
containing the inbound arguments (if any).  These arguments may be
suitable for decoding with the Media Net marshalling routines (mnx(3)),
but they must not be freed by the server routine.
.LP
The call handle obtained from mnrGetNextCall() should ultimately
be disposed of with mnrReturnCall().
.SH RETURN VALUES
On success, mnrGetNextCall() returns the next pending call.  Otherwise,
mnLastError() may return one of the following errors:
.TP 20
MNERR_BROKEN
Communication with the receiver failed before the request was fully
received.
.TP 20
MNERR_OUTMEM
Sufficient resources could not be allocated.
.LP
mnrDispatchCall() returns TRUE if the routine was successfully
dispatched, or FALSE if the the requested operation does not
exist.
.SH SEE ALSO
mnrCreateServer(3), mnrListen(3), mnrMainLoop(3), mnrReturnCall(3).
