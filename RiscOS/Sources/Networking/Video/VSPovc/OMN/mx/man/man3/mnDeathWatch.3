.TH mnDeathWatch 3 "17 February 1995"
.SH NAME
mnDeathWatch, mnDeathIgnore - detect node death
.SH SYNOPSIS
.nf
#include <mn.h>
#include <mna.h>
.LP
sb4 mnDeathWatch(mna *addr, mnHandler handler, void *usrp);
sb4 mnDeathIgnore(mna *addr, dvoid *usrp);
.SH DESCRIPTION
mnDeathWatch() starts an operation that completes when the node associated
with the given address terminates.  A node may terminate normally, in which
case notification is immediate, or it may terminate abnormally, in which case
detection of the node death may not occur for up to approximately three
minutes.
.LP
addr is an address belonging to the node for which death is to be detected.
mnDeathWatch() may be called multiple times with addresses belonging to the
same node, and the address itself may even be the same.  In any case, a
separate operation is started for each call to mnDeathWatch().  All such
operations that are associated with the same node will complete at the
same time, once the node finally terminates.
.LP
The operation may be performed asynchronously by providing either a
handler or a semaphore through the handler and usrp arguments.
.LP
mnDeathIgnore() cancels a pending mnDeathWatch() operation.  The operation
is identified by the address and usrp values passed to mnDeathWatch().
(This allows for multiple calls to mnDeathWatch() for the same address to
be differentiated.)  Up until the time mnDeathIgnore() returns, it is still
possible for the mnDeathWatch() operation to complete.
.SH RESULT VALUES
On successful completion of the operation, the result status will be 0,
thus indicating that the corresponding node has terminated.  Otherwise,
one of the following errors may be reported:
.TP 20
MNERR_BADADDR
The given address does not correspond to any node that is currently alive.
.TP 20
MNERR_OUTMEM
Insufficient resources to register the request were available.
.TP 20
MNERR_BROKEN
Communication with the address server failed.
.TP 20
MNSTS_ABORTED
The operation was cancelled with mnDeathIgnore().
.SH RETURN VALUES
In synchronous mode, mnDeathWatch() will return either the result of
the operation as indicated above, or one of the following additional
errors:
.TP 20
MNSTS_ABORTED
The blocking operation was aborted.
.LP
In asynchronous mode, mnDeathWatch() will return 0 if the operation
is successfully started.
.LP
mnDeathIgnore() returns 0 if the operation was cancelled, or the
following error:
.TP 20
MNERR_NOTFOUND
No pending operation matching the given address and user pointer
was found.
.SH SEE ALSO
mnars(8).
