.TH MNLOGSRV 8 "17 June 1996" "Oracle Media Net"
.SH NAME
mnlogsrv - Oracle Media Net Logger Daemon
.SH SYNOPSIS
.nf
mnlogsrv [ -rhVT ] [ -a log-file-alarm-size-kb ]
    [ -b log-file-limit-behaviour ] [ -c connect-to-producer ]
    [ -f default-filter-spec ] [ -k log-file-keep-count ] [ -m msg-path... ]
    [ -N log-impl ] [ -n implementation-name... ] [ -o log-file-name ]
    [ -p log-file-max-size-kb ] [ -t log-type ] [ -R resource-statement ]
    [ -P resource-file ]
 
   -r -> log-file-readonly=true
   -h -> show-usage
   -V -> print-version
   -T -> verbose=true

.SH DESCRIPTION
mnlogsrv distributes log events to various destinations, including the
terminal, the console, system loggers, files, and other processes.  It
may act as a server for reading log files, using the interfaces
described in yeevlog.idl and yeevent.idl.  It can be either a public
logger, or a private one connected to a process.

Events are sent to the logger using the "yeev" interface, which is
usually driven by calls to ysRecord, having done a yeevSinkAttach.
This is usually done with a call to yeevRemoteLog().

Routing/filtering of events may be done by mnlogctl(8). Logs may be
read with mnlogreader(8).  

When started with no arguments, it comes up as a public logger that
writes messages to the terminal.

To shut the logger down, use "mnorbadm -s down -n mnlogsrv"
.SH OPTIONS
.TP
-r
server mode, put the initial log in read-only mode.
.TP
-h
show usage
.TP
-V
print version
.TP
-T
verbose=true, no effect.
.TP
-a log-file-alarm-size-kb
The logger will raise a OMN.MNLOGSRV-309 event when the log crosses this
size in kb.  Default is no alarm.
.TP
-b { halt | rollover }
When the log file hits it's limit size, either halt further logging or
do a file rollover.  Default is rollover.

When a file is rolled over, it's extension is replaced by numbers
running from 1 to the number of rollover files.    If Filename.log
is the log, Filename.1 is the newest, and Filename.n is the oldest.
.TP
-c connect-to-producer
Bring up a private logger, and have the specified producer send events
to it with the specified or default filter spec.  Producers are specified
with a host:pid[:affinity] string, for example "senna:4325".
.TP
-f default-filter-spec...
Give the filter spec to all connecting client programs.  Default is
"maxlev 6"
.TP
-k log-file-keep-count 
When doing rollover when the size limit hits, how many old logs to keep.
Default is 1.
.TP
-m msg-path... 
Directories in which to find .mot message files
.TP
-N log-impl
When starting, connect to a logger with this implementation.  This can
be used to connect to a logger higher in a logging hierarchy.  Default
is to itself.  Resource: yeev.log-impl
.TP
-n implementation-name... 
When starting, advertise self as the specifiec implementations.  Any
of these implementations may be given to other programs as their
yeev.log-impl resource to get this logger.
.TP
-o log-file-name
The name of the initial log file, if the log type is a file type.  Default
is mnlogsrv.log.
.TP
-p log-file-max-size-kb 
The maximum (approximately) size we will let a log file grow, before taking
the configured "full action"
.TP
-t { 
The type of log to initially write to; default is tty.  The different
types are:
.nf
tty	    -- the yslPrint destination
console	    -- the yslError destination
textfile    -- a sysfp file in TEXT mode.  Human readable, all values
		become strings.
binfile	    -- a sysfp file in BINARY mode.  Values read back through the
		IDL API remain in original form.
syslog	    -- the yslConsole destination.
.TP
-R resource-statement
.TP
-P resource-file
.SH ENVIRONMENT
.TP
OMN_ADDR
The physical address of the address server to use.
.SH SEE ALSO
mnlogreader(8), mnlogctl(8), mnorbadm(8).


