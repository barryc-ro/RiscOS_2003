#ifndef MTL_ORACLE
#define MTL_ORACLE

/*
** MODIFIED
**   dpawson    06/24/94        Cast values for component types
*/

#ifndef SYSI_ORACLE
# include <sysi.h>
#endif

EXTC_START

/*
 * NOTE: this file is *not* allowed to include smtl.h.  Also, clients of
 * the mtlLogging facility should only include this portable header mtl.h,
 * and not smtl.h.
 */

/*
 * Every runnable binary making up the Oracle Media Server can mtlLog messages
 * via any method implemented in the system specific layer (ie. smtl.c).
 * The three basic methods are logging to the screen (eg. using printf),
 * logging to a file, and logging to the console.
 */

#define MtlScreenTool	(sb4)0
#define MtlLogTool	(sb4)1
#define MtlConsoleTool	(sb4)2

/*
 * All modules composing the video server engine use the mtlLog() function
 * to print out information.  This initialization routine will cause all
 * messages to be mtlLogged by a method implemented in the system specific
 * code.  'str' is an optional string to pass in that each mtlLogging
 * method deals with in its own way (eg. to label all subsequent messages
 * with a header.
 */
void   mtlInit( sb4    component, CONST char  *str );

/*
 * Logs a message via any method defined in the system specific layer and
 * initialized at runtime above.  This can be done via printf, a system
 * level facility to log to files, etc.
 */
void   mtlLog( CONST char  *fmt, ... );

/*
 * Logs a message associated with an unrecoverable internal error
 * (eg. the program state went bad because of a programming bug).
 * Performs actions to facilitate debugging (eg. dumping a stack or
 * core file, leaving the process in bkpt state, etc).
 */
void   mtlFatal( CONST char  *fmt, ... );

/*
 * A variant of the above useful when you have no specific message
 * to output.  Prints out the file name and line number where the
 * fatal error was detected as well as the date the executable was
 * built for easy tracking in source code control.
 */
#define mtlAssert(expr)  if (!(expr))                                    \
   mtlFatal ("Internal error: `%s' at line %d of `%s' built on `%s'.\n", \
             #expr, __LINE__, __FILE__, __DATE__);                       \
   else ;

/*
 * Logs a message associated with an unrecoverable error that, unlike
 * above, doesn't require special debugging operations to be performed
 * (eg. a system call returned an error).  Simply exits the process.
 */
void   mtlExit( CONST char  *fmt, ... );

EXTC_END
#endif /* MTL_ORACLE */
