/* GENERATED FILE
 * mdsex - public declarations
 * from /vobs/rts/pub/mdsex.idl
 */

#ifndef MDSEX_IDL
#define MDSEX_IDL

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

EXTC_START

/******* NON-SEQUENCE DECLARATIONS *******/
#ifndef mds_fileExReason_DECLARED
#define mds_fileExReason_DECLARED
typedef ub4 mds_fileExReason;
yotk* mds_fileExReason__getTC(void);
#ifndef YCTC_mds_fileExReason
#define YCTC_mds_fileExReason   (mds_fileExReason__getTC())
#endif
#endif /* mds_fileExReason_DECLARED */

#ifndef mds_fileExReason_DEFINED
#define mds_fileExReason_DEFINED
#define mds_fileExReadOnlyVol ((mds_fileExReason) 0)
#define mds_fileExTocFull ((mds_fileExReason) 1)
#define mds_fileExVolFull ((mds_fileExReason) 2)
#define mds_fileExMinBw ((mds_fileExReason) 3)
#define mds_fileExMissing ((mds_fileExReason) 4)
#define mds_fileExIllegal ((mds_fileExReason) 5)
#define mds_fileExMatch ((mds_fileExReason) 6)
#define mds_fileExParse ((mds_fileExReason) 7)
#define mds_fileExReadOnlyFile ((mds_fileExReason) 8)
#define mds_fileExDeleted ((mds_fileExReason) 9)
#define mds_fileExLocked ((mds_fileExReason) 10)
#define mds_fileExHostNop ((mds_fileExReason) 11)
#define mds_fileExPerm ((mds_fileExReason) 12)
#define mds_fileExCallBack ((mds_fileExReason) 13)
#endif /* mds_fileExReason_DEFINED */

#ifndef mds_fileExReason_SUPP_FUNCS
#define mds_fileExReason_SUPP_FUNCS
void mds_fileExReason__free( mds_fileExReason* val, ysmff ffunc);
void mds_fileExReason__copy( mds_fileExReason* dest, mds_fileExReason* src, 
  ysmaf afunc);
#endif /* mds_fileExReason_SUPP_FUNCS */

#ifndef MDS_EX_FILEEX_DECLARED
#define MDS_EX_FILEEX_DECLARED
CONST ysid* mds_fileEx__getId(void);
#ifndef MDS_EX_FILEEX
#define MDS_EX_FILEEX   (mds_fileEx__getId())
#endif
#endif /* MDS_EX_FILEEX_DECLARED */

#ifndef mds_fileEx_DECLARED
#define mds_fileEx_DECLARED
typedef struct mds_fileEx mds_fileEx;
#endif /* mds_fileEx_DECLARED */

#ifndef mds_fileEx_DEFINED
#define mds_fileEx_DEFINED
struct mds_fileEx
{
  mds_fileExReason fileExSts;
  char fileExNm[256];
};
yotk* mds_fileEx__getTC(void);
#ifndef YCTC_mds_fileEx
#define YCTC_mds_fileEx   (mds_fileEx__getTC())
#endif
#endif /* mds_fileEx_DEFINED */

#ifndef mds_fileEx_SUPP_FUNCS
#define mds_fileEx_SUPP_FUNCS
void mds_fileEx__free( mds_fileEx* val, ysmff ffunc);
void mds_fileEx__copy( mds_fileEx* dest, mds_fileEx* src, ysmaf afunc);
#endif /* mds_fileEx_SUPP_FUNCS */

#ifndef MDS_EX_IO_DECLARED
#define MDS_EX_IO_DECLARED
CONST ysid* mds_io__getId(void);
#ifndef MDS_EX_IO
#define MDS_EX_IO   (mds_io__getId())
#endif
#endif /* MDS_EX_IO_DECLARED */

yotk* mds_io__getTC(void);
#ifndef YCTC_mds_io
#define YCTC_mds_io   (mds_io__getTC())
#endif
#ifndef MDS_EX_BADPARAM_DECLARED
#define MDS_EX_BADPARAM_DECLARED
CONST ysid* mds_badParam__getId(void);
#ifndef MDS_EX_BADPARAM
#define MDS_EX_BADPARAM   (mds_badParam__getId())
#endif
#endif /* MDS_EX_BADPARAM_DECLARED */

yotk* mds_badParam__getTC(void);
#ifndef YCTC_mds_badParam
#define YCTC_mds_badParam   (mds_badParam__getTC())
#endif
#ifndef MDS_EX_OCCUPIED_DECLARED
#define MDS_EX_OCCUPIED_DECLARED
CONST ysid* mds_occupied__getId(void);
#ifndef MDS_EX_OCCUPIED
#define MDS_EX_OCCUPIED   (mds_occupied__getId())
#endif
#endif /* MDS_EX_OCCUPIED_DECLARED */

yotk* mds_occupied__getTC(void);
#ifndef YCTC_mds_occupied
#define YCTC_mds_occupied   (mds_occupied__getTC())
#endif
#ifndef MDS_EX_INTERNAL_DECLARED
#define MDS_EX_INTERNAL_DECLARED
CONST ysid* mds_internal__getId(void);
#ifndef MDS_EX_INTERNAL
#define MDS_EX_INTERNAL   (mds_internal__getId())
#endif
#endif /* MDS_EX_INTERNAL_DECLARED */

yotk* mds_internal__getTC(void);
#ifndef YCTC_mds_internal
#define YCTC_mds_internal   (mds_internal__getTC())
#endif
#ifndef MDS_EX_NOTINIT_DECLARED
#define MDS_EX_NOTINIT_DECLARED
CONST ysid* mds_notinit__getId(void);
#ifndef MDS_EX_NOTINIT
#define MDS_EX_NOTINIT   (mds_notinit__getId())
#endif
#endif /* MDS_EX_NOTINIT_DECLARED */

yotk* mds_notinit__getTC(void);
#ifndef YCTC_mds_notinit
#define YCTC_mds_notinit   (mds_notinit__getTC())
#endif
#ifndef MDS_EX_NOTIMPL_DECLARED
#define MDS_EX_NOTIMPL_DECLARED
CONST ysid* mds_notimpl__getId(void);
#ifndef MDS_EX_NOTIMPL
#define MDS_EX_NOTIMPL   (mds_notimpl__getId())
#endif
#endif /* MDS_EX_NOTIMPL_DECLARED */

yotk* mds_notimpl__getTC(void);
#ifndef YCTC_mds_notimpl
#define YCTC_mds_notimpl   (mds_notimpl__getTC())
#endif
#ifndef MDS_EX_BADRES_DECLARED
#define MDS_EX_BADRES_DECLARED
CONST ysid* mds_badres__getId(void);
#ifndef MDS_EX_BADRES
#define MDS_EX_BADRES   (mds_badres__getId())
#endif
#endif /* MDS_EX_BADRES_DECLARED */

yotk* mds_badres__getTC(void);
#ifndef YCTC_mds_badres
#define YCTC_mds_badres   (mds_badres__getTC())
#endif
EXTC_END
#endif /* MDSEX_IDL */
