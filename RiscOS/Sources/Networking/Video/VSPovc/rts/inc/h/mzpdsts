/* GENERATED FILE
 * mzpdsts - public declarations
 * from /vobs/rts/inc/mzpdsts.idl
 */

#ifndef MZPDSTS_IDL
#define MZPDSTS_IDL

#ifndef SYSX_ORACLE
#include <sysx.h>
#endif
#ifndef YO_ORACLE
#include <yo.h>
#endif

EXTC_START

/**********  SEQUENCE DECLARATIONS *********/
#ifndef YCIDL_sequence_CORBA_Object_DEFINED
#define YCIDL_sequence_CORBA_Object_DEFINED
typedef struct
{
  ub4 _maximum;
  ub4 _length;
  CORBA_Object* _buffer;
} YCIDL_sequence_CORBA_Object;
#ifndef YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#define YCIDL_sequence_CORBA_Object_SUPP_FUNCS
#endif /* YCIDL_sequence_CORBA_Object_SUPP_FUNCS */

#endif /* YCIDL_sequence_CORBA_Object_DEFINED */

/******* NON-SEQUENCE DECLARATIONS *******/

/* interface yoevt declarations */
#ifndef yoevt_DECLARED
#define yoevt_DECLARED
typedef struct YCyoevt* yoevt;
yotk* yoevt__getTC(void);
#ifndef YCTC_yoevt
#define YCTC_yoevt   (yoevt__getTC())
#endif
#endif /* yoevt_DECLARED */

#ifndef yoevt_SUPP_FUNCS
#define yoevt_SUPP_FUNCS
void yoevt__free( yoevt* val, ysmff ffunc);
void yoevt__copy( yoevt* dest, yoevt* src, ysmaf afunc);
#endif /* yoevt_SUPP_FUNCS */

#ifndef yostd_stringList_DECLARED
#define yostd_stringList_DECLARED
typedef YCIDL_sequence_string yostd_stringList;
yotk* yostd_stringList__getTC(void);
#ifndef YCTC_yostd_stringList
#define YCTC_yostd_stringList   (yostd_stringList__getTC())
#endif
#endif /* yostd_stringList_DECLARED */

#ifndef yostd_stringList_SUPP_FUNCS
#define yostd_stringList_SUPP_FUNCS
void yostd_stringList__free( yostd_stringList* val, ysmff ffunc);
void yostd_stringList__copy( yostd_stringList* dest, yostd_stringList* src, 
  ysmaf afunc);
#endif /* yostd_stringList_SUPP_FUNCS */

#ifndef yostd_objList_DECLARED
#define yostd_objList_DECLARED
typedef YCIDL_sequence_CORBA_Object yostd_objList;
yotk* yostd_objList__getTC(void);
#ifndef YCTC_yostd_objList
#define YCTC_yostd_objList   (yostd_objList__getTC())
#endif
#endif /* yostd_objList_DECLARED */

#ifndef yostd_objList_SUPP_FUNCS
#define yostd_objList_SUPP_FUNCS
void yostd_objList__free( yostd_objList* val, ysmff ffunc);
void yostd_objList__copy( yostd_objList* dest, yostd_objList* src, ysmaf 
  afunc);
#endif /* yostd_objList_SUPP_FUNCS */

#ifndef yostd_octetSeq_DECLARED
#define yostd_octetSeq_DECLARED
typedef YCIDL_sequence_ub1 yostd_octetSeq;
yotk* yostd_octetSeq__getTC(void);
#ifndef YCTC_yostd_octetSeq
#define YCTC_yostd_octetSeq   (yostd_octetSeq__getTC())
#endif
#endif /* yostd_octetSeq_DECLARED */

#ifndef yostd_octetSeq_SUPP_FUNCS
#define yostd_octetSeq_SUPP_FUNCS
void yostd_octetSeq__free( yostd_octetSeq* val, ysmff ffunc);
void yostd_octetSeq__copy( yostd_octetSeq* dest, yostd_octetSeq* src, ysmaf 
  afunc);
#endif /* yostd_octetSeq_SUPP_FUNCS */

#ifndef MZPD_EX_BADPARAM_DECLARED
#define MZPD_EX_BADPARAM_DECLARED
CONST ysid* mzpd_badParam__getId(void);
#ifndef MZPD_EX_BADPARAM
#define MZPD_EX_BADPARAM   (mzpd_badParam__getId())
#endif
#endif /* MZPD_EX_BADPARAM_DECLARED */

yotk* mzpd_badParam__getTC(void);
#ifndef YCTC_mzpd_badParam
#define YCTC_mzpd_badParam   (mzpd_badParam__getTC())
#endif
#ifndef MZPD_EX_INTERNAL_DECLARED
#define MZPD_EX_INTERNAL_DECLARED
CONST ysid* mzpd_internal__getId(void);
#ifndef MZPD_EX_INTERNAL
#define MZPD_EX_INTERNAL   (mzpd_internal__getId())
#endif
#endif /* MZPD_EX_INTERNAL_DECLARED */

yotk* mzpd_internal__getTC(void);
#ifndef YCTC_mzpd_internal
#define YCTC_mzpd_internal   (mzpd_internal__getTC())
#endif

/* interface mzpd_sts declarations */
#ifndef mzpd_sts_DECLARED
#define mzpd_sts_DECLARED
typedef struct YCmzpd_sts* mzpd_sts;
yotk* mzpd_sts__getTC(void);
#ifndef YCTC_mzpd_sts
#define YCTC_mzpd_sts   (mzpd_sts__getTC())
#endif
#endif /* mzpd_sts_DECLARED */

#ifndef mzpd_sts_SUPP_FUNCS
#define mzpd_sts_SUPP_FUNCS
void mzpd_sts__free( mzpd_sts* val, ysmff ffunc);
void mzpd_sts__copy( mzpd_sts* dest, mzpd_sts* src, ysmaf afunc);
#endif /* mzpd_sts_SUPP_FUNCS */

#ifndef mzpd_sts_DEFINED
#define mzpd_sts_DEFINED
struct yostub* mzpd_sts__getStubs(void);
#define mzpd_sts__stubs (mzpd_sts__getStubs())
#endif /* mzpd_sts_DEFINED */

CONST ysid* mzpd_sts__getId(void);
#ifndef mzpd_sts__id
#define mzpd_sts__id   (mzpd_sts__getId())
#endif
void mzpd_sts_add( mzpd_sts or, yoenv* ev, boolean init, char* jobNm, char* 
  host, char* user, char* cmd, char* pid, ub4 sts);
void mzpd_sts_add_nw( mzpd_sts or, yoenv* ev, boolean init, char* jobNm, 
  char* host, char* user, char* cmd, char* pid, ub4 sts, ysevt* _sem);
yopar* mzpd_sts_add__getPars(void);
#ifndef mzpd_sts_add_pars
#define mzpd_sts_add_pars (mzpd_sts_add__getPars())
#endif

char* mzpd_sts_get( mzpd_sts or, yoenv* ev, char* pid);
void mzpd_sts_get_nw( mzpd_sts or, yoenv* ev, char* pid, ysevt* _sem);
yopar* mzpd_sts_get__getPars(void);
#ifndef mzpd_sts_get_pars
#define mzpd_sts_get_pars (mzpd_sts_get__getPars())
#endif

#ifndef mzpd_sts__tyimpl_DEFINED
#define mzpd_sts__tyimpl_DEFINED
struct mzpd_sts__tyimpl
{
  void (*add)( mzpd_sts, yoenv*, boolean, char*, char*, char*, char*, char*,
     ub4);
  char* (*get)( mzpd_sts, yoenv*, char*);
};
#endif /* mzpd_sts__tyimpl_DEFINED */

EXTC_END
#endif /* MZPDSTS_IDL */
