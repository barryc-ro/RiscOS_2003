/**************************************************************/
/* File:    Status.c                                          */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Implement VideoControl_Status.                    */
/*                                                            */
/* Author:  A.D.Hodgkinson. Based on URL_Fetcher source by    */
/*          S.N.Brodie and P. Wain.                           */
/*                                                            */
/* History: 04-Nov-1999 (ADH): Created.                       */
/**************************************************************/

#include <stdio.h>
#include <string.h>

#include <swis.h>

#ifdef TRACE2
  #define TRACE
#endif
#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

#include "Module.h"
#include "Utils.h"

#include "Status.h"

/**************************************************************/
/* status_status()                                            */
/*                                                            */
/* Implement VideoControl_Status. See the Video Control       */
/* specification, 2501,817/FS, for more.                      */
/**************************************************************/

_kernel_oserror * status_status(_kernel_swi_regs * r)
{
  _kernel_oserror * e    = NULL;
  client          * list = find_client(r->r[1]);
  int               or1;

  dprintf(("", "status_status: Called for %08X\n", r->r[1]));

  /* Return an error if not registered */

  if (list == NULL)
  {
    return make_error(vc_ERROR_CLIENT_ID_NOT_FOUND, 0);
  }

  if (list->ctrl.protocol == 0)
  {
    _kernel_oserror * e = make_error(vc_ERROR_NOT_SETUP_YET, 0);
    sprintf(strchr(e->errmess, '\0'), " (%08X)", r->r[1]);

    return e;
  }

  /* call the swi */

  or1     = r->r[1];
  r->r[1] = list->ctrl.id;
  e       = _kernel_swi(list->ctrl.protocol + VC_Protocol_Status, r, r);
  r->r[1] = or1;

  return e;
}
