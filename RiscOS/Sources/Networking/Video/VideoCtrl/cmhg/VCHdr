; -*-Text-*-
;
; $Version: networking $
;
; $Source$
;
; The module VideoControl is used to send requests to and receive data from a
; protocol module (to talk to a video server) in a multitasking manner.
;
#include "Global/Services.h"
#include "VersionNum"

; Title string
title-string: VideoControl

; Version information
help-string: VideoControl Module_MajorVersion_CMHG Module_MinorVersion_CMHG

date-string: Module_Date_CMHG

; Initialisation routine.
initialisation-code: module_init

; Finalisation routine.
finalisation-code: module_kill

; SWI Base.
swi-chunk-base-number: &53500

; SWI Names.
swi-decoding-table: VideoControl,
                    Register, Setup, Options, Status, MoreInformation, Play, TearDown,
                    Deregister, EnumerateProtocols,
                    NOP09,
                    NOP10, NOP11, NOP12, NOP13, NOP14, NOP15, NOP16, NOP17, NOP18, NOP19,
                    NOP20, NOP21, NOP22, NOP23, NOP24, NOP25, NOP26, NOP27, NOP28, NOP29,
                    NOP30, NOP31,
                    ProtocolOptions, ProtocolRegister, ProtocolDeregister, ProtocolNotify

; A small command line handler to print out the protocols known.
command-keyword-table:  command_line_handler
                        VideoControlProtoShow(min-args:0, max-args:0,
                            invalid-syntax: "Syntax: *VideoControlProtoShow",
                            help-text: "*VideoControlProtoShow shows all currently registered protocol modules and their SWI bases.\n")

; Put this in if building with TRACE2 defined in module.c
;
;                        VideoControlClients(min-args:0, max-args:0,
;                            invalid-syntax: "Syntax: *VideoControlClients",
;                            help-text: "*VideoControlClients shows all the currently known clients of the VideoControl module.\n")

; SWI handler.
swi-handler-code: swi_handler

; Service calls.
service-call-handler: service_handler Service_Standby

; Callback handler (used for issuing the service call on startup)
vector-handlers:  callback_entry/callback_handler
