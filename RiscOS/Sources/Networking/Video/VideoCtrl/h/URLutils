/***************************************************/
/* File   : URLutils.h                             */
/*                                                 */
/* Purpose: URL manipulation.                      */
/*                                                 */
/* Author : A.D.Hodgkinson.                        */
/*                                                 */
/* History: 06-Feb-1997 (ADH): Created.            */
/*          11-Nov-1999 (ADH): Imported fragment   */
/*                             to VideoControl.    */
/***************************************************/

/* General definitions */

#define ProtocolSeparator "//"
#define ProtocolSepShort  "/"         /* For 'file:/' not 'file://' */
#define FileMethod        "file:"
#define HTTPmethod        "http:"
#define FTPmethod         "ftp:"
#define GopherMethod      "gopher:"
#define AboutMethod       "about:"
#define MPEG2TSmethod     "mpeg2ts:"
#define RTSPmethod1       "rtsp:"
#define RTSPmethod2       "rtspu:"

/* Structures */

/* For any URL, this can hold a more complete description than     */
/* strings, and makes comparing two URLs in a valid manner easier. */

typedef struct url_description
{
  char * full;     /* Complete, canonicalised URL         */

  char * protocol; /* Such as 'http' or 'mailto'          */
  char * host;     /* E.g. 'www.acorn.com'                */
  char * port;     /* For example '8080'                  */

  char * user;     /* E.g. 'ahodgkin'                     */
  char * password; /* E.g. 'NotMine'                      */
  char * account;  /* As in ftp://user:pass:account@host/ */

  char * path;     /* Speaks for itself                   */

  char * query;    /* CGI info - after a '?' in a URL     */
  char * fragment; /* Anchor info - after a '#' in a URL  */
}
url_description;

/* Function prototypes */

int               urlutils_urlsscmp           (const char * url_s1, const char * url_s2);
int               urlutils_urldscmp           (const url_description * url_d, const char * url_s);
int               urlutils_urlddcmp           (const url_description * url_d1, const url_description * url_d2);
url_description * urlutils_return_description (const char * url_s);
void              urlutils_free_description   (url_description * url_d);

int               urlutils_matches_special    (const url_description * d, char * writeable);

char            * urlutils_relativise_url     (const char * base, const char * link);
