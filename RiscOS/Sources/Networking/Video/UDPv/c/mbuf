/*
 * mbuf.c
 *
 * Interface with Acorn DCI4 Mbuf Manager
 */
#include <kernel.h>
#include <swis.h>
#include <stdlib.h>
#include "module.h"
#include "sys/types.h"
#include "sys/mbuf.h"

struct mbctl mbctl =
{
    0,                              /* opaque */
    sizeof(struct mbctl),           /* mbcsize */
    MBUF_MANAGER_VERSION,           /* mbcvers */
    0ul,                            /* flags */
    MINCONTIG,                      /* advminubs */
    UDPV_BUFSIZE,                   /* advmaxubs */
    MINCONTIG,                      /* mincontig */
    0ul,                            /* spare1 */
    /*
     * Rest of the structure gets initialised
     * to zeroes due to the trailing comma
     */
};

_kernel_oserror *mb_entryinit(void)
{
    _kernel_swi_regs r;

    r.r[0] = (int) &mbctl;
    return _kernel_swi( XOS_Bit | Mbuf_OpenSession, &r, &r);
}

/*
 * mb_present - check whether the mbuf manager is present or not,
 * using the Mbuf_Control SWI to do so.  returns 1 if manager
 * present, else 0.
 */
int mb_present(void)
{
    _kernel_swi_regs r;

    /*
     * the control SWI with reason code 0 should *always*
     * succeed if the mbuf manager is loaded.
     */
    r.r[0] = 0;
    return((_kernel_swi(XOS_Bit | Mbuf_Control, &r, &r) == 0) ? 1 : 0);
}

_kernel_oserror *mb_closesession(void)
{
    _kernel_swi_regs r;

    r.r[0] = (int) &mbctl;
    return _kernel_swi( XOS_Bit | Mbuf_CloseSession, &r, &r);
}

/* EOF mbuf.c */
