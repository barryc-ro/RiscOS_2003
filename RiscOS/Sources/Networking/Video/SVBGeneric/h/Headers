/**************************************************************/
/* File:    Headers.h                                         */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Header writing and parsing functions.             */
/*                                                            */
/* Author:  S.N.Brodie.                                       */
/*                                                            */
/* History: 14-Feb-2000 (ADH): Created.                       */
/**************************************************************/

#ifndef SVBGeneric_Headers__

  #define SVBGeneric_Headers__
  #include "Session.h"

  /* The RTSP version we advertise supporting in requests, note the leading space */

  #define Headers_Supported                " RTSP/1.0"

  /* Related items for emulated responses */

  #define Headers_Supported_Prefix         "RTSP/1.0"
  #define Headers_Supported_Prefix_OK      "200 OK"
  #define Headers_Supported_Prefix_BR      "400 Bad Request"
  #define Headers_Supported_Prefix_NI      "501 Not Implemented"
  #define Headers_Supported_Prefix_SU      "503 Service Unavailable"

  /* Supported URL query strings */

  #define Headers_Supported_Query_Channel  "channel"

  /* These may be sent out, or used during reading responses */

  #define Headers_HeaderName_Transport     "Transport"
  #define Headers_HeaderValue_Transport    "MP2T/H2221/UDP;unicast;destination="
  #define Headers_HeaderName_Prepare       "x-prepareAssets"
  #define Headers_HeaderValue_Prepare      ""
  #define Headers_HeaderName_Sequence      "CSeq"
  #define Headers_HeaderName_Session       "Session"
  #define Headers_HeaderValue_Session      "timeout"
  #define Headers_HeaderName_Range         "Range"
  #define Headers_HeaderValue_Range        "-"
  #define Headers_HeaderValue_Range_Fwd    "npt=beginning-end"
  #define Headers_HeaderValue_Range_Rwd    "npt=end-beginning"
  #define Headers_HeaderValue_Range_NPT    "npt"
  #define Headers_HeaderValue_Range_Now1   "now"
  #define Headers_HeaderValue_Range_Now2   "beginning"
  #define Headers_HeaderValue_Range_Now3   "current"
  #define Headers_HeaderValue_Range_End1   "end"
  #define Headers_HeaderName_Scale         "Scale"
  #define Headers_HeaderValue_Scale        "1"
  #define Headers_HeaderName_Speed         "Speed"
  #define Headers_HeaderValue_Speed        "1"
  #define Headers_HeaderName_Connection    "Connection"
  #define Headers_HeaderValue_Connection   "close"
  #define Headers_HeaderName_ContentLength "Content-Length"
  #define Headers_HeaderValue_Loop         "loop"
  #define Headers_HeaderName_Server        "Server"

  /* Commands */

  #define Headers_CommandName_Setup        "SETUP"
  #define Headers_CommandName_Play         "PLAY"
  #define Headers_CommandName_Pause        "PAUSE"
  #define Headers_CommandName_TearDown     "TEARDOWN"
  #define Headers_CommandName_GetParameter "GET_PARAMETER"

  /* Number of seconds after which any operation is timed out. It is likely */
  /* that periodic automatic state machine runs are timed at 2 second       */
  /* intervals so the actual timeout accuracy will vary according to that.  */

  #define Headers_Timeout_General          10

  /* Name of the system variable to read for the video data connection port */

  #define Headers_UDP_Port                 "MPEG$UDPport"

  /* Function prototypes */

  unsigned int   headers_get_sequence                     (void);

  rtsp_header  * headers_add_header                       (rtsp_header ** list, const char * header, const char * value);
  rtsp_header  * headers_add_below_head                   (rtsp_header ** list, const char * header, const char * value);
  rtsp_header  * headers_add_sequence_header              (rtsp_header ** list);
  unsigned int   headers_read_sequence_number             (void);

  size_t         headers_construct_specific_header_buffer (rtsp_header * headers, char ** buffer, size_t extra, unsigned int response);
  size_t         headers_construct_header_buffer          (session * ses, size_t extra, unsigned int response);
  void           headers_delete_header                    (rtsp_header ** list, rtsp_header * header);
  void           headers_filter_connection_tokens         (rtsp_header ** list, char * tokens);
  rtsp_header  * headers_find_header                      (rtsp_header * list, char * header);

  void           headers_free_headers                     (rtsp_header ** list);

  int            headers_parse_user_header                (char * buffer, int buflen, session *ses);
  int            headers_parse_response                   (session * ses);

#endif /* Headers_Headers__ */
