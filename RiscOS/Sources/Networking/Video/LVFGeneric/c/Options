/**************************************************************/
/* File:    Options.c                                         */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Implement LVFGeneric_Options.                     */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 01-Jun-2000 (ADH): Imported to LVF Generic.       */
/**************************************************************/

#include <stdio.h>
#include <string.h>

#include <swis.h>

#ifdef TRACE2
  #define TRACE
#endif
#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

#include <VideoCtrl.h>

#include "LVFGErrors.h"
#include "Module.h"
#include "Session.h"
#include "Utils.h"

#include "Options.h"

/**************************************************************/
/* options_options()                                          */
/*                                                            */
/* Implement LVFGeneric_Options See the Video Control         */
/* specification, 2501,817/FS, for more.                      */
/**************************************************************/

_kernel_oserror * options_options(_kernel_swi_regs * r)
{
  session * s = session_find_by_id(r->r[1]);
  int     * current;

  dprintf(("", "options_options called\n"));

  if (s == NULL)
  {
    dprintf(("", "options_options: ID not found\n"));

    return make_error(lvfgeneric_ERROR_CLIENT_ID_NOT_FOUND, 0);
  }

  current = (int *) r->r[2];

  /* Go through the options list looking for the loop tag */

  while (current[0] != vc_tags__end)
  {
    vc_options * opt = (vc_options *) current;

    if (opt->header.tag == vc_tags_looping && opt->header.parameters == 1)
    {
      s->loop = !!(opt->data.loop.loop);

      break;
    }
    else
    {
      current = current +
                (
                  sizeof(opt->header)
                  /
                  sizeof(int)
                )
                +
                opt->header.parameters;
    }
  }

  return NULL;
}
