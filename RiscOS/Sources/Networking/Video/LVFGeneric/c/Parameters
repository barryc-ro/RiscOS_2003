/**************************************************************/
/* File:    Parameters.c                                      */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Read parameters from query strings.               */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 12-Jun-2000 (ADH): Created.                       */
/**************************************************************/

#include <string.h>

#ifdef TRACE2
  #define TRACE
#endif
#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

#include "Generic.h"

#include "Parameters.h"

/**************************************************************/
/* parameters_find_item()                                     */
/*                                                            */
/* Given a query string holding "name=value&name=value&...",  */
/* find a given name item and return its value.               */
/*                                                            */
/* The name is case insensitive.                              */
/*                                                            */
/* Parameters: Pointer to the query string;                   */
/*                                                            */
/*             Pointer to the name string.                    */
/*                                                            */
/* Returns:    Pointer to the item's value, malloed - caller  */
/*             must free() it later. NULL only if the name is */
/*             not found. "+"s are converted to spaces.       */
/**************************************************************/

char * parameters_find_item(const char * query, const char * name)
{
  const char   * ptr = query;
  unsigned int   len;

  if (name == NULL) return NULL;
  else len = strlen(name);

  while (ptr != NULL && *ptr != '\0')
  {
    if (!Strncmp_ci(ptr, name, len))
    {
      const char * equ;
      const char * end;

      equ = strchr(ptr, '=');
      if (equ == NULL) return Strdup("");

      end = strchr(ptr, '&');

      if (end == NULL) return Strdup(equ + 1);
      else
      {
        if (end - equ - 1 > 0) return Strndup(equ + 1, end - equ - 1);
        else                   return Strdup("");
      }
    }
    else
    {
      ptr = strchr(ptr, '&');
      if (ptr != NULL) ptr++;
    }
  }

  return NULL;
}
