VSPmip - multicast video streaming reception
============================================

History
-------

amg  0.01  14-Oct-1998  Written, comments from review added.

amg  0.02  16-Oct-1998  Updated for VSPmip 0.06

olove0.03  31-Mar-1999  Updated for VSPmip 0.07

Introduction
------------

When used in conjunction with the facilities provided by a STB's MPEG support
software, this relocatable module allows a selected multicast video stream to
be played.

Primary control of the module is by means of SWI calls, all of which have the
prefix SVB_.

Some information is also reported by means of system variables.

It also provides one command: *vpinfo, which reports status information and
statistics.

Error Reporting
---------------

The system variable <SVB$ErrMsgFile> is read to determine the location of
the error messages file.

Depending upon the setting of a flag, playback errors are reported in one of
two ways. The first is the conventional V set R0->error block method common
to all SWIs. The alternative is via system variables, with the error message
being placed in SVB$StatusInfo for a non-fatal error and in SVB$StatusFatal
for a fatal error.

This flag is set according to the presence of the system variable
SVB$WebErrorReports. If that variable has been set, then errors will be
reported via system variables. SVB$WebErrorReports is checked for only when
the module initialises (so if this facility is required, the system variable
should be set as part of the boot sequence).


The errors currently defined are:-

	1	Format Error
	2	No Session
	3	No Network Resource
	4	No Server Resource
	5	Entitlement Failure
	6	Programme Out Of Service
	7	Redirect
	
	997	No Video
	998	Timeout
	999	Bad Channel
	
Configuration
-------------

The system variable <SVB$ChannelFile> is read to determine the location of
the channels file.

This consists of a number of textual lines of the form:

<channel number><white space><textual channel description/name><white
space><IP addr, including port>

Note that because white space is the delimiter, there may not be any spaces
within the channel description/name - use a hard space (character 160) if
necessary there.

An example of the format would be:

1 MPEG1/2Mbs 224.6.6.6/8208	

This file is read at initialisation of the module, and in the event that that
fails it will reattempt as part of the processing of the OpenStream and
ReadChannelNames SWIs. However, once it has been read successfully it will
not be read again.

Take care to ensure that this format is maintained to ensure reliable parsing
of its contents.

There is presently a static limit on the number of channels that are
supported; although channel numbers themselves are arbitrary and need not be
in sequence, there is a maximum on the number of entries in this file.
Consult Acorn for the current setting.

Two channel numbers have a special meaning: 1111110 which means Channel Up
and 1111111 which means Channel Down. Obviously, these should not appear in
this file.

SWI call documentation
----------------------


SVB_SetServer 0x43c80
---------------------

This SWI is not appropriate in this variant of the VSP/SVB module. It will
return immediately with all registers unchanged.


SVB_OpenStream 0x43c81
----------------------

In:

R0: flags (none currently defined, set to 0)
R1: pointer to channel selection (in the form '-channel 25'), or
    channel/server selection (in the form '-channel 25 -server 227.3.3.3/8208')
R2: handle allocated by MPEGControl module

Out:

R0: handle allocated to this stream if no error is being raised, otherwise V
Set and R0->error block.

Description:

This SWI parses the channel number passed in R1 and tries to select that
video stream channel. The special values for Channel Up and Channel Down may
be used here.

If the channel number quoted does not appear in the configured channel
information, an Entitlement Failure error will be returned (note that this
may not result in a V set return on the SWI - see above).

If the channel number is valid, any current stream will be left (ie video
playback will be terminated), and the new stream joined. An error will be
raised if the join is unsuccessful.

If a longer delay between leave request and join request is desired, do not
use OpenStream to leave a playing channel - call CloseStream, and then wait
a second or two before calling OpenStream for the new channel.

When a server is specified with the -server switch, the server address given
will replace the address in use until that point (either read from the
configuration file, or set with a previously by -server) and the new address
will be used from now onwards.

The VSPmip module maintains a count of joins and leaves for each channel.
Specifying a new -server for a channel causes this count to be reset for that
channel. If the current server is specified with -server, the count is not
reset.

Note: since there is only one playback stream supported at a time, a fixed
value is currently returned for the handle.


SVB_CloseStream 0x43c82
-----------------------

In:

R0: flags (none currently defined, set to 0)
R1: handle, as returned by _OpenStream

Out:

-

Description:

If streaming is currently taking place, it will be stopped, and a leave will
be sent for that multicast group. No error is raised if streaming was not in
progress when this call is made.


SVB_CheckEndOfStream 0x43c83
----------------------------

In:

R0: flags (none currently defined, set to 0)
R1: handle, as returned by _OpenStream

Out:

An error condition, or

R0: end of stream indication (0 if NOT at end of stream)
R1: preserved
R2: 0
R3: 0

Description:

This SWI is used to check the status on a playing stream. If the stream is
still playing, 0 will be returned. If it has stopped an error (which may be
reported via system variables) will be raised. This will typically be a No
Video error.

Note: Although an error may be raised, a CloseStream call must still be made
to ensure that a Leave is sent for this channel.


SVB_SetSpeed 0x43c84
--------------------

In:

R0: 0 for normal speed, or speed qualifier (see note)
R1: handle
R2: pause (0 to pause, non-zero to play)

Out:

-

Description:

This SWI allows playback to be paused. Alteration of speed is NOT supported
in this variant of the VSP/SVB module (because the module cannot have any
control over the rate of the multicast stream).

It should also be noted that pause would be more accurately termed 'freeze'
since playback will resume from whereever the stream is currently at rather
than resuming from the moment of pause.



SVB_SetPosition 0x43c85
-----------------------

This SWI is not appropriate in this variant of the VSP/SVB module. It will
return immediately with all registers unchanged.



SVB_ReadNPT 0x43c86
-------------------

This SWI is not appropriate in this variant of the VSP/SVB module. It will
return immediately with R0 set to -1.


SVB_ReadChannel 0x43c87
-----------------------

In:

R0: flags (none currently defined, set to 0)

Out:

R0: current channel number or -1

Description:

This SWI will report the current channel number for the stream being played,
or -1.

Where a stream is being played it will also set the system variable
SVB$ChannelName to the textual name associated with this channel. If a stream
is not being played, it will set it to '<unset>' instead.



SVB_ReadChannelNames 0x43c88
----------------------------

In:

R0: flags
    b0 = 0 - only read file if it has not been read successfully yet
    b0 = 1 - always read file

Out:

-

Description:

This SWI will prod the module into attempting to read the configuration file,
if it has not already done so beforehand (b0 of R0 clear), or unconditionally
(b0 of R0 set).
