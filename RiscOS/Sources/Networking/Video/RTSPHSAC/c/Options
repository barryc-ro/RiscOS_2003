/**************************************************************/
/* File:    Options.c                                         */
/*          (C) 2002 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Implement RTSPHSAC_Options.                       */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 08-Nov-1999 (ADH): Created.                       */
/*          25-Jul-2002 (ADH): Imported to RTSP HSAC from     */
/*                             RTSP OVS.                      */
/**************************************************************/

#include <stdio.h>
#include <string.h>

#include <swis.h>

#ifdef TRACE2
  #define TRACE
#endif
#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

#include <VideoCtrl.h>

#include "Module.h"
#include "RTSPHErrors.h"
#include "Session.h"
#include "Utils.h"

#include "Options.h"

/**************************************************************/
/* options_options()                                          */
/*                                                            */
/* Implement RTSPHSAC_Options. See the Video Control          */
/* specification, 2501,817/FS, for more.                      */
/**************************************************************/

_kernel_oserror * options_options(_kernel_swi_regs * r)
{
  dprintf(("Entry_2", "options_options: Called\n"));
  dprintf(("Entry_3", " r0=%x\n",r->r[0]));
  dprintf(("Entry_3", " r1=%x\n",r->r[1]));
  dprintf(("Entry_3", " r2=%x\n",r->r[2]));

/* No options processing done at present - but this is how to do it */

#if 0
  bool      read = ((r->r[0] & VC_Options_ReadValues) != 0);
  session * s = session_find_by_id(r->r[1]);
  int     * current;

  if (s == NULL)
  {
    dprintf(("", "options_options: ID not found\n"));

    return make_error(rtsphsac_ERROR_CLIENT_ID_NOT_FOUND, 0);
  }

  current = (int *) r->r[2];

  /* Go through the options list looking for option tags we process */

  while (current[0] != vc_tags__end)
  {
    vc_options * opt = (vc_options *) current;

    switch (opt->header.tag)
    {
      case vc_tags_looping:
        if (opt->header.parameters == 1 && !read)
          s->loop = !!(opt->data.loop.loop);
        break;
    }

    current = current +
              (
                sizeof(opt->header)
                /
                sizeof(int)
              )
              +
              opt->header.parameters;
  }
#else
  (void)r;
#endif

  return NULL;
}
