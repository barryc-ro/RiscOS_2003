/*
 * Cache.h
 * C Header file of functions for dealing with local cache.
 */

/* Structure for DNS-in-progress */
typedef struct
{
  char			buf[1024];	/* Storage for 'querybuf' struct */
  int			errno;		/* Copy of h_errno for this request */
  int			state;		/* Status word */
  char 			**domain;	/* Domain part currently being queried */
  int			ns;		/* Name server, [0 .. _res.nscount] */
  int			time;		/* Time stamp of last sent request (cs) */
  int			numeric;	/* Numeric (Inverse) lookup? */
} dns_rec;

/* DNS-in-progress state values */
#define dns_NONE	0		/* DNS request not yet sent */
#define dns_PENDING	1		/* DNS request pending an answer (callafter?) */
#define dns_OK		2		/* DNS request state is OK, either succeed or fail */

/* Structure for cache entries */
typedef struct
{
  linklist_header 	header;		/* Link list pointers */
  char			*hostname;	/* Pointer to hostname */
  struct hostent 	*host;          /* Pointer to hostent, or NULL */
  int			flags;		/* Flags word for cache entry */
  int			time;		/* Time stamp that cache was created at (cs) */
  int			failure;	/* Failure type (-1 = host not found, -2 = timeout) */
  dns_rec		*dns;		/* DNS lookup status record, or NULL */
  int 			retry;		/* Retry number, 0..cache_RETRIES */
} cache_rec;

/* Cache linked list */
extern linklist_header cache_anchor;	

/* Timestamp for /etc/hosts file last read */
extern int cache_hoststime;

/* Cache control flags word */
extern int cache_control;

/* Flag bits in cache control word */
#define ctrl_FLUSHFAIL		0	/* Flush cache of failed lookups */
#define ctrl_FLUSHVALID		1	/* Flush cache of all items */
#define ctrl_FLUSHHOSTS		2	/* Flush cache of hosts file items */
#define ctrl_DISABLEFAIL	8	/* Disable caching of failed lookups */
#define ctrl_ENABLEFAIL		9	/* Enable caching of failed lookups */
#define ctrlbit_DISABLEFAIL 	0x01	/* Disable caching of failed lookups */
#define ctrlbit_ENABLEFAIL 	0x02	/* Enable caching of failed lookups */

/* Flag bits in cache entry 'flags' word */
#define flags_VALID	0x01		/* Valid entry */
#define flags_FAILED	0x02		/* Lookup failed */
#define flags_PENDING	0x04            /* Lookup pending */
#define flags_HOST	0x08		/* From hosts file */

/* Lifetimes of cache entries (in cs) */
#define cache_VALID	24*3600*100	/* Max lifetime of a valid entry (24 hrs) */
#define cache_FAILED	90*100		/* Lifetime of a failed entry (90 secs) */
#define cache_PENDING	((cache_delay+100)*cache_retries) /* Max lifetime of a pending entry */
#define cache_TIMEOUT	15*100		/* Timeout on a DNS server request (15 secs) */
#define cache_RETRIES	2		/* Default number of retries on bad address */
#define cache_DELAY	5*100		/* Default Delay between retries (5 secs) */

/* Number of retries on bad address (default is cache_RETRIES) */
extern int cache_retries;	

/* Delay between retries (default is cache_DELAY) */
extern int cache_delay;	

/* Functions */
extern void cacheclear(cache_rec *cr);
extern cache_rec *cachefind(char *hostname, int flags);
extern cache_rec *cacheadd(char *hostname, struct hostent *host, int flags);
extern void cacheinit(void);
extern void cachefini(BOOL all);
extern void cacheget(_kernel_swi_regs *r);
extern void cacheflush(int flags);
extern cache_rec *cachemerge(cache_rec *cr);
