/*      C.FH3

Purpose : Support for translating into RO_nfs_fh3 structures to avoid
          memory leakage

History :
Date	   Who    Comments
-----------------------------------------------------------------------------
16/03/1999 SNB    Created
****************************************************************************/

#include <string.h>
#include "Consts.h"
#include "Types.h"

int fh3cmp(const RO_nfs_fh3 *s1, const RO_nfs_fh3 *s2)
{
        size_t larger = s1->fh3.data.data_len;
        if (larger != s2->fh3.data.data_len) return 1;
	return memcmp(s1->fh3.data.data_val, s2->fh3.data.data_val, larger);
}

RO_nfs_fh3 *fh3cpy(RO_nfs_fh3 *s1, const RO_nfs_fh3 *s2)
{
	return fh3cpy_from_xdr(s1, &s2->fh3);
}

RO_nfs_fh3 *fh3cpy_from_xdr(RO_nfs_fh3 *fh, const nfs_fh3 *xdrfh)
{
        fh->fh3.data.data_len = xdrfh->data.data_len;
        fh->fh3.data.data_val = fh->opaque;
        memcpy(fh->opaque, xdrfh->data.data_val, fh->fh3.data.data_len);
        return fh;
}

/* The following need to use nfs_fh3 directly, because downcast.c does
 * not have access to RO_nfs_fh3 structures at its level of working.  The
 * next level up will upcast to RO_nfs_fh3 when necessary.
 */
nfs_fh3 *fh3cpy_from_fhandle(nfs_fh3 *fh, const nfs_fh *nfs2_fh)
{
        fh->data.data_len = NFS_FHSIZE;
        fh->data.data_val = (char *) &nfs2_fh->data[0];
        return fh;
}

nfs_fh *fh2cpy_from_fh3(nfs_fh *fh, const nfs_fh3 *nfs3_fh)
{
        return memcpy(fh, nfs3_fh->data.data_val, NFS_FHSIZE);
}
