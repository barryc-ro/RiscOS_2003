#include <rpc/rpc.h>
#include "rquota.h"

bool_t
xdr_rquota( XDR *xdrs, struct rquota *rq )
{
        if (!xdr_int(xdrs, &rq->rq_bsize))
                return FALSE;
        if (!xdr_bool(xdrs, &rq->rq_active))
                return FALSE;
        if (!xdr_u_long(xdrs, &rq->rq_bhardlimit))
                return FALSE;
        if (!xdr_u_long(xdrs, &rq->rq_bsoftlimit))
                return FALSE;
        if (!xdr_u_long(xdrs, &rq->rq_curblocks))
                return FALSE;
        if (!xdr_u_long(xdrs, &rq->rq_fhardlimit))
                return FALSE;
        if (!xdr_u_long(xdrs, &rq->rq_fsoftlimit))
                return FALSE;
        if (!xdr_u_long(xdrs, &rq->rq_curfiles))
                return FALSE;
        if (!xdr_u_long(xdrs, &rq->rq_btimeleft))
                return FALSE;
        if (!xdr_u_long(xdrs, &rq->rq_ftimeleft))
                return FALSE;
        return TRUE;
}

bool_t
xdr_getquota_rslt( XDR *xdrs, struct getquota_rslt *rslt )
{
        if ( !xdr_enum(xdrs, (enum_t *) &rslt->gqr_status) )
                return FALSE;
        if ( !xdr_rquota(xdrs, &rslt->gqr_rquota) )
                return FALSE;
        return TRUE;
}

bool_t
xdr_getquota_args( XDR *xdrs, struct getquota_args *args )
{
        if ( !xdr_string(xdrs, &args->gqa_pathp, RQ_PATHLEN) )
                return FALSE;
        if ( !xdr_int(xdrs, &args->gqa_uid) )
                return FALSE;
        return TRUE;
}
