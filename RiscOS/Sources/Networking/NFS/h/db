/* centralised control for trace/debug output
 */

#ifndef __db_h
#define __db_h

#include <stdarg.h>
#ifndef __NFSNFS_H
#include "NFS.h" /* for current setting of DEBUGON */
#endif

#if DEBUGON
#define db(arg) db_trace arg

/* N.B. Far too clever way of allowing variable args in a macro
 * it must be used with double brackets as:

  db((a1,a2,a3))

 */


#pragma -v1   /* hint to the compiler to check f/s/printf format */

void db_trace(char*,...);
/* Description:   Outputs tracing info.
 *
 * Parameters:    char* -- printf-style format string
 *                ...   -- variable argument list
 * Returns:       void.
 *
 */

#pragma -v0   /* back to default */


int db_is_on(void);  /* returns true if tracing turned on */
void db_off(void);   /* turns tracing off */

#else

/* No-trace versions */

#define db(arg)

#define db_is_on() 0
#define db_off()

#endif

#endif
