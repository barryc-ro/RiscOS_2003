/*
        Light-weight printf facilities
*/

#ifndef __NFSPRINTFUNC_H
#define __NFSPRINTFUNCS_H
#include <string.h>

#ifndef _kernel_HOST_UNDEFINED
#include "kernel.h"
#endif
#ifndef __NFSCONSTS_H
#include "Consts.h"
#endif
#ifndef __NFSTYPES_H
#include "NFSTypes.h"
#endif

#define FormatIntroductionChar '%'
#define ParameterBaseCharacter '0'

typedef struct
{
        _kernel_oserror *(*getfunc)( char *, void * );
        void *env;
}       Getfunc;

typedef struct
{
        _kernel_oserror *(*putfunc)( char, void * );
        void *env;
}       Putfunc;

typedef enum
{
        ReadAChar,
        ReadFromGetfunc,
        FinishJustify,
        NewLineSecondPart
}       Format_Action;

typedef struct
{
        Getfunc         control;
        int             *params;
        Format_Action   action;
        Getfunc         getfunc;
        YesNoAnswer     free_env_at_end;
        YesNoAnswer     truncate_this;
        int             justify_size;
}       format_environment;

typedef char *stringenv;

typedef struct
{
        char    *next;
        char    *start;
}       stringfreeenv;

extern _kernel_oserror *string_getfunc( char *next_char, void *environment );
extern _kernel_oserror *string_getfunc_then_free( char *next_char, void *environment );
extern _kernel_oserror *string_putfunc( char next_char, void *environment );
extern _kernel_oserror *wrch_putfunc( char next_char, void *environment );
extern _kernel_oserror *format_getfunc( char *next_char, void *environment );
extern _kernel_oserror *lightweight_formatstr( Putfunc *destination, Getfunc *control, int params[] );
extern _kernel_oserror *lightweight_vprintf( char *control, int params[] );
extern _kernel_oserror *lightweight_printf( char *control, ... );
#endif
