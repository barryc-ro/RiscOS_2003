/*
        RISC OS NFS utilities
*/

#ifndef __NFSUTILS_H
#define __NFSUTILS_H
#ifndef __NFSTYPES_H
#include "NFSTypes.h"
#endif

extern void space_reduce( char *source );
extern _kernel_oserror *new_user( UserSpecification **, char *, Host *, unsigned int, unsigned int , AUTH * );
extern _kernel_oserror *release_user( UserSpecification * );
extern _kernel_oserror *readargs_getstring( char **, int *, int );
extern _kernel_oserror *new_host( Host **, char * );
extern _kernel_oserror *askfor_password( char ** );
extern _kernel_oserror *release_host( Host * );
extern void junk_clients ( Chain_Header * );
extern u_long initialise_nfs_version ( Host * );

extern MountPoint *find_mount( char * );

typedef struct {
        u_long   usage;         /* current usage (if quota active) */
        u_long   slim;          /* soft limit (if quota active) */
        u_long   hlim;        /* hard limit (if quota active) */
        u_long   timeleft;      /* time left for over quota */
        } utils_quotastr;

typedef struct {
        bool_t   active_quota;  /* indicates whether quota is active */

        union {
                struct {
                        utils_quotastr space,   /* quota on disc space */
                                       files;   /* quota on number of files */
                       } quota;

                struct {
        /* careful multiplying the numbers by bsize. They are so large they can go negative */
                        u_long  bsize;          /* size of a block on the filing system */
                        u_long  blocks;         /* total number of bsize blocks on the filing system */
                        u_long  bfree;          /* total number of bsize blocks on the filing system */
                        u_long  bavail;         /* the number of bsize blocks available to non-privileged users */
                       } statfs;
               } sp;
} utils_spacestr;

/*
        Get the space quota information for the mount point
        [usage] [quota] and [limit] are as displayed by quota - v
        if quotas are not defined on this mount then it returns the statfs info.
*/
extern _kernel_oserror *utils_getfsspace(
                        utils_spacestr   *space,         /* values filled in on return */
                                  char   *mount_name );  /* input mount name */

/*
   Get the create access for the current mount point if there is a special one
   defined by variable "NFS$CreateAccess_foo" where foo is the mount point name,
   else get the value of variable "NFS$CreateAccess".
   If that isn't defined return -1.
   The returned value, if not -1 will only have valid access bits set:
        NFSMODE_OTHERS_WRITE
        NFSMODE_OTHERS_READ
        NFSMODE_GROUP_WRITE
        NFSMODE_GROUP_READ
        NFSMODE_USER_WRITE
        NFSMODE_USER_READ
*/
extern int utils_getcreateaccess(nfs_file_descriptor *ndesc);

#endif
