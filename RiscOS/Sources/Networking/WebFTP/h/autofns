

extern BOOL in_list(PSESS sess, PSESS *listp);
extern PSERVER find_existing_server(PSESS sess);
extern PSESS rem_from_list(PSESS *listp, PSESS sess);
extern RETURN_METHOD callback_handler(_kernel_swi_regs *regs, void *pw);
extern RETURN_METHOD inetevent_handler(_kernel_swi_regs *regs, void *pw);
extern RETURN_METHOD timer_handler( _kernel_swi_regs *r, void *pw );
extern _kernel_oserror *check_session_valid(PSESS sess);
extern _kernel_oserror *claim_events(void);
extern _kernel_oserror *cli_handler(char *arg_string, int arg_count, unsigned int cmd_no, void *pw);
extern _kernel_oserror *do_swi_close(ftp_close_args * args);
extern _kernel_oserror *do_swi_closesidle(ftp_closeidle_args * args);
extern _kernel_oserror *do_swi_open(ftp_open_args * args);
extern _kernel_oserror *do_swi_status(ftp_status_args * args);
extern _kernel_oserror *initialise(char *cmd_tail, int pbase, void *pw);
extern _kernel_oserror *make_error(int ecode);
extern _kernel_oserror *swi_handler(unsigned int swinum, _kernel_swi_regs *regs, void *pw);
extern char *list_name(PSESS *list);
extern char *strdup(char *str);
extern char *strndup(char *str, int len);
extern int get_a_line(PSESS sess, PQUEUE pq);
extern int multi_to_file(PSESS sess);
extern int my_socket(PSESS sess);
extern int my_socketclose(int *sock);
extern int reopen_file(PSESS sess);
extern int ro_fwritepos(void *ptr, int size, int items, int fh, int pos);
extern int ro_set_extent(int ro_handle, int size);
extern int ro_setpos(int handle, int pos);
extern int stack_pop(PSESS sess);
extern int to_file(PSESS sess, char *buf, int bytes);
extern void add_to_list(PSESS *listp, PSESS sess);
extern void bounce_cb(void);
extern void callback_remove(void);
extern void disconnect_server(PSESS sess, const BOOL try_to_reuse);
extern void do_ftpdir_header(PSESS sess);
extern void do_ftpdir_trailer(PSESS sess);
extern void ensure_server(PSESS sess);
extern void free_server(PSERVER server);
extern void ftp_dir_spotter(PSESS sess);
extern void ftpdir_scan(PSESS sess);
extern void idsess(PSESS sess);
extern void join_server_session(PSERVER server, PSESS sess);
extern void release_events(void);
extern void ro_unlink(char *fname);
extern void schedule_callback(void);
extern void service_call_handler(register int sn, _kernel_swi_regs *r);
extern void stack_push(PSESS sess, int value);
extern void try_to_extract_size(PSESS sess);
extern void extract_pwd(PSESS sess);
extern char *mkhostname(struct in_addr addr);

