/*	Read ISDN Configurations from CMOS RAM
	--------------------------------------


ISDN configurations are stored above the first 256 bytes of CMOS RAM so we need the EEROM
module to be able to read them.

Notes from John:

   Read config from NVRAM and send AT commands to the ISDN module before
   first dial.  Attached is the code I use in the config application to
   read the NVRAM (function NCConfig_ISDN_ReadCMOS).  This should show you the 
   NVRAM location and format to use.  I use a DeskLib librray call to do the 
   ReadCMOS SWI, you could replace that with a straight call to the SWI to 
   avoid linking DeskLib.
   
   You need the EEROM module in the NC for this to work (to access 
   above the first 256 bytes of NVRAM).
*/

#include <stdio.h>
#include <string.h>
#include <ctype.h>

#include "swis.h"

#include "kernel.h"
#include "configs.h"



/*  Number of bytes required to hold 'n' nibbles.  Half of one byte is unused if 'n' is odd.
 */
#define NUM_BYTES_FOR_NIBBLES(n)		((n + 1) / 2)


/*  Convert an integer value 'n', used to represent an ASCII digit in a nibble 
 *  of CMOS, to the corresponding ASCII digit.
 *  The values 1 .. 10 represent the digits '0' to '9'.  The value 0 is a terminator.
 */
#define NIBBLE_TO_ASCII_DIGIT(n)		(((n) == 0) ? '\0' : '0' + (n) - 1)


#define ASCII_DIGIT_TO_NIBBLE(d)		(((d) == '\0') ? 0 : (d) - '0' + 1)


/*	Read Byte from CMOS RAM
	-----------------------
	
*/

static int OS_Byte_ReadCMOS(int addr)
{
  return _kernel_osbyte(161, addr, 1)>>8 & 0xff;
}

	  	
/*	Read ISDN Config from NC CMOS
	-----------------------------
	
*/

void	NCConfig_ISDN_ReadCMOS (NCConfig_ISDN_CMOS *isdn)
{
	char	*s;
	int	i;
	int	x;
	int 	cmos_addr = NCCONFIG_ISDN_CMOS_START;
		
	isdn->country = OS_Byte_ReadCMOS (cmos_addr++);
	isdn->country += OS_Byte_ReadCMOS (cmos_addr++) << 8;

	isdn->operator = OS_Byte_ReadCMOS (cmos_addr++);
	

	for (i = 0, s = isdn->directory_number; 
	     i < NUM_BYTES_FOR_NIBBLES (NCCONFIG_ISDN_MAX_DN_DIGITS); 
	     i++) {

		x = OS_Byte_ReadCMOS (cmos_addr++);

 		*s++ = NIBBLE_TO_ASCII_DIGIT (x & 0x0f);
 		*s++ = NIBBLE_TO_ASCII_DIGIT (x >> 4); 		
	}
	*s = '\0';
	
	for (i = 0, s = isdn->subaddress; 
	     i < NUM_BYTES_FOR_NIBBLES (NCCONFIG_ISDN_MAX_SPID_DIGITS); 
	     i++) {

		x = OS_Byte_ReadCMOS (cmos_addr++);

 		*s++ = NIBBLE_TO_ASCII_DIGIT (x & 0x0f);
 		*s++ = NIBBLE_TO_ASCII_DIGIT (x >> 4); 		
	}
        *s = '\0';

	
}

