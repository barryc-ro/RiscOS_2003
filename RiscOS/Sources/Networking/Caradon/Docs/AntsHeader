
Whoops, slight cock-up yesterday, as I forgot that some of the system flags
fields have sprouted into healthy 8-bit quantities now. Below is the new 
format, plus a C include file which describes it. 

If anyone's got any ideas for ISP_ID & SCF_ID formats then let's hear 'em, 
otherwise I'll just make something up.

Enjoy!

Ant
-- 
                                  _  _
Ant Skelton                        \/                        ant@ant.org
ant@nc.acorn.co.uk                (`')               http://www.ant.org/
Acorn Network Computing            ()              ant@eerie.demon.co.uk



NC Smartcard Boot_Data_Block format v. 0.0.1d
---------------------------------------------

size            name                    info
----            ----                    ----
4+              SCF_ID                  Smartcard format version number
12+             SYSTEM_FLAGS            flags
4               ISP_ID                  in-house code to identify an ISP
8*              NC_ID                   soft copy of NC box ID (to detect roaming)
20+             PSTN_NUM                telephone number for POP
4               STATIC_IP               static IP address where used
4*              MAIL_RX_HOST            host IP addr. for RX'd mail [std. port assumed]
4*              MAIL_TX_HOST            host IP addr. for TX'd mail [std. port assumed]
4*              NNTP_HOST               USENET news server [std. port assumed]
4               DNS_PRIMARY             Domain Name Server [std. port assumed]
4               DNS_BACKUP              Backup Domain Name Server [std. port assumed]
4               TIME_PRIMARY            Network time server [std. port assumed]
4               TIME_BACKUP             Backup time server [std. port assumed]
8*              HTTP_PROXY              IP address / port
8*              WAIS_PROXY              IP address / port
8*              FTP_PROXY               IP address / port
8*              GOPHER_PROXY            IP address / port
8*              SECURITY_PROXY          IP address / port (certificate server)
8*              FSERV_PRIMARY           Filing system server
8*              FSERV_BACKUP            Backing filing system server
24              LOGIN_ID                username / hostname for IP establishment
24              LOGIN_SECRET            password / whatever
256^            ISP_SCRIPT              compressed dial-up script
-----
440 bytes total, unless I'm mistaken.

+: future proofing
*: unlikely to be used in phase 1.
^: Provision for local domain, home URL, and boot file encoding.
   



SYSTEM_FLAGS (1) (logically, 4 byte-wide quantities)
----------------

bits            info
----            ----

0-7             IP scheme (e.g. SLIP, PPP, ethernet etc.)
8-15            Mail RX protocol (e.g. POP, SMTP)
16-23           Mail TX protocol (e.g. SMTP, erm, IMAP, possibly)
24-31           Boot Protocol (e.g. BOOTP, DHCP)


SYSTEM_FLAGS (2) (logically, 4 byte-wide quantities)
----------------

bits            info
----            ----
0-7             Link authentication method (e.g. getty, PAP, CHAP)
8-15            Network filing system type (e.g. NFS)
16-23	        User preferences
24-31	        spare


SYSTEM_FLAGS (3) (real flags)
----------------

bits            info
----            ----

0               smartcard registered
1               authorization enable (ie prompt for login/passwd)
2               Soak test enable
3               PLIP bootstrap enable
4               State-saving enable (Malcolm's plan)
5-31		spare




/* various defines, types, and structs for boot data block format */

#define SCRIPT_SIZE            255      // max. size in bytes of script data (exluding header byte)
#define PSTN_SIZE              20       // size in bytes of stored telephone number
#define NCID_SIZE              8        // size in bytes of stored NC ID soft-copy
#define STRING_SIZE            24       // size in bytes of username/hostname and password strings
#define SYSTEM_FLAG_WORDS      3        // number of system flags words

/* SYSTEM_FLAGS #1 */

#define IP_SCHEME_MASK         0xff
#define MAIL_RX_MASK           0xff00
#define MAIL_TX_MASK           0xff0000
#define BOOTP_MASK             0xff000000

#define IP_SCHEME_SHIFT        0
#define MAIL_RX_SHIFT          8
#define MAIL_TX_SHIFT          16
#define BOOTP_SHIFT            24

/* SYSTEM_FLAGS #2 */

#define LINK_AUTH_MASK         0xff
#define NFS_TYPE_MASK          0xff00

#define LINK_AUTH_SHIFT        0
#define NFS_TYPE_SHIFT         8

#define EVAL_SYSTEM_BYTE(x, M, S) (((x) & (M))>>(S))

/* SYSTEM_FLAGS #3 */

#define SC_REGISTERED          0x1
#define SC_AUTH_ENABLE         0x2
#define SC_SOAK_ENABLE         0x4
#define SC_PLIP_ENABLE         0x8
#define SC_STATE_ENABLE        0x10

/* shorthand types */

typedef unsigned int UINT;
typedef unsigned char BYTE;

/* shorthand string types */

typedef char PSTN[PSTN_SIZE];
typedef char NCID[NCID_SIZE];
typedef char STRING[STRING_SIZE];

/* proxy format */

typedef struct {

  UINT IP_ADDR;
  UINT IP_PORT;

} PROXY;

/* ISP script format */

typedef struct {

  BYTE flags;
  BYTE data[SCRIPT_SIZE];

} SCRIPT;


/* the boot data block itself */
typedef struct {

  UINT   SCF_ID;                               /* boot data block format ID */
  UINT   SYSTEM_FLAGS[SYSTEM_FLAG_WORDS];      /* various system flags (see below */
  UINT   ISP_ID;                               /* ISP unique ID */
  NCID   NC_ID;                                /* NC unique ID soft-copy */
  PSTN   PSTN_NUM;                             /* telephone number for SAP */
  UINT   STATIC_IP;                            /* static IP address */
  UINT   MAIL_RX_HOST;                         /* Mail host IP address for incoming mail */
  UINT   MAIL_TX_HOST;                         /* Mail host IP address for outgoing mail */
  UINT   NNTP_HOST;                            /* USENET News host IP address */
  UINT   DNS_PRIMARY;                          /* Domain Name Service host IP address */
  UINT   DNS_BACKUP;                           /* Back-up DNS host IP address */
  UINT   TIME_PRIMARY;                         /* time server IP address */
  UINT   TIME_BACKUP;                          /* backup time server IP address */
  PROXY  HTTP_PROXY;                           /* HTTP proxy IP and port info */
  PROXY  WAIS_PROXY;                           /* WAIS procy IP & port */
  PROXY  FTP_PROXY;                            /* FTP proxy IP & port */
  PROXY  GOPHER_PROXY;                         /* GOPHER proxy IP & port */
  PROXY  SECURITY_PROXY;                       /* SECURITY proxy IP & port */
  PROXY  FSERV_PRIMARY;                        /* Primary fileserver IP & port */
  PROXY  FSERV_BACKUP;                         /* Backup fileserver IP & port */
  STRING LOGIN_ID;                             /* Username/hostname string */
  STRING LOGIN_SECRET;                         /* Password string */
  SCRIPT ISP_SCRIPT;                           /* dial-up script */
  
} SC_BOOT_BLOCK;


