#ifndef __DEFS_H__

#define __DEFS_H__

#include <time.h>

#include "kernel.h"
#define _APPNAME_ "Caradon"

#define UpCallV           0x1D

#define Dialler_Dial      0x4C6C0
#define Dialler_HangUp    0x4C6C1
#define Dialler_Status    0x4C6C2
#define Dialler_Answering 0x4C6C3
#define Dialler_Configure 0x4C6C4

#define Standby_State     0x4C7C0

#define CALLBACK_NOOP     0
#define CALLBACK_DODIAL   1
#define CALLBACK_CONNECT  2
#define CALLBACK_BADCARD  3
#define CALLBACK_NOSERVER 4
#define CALLBACK_WRITE    5
#define CALLBACK_SAYUP    6

#define PPP_Stats 0x4B606

#define NFS_SWIBASE   0x410C0
#define NFS_Mount     NFS_SWIBASE+0
#define NFS_MountList NFS_SWIBASE+1
#define NFS_SetUser   NFS_SWIBASE+2
#define NFS_Dismount  NFS_SWIBASE+3
#define NFS_MountInfo NFS_SWIBASE+4
#define NFS_FreeSpace NFS_SWIBASE+5

#define NCRegistry_EnumerateNetworkDrivers  0x4D380
#define NCRegistry_EnumerateSmartCardBlocks 0x4D381
#define NCRegistry_Enquiry                  0x4D382
#define NCRegistry_LoadSmartCardBlock       0x4D383
#define NCRegistry_Status                   0x4D384                      
#define NCRegistry_Write                    0x4D385                      
#define NCRegistry_Authenticate             0x4D386
#define NCRegistry_SupportInit              0x4D387
#define NCRegistry_SupportExit              0x4D388
#define NCRegistry_ChangeSmartCardCHV       0x4D389                      

#define TaskModule_SendMessage              0x4D300                      
#define TaskModule_StartTask                0x4D301                      
#define TaskModule_RegisterService          0x4D302                      
#define TaskModule_DeRegisterService        0x4D303                      

typedef unsigned int BOOL;

typedef struct
{
  int x, y;
} wimp_point;

typedef struct
{
  wimp_point min;
  wimp_point max;
} wimp_box;

#ifndef DrawFile_Render
#define DrawFile_Render 0x45540
#endif

#ifndef TRUE
#define TRUE 1
#endif
#ifndef FALSE
#define FALSE 0
#endif

typedef _kernel_oserror ErrorRec, *ErrorPtr;
extern ErrorPtr err;

#define EB(stmt) {err = (stmt); if (err) { oscli("Set Sennen$Newpage WWWDyn:DamageCrd"); goto fail; }}
#define ER(stmt) {err = (stmt); if (err) return(err); }
#define EG(stmt) {err = (stmt); if (err) goto fail;}
#define EX(stmt) {err = (stmt); if (err) check_error (err);}

extern void check_error (ErrorPtr err);

extern BOOL redial;

/* #define scale() (redial ? mini : matrix) */
#define scale() (redial ? matrix : matrix)

#define screen_redraw(u) _swix(Wimp_ForceRedraw, _INR(0, 4), u, \
                            screen_win.min.x, screen_win.min.y, \
                            screen_win.max.x, screen_win.max.y)

#define ReadModeVar(m, v, r) _swix(0x20035, _INR(0, 2) | _OUT(2), (m), (v), 0, (r))

#define NewPage(u) _swix(OS_SetVarVal, _INR(0, 2) | _IN(4), \
                         "Sennen$Newpage", u, strlen(u), 0);


#endif
