; ->Error

;---------------------------------------------------------------------------------------------








; Every error that occurs should end up here








;---------------------------------------------------------------------------------------------

; *********************************** NEW RISC OS 3 WAY *************************************

;---------------------------------------------------------------------------------------------

 [ RISC_OS > 2


Error

;----------------------------------------------------------------------------------
; If r0 < 0 THEN it indicates one of my errors that I must fetch using MessageTrans
;----------------------------------------------------------------------------------

            RSBS       r3, r0, #0
            BMI        error_riscos2

; Requirements:
;              r0  =  negative error number
;              r12 -> workspace
;              r13 -> FD stack

;----------------------------------------------------------------------------------
; Build error number and message tag
;----------------------------------------------------------------------------------

            ADR        r0, TempArea

            LDR        r2, =CDFSErrorNumber - 1
            ADD        r2, r2, r3

            ADD        r3, r3, #"a" - 1
            MOV        r3, r3, LSL #8
            ORR        r3, r3, #"e"

; Error number, Token - 'e?'<null>
            STMIA      r0, { r2, r3 }

;----------------------------------------------------------------------------------
; Get error message from message file
;----------------------------------------------------------------------------------

            ADR        r1, message_block
            MOV        r2, #0
            SWI        XMessageTrans_ErrorLookup

;----------------------------------------------------------------------------------
; Return error to caller
;----------------------------------------------------------------------------------

            STR        r0, verytemporary
            GRABALL
            LDR        r0, verytemporary
            ORRS       pc, r14, #Overflow_Flag

 ]


;---------------------------------------------------------------------------------------------

; ******************************* DON'T NEED MESSAGE TRANS **********************************

;---------------------------------------------------------------------------------------------

;**************************************************************************
;**************************************************************************

; This section deals with errors from the CD_module SWI's

; MAKE SURE THE STACK IS SET CORRECTLY WITH R14 = RETURN ADDRESS


;***************************************************************************
PutByte       ; see page 977             DONE
;***************************************************************************

 STASHALL                        ; ALLOW TO RUN ON !!!!!!

 Debug " Put byte "

;*************************************************************************
SaveFile   ; also deals with other write operations
;*************************************************************************

 [ RISC_OS=2
 addr R0, CannotWriteYouTwat     ; ALLOW TO RUN ON !!!!!!
 |
          MOV       r0, #ERROR_WRITETOCD
          B         Error
 ]

;**************************************************************************
;**************************************************************************

 [ RISC_OS=2
Error
 |
error_riscos2
 ]

;***********************
; This is a trap to change 'Bad Mode' into a decent error message
;***********************

 ; Bad mode = Audio disc

 LDR R1, [ R0 ]             ; R1 = error number

 LDR R2, =WrongDataModeNumber

 TEQ R1, R2

 [ RISC_OS = 2
 ADREQL R0, AudioDisc
 |
            MOVEQ      r0, #ERROR_AUDIODISC
            BEQ        Error
 ]

;***********************


 STR R0, verytemporary
 GRABALL
 LDR R0, verytemporary

 ORRS PC, R14, #Overflow_Flag




 LTORG

 END
