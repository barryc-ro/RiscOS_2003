; generated by Norcroft RISC OS ARM C vsn 3.1A [Apr 25 1990]
a1 RN 0
a2 RN 1
a3 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lr RN 14
pc RN 15

f0 FN 0
f1 FN 1
f2 FN 2
f3 FN 3
f4 FN 4
f5 FN 5
f6 FN 6
f7 FN 7

        AREA |C$$code|, CODE, READONLY

        IMPORT  |__main|
|x$codeseg|
        B       |__main|

        EXPORT  read_bits
read_bits
        MOV     ip, a2, LSR #5
        LDR     a4, [a1, ip, ASL #2]
        ADD     ip, ip, #1
        LDR     a1, [a1, ip, ASL #2]
        AND     a2, a2, #31
        MOV     a4, a4, LSR a2
        RSB     a2, a2, #32
        ORR     a1, a4, a1, ASL a2
        MOV     a2, #1
        MOV     a2, a2, ASL a3
        SUB     a2, a2, #1
        AND     a1, a1, a2
        MOVS    pc, lr

        EXPORT  read_len
read_len
        MOV     a4, a1
        ADD     a1, a2, a3
        MOV     a2, a1, LSR #5
        AND     a1, a1, #31
        LDR     ip, [a4, a2, ASL #2]
        MOV     ip, ip, LSR a1
        MOV     ip, ip, ASL a1
        SUB     a1, a3, a1
        B       |L000068.J5.read_len|
|L00005c.J4.read_len|
        ADD     a1, a1, #32
        ADD     a2, a2, #1
        LDR     ip, [a4, a2, ASL #2]
|L000068.J5.read_len|
        CMPS    ip, #0
        BEQ     |L00005c.J4.read_len|
        MOV     a2, #0
        CMPS    a2, ip, ASL #16
        MOVEQ   ip, ip, LSR #16
        ADDEQ   a1, a1, #16
        CMPS    a2, ip, ASL #24
        MOVEQ   ip, ip, LSR #8
        ADDEQ   a1, a1, #8
        CMPS    a2, ip, ASL #28
        MOVEQ   ip, ip, LSR #4
        ADDEQ   a1, a1, #4
        CMPS    a2, ip, ASL #30
        MOVEQ   ip, ip, LSR #2
        ADDEQ   a1, a1, #2
        CMPS    a2, ip, ASL #31
        ADDEQ   a1, a1, #2
        ADDNE   a1, a1, #1
        MOVS    pc, lr

        EXPORT  map_bit_offset_to_disc_address
map_bit_offset_to_disc_address
        LDRB    a4, [a1, #0]
        MOV     ip, a2, LSR #3
        MOV     a4, ip, LSR a4
        LDR     ip, [a1, #10]
        MOV     ip, ip, ASL #16
        MOV     ip, ip, LSR #16
        MUL     ip, a4, ip
        SUB     a2, a2, #512
        SUB     a2, a2, ip
        LDRB    a1, [a1, #5]
        MOV     a1, a2, ASL a1
        MOV     a2, #0
        BIC     a1, a1, #&e0000000
        ORR     a3, a2, a1
        MOV     a1, a3
        MOVS    pc, lr

        EXPORT  map_size
map_size
        LDRB    a2, [a1, #9]
        LDRB    a1, [a1, #0]
        MOV     a1, a2, ASL a1
        MOVS    pc, lr

        EXPORT  map_start
map_start
        LDRB    a2, [a1, #9]
        ADD     a2, a2, a2, LSR #31
        MOVS    a2, a2, ASR #1
        LDRB    a3, [a1, #0]
        MOV     a4, a2, ASL #3
        MOV     a3, a4, ASL a3
        ADD     a3, a3, #32
        ADDEQ   a3, a3, #480
        MOV     a2, a3
        B       map_bit_offset_to_disc_address

        DCB     &61,&64,&66,&73
        DCB     &5f,&64,&69,&73
        DCB     &63,&6f,&70,&5f
        DCB     &72,&65,&61,&64
        DCB     &00,&00,&00,&00
        DCD     &ff000014

        IMPORT  |x$stack_overflow|
        IMPORT  |_kernel_swi|
        EXPORT  adfs_discop_read
adfs_discop_read
        MOV     ip, sp
        STMFD   sp!, {a1,a2,a3,v1,v2,v3,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v3, a1
        MOV     v2, a2
        MOV     v1, a3
        SUB     sp, sp, #40
        MOV     a1, #1
        STR     a1, [sp, #4]
        LDR     a1, [v2, #0]
        STR     a1, [sp, #8]
        LDR     a1, [v3, #0]
        STR     a1, [sp, #12]
        LDR     a1, [v1, #0]
        STR     a1, [sp, #16]
        MOV     a3, sp
        MOV     a2, sp
        MOV     a1, #576
        ADD     a1, a1, #&60000
        BL      |_kernel_swi|
        LDR     a2, [sp, #8]
        STR     a2, [v2, #0]
        LDR     a2, [sp, #12]
        STR     a2, [v3, #0]
        LDR     a2, [sp, #16]
        STR     a2, [v1, #0]
        LDMEA   fp, {v1,v2,v3,fp,sp,pc}^

        DCB     &72,&65,&61,&64
        DCB     &5f,&6d,&61,&70
        DCB     &00,&00,&00,&00
        DCD     &ff00000c

        IMPORT  malloc
        EXPORT  read_map
read_map
        MOV     ip, sp
        STMFD   sp!, {a1,a2,v1,v2,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v2, a1
        MOV     v1, a2
        SUB     sp, sp, #12
        MOV     a1, v1
        BL      map_size
        STR     a1, [sp, #0]
        BL      malloc
        STR     a1, [v2, #0]
        STR     a1, [sp, #4]
        MOV     a1, v1
        BL      map_start
        STR     a1, [sp, #8]
        LDR     a3, [v1, #12]
        MOV     a2, #7
        AND     a2, a2, a3, ASR #29
        BIC     a1, a1, #&e0000000
        AND     a2, a2, #7
        ORR     a1, a1, a2, ASL #29
        STR     a1, [sp, #8]
        MOV     a3, sp
        ADD     a2, sp, #8
        ADD     a1, sp, #4
        BL      adfs_discop_read
        LDMEA   fp, {v1,v2,fp,sp,pc}^

        DCB     &72,&65,&61,&64
        DCB     &5f,&64,&69,&73
        DCB     &63,&5f,&72,&65
        DCB     &63,&6f,&72,&64
        DCB     &00,&00,&00,&00
        DCD     &ff000014

        EXPORT  read_disc_record
read_disc_record
        MOV     ip, sp
        STMFD   sp!, {a1,a2,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        STR     a1, [sp, #-40]!
        STR     a2, [sp, #4]
        MOV     a3, sp
        MOV     a2, sp
        MOV     a1, #69
        ADD     a1, a1, #512
        ADD     a1, a1, #&60000
        BL      |_kernel_swi|
        LDMEA   fp, {fp,sp,pc}^

        DCB     &64,&69,&73,&70
        DCB     &6c,&61,&79,&5f
        DCB     &64,&69,&73,&63
        DCB     &5f,&72,&65,&63
        DCB     &6f,&72,&64,&00
        DCD     &ff000014

        IMPORT  |_printf|
        EXPORT  display_disc_record
display_disc_record
        MOV     ip, sp
        STMFD   sp!, {a1,v1,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v1, a1
        LDRB    a2, [v1, #0]
        ADD     a1, pc, #L000378-.-8
        BL      |_printf|
        LDRB    a2, [v1, #1]
        ADD     a1, pc, #L000390-.-8
        BL      |_printf|
        LDRB    a2, [v1, #2]
        ADD     a1, pc, #L0003a8-.-8
        BL      |_printf|
        LDRB    a2, [v1, #3]
        ADD     a1, pc, #L0003b4-.-8
        BL      |_printf|
        LDRB    a2, [v1, #4]
        ADD     a1, pc, #L0003c0-.-8
        BL      |_printf|
        LDRB    a2, [v1, #5]
        ADD     a1, pc, #L0003d8-.-8
        BL      |_printf|
        LDRB    a2, [v1, #6]
        ADD     a1, pc, #L0003f4-.-8
        BL      |_printf|
        LDRB    a2, [v1, #7]
        ADD     a1, pc, #L000404-.-8
        BL      |_printf|
        LDRB    a2, [v1, #9]
        ADD     a1, pc, #L000414-.-8
        BL      |_printf|
        LDR     a2, [v1, #10]
        MOV     a2, a2, ASL #16
        MOV     a2, a2, LSR #16
        ADD     a1, pc, #L000428-.-8
        BL      |_printf|
        LDR     a2, [v1, #12]
        ADD     a1, pc, #L000438-.-8
        BL      |_printf|
        LDR     a2, [v1, #16]
        ADD     a1, pc, #L00044c-.-8
        BL      |_printf|
        LDR     a2, [v1, #20]
        MOV     a2, a2, ASL #16
        MOV     a2, a2, LSR #16
        ADD     a1, pc, #L00045c-.-8
        BL      |_printf|
        ADD     a2, v1, #22
        ADD     a1, pc, #L000468-.-8
        LDMEA   fp, {v1,fp,sp,lr}
        B       |_printf|
L000378
        DCB     &6c,&6f,&67,&32
        DCB     &5f,&73,&65,&63
        DCB     &74,&6f,&72,&5f
        DCB     &73,&69,&7a,&65
        DCB     &20,&25,&64,&0a
        DCB     &00,&00,&00,&00
L000390
        DCB     &73,&65,&63,&74
        DCB     &6f,&72,&73,&5f
        DCB     &70,&65,&72,&5f
        DCB     &74,&72,&61,&63
        DCB     &6b,&20,&25,&64
        DCB     &0a,&00,&00,&00
L0003a8
        DCB     &68,&65,&61,&64
        DCB     &73,&20,&25,&64
        DCB     &0a,&00,&00,&00
L0003b4
        DCB     &64,&65,&6e,&73
        DCB     &69,&74,&79,&20
        DCB     &25,&64,&0a,&00
L0003c0
        DCB     &66,&72,&61,&67
        DCB     &6d,&65,&6e,&74
        DCB     &5f,&69,&64,&5f
        DCB     &6c,&65,&6e,&67
        DCB     &74,&68,&20,&25
        DCB     &64,&0a,&00,&00
L0003d8
        DCB     &6c,&6f,&67,&32
        DCB     &5f,&62,&79,&74
        DCB     &65,&73,&5f,&70
        DCB     &65,&72,&5f,&6d
        DCB     &61,&70,&5f,&62
        DCB     &69,&74,&20,&25
        DCB     &64,&0a,&00,&00
L0003f4
        DCB     &73,&65,&63,&74
        DCB     &6f,&72,&5f,&73
        DCB     &6b,&65,&77,&20
        DCB     &25,&64,&0a,&00
L000404
        DCB     &62,&6f,&6f,&74
        DCB     &5f,&6f,&70,&74
        DCB     &69,&6f,&6e,&20
        DCB     &25,&64,&0a,&00
L000414
        DCB     &7a,&6f,&6e,&65
        DCB     &73,&5f,&69,&6e
        DCB     &5f,&6d,&61,&70
        DCB     &20,&25,&64,&0a
        DCB     &00,&00,&00,&00
L000428
        DCB     &7a,&6f,&6e,&65
        DCB     &5f,&73,&70,&61
        DCB     &72,&65,&20,&25
        DCB     &64,&0a,&00,&00
L000438
        DCB     &72,&6f,&6f,&74
        DCB     &5f,&64,&69,&72
        DCB     &65,&63,&74,&6f
        DCB     &72,&79,&20,&26
        DCB     &25,&58,&0a,&00
L00044c
        DCB     &64,&69,&73,&63
        DCB     &5f,&73,&69,&7a
        DCB     &65,&20,&25,&64
        DCB     &0a,&00,&00,&00
L00045c
        DCB     &64,&69,&73,&63
        DCB     &5f,&69,&64,&20
        DCB     &25,&64,&0a,&00
L000468
        DCB     &64,&69,&73,&63
        DCB     &5f,&6e,&61,&6d
        DCB     &65,&20,&25,&31
        DCB     &30,&73,&0a,&00

        DCB     &6d,&61,&69,&6e
        DCB     &00,&00,&00,&00
        DCD     &ff000008

        IMPORT  |_sprintf|
        IMPORT  free
        EXPORT  main
main
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,v5,v6,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        SUB     sp, sp, #96
        MOV     a1, #0
        STR     a1, [sp, #88]
|L0004a4.J4.main|
        LDR     a3, [sp, #88]
        ADD     a1, sp, #68
        ADD     a2, pc, #L000500-.-8
        BL      |_sprintf|
        ADD     a2, sp, #4
        ADD     a1, sp, #68
        BL      read_disc_record
        CMPS    a1, #0
        BNE     |L000600.J7.main|
        LDR     a1, [sp, #88]
        LDR     a2, [sp, #16]
        BIC     a2, a2, #&e0000000
        AND     a1, a1, #7
        ORR     a1, a2, a1, ASL #29
        STR     a1, [sp, #16]
        ADD     a2, sp, #68
        ADD     a1, pc, #L000504-.-8
        BL      |_printf|
        ADD     a2, sp, #4
        MOV     a1, sp
        BL      read_map
        MOV     v3, #0
        B       |L0005e4.J9.main|
L000500
        DCB     &3a,&25,&64,&00
L000504
        DCB     &44,&69,&73,&63
        DCB     &20,&25,&73,&0a
        DCB     &00,&00,&00,&00
|L000510.J8.main|
        MOV     v1, v3, ASL #3
        LDRB    a1, [sp, #4]
        MOV     a1, v1, ASL a1
        ADD     a2, a1, #8
        MOV     v2, a2
        LDRB    a3, [sp, #8]
        LDR     a1, [sp, #0]
        BL      read_bits
        ADD     v2, a1, v2
        LDRB    a1, [sp, #4]
        MOV     a2, v1, ASL a1
        ADD     v1, a2, #32
        CMPS    v3, #0
        ADDEQ   v1, v1, #480
        ADD     a2, v3, #1
        STR     a2, [sp, #92]
        MOV     a2, a2, ASL #3
        MOV     a1, a2, ASL a1
        ADD     a2, a1, #32
        LDR     a1, [sp, #14]
        MOV     a1, a1, ASL #16
        MOV     a1, a1, LSR #16
        SUB     v6, a2, a1
        B       |L0005cc.J13.main|
|L000570.J12.main|
        MOV     a2, v1
        ADD     a1, sp, #4
        BL      map_bit_offset_to_disc_address
        MOV     v4, a1
        LDRB    a3, [sp, #8]
        MOV     a2, v1
        LDR     a1, [sp, #0]
        BL      read_bits
        MOV     v5, a1
        LDRB    a3, [sp, #8]
        MOV     a2, v1
        LDR     a1, [sp, #0]
        BL      read_len
        MOV     v3, a1
        CMPS    v1, v2
        BNE     |L0005c8.J16.main|
        ADD     v2, v2, v5
        LDRB    a1, [sp, #9]
        MOV     a3, v3, ASL a1
        BIC     a2, v4, #&e0000000
        ADD     a1, pc, #L00061c-.-8
        BL      |_printf|
|L0005c8.J16.main|
        ADD     v1, v1, v3
|L0005cc.J13.main|
        CMPS    v1, v6
        BCC     |L000570.J12.main|
        MOV     a2, v1
        ADD     a1, sp, #4
        BL      map_bit_offset_to_disc_address
        LDR     v3, [sp, #92]
|L0005e4.J9.main|
        LDRB    a1, [sp, #13]
        CMPS    v3, a1
        BCC     |L000510.J8.main|
        LDR     a1, [sp, #0]
        BL      free
        ADD     a1, pc, #L00062c-.-8
        BL      |_printf|
|L000600.J7.main|
        LDR     a1, [sp, #88]
        ADD     a1, a1, #1
        STR     a1, [sp, #88]
        CMPS    a1, #6
        BLT     |L0004a4.J4.main|
        MOV     a1, #0
        LDMEA   fp, {v1,v2,v3,v4,v5,v6,fp,sp,pc}^
L00061c
        DCB     &28,&25,&20,&38
        DCB     &58,&2c,&25,&20
        DCB     &38,&58,&29,&20
        DCB     &00,&00,&00,&00
L00062c
        DCB     &0a,&0a,&00,&00

        AREA |C$$data|

|x$dataseg|

        END
