Gentlemen,

The marketing people have expressed a strong desire for some form of disc
protection for Risc OS 3.00. Here's my suggestion for such a thing:

*  A password may be given to any directory on a FileCore disc (1).

*  The user may give a password (2).

*  The user's password and the passwords on directories determine whether
the user is the owner or a public with respect to a given file/directory
(3) (5).

*  The public access attributes determine what a public user may do (4).

*  This mechanism does not provide any form of partitioning or disc usage
control (6).

*  Desktop control of these facilities is not provided - they are all
controlled by the command line. The protection still works in the desktop
though.

The notes below give the detail of the above suggestion.

--Jonathan


(1) I suggest the password be held in the now redundent title field of
directories which provides 19 bytes of space. This means not more than 18
bytes of password proper to give room to provide a check byte to prevent
titles being recognised as password and causing no end of trouble.

(2) The actual mechanism of the user giving a password needs consideration.
At the lowest level a *-command could be provided. A *-command may not be
good enough so discussion with the marketting people on this is needed. The
password needs to be held by FileCore so it probably needs to be simply
encrypted by FileCore so that a "*memory 12345678" doesn't show it.

(3) For a given file if the user's password matches any of the passwords of
the directories from the root the directory containing the file then the
user is an owner, otherwise the user is a public. If none of these
directories have a password then the user is an owner. For a directory the
same check is made, and the directory in question's password is checked too.

(4) An owner of a file may do anything to it.
The public access attributes of a file permit the following:
R - reading the contents of a file
W - writing the contents only of a file
The public access attributes of a directory permit the following:
R - reading the directory's contents (showing a directory viewer on it)
W - changing the date,type and name of any file inside this directory, and
    creating files in the directory but does not permit renaming a file into
    or out of the directory nor deleting a file in the directory.

(5) Example:

                                $ fred
                                |
                        --------+--------
                       |                  |
                     john x              jim y
                       |                  |
                       .                  .

If the user has no password then the user is a public to the whole disc.
If the user has password fred then the user is the owner of the whole disc.
If the user has password x then the user is the owner of any file inside
        directory john and has public access to the rest of the disc. Note
        this user cannot delete directory john because the user isn't the
        owner of $.

Another example:

                                $ master
                                |
    ------------------------------------------------------
   |          |             |                             |
class1 un   class2 deux   class3 trois                   Apps

A user with no password has public access only to the disc due to the master
password on $.
A user with password un, deux or trois has owner access to class1, class2 or
class3 respectively, but public access to the rest of the disc.
The user with password master is the owner of the whole disc.

(6) DOSFS partitions do initially appear to give the required control, but
you can't restrict owner's access and you can't control the access to a
particular file. Having said this, it would be possible to toggle the
meaning of the owner directory access bits (which are both clear always at
the moment), and use that mechanism - this may cause problems!
