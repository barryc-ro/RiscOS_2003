; >Events

event_pollnotzero
	LDR	r0, [r1, #4]
	SUB	r0, r0, #1
	BL	UpdateIcon
	MOV	r0, #0
	STR	r0, slotupdate
	B	WimpPoll


;---------------------------------------------
; In    r1 -> wimp_eventstr
;             [r1, #0]  pointer x
;             [r1, #4]          y
;             [r1, #8]  new button state
;             [r1, #12] window handle (-1 if background/icon bar)
;             [r1, #16] icon handle (-1 if none)

; Out   all regs may be corrupted - going back to PollWimp
event_mouse
	LDMIA	r1, {r0-r4}

	LDR	r5, ictvform_handle
	CMP	r3, #iconbar_whandle		;Iconbar?
	BEQ	%FT90
	CMP	r3, r5
	CMPEQ	r4, #3
	BEQ	mouse_press_format
	BNE	WimpPoll			;Nope, so nowt to do with us then

90	TST	r2, #button_left :OR: button_right	;Sel/Adj?
	BNE	mouse_select_iconbar
	TST	r2, #button_middle			;Menu?
	BNE	mouse_menu_iconbar
	B	WimpPoll				;Hmm, weird....

Filer_OpenDirCommand
	DCB	"%Filer_OpenDir PCCardFS:"
	ALIGN

;----------------------------------
mouse_select_iconbar	ROUT
	BL	find_slot_number	;returns a number 0->[maxdrives-1] in R0, taking iconhandle in r4
	BL	UpdateIcon
	Debug	wt,"Right, this icon belongs to slot ",r0
	ADR	r1, Filer_OpenDirCommand
	ADR	r2, miscdata
	LDMIA	r1!, {r3-r8}		;Read from ROM
	STMIA	r2!, {r3-r8}		;Write to workspace
	ADR	r1, sloticondata
	ADD	r1, r1, r0, LSL #5	;R1 points to start of icondata
	Debug	wt,"Icondata is at ",r1

	LDRB	r3, [r1, #10]		;Best check the drive is occupied...
	CMP	r3, #"f"
	BNE	WimpPoll		;Empty or IO card, so can't open filer window.

	ADD	r1, r1, #12		;Add offset to icon label (ie 'DiscName')
	LDRB	r3, [r1]
	CMP	r3, #":"
	MOVNE	r3, #":"
	STRNEB	r3, [r2], #1
01	LDRB	r3, [r1], #1		;Byte-by-byte, copy it into the
	CMP	r3, #0			;
	STRNEB	r3, [r2], #1		;workspace
	BNE	%BT01			;until we hit a terminating zero (not copied - we haven't finished yet)

	MOV	r3, #"."
	STRB	r3, [r2],#1
	MOV	r3, #"$"
	STRB	r3, [r2],#1
	MOV	r3, #0
	STRB	r3, [r2],#1		;There, that's the '.$\0' added.

	ADR	r0, miscdata
	DebugS	wt,"Command is ",r0, 32
	SWI	XOS_CLI
	B	WimpPoll

;----------------------------------
find_slot_number
	Push	"r1,r2,lr"
	ADR	r1, sloticondata
	ADD	r1, r1, #28		;Now pointing to iconhandle of drive 0 icon
	MOV	r0, #0
02	LDR	r2, [r1]		;Get the iconhandle
	CMP	r2, r4
	Pull	"r1,r2,pc",EQ		;Got it, so return with r0 indicating the slot
	ADD	r0, r0, #1
	ADD	r1, r1, #32
	CMP	r0, #MaxNum_Slots
	BNE	%BT02
	MOV	r0, #0			;Some sort of error would be better here
	Pull	"r1,r2,pc"



;--------------------------------------------------------------------------------
mouse_menu_iconbar
	SUB	r2, r0, #4*16		;Put the x into r2, altered slightly...
	BL	find_slot_number	;returns a number 0->[maxdrives-1] in R0, taking iconhandle in r4
	Debug	wt,"Right (menu), this icon belongs to slot ",r0
	BL	updatemenu
	B	CreateMenu


updatemenu
	ADR	r1, menustart		;From here up to the SWI, r1,r2 must remain intact!
	ADD	r3, r0, #"0"		;Converting 0 to "0" etc, for the title of the menu
	STRB	r3, [r1, #10]

	ADR	r3, sloticondata
	ADD	r3, r3, r0, LSL #5	;R3 points to relevant icon info
	LDRB	r3, [r3, #10]		;Get the last letter of the spritename
	Debug	wt,"Last letter of sprite read as ",r3
	CMP	r3, #"f"		;Drive contains an FScard?
	LDREQB	r3, formatopen		;Yup, but is it being formatted?
	CMPEQ	r3, #0

	LDR	r3, menu_main+m_headersize+(mi_size*0)+mi_iconflags	;Name disc
	ORRNE	r3, r3, #is_shaded
	BICEQ	r3, r3, #is_shaded
	STR	r3, menu_main+m_headersize+(mi_size*0)+mi_iconflags
	LDR	r3, menu_main+m_headersize+(mi_size*1)+mi_iconflags	;Dismount
	ORRNE	r3, r3, #is_shaded
	BICEQ	r3, r3, #is_shaded
	STR	r3, menu_main+m_headersize+(mi_size*1)+mi_iconflags
	LDR	r3, menu_main+m_headersize+(mi_size*6)+mi_iconflags	;Free
	ORRNE	r3, r3, #is_shaded
	BICEQ	r3, r3, #is_shaded
	STR	r3, menu_main+m_headersize+(mi_size*6)+mi_iconflags
	LDR	r3, menu_main+m_headersize+(mi_size*2)+mi_iconflags	;Format
	ORRNE	r3, r3, #is_shaded
	BICEQ	r3, r3, #is_shaded
	STR	r3, menu_main+m_headersize+(mi_size*2)+mi_iconflags

;	LDRB	r3, formatopen
;	CMP	r3, #0
;	LDRNE	r3, menu_main+m_headersize+(mi_size*2)+mi_iconflags	;Format (if format win open)
;	ORRNE	r3, r3, #is_shaded
;	STRNE	r3, menu_main+m_headersize+(mi_size*2)+mi_iconflags

;	MOV	r3, #0
;	STR	r3, menu_namedisc + m_headersize + mi_icondata

	MOV	pc, lr

CreateMenu
	MOV	r3, #96+(7*44)		;Fix the Y height to the style-guide value
	STR	r1, menu_handle
	SWI	XWimp_CreateMenu
	SWIVS	OS_GenerateError

	B	WimpPoll

;---------------------------------------------
; In    r1 -> wimp_eventstr
;             [r1, #0] main menu item selected
;	      [r1, #4] 1st submenu item selected
;		...
;	      terminated by -1

; Out   all regs may be corrupted - going back to PollWimp

event_menu_select
	MOV	r2, r1			;R2 is Wimp event pointer (list of selections)
	LDR	r1, menu_handle		;R1 is menu handle.
	BL	DecodeMenu
	Debug	wt,"Done the SWI"
	DebugIf	VS,wt,"But it came back with V set!"
	ADRVC	r1, miscdata
	SWIVC	XWimp_GetPointerInfo
	BVS	WimpPoll
	LDR	r1, miscdata+8		;Get button state
	TST	r1, #&01		;Select or menu?
	ADRNE	r1, menustart		;From here up to the SWI, r1,r2 must remain intact!
	LDRNEB	r0, [r1, #10]
	SUBNE	r0, r0, #"0"
	BLNE	updatemenu		;Change any greyed icons if necssary
;	LDRNE	r1, menu_handle
	SWINE	XWimp_CreateMenu

	B	WimpPoll

;-----------------------------------------
DecodeMenu
	Push	"lr"
	ADR	r3, menustart
	LDRB	r3, [r3, #10]		;R3 is ASCII drive number
	LDR	r14, [r2], #4		;Load main menu selection & update r2 to point to next.
	ADD	pc, pc, r14, LSL #2
	Pull	"pc"			;Dummy instruction

	B	do_namedisc
	B	do_dismount
	B	do_format
	B	do_backup
	B	do_share
	B	do_verify
	B	do_free

error_namedisc
	DCD 	1
	DCB	"TooShrt",0
	ALIGN

menucommands
fsprefix	DCB	"PCCardFS",0
namedisc	DCB	":Namedisc :n",0
dismount	DCB	":Dismount :n",0
format		DCB	":CardFormat n  ",0
formatdos	DCB	"DOS ",0
formatpcc	DCB	"PCCARDFS ",0
backup		DCB	":Backup n",0
desk_free	DCB	"ShowFree -FS PCCardFS n",0
free		DCB	":Free n",0
		ALIGN

do_namedisc
	Push	"r2,r3"
	BL	do_adismount
	Pull	"r2,r3"
	LDR	r14, [r2], #4		;Load submenu selection
	CMP	r14, #-1
	DebugIf	EQ,wt,"uh oh ",r14
	Pull	"pc",EQ			;Um, not the namedisc submenu

	Debug	wt, "R12 is ",r12

	LDRB	r14, mb_namedisc
	Debug	wt,"1st char of namedisc is ",r14
	CMP     r14, #32
        LDRHSB  r14, mb_namedisc+1
	Debug	wt,"2nd char of namedisc is ",r14
        CMPHS   r14, #32
        ADRLO   r0, error_namedisc
        BLLO    msgtrans_errorlookup
        Pull	"pc",LO

	ADDR	r1, namedisc
	BL	createcommand
	STRB	r3, [r2], #1			;Bung drive number onto command
	MOV	r1, #32
	STRB	r1, [r2], #1			;Followed by a space

	ADR	r14, mb_namedisc
46	LDRB	r1, [r14], #1			;and then the contents of the namedisc entry
	CMP	r1, #32
	STRGTB	r1, [r2], #1
	BGT	%BT46

	MOV	r1, #0
	STRB	r1, [r2]
	DebugS	wt,"Calling OS_CLI with ",r0
	SWI	XOS_CLI
	Pull	"pc",VS
	;Else, update the iconbar icon
	SUB	r0, r3, #"0"
	BL	UpdateIcon
	Pull	"pc"

do_adismount
	Push	"lr"
do_dismount
	ADDR	r1, dismount
	BL	createcommand		;Returns with r2 pointing to the last char, R0 points to cmd start
	STRB	r3, [r2]
	DebugS	wt,"Calling OS_CLI with ",r0
	SWI	XOS_CLI
	MOVVS	r1, #1			;OK button only
	BL	ExpandTaskTitle
	SWIVS	Wimp_ReportError

	;Power eject code here?
	Pull	"pc"

do_format
	LDR	r4, [r2]		;Get menu item
	CMP	r4, #0
	Pull	"pc",EQ			;1st item means nothing to us
	MOVLT	r4, #1			;If -ve, (ie main menu format clicked), default to PCCardFS
;*** SHOULD CHECK INTERACTIVE BIT IN CMOS HERE? Depends...
	B	interactive_format

do_backup				;Can't currently do this!
	Pull	"pc"

do_share				;Can't currently do this!
	Pull	"pc"

do_verify				;Can't currently do this!
	Pull	"pc"

do_free
	ADDR	r1, desk_free
	ADR	r2, miscdata + &100
48	LDRB	r0, [r1],#1
	STRB	r0, [r2],#1
	CMP	r0, #0
	BNE	%BT48
	SUB	r2, r2, #2		;R2 is sitting over the 'n'
	STRB	r3, [r2]
	ADR	r0, miscdata + &100
	DebugS	wt,"Calling OS_CLI with ",r0
	SWI	XOS_CLI

	Pull	"pc"


createcommand
	ADR	r0, fsprefix
	ADR	r2, miscdata + &100
	LDMIA	r0, {r4,r5}
	STMIA	r2!, {r4, r5}       ;Fsprefix xferred
50	LDRB	r0, [r1],#1
	STRB	r0, [r2],#1
	CMP	r0, #0
	BNE	%BT50
	SUB	r2, r2, #2
	ADR	r0, miscdata + &100
	MOV	pc, lr

;-------------------------------------------------------
; In    r1 -> wimp_eventstr
;             [r1, #0]     block size
;             [r1, #12]    your ref
;             [r1, #16]    message action
;             [r1, #20...] message data
event_user_message
	LDMIA	r1, {r0-r4}

	CMP	r4, #0		;Is it a quit message?
	BEQ	ev_usr_quit

	LDR	r14,=Message_MenuWarning
	CMP	r4, r14
	BNE	WimpPoll

ev_men_wrn
	Debug	wt,"Message_MenuWarning received"
	;Identify the PCCard type & fill in the menu

	ADR	r1, menustart
	LDRB	r1, [r1, #10]		;R0 is ASCII drive number
	ADR	r0, miscdata + &f0
	STRB	r1, [r0, #1]
	MOV	r1, #':'
	STRB	r1, [r0]
	MOV	r1, #0
	STRB	r1, [r0, #2]
	DebugS 	wt,"Drive identifier string is ",r0
	ADR	r1, miscdata + &100
	SWI	XPCCardFS_DescribeDisc
	BVC	pcddok

        ; Error - what is it?
	Debug   wt,"Uh oh, the DescribeDisc errored"
        LDR     r3,[r1]

	Debug	wt,"The first word of the disc record was ",r3

        LDR     r2,=&10108              ; empty
        TEQ     r3,r2
	ADREQ	r1, idemptytxt
        BEQ     mkcfwin

	ADR	r1, iduformtxt		;If it's not empty, then say it is unformatted
        B       mkcfwin

        ; other error
        B	WimpPoll

idemptytxt
	DCB	"DEmpty",0
	ALIGN
iduformtxt
	DCB	"UForm",0
	ALIGN
idpccfstxt
	DCB	"ME22",0
	ALIGN
iddosfstxt
	DCB	"ME23",0
	ALIGN

pcddok
	;Now, it's formatted, but to which format????
	LDR	r2, [r1, #32]		;Get the disctype from the disc record
	MOV	r1, #&f00
	ADD	r1, r1, #&cd		;ie R1=&fcd (filetype for filecore disc)
	CMP	r2, r1			;Is it a filecore harddisc? (ie PCCardFS)
	ADREQ	r1, idpccfstxt
	BEQ	mkcfwin			;Yup, it surely is!
	MOV	r1, #&f00
	ADD	r1, r1, #&c8		;ie R1=&fc8 (filetype for a DOS disc)
	CMP	r2, r1
	ADREQ	r1, iddosfstxt
	ADRNE	r1, iduformtxt

mkcfwin
	LDR	r2, currform_indir
	MOV	r3, #&40
	BL	msgtrans_lookuptoken	;This fills in the disc type icon
        ADR     r0,miscdata
        LDR     r1, currform_handle
        LDR     r2,[r0,#24]
        LDR     r3,[r0,#28]
        SWI     XWimp_CreateSubMenu
	B	WimpPoll

ev_usr_quit
	Debug	wt,"Quit message received..."
	LDR	r12, private_word_address
CDandE	BL	Die	;CloseDownAndExit
	SWI	OS_Exit
;--------------------------
        LNK     s.fsops
