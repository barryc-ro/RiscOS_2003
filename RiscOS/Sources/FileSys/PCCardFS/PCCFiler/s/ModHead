; > ModHead
        LEADR   Module_LoadAddr

        ASSERT  (.=Module_BaseAddr)

        DCD     Start          - Module_BaseAddr                   	; Start
        DCD     Init           - Module_BaseAddr
        DCD     Die            - Module_BaseAddr
        DCD     Service        - Module_BaseAddr  	; Service
        DCD     Title          - Module_BaseAddr
        DCD     Helpstr        - Module_BaseAddr
        DCD     CommandTable   - Module_BaseAddr      	; Helptable & *command entry point
        DCD     0	                          	; SWIbase (no SWIs)
	DCD 	0					; SWI handler
        DCD     0					; SWI decode table
        DCD     0                               	; SWI decode code

; ---------------------------------------------------------------------------------------------------
Title   DCB     "PCCardFSFiler",0
Helpstr DCB     "PCCardFSFiler",9,"$VString ($Date)",0
                ALIGN

; ---------------------------------------------------------------------------------------------------
;       Module initialisation point
Init
        Push    "r0,lr"
        Debug   mod,"Initialising (fwiw!)"
	;Um, this _is_ an interesting routine!
	MOV	r0, #1
	SWI	XPCMCIA_FSOp			; Purely to check the manager exists
	CMPVC	r0, #0
	SETV	EQ
	Pull 	"r0,pc"

; ---------------------------------------------------------------------------------------------------
;       RMKill'ing the module
; r1, r12 corrupted
Die
        Push    "r0,lr"
        Debug   mod,"Module dying"

        LDR     r12, [r12]
        CMP     r12, #0
        Pull    "r0,pc",LE,^				; Looks like we didn't even get as far as claiming workspace!

	LDR	r0, my_taskhandle
	CMP	r0, #0
	DebugIf	GT,wt,"Wimp task closing"
	LDRGT	r1, taskidentifier
	SWIGT	XWimp_CloseDown

        MOV     r0,#7
	MOV	r2,r12
        SWI     XOS_Module              		; Clear workspace
	LDR	r1, private_word_address
	MOV	r0, #-1
	STR	r0, [r1]				;Bung -1 in the private word to prevent cnfusion

; Close the message file if it's open
        LDR     r0,message_file_open
        TEQ     r0,#0
        ADRNE   r0,message_file_block
        SWINE   XMessageTrans_CloseFile

        Pull    "r0,pc"


        LNK     s.Service
