
Possible improvements to CacheFS
================================

Use the Squash module to transparently compress and decompress data in
files.  Note that data in an open file would have to be uncompressed.

Watch out for the pathological case where an application references a
series of objects in turn in a loop, and there is not enough memory to
load them all.  In this case you can end up reloading all the objects
in turn, since each time you try to recache another one, the one
you're about to load next is uncached.

Allow an application to associate a cost with each file, so better
choices about uncaching can be made.  Unfortunately the cost probably
depends on the size of the file, so the cost is proportional to the
benefit, unless you can get away with uncaching a smaller file.

Implement a full hierarchical directory system, for improved directory
enumeration speed and some space saving where deep directory
structures are encountered.


Improvements implemented
========================

Allow null directories (through explicit *CDir command).

Speed up filename resolution by maintaining a sorted list of file
pointers, and using binary chop searching.

Speed up directory enumeration by using the sorted list of files.

