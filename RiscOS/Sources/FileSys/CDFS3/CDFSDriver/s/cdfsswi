  TTL CDFSSwiInterceptor

; Much of the following was actually half-hinched from the old
; CDFSDriver module (2.27ish).

  AREA |CDFSSwi|, CODE, READONLY
  
;  EXPORT |cdfsswi_init|
;  EXPORT |cdfsswi_final|
  IMPORT |global_max_drive_no|
  EXPORT |cdfsswi_handle_unknown|

; GET Hdr:ListOpts
; GET Hdr:Macros
; GET Hdr:System
; GET Hdr:HostFS
 
a1      RN      0
a2      RN      1
a3      RN      2
a4      RN      3
v1      RN      4
v2      RN      5
v3      RN      6
v4      RN      7
v5      RN      8
sb      RN      9
sl      RN      10
fp      RN      11
ip      RN      12
sp      RN      13
lr      RN      14
pc      RN      15

XCDMgr_DriveOp * &4b743 :OR: 1<<17
CDMgr_DriveOp_EnumerateDrives * 12

; initialisation routine (APCS)
;
; 

 [ 1=0
cdfsswi_init 

   STMFD sp!, {lr}
;   MOV   a4, lr
   MOV   r0, #UKSWIV
   ADR   r1, unknown_swi_handler
   MOV   r2, r12
   SWI   XOS_Claim
;   MOVS  pc, a4
   LDMFD sp!, {pc}
  
cdfsswi_final

   STMFD sp!, {lr}
;   MOV   a4, lr
   MOV   r0, #UKSWIV
   ADR   r1, unknown_swi_handler
   MOV   r2, r12
   SWI   XOS_Release
;   MOVS  pc, a4
   LDMFD sp!, {pc}
 ]

cdfsswi_handle_unknown ROUT
;
; on entry:
;           r0 - r8 = SWI parameters
;           r11     = SWI number
; on exit:
;           
;
; This traps the SWI CDFS_ConvertDriveToDevice

 STMFD      sp!, {r0}

 SUB        r0, r11, #&41000
 SUBS       r0, r0, #&e80
 BEQ        convert_drive
 TEQ        r0, #4

 LDMFD    sp!, {r0}
 MOVNES     pc,lr     ; if it's not CDFS_ConvertDriveToDevice, pass on call

; ADD        sp, sp, #1 ; backtrack up full descending stack

; CDFS_GetNumberOfDrives

 LDR        r0, =global_max_drive_no
 LDR        r0, [r0]                 ; value of global_max_drive_no
 CMP        r0, #-1                  ; if -1 then no drives
 MOVEQ      r0, #CDMgr_DriveOp_EnumerateDrives ; see if there are any
 SWIEQ      XCDMgr_DriveOp
 ADD        r0, r0, #1               ; add 1 for no. of drives
 
 LDMFD      sp!, {pc}  ; intercept the unknown SWI vector call
 

convert_drive
 LDMFD      sp!, {r1}   ; in the new world, the 'physical' drive no. is
                       ; the logical one
 [ 1 = 1

 LDR        r0, =global_max_drive_no
 LDR        r0, [r0]                 ; value of global_max_drive_no
 CMP        r0, #-1                  ; if -1 then no drives
 MOVEQ      r0, #CDMgr_DriveOp_EnumerateDrives ; see if there are any
 SWIEQ      XCDMgr_DriveOp

 LDMVSFD    sp!, {pc}

 CMP        r1, r0    ; if drive nº greater than max drive nº
 MOV        r0, r1    ; 'preserve' r0
 MOVGT      r1, #-1   ; then return -1

 |
 
 MOV        r1, r0    ; else return drive nº
 
 ]

 LDMFD      sp!, {pc}  ; intercept the unknown SWI vector call

 [ 0=1

test

    STMFD      sp!, {lr}
    MOV        r0, #'U' 
    SWI        XHostFS_WriteC
    MOV        r0, #'K'   
    SWI        XHostFS_WriteC
    MOV        r0, #'S'   
    SWI        XHostFS_WriteC
    MOV        r0, #'W'   
    SWI        XHostFS_WriteC
    MOV        r0, #'I'   
    SWI        XHostFS_WriteC
    MOV        r0, #&0a
    SWI        XHostFS_WriteC
    MOV        r0, #&0d
    SWI        XHostFS_WriteC
    LDMFD      sp!, {pc}
 ]
 
 END

  
