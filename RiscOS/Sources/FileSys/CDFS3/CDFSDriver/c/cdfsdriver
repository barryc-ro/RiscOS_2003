/* File:    cdfsdriver.c
 * Purpose: CDFSDriver module initialisation and finalisation entry points
 * Author:  Timothy Roddis
 * History: 16-Oct-95: TGR: created CDFS version
 *          04-Apr-97: TGR: poached above for CDFSDriver backward compatability module
 */

/* ANSI headers */

#include <stdlib.h>
#include <string.h>
#include <stddef.h>
#include <locale.h>

/* RISC OS headers */

#include "kernel.h"
#include "swis.h"

/* Commonlib headers */

#include "defines.h"
#include "dbmalloc.h"
#include "debug.h"
#include "msgs.h"

/* Local CDFSDriver headers */


#include "module.h"
#include "cdfsswi.h"
#include "swiextra.h"


/* Initialise modules.
 *
 * on entry:
 *    cmd_tail is the command tail (ignored)
 *    podule_base  (ignored)
 *    pw is the private word (ignored)
 *
 * on exit:
 *    module has successfully initialised or else and error block is returned
 */

_kernel_oserror *cdfsdriver_initialise (const char *cmd_tail, int podule_base, void *pw) {

   _kernel_oserror     *e;
#ifndef ROM
    extern int messages_file(void);
#endif

   DEBUG debug_set_var_names ("CDFSDriver$Debug", "CDFSDrive$HexDump");

   DEBUG debug_output ("i", "CDFSDriver: INITIALISING\n");

   IGNORE (cmd_tail);
   IGNORE (podule_base);
   IGNORE (pw);

#ifdef ROM
   external messages file?
#endif

#ifndef ROM
   if ((e = _swix (ResourceFS_RegisterFiles, I0, messages_file())) != NULL) {
//     DEBUG debug_output ("i", "Error in registering files: %d, \"%s\"\n", e->errnum, e->errmess);
     return e; // Could be made NULL to protect module against future inability to kill it
   }
#endif

//   DEBUG debug_output ("i", "CDFSDriver: init before open file\n");
   msgs_open_file("Resources:Resources.CDFSDriver.Messages");
//   DEBUG debug_output ("i", "CDFSDriver: init after open file\n");

//   cdfsswi_init();

   _swix (OS_Claim, I0|I1|I2, OS_UKSWIV, cdfsswi_handle_unknown, pw);

   /* This ensures that the toupper/tolower calls work in an international-friendly way */

//   setlocale (LC_CTYPE, "ISO8859-1");

//   DEBUG debug_output ("i", "CDFSDriver: INITIALISATION COMPLETE\n");

   return NULL;
}

_kernel_oserror *cdfsdriver_finalise (int fatal, int podule_base, void *pw) {

//   _kernel_oserror     *e;
#ifndef ROM
    extern int       messages_file(void);
#endif

//   DEBUG debug_output ("i", "CDFSDriver: FINALISING\n");

   IGNORE (fatal);
   IGNORE (podule_base);
   IGNORE (pw);

//   cdfsswi_final();
   _swix (OS_Release, I0|I1|I2, OS_UKSWIV, cdfsswi_handle_unknown, pw);

   msgs_close_file();

//   dbmalloc_chkheap();

//   DEBUG debug_output ("i", "CDFSDriver: final after close file\n");

#ifndef ROM
   _swix (ResourceFS_DeregisterFiles, I0, messages_file());

//   DEBUG if (e) debug_output ("i", "CDFSDriver: error deregistering: %d, \"%s\"\n", e->errnum, e->errmess);

#endif

//   DEBUG debug_output ("i", "CDFSDriver: FINALISATION COMPLETE\n");

   return NULL;
}

