From aglover Thu Jun 17 10:46:09 1993
Received: by oak.acorn.co.uk (4.1/Ai1.6)
	id AA09338; Thu, 17 Jun 93 10:46:09 BST
Received: from oak.acorn.co.uk by acorn.co.uk (4.1/Am33)
	id AA02364; Thu, 17 Jun 93 10:44:29 BST
X-Account: 745
Date: Thu, 17 Jun 93 10:45:20 BST
From: aglover (Alan Glover)
To: fballoni
Cc: csellers
Subject: Finding filing systems and drives
Auto-Acknowledge-To: aglover (Alan Glover)
Message-Id: <2C204B40@aglover>

Fabio,

Carl's asked me to tell you about ways of finding how an individual computer
is set up; which filing systems it has, how many drives of each sort there
are, and so on.

Have a look through the notes below, and then give me a call and I'll
come and talk through anything that isn't clear.

Alan



Filing Systems fall into two sorts; those based on FileCore and those which
aren't. All FileCore filing systems can be handled in the same way, but
non-FileCore ones are different and each needs its own approach.

1) What filing systems are present ?

Use OS_FSControl 33 for R1=0 up to R1=255. When the call returns without an
error you have found an active filing system. Proceed to next stage to
decide whether it is FileCore based.                      

2) Is it a FileCore filing system ?

Try using OS_SWINumberFromString to see whether there is a DescribeDisc and
DiscOp SWI provided by this filing system. If it provides both it is a
FileCore based system. The string should be made by taking the filing system
name from step 1 and adding "_DescribeDisc" or "_DiscOp" to it. Since
programmers are not all the same, you should also try adding/removing "FS"
on the end of the filing system name. 

For example, you might get a filing system name "SCSI". You would first try
"SCSI"+"_DescribeDisc". If this failed, you would then try
"SCSI"+"FS"+"_DescribeDisc". There are several different SCSI filing systems
from different people, and some use SCSI whilst others use SCSIFS.

If these tests do not work, it is not a FileCore filing system. You can then
either 

 i) ignore it 
 ii) do something special because you have special code for this one

(Another way of testing whether it is a FileCore filing system is to use
OS_Module to look for its instantiation of FileCore, eg FileCore%ADFS)

3) It is a FileCore filing system. What now ?

All FileCore filing systems have a _Drives SWI which gives the numbers of
floppy and hard drives. Floppy drives always start at 0, and hard drives
always start at 4. The SWI prefix was worked out in step 2. Use it plus
"_Drives" to find out the current setting.         

4) Exceptions

Nothing is ever easy, so here are some traps to watch for

i) The RAM filing system calls itself RAMFS, but the path is RAM::0.$.

ii) CDFS is not a normal FileCore filing system - make sure that you try the
program with CDFS.

iii) There are a number of filing systems which are not useful in an
Exports file; you will need to have a built in list of filing systems which
you ignore when you come across them (things like printer:, rawvdu: and so
on)

iv) Both NetFS and NFS are special cases and have their own ways of finding
out what servers are available - check with the PRM for NetFS and TCP/IP
guide for NFS.
