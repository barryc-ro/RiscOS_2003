/*->c.file */

#include <stdio.h>
#include <stdlib.h>


#include "kernel.h"
#include "swis.h"


#include "Consts.h"
#include "RMInfo.h"
#include "veneers.h"
#include "Interface.h"
#include "fsentries.h"
#include "ModuleWrap.h"

#include "h.str"
#include "h.csfserr"
#include "h.fs"
#include "h.mem"
#include "h.sfs"
#include "h.arcs"
#include "h.sff"




static _kernel_oserror *
formpath(FSEntry_File_Parameter * parm, int contents,int * acn)
{
  return (makepath(parm->name,parm->special.special_field,contents,acn));
}




_kernel_oserror *
fsentry_file(FSEntry_File_Parameter * parm)
{
  _kernel_oserror * err;
  int               acn;

/*   debug_printf(db,"(7) fsentry_file reason=%d",parm->reason); */

  err=memcheck();
  if(!err)
  {
    err=formpath(parm,0,&acn);

    if(!err)

    switch(parm->reason)
    {
          case FSEntry_File_Reason_LoadFile:
                  err=LoadFile(acn,parm);
                  break;

          case FSEntry_File_Reason_CreateFile:
                  err=CreateFile(acn,parm);
                  break;

          case FSEntry_File_Reason_SaveFile:
                  err=SaveFile(acn,parm);
                  break;

          case FSEntry_File_Reason_WriteCatalogueInformation:
                  err=WriteCatalogueInformation(acn,parm);
                  break;


  #ifdef OLDFS
          case FSEntry_File_Reason_WriteLoadAddress:
                  err=WriteLoadAddress(acn,parm);
                  break;

          case FSEntry_File_Reason_WriteExecutionAddress:
                  err=WriteExecutionAddress(acn,parm);
                  break;

          case FSEntry_File_Reason_WriteAttributes:
                  err=WriteAttributes(acn,parm);
                  break;

          case FSEntry_File_Reason_ReadCatalogueInformationNoLength:
                  err=ReadCatalogueInformationNoLength(acn,parm);
                  break;

  #endif


          case FSEntry_File_Reason_ReadCatalogueInformation:
                  err=ReadCatalogueInformation(acn,parm);
                  break;

          case FSEntry_File_Reason_DeleteObject:
                  err=DeleteObject(acn,parm);
                  break;

          case FSEntry_File_Reason_CreateDirectory:
                  err=CreateDirectory(acn,parm);
                  break;

          default:
                  err=geterror(err_BadParameters);
                  break;
    }
  }

  return(err);
}


