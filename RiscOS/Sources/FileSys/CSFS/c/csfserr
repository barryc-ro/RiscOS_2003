/*->c.csfserr */


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <stdarg.h>


#include "kernel.h"
#include "swis.h"



#include "h.etc"


#include "h.csfserr"



static int messageblock[4];


_kernel_oserror * geterror(int errno)
{
 _kernel_swi_regs  rx;
 _kernel_oserror   eblock;

 eblock.errnum=errno;
 sprintf(eblock.errmess,"E%02X",errno & 0xFF);

 rx.r[0]=(int)&eblock;
 rx.r[1]=(int)messageblock;
 rx.r[2]=0;
 rx.r[3]=0;
 rx.r[4]=0;
 rx.r[5]=0;
 rx.r[6]=0;
 rx.r[7]=0;

 return(_kernel_swi(MessageTrans_ErrorLookup,&rx,&rx));
}



static char * respath="Resources:$.Resources.CSFS.Messages";


_kernel_oserror * initerror(void)
{
 _kernel_swi_regs    rx;

 rx.r[0]=(int)messageblock;
 rx.r[1]=(int)respath;
 rx.r[2]=0;

 return(_kernel_swi(MessageTrans_OpenFile,&rx,&rx));
}



_kernel_oserror * finiterror(void)
{
 _kernel_swi_regs    rx;

 rx.r[0]=(int)messageblock;

 return(_kernel_swi(MessageTrans_CloseFile,&rx,&rx));
}



