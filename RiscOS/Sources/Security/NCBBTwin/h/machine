// header file for MACHINE.H
#ifndef __scinterface_h
#include "scinter.h"
#endif
/* Begin-Prologue */
#ifndef MACHINE_H
#define MACHINE_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */
/* state machine stuff */


typedef enum {
  State_NoCard,
  State_CardInserted,
  State_BadCard,
  State_WroteBootBlock,
  State_RedBootBlock,
  State_Error,
  State_AuthFail,
  State_ChangeCHV,
  State_CardAuthCheck
} BOOTBLOCK_STATE;

typedef enum {
  Trans_Idle,
  Trans_CardOK,
  Trans_CardBad,
  Trans_CardRemoved,
  Trans_ReedCard,
  Trans_WriteCard,
  Trans_CompleteOK,
  Trans_CompleteBad,
  Trans_AuthFail,
  Trans_AuthRetry,
  Trans_AuthCard,
  Trans_ChangeCHV
} BOOTBLOCK_TRANS;

DECLARE BOOTBLOCK_STATE bootblock_state INIT(State_NoCard);
DECLARE BOOTBLOCK_TRANS bootblock_trans INIT(Trans_Idle);
DECLARE int write_in_progress INIT(0);
DECLARE int read_in_progress INIT(0);

DECLARE char *trans_string(BOOTBLOCK_TRANS);
DECLARE char *state_string(BOOTBLOCK_STATE);
DECLARE BOOTBLOCK_STATE machine(BOOTBLOCK_TRANS);
DECLARE t_sc_stat sc_stats;

/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */

