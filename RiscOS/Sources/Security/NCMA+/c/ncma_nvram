/* ncma_nvram.c - handle nvram activity for managed access */
#include <stdio.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"
#define PROTOTYPES_INTERNAL
#include "ncma_nvram.h"
#include "areacode.h"

#include "DBUG.h"

int nvram_empty(void)
{
    return(1);
}

int build_nvram_info(void)
{
    DBUG_PRINTF(DBUG_LVL_DIAG, "build_nvram_info: I would, but I don't know how!\n");
    return(0);
}

int copy_nvram_to_ram(void)
{
    DBUG_PRINTF(DBUG_LVL_DIAG, "copy_nvram_to_ram: I would, but I don't know how!\n");
    return(0);
}

/* read the configured scheduled update time from nvram */
int nvram_update_time(void)
{
    _kernel_swi_regs r;
    char tag[] = "nvram_dialtime";
    int attime;

    r.r[0] = (int)tag;
    r.r[1] = (int)&attime;
    r.r[2] = 0; /* gimme word value */

    if(_kernel_swi(NVRAM_Read, &r, &r)!=NULL) {
        DBUG_PRINTF(DBUG_LVL_ERROR, "nvram_update_time: NVRAM Read SWI failed\n");
        return(-1);
    }

    if(r.r[0]<0) {
        DBUG_PRINTF(DBUG_LVL_ERROR, "nvram_update_time: NVRAM Read SWI error: %d\n", r.r[0]);
        return(-1);
    }

    return(attime);
}

/* offset is signed char, no. of 15 minute intervals from GMT */
int nvram_set_timezone(signed char offset)
{
    unsigned int i;
    _kernel_swi_regs r;
    char tag[] = "TimeZone";

    i = (unsigned int)offset;
    r.r[0] = (int)tag;
    r.r[1] = (int)&i;
    r.r[2] = 0;

    if(_kernel_swi(NVRAM_Write, &r, &r)!=NULL) {
        DBUG_PRINTF(DBUG_LVL_ERROR, "nvram_set_timezone: NVRAM Write SWI failed\n");
        return(-1);
    }

    return(0);
}

/* render area code into ptr & return length, or -1 */
int nvram_get_areacode(char *ptr)
{
    _kernel_swi_regs r;
    char tag[] = "LocalDialCode";
    unsigned int ac;

    r.r[0] = (int)tag;
    r.r[1] = (int)&ac;
    r.r[2] = 0; /* gimme word value, shifted down */

    if(_kernel_swi(NVRAM_Read, &r, &r)!=NULL) {
        DBUG_PRINTF(DBUG_LVL_ERROR, "nvram_get_areacode: NVRAM Read SWI failed\n");
        return(-1);
    }

    if(r.r[0]<0) {
        DBUG_PRINTF(DBUG_LVL_ERROR, "nvram_get_areacode: NVRAM Read SWI error: %d\n", r.r[0]);
        return(-1);
    }

    DBUG_PRINTF(DBUG_LVL_DIAG, "nvram_get_areacode: got word 0x%x calling decoder, buff 0x%x\n", ac, (int)ptr);

    areacode(ac, ptr); /* call ASM routine to turn it into a string */
    DBUG_PRINTF(DBUG_LVL_DIAG, "nvram_get_areacode: area code is \"%s\"\n", ptr);
    return(1);
}





