/* DEBUG stuff */

#include <stdio.h>
#include <string.h>
#include <stdarg.h>
#define PROTOTYPES_INTERNAL
#include "DBUG.H"

#ifdef ENABLE_DEBUGGING

/* DBUG_FOPEN(s) - open a file 's' for logging debug output. If 's' is 'stdout' or 'stderr' then
   output is redirected appropriately
*/
void DBUG_FOPEN(char *s)
{
  if(strncmp(s, "stdout", 6)==0)
    DBUG_FILEHANDLE = stdout;

  else if(strncmp(s, "stderr", 6)==0)
    DBUG_FILEHANDLE = stderr;

  else {
    if((DBUG_FILEHANDLE=fopen(s, "w"))==NULL) {
      fprintf(stderr, "DBUG: WARNING: couldn't open log, redirecting to stderr.\n");
      DBUG_FILEHANDLE = stderr;
    }
  }


}

/* DEBUG_FCLOSE() - end a debugging session */
void DBUG_FCLOSE(void)
{
  if((DBUG_FILEHANDLE == stdout) || (DBUG_FILEHANDLE == stderr)) return;
  fclose(DBUG_FILEHANDLE);
}

/* DEBUG_PRINTF(LEVEL, s, ...) - printf debug message with priority LEVEL */
void DBUG_PRINTF(int level, char *fmt, ...)
{
  va_list ap;

  va_start(ap, fmt);

  if(level <= DBUG_LVL) vfprintf(DBUG_FILEHANDLE, fmt, ap);
  va_end(ap);
}

/* DBUG_LEVEL(LEVEL) - set the debugging level */
void DBUG_LEVEL(int new_level)
{
  DBUG_LVL = new_level;
}


#endif
