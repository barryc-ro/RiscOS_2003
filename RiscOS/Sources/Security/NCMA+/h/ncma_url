// header file for NCMA_URL.H

/* Begin-Prologue */
#ifndef NCMA_URL_H
#define NCMA_URL_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */

#define URL_MUNGE(a,b) #a###b

#ifdef LOCAL_URL_PATHS
#define URL_PATH(a) URL_MUNGE(file:/ncma:,a)
#else
#define URL_PATH(a) URL_MUNGE(file:/MAScr:,a)
#endif

#define NCMA_URL_ENV_NAME      "Alias$URLOpen_ncma"
#define NCMA_URL_ENV_VAL       "ncma_urc %*0"

#define NCMA_PATH_ENV_NAME     "ncma$path"
#define NCMA_PATH_ENV_VAL      "Resources:Resources.NCMA.html."

#define WELCOME_SCREEN_URL     "file:/OptScr:IntroWel.html"
#define BLANK_SCREEN_URL       "file:/OptScr:startup.html"
#define TOPLEVEL_UI_URL	       "file:/<UI$MainMenu>"

#define CURRENT_USER_ENV_NAME  "Current$User"
#define CURRENT_USER_ENV_VAL   "0"

#define BROWSER_LIMIT_FILE     "<Wimp$ScrapDir>.ncmaURL"
#define BROWSER_UNLIMIT_FILE   "<NCFresco$Allow>"
#define BROWSER_CONFIG_FILE    "<Wimp$ScrapDir>.ncmaNCF"

#ifndef TaskModule_SendMessage
#define TaskModule_SendMessage 0x4d300
#endif

typedef union {
	char *ptr;
	int offset;
} string_value;

typedef struct {
	   int tag;
	   string_value url;
	   int flags;
	   string_value body_file;
	   string_value target;
} urlopen_data;


static char msg_block[256];
DECLARE int limit_browser_access INIT(0);
DECLARE char *done_url_ptr INIT(NULL);
DECLARE char *error_url_ptr INIT(NULL);

DECLARE int ncma_url_init(void);
DECLARE int ncma_url_open(char *);
DECLARE int ncma_url_gsopen(char *);
DECLARE int ncma_dbox_open(char *);
DECLARE char *get_form_field(char *, char *);
DECLARE int reload_browser_files(void);
DECLARE int prod_browser_after_standby(void);
DECLARE int ncma_url_user(void);
DECLARE int limit_browser_url(int);
DECLARE int unlimit_browser_url(void);
DECLARE int browser_proxy(void);
DECLARE unsigned char *find_any_url_tag_in_either_enterprise_block(unsigned int *);
DECLARE int ncma_dbox_close(void);
DECLARE int ncma_start_progress_ui(void);

/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */

