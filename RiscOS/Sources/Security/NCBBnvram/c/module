#include <stdlib.h>

#include "header.h"
#include "bootblock.h"

#include "Debuglib/Debuglib.h"


_kernel_oserror *module_init(const char *cmd_tail, int podule_base, void *pw)
{
#ifdef DEBUGLIB
  debug_initialise ("NCBBnvram", "izipfs:$.ncbblog", "");
  debug_atexit ();
  debug_output_device (FILE_OUTPUT);
#endif /* DEBUGLIB */
    bootblock_init();
    return NULL;
}

_kernel_oserror *module_final(int fatal, int podule, void *pw)
{
    dprintf(("", "module_final()\n"));
    bootblock_final();
    return NULL;
}

_kernel_oserror *module_swi_handler(int swi_offset, _kernel_swi_regs *r, void *pw)
{
    dprintf(("", "module_swi_handler()\n"));
    switch (swi_offset)
    {
        case NCBootblock_Enquiry - NCBootblock_00:
            dprintf(("", "module_swi_handler(): NCBootblock_Enquiry received"));
            r->r[0] = (int) bootblock_enquiry(r->r[0], &r->r[1]);
            return NULL;
        case NCBootblock_Status - NCBootblock_00:
            dprintf(("", "module_swi_handler(): NCBootblock_Status received"));
            r->r[0] = bootblock_status(r->r[0], (unsigned int *) &r->r[2]);
            return NULL;
        case NCBootblock_Write - NCBootblock_00:
            dprintf(("", "module_swi_handler(): NCBootblock_Write received"));
            r->r[0] = bootblock_write((unsigned char *) r->r[0], r->r[1]);
            return NULL;
        case NCBootblock_PinInfo - NCBootblock_00:
            dprintf(("", "module_swi_handler(): NCBootblock_PinInfo received"));
            r->r[0] = r->r[1] = 0;
            return NULL;
        case NCBootblock_Reinitialise - NCBootblock_00:
            dprintf(("", "module_swi_handler(): NCBootblock_Reinitialise received"));
            r->r[0] = bootblock_reinitialise();
            return NULL;
        default:
            dprintf(("", "module_swi_handler(): Bad SWI recieved"));
            return error_BAD_SWI;
    }
}

