#include <stdio.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"

#define PROTOTYPES_INTERNAL
#include "ncma_cmds.h"
#include "ncma_ncma.h"
#include "ncma_utils.h"
#include "ncma_url.h"
#include "ncma_scard.h"
#include "machine.h"
#include "vectors.h"
#include "DBUG.h"

int cmd_ncma_nullcmd(char *s, int n)
{
  return(0);
}

int cmd_ncma_status(char *s, int n)
{
    DBUG_PRINTF(DBUG_LVL_DIAG, "cmd_ncma_status: last state: %s   last trans: %s\n",
    			       	state_string(ncma_state), trans_string(ncma_trans));

    DBUG_PRINTF(DBUG_LVL_DIAG, "cmd_ncma_status: registry state: 0x%x registry delta: 0x%x\n",
    			       	registry_status, registry_delta);

    DBUG_PRINTF(DBUG_LVL_DIAG, "cmd_ncma_status: NCMA started: %s\n", ncma_started?"Yes":"No");

    DBUG_PRINTF(DBUG_LVL_DIAG, "cmd_ncma_status: prevent shutdown: %s\n", prevent_shutdown?"Yes":"No");

    return(0);
}

int cmd_ncma_urc(char *s, int n)
{
    int bytes;

    bytes = strterm(s);
    DBUG_PRINTF(DBUG_LVL_DIAG, "cmd_ncma_urc: got %d args as %d bytes in \"%s\"\n", n, bytes, s);

    if(strstr(s, "start")) { /* it's a start URL */
      ncma_trans = Trans_URLStart;
      setcallback();
    }

    if(strstr(s, "getpin")) { /* It's a PIN request */
      validate_pin(s); /* state transition will be driven by AUTH status calls from the registry / sc layer */
    }

    if(strstr(s, "unblock")) { /* It's the system unblock PIN */
      if(set_unblock_pin(s)<0) {
        ncma_trans = Trans_URLUnblock;
        setcallback();
      }
    }

    if(strstr(s, "newpin")) { /* It's a PIN change request */
      change_pin(s); /* state transition will by driven by AUTH status calls from the registry / sc layer */
    }

    if(strstr(s, "changepinack")) { /* User wants to change PIN */
      ncma_trans = Trans_URLChangePIN;
      setcallback();
    }

    if(strstr(s, "changepinnak")) { /* User doesn't want to change PIN */
      ncma_trans = Trans_URLLeavePIN;
      setcallback();
    }


    if(strstr(s, "retry")) { /* It's a CONFIRM off the bad PIN screen */
      ncma_trans = Trans_URLRetry;
      setcallback();
    }

    if(strstr(s, "mismatch")) { /* It's a confirm off the mismatched PINs screen */
      ncma_trans = Trans_URLMismatchAck;
      setcallback();
    }

#ifdef ENABLE_DEBUGGING
    if(strstr(s, "test")) { /* funky test URLs */

      if(strstr(s, "standby")) { /* debugging code to initiate a STANDBY sequence */
        shutdown_nc();
      }

      if(strstr(s, "powerup")) { /* initiate power up sequence */
        ncma_trans = Trans_PowerUp;
        setcallback();
      }

      if(strstr(s, "reset")) { /* initiate power up sequence */
        ncma_state = State_NCMAInit;
        ncma_trans = Trans_Idle;
      }

      if(strstr(s, "dialbad")) { /* initiate a dial-failed sequence */
        ncma_trans = Trans_DialBad;
        setcallback();
      }

      if(strstr(s, "dialok")) { /* initiate a dial succeeded sequence */
        ncma_trans = Trans_DialOK;
        setcallback();
      }

    }
#endif

    if(strstr(s, "shutdownack")) { /* URL notification from shutdown page */
       ncma_trans = Trans_URLShutdown;
       setcallback();
    }

    if(strstr(s, "shutdownnak")) { /* URL notification from shutdown page */
       ncma_trans = Trans_URLShutdownCancel;
       setcallback();
    }


    return(0);
}

int cmd_ncma_cache(char *s, int n)
{
    cache_info();
    return(0);
}
