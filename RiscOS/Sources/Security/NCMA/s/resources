		    	GET		s.registers

        		MACRO
$Start  		Resource	$InFile, $OutFile
$Start  		DCD     	%FT60 - .         ; Offset from here to the next file
        		DCD     	:FLOAD:"$InFile"  ; Load address of file
        		DCD     	:FEXEC:"$InFile"  ; Exec address of file
        		DCD     	:FSIZE:"$InFile"  ; The length of the file
        		DCD     	3                 ; Access bits (always WR/)
        		DCB     	"$OutFile",0      ; The ResourceFS filename
        		ALIGN
        		DCD     	%FT40-%FT20+4     ; The file length plus four
20
        		BIN     	$InFile           ; The file itself
40
        		ALIGN
60
        		MEND


		    	AREA		|Resource$$Data|, CODE, READONLY
;		    	IMPORT		|__RelocCode|
		    	EXPORT		resource_init
		    	EXPORT		resource_final

 [ :LNOT:ROM_BUILD
resources_list
			Resource	html.badpin, Resources.NCMA.html.badpin/html
			Resource	html.change, Resources.NCMA.html.change/html
			Resource	html.damaged, Resources.NCMA.html.damaged/html
			Resource	html.disconnect, Resources.NCMA.html.disconnect/html
			Resource	html.download, Resources.NCMA.html.download/html
			Resource	html.invalid, Resources.NCMA.html.invalid/html
			Resource	html.mismatch, Resources.NCMA.html.mismatch/html
			Resource	html.moved, Resources.NCMA.html.moved/html
			Resource	html.newpin, Resources.NCMA.html.newpin/html
			Resource	html.notMA, Resources.NCMA.html.notMA/html
			Resource	html.notNC, Resources.NCMA.html.notNC/html
			Resource	html.pin, Resources.NCMA.html.pin/html
			Resource	html.poweroff, Resources.NCMA.html.poweroff/html
			Resource	html.SCprobs, Resources.NCMA.html.SCprobs/html
			Resource	html.splash, Resources.NCMA.html.splash/html
			Resource	html.transfer, Resources.NCMA.html.transfer/html
			Resource	html.unblock, Resources.NCMA.html.unblock/html
			Resource	html.toplevel, Resources.NCMA.html.toplevel/html
			Resource	html.welcome, Resources.NCMA.html.welcome/html
			DCD		0
 ]

resource_init
 [ ROM_BUILD
			MOV		r0, #0
			MOV		pc, lr
 |
			MOV		ip, lr
			ADRL		r0, resources_list
			SWI		&61b40
			MOVVC		r0, #0
			MOV		pc, ip
 ]

resource_final
 [ ROM_BUILD
			MOV		r0, #0
			MOV		pc, lr
 |
			MOV		ip, lr
			ADRL		r0, resources_list
			SWI		&61b41
			MOVVC		r0, #0
			MOV		pc, ip
 ]
		    	END
