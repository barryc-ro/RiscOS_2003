// header file for NCMA_SCARD.H

/* Begin-Prologue */
#ifndef NCMA_SCARD_H
#define NCMA_SCARD_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */

#ifndef NCRegistry_EnumerateNetworkDrivers
#define NCRegistry_EnumerateNetworkDrivers 0x4d380
#define NCRegistry_Enquiry		   0x4d382
#define NCRegistry_LoadSmartCardBlock	   0x4d383
#define NCRegistry_Status		   0x4d384
#define NCRegistry_Write		   0x4d385
#define NCRegistry_Authenticate		   0x4d386
#define NCRegistry_SupportInit		   0x4d387
#define NCRegistry_SupportExit		   0x4d388
#define NCRegistry_ChangeSmartCardCHV	   0x4d389
#define NCRegistry_Proxy		   0x4d38a
#define NCRegistry_Delete		   0x4d38b
#define NCRegustry_Create		   0x4d38d
#define NCRegistry_PinInfo		   0x4d38e
#endif

#ifndef SCInterface_ChangeCHV
#define SCInterface_ChangeCHV              0x4d345
#define SCInterface_UnBlockCHV		   0x4d347
#define SCInterface_FileInfo		   0x4d348
#define SCInterface_Status		   0x4d34a
#endif

#define REGISTRY_STATUS      0xba

#define SELECT_NET_STATUS    0x1
#define SELECT_SC_STATUS     0x2

#define BB_STATUS_INSERTED   0x1
#define BB_STATUS_SC_VALID   0x2
#define BB_STATUS_BB_VALID   0x4
#define BB_STATUS_PIN	     0x8  /* boot block is chv1 protected */
#define BB_STATUS_LOCKED     0x10 /* protected bootblock is locked, ie no valid authentication has taken place */
#define BB_STATUS_WRITEOK    0x20
#define BB_STATUS_WRITEFAIL  0x40
#define BB_STATUS_CLIENT     0x80
#define BB_STATUS_AUTHFAIL   0x100 /* authentication failure */
#define BB_STATUS_TOO_OLD    0x200 /* bootblock major version too old */
#define BB_STATUS_TOO_NEW    0x400 /* bootblock major version too new */

#define MAX_TAG_CACHE    64
#define TAG_CACHE_SIZE	 8192

typedef struct {
  const char *tag;
  char *val;
  int bytes;
} TAG_ENTRY;

typedef struct {
  char *base;
  int tags;
  int bytes;
  int max;
  int card;
  TAG_ENTRY tag[MAX_TAG_CACHE];
} TAG_CACHE;


#ifdef PROTOTYPES_INTERNAL
  TAG_CACHE tag_cache = {
  NULL,
  0,
  0,
  TAG_CACHE_SIZE,
  0,
  {
    "SEND_EXPECT", NULL, 0,
    "ISP_ID", NULL, 0,
    "NC_ID", NULL, 0,
    "PSTN_NUM", NULL, 0,
    "PSTN_BACKUP", NULL, 0,
    "STATIC_IP", NULL, 0,
    "MAIL_RX_HOST", NULL, 0,
    "MAIL_TX_HOST", NULL, 0,
    "NNTP_HOST", NULL, 0,
    "DNS_PRIMARY", NULL, 0,
    "DNS_BACKUP", NULL, 0,
    "TIME_PRIMARY", NULL, 0,
    "TIME_BACKUP", NULL, 0,
    "NCAS_PRIMARY", NULL, 0,
    "NCAS_BACKUP", NULL, 0,
    "HTTP_PROXY", NULL, 0,
    "WAIS_PROXY", NULL, 0,
    "FTP_PROXY", NULL, 0,
    "GOPHER_PROXY", NULL, 0,
    "SECURITY_PROXY", NULL, 0,
    "FSERV_PRIMARY", NULL, 0,
    "FSERV_BACKUP", NULL, 0,
    "LOGIN_ID", NULL, 0,
    "LOGIN_SECRET", NULL, 0,
    "LOGIN_USERNAME", NULL, 0,
    "LOGIN_PASSWD", NULL, 0,
    "EMAIL_ADDR", NULL, 0,
    "EMAIL_NAME", NULL, 0,
    "NCF_INFO", NULL, 0,
    "NCD_INFO", NULL, 0,
    "ISP_DOMAIN", NULL, 0,
    "NFS_MOUNT", NULL, 0,
    "NFS_MOUNTRW", NULL, 0,
    "URL_INIT", NULL, 0,
    "URL_ISP", NULL, 0,
    "URL_INTERNAL", NULL, 0,
    "MODEM_FINAL", NULL, 0,
    "ISP_NAME", NULL, 0,
    NULL, NULL, 0
  }
};
#else
extern TAG_CACHE tag_cache;
#endif

DECLARE int registry_status INIT(0);
DECLARE int registry_delta INIT(0);

DECLARE char unblock_pin[12];
DECLARE int unblock_pin_size INIT(0);
DECLARE char chv_pin[12];
DECLARE int chv_pin_size INIT(0);
DECLARE char old_chv_pin[12];
DECLARE int old_chv_pin_size INIT(0);

DECLARE int smartcard_status(int *);
DECLARE int smartcard_present(void);
DECLARE int smartcard_valid(void);
DECLARE int smartcard_pin_protected(void);
DECLARE int smartcard_blocked(void);
DECLARE int validate_pin(char *);
DECLARE int registry_status_asserted(int);
DECLARE int registry_status_cleared(int);
DECLARE int registry_status_set(int);
DECLARE int registry_status_clear(int);
DECLARE int cache_smartcard(void);
DECLARE int cache_info(void);
DECLARE int cache_enquiry(char *, char *, int);
DECLARE void unlock_cache(void);
DECLARE int set_unblock_pin(char *s);
DECLARE int change_pin(char *s);

/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */

