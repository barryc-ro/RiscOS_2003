/* header file options.h  */

/*
   This file can be used to set NCMA compile-time flags according to
UserInterface settings and hence stop polluting the components file.
   At the current time this is only very simple, will be extended at a later
date. Please be very careful about latering any of the flags in this file;
many are old and deprecated, and will have serious effects on the behaviour
of the module.
*/

#ifndef NCMA_OPTIONS_H
#define NCMA_OPTIONS_H


#include "options.h"
#include <stdbool.h>


/* Define 'global' options that used to be set in the makefile. */
/* Many of these options are historical in nature and may not need to be supported for much longer. */
/*
#
# Different compile options - choose one
#
# use REMOTE_DEBUG to enable remote debugging
# use ENABLE_DEBUGGING if you want to enable debugging!
# use POINTLESS_BUTTONS if you want managed access to ignore the card going in and out and wait for the user
#                       to click on various 'continue' buttons. Undefine this for any sane implementation
# use SHOW_BOOTBLOCK_TRANSITIONS if you want really verbose debugging of what NCBootblock's doing with your data
# use CHIMPANZEE_INTERFACE if you're a big American corporation and you need special hacks in Managed Access to accomodate
# the fact that you bought 40,000 of the wrong type of smartcard
# use DEFEAT_BROWSER_LIMIT to prevent MA parsing NCIBrowserMode tags for restricting URLs
# use LIMIT_RUNAWAY_UIDS if you've got development NVRAM/OTP, otherwise weird stuff may happen
# use HIDEOUS_PROXY_HACK if you want https proxy to always be set to whatever the http proxy is (undef to use real
#                        security proxy information, if available in your area
# use NVRAM_DEBUG if you know what it does, otherwise don't
# use ETHERNET to disable all the modem crap and use a proper network interface
# use SEND_SERIALID_LENGTH to include length data as first 2 bytes of the serial ID string
# use ENABLE_HTTP_PROXY / ENABLE_HTTPS_PROXY to enable ROM based proxies for http and/or SSL http
# use DEBUG_DISCONNECTS to set all PPP line drop timeouts to a minute
# use ISP_CAPTURE to run ISPcapture on invalid smartcards
# use TRAP_PPP_TIMEOUTS if you want a "disconnect?" OSD to sit on PPPTimeout events. Undef to just drop the line
# use USE_NETINIT to invoke the NetInit module instead of bringing the network stuff up ourself
# use SILENT_HUP to ignore the line dropping out from under us, otherwise return to the 'Connect' screen
# use VERIFY_URL to check the home URL before sending it to the browser and generating an error if it seems bogus
# use DISALLOW_USER_CONFIRMATION_OF_LOGOUTS to disallow user confirmation of logouts. If this is defined, performing a logout will just go ahead and log the user out without bringing up the confirmation dialogue.
# use DISALLOW_USER_CONFIRMATION_OF_STANDBY to disallow user confirmation of standby. If this is defined, pressing standby will just go into standby without bringing up the confirmation dialogue.
# use SC_SWAPPING to enable smartcard-swapping behaviour on email-client enabled boxes.
# use EMAIL_CLIENT to alter the state machine so that the email client can be run.
# use ENABLE_SECOND_DEFAULT_PIN if you wish there to be a second default PIN. If this PIN is entered, then a 'connect' screen with no 'change pin' button is displayed. Hence smartcards with this default PIN cannot have their PIN's changed.
# Use ABORT_ON_PANIC if you want the state machine to go to State_Panic if a unrecognised transition is detected.
# Use AUTHENTICATE_SIGNATURES if we want to ensure that the bootblock is valid against those from an authenticated source (eg. a certain ISP).
# use SOFTLOAD_CSFS to get NCMAlite to softload CSFS from ResourceFS on bootup if the relevant tags are set. This odes not occur if CSFS is in ROM. This should be set to the lcoation at which the softloaded module can be found.
# use ALLOW_CSFS_BOOTING to attempt to boot off a CSFS server once connection has been made.
# use WRITE_THRU_SMURFS if you want to make CSFS writes to be uncached, i.e. the changes to appear immediately.
# use SEARCH_EXTENSION_ROM if you wish NCMA to search for the Alba 1.2/2.0-compatible Extension ROM and set the sys$ExtEOMVer variable appropriately.
*/

/*
  SMURF's (aka CSFS) defines. SMURF functionality is currently only included
in Lazarus-style builds. The following all need to be defined if read-only
and read-write SMURF mounts are to be included in a build.
  SMURFS_FULLBOOT   This is the main boot script to run off the (read-only) boot mount
  SMURFS_FASTBOOT   This defines the main script to be run on the user's (read-write) home mount
  SMURFS_SCHEDBOOT  This defines a script that can be used to run scheduled CRON jobs (currently deprecated)
  SMURF_RO_SERVICE  The service that CSFS is to use to connect to the read-only mount.
  SMURF_RW_SERVICE  The service that CSFS is to use to connect to the read-write mount.
  SMURF_RO_MOUNT    The mount name for the read-only mount.
  SMURF_RW_MOUNT    The mount name for the read-write mount.
*/

#undef  REMOTE_DEBUG
#define CHIMPANZEE_INTERFACE
#undef  POINTLESS_BUTTONS
#undef  AUTHENTICATE_SIGNATURES
#undef  DEFEAT_BROWSER_LIMIT
#undef  SHOW_BOOTBLOCK_TRANSITIONS /* Redundant option */
#define LIMIT_RUNAWAY_UIDS
#undef  HIDEOUS_PROXY_HACK
#undef  NVRAM_DEBUG
#define SEND_SERIALID_LENGTH
#define ENABLE_HTTP_PROXY
#define ENABLE_HTTPS_PROXY
#define ISP_CAPTURE
#undef  TRAP_PPP_TIMEOUTS
#undef  USE_NETINIT
#define SILENT_HUP
#undef  VERIFY_URL
#undef  ENABLE_SECOND_DEFAULT_PIN
#undef  EMAIL_CLIENT
#undef  SC_SWAPPING
#undef  ABORT_ON_PANIC


/* Define options that switch on the User Interface setting. */
#if defined UserIF_Lazarus || defined UserIF_Martha
  #define LOGOUTS_ONLY_HANGUP
  #define DISALLOW_USER_CONFIRMATION_OF_STANDBY
  #define SOFTLOAD_CSFS "Resources:$.!Boot.Modules.CSFS"
  #define ALLOW_CSFS_BOOTING
  #define WRITE_THRU_SMURFS
  #undef  ISP_CAPTURE
  #define SMURFS_FULLBOOT         "Obey CSFS:$.ncdboot.NCBoot.Auto"
  #define SMURFS_FASTBOOT         "Obey CSFS:$.ncdhome.Auto"
  #define SMURFS_SCHEDBOOT        "Obey Resources:$.Resources.NCMA.BootUpdate"
  #define SMURF_RO_SERVICE        "webftp"
  #define SMURF_RW_SERVICE        "webftp"
  #define SMURF_RO_MOUNT          "NCDBoot"
  #define SMURF_RW_MOUNT          "NCDHome"
  #define SEARCH_EXTENSION_ROM

#elif defined UserIF_Omega
  #undef LOGOUTS_ONLY_HANGUP

#elif defined UserIF_NC2
  #define SC_SWAPPING
  #define EMAIL_CLIENT

#elif defined UserIF_MPT
  #ifndef DISALLOW_USER_CONFIRMATION_OF_LOGOUTS
    #define DISALLOW_USER_CONFIRMATION_OF_LOGOUTS
  #endif



#else
  #error Don't know this UserIF setting.
#endif


#endif /* NCMA_OPTIONS_H */
