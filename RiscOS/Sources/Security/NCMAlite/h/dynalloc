/* header file for dynalloc.c  */

#include <stdbool.h>

#include "options.h"

/* Begin-Prologue */
#ifndef TEMPLATE_H
#undef DECLARE
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */
#define MAX_RMA_MALLOX 20
#define OS_DynamicArea 0x00000066

DECLARE void init_dma(void);
DECLARE unsigned char *get_dma(int, char *, unsigned int);
DECLARE void free_dma(unsigned int);

DECLARE void init_rma(void);
DECLARE unsigned char *get_rma(int, unsigned int);
DECLARE void free_rma(unsigned int);

DECLARE void rminit(void);
DECLARE unsigned char *rmalloc(int, char *);
DECLARE void rmfree(unsigned char *);
DECLARE void rmfree_all(void);
DECLARE void rmstat(void);

#ifdef PROTOTYPES_INTERNAL
struct rmalloc_data_block {
  int area_number;
  unsigned char *area_start;
  unsigned int size;
  bool stored_in_rma;
} rmalloc_data[MAX_RMA_MALLOX];
#endif

DECLARE int num_mallox INIT(0);
DECLARE bool use_dynamic_areas INIT(false);


/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */

