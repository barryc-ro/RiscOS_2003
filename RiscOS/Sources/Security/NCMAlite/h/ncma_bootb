// header file for NCMA_BOOTB.H

/* Begin-Prologue */
#ifndef NCMA_BOOTB_H
#define NCMA_BOOTB_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */

#include "options.h"


DECLARE unsigned char *ram_block_ptr INIT(NULL);
DECLARE unsigned char *ram_eb_ptr INIT(NULL);
DECLARE unsigned char *ram_cert_ptr INIT(NULL);
DECLARE unsigned char *ram_sig_ptr INIT(NULL);
DECLARE unsigned char *ram_iap_ptr INIT(NULL);

DECLARE unsigned char *sc_block_ptr INIT(NULL);
DECLARE unsigned char *sc_eb_ptr INIT(NULL);
DECLARE unsigned char *sc_index_ptr INIT(NULL);
DECLARE unsigned char *sc_alt_ptr INIT(NULL);
DECLARE unsigned char *sc_iap_ptr INIT(NULL);
DECLARE unsigned char *sc_hash_ptr INIT(NULL);

DECLARE unsigned char *nvram_ptr INIT(NULL);

DECLARE unsigned int ram_block_bytes INIT(0);
DECLARE unsigned int ram_eb_bytes INIT(0);
DECLARE unsigned int ram_cert_bytes INIT(0);
DECLARE unsigned int ram_sig_bytes INIT(0);
DECLARE unsigned int ram_iap_bytes INIT(0);

DECLARE unsigned int sc_block_bytes INIT(0);
DECLARE unsigned int sc_eb_bytes INIT(0);
DECLARE unsigned int sc_index_bytes INIT(0);
DECLARE unsigned int sc_alt_bytes INIT(0);
DECLARE unsigned int sc_iap_bytes INIT(0);
DECLARE unsigned int sc_hash_bytes INIT(0);

DECLARE unsigned int nvram_bytes INIT(0);

DECLARE unsigned int enterprise_id INIT(0);
DECLARE unsigned int iap_id INIT(0);
DECLARE unsigned int trusted_scard_data INIT(0);


DECLARE int fetch_sc_bootblock(int called_for_ISPCapture);
DECLARE int virgin_smartcard(void);
DECLARE int build_rs_cache(void);
DECLARE int ram_empty(void);
DECLARE int find_ram_enterprise_block(void);
DECLARE int user_isp_registered(void);
DECLARE int fetch_relationship_url(void);
DECLARE int fetch_registration_success_url(void);
DECLARE int fetch_registration_failure_url(void);
DECLARE unsigned char *read_alt_number(int *);
DECLARE int find_enterprise_id(void);
DECLARE int select_scard_iap(void);

/* in ncma_cache.c */
DECLARE int cache_info(void);
DECLARE int cache_enquiry(char *, char *, int);
DECLARE char *cache_ptr(char *, int *);
DECLARE void unlock_cache(void);
DECLARE int build_ram_cache(void);
DECLARE int cache_write(char *, char *, int);
DECLARE int reset_cache(void);
#ifdef SC_SWAPPING
DECLARE unsigned int match_current_card_with_cache(void);
#endif /* SC_SWAPPING */

/* This definition is used in the call to fetch_sc_bootblock() to ensure
    that it knows not to create a copy of the bootblock. */
#define FETCH_BOOTBLOCK_FOR_CLIENT     0
#define FETCH_BOOTBLOCK_FOR_ISPCAPTURE 1

/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */

