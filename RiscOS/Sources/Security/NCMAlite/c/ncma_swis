#include <stdio.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"

#define PROTOTYPES_INTERNAL
#include "ncma_swis.h"
#include "ncma_ncma.h"
#include "ncma_scard.h"
#include "ncma_cache.h"
#include "dynalloc.h"
#include "module.h"
#include "machine.h"
#include "usermode.h"
#include "DBUG.h"

int ncma_nullswi(_kernel_swi_regs *r)
{
  return(0);
}

int ncma_enquiry(_kernel_swi_regs *r)
{
    	if(tag_cache.valid == 0) { /* no tags loaded */
    	  r->r[0] = -1;
    	  ncma_trans = Trans_URLStart;
    	  setcallback();
    	  return(0);
    	}

        if((r->r[0] = cache_enquiry((char *)r->r[0], (char *)r->r[1], (int)r->r[2]))<0) {
            DBUG_PRINTF(DBUG_LVL_ERROR, "ncma_enquiry: tag cache enquiry failed\n");
        }
      return(0);
}

/* misc. ops, for various hacks needed by other modules */
int ncma_miscop(_kernel_swi_regs *r)
{
    switch(r->r[0]) {

        case NCMA_MISCOP_PRECONNECT:  /* build cache without connecting */
             DBUG_PRINTF(DBUG_LVL_DIAG, "ncma_miscop: Trans_PreConnect triggered\n");
             ncma_trans = Trans_PreConnect;
             setcallback();
             usermode_donothing(); /* flush callbacks */
             break;

        default:
             DBUG_PRINTF(DBUG_LVL_ERROR, "ncma_miscop: unrecognized misc. op.\n");
             break;
    }
    return(0);
}

