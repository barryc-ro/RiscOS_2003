
/*****************************************************************************
* Include header files
*****************************************************************************/
#include <stdlib.h>
#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include <ctype.h>
#include <assert.h>

/* Include general RISC OS headers */
#include "swis.h"
#include "Debuglib/Debuglib.h"
#include "NVRAM.h"
#include "kernel.h"

/* Include headers from ncmalib */
#include "smtags.h"
#include "dynalloc.h"
#include "ncma_utils.h"
#include "ncma_tags.h"
#include "ncma_bootb.h"

/* Include local headers */
#include "cu_nvram.h"
#include "cu_main.h"
#include "cu_utils.h"
#include "cu_exclusn.h"
#include "cu_valid.h"

/*
   This file should contain all the checks for valid and invalid tags. It should also compare tags in a CU file against the ones held in the exclusions file and ensure that the changes are valid.
   When a new bootblock or NVRAM tag is entered into the CU system, a
seperate validation entry should be added for that tag. Much of the initial code has been ripped out of ISPCapture's validation code.
*/


/* This routine reads the exclusions file into memory. */
bool validate_bootblock(sc_bootblock_data_struct* bb_to_validate)
{
  dprintf(("", "validate_bootblock()\n"));
  return (false);
}

