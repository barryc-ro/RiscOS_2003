
/*****************************************************************************
* Include header files
*****************************************************************************/
#include <stdlib.h>
#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include <ctype.h>
#include <assert.h>

/* Include general RISC OS headers */
#include "swis.h"
#include "Debuglib/Debuglib.h"
#include "NVRAM.h"
#include "kernel.h"

/* Include headers from ncmalib */
#include "smtags.h"
#include "dynalloc.h"
#include "ncma_utils.h"
#include "ncma_tags.h"
#include "ncma_bootb.h"

/* Include local headers */
#include "cu_nvram.h"
#include "cu_main.h"
#include "cu_utils.h"
#include "cu_exclusn.h"
#include "cu_errors.h"

static unsigned int num_of_errors = 0;
static unsigned char* concatenated_error_string = NULL;

/* This routine is passed an error and appends it onto the end of the current error string. */

bool append_error(const char* const error)
{
  dprintf(("", "append_error(): appending string \'%s\'\n", error));
  num_of_errors++;
  return (false);
}


void clear_errors(void)
{
  dprintf(("", "clear_errors()\n"));
  num_of_errors = 0;
  if (concatenated_error_string)
  {
    rmfree(concatenated_error_string);
    concatenated_error_string = NULL;
  }
}


char* return_errors(unsigned int* number)
{
  dprintf(("", "return_errors()\n"));
  *number = num_of_errors;
  return ((char*)concatenated_error_string);
}
