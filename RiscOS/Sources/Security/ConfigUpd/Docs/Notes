This component is fully speced in the Alba 2.0 Configuration Update Module
Functional Specification (2503,079/FS).

This component relies on NCMALib to be built. If debugging it may be useful
to link against a debug-enabled version of NCMALib.

Adding a tag
------------
    It is likey that the CU system will have to be updated in the future to
support more NVRAM or Bootblock tags. This section outlines the approach that
should be taken to do this:
    *) In Main.c is a structure biglist[], that specifies set information
about either an NVRAM or bootblock tag. The first field is a textual string
that is used as the internal identifier for this tag within the CU system.
This tag is the one used in the CU file to denote this tag. The second field
denotes a type corresponding to the type of the tag (for Bootblock tags this
corresponds to the value held in smcard.h for this tag). The third field
contains the maximum allowable length in bytes, the fourth the nci_tag value
(which for bootblocks is denoted within smtags.h, and for NVRAM must be >
0x500). 
    *) Once the tag has been entered in the structure, the same tag needs to
be entered in the same position in the enumerated type e_tag_names in the
file cu_main.h
    *) If the tag is an NVRAM tag, then it needs adding to the
nvram_tags_list in nvram.c, and the preprocessor definition
NUMBER_OF_NVRAM_TAGS_SUPPORTED in cu_nvram.h also needs updating to show the
new tag(s).
    *) Each tag has to have an inernal and an external representation; the
internal respresentation can be a compressed form that is stored in the
device and the external form is one that is human readable. For instance DNS
values have an external form of (for instance) 136.123.56.98 and an internal
from of a 1-word value. In the case of most strings this would literally be
the textual version of the string, although dialscripts have \n and " values
compressed. If a new tag type is created then a mechanism of converting to
and from a human-reable form may be needed. Another example are country
codes; the internal form is an integer when a more logical external from is
the country name.
    
    Once these steps ave ben completed, the CU system should be able to
update your new tags.


Tag validation
--------------
    You may wish your new whizzy tag to be validated before being written.
For instance if the tag denotes a country code you may wish to validate that
it corresponds to a valid country before writing the value. To do this...


Preprocessor options
--------------------
    There are currently two support preprocessor flags:
    CHANGE_EXC_FILES. If this flag is defined then it enables the *command
which allows the exclusions file to be changed. This is essentially a debug
option and should be turned off in release builds for extra security.
    PROTECT_DEFAULT_BOOTBLOCK. Setting this flag allows the default bootblock
to be written to only once. Once the default bootblock has been written to,
then the bootblock tag BOOTBLOCK_WRITTEN is set to non-zero (typically it
will be incremented by one). If this flag is set, then the default bootblock
will not be written if the BOOTBLOCK_WRITTEN tag is non-zero. This allwos the
default bootblock to only be written to once.
