/* header file cu_exclusn.h  */

#ifndef CU_EXCLUSIONS_H
#define CU_EXCLUSIONS_H

#include <stdbool.h>
#include "cu_main.h"
#include "ncma_bootb.h"


typedef enum
{
  E_TARGET_TYPE_NO_TARGET = -1,
  E_TARGET_TYPE_MAIN_BB = 0,
  E_TARGET_TYPE_DEFAULT_BB,
  E_TARGET_TYPE_NVRAM
} TARGET_TYPE;

/* Forward prototypes */
bool read_exclusions_file(const char* const filename);
int parse_exclusions_file_for_tag(const char* const tag, const char* target);
bool clear_exclusions_file(void);
int is_exclusions_file_valid(void);
bool validate_data(unsigned int target);
unsigned int validate_bootblock_data(sc_bootblock_data_struct* bootblock);
bool is_tag_excluded(const unsigned int nci_tag_number, TARGET_TYPE target);
void debug_display_exclusions_list(void);
void clear_exclusions_list(void);

/* Structures */


#endif /* CU_EXCLUSIONS_H */
