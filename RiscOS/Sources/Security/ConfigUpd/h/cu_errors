/* header file cu_errors.h  */

#ifndef CU_ERRORS_H
#define CU_ERRORS_H

#include <stdbool.h>


typedef enum
{
  E_ERROR_NO_ERROR = -1,
  /* Configuration update file errors */
  E_ERROR_UNRECOGNISED_TAG,
  E_ERROR_REQUIRED_TAG_ABSENT,
  E_ERROR_TAG_MISMATCH,
  E_ERROR_UNRECOGNISED_TARGET,
  E_ERROR_MALFORMED_UPDATE_FILE,
  E_ERROR_MANDATORY_FLAG_ABSENT,
  /* Exclusions file errors */
  E_ERROR_EXCLUDED_TAG_INCLUDED,
  E_ERROR_INCLUDED_TAG_EXCLUDED,
  E_ERROR_EXCLUSIONS_FILE_ABSENT,
  E_ERROR_MALFORMED_EXCLUSIONS_FILE,
  E_ERROR_EXCLUSIONS_TAG_PRESENT_MULTIPLY,
  /* NVRAM errors */
  E_ERROR_COUNTRY_NOT_SUPPORTED,
  E_ERROR_NVRAM_NOT_WRITTEN,
  E_ERROR_TAG_TOO_LONG
} ERRORS;


bool append_error(const char* const error_string, ERRORS errnum, unsigned int err_code);
char* return_errors(unsigned int* number);
void clear_error_structure(void);
void debug_display_errors(void);


#endif /* CU_ERRORS_H */
