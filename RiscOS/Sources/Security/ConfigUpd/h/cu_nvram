/* header file cu_nvram.h  */

#ifndef CU_NVRAM_H
#define CU_NVRAM_H


#include <stdbool.h>


/* Forward prototypes */
bool fill_nvram_tags_list(char* altered_value, unsigned int size, const char* const tag, const int tag_number);
void free_nvram_tags_list(void);
void display_nvram_tags_list(void);
void output_nvram_tags(const char* const filename);
char* convert_nvram_tag_value_to_string(const int internal_number, const char* const nvram_tag_value);
unsigned int convert_nvram_tag_to_internal_representation(const int tag_number, const char* const tag_value, char** altered_tag);
bool write_nvram_value(const char* const nvram_tag, const char* const value, const int size, bool in_protected_area);
bool write_nvram_tags_list_to_nvram(void);

/* Structures */
typedef struct
{
  char* external_tag_name;
  char* value;
  unsigned int tag_number;
  unsigned int size;
  bool in_protected_area;
} nvram_tags;




#endif /* CU_NVRAM_H */
