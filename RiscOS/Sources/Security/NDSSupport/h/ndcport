/* $Header$*/
/***************************************************************************/
/* File: ndcport.h                                                         */
/* Desc: Serial Communication Port Library                                 */
/*-------------------------------------------------------------------------*/
/* Date        Programmer     Description                                  */
/* ----        ----------     -----------                                  */
/* 9-Apr-1991  Carmi Bogot    Original Version                             */
/***************************************************************************/
#ifndef  _NDCPORT_DEFINED                    /* Check if included          */

#ifdef __cplusplus
extern "C" {
#endif

/***************************************************************************/
/* Error Codes                                                             */
/***************************************************************************/
/**MS**/
/**ESPORT**/
#define  NEPORTFATAL       (NSTATUS) 0x02FF
                           /**N PORT: Fatal error                          */
                           /**E Internal error: port                       */
                           /**F Port s‚riel interne                        */
#define  NEPORTALLOC       (NSTATUS) 0x0201
                           /**N PORT: Already allocated                    */
                           /**E Internal error: port                       */
                           /**F Port s‚riel assign‚                        */
#define  NEPORTHAND        (NSTATUS) 0x0203
                           /**N PORT: Invalid handle                       */
                           /**E Internal error: port                       */
                           /**F Usage de port erron‚                       */
#define  NEPORTRATE        (NSTATUS) 0x0205
                           /**N Invalid port baud rate                     */
                           /**E Invalid port baud rate                     */
                           /**F Rythme de transmission erron‚              */
#define  NEPORTPARITY      (NSTATUS) 0x0207
                           /**N Port parity error                          */
                           /**E Port parity error                          */
                           /**F Erreur de parit‚ … un port                 */
#define  NEPORTCOMM        (NSTATUS) 0x0209
                           /**N Port error                                 */
                           /**E Port error                                 */
                           /**F Port s‚riel g‚n‚ral                        */
#define  NEPORTNOSUPP      (NSTATUS) 0x020A
                           /**N Hardware handshake not supported           */
                           /**E Port error                                 */
                           /**F Port s‚riel g‚n‚ral                        */
#define  NEPORTBADNAME     (NSTATUS) 0x020D
                           /**N Invalid port name                          */
                           /**E Invalid port name                          */
                           /**F Nom de port invalide                       */
#define  NEPORTPARAM       (NSTATUS) 0x020F
                           /**N PORT: Invalid parameter                    */
                           /**E Internal error: port                       */
                           /**F ParamŠtre de port erron‚                   */
#define  NEPORTNOTSET      (NSTATUS) 0x0211
                           /**N PORT: Not set                              */
                           /**E Internal error: port                       */
                           /**F PORT no d‚fini                             */
#define  NWPORTTIMEOUT     (NSTATUS) 0x0202
                           /**N Port not responding                        */
                           /**E Port not responding                        */
                           /**F Retard … lecture de port                   */
#define  NWOVERFLOW        (NSTATUS) 0x0204
                           /**N Port overflow                              */
                           /**E Port overflow                              */
                           /**F Tampon de port surcharg‚                   */
/**EE**/
/**ME**/
/***************************************************************************/
/* Port Defines                                                            */
/***************************************************************************/
#define  PORTNAMESIZE   20             /* maximum size of port name        */

typedef NUCHAR PORTPARITY;

#define  PORTEVENPARITY (PORTPARITY)   'E'    /* Even parity               */
#define  PORTNOPARITY   (PORTPARITY)   'N'    /* No parity                 */
#define  PORTODDPARITY  (PORTPARITY)   'O'    /* Odd parity                */

typedef NUSHORT PORTBUFFLAG;

#define  PORTINPUTBUF   (PORTBUFFLAG)  1      /* If set input buff oper    */
#define  PORTOUTPUTBUF  (PORTBUFFLAG)  2      /* If set output buff oper   */

typedef NUSHORT PORTFLAGS;

#define  PORTIXON    (PORTFLAGS) 1   /* Honor XON/XOFF to control output    */
#define  PORTIXOFF   (PORTFLAGS) 2   /* Send XON/XOFF to control input      */
#define  PORTIXANY   (PORTFLAGS) 4   /* Any char received after XOFF is XON */
#define  PORTRTSXOFF (PORTFLAGS) 8   /* Lower/Raise RTS to control input    */
#define  PORTCTSXON  (PORTFLAGS) 16  /* Honor up/down CTS state for output  */
#define  PORTDTR     (PORTFLAGS) 32  /* Set DTR. (e.g. Modem answer mode    */
#define  PORTESCX    (PORTFLAGS) 64  /* -- not implemented (un)escape ^s ^q */

/* Serial Port Input parameter control structure                           */
/***************************************************************************/
/* Legal port names                                                        */
/*       COM1  : port number 0 on a PC                                     */
/*       COM2  : port number 1 on a PC                                     */
/*       COM5  : port number 4 on a PC                                     */
/***************************************************************************/
typedef
struct   Port     {
      NCHAR       name[PORTNAMESIZE];
      NUSHORT     baudrate;
      NUCHAR      stopbits;
      PORTPARITY  parity;
      NBOOL       eightbit;
      NHANDLE     infohand;
      PORTFLAGS   flags;
}     PORT;
typedef  PORT     NWFAR *PORTPTR;

/***************************************************************************/
/* Initialize / Terminate Serial Communication Library                     */
/***************************************************************************/
NSTATUS NWEXPORT PORT_Init(void);
NSTATUS NWEXPORT PORT_Term(void);

/***************************************************************************/
/* Turn on / off internal error reporting                                  */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_SetError(NERRFLAG errorflag);
NSTATUS  NWEXPORT PORT_GetError(NERRFLAG NWFAR *errorflag);

/***************************************************************************/
/* Allocate / Deallocate Ports                                             */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_Alloc(PORTPTR port);
NSTATUS  NWEXPORT PORT_Free(PORTPTR port);

/***************************************************************************/
/* Set up baudrate, bytesize and stop bits                                 */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_Set(PORTPTR port);

/***************************************************************************/
/* Open / Close a port                                                     */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_Open(PORTPTR port);
NSTATUS  NWEXPORT PORT_Close(PORTPTR port);

/***************************************************************************/
/* Read nbytes from port into area within timeout milliseconds             */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_Read(PORTPTR port,NUSHORT NWFAR *nbytes,NDATA area,NUSHORT timeout);

/***************************************************************************/
/* Write nbytes to port from area                                          */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_Write(PORTPTR port,NUSHORT nbytes,NDATA area);

/***************************************************************************/
/* Clear Input / Output buffers                                            */
/* To determine which buffers use different flags (bufflag)                         */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_ClearBuffer(PORTPTR port, PORTBUFFLAG bufflag);

/***************************************************************************/
/* Get number of bytes in Input / Output buffers                           */
/* To determine which buffers use different flags (bufflag)                        */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_GetBufferBytes( PORTPTR port, PORTBUFFLAG bufflag,
                              NUSHORT NWFAR *inputbytes,
                              NUSHORT NWFAR *outputbytes ) ;

/***************************************************************************/
/* Inhibit tracing on an opened port                                       */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_Secure( PORTPTR port);

/***************************************************************************/
/* Get file descriptor for a port (UNIX only)                              */
/***************************************************************************/
NSTATUS  NWEXPORT PORT_GetFd( PORTPTR port, int NWFAR * fd_ptr);

#ifdef NLIB
/***************************************************************************/
/* PC-Lint Options                                                         */
/***************************************************************************/
/***************************************************************************/
/* Turn on strong type checking                                            */
/***************************************************************************/
/*lint -strong(AJX,PORTPARITY)                                             */
/*lint -strong(AJX,PORTBUFFLAG)                                            */
/*lint -strong(AJX,PORTFLAGS)                                              */
#endif

#ifdef __cplusplus
}
#endif

#define  _NDCPORT_DEFINED                    /* Set flag to define once    */
#endif

