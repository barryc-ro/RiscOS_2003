#include <stdio.h>
#include <string.h>
#include <ctype.h>

#ifdef HORRIBLE_HACK
#include "kernel.h"
#include "swis.h"
#endif

#define PROTOTYPES_INTERNAL
#include "cam_utils.h"

void dump_block(unsigned char *src, int bytes)
{
  int lines, stub;
  char t[17];
  int l;

  lines = bytes / 16;
  stub = bytes % 16;
  t[16] = 0;

  while(lines--) {
    for(l=0; l<16; l++, src++) {
      printf("%.2x ", *src);
      if(iscntrl(*src)) t[l] = '.';
      else t[l] = *src;
    }
    printf("  %s\n", t);
  }

  for(l=0; l<16; l++, src++) {
    if(l<stub) {
      printf("%.2x ", *src);
      if(iscntrl(*src)) t[l] = '.';
      else t[l] = *src;
    } else {
      printf(".. ");
      t[l] = 0x20;
    }
  }
  printf("  %s\n", t);
}

#ifdef HORRIBLE_HACK
/* smartcard transport just grinds to a halt after a while,
   so keep it interested by kicking it in the arse
*/
void prod_sctrans(void)
{
  _kernel_swi_regs r;
  static char prod_cmd[] = "rmreinit sctrans. -fullinit\r";

  r.r[0] = (int)prod_cmd;
  _kernel_swi(XOS_Bit | OS_CLI, &r, &r);
  return;
}
#endif
