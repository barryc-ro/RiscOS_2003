		    	GET		s.registers

        		MACRO
$Start  		Resource	$InFile, $OutFile
$Start  		DCD     	%FT60 - .         ; Offset from here to the next file
        		DCD     	:FLOAD:"$InFile"  ; Load address of file
        		DCD     	:FEXEC:"$InFile"  ; Exec address of file
        		DCD     	:FSIZE:"$InFile"  ; The length of the file
        		DCD     	3                 ; Access bits (always WR/)
        		DCB     	"$OutFile",0      ; The ResourceFS filename
        		ALIGN
        		DCD     	%FT40-%FT20+4     ; The file length plus four
20
        		BIN     	$InFile           ; The file itself
40
        		ALIGN
60
        		MEND


		    	AREA		|Resource$$Data|, CODE, READONLY
;		    	IMPORT		|__RelocCode|
		    	EXPORT		resource_init
		    	EXPORT		resource_final

 [ ROM_BUILD	; was :LNOT:ROM_BUILD
resources_list
			Resource	html.ISPC1, Resources.ISPCapture.html.ISPC1/html
			Resource	html.ISPC2, Resources.ISPCapture.html.ISPC2/html
			Resource	html.ISPC3, Resources.ISPCapture.html.ISPC3/html
			Resource	html.ISPC4, Resources.ISPCapture.html.ISPC4/html

			DCD		0
 ]

resource_init
 [ 0			; was ROM_BUILD
			MOV		r0, #0
			MOV		pc, lr
 |
			MOV		ip, lr
			ADRL		r0, resources_list
			SWI		&61b40
			MOVVC		r0, #0
			MOV		pc, ip
 ]

resource_final
 [ ROM_BUILD
			MOV		r0, #0
			MOV		pc, lr
 |
			MOV		ip, lr
			ADRL		r0, resources_list
			SWI		&61b41
			MOVVC		r0, #0
			MOV		pc, ip
 ]
		    	END
