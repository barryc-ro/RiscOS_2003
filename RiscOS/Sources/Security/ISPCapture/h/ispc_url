// header file for ISPC_URL.H

/* Begin-Prologue */
#ifndef ISPC_URL_H
#define ISPC_URL_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */

#define URL_MUNGE(a,b) #a###b

#ifdef LOCAL_URL_PATHS
#define URL_PATH(a) URL_MUNGE(file:/ispc:,a)
#else
#define URL_PATH(a) URL_MUNGE(file:/ispcScr:,a)
#endif

#define ISPC_URL_ENV_NAME      "Alias$URLOpen_ISPCapture"
#define ISPC_URL_ENV_VAL       "ispc_urc %*0"

#define ISPC_PATH_ENV_NAME     "ispc$path"
#define ISPC_PATH_ENV_VAL      "Resources:Resources.ISPC.html."

#define MAX_URLV   64

#ifndef TaskModule_SendMessage
#define TaskModule_SendMessage 0x4d300
#endif

typedef union {
	char *ptr;
	int offset;
} string_value;

typedef struct {
	   int tag;
	   string_value url;
	   int flags;
	   string_value body_file;
	   string_value target;
} urlopen_data;


DECLARE int urlc INIT(0);
DECLARE char *urlv[MAX_URLV];


static char msg_block[256];

DECLARE int ispc_url_init(void);
DECLARE int ispc_url_open(char *);
DECLARE int ispc_url_gsopen(char *);
DECLARE int ispc_dbox_open(char *);
DECLARE int ispc_dbox_close(void);
DECLARE int ispc_parse_url(char *);
DECLARE int ispc_parse_file(char *);

/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */

