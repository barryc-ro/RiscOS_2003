// header file for MODULE.H
/* Begin-Prologue */
#ifndef MODULE_H
#define MODULE_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#define INIT_ERR(x,y) ={(x),(y)}
#else
#define DECLARE extern
#define INIT(x)
#define INIT_ERR(x,y)
#endif
/* End-Prologue */

#define QUIET if(!quiet)
#define DEBUG if(debug)
#define FLAG(x) (x?"yes":"no")

#define ISPC_VERSION "0.01"

DECLARE _kernel_oserror *module_init(char *, int, void *);
DECLARE _kernel_oserror *module_cmd_handler(char *, int, int, void *);
DECLARE _kernel_oserror *module_final(int, int, void *);

extern int resource_init(void);
extern int resource_final(void);


#ifndef TinySupport_Init
#define TinySupport_Init        0x82c40
#define TinySupport_Die         0x82c41
#define TinySupport_Init2       0x82c42
#define TinySupport_Share       0x82c43
#endif

DECLARE void *module_wsp;
DECLARE int debug INIT(0);
DECLARE int quiet INIT(1);
DECLARE int line_status INIT(0);

/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef INIT_ERR
#undef DECLARE
#endif
/* End_Epilogue */
