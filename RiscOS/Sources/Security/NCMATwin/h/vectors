// header file for vectors.c

#undef DECLARE
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif

#define EventV               16
#define Internet_Event       19
#define SocketIO              1
#define Event_Enable         14
#define Event_Disable        13

#ifndef Event_Expansion_SCTransport
#define Event_Expansion_SCTransport 0x1
#define SLOT2_HANDLE 0xffff
#endif

#ifndef SCI_REMOVED2
#define SCI_REMOVED2 0x06
#endif

#ifndef SCI_INSERTED2
#define SCI_INSERTED2 0x07
#endif

#ifndef SCI_BADINSERT
#define SCI_BADINSERT  8
#endif

#ifndef SCI_BADINSERT2
#define SCI_BADINSERT2 9
#endif

#define MAX_TRANSITION_QUEUE      16

#ifndef NCMA_SERVICESTATUS
  #define NCMA_SERVICESTATUS    0xd1
#endif

DECLARE _kernel_oserror *setcallback(void);
DECLARE _kernel_oserror *cancelcallback(void);
DECLARE _kernel_oserror *settimeout(int);
DECLARE _kernel_oserror *canceltimeout(void);
DECLARE int flush_transition_queue(void);

DECLARE _kernel_oserror *module_claimv(void);
DECLARE void module_releasev(void);

DECLARE _kernel_oserror *module_event_enable(void);
DECLARE _kernel_oserror *module_event_disable(void);


DECLARE NCMA_TRANS transition_queue[MAX_TRANSITION_QUEUE];
DECLARE int transq_wrp INIT(0);
DECLARE int transq_rdp INIT(0);

/* Epilogue */

#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
