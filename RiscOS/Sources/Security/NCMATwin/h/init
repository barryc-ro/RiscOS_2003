#ifndef NCMAlite_initialisation_h
#define NCMAlite_initialisation_h
/* Begin-Prologue */
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#define INIT_ERR(x,y) ={(x),(y)}
#else
#define DECLARE extern
#define INIT(x)
#define INIT_ERR(x,y)
#endif
/* End-Prologue */

/* File:    init.h
   Purpose: Deals with initialisation issues.
   Author:  David Cotton

   Copyright 1999 Pace PLC

   This material is the confidential trade secret and proprietary information
   of Pace. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Pace.
   All rights reserved.

   History:

   1999-06-11: DSC
   Created.
 */




/* =============================================================================
 * Include header files
 */
#include <stdbool.h> /* for BOOL type */


/* =============================================================================
 * Global variable declarations
 */
typedef enum
{
  NO_INTERFACE       = 0,
  ETHERNET_INTERFACE = 1,
  MODEM_INTERFACE    = 2
}NETWORK_INTERFACE_TYPE;

DECLARE NETWORK_INTERFACE_TYPE interface_type;
DECLARE bool post_initialisation_run;

#define NETWORK_INTERFACE_SYS_VAR_NAME "Inet$NICType"
#define NETWORK_INTERFACE_ETHERNET "Ether"
#define NETWORK_INTERFACE_MODEM "Modem"



/* =============================================================================
 * Function prototype declarations
 */
void post_initialisation(void);




/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef INIT_ERR
#undef DECLARE
#endif /* NCMAlite_initialisation_h */

