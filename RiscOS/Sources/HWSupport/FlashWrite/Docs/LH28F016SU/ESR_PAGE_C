int ESR_pagebuffer_write(int *address, int word_count)
/* This procedure writes from page buffer to flash.                        */
{
/* This routine assumes page buffer is already loaded.                     */
/* Address is where in flash array to begin writing.                       */
/* Low byte of word count word_count must be 127 or fewer, high must be 0. */
/* High byte of word count exists for future Page Buffer expandability.    */
int ESR;
/* ESR variable is used to return contents of GSR and BSR.                 */
int *block_base = base(address);
/* Find pointer to base of block to be written.                            */

*address = 0x7171;
/* Read Extended Status Registers command                                  */
while (BIT_3 & *(block_base + 1));
/* Poll BSR until BSR.3 of target address = 0 (queue available).           */
*address = 0x0C0C;
/* Page Buffer Write to Flash command                                      */
*address = word_count;
/* high byte is a don't care, write the low byte                           */
*address = 0;
/* write high byte of word_count which must be 0 (reserved for future use) */
*address = 0x7171;
/* Read Extended Status Registers command                                  */
while (!(BIT_7 & *(block_base + 1)));
/* Poll BSR until BSR.7 of target address = 1 (block ready).               */

ESR = (*(block_base + 2) << 8) + (*(block_base + 1) & LOW_BYTE);
/* Put GSR in top byte and BSR in bottom byte of return value.             */
*address = 0x5050;
/* Clear Status Registers command                                          */
*address = 0xFFFF;
/* Write FFH after last operation to reset device to read array mode.      */
return(ESR);
}
