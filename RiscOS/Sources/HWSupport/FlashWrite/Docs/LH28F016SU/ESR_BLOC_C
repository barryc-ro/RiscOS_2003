int ESR_block_erase(int *erase_address)
/* This procedure erases a block on the LH28F016SA.                        */
{
int ESR;
/* ESR variable is used to return contents of GSR and BSR.                 */
int *block_base = base(erase_address);
/* Find address of base of block being erased.                             */

*erase_address = 0x7171;
/* Read Extended Status Registers command                                  */
while (BIT_3 & *(block_base + 1));
/* Poll BSR until BSR.3 of erase_address = 0 (queue available).            */
/* BSR is 1 word above base of target block in ESR space.                  */

*erase_address = 0x2020;
/* Single Block Erase command                                              */
*erase_address = 0xD0D0;
/* Confirm command                                                         */
*erase_address = 0xD0D0;
/* Resume command, per latest errata update                                */
*erase_address = 0x7171;
/* Read Extended Status Registers command                                  */
while (!(BIT_7 & *(block_base + 1)));
/* Poll BSR until BSR.7 of target erase_address = 1 (block ready).         */

ESR = (*(block_base + 2) << 8) + (*(block_base + 1) & LOW_BYTE);
/* Put GSR in top byte and BSR  in bottom byte of return value.            */
*erase_address = 0x5050;
/* Clear Status Registers command                                          */
*erase_address = 0xFFFF;
/* Write FFH after last operation to reset device to read array mode.      */
return (ESR);
}
