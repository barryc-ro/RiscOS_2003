int ESR_erase_all_unlocked_blocks(int *device_address, long *failure_list)
/* This procedure erases all the unlocked blocks on a LH28F016SA.          */
{
int GSR;
/* Return value will contain GSR in both top and bottom byte.              */
/* 32 bit long pointed to by failure_list is used to return map            */
/* of blocck failures, each bit representing one block's status.           */
/* device_address points to base of chip.                                  */
int block;
/* block is used to hold block count for loop through blocks.              */
long power = 1;

*failure_list = 0;
/* Initialize all 32 bits of failure list long to 0.                       */
*device_address = 0x7171;
/* Read Extended Status Registers                                          */
while (BIT_3 & *(device_address + 1));
/* Poll BSR until BSR.3 of target address = 0 (queue available).           */
*device_address = 0xA7A7;
/* Full_chip erase command                                                 */
*device_address = 0xD0D0;
/* Confirm command                                                         */
*device_address = 0x7171;
/* Read Extended Status Registers command                                  */
while (!(BIT_7 & *(device_address + 2)));
/* Poll GSR until GSR. 7 = 1 (WSM ready)                                   */

for (block = 0; block < 0x0020; block++)
{
        /* Go through blocks, looking at each BSR. 5 for operation failure */
        /* and setting appropriate bit in long pointed to by failure list. */
        if (BIT_5 & *(device_address + block * 0x8000 + 1))
        /* Multiply block by 32K words to get to the base of each block.   */
                *failure_list += power;
                /* If the block failed, set that bit in the failure list.  */
        power = power << 1;
        /* Increment to next power of two  to access next bit.             */
}

GSR = *(device_address + 2);
*device_address = 0x5050;
/* Clear Status Registers command                                          */
*device_address = 0xFFFF;
/* Write FFH after last operation to reset device to read array mode.      */
return(GSR);
} 
