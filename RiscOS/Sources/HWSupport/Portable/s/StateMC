;
; State Machine
; -------------
;
; Handles automatic detection of external mouse and
; switching to LCD when docking station is unplugged.
;
; R C Manby 25/5/95
;


 [ HWPolling
;******************************************************************************

ClaimCallEvery Entry "R0-R2"
        LDRB    R0, CallEveryFlag
        TEQ     R0, #0                  ;if already setup
        EXITS   NE                      ;then exit

        ADR     R0, S1
        STR     R0, CallEveryNext

        LDR     R0, =(PollingPeriod-1)
        ADR     R1, CallEveryHandler    ;address to call
        MOV     R2, R12                 ;value of R12 to call it with
        SWI     XOS_CallEvery
        EXITS   VS

        MOV     R0, #1
        STRB    R0, CallEveryFlag
        EXITS


;******************************************************************************
;
; ReleaseCallEvery
;
ReleaseCallEvery Entry "R0, R1"
        LDRB    R0, CallEveryFlag
        TEQ     R0, #0                  ;if not claimed
        EXITS   EQ                      ;then don't bother releasing

        ADR     R0, Continue            ;put into a 'do nothing' state
        STR     R0, CallEveryNext       ;

        ADR     R0, CallEveryHandler    ;registered call address
        MOV     R1, R12                 ;registered R12 value
        SWI     XOS_RemoveTickerEvent   ;stop further events

        MOV     R0, #0
        STRB    R0, CallEveryFlag       ;indicate not claimed
        EXITS


;******************************************************************************
;
; CallEveryHandler
;
; Called regularly (every 'PollingPeriod') to check for presence of the
; docking station and its attached peripherals.
;
CallEveryHandler
        Entry   "R0-R5,R9"

        MOV     R4, PC
        ORR     R3, R4, #SVC_mode
        TEQP    R3, #0                  ;switch to SVC mode
        MOV     R0, R0                  ;nop, because of prefetch
        Push    "R4, LR"                ;push SVC_link

        LDR     PC, CallEveryNext       ;Call state handler, it MUST return by branching
                                        ; to NewState or Continue


NewState
        STR     R0, CallEveryNext
Continue
        BL      TestLidSwitch
        Pull    "R4, LR"                ;pop SVC_link
        TEQP    R4, #0                  ;restore previous mode
        MOV     R0, R0                  ;nop, because of prefetch

        EXITS


;
; Waiting for docking station
;
S1
        BL      SWIStatus
        TST     R0, #PortableStatus_DocStationConnected
        BEQ     Continue                ;EQ still not connected, try again later

; DocInsert just gone high
        BL      ExtPowerOn
        BL      SwitchToMouse
        ADR     R0, S2
        B       NewState


;
; Docking station present, looking for external mouse
;
S2
; Ask ps2driver if mouse present
        MOV     R0, #KEYV_PortInfo
        MOV     R1, #2                  ;stream 2 is Morris MSE port
        MOV     R2, #-1                 ;R2 returned unchanged if reason code not implemented
        MOV     R9, #KEYV
        SWI     XOS_CallAVector         ;returns R2=<unchanged>/0/1/2 for not supported/waiting/mouse/keyboard
        MOVVS   R2, #-1
        CMP     R2, #1                  ;any device present?
        ADRGE   R0, S4                  ;GE: yes, (don't care what)
        BGE     NewState
        BL      SwitchToTrackerball     ;no response from mouse, so switch back to trackerball
        ADR     R0, S3
        B       NewState

;
; Docking station present, no external mouse.
; Looking for removal of DocInsert.
;
S3
        BL      SWIStatus
        TST     R0, #PortableStatus_DocStationConnected
        BNE     Continue                ;NE still connected, try again later

        BL      ExtPowerOff
        BL      EnsureLCD               ;gone away, switch LCD back on
        ADR     R0, S1
        B       NewState

;
; Docking station present, mouse connected
; checking for removal of DocIns
;
S4
        BL      SWIStatus
        TST     R0, #PortableStatus_DocStationConnected
        BNE     Continue                ;NE still connected

        BL      ExtPowerOff
        BL      SwitchToTrackerball     ;gone away, switch trackerball back on
        BL      EnsureLCD               ;gone away, switch LCD back on
        ADR     R0, S1
        B       NewState


;******************************************************************************
;
; ExtPowerOn (to external keyboard and mouse sockets)
;
ExtPowerOn
        Entry
        MOV     R0, #PortableControl_ExtPowerEnable
        MVN     R1, R0
        BL      SWIControl              ;Enable power
        EXITS


;******************************************************************************
;
; ExtPowerOff (to external keyboard and mouse sockets)
;
ExtPowerOff
        Entry
        MOV     R0, #0
        MOV     R1, #:NOT:PortableControl_ExtPowerEnable
        BL      SWIControl              ;Disable power
        EXITS

;******************************************************************************
;
; SwitchToMouse
;
; Corrupts R0, R1
;
SwitchToMouse
        Entry
        MOV     R0, #0
        MOV     R1, #:NOT:PortableControl_IntTBallEnable
        BL      SWIControl              ;Disable IntTBall

        MOV     R0, #PortableControl_ExtMouseEnable
        MVN     R1, R0
        BL      SWIControl              ;Enable ExtMouse
        EXITS


;******************************************************************************
;
; SwitchToTrackerball
;
; Corrupts R0, R1
;
SwitchToTrackerball
        Entry
        MOV     R0, #0
        MOV     R1, #:NOT:PortableControl_ExtMouseEnable
        BL      SWIControl              ;Disable ExtMouse

        MOV     R0, #PortableControl_IntTBallEnable
        MVN     R1, R0
        BL      SWIControl              ;Enable IntTBall
        EXITS


;******************************************************************************
;
; EnsureLCD
;
EnsureLCD
        Entry
        BL      SWIStatus
        TST     R0, #PortableStatus_LCDOn
        EXITS   NE                      ;LCD already on, so nothing to do

        ADRL    R0, CB_SwitchToLCD
        MOV     R1, R12
        SWI     XOS_AddCallBack         ;setup a callback to do the switch at a safer time
        EXITS


;******************************************************************************
;
; TestLidSwitch
;
TestLidSwitch
        Entry
        MOV     R0, #PortableBMUV_Flags
        BL      SWI_ReadBMUVariable
        EXITS   VS                      ;ignore errors

        TST     R1, #PortableBMUF_LidOpen
        EXITS   NE                      ;NE, lid open, so nothing to do

        BL      SWIStatus
        TST     R0, #PortableStatus_LCDOn
        EXITS   EQ                      ;EQ, using VDU, so nothing to do

;
; Lid closed, whilst using LCD, freeze the machine
;
        ADRL    R0, CB_Freeze
        MOV     R1, R12
        SWI     XOS_AddCallBack         ;setup a callback to call Portable_Stop at a safer time

        EXITS
 ]

;******************************************************************************

        LTORG

        END
