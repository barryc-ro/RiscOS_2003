; > Sources.GetAll

;---------------------------------------------------------------------------
;       Portable support code
;---------------------------------------------------------------------------

;Module_BaseAddr

;---------------------------------------------------------------------------
;       Get the headers.
;
        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        $GetIO
        GET     Hdr:KEYV
        GET     Hdr:ModHand
        GET     Hdr:Services
        GET     Hdr:FSNumbers
        GET     Hdr:CMOS
        GET     Hdr:HighFSI
        GET     Hdr:NewErrors
        GET     Hdr:MsgTrans
        ;GET     Hdr:File
        GET     Hdr:Proc
   ;;;     GET     Hdr:IO.IOMDL
        GET     Hdr:PaletteV
        GET     Hdr:Portable
        GET     Hdr:ADFS
        GET     Hdr:Variables
        GET     Hdr:ScrBlank
        ;GET     Hdr:NewSpace
        GET     Hdr:PublicWS
        GET     Hdr:Sound
        GET     Hdr:Debug
        GET     Hdr:DevNos

        GET     Hdr:Wimp
        GET     Hdr:Messages
        GET     Hdr:WimpSpace

        OPT     OptList+OptNoMacros

        GET     Version

;---------------------------------------------------------------------------
;       Define global variables.
;
        GBLL    T
        GBLL    true
        GBLL    F
        GBLL    false

T       SETL    {TRUE}
F       SETL    {FALSE}
true    SETL    {TRUE}
false   SETL    {FALSE}


        GBLL    Debug
Debug           SETL    false   ;true

        GBLL    PokeBorder
PokeBorder      SETL    true

        GBLL    OnMorris                        ;When true, assembles Idle & Stop code for Morris
OnMorris        SETL    false ;true

        GBLL    OnEasiStork                     ;When true, assembles Idle & Stop for Medussa
OnEasiStork     SETL    false                   ; with clock stopping hardware

        GBLL    UseSRAM                         ;When true copy RAS & CAS line code into SRAM
UseSRAM         SETL    false                   ; on podule (Medussa prototyping)

        GBLL    SimulateBMU
SimulateBMU     SETL    false ;true ;false ;true

        GBLL    UseMicroController              ;When true assemble code to talk to Alex's controller
UseMicroController SETL false ;true ;false      ;When false simulate some of the keyboard protocol 

        GBLL    SwitchPower
SwitchPower     SETL    false ;true

;
; The hardware allows us to remove power from various I/O units.
; In addition, the 37C665 combo chip allows its subunits to be disabled or placed
; into low-power mode. The following flags control the subunits. 
;
        GBLL    DisableFDC              ; whether to disable the FDC when bit turned off
DisableFDC      SETL    {TRUE}

        GBLL    DisableHDC              ; whether to disable the HDC when bit turned off
DisableHDC      SETL    {TRUE}

        GBLL    ConfigSerial            ; whether to disable the serial sub unit in the 37C665
ConfigSerial    SETL    {TRUE}

        GBLL    ConfigParallel          ; whether to disable the parallel sub unit in the 37C665
ConfigParallel  SETL    {TRUE}

        GBLL    TurnOffOscillator       ;
TurnOffOscillator SETL  {FALSE} 


        GBLL    DisableSound
DisableSound    SETL    {TRUE}


        GBLL    UseParallelPortFDC
UseParallelPortFDC SETL {TRUE}

        GBLL    TestHardware
TestHardware    SETL    {FALSE}

;---------------------------------------------------------------------------
;       Get the sources.
;
        GET     s.Front
        GET     s.Macros
        GET     s.StPortable    ;Module header and misc. functions
        GET     s.PowerCtrl     ;Power switching
        GET     s.HotKeys
        GET     s.MicroCtrl     ;Communications with battery-manager/keyboard controller.
        GET     s.LCDcontrol    ;LCD brightness and contrast control


        END
