; > Sources.Front


;******************************************************************************
;
; Constant declarations
;

default_LCDBrightness1          EQU     5               ;index into BrightnessTable
default_LCDBrightness2          EQU     2               ;index into BrightnessTable
default_LCDContrast             EQU     20              ;index into ContrastTable, want a value of approx 175
default_DimTime                 EQU     1               ;1=>30sec
default_FreezeTime              EQU     3               ;index into TimeTable (3=>5minutes)
RetryDelay                      EQU     100             ;centiseconds ie 1 second

 [ HWPolling
PollingPeriod                   EQU     100             ;1 second in centi-seconds
 ]

KeyRepeatTickerRate             EQU     25              ;centiseconds, gives 4 per second
AutoRptDelay                    EQU     5
AutoRptRate                     EQU     1

StrBuffLen                      EQU     20

;
; Keyboard commands
;
command_SETLEDS                 EQU     &ED
command_SETRATE                 EQU     &F3
command_RESEND                  EQU     &FE
command_RESET                   EQU     &FF

command_ENABLE                  EQU     &F4             ;Start transmission if in Incremental Stream mode
command_DISABLE                 EQU     &F5             ;Stop transmission of mouse position reports
command_DEFAULT                 EQU     &F6

;
; Bytes from keyboard
;
keybd_ERROR                     EQU     &00
keybd_BAT                       EQU     &AA
keybd_SPECIAL                   EQU     &E0
keybd_BREAK                     EQU     &E1
keybd_KEYUP                     EQU     &F0
keybd_ACK                       EQU     &FA
keybd_RESEND                    EQU     &FE

;
; Power management commands
;
PwrCmd_Enable_PMstat            EQU     &001            ;Enable power management status reporting
PwrCmd_Disable_PMstat           EQU     &002            ;Disable power management status reporting
PwrCmd_Send_I_charge            EQU     &030            ;Send charge current reading
PwrCmd_Send_I_Discharge         EQU     &031            ;Send discharge current reading
PwrCmd_Send_V                   EQU     &032            ;Send battery voltage reading
PwrCmd_Send_T1                  EQU     &033            ;Send temperature reading from sensor 1
PwrCmd_Send_T2                  EQU     &034            ;Send temperature reading from sensor 2
PwrCmd_Send_charge_level        EQU     &035            ;Send most significant byte of battery charge state
PwrCmd_Send_A4_flags            EQU     &036            ;Send A4 compatible status byte
PwrCmd_Send_input_signals       EQU     &037            ;Send state of input signals
PwrCmd_Send_fault_code          EQU     &038            ;Send code for fault detected
PwrCmd_Send_battery_capacity    EQU     &039            ;Send specified capacity for installed battery pack
PwrCmd_Power_down               EQU     &040            ;System goes into 'off' state
PwrCmd_Suspend                  EQU     &041            ;System goes into suspend (sleep) mode
PwrCmd_AC_OFF                   EQU     &042            ;Disable power supply from AC adapter
PwrCmd_AC_ON                    EQU     &043            ;Enable power supply from AC adapter (if present)

;
; CMOS RAM usage
;
BrightnessCMOS                  EQU     StorkCMOS       ;&3C
; b0..b2   3bits   'Current' brightness level (BrightnessIndex1)
; b3..b5   3bits   'Other' brightness level   (BrightnessIndex2)
; b6       1bit    Idle mode inhibit   NYA
; b7       1bit    Lid closeure action (0/1=TBD) NYA
;
ContrastCMOS                    EQU     StorkCMOS + 1   ;&3D
; b0..b5   6bits   Contrast level             (ContrastIndex)
; b6..b7   2bits   unused
;
TimeCMOS                        EQU     StorkCMOS + 2   ;&3E
; b0..b2   3bits   Screen dim time, 0=>None, 1=>30sec, 2=>1, 3=>2, 4=>5, 5=>10, 6=>15, 7=>30
; b3..b5   3bits   Freeze time,     0=>None, 1=>1, 2=>2, 3=>5, 4=>10, 5=>15, 6=>30, 7=>60
;

;******************************************************************************
;
; Hardware latches in PCMCIA ASIC and Morris that control
; power switching and other misc. functions on Stork.
;
;HWLatchPA      }
;HWLatchPB      } see hdr.Portable
;HWLatchMC      }
;HWLatchMA      }
;
;
; Initial values used by the Kernel to turn all the hardware on.
;
;InitLatchPA    }
;InitLatchPB    } see hdr.Portable
;InitLatchMC    }
;InitLatchMA    }


;
;MORRIS IOP (HWLatchMC) bit assignments
;
BRC0                            EQU     1 :SHL: 2       ;Brightness
BRC1                            EQU     1 :SHL: 3       ;Brightness
BRC2                            EQU     1 :SHL: 4       ;Brightness
BRCmask                         EQU     7 :SHL: 2       ;Brightness
line_nRST                       EQU     1 :SHL: 5       ;Contrast Pot
line_CLK                        EQU     1 :SHL: 6       ;Contrast Pot
line_DQ                         EQU     1 :SHL: 7       ;Contrast Pot
linemask                        EQU     7 :SHL: 5       ;Contrast Pot


;******************************************************************************
;
; Addresses
;

VIDC                            EQU     &03500000

;
; FDC37C665GT 'Combo chip' - Combined Floppy, IDE, Serial & Parallel chip
;
PCWorldBase                     EQU     &03010000       ;Base address of FDC37C665GT = PC/AT I/O 000H

CSR665                          EQU     PCWorldBase + &3F0*4
CRD665                          EQU     PCWorldBase + &3F1*4
FDCDOR                          EQU     PCWorldBase + &3F2*4


;
; Addresses and bit meanings for the keyboard/battery-manager controller
;
uC_Base                         EQU     &302B800

uC_DataRxReg                    EQU     uC_Base         ;Read only
uC_KeyDataTxReg                 EQU     uC_Base         ;Write only

uC_StatusReg                    EQU     uC_Base + 4     ;Read only
uC_PwrDataTxReg                 EQU     uC_Base + 4     ;Write only

;Status register bits
uC_Status_IBF                   EQU     1 :SHL: 0       ;Set data waiting in DataRxReg
uC_Status_OBF                   EQU     1 :SHL: 1       ;
uC_Status_PnK                   EQU     1 :SHL: 2       ;Clear Keyboard data, Set Power data
uC_Status_CnD                   EQU     1 :SHL: 3       ;
uC_Status_PwrChg                EQU     1 :SHL: 6       ;Async event eg Lid (open/close)ed or voltage threshold passed


;******************************************************************************
;
; Module workspace layout
;
                ^       0,R12
MsgTransBlk     #       16      ; for MessageTrans calls

SleepTimerDelay #       4       ;Value set by *FreezeTime

ConfigExtraBitsCopy #   4       ;Current machine state - as set/returned by SWI Portable_Control
ControlInternal #       4       ;

PaletteVFlag    #       1       ; 0 => not on PaletteV,   1 => on PaletteV but colours not set up,
                                ; 2 => on PaletteV and colours set up
EventVFlag      #       1       ; 0 => not on EventV,     1 => on EventV
KeyVFlag        #       1       ; 0 => not on KeyV,       1 => on KeyV
BMUDevFlag      #       1       ; 0 => not on NetworkIRQ, 1 => on NetworkIRQ
SleepTimerFlag  #       1       ; 0 => not on CallAfter,  1 => CallAfter pending
 [ HWPolling
CallEveryFlag   #       1       ; 0 => not on CallEvery,  1 => CallEvery in use
 ]
                #       3:AND:(-:INDEX:@)
;
; Variables for Pseudo PS2 channel
;
DriverPrivateWord       #       4
Threaded                #       4
PseudoIntMask           #       4

;
; Variables for Power management
;
BMUerrorpointer #       4       ; !0 => -> tokenised error
PMInts_Enabled  #       1
BMU_Flags       #       1       ; most recently processed status flags
Callback_Value  #       1       ; status flags held between IRQ and Callback
;
CommandState    #       1       ;0/1/2 for Free/In-use/Result-waiting
CommandResult   #       1
                #       3:AND:(-:INDEX:@)

 [ SwitchPower
PortSoftCopies  #       4       ;Soft copies of 4 output ports in Morris and Berlin that
                                ; control voltage switching to various bits of stork Hardware
 ]

KeyRepeatAction #       4       ;Routine to call when key repeats (LCD_BrightnessUp etc)
KeyRepeatDelay  #       4       ;Time from key depression to first repeat
KeyRepeatRate   #       4       ;Auto-repeat rate - NYA
KeyRepeatFlag   #       1       ;0 => not on CallEvery, 1..n number of keys held down

DisplayMode     #       1       ;0=CRT, &FF=LCD
PaletteMode     #       1       ;0=Normal, 1=Inverted (affects LCD only)
BrightnessHold  #       1       ;0=normal operation, 1=hold display at reduced brightness
BrightnessIndex1 #      1       ;Current setting
BrightnessIndex2 #      1       ;Other setting
ContrastIndex    #      1
BrightnessValue #       1
ContrastValue   #       1
ModeBits        #       1       ;b7 lid closure, b6 idle mode inhibit

holdVIDCR       #       1
holdSD0CR       #       1
holdATODICR     #       1
                #     3:AND:(-:INDEX:@)


 [ HWPolling
; Variables for state machine
CallEveryNext   #       4       ;Address of next state routine
 ]
;

;
StrBuff         #       StrBuffLen
;
MemNeeded       *       :INDEX:@


 [ SwitchPower
SCLatchPA       EQU     PortSoftCopies + 0
SCLatchPB       EQU     PortSoftCopies + 1
SCLatchMC       EQU     PortSoftCopies + 2
SCLatchMA       EQU     PortSoftCopies + 3
 ]

;******************************************************************************

;>>>this should be exported properly into Export.Hdr.Interface.Public.WS
;>>>fix IIC.s.IICMod as well!
IOCControlSoftCopy * &106  ;

        END
