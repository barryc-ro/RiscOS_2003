/************************************************************************/
/*                  Copyright 1997 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/

/* $Header$ */

/* $Log$ */

/* flashlib.h */

#ifndef __flashlib_h
#define __flashlib_h

/* Possible data types of flash pages */
#define DataType_FreePage            255
#define DataType_FirstAddressPage    128
#define DataType_FollowOnAddressPage 129

#define Flash_ErrorCode_NoError       0
#define Flash_ErrorCode_CRCFail       1
#define Flash_ErrorCode_Timeout       2
#define Flash_ErrorCode_SerFlashError 3

typedef struct
{
  union
  {
    char bytes[264];
    struct
    {
      struct
      {
        char datatype;
        char checksum;
        char nextl, nexth;
        int reserved;
      } header;
      char data[256];
    } structured;
  } data;
} flash_page;

/********************************************************************/
/* flashlib_write_page                                              */
/*                                                                  */
/* This function will write a page of data to serial flash.         */
/* It calculates the checksum for the provided data, and writes     */
/* this and the data to the hardware.                               */
/*                                                                  */
/* Parameters: page - Pointer to the page data object               */
/*             page_num - The page number at which to write         */
/*                        the data                                  */
/*                                                                  */
/* Returns:    An error code relating to the success/failure.       */
/*             This can be one of:                                  */
/*                                                                  */
/*              Flash_ErrorCode_NoError, to indicate success.       */
/*              Flash_ErrorCode_CRCFail, to indicate the page       */
/*                                 failed to write correctly.       */
/*              Flash_ErrorCode_Timeout, to indicate a timeout      */
/*                    ocurred wating for the flash to become ready. */
/*                                                                  */
/********************************************************************/
int flashlib_write_page (int page_num, flash_page *page);

/********************************************************************/
/* flashlib_read_page                                               */
/*                                                                  */
/* This function will read a page of flash data from serial flash,  */
/* allocate a memory block in which to return the data, and set the */
/* provided double-dereferenced pointer to point to this block.     */
/*                                                                  */
/* Paramaters: page_num - The page to read from                     */
/*             page_ptr - Pointer to a pointer value held in the    */
/*                        calling code.                             */
/*                                                                  */
/* Returns:    An error code relating to the success/failure.       */
/*             This can be one of:                                  */
/*                                                                  */
/*              Flash_ErrorCode_NoError, to indicate success.       */
/*              Flash_ErrorCode_Timeout, to indicate a timeout      */
/*                    ocurred wating for the flash to become ready. */
/*                                                                  */
/********************************************************************/
int flashlib_read_page (int page_num, flash_page **page_ptr);

#endif

/* end of flashlib.h */
