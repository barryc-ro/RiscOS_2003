     1  
     8   
     9  
    10  
    11  
    12  
    13  
    14  
    15  
    16  
    17  
    18  
    19  
    20    
    21    
    22  
    23  
    24  
    25  
    26  
    27  
    28  
    29  
    30  
    31  
    32  
    33  
    34  
    35  static flash_page *scratch_page =  0 ;
    36  
    37  static int flashlib_poll_ready (void)
    38  {
    39  
    40    _kernel_oserror *er;
    41    int status =  0x80 ;
    42  
    43    do
    44    {
    45      er = _swix( 0x4f543 ,  (1U << ( 0 ))  |  (( 1 ) !=  0x10 ? 1U << 31 - ( 1 ): 1U << 21) ,  2 , &status);
    46      if (er)
    47        return ( 3 );
    48    } while (!(status &  0x80 ));
    49  
    50    return( 0 );
    51  }
    52  
    53  void clear_scratch(void)
    54  {
    55    if (scratch_page)
    56      free(scratch_page);
    57  }
    58    
    59   
    60  int flashlib_read_page (int page_num, flash_page **page_ptr)
    61  {
    62    _kernel_oserror *er;
    63    int i, status;
    64    char sum = 0;
    65    
    66    if (*page_ptr ==  0 )
    67      *page_ptr = (flash_page *) calloc(1, sizeof(flash_page));
    68  
    69    if (*page_ptr ==  0 )
    70    {
    71      printf ("Out of memory\n");
    72      exit(1);
    73    }
    74  
    75  
    76  
    77  
    78  
    79  
    80  
    81  
    82  
    83  
    84  
    85    status = flashlib_poll_ready ();
    86  
    87    if (status !=  0 )
    88      return(status);
    89      
    90    er = _swix( 0x4f541 ,  (~0 << ( 0 ) ^ ~0 << ( 3 ) + 1) ,  2 , page_num,
    91               (*page_ptr)->data.bytes,  264 );
    92  
    93    if (er)
    94      return( 3 );
    95  
    96    for (i = 0; i <  264 ; i++)
    97      sum ^= (*page_ptr)->data.bytes[i];
    98      
    99    if (sum != 0)
   100      return( 1 );
   101    
   102    return( 0 );
   103  }
   104  
   105       
   106  int flashlib_write_page (int page_num, flash_page *page)
   107  {
   108    _kernel_oserror *er;
   109    int i, status;
   110    char sum = 0;
   111    
   112     
   113    for (i = 0; i <  264 ; i++)
   114    {
   115      if (i != 1)
   116        sum ^= page->data.bytes[i];
   117    }
   118    page->data.structured.header.checksum = sum;
   119  
   120  
   121  
   122  
   123  
   124  
   125  
   126  
   127  
   128  
   129  
   130  
   131  
   132  
   133  
   134  
   135  
   136  
   137  
   138  
   139  
   140  
   141  
   142  
   143  
   144    status = flashlib_poll_ready ();
   145    if (status !=  0 )
   146      return status;
   147  
   148    er = _swix( 0x4f542 ,  (~0 << ( 0 ) ^ ~0 << ( 3 ) + 1) ,  2 , page_num,
   149               page->data.bytes,  264 );
   150  
   151    if (er)
   152      return( 3 );
   153  
   154    return(flashlib_read_page(page_num, &scratch_page));
   155  }
   156  
   157  
