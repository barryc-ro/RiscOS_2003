/*
 * misc.c
 */

/* Include all the required headers
 */
#include <stdio.h>
#include <stdlib.h>
#include "misc.h"
#include "debuglib/debuglib.h"

int *misc_integerlist_copy (int *list_to_copy)
{
  int *copy = NULL;
  int counter, len;

  if (list_to_copy == NULL)
    return NULL;

  len = misc_integerlist_findlength (list_to_copy);

  copy = (int*) calloc (len + 1, sizeof (int));
  if (copy == NULL)
    return copy;

  for (counter=0; counter < (len+1); counter++)
    copy[counter] = list_to_copy[counter];

  return copy;
}

int misc_integerlist_findlength (int *list)
{
  int i = 0;

  if (list)
  {
    while (list[i] != -1)
      i++;
  }

  return i;
}

void misc_integerlist_removefrom (int **list_p, int firstpage)
{
  int *new_list, *old_list;
  int old_len, old_index, new_index = 0;

  old_list = *list_p;

  old_len = misc_integerlist_findlength (old_list);
  if (!old_len)
    return;

  new_list = (int *) calloc (old_len, sizeof (int));

  for (old_index = 0; old_index < old_len; old_index++)
  {
    if (old_list[old_index] != firstpage)
      new_list[new_index++] = old_list[old_index];
  }
  new_list[new_index] = -1;

  if (*list_p)
    free (*list_p);
  *list_p = new_list;
}

void misc_integerlist_addto (int **list_p, int firstpage)
{
  int *new_list;
  int old_len, old_index;

  old_len = misc_integerlist_findlength (*list_p);

  if (!old_len)
  {
    if (*list_p)
      free (*list_p);

    *list_p = (int *) calloc (2, sizeof (int));
    (*list_p)[0] = firstpage;
    (*list_p)[1] = -1;

    return;
  }

  new_list = (int *) calloc (old_len + 2, sizeof (int));

  for (old_index = 0; old_index < old_len; old_index++)
    new_list[old_index] = (*list_p)[old_index];

  new_list[old_len] = firstpage;
  new_list[old_len + 1] = -1;

  if (*list_p)
    free (*list_p);
  *list_p = new_list;
}

void misc_integerlist_print (int *list)
{
  int i=0;

  dprintf (("", "{"));

  if (list)
  {
    while (list[i] != -1)
    {
      dprintf (("", "%d, ", list[i]));
      i++;
    };
  }
  dprintf (("", "}\n"));
}
