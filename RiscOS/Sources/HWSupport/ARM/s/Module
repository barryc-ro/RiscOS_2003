; > Sources.Module

        LEADR   Module_LoadAddr

        ASSERT  (.=Module_BaseAddr)

        DCD     0                               ; Mod_Start
        DCD     Mod_Init        - Module_BaseAddr
        DCD     Mod_Die         - Module_BaseAddr
  [ standalone
        DCD     Mod_Service     - Module_BaseAddr
  |
        DCD     0
  ]
        DCD     Mod_Title       - Module_BaseAddr
        DCD     Mod_Helpstr     - Module_BaseAddr
        DCD     Mod_Helptable   - Module_BaseAddr
        DCD     0
        DCD     0
        DCD     0
        DCD     0
 [ International_Help <> 0
        DCD     message_file_name - Module_BaseAddr
 |
        DCD     0
 ]


;---------------------------------------------------------------------------
; *Cache and *Configure Cache command tables.
;
Mod_Helptable
                Command $Command,1,0,International_Help,Cache
                Command $Command,1,0,Status_Keyword_Flag:OR:International_Help,CacheCon
                DCB     0

Mod_Title       DCB     "ARM",0
Mod_Helpstr     DCB     "ARM",9,9,"$Module_MajorVersion ($Module_Date)"
        [ Module_MinorVersion <> ""
                DCB     " $Module_MinorVersion"
        ]
                DCB     0
                ALIGN


;---------------------------------------------------------------------------
;       Module initialisation point.
;
Mod_Init
        ENTRY

        LDR     r2, [r12]                       ; Have we already got a workspace ?
        CMP     r2, #0
        BNE     %FT01

        MOV     r0, #6
        LDR     r3, =max_running_work
        SWI     XOS_Module                      ; Claim workspace.
        EXIT    VS

        STR     r2, [r12]                       ; Store workspace pointer.
01
        MOV     r12, r2

 [ standalone
        ADR     r0, resourcefsfiles
        SWI     XResourceFS_RegisterFiles
 ]

        MOV     r0, #0                          ; Initialise workspace.
        STRB    r0, flags

 [ checkprocessor
        ReadCop r0, CR_ID
        LDR     lr, =&FFF0
        AND     r0, r0, lr
        TEQ     r0, #&0600                      ; Only initialise for ARM600
        TEQNE   r0, #&0610                      ;   or ARM610
        TEQNE   r0, #&0620                      ;   or ARM620
        TEQNE   r0, #&7000                      ;   or ARM700.
        ADRNE   r0, ErrorBlock_ARM_BadProcessor
        BLNE    MsgTrans_ErrorLookup
 ]
        BLVC    Cache_Init

        BLVS    Mod_ShutDown
        EXIT

        MakeErrorBlock  ARM_BadProcessor


;---------------------------------------------------------------------------
;       Service handler.
;
 [ standalone
;
;Ursula format
Mod_UServTab
        DCD     0
        DCD     Mod_UService - Module_BaseAddr
        DCD     Service_ResourceFSStarting
        DCD     0
        DCD     Mod_UServTab - Module_BaseAddr
Mod_Service
        MOV     r0, r0
        TEQ     r1, #Service_ResourceFSStarting
        MOVNES  pc, lr
Mod_UService
        ENTRY   "r0"
        ADR     r0, resourcefsfiles
        MOV     lr, pc
        MOV     pc, r2
        EXITS
  ] ;standalone

;---------------------------------------------------------------------------
;       Killing the module.
;
Mod_Die
        ENTRY

        LDR     r12, [r12]
        CMP     r12, #0
        Pull    "pc",EQ,^

        BL      Mod_ShutDown

        EXITS

;---------------------------------------------------------------------------
; Mod_Shutdown
;
;       Out:    preserves all registers and flags
;
;       Tidy up before dying.
;
Mod_ShutDown
        ENTRY   "r0,r2"

        LDRB    r0, flags                       ; Close the message file if it's open.
        TST     r0, #f_messagesopen
        ADRNE   r0, message_file_block
        SWINE   XMessageTrans_CloseFile

 [ standalone
        ADR     r0, resourcefsfiles
        SWI     XResourceFS_DeregisterFiles
 ]

        EXITS                                   ; Ignore errors, preserve flags.


;---------------------------------------------------------------------------
;       Neil's debugging routines
;
      [ debug
        InsertNDRDebugRoutines
      ]


        END
