/*
 * Exported Podule constants
 *
 * ***********************************
 * ***    C h a n g e   L i s t    ***
 * ***********************************
 *
 * Date       Name  Description
 * ----       ----  -----------
 * 12-May-87  BC    Added DeviceType_Link to allow for adding ROMS
 * 19-Jun-87  BC    Removed speed/access stuff
 * 15-Sep-87  BC    Put in EXPORT of masking constants
 *
 * 20-Aug-87  BC    Left RawRead and RawWrite in permanently
 * 10-May-88  BC    Added SWI Podule_HardwareAddress
 * 11-Jan-91  TMD   Added SWI Podule_EnumerateChunksWithInfo
 * 15-Jan-91  TMD   Added SWI Podule_HardwareAddresses
 * 22-Mar-91  OSS   Added SWI Podule_ReturnNumber
 * 28-Apr-93  BC    Added two new SWIs for Medusa
 *
 * 23-Jul-87  BC    Added DeviceType_PartNumber
 * 15-Mar-90  BC    Added DeviceType_EthernetID, &F7
 * 15-Mar-90  BC    Added DeviceType_HardwareRev, &F8
 * 04-Mar-94  BC    Added DeviceType_ROMCRC
 *
 * 12-May-93  BC    Added reason codes for ReadInfo
 * 23-Jun-93  BC    Added more reason codes for ReadInfo
 * 23-Jun-93  BC    Changed partitioning of the combined address  *!*!*!*!*!*
 * 30-Jun-93  BC    Added DeviceVector reason code for ReadInfo
 * 05-Aug-93  BC    Added extra reason codes for ReadInfo
 * 12-Jan-94  BC    Updated the reason codes for ReadInfo
 * 20-Jan-94  BC    Added new reason codes (Ethernet) for ReadInfo
 * 21-Jan-94  BC    Added new reason code Podule_ReadInfo_MEMC
 *
 * 05-Jan-94  BC    Changed masks to be 32 bit not 26 bit
 * 18-Feb-94  BC    Changed symbol for SWI base
 * 29-Jun-94  AMcC  Replaced "Podule" with PoduleSWI_Name
 * 29-Jun-94  AMcC  Removed Country codes (Country_) (no longer used)
 * 29-Jun-94  AMcC  Moved Manufacturer codes (Manf_), Podule types (ProdType_)
 *                  and Simple types (SimpleType_) to HdrSrc.Register.PoduleReg
 * 03-May-95  JRH   Added direct support for STB2 MPEG1 chips conditioned on
 *                  STB. Will return values consistent with a podule fitted in
 *                  slot 0 when MPEG hardware is detected using link.
 * 16-Jan-96  JRH   Changed condition for fake podule from STB to system build
 *                  setting FakePodule0.
 *                  s.Module: Changed build options NetworkPodule and
 *                  ExtensionROMs to be equal to system build options
 *                  NetPodSupport and ExtROMSupport.
 * 02-Jun-97  KJB   Converted from assembler header file
 *                  Added constants for access speeds
 */


/*
 * Bits for the reason code (R0) of SWI Podule_ReadInfo
 */

#define Podule_ReadInfo_Number           *       (1u<<0)
#define Podule_ReadInfo_SyncBase         *       (1u<<1)
#define Podule_ReadInfo_CMOSAddress      *       (1u<<2)
#define Podule_ReadInfo_CMOSSize         *       (1u<<3)
#define Podule_ReadInfo_ROMAddress       *       (1u<<4)
#define Podule_ReadInfo_ID               *       (1u<<5)
#define Podule_ReadInfo_Type             *       (1u<<6)
#define Podule_ReadInfo_CombinedAddress  *       (1u<<7)
#define Podule_ReadInfo_Description      *       (1u<<8)
#define Podule_ReadInfo_EASILogical      *       (1u<<9)
#define Podule_ReadInfo_EASISize         *       (1u<<10)
#define Podule_ReadInfo_DMAPrimary       *       (1u<<11)
#define Podule_ReadInfo_DMASecondary     *       (1u<<12)
#define Podule_ReadInfo_IntStatus        *       (1u<<13)
#define Podule_ReadInfo_IntRequest       *       (1u<<14)
#define Podule_ReadInfo_IntMask          *       (1u<<15)
#define Podule_ReadInfo_IntValue         *       (1u<<16)
#define Podule_ReadInfo_IntDeviceVector  *       (1u<<17)
#define Podule_ReadInfo_FIQasIntStatus   *       (1u<<18)
#define Podule_ReadInfo_FIQasIntRequest  *       (1u<<19)
#define Podule_ReadInfo_FIQasIntMask     *       (1u<<20)
#define Podule_ReadInfo_FIQasIntValue    *       (1u<<21)
#define Podule_ReadInfo_FIQasIntDeviceVector *   (1u<<22)
#define Podule_ReadInfo_FIQStatus        *       (1u<<23)
#define Podule_ReadInfo_FIQRequest       *       (1u<<24)
#define Podule_ReadInfo_FIQMask          *       (1u<<25)
#define Podule_ReadInfo_FIQValue         *       (1u<<26)
#define Podule_ReadInfo_EthernetAddressLow *     (1u<<27)
#define Podule_ReadInfo_EthernetAddressHigh *    (1u<<28)
#define Podule_ReadInfo_EthernetAddress  *       (3u<<27)     /* Two bits => 48 bits */
#define Podule_ReadInfo_MEMC             *       (1u<<29)
#define Podule_ReadInfo_30               *       (1u<<30)
#define Podule_ReadInfo_31               *       (1u<<31)

/*
 * The hardware address handed to loaders by the Podule manager consists of
 * two parts, the Synchronous base address, and the CMOS base address.
 * These two parts are combined into a single word as with the CMOS address
 * (the first of four bytes) in the bottom 10 bits.  The remainder is the
 * hardware address.
 *
 *  31                                    10 9               0
 *  +---------------------------------------+----------------+
 *  |  Hardware base address (Synchronous)  |  CMOS address  |
 *  +---------------------------------------+----------------+
 *
 * So this means that entry points expecting the hardware base address
 * should now mask the incoming register value;
 *
 *        LDR    Rmv, =2_00000000000000000000001111111111
 *        BIC    Rba, Rha, Rmv
 * OR
 *        LDR    Rmv, =2_11111111111111111111110000000000
 *        AND    Rba, Rha, Rmv
 *
 * To obtain the true base address, and they should also mask to obtain the
 * CMOS address for use in R1 in the SWI XOS_Byte for ReadCMOS or WriteCMOS;
 *
 *        LDR    Rmv, =2_11111111111111111111110000000000
 *        BIC    Rca, Rha, Rmv
 * OR
 *        LDR    Rmv, =2_00000000000000000000001111111111
 *        AND    Rca, Rha, Rmv
 *
 * These four constants are exported below.
 */

#define Podule_BaseAddressBICMask 0x000003FFu
#define Podule_BaseAddressANDMask 0xFFFFFC00u

#define Podule_CMOSAddressBICMask 0xFFFFFC00u
#define Podule_CMOSAddressANDMask 0x000003FFu

/*
 * Access speeds, as passed to Podule_SetSpeed
 */
#define Podule_Speed_TypeA 1
#define Podule_Speed_TypeB 2
#define Podule_Speed_TypeC 3
#define Podule_Speed_TypeD 4

/*
 * Operating system identity bytes for load chunks
 */

/* OS=0, RISC OS */
#define OSType_Loader           0x80  /* The loader for the rest of the image */
#define OSType_Module           0x81  /* A Relocatable Module */
#define OSType_BBCROM           0x82  /* Use to support the ROM Card */
#define OSType_Sprite           0x83
#define OSType_File             0x84  /* General get out mechanism */

/* OS=1, ARX */
#define ARXType_Loader          0x90

/* OS=2, RISCiX */
#define UnixType_Loader         0xA0

/* OS=3, Helios */
#define HeliosType_Loader       0xB0

/* OS=7, Device data */
#define DeviceType_Link         0xF0 /* Used to link directory sections together */
#define DeviceType_SerialNumber 0xF1
#define DeviceType_Date         0xF2
#define DeviceType_Modification 0xF3
#define DeviceType_Place        0xF4
#define DeviceType_Description  0xF5
#define DeviceType_PartNumber   0xF6
#define DeviceType_EthernetID   0xF7
#define DeviceType_HardwareRev  0xF8
#define DeviceType_ROMCRC       0xF9

#define DeviceType_Empty        0xFF /* Used to patch ROMS */
