/******************************************************************************/
/**  File:    PCI_Privat.h                                                   **/
/**  	      								     **/
/**  Purpose: Internal (private) header file for the PCI manager module	     **/
/**  	      								     **/
/**  Author:  W.Turner                                                       **/
/**  	      								     **/
/**  History: 11-Dec-96 WT  Created                                          **/
/******************************************************************************/

#ifndef __pci_privat_h
#define __pci_privat_h

#include "_Public.h"

#define DEBUG
#ifdef DEBUG
//  #define TESTING
  #include "Debug.h"
#endif


/**************************************************/
/**  SWI Definitions                             **/
/**************************************************/
#define  Swindex_ReturnNumberOfDevices	0x00
#define  Swindex_ReadID			0x01
#define  Swindex_RegisterDriver		0x02
#define  Swindex_DeRegisterDriver	0x03
#define  Swindex_ConfigurationRead	0x04
#define  Swindex_ConfigurationWrite	0x05
#define  Swindex_AddressMapping		0x06


/**************************************************/
/**  Error Definitions                           **/
/**************************************************/
#define  ERRNUM_NOSLOTS			0x813300
#define  ERRTXT_NOSLOTS			"No PCI slots detected"
#define  ERRNUM_NOHARDWARE		0x813301
#define  ERRTXT_NOHARDWARE		"No PCI controller detected"


/**************************************************/
/**  Misc Definitions                            **/
/**************************************************/
#define  TRUE				0x1
#define  FALSE				0x0
#define  NOT_USED(var)			(var = var)

/**************************************************/
/**  Memory Configurations			 **/
/**************************************************/
#define IO_ADDR_BASE_PHYS		0x60000000
#define IO_ADDR_BASE_LOG		0x90000000
#define IO_ADDR_RANGE			0x07C00000 /** Bit pinched for config **/
#define MEM_ADDR_BASE_PHYS		0x68000000
#define MEM_ADDR_BASE_LOG		0x98000000
#define MEM_ADDR_RANGE			0x08000000
#define CFG_SPACE_BASE_PHYS		0x67C00000
#define CFG_SPACE_BASE_LOG		0x97C00000
#define CFG_SPACE_RANGE			0x00400000


/**************************************************/
/**  Misc configurations                         **/
/**************************************************/
#define NUM_PCI_SLOTS			0x04 /* Phoebe specific */
#define MAX_PCI_SLOTS			0x14 /* PCI specific */
#define MAX_PCI_FUNCTIONS		0x08 /* PCI 2.0 specific */
#define MAX_DESC_LENGTH			40   /* 40 chars max text description */


/**************************************************/
/**  Internal type declarations                  **/
/**************************************************/
typedef signed char			sint8;
typedef signed short			sint16;
typedef signed int			sint32;
typedef unsigned char			uint8;
typedef unsigned short			uint16;
typedef unsigned int			uint32;
typedef unsigned char			Boolean_T;


/**************************************************/
/**  Internal structure declarations             **/
/**************************************************/
typedef struct PCIDevice_T
{
  uint32		DevIDVendID;     /* 00-03 */
  uint32		BA_Register0;    /*   -\           */
  uint32		BA_Register1;    /*     | DO       */
  uint32		BA_Register2;    /*     | NOT      */
  uint32		BA_Register3;    /*     | MOVE     */
  uint32		BA_Register4;    /*     | RELATIVE */
  uint32		BA_Register5;    /*     |          */
  uint32		ExROM_BAReg;     /*   -/           */
  uint32		Bus_Device_Function_Id;
  uint32		DriverIdWord;
  uint32		BA_0_PCIBase;    /* -\           */
  uint32		BA_1_PCIBase;    /*   | DO       */
  uint32		BA_2_PCIBase;    /*   | NOT      */
  uint32		BA_3_PCIBase;    /*   | MOVE     */
  uint32		BA_4_PCIBase;    /*   | RELATIVE */
  uint32		BA_5_PCIBase;    /*   |          */
  uint32		ExROM_PCIBase;   /* -/           */
  uint8			Description[MAX_DESC_LENGTH+1];
  uint8			Device;
} PCIDevice_T;


/**************************************************/
/**  Global variables                            **/
/**************************************************/
extern	PCIDevice_T    *g_pci_device_data;
extern  uint8		g_num_of_devices;
extern	uint32		g_workspace_base;


/**************************************************/
#endif /* __pci_privat_h */

/**  End of file. **/
