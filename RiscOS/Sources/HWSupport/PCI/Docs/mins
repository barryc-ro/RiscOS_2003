Ursula PCI Manager - Functional Specification

Drawing Number: 1309,206/FS

Issue reviewed: A/0.0.3

Minutes of Review held 9/7/97.

Present: William Turner (author), Mike Stephens (team leader), Kevin Bracey
(reviewer), Pete Fox (reviewer), Neil Atkinson (reviewer), Charles Whyte
(QA), Alan Glover (chair).

General Issues
--------------

Again, the issue of communicating the nature of new development work to
appropriate developers was raised.

[ RNicoll - this is a general point for the project plan; when to deliver
information to external developers via DWalker in time for new products to
reach the market at a similar time to Phoebe. ]

Section-by-section
------------------

3

All current outstanding issues to be further explained. Are there any
showstoppers? Why? Who will resolve the issues ?

[ WTurner to amend spec ]

All address space visible will be the default arrangement for PCI card
access to the ARM memory map.

[ WTurner to amend spec ]

DMA support is needed, and there are issues about its implementation.

[ MStephens/RNicoll to consider in context of time and resource constraints ]

4

Clarify that this spec describes a subset of the podule SWI interface for PCI
card support.

[ WTurner to amend spec ]

5.2

The API will not impose limits appropriate to the current hardware
capabilities.

[ WTurner to amend spec ]

5.3

Clarification: the vendor information mentioned allows PCI card drivers to
identify the platform upon which they are running.

[ WTurner to amend spec ]

Issue: Therefore we need a vendor number to use.

[ WTurner to record this as an outstanding issue until resolved, and proceed
with resolving it ]

Clarification (first diagram): Although two mapping ranges are used, no PCI
address locations will appear in both ranges; they will appear in one only.

[ WTurner to amend spec ]

Issue: Does the kernel set up the mapping (note that this is a reserved
address range, but without RAM mapped into it), or does the PCI manager do
it. Can the PCI Manager do it - does the kernel export enough assistance ?
Outcome of discussion was that kernel should detect PCI hardware presence,
map appropriately, export this information using ReadSysInfo, and the PCI
Manager should use that to determine whether to run or go dormant.

[ WTurner to amend spec to reflect relevant aspects (including dependency
upon kernel ]

[ MStephens to ensure the kernel aspects are covered in another spec - either
one covering kernel changes, or miscellaneous changes ]

Perform an investigation into the desirability of Extension ROM areas on PCI
cards. Objective is to decide whether this is useful or possible.

[ WTurner to amend spec - an outstanding issue until resolved ]

Why are the memory and IO requirements sorted before allocation ?

[ WTurner to amend spec - justify or delete ]

Typo: In the second diagram, the extent of the PCI Address Space should be
0x40000000.

[ WTurner to amend spec ]

6

No support in software for PCI bridges, however the API will not exclude this
being provided in the future.

[ WTurner to add a comment to this affect ]

Issue: how is an interrupting PCI card detected - does it have an address/bit
mask combination in the same manner as a podule ? If not, how is it possible
to detect which PCI card is generating the interrupt (since each interrupt
line is commoned to all the card slots).

[ WTurner to identify as outstanding issue, and seek resolution ]

7

There is a passing reference to changes needed for IOMD2 interrupt handling.
These should be specified somewhere.

[ MStephens to ensure that they are (kernel changes/misc. changes spec ?) ]

General: A SWI is needed to indicate how many cards are present

[ WTurner to amend spec ]

General: Use input R0 value as a flags register

[ WTurner to amend spec ]

General: Document any errors which may be returned

[ WTurner to amend spec ]

Add subsection numbering!

[ WTurner to amend spec ]

PCI_RegisterDriver

Rearrange registers for R0 as flags, R3 free for slot number upon return, and
consistent Rnumber for the identifying word with PCI_DeRegisterDriver

[ WTurner to amend spec ]

PCI_DeRegisterDriver

Change R2 allocation to same as noted in 7.3 above.

[ WTurner to amend spec ]

PCI_AddressMapping

The local address returned in word 2 is a logical address.

[ WTurner to amend spec ]

10

Additional dependency: DMA support. More detail on nature and number of PCI
cards required.

[ WTurner to amend spec ]

11

Rewrite to contain Development Test and Acceptance Criteria sections.

[ WTurner to amend spec ]

12

Also deliver user documentation and technical documentation.

[ WTurner to amend spec ]

13

Add comments about supporting PCI bridges as a future enhancement.

Add comments about execution of code from PCI cards (cf a diskless system)

[ WTurner to amend spec ]

14

Update reference to be PCI 2.1 specification. Add detail about PCI Ethernet
specification.

[ WTurner to amend spec ]

Timescales
----------

In the light of larger issues about timescales, the estimates for this area
of work were not considered in detail.
