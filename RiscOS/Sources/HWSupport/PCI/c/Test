/******************************************************************************/
/**  File:    Test.c							     **/
/**  	      								     **/
/**  Purpose: Code that's specific to testing sub-units of the software	     **/
/**	      THIS CODE IS ONLY COMPILED IN IF 'TESTING' IS DEFINED	     **/
/**  	      								     **/
/**  Author:  W.Turner                                                       **/
/**  	      								     **/
/**  History: 08-Aug-97 WT  Created                                          **/
/******************************************************************************/

/*--------------------------------------------------------------------
** Included files
*/
#include <stdio.h>
#include "kernel.h"

#include "_Private.h"
#include "MemCtrl.h"

#include "Test.h" /** Defines the externally visible functions **/


#ifdef TESTING
/*--------------------------------------------------------------------
** File-specific definitions, internal function declarations etc
*/


/*--------------------------------------------------------------------
** Function Name : Test_SpaceSort
**
** Purpose       : Tests the space sorting routines
**
** Returns       : Printed data
**
*/
void
Test_SpaceSort
(
  void
)
{
  /** This routine tests the sorting and allocation of memory and io areas into
      the riscos and pci memory spaces.
      Functions used:
  **/
  PCIDevice_T		fake_devices[8];

  /* First, set up some pretend PCI cards with multiple unsorted memory & io areas */
  fake_devices[0].BA_Register0 = 0xffffff80; /* Irlam PCI digitiser */
  fake_devices[0].BA_Register1 = 0xffffff81;
  fake_devices[0].BA_Register2 = 0xffe00000;
  fake_devices[0].BA_Register3 = 0x0;
  fake_devices[0].BA_Register4 = 0x0;
  fake_devices[0].BA_Register5 = 0x0;
  
  fake_devices[1].BA_Register0 = 0xffff0000; /* mem - 64K */
  fake_devices[1].BA_Register1 = 0xffff0001; /* io  - 64K */
  fake_devices[1].BA_Register2 = 0xfff00004; /* mem - 1M, 64-bit */
  fake_devices[1].BA_Register3 = 0xffffffff; /*                  */
  fake_devices[1].BA_Register4 = 0xfffffc01;
  fake_devices[1].BA_Register5 = 0x0;
  
  fake_devices[2].BA_Register0 = 0xffffffc0; 
  fake_devices[2].BA_Register1 = 0xffffffc1;
  fake_devices[2].BA_Register2 = 0x0;
  fake_devices[2].BA_Register3 = 0x0;
  fake_devices[2].BA_Register4 = 0x0;
  fake_devices[2].BA_Register5 = 0x0;

  fake_devices[3].BA_Register0 = 0xffffff80; 
  fake_devices[3].BA_Register1 = 0x0;
  fake_devices[3].BA_Register2 = 0xffffff81;
  fake_devices[3].BA_Register3 = 0x0;
  fake_devices[3].BA_Register4 = 0x0;
  fake_devices[3].BA_Register5 = 0x0;

  /** Call Mem_MapDevices **/
  Debug_Message("wK", "Calling Mem_MapDevices. Devicelist at &%08X, 4 devices\n", fake_devices);
  Mem_MapDevices(fake_devices, 4);
  
  return;
}


/**/
#endif /* TESTING */
/**  End of file. **/
