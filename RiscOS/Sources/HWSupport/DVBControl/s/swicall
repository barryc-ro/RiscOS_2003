; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
;    Filename     : swicall
;    Author	  : R.W.Buckley
;    Company	  : Online Media
;    Date         : Dec 1995
;    Description  : This code should handle all the swis provided by this module.
;
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
;
; Modification history
;
; 13-Feb-96  Rich  Reset FPGA copy of packet counter on DVBControl_OpenStream
;
;
; call: swi_match_mask
;
; in:	r0 - index value
;	r1 - match value
; 	r2 - mask value
; out:
;
swi_match_mask 	ENTRY "r0-r5"
		LDR	r3, MatchMaskStart	; point to base of match masks
		ADD	r3, r3, r0, LSL #3	; multiply by 8 and add
		STMIA	r3, {r1, r2}		; atomic update (at least as far as ARM is concerned, maybe not the FPGA!)
		EXIT

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; call: swi_match_mask_disable
;
; in: r0 - index value
;
; out:
;
swi_match_mask_disable 	ENTRY "r0-r2"
		LDR	r3, MatchMaskStart	; point at mask area
		ADD	r3, r3, r0, LSL #3	; point at relevant pair
		MOV	r1, #0			; EOR value
		MOV	r2, #-1			; AND value
		STMIA	r3, {r1, r2}		; atomic update (at least as far as ARM is concerned, maybe not the FPGA!)
		EXIT

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; call: swi_start
;
; in: r0 : flags
;     r1 : MPEG control stream handle
;
; out:
;
swi_open_stream	ENTRY "r0-r2,r11"
		STR	r0, StreamFlags
		STR	r1, MPEGControlStream
                LDR     r11, FPGABaseAddress

		BL	hardware_disable_all_matches

		LDR	r0, =init_packet_counter ; initialise the packet counters
		STR	r0, PacketCounter	; set up the packet counters
		STR	r0, APacketCounter
		STR	r0, BPacketCounter
		SUB	r0, r0, #1
		STR	r0, DVB_a_counter
		STR	r0, DVB_b_counter

; setup the buffer pointers
		LDR	r0, =buffer_a_start	; packet buffer pointers
		STR	r0, DVB_a_address
		LDR	r0, =buffer_b_start
		STR	r0, DVB_b_address

		MOV	r0, #0
		STR	r0, BankACount
		STR	r0, BankBCount
 [ dump_counting
		STR	r0, MPEGDescDump
		STR	r0, ReleaseCount
 ]
                MOV     r0, #1			; enable fpga processing
                STR     r0, DVB_processing

		EXIT

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; call: swi_stop
;
; in: r0 : flags
;     r1 : MPEG control stream handle
;
; out:
;
swi_close_stream ENTRY "r0-r1,r11"
                LDR     r11, FPGABaseAddress
                MOV     r0, #0			; disable fpga processing
                STR     r0, DVB_processing
		STR	r0, MPEGControlStream	; indicate stream no longer open

		EXIT

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; call: swi_packet_counter
;
; in: r0 - Value to be used as the packet counter, -1 to read
;
; out: r0 - Actual packet counter
;
; Error returned if r0 too low.
;
swi_packet_counter ENTRY "r1"

		CMP	r0, #-1			; compare with -1
		LDREQ	r0, PacketCounter	; less than 0
		EXIT	EQ

		CMP	r0, #0			; compare with 0
		PullEnv	LE
		ADRLEL	r0, ErrorBlock_DVB_BadPacketCount
		DoError LE

		LDR	r1, =max_packet_counter	; cannot be greater than this
		CMP	r0, r1			; compare
		MOVGT	r0, r1			; if greater than, truncate

		STR	r0, PacketCounter	; stash away

		EXIT

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; call: swi_reset_stream
;
; in:	-
; out:	-
;

swi_reset_stream Entry "r0,r1"
		LDR	r1, MPEGControlStream	; save handle over close and open
		BL	swi_close_stream
		MOV	r0, #0			; flags (unused at present)
		BL	swi_open_stream
		EXIT

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

		END
