/* module.c - RISC OS module related code. */

/* From CLib */
#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include "swis.h"

#include "module.h"
#include "appflash.h"
#include "error.h"

ERROR_STRUCT(BADSWI, "BadSWI");

/*******************************************/
/* module_initialise                       */
/*                                         */
/*      Module initialisation entry point. */
/*                                         */
/*******************************************/
_kernel_oserror *module_initialise (char *cmd_tail, int podule_base, void *pw)
{
  NOT_USED (cmd_tail); NOT_USED (podule_base);

  return NULL;
}

/**********************************/
/* module_finalise                */
/*                                */
/*      Module exit handler.      */
/*                                */
/**********************************/
_kernel_oserror *module_finalise (int fatal, int podule, void *pw)
{
  NOT_USED(fatal); NOT_USED(podule);
  
  return NULL;
}

/**********************************/
/* module_cmd                     */
/*                                */
/*      Module *-command handler. */
/*                                */
/**********************************/
_kernel_oserror *module_cmd (char *arg_string, int argc, int cmd_no, void *pw)
{
  int status;
  char arg1[255];
  int i = 0;
  
  NOT_USED(argc); NOT_USED(pw);
  
  if (cmd_no == 0 || cmd_no == 1 || cmd_no == 3)
  {
    while (arg_string[i] != ' ' && arg_string[i] != 13 &&
           arg_string[i] != '\0'  && i < 255)
    {
      arg1[i] = arg_string[i];
      i++;
    }
  
    /* NULL terminate the string */
    arg1[i] = '\0';
  }

  if (cmd_no == 0)
    status = appflash_writeupdatecmd (arg1, Update, 0);
  else if (cmd_no == 1)
    status = appflash_writeupdatecmd (arg1, Write, 0);
  else if (cmd_no == 2)
    status = appflash_erasecmd ();
  else
    status = appflash_writewordcmd (arg1);
  
  return NULL;
}

/*******************************/
/* module_swi                  */
/*                             */
/*      Module SWI handler.    */
/*                             */
/*******************************/
_kernel_oserror *module_swi(int swi_no, _kernel_swi_regs *r, void *pw)
{
  NOT_USED (pw);
  
  switch (swi_no)
  {
    case 0:
      return appflash_update_flash_swi (r);
    case 1:
      return appflash_verify_flashrom_swi (r);
    default:
      return _swix (MessageTrans_ErrorLookup,
                    _IN(0) | _IN(1) | _IN(2) | _IN(3) | _IN(4),
                    ERROR(BADSWI), 0, 0, 0, MODULE_NAME);
  }
}
