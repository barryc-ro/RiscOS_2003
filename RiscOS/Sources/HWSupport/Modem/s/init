;
; 		Copyright 1996 Acorn Network Computing
;
;  This material is the confidential trade secret and proprietary
;  information of Acorn Network Computing. It may not be reproduced,
;  used, sold, or transferred to any third party without the prior
;  written consent of Acorn Network Computing. All rights reserved.
;
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
;    Author	  : R.W.Buckley
;    Date         : 22-Apr-96
;
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Modification History
;
; Ver	Date		Who	Description
; 0.02	21-May-96	RWB	Slight tweeks to ioctls
; 0.03	22-May-96	RWB	Sorted out redundant error messages
; 0.04	22-May-96	RWB	Default to 9600 baud
;				Register for threshold upcalls on in/out streams
;				Check stream handles on threshold halt/resume
; 0.05  28-May-96	RWB	Register for device upcalls from DeviceFS
;				Re-assert handshake control lines on new stream
; 0.06  31-May-96	SMC	Fixed module help string for brain-dead Kernel
; 0.07  03-Jun-96	RWB	Generate serial event on serial error
; 0.08  06-Jun-96	RWB	Corrected some error reporting, changed probe
;				slightly.
; 0.09  10-Jun-96	RWB	Fixed bug that occured when errors are found
;				during module initialisation.
; 0.10  14-Jun-96 	RWB	Added file handle to Error event call
; 0.11  01-Jul-96	RWB	Changed date format in version file
; 0.12  23-Jul-96	SC,RWB  Moved release device vector in finalisation code
; 0.13  02-Aug-96       RWB     Discovered the messages file was being put in
;				the wrong place.
;				Added check for open streams on module finalis.
; 0.14  05-Aug-96	RWB     Use allocated error block number for errors.
; 0.15  06-Aug-96	RWB	Only register with devicefs if not alrealy
;				registered. This was a problem when service call
;				DeviceFSStarting goes round.
;				Changed the value for an invalid internal buffer
;				handle.
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Global header files
;
                GET     Hdr:ListOpts
		OPT	OptNoList
                GET     Hdr:NdrDebug		; definition of true
                GET     Hdr:Macros		; system wide macro definitions
                GET     Hdr:System		; swis and hardware declarations
		GET	Hdr:Machine.<Machine>	; for machine-specific flags
                GET     Hdr:ModHand		; Module handler reason codes
                GET     Hdr:HighFSI		; high level filing system
                GET     Hdr:DevNos		; device no for new IRQ handling
                GET     Hdr:Services		; service call info
                GET     Hdr:Symbols		; constants TRUE, FALSE, VFlag
                GET     Hdr:MsgTrans		; MessageTrans constants
                GET     Hdr:Proc                ; ENTRY and EXIT macros
		GET	Hdr:Buffer
                GET     Hdr:ResourceFS
		GET	Hdr:Podule
                GET     Hdr:DeviceFS		; reason code definitions
		GET     Hdr:IO.IOEB
		GET	Hdr:RS423		; need serial error flags
		$GetIO				; I need IOMD declarations etc

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Global variables
;
		 	GBLL	border_handshake

border_handshake 	SETL	true	; to flash border when handshaking

 [ :LNOT: :DEF: debugging
 ! 0, "Building non debug"
                	GBLL    debug
debug 			SETL 	false
 |
 ! 0, "Building debug"
                	GBLL    debug
debug 			SETL 	true
 ]

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Debug header files
;
		GBLS	conditional_get
 [ debug
conditional_get	SETS	"GET 	Hdr:Debug"		; Standard debug macros
 |
conditional_get SETS	""
 ]
		$conditional_get

 [ :LNOT: :DEF: standalonemessages
 ! 0, "Building non standalone"
                	GBLL 	standalonemessages
standalonemessages 	SETL 	false
 ]
                LEADR   Module_LoadAddr

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; User header files
;
		OPT 	OptList

                GET     VersionNum
		GET 	s.errors	; error handling stuff
		GET	s.macros	; some useful macros
                GET     s.main		; module interfaces
		GET 	s.hardware	; hardware detection and irq stuff
		GET 	s.interrupts	; handle irqs
		GET	s.devicecall 	; handle devicefs stuff

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Debug routine code
;
 [ debug
      		InsertDebugRoutines     ; ensure this is after module header !
 ]

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                END
