
;*****************************************************************************************
;***                                                                                   ***
;***  M_Test.s                                                                         ***
;***                                                                                   ***
;***  Application:   PCMCIA Support Code Module                                        ***
;***  Version:       0.01                                                              ***
;***                                                                                   ***
;***  By:            Neil Critchell, Acorn Computers Ltd.                              ***
;***  Date:          14th September 1993                                               ***
;***                                                                                   ***
;***                                                                                   ***
;***  Purpose:       Contains machine code routines to test reading and writing to     ***
;***                 EASI space, using a Medusa and Medusa Test podule.                ***
;***                                                                                   ***
;***                                                                                   ***
;***  History:       0.01 14th September 1993 - Original version                       ***
;***                                                                                   ***
;***                                                                                   ***
;*****************************************************************************************






;*****************************************************************************************
;***                                                                                   ***
;***    Export global symbols                                                          ***
;***                                                                                   ***
;*****************************************************************************************

        EXPORT  MedusaTest




;*****************************************************************************************
;***                                                                                   ***
;***    Importted global symbols                                                       ***
;***                                                                                   ***
;*****************************************************************************************





;*****************************************************************************************
;
; Register Definitions
;
;*****************************************************************************************

r0      RN      0
r1      RN      1
r2      RN      2
r3      RN      3
r4      RN      4
r5      RN      5
r6      RN      6
r7      RN      7
r8      RN      8
r9      RN      9
r10     RN      10
sl      RN      10
r11     RN      11
fp      RN      11
r12     RN      12
ip      RN      12
r13     RN      13
sp      RN      13
r14     RN      14
lr      RN      r14     
r15     RN      15
pc      RN      r15

; Use the FN directive to define floating point register names

f0      FN      0
f1      FN      1
f2      FN      2
f3      FN      3
f4      FN      4
f5      FN      5
f6      FN      6
f7      FN      7





;*****************************************************************************************
;***                                                                                   ***
;***    Constants                                                                      ***
;***                                                                                   ***
;*****************************************************************************************

I_bit_number    *       27
F_bit_number    *       26
I_bit           *       1 :SHL: I_bit_number
F_bit           *       1 :SHL: F_bit_number


USR_mode        *      2_00                    ; Processor mode bits
FIQ_mode        *      2_01
IRQ_mode        *      2_10
SVC_mode        *      2_11


IOC             *       &03200000
IOCIRQMSKB      *       &28                     ;       Mask
podule_IRQ_bit  *       1 :SHL: 5               ; Podule IRQ request

    






;*****************************************************************************************
;***                                                                                   ***
;***    Various macros used by this code.                                              ***
;***        - CLRV              clears V flag                                          ***
;***        - SETV              sets V flags                                           *** 
;***                                                                                   ***
;*****************************************************************************************


;   *************************************************************************************
;   ***         Clear overflow flag - will set nzCv ***                               ***
;   *************************************************************************************

        MACRO
$label  CLRV    $cond
$label  CMP$cond pc, #0
        MEND

;   *************************************************************************************
;   ***  Set overflow flag - will set NzcV  ***                                       ***
;   *************************************************************************************

        MACRO
$label  SETV    $cond
$label  CMP$cond pc, #&80000000
        MEND






;*****************************************************************************************
;***                                                                                   ***
;***    Data Structures, copied from 'C'  - update these as well as 'C' versions       ***
;***                                                                                   ***
;*****************************************************************************************


Reg0                                            EQU      0
Reg1                                            EQU      4
Reg2                                            EQU      8
Reg3                                            EQU     12
Reg4                                            EQU     16
Reg5                                            EQU     20
Reg6                                            EQU     24
Reg7                                            EQU     28
Reg8                                            EQU     32 
Reg9                                            EQU     36









;*****************************************************************************************
;***                                                                                   ***
;***    Area name C$$code advisable as wanted to link with C output                    ***
;***                                                                                   ***
;***    Code can begin here                                                            ***
;***                                                                                   ***
;*****************************************************************************************


        AREA    |C$$code|, CODE, READONLY











;*****************************************************************************************
;***                                                                                   ***
;***  MeduasTest(Start_Address, Number of Bytes, destination address)                  ***
;***                                                                                   ***
;***  Preforms a read/write test cycle on the specified EASI address space.            ***
;***                                                                                   ***
;***  Return:                                                                          ***
;***    NULL, if function performed sucessfully.                                       ***
;***    ERROR_MESSAGE, if error occured.                                               ***
;***                                                                                   ***
;*****************************************************************************************

MedusaTest

;        STMFD   sp!, {r4 - r12, lr}

;        MOV     r1, r1, LSL #2

;loop
;        LDR     r4, [r0], #4 
;        STR     r4, [r2], #4
;        SUBS    r1, r1, #1
;        BNE     loop



;        LDMFD   sp!, {r4 - r12, pc}^




        STMFD   sp!, {r4 - r12, lr}
loop
        LDR     r4, [r0]
        STRB    r4, [r2], #1
        MOV     r4, r4, LSR #8
        STRB    r4, [r2], #1

        SUBS    r1, r1, #2
        BNE     loop

        LDMFD   sp!, {r4 - r12, pc}^









        END


