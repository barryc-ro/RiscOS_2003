
;*****************************************************************************************
;***                                                                                   ***
;***  EnableIRQ.s                                                                      ***
;***                                                                                   ***
;***  Application:   PCMCIA Driver Module                                              ***
;***  Version:       0.01                                                              ***
;***                                                                                   ***
;***  By:            Neil Critchell, Acorn Computers Ltd.                              ***
;***  Date:          16th December 1993                                                ***
;***                                                                                   ***
;***                                                                                   ***
;***  Purpose:       Contains an asembler routine used by the PCMCIA driver to enable  ***
;***                 IRQs to be allowed the generate interrupts from Podules.          ***
;***                                                                                   ***
;***                                                                                   ***
;***  History:       0.01 16th December 1993 - Original version                        ***
;***                                                                                   ***
;***                                                                                   ***
;*****************************************************************************************


;*****************************************************************************************
;***                                                                                   ***
;***  Routines:                                                                        ***
;***    EnablePoduleIRQs()                                                             ***
;***                                                                                   ***
;***                                                                                   ***
;***                                                                                   ***
;***                                                                                   ***
;*****************************************************************************************




;*****************************************************************************************
;
; Use the RN directive to define ARM register names
;
;*****************************************************************************************

r0      RN      0
r1      RN      1
r2      RN      2
r3      RN      3
r4      RN      4
r5      RN      5
r6      RN      6
r7      RN      7
r8      RN      8
r9      RN      9
r10     RN      10
sl      RN      10
r11     RN      11
fp      RN      11
r12     RN      12
ip      RN      12
r13     RN      13
sp      RN      13
r14     RN      14
lr      RN      r14     ; Note: register names can be defined from each other
r15     RN      15
pc      RN      r15

; Use the FN directive to define floating point register names

f0      FN      0
f1      FN      1
f2      FN      2
f3      FN      3
f4      FN      4
f5      FN      5
f6      FN      6
f7      FN      7


I_bit_number    *       27
F_bit_number    *       26
I_bit           *       1 :SHL: I_bit_number
F_bit           *       1 :SHL: F_bit_number


USR_mode        *      2_00                    ; Processor mode bits
FIQ_mode        *      2_01
IRQ_mode        *      2_10
SVC_mode        *      2_11


IOC             *       &03200000
IOCIRQMSKB      *       &28                     ;       Mask
podule_IRQ_bit  *       1 :SHL: 5               ; Podule IRQ request




;*****************************************************************************************
;***                                                                                   ***
;***    Export global symbols                                                          ***
;***                                                                                   ***
;*****************************************************************************************

        EXPORT  |EnablePoduleIRQs|






;*****************************************************************************************
;***                                                                                   ***
;***    Area name C$$code advisable as wanted to link with C output                    ***
;***                                                                                   ***
;*****************************************************************************************

        AREA    |C$$code|, CODE, READONLY










;*****************************************************************************************
;***                                                                                   ***
;***  EnablePoduleIRQ()                                                                ***
;***                                                                                   ***
;***  Enables podule IRQs. This allows IRQs generated from the SCSI controller to      ***
;***  inerrupt the processor.                                                          ***
;***                                                                                   ***
;***                                                                                   ***
;***  On Entry:                                                                        ***
;***    None.                                                                          ***
;***                                                                                   ***
;***  On Exit:                                                                         ***
;***    None.                                                                          ***
;***                                                                                   ***
;***  Modified:                                                                        ***
;***    None.                                                                          ***
;***                                                                                   ***
;*****************************************************************************************

EnablePoduleIRQs

        STMFD   sp!, {r0-r1, lr}

        MOV     r14, pc                      ;Hold current I_bit & F_bit
        TEQP    pc, #I_bit+F_bit+SVC_mode    ;Disable IRQs & FIRQs
        MOV     r0, #IOC                     ; whilst enabling Podule IRQs
        LDRB    r1, [r0, #IOCIRQMSKB]        ; in IOC
        ORR     r1, r1, #podule_IRQ_bit
        STRB    r1, [r0, #IOCIRQMSKB]
        TEQP    pc, r14                      ;Restore original I_bit & F_bit
        MOV     r0, r0

        LDMFD   sp!, {r0-r1, pc}^          







;******************************************************************************
;
;       Data area
;
;******************************************************************************



        AREA    |C$$data|, DATA




        END
