/*****************************************************************************************/
/***                                                                                   ***/
/***  Structs.h                                                                        ***/
/***                                                                                   ***/
/***  Application:   PCMCIA_Driver module                                              ***/
/***  Version:       0.02                                                              ***/
/***                                                                                   ***/
/***  By:            N.Critchell, W.Turner, Acorn Computers Ltd.                       ***/
/***  Date:          7th July 1994                                                     ***/
/***                                                                                   ***/
/***  Purpose:       Contains the 'C' structre definitions used throughout the         ***/
/***                 PCMCIA Driver code.                                               ***/
/***                                                                                   ***/
/***  History:       0.01 28th June 1993 - Original version                            ***/
/***                 0.02 7th July 1994 - Revised by W.Turner                          ***/
/***                                                                                   ***/
/*****************************************************************************************/

/*****************************************************************************************/
/***                                                                                   ***/
/***   Memory Pointer Definitions                                                      ***/
/***                                                                                   ***/
/*****************************************************************************************/
#define  MEMORY_PTR                     char *
#define  MEMORY_PTR__INT                int *

#define  HARDWARE_REGISTER              volatile char *

#define  SLOT_HANDLE                    int


/*****************************************************************************************/
/***                                                                                   ***/
/***   Error Information Definitions                                                   ***/
/***                                                                                   ***/
/*****************************************************************************************/
#define  PCMCIADriver_ErrorCode         int

typedef struct
         {
         int                            ErrorNumber;
         char                           ErrorMessage[252];
         } ERROR_MESSAGE;



/*****************************************************************************************/
/***                                                                                   ***/
/***   Card Control Block Definition.                                                  ***/
/***                                                                                   ***/
/*****************************************************************************************/
typedef struct
         {
         HARDWARE_REGISTER              Adaptor_Register_Base;
         HARDWARE_REGISTER              Slot_Register_Base;
         int                            PCMCIA_Space_Base;
         int                            IRQ_Mask; /** as in fn11 **/
         int                            IRQ_Call_R2;
         int                            CardIRQ_Call_Address;
         int                            CardIRQ_Call_R12;
         int                            MemoryIRQ_Call_Address;
         int                            MemoryIRQ_Call_R12;
         int                            IOIRQ_Call_Address;
         int                            IOIRQ_Call_R12;
         int                            CommonAccessTime;
         int                            AttribAccessTime;
         int                            Common3vAccessTime;
         int                            Attrib3vAccessTime;
         } CCB;

#define  IRQ_MASK__BATT_LOW             (1 << 0)
#define  IRQ_MASK__BATT_VLOW            (1 << 1)
#define  IRQ_MASK__READY_CHG            (1 << 2)
#define  IRQ_MASK__IO_IRQ               (1 << 16)



/*****************************************************************************************/
/***                                                                                   ***/
/***   Stack storage structure (used in functions 13 and 14)                           ***/
/***                                                                                   ***/
/*****************************************************************************************/
typedef struct
         {
         int                            IRQMask_Reg;
         int                            IRQMask_CCB;
         int                            AccessTime_Reg;
         int                            CommAccess_CCB;
         int                            AttrAccess_CCB;
         int                            AccessMode_Reg;
         int                            VoltageCtrl_Reg;
         int                            SlotPage_Reg;
         } SLOT_STATE;



/*****************************************************************************************/
/***                                                                                   ***/
/***   Hardware Configuration Definitions                                              ***/
/***                                                                                   ***/
/*****************************************************************************************/
typedef struct
         {
         int                            NumberOfSlots;
         int                            PageSize;
         int                            IOPageSize;
         int                            ShortestCycleSpeed;
         int                            LongestCycleSpeed;
         } HARDWARE_CONFIGURATION;
