/*****************************************************************************************/
/***                                                                                   ***/
/***  Hardware.h                                                                       ***/
/***                                                                                   ***/
/***  Application:   PCMCIA_Drv Module                                                 ***/
/***  Version:       0.02                                                              ***/
/***                                                                                   ***/
/***  By:            W.Turner, Acorn Computers Ltd.                                    ***/
/***  Date:          7th July 1994                                                     ***/
/***                                                                                   ***/
/***  Purpose:       Contains various global definitions used specifically for the     ***/
/***                 actual hardware.                                                  ***/
/***                                                                                   ***/
/***  History:       0.01 9th September 1993 - Original version                        ***/
/***                 0.02 7th July 1994 - Modified by W.Turner                         ***/
/***                                                                                   ***/
/*****************************************************************************************/

/*****************************************************************************************/
/***                                                                                   ***/
/***   PCMCIA Hardware Parameters (These are specific to the Berlin hardware)          ***/
/***                                                                                   ***/
/*****************************************************************************************/
#define  MAX_SLOTS_PER_ADAPTOR                  2
#define  PAGE_SIZE                              23                  /* (1<<23) ie. 8Mb pages */
#define  IO_PAGE_SIZE                           6                   /* (1<<6) ie 64 bytes,(16 regs) */
#define  LONGEST_CYCLE_TIME                     2000                /* 2000 ns max */
#define  SHORTEST_CYCLE_TIME                    200                 /* 200 ns min */
#define  STATEMACHINE_CLOCKPERIOD               62                  /* Measured in ns */
#define  SIMPLE_ID_VALUE                        8                   /* Simple podule ID */
#define  ADAPTOR_IRQREQ_MASK                    0x3F                /* Covers all IRQs */

#define  PODULE_SPACE__BASE                     0x03240000
#define  PODULE_CHUNK__SIZE                     0x00004000

#define  PCMCIA_EASI__SIZE                      0x00800000          /* 8MB = 1/2 the EASI-space */

#define  IRQ__DEBOUNCE_TIME                     2       /** Measured in 50Hz ticks **/


/*****************************************************************************************/
/***                                                                                   ***/
/***   PCMCIA Hardware Register locations                                              ***/
/***                                                                                   ***/
/*****************************************************************************************/
#define  ADAPTOR_REGISTER_BASE                  0x00 /* Offset from podule space base */

#define  ADAPTOR__SIMPLE_PODULE_ID__OFFSET      0x00 /* Offsets are from Adaptor_Register_Base */
#define  ADAPTOR__DISABLE_SLOT_REG__OFFSET      0x04
#define  ADAPTOR__RESET_REG__OFFSET             0x08
#define  ADAPTOR__IRQ_REQUEST_REG__OFFSET       0x10
#define  ADAPTOR__IRQ_MASK_REG__OFFSET          0x14
#define  ADAPTOR__IRQ_STATUS_REG__OFFSET        0x18
#define  ADAPTOR__EDGEDETECT_CLEAR_REG__OFFSET  0x1C


#define  SLOT_REGISTER_BASE                     0x28 /* Offset from podule space base */
#define  SLOT_REGISTER_CHUNKSIZE                0x20 /* Ie offset between slots */

#define  SLOT__PAGE_REG__OFFSET                 0x00 /* Offsets are from Slot_Register_Base */
#define  SLOT__STATUS_REG__OFFSET               0x04
#define  SLOT__ACCESS_MODE_REG__OFFSET          0x08
#define  SLOT__ACCESS_TIME_REG__OFFSET          0x0C
#define  SLOT__VOLTAGE_CONTROL_REG__OFFSET      0x10



/*****************************************************************************************/
/***                                                                                   ***/
/***   PCMCIA Hardware Register bit allocations, grouped by register ,and given as     ***/
/***   shift then mask pairs. Note: mask only given if more than one bit used          ***/
/***                                                                                   ***/
/*****************************************************************************************/
#define  SIMPLE_PODULE__ID__SHIFT               0x03
#define  SIMPLE_PODULE__ID__MASK                0x0F

#define  DISABLE_SLOT__SLOT0__SHIFT             0x00
#define  DISABLE_SLOT__SLOT1__SHIFT             0x01

#define  IRQ__SLOT0_PRI_MASK                    0x2A
#define  IRQ__SLOT1_PRI_MASK                    0x15
#define  IRQ__IOINT                             0x30
#define  IRQ__IOINT_SLOT0                       0x20
#define  IRQ__IOINT_SLOT0__SHIFT            0x05
#define  IRQ__IOINT_SLOT1                       0x10
#define  IRQ__IOINT_SLOT1__SHIFT            0x04
#define  IRQ__IOINT_PRI_MASK                    0xC0  /** masks off all of lower or equal priority **/
#define  IRQ__CDINT                             0x0C
#define  IRQ__CDINT_SLOT0                       0x08
#define  IRQ__CDINT_SLOT0__SHIFT            0x03
#define  IRQ__CDINT_SLOT1                       0x04
#define  IRQ__CDINT_SLOT1__SHIFT            0x02
#define  IRQ__CDINT_PRI_MASK                    0xF0
#define  IRQ__READY                             0x03
#define  IRQ__READY_SLOT0                       0x02
#define  IRQ__READY_SLOT0__SHIFT            0x01
#define  IRQ__READY_SLOT1                       0x01
#define  IRQ__READY_SLOT1__SHIFT            0x00
#define  IRQ__READY_PRI_MASK                    0xFC

#define  EDGE__CD_SLOT0__SHIFT                  0x03
#define  EDGE__CD_SLOT1__SHIFT                  0x02

#define  SLOT__CARD_RESET__SHIFT                0x00
#define  SLOT__MEM_SPACE__SHIFT                 0x01
#define  SLOT__16BIT_HI_LO__SHIFT               0x02
#define  SLOT__SKEW_PAGE__SHIFT                 0x03
#define  SLOT__SKEW_PAGE__MASK			0x03
#define  SLOT__PAGE__SHIFT                      0x05 /**Was 4**/
#define  SLOT__PAGE__MASK                       0x07

#define  SLOT__CARDDETECT__SHIFT                0x00
#define  SLOT__CARDDETECT__MASK                 0x03
#define  SLOT__BATTDETECT__SHIFT                0x02
#define  SLOT__BATTDETECT__MASK                 0x03
#define  SLOT__STATUSCHGD__SHIFT                0x02
#define  SLOT__WRITEPROT__SHIFT                 0x04
#define  SLOT__READYBUSY__SHIFT                 0x05
#define  SLOT__IOINTERRUPT__SHIFT               0x05
#define  SLOT__VSELECT__SHIFT                   0x06
#define  SLOT__VSELECT__MASK                    0x03

#define  SLOT__ACCESS_MODE__SHIFT               0x00
#define  SLOT__ACCESS_32B__SHIFT                0x01
#define  SLOT__ACCESS_IO_1__SHIFT               0x02
#define  SLOT__ACCESS_IO_2__SHIFT               0x03

#define  SLOT__ACCESS_TIME__SHIFT               0x00
#define  SLOT__ACCESS_TIME__MASK                0x1f

#define  SLOT__VPP1_VALUE__SHIFT                0x00
#define  SLOT__VPP1_VALUE__MASK                 0x03
#define  SLOT__VPP2_VALUE__SHIFT                0x02
#define  SLOT__VPP2_VALUE__MASK                 0x03
#define  SLOT__VCC_3V_OR_5V__SHIFT              0x04
#define  SLOT__VCC_SWITCH__SHIFT                0x05



/*****************************************************************************************/
/***                                                                                   ***/
/***   PCMCIA Data layout definitions (used in return values for function 6)           ***/
/***                                                                                   ***/
/*****************************************************************************************/
#define  LAYOUT__UPPER_READ_ON_UPPER_FLAG       (1 << 1)
#define  LAYOUT__UPPER_WRITE_ON_UPPER_FLAG      (0 << 2)
