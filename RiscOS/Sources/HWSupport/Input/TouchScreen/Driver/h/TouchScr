
#include "sensor.h"
#include <kernel.h>


#ifndef  _TOUCHSCREEN_H
#define  _TOUCHSCREEN_H


typedef enum { MODE_INIT, MODE_I, MODE_W, MODE_X, MODE_Y, MODE_P } screen_state;

class touchscreen
{
      public:
        touchscreen();
        void              ticker();
        void              irq();
        friend  int       Driver(_kernel_swi_regs *r, void *pw);
        x_sensor          x_position_measure;
        y_sensor          y_position_measure;
        pressure_sensor   pressure_measure;
        unsigned int      get_x() { return x; }
        unsigned int      get_y() { return y; }
        unsigned int      get_p() { return p; }
        unsigned int      get_count() { return count; }
        void              intmode_on();
        void              intmode_off();
        bool              is_reporting() { return reporting; }
      private:
        bool              reporting;
        unsigned int      count;
        unsigned int      x, y;
        unsigned int      pending_x, pending_y;
        unsigned int      p;
        PRESSURE_LEVEL    last_pressure;
        screen_state      state;
        void init_ts_hardware(void);
        x_resistance_sensor x_resistance_measure;
        y_resistance_sensor y_resistance_measure;


};



#endif
