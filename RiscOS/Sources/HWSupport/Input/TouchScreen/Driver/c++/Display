/*************************************************************************
Copyright [2000] Pace Micro Technology PLC. All rights reserved.

The copyright in this material is owned by Pace Micro Technology PLC
("Pace"). This material is regarded as highly confidential trade secret
of Pace. It may not be reproduced, used, sold or in any other way exploited
or transferred to any third party without the prior written permission of
Pace.
*************************************************************************/


#include <stdbool.h>

#include "swis.h"
#include "display.h"
#include "touchscr.h"


display::display()
{
     display_dimensions();  // ask RISC OS for the display size

     // because calibration application is not yet up and running...

     TOUCH_SCREEN_POSITION p;

     p.x = 512, p.y = 512;
     set_centre(p);

     p.x = 512, p.y = 0;
     set_bottom_centre(p);

     p.x = 512, p.y = 1024;
     set_top_centre(p);

     p.x = 0, p.y = 512;
     set_left_centre(p);

     p.x = 1024, p.y = 512;
     set_right_centre(p);


};


void display::set_centre(TOUCH_SCREEN_POSITION centre)
{
     centre_pos = centre;
}


void display::set_bottom_centre(TOUCH_SCREEN_POSITION bottom_centre)
{
     bottom_centre_pos = bottom_centre;
}


void display::set_top_centre(TOUCH_SCREEN_POSITION top_centre)
{
     top_centre_pos = top_centre;
}


void display::set_left_centre(TOUCH_SCREEN_POSITION left_centre)
{
     left_centre_pos = left_centre;
}


void display::set_right_centre(TOUCH_SCREEN_POSITION right_centre)
{
     right_centre_pos = right_centre;
}


// this function will ask RISC OS for the display dimensions
void display::display_dimensions(void)
{
  display_size_x = 1024;
  display_size_y = 1024;
}



// all corrections touch screen mis-alignments will be made here
DISPLAY_POSITION display::translate_position(TOUCH_SCREEN_POSITION in)
{
       DISPLAY_POSITION translated;
       unsigned int x_range, y_range;

       // just to prevent any divide by zeros
       if(in.x == 0) in.x = 1;
       if(in.y == 0) in.y = 1;
       if(in.x > display_size_x) in.x = display_size_x;
       if(in.y > display_size_y) in.y = display_size_y;

       x_range = right_centre_pos.x - left_centre_pos.x;
       y_range = top_centre_pos.y - bottom_centre_pos.y;

       translated.x = display_size_x / (x_range / in.x);
       translated.y = display_size_y / (y_range / in.y);

       return translated;
}





