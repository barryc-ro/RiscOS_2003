/*************************************************************************
Copyright [2000] Pace Micro Technology PLC. All rights reserved.

The copyright in this material is owned by Pace Micro Technology PLC
("Pace"). This material is regarded as highly confidential trade secret
of Pace. It may not be reproduced, used, sold or in any other way exploited
or transferred to any third party without the prior written permission of
Pace.
*************************************************************************/

#include <stdbool.h>

#include "graphics.h"
#include "swis.h"



void draw_line(unsigned int x_start, unsigned int y_start,
               unsigned int x_end, unsigned int y_end,
               unsigned int plot_type)
{
    // jump to absolute x, y co-ordinates
    _swix(OS_Plot, _INR(0, 2), 4, x_start, y_start);

    // draw line
    _swix(OS_Plot, _INR(0, 2), 0 + plot_type, x_end, y_end);

}


void draw_rectangle(unsigned int x, unsigned int y,
                    unsigned int width, unsigned int height,
                    unsigned int plot_type, bool solid)
{
     // move absolute to x,y
     _swix(OS_Plot, _INR(0, 2), 4, x, y);

     if(solid == false)
     {
        _swix(OS_Plot, _INR(0, 2), plot_type, width, 0);
        _swix(OS_Plot, _INR(0, 2), plot_type, 0, height);
        _swix(OS_Plot, _INR(0, 2), plot_type, -width, 0);
        _swix(OS_Plot, _INR(0, 2), plot_type, 0, -height);

     }

     else
     {
        _swix(OS_Plot, _INR(0, 2), 96 + plot_type, width, height);
     }
}


void draw_circle(unsigned int x, unsigned int y,
                 unsigned int diameter,
                 unsigned int plot_type, bool solid)
{
     // move to x, y
     _swix(OS_Plot, _INR(0,2), 4, x, y);

     if(solid == false)
     {
        _swix(OS_Plot, _INR(0,2), 144 + plot_type, 0, diameter);
     }

     else
     {
        _swix(OS_Plot, _INR(0,2), 152 + plot_type, 0, diameter);
     }
}



void fill(unsigned int x, unsigned int y)
{
     (void)x;
     (void)y;

}






