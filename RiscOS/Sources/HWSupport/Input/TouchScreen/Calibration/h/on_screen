

#include <stdbool.h>
#include "calibrate.h"

#ifndef  _ON_SCREEN_H
#define  _ON_SCREEN_H




class target
{
	public:
	        target();
	        target(unsigned int size);
	        void display(void);
	        unsigned int get_x(void) const;
	        unsigned int get_y(void) const;
	        unsigned int get_size(void) const;
	        void set_position(unsigned int x, unsigned int y);
	        void invert(void);
		bool range_check(unsigned int x, unsigned int y) const;
		void erase(void) const;
	private:
	        unsigned int target_x, target_y, target_size;
                unsigned int touched_x, touched_y;
                bool visible, inverted;
};



typedef enum progress_bar_orientation
{
        VERTICAL,
        HORIZONTAL

} PROGRESS_BAR_ORIENTATION;



class progress_bar
{
      public:
             progress_bar();
             progress_bar(unsigned int bar_height,
                          unsigned int bar_width,
                          PROGRESS_BAR_ORIENTATION orientation);
             void set_size(unsigned int x, unsigned int y);
             void set_position(unsigned int x, unsigned int y);
             bool check_coords(unsigned int x, unsigned int y);
             void display(void);
             void update(void);
             void erase(void);
             void set_progress(unsigned int percentage);
             unsigned int get_progress(void);
             unsigned int get_x_position(void);
             unsigned int get_y_position(void);
             unsigned int get_height(void);
             unsigned int get_width(void);
      private:
             unsigned int height, width;
             unsigned int x_position, y_position;
             unsigned int progress, displayed_progress;
             PROGRESS_BAR_ORIENTATION bar_orientation;

};



typedef enum dot_area
{
  NOT_TOUCHED,
  FINISH,
  SELECT_BUTTON,
  MENU_BUTTON,
  SELECT_SET,
  MENU_SET
} DOT_AREA;


class pressure_dot
{
      public:
             pressure_dot();
             pressure_dot(unsigned int radius);
             void set_position(unsigned int x, unsigned int y);
             void set_size(unsigned int radius);
             void display(void);
             void erase(void);
             DOT_AREA touched(unsigned int x, unsigned int y);
             void set_select_threshold(unsigned int v);
             void set_menu_threshold(unsigned int v);
             void highlight_select_button(void);
             void highlight_menu_button(void);

      private:
             progress_bar menu, select;
             void scale_parts(void);
             unsigned int dot_radius;
             unsigned int button_thickness, finish_dot_thickness;
             unsigned int x_pos, y_pos;
             bool visible;
};




#endif
