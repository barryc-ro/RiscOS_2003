; > Serial

; ********************
; *** Changes List ***
; ********************

; 15-Mar-91 DDV 0.00 Created
; 19-Mar-91 DDV      Integrated 6551 handling code
; 20-Mar-91 DDV      Included various other pieces of code (basis of 710)
; 21-Mar-91 DDV      Some slight changes to structuring, 6551 stuff finally finished
; 25-Mar-91 DDV      New SWI chunk, 6551 changes, removed references to 6850
; 31-Mar-91 DDV 0.01 Changes for the 6551 interface between Support module and this one
; 31-Mar-91 DDV      Break handling passed onto this module
; 31-Mar-91 DDV      Break end now restores correctly
; 31-Mar-91 DDV      When RXI enabled then data register is purged
; 31-Mar-91 DDV      Rationalised workspace
; 31-Mar-91 DDV      Improved reset handling, resets hardware correctly
; 31-Mar-91 DDV      Removed soft copy of registers
; 01-Apr-91 DDV      Integrated 82C710 code.
; 01-Apr-91 DDV      Worked out this really cute way of handling break signals for 710.
; 02-Apr-91 DDV      Added returning of CTS bit, added CTS handling on 710 code.
; 02-Apr-91 DDV      Added error sensing to the 710 device.
; 02-Apr-91 DDV 0.02 Checked IRQ setup for 710.
; 14-Apr-91 DDV      Started integration with DeviceFS
; 14-Apr-91 DDV      Issues Service_SerialDevice and trapping to return handle.
; 14-Apr-91 DDV      Internationalised
; 14-Apr-91 DDV      Copes with device calls from the support module rather than SWIs.
; 14-Apr-91 DDV      Hardware platform checking added via OS_ReadSysInfo (2).
; 15-Apr-91 DDV      SWI interface removed.
; 15-Apr-91 DDV      Introduced common function for getting + sending bytes.
; 15-Apr-91 DDV      Removed the use of the CallDevice macro, now branches to a CallDevice routine.
; 15-Apr-91 DDV      Finished integrating the 6551 code with DeviceFS.
; 15-Apr-91 DDV      Sorted out the integration of the 710 code (with DeviceFS).
; 16-Apr-91 DDV      Some wiggling around of code and finally finished.
; 16-Apr-91 DDV      Now releases any vectors it owns (when killed, ie. module finalise entry called)
; 16-Apr-91 DDV 0.03 Release for the 2.11 build - finally.
; 18-Apr-91 DDV 0.04 Tightened up message handling.
; 21-Apr-91 DDV      Changed path variable to allow streams to be opened.
; 21-Apr-91 DDV 0.05 Fixed stack inbalance in 82C710 code which gave branch through zero in certain cases.
; 01-Apr-91 DDV 0.06 Tidied some loose ends.
; 01-May-91 DDV      Fixed bug in RX baud settings on 710.
; 01-May-91 DDV      Fixed bug due to stack not being balanced on 710 correctly.
; 01-May-91 DDV 0.07 Reset workspace so in valid state on loading.
; 03-May-91 DDV 0.08 Fix problems with internal call to change baud rates.
; 15-May-91 DDV 0.09 Exported GetChar, PutChar from device specific calls.
; 17-May-91 TMD 0.10 Fixed loadsa bugs!
; 31-Jul-91 TMD      Changed device record to add extra field.
; 09-Aug-91 TMD      Changed meaning of DCD,DSR,CTS and RTS lines on 710.
;                    Initialise RTS to on before streams opened, and turn it off when open input stream.
; 13-Aug-91 TMD 0.11 Don't use variable "XONXOFFChar", use variable "SerialXONXOFFChar" instead.
;                    Don't use variable "InputStream", use variable "InputHandle".
;                    Both these were caused by including Hdr:NewSpace, which has these symbols.
; 14-Aug-91 TMD      Put in code to handle SerialOps 3 and 4 (put byte, get byte)
; 16-Aug-91 TMD      Added code to respond to Service_DeviceFSCloseRequest.
; 19-Aug-91 TMD      Added code to update TXI again after modem status IRQ (eg CTS, DSR going low)
; 21-Aug-91 TMD 0.12 Made HeXOFFed me bit (bit 16) read/write
;                    Added NoSplitBaudRates bit (bit 24)
; 22-Aug-91 TMD      Rationalised errors
;                    Put in new split baud rate scheme
;                    Added stand alone messages option
; 02-Sep-91 TMD 0.14 Corrected programming of word length bits, in anticipation of confirmation
;                     from Chips & Technologies that their data sheet was wrong.
;                    Set NewSplitScheme to false, because it breaks vt220.
; 06-Sep-91 TMD 0.15 Changed setbaud710 to return both r1 and r2 the same in old split scheme, rather
;                     than what you asked for. This is so SerialSpt can use the values to set OS_Byte &F2
;                     to the correct value.
; 18-Nov-91 LVR 0.16 Re-written Serial6551 to match '710 driver.
;                    Renamed Serial6551 -> SerialACIA in Init for consistency
;                    Moved OSByte definitions from Serial710 to Init
;                    Fixed Die entry with open streams
;                    Fixed Close entry with handle of 0
;                    If no input or output streams then DTR and RTS are negated
;                    Receipt of char while above threshold sends XOFF for each char received
; 20-Nov-91 LVR 0.17 Added code to init to detect serial sub unit
; 21-Nov-91 LVR 0.18 Delayed negation of DTR after last character transmitted
;                       until Tx dormant.  Prevents last character becoming
;                       stuck in the serialiser.
; 05-Dec-91 TMD 0.19 Put in code to control power for portable machines.
; 03-Feb-92 JSR 0.20 Adjust service call entry for changed Service_MessageFileClosed.
; 06-Mar-92 TMD 0.21 Fix bug RP-1496 (allowing baud rates to be set to 16).
; ---- Released for RISC OS 3.10 ----
; 09-Dec-92 TMD 0.22 Don't reenable IRQs in interrupt code - it causes receiver overrun.
;
; 03-Jun-93 SMC 0.23 Added new baud rates 38400,57600,115200 for new hardware.
;                    Added code for 710/711 lookalike chips with serial FIFOs.
; 28-Jun-93 SMC 0.24 RX timeout interrupt handled even with FIFO threshold==1.
; 29-Jun-93 SMC 0.25 OS_ReadSysInfo 2 can now return 2 for IOMD (treated as IOEB).
; 14-Jul-93 SMC 0.26 OS_ReadSysInfo interface changed again.
; 12-Nov-93 SMC 0.27 Fix bug where non-FIFO machines would have started up with XON/XOFF enabled.
;                    Added support for serialctrl_EnumerateBaud for enumerating available speeds.
;                    Set default serial threshold value to 17.
; 21-Jan-94 SMC 0.28 Clear RX data before setting up combo chip (prevent SMC665 screw up on FIFO enable).
;                    Re-organise TX interrupt so that filling TX FIFO takes lower priority than interrupts.
;                    Fix 710 TX enable bug (write with bit clear before set).
; 09-Feb-94 SMC 0.29 Fix 665 bug where TX irqs stop for no reason (kick TX irq enable every 0.5s).
; 16-Feb-94 SMC 0.30 New TX strategy to keep peripherals which don't have buffer thresholds happy.
; 18-Feb-94 SMC 0.31 Fix register corruption in new TX strategy code.
; 05-May-94 SMC 0.32 Write 2 bytes to FIFO at rates <19200 baud instead of 1 (get round 665
;                       timing screw up).
; 22-Jul-94 RCM 0.33 Call SetPower_Off from close710 (see flag FixPowerSave).
;                    Set OldHardware to false to save ROM space for RO Black.
; 19-Aug-98 WT  0.36 Added PhoebeHardware to change IRQ handling for Phoebe
;                    Added CMOS_BackCompat for back-compatible mode on Phoebe
; 16-Aug-99 KJB 0.37 PhoebeHardware turned off, CMOS_BackCompat set to :LNOT:STB.
;                    Service call table added.
; 20-Aug-99 SNB 0.38 CMOS_BackCompat disabled completely - causes aborts in DeviceFS in Ursula builds
;                    during machine startup.
;

                GET     Hdr:ListOpts
                GET     Hdr:Macros
                GET     Hdr:System
                GET     Hdr:ModHand
                GET     Hdr:Machine.<Machine>
                GET     Hdr:FSNumbers
                GET     Hdr:HighFSI
                GET     Hdr:NewErrors
;                GET     Hdr:NewSpace
                GET     Hdr:DevNos
                GET     Hdr:Services
                GET     Hdr:Symbols
                GET     Hdr:UpCall
                GET     Hdr:NdrDebug
                GET     Hdr:DDVMacros
                GET     Hdr:CMOS
                GET     Hdr:DeviceFS
                GET     Hdr:Serial
                GET     Hdr:RS423
                GET     Hdr:Buffer
;                GET     Hdr:IOEB
                $GetIO
                GET     Hdr:IO.IOEB
                GET     Hdr:MsgTrans
                GET     Hdr:Proc
                GET     Hdr:ResourceFS
                GET     Hdr:Portable
                GET     Hdr:HostFS

                LEADR   Module_LoadAddr

                GBLL    debug
                GBLL    hostvdu
                GBLL    international
                GBLL    OldHardware     ; assemble code for old serial hardware?
                GBLL    NewHardware     ; assemble code for new serial hardware (ie Brisbane)?
                GBLL    NewSplitScheme  ; if true, always sets hardware baud rate to RX rate
                                        ;          can set TX to something different and it
                                        ;          reads back what you set
                                        ;          opening TX stream with split baud rates gives error
                                        ; if false, always sets both rates to what you just set (RX or TX)
                                        ;          doesn't give an error from open
                GBLL    NewBaudRates    ; add new baud rates 38400,57600,115200 for new hardware
                GBLL    KickSerialTX    ; kick serial TX on 710/665 to work round TX irqs stopping for no reason
                GBLL    Fix710TXEnable  ; on 710 must write with TX enable clear before set
                GBLL    NewTXStrategy   ; always use FIFOs if enabled but if TX rate <= 19200 then only TX one byte at a time
                GBLL    FixPowerSave    ; A4 code neglected to call SetPower_Off when closing stream

 [ :LNOT: :DEF: standalonemessages
                GBLL    standalonemessages
standalonemessages SETL {FALSE}
 ]

		GBLL	PhoebeHardware
PhoebeHardware	SETL	{FALSE}

		GBLL	CMOS_BackCompat
CMOS_BackCompat	SETL	{FALSE}		; :LNOT:STB


debug           SETL    false
hostvdu         SETL    false
international   SETL    true
OldHardware     SETL    false   ;true
NewHardware     SETL    true
NewSplitScheme  SETL    false           ; (mainly because vt220 can't cope with an error from SerialOp(3))
NewBaudRates    SETL    NewHardware
KickSerialTX    SETL    true
Fix710TXEnable  SETL    :LNOT: KickSerialTX     ; not needed if KickSerialTX is true
NewTXStrategy   SETL    true
FixPowerSave    SETL    true


init            SETD    false           ; for module startup etc...
final           SETD    false           ; for module finalisation...
acia            SETD    false           ; Debug 6551 code
baudACIA        SETD    false           ; Debug 6551 baud setup
flagsACIA       SETD    false           ; Debug 6551 flag setup
txACIA          SETD    false           ; Debug 6551 Tx IRQ
rxACIA          SETD    false           ; Debug 6551 Rx IRQ
statusACIA      SETD    false           ; Debug 6551 DSR/DCD IRQ
baud710         SETD    false           ; debugging the 710 baud setup
flags710        SETD    true            ; flag control on 710
inter           SETD    false           ; debugging of internationalisation
interface       SETD    false           ; debugging the DeviceFS to devices
open            SETD    false           ; debugging stream opening
close           SETD    false           ; debugging stream closing

                GET     VersionASM
                GET     s.Macros
                GET     s.Errors
                GET     s.Init
                GET     s.Common

                GBLL    StrongARM
StrongARM       SETL    {TRUE}


                GBLS    getaroundaasm
 [ OldHardware
getaroundaasm   SETS    "GET s.Serial6551"
 |
getaroundaasm   SETS    ""

 ]
                $getaroundaasm
 [ NewHardware
getaroundaasm   SETS    "GET s.Serial710"
 |
getaroundaasm   SETS    ""
 ]
                $getaroundaasm

              [ debug
                InsertNDRDebugRoutines
              ]

                END
