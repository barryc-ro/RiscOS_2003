; -> OnError















; This deals with certain types of errors, doing retries if necessary
















; By MEW of Eesox.  8th May 1993


message_file_name
        DCB     "Resources:Resources.CDFSDriver.Chinon.Messages",0
        ALIGN
        
;-----------------------------------------------------------------------------------------------
error_handler_lookup ROUT
;
; on entry:
;          r0  -> error block to be looked up
;          r12 -> workspace
;          r13 -> full descending stack with r0 and r14 stacked
; on exit:
;          this routine will retry or exit back to the User
;
; The message file is only used for errors so we can just open it and then close it again when
; we need to look up an error (ie. performance is not an issue).
;-----------------------------------------------------------------------------------------------

        STASH   r0                      ; Save error we need to look up.
        ADR     r0, message_file_block  ; Use temp for MessageTrans file descriptor.
        ADR     r1, message_file_name
        MOV     r2, #0
        SWI     XMessageTrans_OpenFile
        GRAB    r1, VS                  ; If SWI returns error then flatten stack and report it.
        BVS     error_handler
        
        MOV     r1, r0                  ; r1->file desc, r2=0 from above
        GRAB    r0                      ; Get back error block we need to look up.
        SWI     XMessageTrans_ErrorLookup
        
        MOV     r2, r0                  ; Save error just looked up (or generated by SWI).
        MOV     r0, r1                  ; r0->file desc.
        SWI     XMessageTrans_CloseFile
        MOV     r0, r2
        ; Drop into...
 
;-----------------------------------------------------------------------------------------------
error_handler ROUT
;
; on entry:
;          r0  -> error block
;          r12 -> workspace
;          r13 -> full descending stack with r0 and r14 stacked
; on exit:
;          this routine will retry or exit back to the User
;-----------------------------------------------------------------------------------------------

 LDR      r1, [ r0 ]

;--------------------------------------
; Does the error signal a disc change ?
;--------------------------------------
 LDR      r2, =UnitAttention
 TEQ      r1, r2
 LDRNE    r2, =CheckCondition
 TEQNE    r1, r2
 BEQ      change_of_disc

;-----------------------------
; Return the error to the user
;-----------------------------
 GRAB     "r1, r14"
 ORRS     pc, r14, #Overflow_Flag


;-----------------------------
change_of_disc
;-----------------------------

; Check the number of retries currently performed
 AND      r14, SWIN, #3:SHL:30
 ADD      r14, r14, #1:SHL:30
 CMP      r14, #3:SHL:30
 GRAB     "r1, r14", GE
 ORRGES   pc, r14, #Overflow_Flag

 ADD      SWIN, SWIN, #1:SHL:30

; set the disc changed flag
 BL       SetDiscChanged

; The drawer must be unlocked
 MOV      r0, #0
 BL       SetDrawerStatus

; The drive must be unpaused
 BL       SetPausedStatus

; retry the previous SWI CD_
 GRAB     "r0, r14"
 B        driver_handler_code + 4

 STRVS    r0, [ r13 ]
 GRABS    "r0, pc", VC
 ORRS     pc, r14, #Overflow_Flag

;-----------------------------


;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------

 END
