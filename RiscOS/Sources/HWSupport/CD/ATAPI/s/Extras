; -> Extras.s














; This contains extra routines for the ATAPI driver


; Routines in here:
;                  Extras_GetDrawerStatus
;                  Extras_HasDiscChanged
;                  Extras_SetDiscChanged
;                  Extras_SetDrawerStatus
;                  Extras_ConvertControlBlockToDrive










;By MEW of Eesox.  8th May 1993

;--------------------------------------------------------------------------
Extras_HasDiscChanged ROUT
; on entry:
;          r0  =  drive number (0 or 1)
;          r12 -> workspace
; on exit:
;          returns r0 = 0 or 1
;--------------------------------------------------------------------------

; This gets the current state, then clears it in the list


 STASH     "r1, r14"

 AND       r0, r0, # 1

 ADR       r1, disc_changed_list

 LDRB      r0, [ r1, r0 ]!

 MOV       r14, # 0
 STRB      r14, [ r1 ]

 GRABS     "r1, pc"

;--------------------------------------------------------------------------
Extras_SetDiscChanged ROUT
; on entry:
;          r0  =  drive number (0 or 1)
;          r12 -> workspace
; on exit:
;          returns r0 = 0 or 1
;--------------------------------------------------------------------------
; This sets the current state


 STASH     "r1, r14"

 STRIM     "Extras_SetDiscChanged"
 DisplayNewLine


 AND       r0, r0, # 1

 ADR       r1, disc_changed_list

 MOV       r14, # 1
 STRB      r14, [ r1, r0 ]

 GRABS     "r1, pc"

;--------------------------------------------------------------------------
Extras_GetDrawerStatus ROUT
; on entry:
;          r0  =  drive number (0 or 1)
;          r12 -> workspace
; on exit:
;          returns r0 = 0 or 1
;
; This gets the current state
;--------------------------------------------------------------------------


 STASH     "r1, r14"

 AND       r0, r0, # 1

 ADR       r1, drawer_list

 LDRB      r0, [ r1, r0 ]

 GRABS     "r1, pc"


;--------------------------------------------------------------------------
Extras_SetDrawerStatus ROUT
; on entry:
;          r0 =   drive number (0 or 1)
;          r1 =   0 or 1
;          r7  -> control block
;          r12 -> workspace
; on exit:
;          all regs preserved
;--------------------------------------------------------------------------
; This sets the current state


 STASH     "r2, r14"

 AND       r0, r0, # 1

 ADR       r2, drawer_list

 STRB      r1, [ r2, r0 ]

 GRABS     "r2, pc"


;--------------------------------------------------------------------------
Extras_ConvertControlBlockToDrive ROUT
;
; on entry:
;          r7  -> control block
;          r12 -> workspace
;
; on exit:
;          VC and r0 = ATAPI drive number (0 or 1)
;          VS and r0 -> error block
;
; This call will map the CDFS control block to the IDE drive number
;
;--------------------------------------------------------------------------

     STASH         "r1-r10, r14"

     ADR           r2, DriveRecognizedStatus
     ADR           r1, DriveMapList
     MOV           r0, # 0

     LDMIA         r7, { r8, r9, r10 }

; r0 =  entry number being checked
; r1 -> DriveMapList
; r2 -> DriveRecognizedStatus
; r7 -> entry to match against

ECCBTD_Loop
     LDRB          r3, [ r2 ], # 1
     LDMIA         r1!, { r4, r5, r6, r14 }
     TEQ           r3, # TRUE
     TEQEQ         r4, r8
     TEQEQ         r5, r9
     TEQEQ         r6, r10
     GRAB          "r1-r10, r14", EQ
     BICEQS        pc, r14, # Overflow_Flag


     ADD           r0, r0, # 1
     CMP           r0, # MAX_NUMBER_OF_ATAPI_DRIVES

     BLT           ECCBTD_Loop

     MOV           r0, #DRIVERERROR__INVALID_PARAMETER
     GRAB          "r1-r10, r14"
     ORRS          pc, r14, # Overflow_Flag


;--------------------------------------------------------------------------
;--------------------------------------------------------------------------
;--------------------------------------------------------------------------
;--------------------------------------------------------------------------
;--------------------------------------------------------------------------


 END
