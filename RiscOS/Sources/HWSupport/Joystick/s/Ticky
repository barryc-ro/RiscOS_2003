; > Sources.Ticky

 [ Codec_Type <> "AD1816"

TickerRoutine                     ;Periodically executes, updating the magic locations.
	ROUT
	CMP	r0, #4
	MOVNES	pc, lr		  ;Not our event, so back we go...

        Push    "r0-r4,r12,lr"
        LDR     r12, [r12]                      ;Get workspace address into R12

	;Let's see if we have any channels to start counting again...
        LDR     r2, =AnalogueControlReg
        LDRB    r1, [r2]                        ;Read the Control reg just in case

	LDRB	r0, misc_flags			;Read the misc flags...

        TST     r0, #RstChan1Flag
	ORRNE   r1, r1, #AnalogueChn1Cnt        ;Counters on, and...
	BICNE   r1, r1, #AnalogueChn1Dchg       ;Start the capacitor charging
	STRNEB  r1, [r2]			;Write back to the control reg
	BICNE	r0, r0, #RstChan1Flag		;Clear the misc reset flag

        TST     r0, #RstChan2Flag
	ORRNE   r1, r1, #AnalogueChn2Cnt        ;Counters on, and...
	BICNE   r1, r1, #AnalogueChn2Dchg       ;Start the capacitor charging
	STRNEB  r1, [r2]			;Write back to the control reg
	BICNE	r0, r0, #RstChan2Flag		;Clear the misc reset flag

        TST     r0, #RstChan3Flag
	ORRNE   r1, r1, #AnalogueChn3Cnt        ;Counters on, and...
	BICNE   r1, r1, #AnalogueChn3Dchg       ;Start the capacitor charging
	STRNEB  r1, [r2]			;Write back to the control reg
	BICNE	r0, r0, #RstChan3Flag		;Clear the misc reset flag

        TST     r0, #RstChan4Flag
	ORRNE   r1, r1, #AnalogueChn4Cnt        ;Counters on, and...
	BICNE   r1, r1, #AnalogueChn4Dchg       ;Start the capacitor charging
	STRNEB  r1, [r2]			;Write back to the control reg
	BICNE	r0, r0, #RstChan4Flag		;Clear the misc reset flag

        ;Now let's see which channels are complete!
        LDR     r4, =AnalogueStatusReg
        LDRB    r4, [r4]

        TST     r4, #Any_Completed
        Pull    "r0-r4,r12,pc",EQ,^                 ;None ready, so exit

        TST     r4, #Chn1_Completed
        BLNE    SortChan1
        TST     r4, #Chn2_Completed
        BLNE    SortChan2
        TST     r4, #Chn3_Completed
        BLNE    SortChan3
        TST     r4, #Chn4_Completed
        BLNE    SortChan4

EndTickerRoutine
        Pull    "r0-r4,r12,pc",,^


;----------------------------------------------------------------------------------------
SortChan1                                       ;Don't use R4!
        ;First, read the channel count...
        LDR     r3, =AnalogueChan1Count
        LDR     r3, [r3]

        ;Now we can sort out the info we got from the counter...
        STR     r3, magic_chan_one              ;Store the full 16bits (+16 bits garbage) in the 'magic' location

        ;Next, kick off the reset process...
        LDR     r2, =AnalogueControlReg
        LDRB    r1, [r2]
        BIC     r1, r1, #AnalogueChn1Cnt        ;Switch the counter off
        ORR     r1, r1, #AnalogueChn1Dchg       ;Start discharging
        STRB    r1, [r2]

	LDRB	r2, misc_flags
	ORR	r2, r2, #RstChan1Flag		;And remember we are in the middle of a reset for next time.
	STRB	r2, misc_flags

        MOV     pc, lr                          ;Return


;----------------------------------------------------------------------------------------
SortChan2                                       ;Don't use R4!
        ;First, read the channel count...
        LDR     r3, =AnalogueChan2Count
        LDR     r3, [r3]

        ;Now we can sort out the info we got from the counter...
        STR     r3, magic_chan_two              ;Store the full 16-bit value in the 'magic' location

        ;Next, kick off the reset process...
        LDR     r2, =AnalogueControlReg
        LDRB    r1, [r2]
        BIC     r1, r1, #AnalogueChn2Cnt        ;Switch the counter off
        ORR     r1, r1, #AnalogueChn2Dchg       ;Start discharging
        STRB    r1, [r2]

	LDRB	r2, misc_flags
	ORR	r2, r2, #RstChan2Flag
	STRB	r2, misc_flags

        MOV     pc, lr                          ;Return


;----------------------------------------------------------------------------------------
SortChan3                                       ;Don't use R4!
        ;First, read the channel count...
        LDR     r3, =AnalogueChan3Count
        LDR     r3, [r3]

        ;Now we can sort out the info we got from the counter...
        STR     r3, magic_chan_three            ;Store the full 16-bit value in the 'magic' location

        ;Next, kick off the reset process...
        LDR     r2, =AnalogueControlReg
        LDRB    r1, [r2]
        BIC     r1, r1, #AnalogueChn3Cnt        ;Switch the counter off
        ORR     r1, r1, #AnalogueChn3Dchg       ;Start discharging
        STRB    r1, [r2]

	LDRB	r2, misc_flags
	ORR	r2, r2, #RstChan3Flag
	STRB	r2, misc_flags

        MOV     pc, lr                          ;Return


;----------------------------------------------------------------------------------------
SortChan4                                       ;Don't use R4!
        ;First, read the channel count...
        LDR     r3, =AnalogueChan4Count
        LDR     r3, [r3]

        ;Now we can sort out the info we got from the counter...
        STR     r3, magic_chan_four             ;Store the full 16-bit value in the 'magic' location

        ;Next, kick off the reset process...
        LDR     r2, =AnalogueControlReg
        LDRB    r1, [r2]
        BIC     r1, r1, #AnalogueChn4Cnt        ;Switch the counter off
        ORR     r1, r1, #AnalogueChn4Dchg       ;Start discharging
        STRB    r1, [r2]

	LDRB	r2, misc_flags
	ORR	r2, r2, #RstChan4Flag
	STRB	r2, misc_flags

        MOV     pc, lr                          ;Return

 ]
;----------------------------
        LNK     s.SWI

