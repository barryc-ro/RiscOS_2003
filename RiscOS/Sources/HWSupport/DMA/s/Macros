; > Sources.Macros

;-----------------------------------------------------------------------------
; adrdeb $reg, $addr, $cc
;
;       When debugging is enabled we sometimes need an ADRL instead of an ADR.
;
        MACRO
$label  adrdeb  $reg, $addr, $cc
 [ debug
$label  ADR$cc.L $reg, $addr
 |
$label  ADR$cc   $reg, $addr
 ]
        MEND

;-----------------------------------------------------------------------------
; IRQOff  $reg
;
;       Turn IRQs off and save the current PSR in $reg.
;
        MACRO
$label  IRQOff  $reg

$label  MOV     $reg, pc
        TST     $reg, #I_bit
        TEQEQP  $reg, #I_bit
        MEND

;-----------------------------------------------------------------------------
; SwpPSR $reg, $psr
;
;       Save current PSR in $reg and set PSR to $psr.
;
        MACRO
$label  SwpPSR $reg,$psr

$label  MOV     $reg, pc
        TEQP    pc, $psr
        NOP
        MEND

;-----------------------------------------------------------------------------
; SetPSR  $reg
;
;       Set the PSR from bits in $reg (normally saved by IRQOff or FIQOff).
;
        MACRO
$label  SetPSR  $reg

$label  TEQP      $reg, #0
        NOP
        MEND

;-----------------------------------------------------------------------------
; LCBlock $lcb, $hand
;
;       Point $lcb to logical channel block for $hand.
;
        ASSERT  LCBSize=20
        MACRO
$label  LCBlock $lcb, $hand

$label  ADR     $lcb, ChannelBlock
        ADD     $lcb, $lcb, $hand, LSL #4
        ADD     $lcb, $lcb, $hand, LSL #2
        MEND

;-----------------------------------------------------------------------------
; PhysToDMAQ    $que, $phs
;
;       Point $que to the DMA queue for physical channel $phs.
;
        ASSERT  DMAQSize=16
        MACRO
$label  PhysToDMAQ      $que, $phs

$label  ADR     $que, DMAQueues
        ADD     $que, $que, $phs, LSL #4        ; DMAQueue + phys * 16
        MEND

;-----------------------------------------------------------------------------
; IOMDBase      $reg
;
;       Sets $reg to point to IOMD base address.
;
        MACRO
$label  IOMDBase $reg, $cc
 [ IOMD
$label  MOV$cc  $reg, #IOMD_Base
 |
$label  ADR$cc  $reg, IOMDArea
        SUB$cc  $reg, $reg, #IOMDFirst
 ]
        MEND

;-----------------------------------------------------------------------------
; DMARegBlk     $blk, $phs
;
;       Point $blk to the IOMD DMA register block for physical channel $phs.
;       It is assumed that r11->IOMD base address.
;
        MACRO
$label  DMARegBlk       $blk, $phs

$label  CMP     $phs, #4
        ADDLO   $blk, r11, #IOMD_IO0CURA        ; Base of DMA register blocks.
        ADDHS   $blk, r11, #IOMD2_IO4CURA - (4 :SHL: 5)
        ADD     $blk, $blk, $phs, LSL #5        ; Base + phys * 32
        MEND

;-----------------------------------------------------------------------------
        MACRO
$label  DebugTabInit    $nil,$wk1,$wk2
$label
 [ debugtab
        ADR     $wk1, DebugTable
        STR     $wk1, DebugTableCur
        ADR     $wk2, DebugTableEnd
$label.clr
        CMP     $wk1, $wk2
        STRCC   $nil, [$wk2, #-4]!
        BCC     $label.clr
 ]
        MEND

        MACRO
$label  DebugTab        $wk1,$wk2,$v1,$v2,$v3
$label
 [ debugtab
        LDR     $wk1, DebugTableCur
        ADR     $wk2, DebugTableEnd
 [ "$v1" <> ""
        TEQ     $wk1, $wk2
        ADREQ   $wk1, DebugTable
        MOV     $wk2, $v1
        STR     $wk2, [$wk1], #4
 ]
 [ "$v2" <> ""
        TEQ     $wk1, $wk2
        ADREQ   $wk1, DebugTable
        MOV     $wk2, $v2
        STR     $wk2, [$wk1], #4
 ]
 [ "$v3" <> ""
        TEQ     $wk1, $wk2
        ADREQ   $wk1, DebugTable
        MOV     $wk2, $v3
        STR     $wk2, [$wk1], #4
 ]
        STR     $wk1, DebugTableCur
 ]
        MEND

        END
