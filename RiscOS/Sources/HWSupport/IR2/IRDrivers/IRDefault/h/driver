#ifndef DRIVER_H
#define DRIVER_H

/*
 * driver.h	- Public interface of driver.c
 */

/*
 * 		Copyright 1996 Acorn Network Computing
 *
 * This material is the confidential trade secret and proprietary
 * information of Acorn Network Computing. It may not be reproduced,
 * used, sold, or transferred to any third party without the prior
 * written consent of Acorn Network Computing. All rights reserved.
 *
 */



#define Standby_State		0x4c7c0
#define Standby_Standby		0x4c7c1
#define Standby_Online		0x4c7c2
#define Standby_InStandby	1

#define NUMTABLES	1		/* Number of handset tables */
#define HANDSETCODES	0x44		/* Max number of scancodes returned */

/* Special table entries */
#define NK		0xFF		/* Does not map to a buffer code */
#define PWR		0xFE		/* The power key */

#define DRIVER_FLAGS_STANDBY_MODE 1


extern unsigned char flags;

extern void generic_accept_data_packet(_kernel_swi_regs *r);
extern void generic_accept_report_packet(_kernel_swi_regs *r);

extern void driver_accept_data_packet(unsigned int registry_number,
                                      unsigned char tag_number,
                                      unsigned char data[3]);

extern void driver_accept_report_packet(unsigned char report_code,
                                        unsigned char data[3]);


extern _kernel_oserror *driver_initialise(void *pw, unsigned int reason);
extern _kernel_oserror *driver_finalise(void *pw);



#endif

