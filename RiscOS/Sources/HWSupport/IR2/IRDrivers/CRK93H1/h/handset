#ifndef HANDSET_H
#define HANDSET_H

/*
 * handset.h	- Public interface of handset.c
 */

/*
 * 		Copyright 1996 Acorn Network Computing
 *
 * This material is the confidential trade secret and proprietary
 * information of Acorn Network Computing. It may not be reproduced,
 * used, sold, or transferred to any third party without the prior
 * written consent of Acorn Network Computing. All rights reserved.
 *
 */

#define KEY_MOD_MOD2	1
#define KEY_MOD_FN	2
#define KEY_MOD_ALT	4
#define KEY_MOD_SHIFT	8
#define KEY_MOD_CTRL	16


#define Standby_State		0x4c7c0
#define Standby_Standby		0x4c7c1
#define Standby_Online		0x4c7c2
#define Standby_InStandby	1

#define NUMTABLES	1		/* Number of handset tables */
#define HANDSETCODES	0x50		/* Max number of scancodes returned */

/* Special table entries */
#define NK		0xFF		/* Does not map to a buffer code */
#define PWR		0xFE		/* The power key */
#define NC		0xFD		/* The N|C key */

#define HANDSET_FLAGS_STANDBY_MODE 1
#define INACTIVE 0xffffffff
#define TIMEOUT_DELAY 70
typedef union
{
  int word;			/* If != INACTIVE then a timeout has been set */

} context_t;

typedef struct
{
    unsigned char ignore_keys;
    unsigned char last_buffer_code;
    context_t context;
    void *PrivateWord;			/* These two words must be adjacent */
    int tag_number;			/*   so that the timeout veneer works */
}tag_info_t;

#define NUM_TAGS 14

extern unsigned char flags;


extern void handset_accept_data_packet(unsigned int registry_number,
                                       unsigned char tag_number,
                                       unsigned char data[3]);

extern void handset_accept_report_packet(unsigned char report_code,
                                         unsigned char data[3]);


extern _kernel_oserror *handset_initialise(void *pw, unsigned int reason);
extern _kernel_oserror *handset_finalise(void *pw);

extern void ir_cancel_timeout(int);


#endif

