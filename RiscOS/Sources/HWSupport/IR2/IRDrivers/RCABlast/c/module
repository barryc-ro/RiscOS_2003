/*
 * 	module.c	- RISC OS module related code.
 */

/*
 * 		Copyright 1996 Acorn Network Computing
 *
 * This material is the confidential trade secret and proprietary
 * information of Acorn Network Computing. It may not be reproduced,
 * used, sold, or transferred to any third party without the prior
 * written consent of Acorn Network Computing. All rights reserved.
 *
 */

/* From CLib */
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"

#include "utils.h"
#include "ir_api.h"

#include "module.h"
#include "driver.h"
#include "rcablast.h"


/*
 * Globals
 */
#if !DEBUG
static _kernel_oserror *TinyError;	/* For tinystubs */
#endif


/*------------------------------------------------------------------------------
 *
 *	Module initialisation entry point.
 */
_kernel_oserror *module_initialise( char *cmd_tail, int podule_base, void *pw )
{
    _kernel_oserror *err=NULL;/* = ir_initialise(pw);*/

    NOT_USED(cmd_tail);
    NOT_USED(podule_base);

#if !DEBUG
    /* Try to use TinyStubs if possible. */
    if ( !err ) TinyError = _swix( TinySupport_Share, _IN(0), pw );
#endif

    err = driver_initialise(pw,0);

    return err;
}


/*------------------------------------------------------------------------------
 *
 *	Module finalisation entry point.
 */
_kernel_oserror *module_finalise( char *cmd_tail, int podule_base, void *pw )
{
    _kernel_oserror *err=NULL;
    NOT_USED(cmd_tail);
    NOT_USED(podule_base);
    NOT_USED(pw);


#if !DEBUG
    if ( TinyError == NULL ) _swix( TinySupport_Die, 0 );
#endif

    err = driver_finalise(pw);
    return err;
}


/*------------------------------------------------------------------------------
 *
 *	Module service call entry point.
 */
void module_service(int service_no, _kernel_swi_regs *r, void *pw)
{
    NOT_USED(r);

    if (service_no == Service_IRDirectorStarting)
    {
        /*
            Re-initialise
        */
        DEBUGFN(3,db_printf("Director started...\n"));
        driver_initialise(pw,1);
        ir_call_finalise = 1;
    }
    else if (service_no == Service_IRDirectorDying)
    {
        DEBUGFN(3,db_printf("Director died...\n"));
        ir_call_finalise = 0;
    }
}

_kernel_oserror *module_swi_handler(int swi_no, _kernel_swi_regs *r, void *pw)
{
    NOT_USED(pw);
    swi_no += RCAIRBlast_SWI_Chunk;
    switch(swi_no)
    {
        case RCAIRBlast_BlastToDevice:
        {
            return swi_blast_to_device(r);
        }
        case RCAIRBlast_BlastToTV:
        {
            return swi_blast_to_tv(r);
        }
        case RCAIRBlast_BlastToVCR:
        {
            return swi_blast_to_vcr(r);
        }
        case RCAIRBlast_BlastToCable:
        case RCAIRBlast_BlastToSatellite:
        {
            return swi_blast_to_cable(r);
        }
        default:
        {
            DEBUGFN(1,db_printf("Unknown SWI number:%08x\n",swi_no));
            break;
        }
    }
    return NULL;
}

