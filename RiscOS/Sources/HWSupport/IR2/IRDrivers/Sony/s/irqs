;------------------------------------------------------------------------------
;
;  irqs.s -	Manipulate irq settings
;
;------------------------------------------------------------------------------
;
; 		Copyright 1996 Acorn Network Computing
;
;  This material is the confidential trade secret and proprietary
;  information of Acorn Network Computing. It may not be reproduced,
;  used, sold, or transferred to any third party without the prior
;  written consent of Acorn Network Computing. All rights reserved.
;
;------------------------------------------------------------------------------

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:ModHand

;
; Global functions
;
        EXPORT  irqs_off
        EXPORT  irqs_restore
	EXPORT	get_r15
	EXPORT	timeout_preveneer
	IMPORT	module_timeout_entry

        AREA    |As$$code|,REL,CODE,READONLY

;------------------------------------------------------------------------------
; irqs_off	- Turn IRQs off
;
; Out:
;	r0: Previous IRQ status
;------------------------------------------------------------------------------
irqs_off
        MOV     r0, #I_bit
        TST     r0, pc
        TEQEQP  r0, pc			; irqs are enabled
        MOVNE   r0, #0			; irqs are disabled
        MOV     pc, lr


;------------------------------------------------------------------------------
; irqs_restore	- Restore IRQs to a previous setting
;
; In:
;	r0: Previous IRQ status as returned by irqs_off()
;------------------------------------------------------------------------------
irqs_restore
        TEQP    r0, pc
        MOV     r0, r0
        MOV     pc, lr


;------------------------------------------------------------------------------
; Get pc value including PSR bits
;
; Out:
;	r0: value of r15, pointing at return value
;------------------------------------------------------------------------------

get_r15	ROUT
	MOV	r0, lr
	MOV	pc, lr


;------------------------------------------------------------------------------
; Call C IRQ veneer 'module_timeout_entry' with r0 fixed up with a value
;
; In:
;	r12: private word passed to OS_CallAfter
;	  r12!0	module's real private word
;	  r12!4	value to put into r0
; Out:
;	r0, r12 corrupted, other preserved.
;         (examination of ProcessTickEventChain in Kernel.s.TickEvents
;          says that this is OK).
;------------------------------------------------------------------------------

timeout_preveneer	ROUT
	LDR	r0, [r12, #4]		; r0 = tag value
	LDR	r12, [r12]		; r12= real privateword so C is happy
	B	module_timeout_entry

;------------------------------------------------------------------------------

	END
