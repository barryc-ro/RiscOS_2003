#ifndef DRIVER_H
#define DRIVER_H

/*
 * driver.h	- Public interface of driver.c
 */

/*
 * 		Copyright 1996 Acorn Network Computing
 *
 * This material is the confidential trade secret and proprietary
 * information of Acorn Network Computing. It may not be reproduced,
 * used, sold, or transferred to any third party without the prior
 * written consent of Acorn Network Computing. All rights reserved.
 *
 */


typedef struct
{
    unsigned int header_size;   /* size of header */
    unsigned int data_size;     /* size of 1 command */
    unsigned int num_commands;  /* number of commands */
    void (*header)(void);       /* start of header */
    void (*data)(void);         /* start of first command */
}code_table_t;


/*
    SWI handlers
*/
extern _kernel_oserror *swi_blast_to_device(_kernel_swi_regs *r);
extern _kernel_oserror *swi_blast_to_tv(_kernel_swi_regs *r);
extern _kernel_oserror *swi_blast_to_vcr(_kernel_swi_regs *r);
extern _kernel_oserror *swi_blast_to_cable(_kernel_swi_regs *r);




/*
    General IR stuff
*/
extern void generic_accept_data_packet(_kernel_swi_regs *r);
extern void generic_accept_report_packet(_kernel_swi_regs *r);

extern void driver_accept_data_packet(unsigned int registry_number,
                                      unsigned char tag_number,
                                      unsigned char data[3]);

extern void driver_accept_report_packet(unsigned char report_code,
                                        unsigned char data[3]);


extern _kernel_oserror *driver_initialise(void *pw,unsigned int reason);
extern _kernel_oserror *driver_finalise(void *pw);


#endif

