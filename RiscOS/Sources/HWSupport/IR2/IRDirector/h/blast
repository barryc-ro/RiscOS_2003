#ifndef BLAST_H
#define BLAST_H

#ifndef IR_API_H
#include "ir_api.h"
#endif

typedef struct
{
    unsigned char block_count;
    unsigned char block_sizes[1];
}blast_data_header;

typedef struct blast_list_node_t
{
    struct blast_list_node_t *next;
    unsigned int driver_number;
    blast_data_header *header;
    unsigned char *data;
    unsigned int length;
    unsigned int block;
    ir_blast_setup_t setup;
}blast_list_node_t;

#define BLAST_FLAGS_IN_USE 1
#define BLAST_FLAGS_END_OF_DATA 2

extern unsigned int blast_outstanding(void);
extern unsigned int blast_complete(void);
extern void blast_end(void);
extern unsigned int blast_start(void);
extern unsigned int blast_get_driver_number(void);
extern unsigned int blast_add_list_node(unsigned int driver_number,unsigned char *data,unsigned int length,ir_blast_setup_t setup);
extern void blast_queue_blast_data(unsigned int driver_number,unsigned char *data,unsigned int length,ir_blast_setup_t setup);
extern void blast_next_block(void);

#endif
