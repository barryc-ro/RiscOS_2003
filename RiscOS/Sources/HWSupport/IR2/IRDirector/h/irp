#ifndef IRP_H
#define IRP_H

/*
* irp.h
*/

/*
* 		Copyright 1996 Acorn Network Computing
*
* This material is the confidential trade secret and proprietary
* information of Acorn Network Computing. It may not be reproduced,
* used, sold, or transferred to any third party without the prior
* written consent of Acorn Network Computing. All rights reserved.
*
*/


/*
* Constants
*/

/* Buttons in packet_t.[absolute|relative].buttons */
#define BUT_SELECT	2
#define BUT_MENU	1


/* Timeouts */
#define TIMEOUT_DELAY	20	/* Do a keyup 0.2s after we last saw the key XXX this maybe should be worked out at runtime and should be < KeyDelCMOS ??? */
#define INACTIVE	-1		/* Value for timeout_t.word */


/*
*  Types
*/

/* (De-munged) Packet */
typedef union
{
    unsigned int word;			/* Bytes 1 to 3 */

    typedef struct {
        unsigned int tag		: 4;	/* Byte 1 */
    } generic;

    typedef struct {
        unsigned int tag		: 4;	/* Byte 1 */
        unsigned int new_tag	: 4;
        unsigned int num_hi		: 7;	/* Byte 2 */
        unsigned int low_battery	: 1;
        unsigned int num_lo		: 8;	/* Byte 3 */
    } reg_basic;

    typedef struct {
        unsigned int tag		: 4;	/* Byte 1 */
        unsigned int new_tag	: 4;
        unsigned int num_hi		: 7;	/* Byte 2 */
        unsigned int num_15		: 1;	/* Bogus! */
        unsigned int num_lo		: 8;	/* Byte 3 */
    } reg_extended;

    typedef struct {
        unsigned int tag		: 4;	/* Byte 1 */
        unsigned int unused		: 2;
        unsigned int resend		: 1;
        unsigned int repeat		: 1;
        unsigned int scancode	: 8;	/* Byte 2 */
        unsigned int unused2	: 3;	/* Byte 3 */
        unsigned int mods		: 5;
    } keyboard;

    typedef struct {
        unsigned int tag		: 4;	/* Byte 1 */
        unsigned int buttons	: 2;
        unsigned int y_8		: 1;
        unsigned int x_8		: 1;
        unsigned int x		: 8;	/* Byte 2 */
        unsigned int y		: 8;	/* Byte 3 */
    } absolute;

    typedef struct {
        unsigned int tag		: 4;	/* Byte 1 */
        unsigned int buttons	: 2;
        unsigned int resend		: 1;
        unsigned int unused		: 1;
        signed int x		: 8;	/* Byte 2 */
        signed int y		: 8;	/* Byte 3 */
    } relative;

    typedef struct {
        unsigned int tag		: 4;	/* Byte 1 */
        unsigned int cycle		: 2;
        unsigned int unused		: 2;
        unsigned int data_hi	: 8;	/* Byte 2 */
        unsigned int data_lo	: 8;	/* Byte 3 */
    } data;

    struct
    {
        unsigned int a13_a8 :6;
        unsigned int g      :1;
        unsigned int tbd    :1;
        unsigned int a7_a0  :8;
        unsigned int s      :4;
        unsigned int i      :4;
    }tag_status_report;

    struct
    {
        unsigned int r  :8;
        unsigned int n  :4;
        unsigned int ee :1;
        unsigned int ie :1;
        unsigned int ed :1;
        unsigned int id :1;
        unsigned int dd :1;
        unsigned int db :1;
        unsigned int bo :1;
        unsigned int cnu:1;
        unsigned int tbd:4;
    }ctrl_status_report;

    struct
    {
        unsigned int b0_filler :7;
        unsigned int bo        :1;
        unsigned int b1_filler :7;
        unsigned int db        :1;
        unsigned int b2_filler :7;
        unsigned int dd        :1;

    }comp_status_report;

} packet_t;


/* Command packet */
typedef union
{
    unsigned char byte;

    typedef struct
    {
        unsigned int command	: 3;
        unsigned int info		: 4;
        unsigned int topbit		: 1;	/* Should always be set */
    } generic;

} command_t;


/* Stuff to be released on timeout */
typedef union
{
    int word;			/* If != INACTIVE then a timeout has been set */

    typedef struct
    {
        signed int keyno	:16;		/* Low-level key number */
        unsigned int mods	:8;		/* Modifiers */
    } keyboard;

    typedef struct
    {
        unsigned int buttons;		/* BUT_SELECT and/or BUT_MENU */
    } pointer;

} context_t;


#endif
