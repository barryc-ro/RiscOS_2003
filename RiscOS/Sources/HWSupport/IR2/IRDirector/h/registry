#ifndef REGISTRY_H
#define REGISTRY_H

#include "kernel.h"

/*
* registry.h	- Public interface of registry.c
*/

/*
* 		Copyright 1996 Acorn Network Computing
*
* This material is the confidential trade secret and proprietary
* information of Acorn Network Computing. It may not be reproduced,
* used, sold, or transferred to any third party without the prior
* written consent of Acorn Network Computing. All rights reserved.
*
*/


#define REG_DESCRIPTION_MAX_LENGTH 64
#define REG_DESCRIPTION_BUFFER_LENGTH (REG_DESCRIPTION_MAX_LENGTH+1)
#define REG_PATH_MAX_LENGTH 64
#define REG_PATH_BUFFER_LENGTH (REG_PATH_MAX_LENGTH+1)

#define REG_UNASSIGNED_NUMBER -1

#define REG_LOCATION_ROM 0
#define REG_LOCATION_BOOT_SERVER 1
#define REG_LOCATION_INTERNET 2


typedef struct
{
    unsigned int registry_number;
    unsigned int driver_number;
    unsigned int desc_offset;
    unsigned int desc_len;

}registry_entry_t;

typedef struct
{
    unsigned int driver_number;
    unsigned int revision_number;
    unsigned int desc_offset;
    unsigned int desc_len;
    unsigned int filename_offset;
    unsigned int filename_len;

}driver_entry_t;

typedef struct
{
    unsigned int version;
    unsigned int reg_offset;
    unsigned int reg_size;
    unsigned int drv_offset;
    unsigned int drv_size;
    unsigned int str_offset;
    unsigned int str_size;
}registry_file_header_t;



typedef struct reg_outstanding_packet_list_node_t
{
    struct reg_outstanding_packet_list_node_t *next;

    unsigned int registry_number;
    unsigned int tag_number;
    unsigned int packet;
}reg_outstanding_packet_list_node_t;

typedef struct reg_unknown_device_list_node_t
{
    struct reg_unknown_device_list_node_t *next;
    unsigned int registry_number;
    unsigned int tag_numbers[14];
}reg_unknown_device_list_node_t;


extern unsigned int reg_get_device_info(unsigned int registry_number,
                                        unsigned int *driver_number,
                                        char *description);

extern unsigned int reg_get_driver_info(unsigned int driver_number,
                                        unsigned int *revision_number,
                                        char *description,
                                        unsigned int *location,
                                        char * filename);



extern reg_outstanding_packet_list_node_t *reg_outstanding_packet_list;
extern unsigned int reg_add_outstanding_packet(unsigned int registry_number,
                                               unsigned int tag_number,
                                               unsigned int packet);
extern void reg_send_outstanding_packets(void);


extern reg_unknown_device_list_node_t *reg_unknown_device_list;
extern unsigned int reg_add_unknown_device(unsigned int registry_number,unsigned int tag_number);
extern reg_unknown_device_list_node_t *reg_find_unknown_device(unsigned int registry_number);
extern void reg_remove_unknown_device(unsigned int registy_number);

extern void reg_load_entry(void);
extern int reg_load_handler(_kernel_swi_regs *r, void *pw);



#endif

