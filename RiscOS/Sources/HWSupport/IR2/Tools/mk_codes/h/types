#ifndef TYPES_H
#define TYPES_H

#define MAX_DEVICE_NAME_SIZE 64
#define DEVICE_NAME_BUFFER_SIZE (MAX_DEVICE_NAME_SIZE + 1)

#define MAX_MANUFACTURER_NAME_SIZE 64
#define MANUFACTURER_NAME_BUFFER_SIZE (MAX_MANUFACTURER_NAME_SIZE + 1)

#define MAX_MODEL_NAME_SIZE 64
#define MODEL_NAME_BUFFER_SIZE (MAX_MODEL_NAME_SIZE + 1)

#define MAX_CODE_NAME_SIZE 64
#define CODE_NAME_BUFFER_SIZE (MAX_CODE_NAME_SIZE + 1)


#define MAX_DEVICE_MANUFACTURERS 64
#define MAX_DEVICE_MANUFACTURER_MODELS 64
#define BLAST_CODE_BUFFER_SIZE 64
#define MAX_BLAST_CODES 64

typedef struct
{
    unsigned int dtt_offset;
    unsigned int dtt_size;

    unsigned int mft_offset;
    unsigned int mft_size;

    unsigned int mot_offset;
    unsigned int mot_size;

    unsigned int cot_offset;
    unsigned int cot_size;

    unsigned int mct_offset;
    unsigned int mct_size;
}header_t;


typedef struct
{
    unsigned int device_number;
    char device_name[DEVICE_NAME_BUFFER_SIZE];
}device_type_t;

typedef struct
{
    unsigned int manufacturer_number;
    char manufacturer_name[MANUFACTURER_NAME_BUFFER_SIZE];
}manufacturer_t;

typedef struct
{
    unsigned int device_number;
    unsigned int manufacturer_count;
    unsigned int manufacturer_numbers[MAX_DEVICE_MANUFACTURERS];
}device_manufacturer_t;

typedef struct
{
    unsigned int device_number;
    unsigned int manufacturer_number;
    unsigned int model_count;
    unsigned int model_numbers[MAX_DEVICE_MANUFACTURER_MODELS];
}device_manufacturer_model_list_t;

typedef struct
{
    unsigned int model_number;
    char model_name[MODEL_NAME_BUFFER_SIZE];
}model_t;

typedef struct
{
    unsigned int code_number;
    char code_name[CODE_NAME_BUFFER_SIZE];
}code_t;

typedef struct
{
    unsigned int model_number;
    unsigned int code_number;
    unsigned int length;
    unsigned char code[BLAST_CODE_BUFFER_SIZE];
}blast_code_t;

typedef struct
{
    unsigned int model_number;
    unsigned int code_count;
    unsigned int code_numbers[MAX_BLAST_CODES];
}model_code_t;

#endif

