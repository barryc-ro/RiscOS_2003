; martha.s
; this file contains the fiq handler code for the martha board

fiq_handler_code

	ldr r8,int_base

; toggle rising/falling edge detection
	ldr r12,debugflag

 ;	debug led
	mov r9,#&f8000000
	add r9,r9,#&00e00000
	str r12,[r9]
	add r12,r12,#1
	str r12,debugflag

	ldr r12,flag


	eor r12,r12,#&1
	str r12,flag

	ldr r9,[r8,#&74]		; irqpolarityb
	eor r9,r9,#&04			; toggle int 2 rising/falling edge
	str r9,[r8,#&74]

	mov r10,#&04			; clear current interrupt request
	str r10,[r8,#&2c]		; rawfiqstatusb
	str r10,[r8,#&18]		; rawirqstatusb

;	str r10,[r8,#&34]


; enable interrupts
	ldr r8,int_base			; r8 still int_base
	mov r10,#&80			; Timer3 interrupt
	str r10,[r8,#&08]		; irqmaska


	ldr r8,timer_base

	ldr r9,[r8,#&44]		; timer3value


	rsb r9,r9,#&2000		; time taken since last interrupt

	cmp r9,#0
	moveq r9,#&ff00

	orr r9,r9,r12,lsl #16 		; add state change flag to time word

	mov r10,#0			; stop timer3
	str r10,[r8,#&48]

	mov r10,#&2000			; reset timer to 0x2000
	str r10,[r8,#&40]		; timer3load

	mov r10,#&c0			; periodic/enabled/noprescale
	str r10,[r8,#&48]		; timer3control
; store timer value

	ldr r8,data_adr
	ldmia r8,{r10-r12}         ; r10 = data _start, r11 = data_ptr, r12 = data_max

	str r9,[r8,r11]            ; store timer value at data_adr+data_ptr value

	add r11,r11,#4              ; increment data_ptr
	cmp r11,r12                 ; test if data_ptr=data_end
	moveq r11,#20               ; reset back to start if true (offset 20 is start)

	cmp r11,r10                 ; test if data_ptr=data_start
	addeq r10,r10,#4            ; increment data_start to reflect new start position
	cmp r10,r12                ; test if data_start=data_end
	moveq r10,#20               ; reset back to start if true
	stmia r8,{r10-r11}         ; store data_start, data_ptr, data_max to data structure

;finished
	subs pc,r14,#4
	DCD  &b0b0b0b0
debugflag
	DCD 0
int_base
	DCD 0
timer_base
	DCD 0
led_base
	DCD 0

	END
