; tvilink.s
; this file contains the fiq handler code for the TViLINK up board

fiq_handler_code

;; r13 is still APB_BASE
;
;
;; toggle rising/falling edge detection
;	ldr r12,flag
;	eor r12,r12,#&1
;	str r12,flag
;	str r12,[r8,#&70]   ; pdesnr
;
;; clear current interrupt request
;	mov r9,#1
;	str r9,[r8,#&74]    ; pdeclr

	add 	r8,r13,#&3000   ; timer_base

	str 	r8,[r8,#&2c]    ; clear timer2 interrupt

	add 	r8,r13,#&00001000	; interrupt handler base
	ldr 	r12,[r8,#&90]		; read irqlrawstatus

	add 	r9,r9,r10	; add timer2load to counter

	cmp 	r9,#&4000	; timeout value
	bge	interrupt


	mov 	r12,r12,lsr #28
	eor	r12,r12,#1
	and	r12,r12,#1


;	add  	r8,r13,#&00005000      ; gpio_base
;	ldr 	r12,[r8,#&60]	; read pddr for port d bit


	cmp 	r12,r11		; still the same state?
	subeqs	pc,r14,#4	; end if yes

	orr r9,r9,r12,asl #16



; store timer value
;	r8 is still set to data block base
	ldr r8,data_adr
	ldmia r8,{r10-r12}         ; r10 = data _start, r11 = data_ptr, r12 = data_max
;
	str r9,[r8,r11]            ; store timer value at data_adr+data_ptr value

;
	add r11,r11,#4              ; increment data_ptr

	cmp r11,r12                 ; test if data_ptr=data_end
	moveq r11,#20               ; reset back to start if true (offset 20 is start)

	cmp r11,r10                 ; test if data_ptr=data_start
	addeq r10,r10,#4            ; increment data_start to reflect new start position

	cmp r10,r12                ; test if data_start=data_end
	moveq r10,#20               ; reset back to start if true


;
;

	stmia r8,{r10-r11}         ; store data_start, data_ptr, data_max to data structure

;finished

	mov r9,#0		    ; reset count

	add 	r8,r13,#&00001000	; interrupt handler base
	ldr 	r11,[r8,#&90]		; read irqlrawstatus

	add 	r8,r13,#&00003000	; timer base
	ldr 	r10,[r8,#&20]	    	; timer2 load

	mov 	r11,r11,lsr #28		; nint2
	eor	r11,r11,#1
	and	r11,r11,#1


	subs pc,r14,#4
interrupt
	; test if any data in buffer


	ldr r8,data_adr
	ldmia r8,{r9,r12}         ; r10 = data _start, r11 = data_ptr, r12 = data_max
	cmp r9,r12
	moveq r9,#0
	subeqs pc,r14,#4

	; generate a soft interrupt

	add r8,r13,#&1000
	mov r9,#2			; fiq downgrade (programmed interrupt)
	str r9,[r8,#&a0]		; irql register
	str r9,[r8,#&10]		; irq_soft

	mov r9,#0

	subs pc,r14,#4


	END
