/************************************************************************/
/*                  Copyright 1996 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/

#ifndef __COM_H
#define __COM_H

#if FUNAI_TWINSLOT
#define supported_HISTORICAL_CHARACTER_LENGTH 10	// comparison vectors should have the same number of bytes

typedef enum {
  card_Unknown 		= 0x00,
  card_Reasona_256 	= 0x01,
  card_STD_78	   	= 0x02
} type_card;

typedef enum {
  failure_none = 0,
  TS_byte_ne_3B,
  protocol_not_teq1,
  incorrect_hist_chars,
  checksum_failure,
  historical_unknown
} type_ATRfail;

typedef struct{
  BYTE 		hist[supported_HISTORICAL_CHARACTER_LENGTH];		// bytes rounded up
  int 		hist_characters;					// number of characters in hist if < maximum
  type_card 	card;							// 0x00 = Unknown, 0x01 = Reasona 256, 0x02 = STD-7/ STD-8
  type_ATRfail 	failure;						// this describes the test that failed in reading the card.
} type_card_descriptor;

extern type_card_descriptor g_card_descriptor;
#endif
  
int  com_Init(void);
int  com_ReadBytes(BYTE *ch, int len);
int  com_SendBytes(BYTE *data, int len);
void com_FlushComms(void);
int  com_HandleCommsEvent(int event);
int  com_SetResetInd(void);
BOOL com_RestartInvProtocol(void);
BOOL com_CardIn(void);
void com_Close(void);

void com_ReadFunaiHeader(void);
void com_SendFunaiHeader(char slot, char command);
void com_SendAck(void);
void com_ProcessCardInserted(int slot);
void com_ProcessCardRemoved(int slot);
void com_ProcessCardOpen(int slot);
void com_ProcessAPDU(int slot);
void com_ProcessError(int slot);
void com_StartReadSlot2(void);
int  com_DealWithVerify(void);
int  com_DealWithReadRecord(void);
int  com_GetATR(void);
#endif
