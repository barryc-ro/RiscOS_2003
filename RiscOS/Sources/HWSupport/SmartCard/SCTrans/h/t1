/*-------------------------------------------------------------------------

  File: t1.h

  Purpose: To provide the constant and data definitions for the module t1.c
		

---------------------------------------------------------------------------

  Written by Applied Card Technologies 
  Copyright (c) 1997 Applied Card Technologies  All Rights Reserved.

-------------------------------------------------------------------------*/

#ifndef __T1_h
#define __T1_H

#define T1_CASE1	1
#define T1_CASE2	2
#define T1_CASE3	3
#define T1_CASE4	4

/* T1 states */
#define	T1_NAD		0x01		// rec'd byte is a NAD byte 
#define	T1_PCB		0x02   		// rec'd byte is a PCB byte
#define	T1_LEN		0x03     	// rec'd byte is a LEN byte
#define	T1_DATA		0x04      	// rec'd byte is a DATA byte
#define	T1_LRC		0x05      	// rec'd byte is a LRC byte
#define T1_END		0x0F		// processed LRC, block received in full
                        
/* T=1 packet  */
typedef struct {
        int	slot;
	int	total_len;
	int	len_sent;
	int	data_start;
	BOOL	chaining;
	BYTE	NAD;
	UINT	PCB;	/* set to UINT to avoid truncation warnings */
	BYTE	LEN;	/* length to send or received this time */
	BYTE	DATA[255]; 
	BYTE	TCK;            
} T1_PCKT;

/* T=1 command response data */
typedef struct {
	BYTE	SW1;
	BYTE	SW2;
} T1_RESPDATA;

extern int t1_State;
extern int TX_SeqNo[3];
extern int Exp_SeqNo;

/* function declarations */ 

int  t1_StartCommand(   int slot, BYTE  *cmd_hdr,int data_len, 
			BYTE  *data, int exp_len) ;
int  t1_ProcessByte(BYTE ch);
BYTE t1_Check (T1_PCKT *pkt);
int  Process_IBlk (void);
int  Process_RBlk (void);
int  Process_SBlk (void);	
int  SendBlk (T1_PCKT *pkt);
int  Binary_Increment(int Seq_Number);
int  Chaining_Sequence(int datalength);
void t1_DecodeBlk(void); 
int  t1_GetData(BYTE  *buff, int buff_len, int  *rcv_len, BYTE  *resp);
														
#endif
