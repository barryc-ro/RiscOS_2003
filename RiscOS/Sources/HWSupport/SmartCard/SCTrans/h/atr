/************************************************************************/
/*                  Copyright 1996 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/

/*
 * To provide the constant and data definitions for the module atr.c
 * which handles card reset and processing of answer-to-reset from the
 * card.
 */

/* answer-to-reset constants */

#define ATR_TA_MASK		0x10
#define ATR_TB_MASK		0x20
#define ATR_TC_MASK		0x40
#define ATR_TD_MASK		0x80
#define ATR_Y_MASK		0xF0
#define ATR_K_MASK		0x0F
#define ATR_T_MASK		0x0F

#define T0_TYPE			0
#define ATR_F_MASK		0xF0
#define ATR_D_MASK		0x0F
#define ATR_I1_MASK		0x60
#define ATR_I2_MASK		0x1F
#define ATR_I1_SHIFT		5

#define MAX_PROTS		10

#define PTS_PTSS		0xFF
#define PTS_ACK			0xFF
#define PTS_DEF_PTS0		0
#define PTS_DEF_TCK		0xFF
#define PTSS_LEN		10

/* states */

#define ATR_WAIT_TS		1
#define ATR_WAIT_T0		2
#define ATR_WAIT_TA		3
#define ATR_WAIT_TB		4
#define ATR_WAIT_TC		5
#define ATR_WAIT_TD		6
#define ATR_WAIT_HIST		7
#define ATR_WAIT_TCK		8
#define ATR_ENDED		9
#define ATR_WAIT_PTS_ACK	10
#define ATR_WAIT_PROT_ECHO	11
#define ATR_WAIT_PROT_ACK	12
#define ATR_PTS_ENDED		13

#define ATR_DEFAULT_WI		10
#define MS_PER_SEC		1000	/* milli-seconds per second */

typedef struct
{
  int clk_rate;
  int bit_rate;
  int pc1;
  int pc2;
  int pv;
  int extra_time;
  int type;
}
PROT_PARAMS;
