Software Specification for the extension to multicard handling for SCTrans.

Scope of this document.
This specification details the method of reading the 'Answer to Reset' (ATR)
in an endevour to understand the card type.  This document discusses how the
com_GetATR() in the com.c file works.

modus operandi.
The operation of the 'com_GetATR(void)' function is to determine if the card is
supported and what that card is.  If the card is known it returns 0 from the
function, otherwise -1.

If the card is known then the global data structure 'g_card_descriptor' will be 
filled in.  This structure is as follows.

typedef struct{
  BYTE 		hist[supported_HISTORICAL_CHARACTER_LENGTH];
  int 		hist_characters;	
  type_card 	card;			
  type_ATRfail 	failure;		
} type_card_descriptor;

At present 10 historical characters are supported.  There are a possible 15 in the
smart card specification[1] but current need specifies the use of 10.  As such our
implementation has this limit.  If the 'hist_characters' value is not equal to this
value then this would result in an unknown card result.

By virtue of comparison with these values we can determine which card type we are
using.  Internally there are vectors that are compared with the incomming character
vector.  The card type is one of the following enumarated types.  If this function
returns -1 then the card type will be 'card_Unknown'.

typedef enum {
  card_Unknown 		= 0x00,
  card_Reasona_256 	= 0x01,
  card_STD_78	   	= 0x02
} type_card;

If the card is not known it will be as a result of one of the following failed tests
this is placed in the failure element of the structure.  Otherwise this value will be
zero or 'failure_none'.

typedef enum {
  failure_none = 0,
  TS_byte_ne_3B,
  protocol_not_teq1,
  incorrect_hist_chars,
  checksum_failure,
  historical_unknown
} type_ATRfail;

[1]	iso/iec 7816-3 : 1989 (E) pg 8.
