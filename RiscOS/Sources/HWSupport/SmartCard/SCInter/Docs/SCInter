SCInterface notes
=================
RLeggett, 6/11/98

Organisation of source files
----------------------------
  c.module  - main module code
  c.path    - provide functions for processing and validating a directory path
  c.sctrans - calls to access SCTrans

  c.orga,
  c.sclumb  - provides functions to manipulate three different
  c.incard    manufacturer's cards.
  
Outline
-------
The function 'machine' implements the SCInterface state machine.

Initialisation puts state machine into WaitingOpen state, where it waits
to begin communication with a smart card.

Communication begins with function 'get_atr' which gets the Answer To Reset
sequence from the smart card. This sequence of bytes is compared with
the sequences we know about to work out which manufactuer and hence OS
we are dealing with.

There is a source file for each type of card which supplies an exported
function table (a t_card_exports structure) which supplies the functions
which c.module calls at various points to read, write, verify etc. data
on the smart card.

To add new formats we recognise, we:
  1. Create a new source file which contains the export functions needed.
     We'll call this a 'card format file'.
     Examples are c.orga, c.schlumb and c.incard.
  2. Change h.cards by increasing value of SUPPORTED_CARDS and altering
     macro CARDS_POPULATE (which is used during module_initialise in
     c.module).
     
Structure of card format files
------------------------------
Import definitions:
  t_card_exports - this structure provides a list of pointers to functions
                   which perform various standard operations on the card
                   (eg. read, write, verify, unlock etc.)
                   Structure defined in h.module.

  t_card_atr     - defines the historical component of the ATR that the card
                   sends out on reset. Structure defined in h.module.

  t_card_resp    - Defines the responses that the card is likely to return
                   (via SW1 and SW2) and what they mean in terms of SWI
                   return codes (ie. success, failure etc.)