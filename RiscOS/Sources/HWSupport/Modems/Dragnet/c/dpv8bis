/*name and version number:@(#)dpv8bis.c	1.69*/
/*date of get: 		  10/31/00 12:00:59*/
/*date of delta:	  10/27/00 15:46:10*/
/****************************************************************
File :  dpv8bis.c
Description :
	Contains all functions related to v.8bis

Procedures Contained :
*****************************************************************/

//#define Z80_DEBUG_THIS_FILE

#include "llglob_d.h"

#if defined (V8BIS) || defined (VPCM_CLIENT)
#include "dpglob.h"
#include "ioglob_d.h"         //for V.8 CI seq.
#include "atglob.h"           //for at_v8_cmd
#include "sync.h"
#include "lapm.h"
#include "v42bis.h"
#include "z80glob.h"
#include "allglobs.h"
#endif	//V8BIS || VPCM_CLIENT

#ifdef V8BIS
/****************************************************************
Routine : v8bis_init
	init. all variables for v8bis
*****************************************************************/
void v8bis_init ( void )
{
	x_debug_msg("v8bis_init");
	G(v8bis_state) = V8BIS_INIT ;
	G(v8bis_ptr)->v8bis_timer = 0 ;
	G(v8bis_ptr)->dp_timer = 0 ;
	G(v8bis_ptr)->dp_timer1 = 0 ;
	G(v8bis_ptr)->in_v8bis_mode = FALSE ;
	G(lapm_receive_frame).status = EMPTY ;
	G(lapm_receive_frame).len = 0 ;
	G(v8bis_ptr)->v8bis_detected_single_tone = 0 ;
	G(v8bis_ptr)->v8bis_rx_buf_count = 0;
	dp_write_dsp_ram ( 0x39, 0 ) ;	// clear quick startup bit
	G(v8bis_ptr)->in_v8bis_dte_cmd_state = FALSE;
}

/*****************************************************************************
	Function : v8bis_reset
*****************************************************************************/
void v8bis_reset ( void )
{
	dp_write_dsp_ram ( 0x39, 0 ) ;	// clear quick startup bit

	if ( ( G(dp_state) == DP_V8BIS ) &&
		 ( G(v8bis_ptr)->in_v8bis_mode == FALSE ) )
	{
#if (DATA_FAX_TAM!=1)		// speakerphone for data/fax/TAM
		if ( G(x_modem_mode) == MODEM_SPEAKER_PHONE )
		{
			x_debug_msg ( "dp : v8bis - back to speaker phone mode" );
			x_send_mail ( VOICE_SPEAKER_PHONE, DP_TASK, 0, 0 ) ;
		}
#endif //(DATA_FAX_TAM!=1)		// speakerphone for data/fax/TAM
		v8bis_app_reset1 ();
	}
	else
	{
#if (DATA_FAX_TAM!=1)		// speakerphone for data/fax/TAM
		if ( G(x_modem_mode) == MODEM_SPEAKER_PHONE )
		{
			// in speaker phone mode
			x_debug_msg ( "dp : v8bis - reset for spkr mode" );
			G(v8bis_ptr)->dp_timer = x_current_time ();
			G(v8bis_ptr)->dp_timer1 = x_current_time ();
			G(lapm_receive_frame).status = EMPTY ;
			G(lapm_receive_frame).len = 0 ;
			G(v8bis_ptr)->v8bis_detected_single_tone = 0 ;
			G(v8bis_state) = V8BIS_WAIT ;
			G(v8bis_ptr)->v8bis_rx_buf_count = 0;
		}
#endif //(DATA_FAX_TAM!=1)		// speakerphone for data/fax/TAM
	}
}
/****************************************************************
Routine : v8bis_clear_dsp_ram
	clear dsp ram after each v8bis download
*****************************************************************/
void v8bis_clear_dsp_ram(void)
{
	word w ;

	// reset DSP here  ( based on apollo34.ver 1.65  ram.h )
	for ( w = 0x05eb ; w <= 0x05f0 ; w++ )
	{
		// clear ram locations : cdg_smp_cnt, phase_ofset, num_bit0,
		//						 num_bit1, dt_grp2, grp2_td
		dp_write_dsp_ram ( w, 0x0000 ) ;
	}
	for ( w = 0x0828 ; w <= 0x082d ; w++ )
	{
		// clear ram locations : vf_automode, ( startup_phase, vf_startup_f ) ,
		//                       vf_baud, prob_ena, vf_vt_thresh, vf_det_f
		dp_write_dsp_ram ( w, 0x0000 ) ;
	}
}

/****************************************************************
Routine : v8bis_rx_reset
*****************************************************************/
void v8bis_rx_reset ( void )
{
	G(lapm_receive_frame).status = EMPTY ;
	G(lapm_receive_frame).len = 0 ;
	G(v8bis_ptr)->v8bis_detected_single_tone = 0 ;
	x_debug_msg ( "dpv8bis - done v8bis_rx_reset" );
}

#if defined(V80)
/*****************************************************************************
	Function : v8bis_dte_cmd_tones_detection_setup
*****************************************************************************/
void v8bis_dte_cmd_tones_detection_setup ( void )
{
	if ( G(S).ModemOptions.V8bis == V8BIS_DTE_CONTROL )
	{
		dp_write_dsp_ram (0x26, 40);				// set threshold to -40 dBm

		if ( G(V8bis_Options).V8bis_Sig_En == 0 )	// look for init tones
		{
			dp_write_dsp_ram (0x1e, F_1375_C) ;  // v8bis dual tone 1375 hz
			dp_write_dsp_ram (0x1f, F_2002_C) ;  // v8bis dual tone 2002 hz
		}
		else
		{
			dp_write_dsp_ram (0x1e, F_1529_C) ;  // v8bis dual tone 1529 hz
			dp_write_dsp_ram (0x1f, F_2225_C) ;  // v8bis dual tone 2225 hz
		}
		dp_write_dsp_ram (0x22, F2100C) ;		// answer tone 2100 hz	
		dp_write_dsp_ram (0x1c, F1100C) ;		// fax calling tone
		dp_write_dsp_ram (0x1d, F1300C) ;		// data calling tone
		dp_write_dsp_ram (0x20, F1180C) ;		// v8 tone ( binary 0 ) 1180 hz
		dp_write_dsp_ram (0x21, F980C) ;		// v8 tone ( binary 1 ) 980 hz

		dp_modem_command ( DETECT_TONES, 7, 0 ) ;

		G(v8bis_ptr)->in_v8bis_dte_cmd_state = TRUE;
		G(v8bis_ptr)->in_v8bis_mode = TRUE ;
		G(v8bis_state) = V8BIS_INIT ;
	}
}

#endif

/****************************************************************
Routine : v8bis_app_reset1
*****************************************************************/
void v8bis_app_reset1 ( void )
{
	( G(v8bis_ptr)->v8bis_msg1_cnt ) = 0 ;
	( G(v8bis_ptr)->v8bis_msg2_cnt ) = 0 ;
	G(v8bis_state) = V8BIS_INIT ;
	G(v8bis_ptr)->v8bis_timer = 0 ;
	G(v8bis_ptr)->dp_timer = 0 ;
	G(v8bis_ptr)->dp_timer1 = 0 ;
	G(v8bis_ptr)->in_v8bis_mode = FALSE ;
	G(lapm_receive_frame).status = EMPTY ;
	G(lapm_receive_frame).len = 0 ;
	G(v8bis_ptr)->v8bis_detected_single_tone = 0 ;
	G(v8bis_ptr)->v8bis_rx_buf_count = 0;
	dp_write_dsp_ram ( 0x39, 0 ) ;	// clear quick startup bit
	G(v8bis_ptr)->in_v8bis_dte_cmd_state = FALSE;

	v8bis_clear_dsp_ram ();
}

#if !defined(CS_MODEM)
/****************************************************************
Routine : v8bis_in_cmd_state
*****************************************************************/
void v8bis_in_cmd_state ( void )
{
	if ( ( G(x_modem_state) == MS_OFFHOOK ) &&
		( G(v8bis_state) == V8BIS_INIT ) &&
		( G(dp_state) == DP_V8BIS ) ) 
	{
		G(v8bis_ptr)->in_v8bis_dte_cmd_state = TRUE ;
	}
}
#endif

/****************************************************************
		V.8bis DCE control
*****************************************************************/

/****************************************************************
Routine : v8bis_clear_dsp_ram_from_vcid
		clear ram for v.8bis 
*****************************************************************/
void v8bis_clear_dsp_ram_from_vcid ( void )
{
#if defined(NEW_QMP_AUX_INTFC)
	if ( G(sa_aux_processorON) )
	{
		extern void dp_AUX_zeroFill ( word, word );

		x_debug_msg("dpv8bis - clear DSP Ram with AUX Proc");

		dp_AUX_zeroFill( 0x0900, 0x0a5e );
		dp_AUX_zeroFill( 0x0ba0, 0x0c47 );
		dp_AUX_zeroFill( 0x088,  0x02ac );
		dp_AUX_zeroFill( 0x035d, 0x04e6 );
		dp_AUX_zeroFill( 0x0631, 0x0730 );
	}
	else
#endif 	// } NEW_QMP_AUX_INTFC
	{
		word w ;

		#ifdef V8BIS_DEBUG
		x_debug_msg ("dpv8bis - in v8bis_clear_dsp_ram_from_vcid" ) ;
		#endif

		for ( w = 0x0900 ; w <= 0x0a5e ; w++ )
		{
			dp_write_dsp_ram ( w, 0x0000 ) ;
		}
		for ( w = 0x0ba0 ; w <= 0x0c47 ; w++ )
		{
			dp_write_dsp_ram ( w, 0x0000 ) ;
		}
		// clear ram for FAX
		for ( w = 0x088 ; w <= 0x02ac ; w++ )
		{
			dp_write_dsp_ram ( w, 0x0000 ) ;
		}
		for ( w = 0x035d ; w <= 0x04e6 ; w++ )
		{
			dp_write_dsp_ram ( w, 0x0000 ) ;
		}
		for ( w = 0x0631 ; w <= 0x0730 ; w++ )
		{
			dp_write_dsp_ram ( w, 0x0000 ) ;
		}
	}
	dp_write_dsp_ram ( 0x08ad, 0x0000 ) ;	// clear ram loc. - t_rate_seq
	dp_write_dsp_ram ( 0x0c2, 0x0000 ) ;	// clear ram loc. - cnt_rd
}

#if !defined(CS_MODEM)
/****************************************************************
Routine : v8bis_dualtones_detect
	v8bis dualtones detection for v80
*****************************************************************/
byte v8bis_dualtones_detect ( void )
{
	if ( G(S).ModemOptions.V8bis != V8BIS_DTE_CONTROL )
	{
		return FALSE;	// no V.8bis negotiation if not configured DTE control 
	}

	if ( G(v8bis_ptr)->v8bis_timer == 0 )
	{
#if defined(VOICE)
		dp_init_fax_data_detect();
#endif
		G(v8bis_ptr)->v8bis_timer = x_current_time() ;
	}

	if ( dp_read_dsp_ram ( 0x28 ) == 0x00c0 )        
	{
		if ( x_elapsed_time ( G(v8bis_ptr)->v8bis_timer ) > MS150 )
		{
			x_debug_msg("dpv8bis - detected v8bis dual tones");
			G(v8bis_ptr)->v8bis_timer = 0 ;
			return ( TRUE ) ;
		}
	}
	else
	{
		G(v8bis_ptr)->v8bis_timer = x_current_time() ;
	}
	return ( FALSE ) ;
}
#endif  // !defined(CS_MODEM)

/*****************************************************************************
	Function : v8bis_new_cmd
	at command to transmit v8bis message
*****************************************************************************/
void v8bis_new_cmd ( void )
{
	if ( ( G(V8bis_Options).V8bis_Signal == 0 ) &&
		( ( G(v8bis_ptr)->v8bis_msg1_cnt ) == 0 ) &&
		( ( G(v8bis_ptr)->v8bis_msg2_cnt ) == 0 ) )
	{
		if ( G(dp_state) == DP_V8BIS )
		{
			G(x_modem_state) = MS_OFFHOOK ;
#if (DATA_FAX_TAM!=1)		// speakerphone for data/fax/TAM
			if ( G(x_modem_mode) == MODEM_SPEAKER_PHONE )
			{
				x_send_mail ( VOICE_SPEAKER_PHONE, DP_TASK, 0, 0 ) ;
				v8bis_app_reset1 () ;
			}
			else
#endif //(DATA_FAX_TAM!=1)		// speakerphone for data/fax/TAM
			{
				if ( G(v8bis_ptr)->in_v8bis_dte_cmd_state == TRUE )
				{
					// in dial cmd state
					v8bis_app_reset1 () ;
					G(v8bis_ptr)->in_v8bis_dte_cmd_state = TRUE ;
				}
			}
		}
	}
	else
	{
#if defined(VOICE)
#if (DATA_FAX_TAM!=1)		// speakerphone for data/fax/TAM
		if ( G(x_modem_mode) == MODEM_SPEAKER_PHONE )
		{
			dp_stop_fdsp () ;			// stop speaker phone
		}
		else
#endif //(DATA_FAX_TAM!=1)		// speakerphone for data/fax/TAM
#endif	//VOICE
		{
			x_output ( IO_CALLER_ID_ON ) ;  // monitor thru cid relay
			G(x_modem_state) = MS_OFFHOOK ;    // do not go to sleep
			G(S).ModemOptions.DsvdVoiceCallFirst = TRUE ;
		}
		G(v8bis_state) = V8BIS_TX_INIT ;
		G(v8bis_ptr)->in_v8bis_mode = TRUE ;
	}
}

#endif	//V8BIS

#if defined (V8BIS) || defined (VPCM_CLIENT)
/****************************************************************
Routine : v8bis_power_up_init
*****************************************************************/
void v8bis_power_up_init ( void )
{
#ifdef V8BIS
	// use V.42bis buffer
	G(v8bis_ptr) = (V8BIS_GLOBAL_VARS *) V42BIS_MEM_START;
    G(v8bis_msg1) = (byte *) G(v8bis_ptr) + 2048;
    G(v8bis_msg2) = (byte *) G(v8bis_msg1) + 100;
#endif	//V8BIS

	G(S).ModemOptions.V8bis = 1 ;	// enable DCE-controlled v8bis negotiation
	G(V8bis_Options).V8bis_Signal = 0 ;	// v8bis signal sent disabled
	G(V8bis_Options).V8bis_Sig_En = 0 ;	// v8bis enables detection of init. signal
	G(V8bis_Options).V8bis_Msg_En = 0 ;	// v8bis disables detection of v8bis messages
	G(V8bis_Options).V8bis_Supp_Delay = 0 ;// no delay btween the transmitted v8bis signal and message
	( G(v8bis_ptr)->v8bis_msg1_cnt ) = 0 ;
	( G(v8bis_ptr)->v8bis_msg2_cnt ) = 0 ;
	G(v8bis_state) = V8BIS_INIT ;
	G(v8bis_ptr)->v8bis_timer = 0 ;
	G(v8bis_ptr)->dp_timer = 0 ;
	G(v8bis_ptr)->dp_timer1 = 0 ;
	G(v8bis_ptr)->in_v8bis_mode = FALSE ;
	G(v8bis_ptr)->in_v8bis_dte_cmd_state = FALSE;
}

/****************************************************************
Routine : v8bis_datacall_dualtones_detect

Originating modem:  see if we see dual tone from central site for v92
*****************************************************************/
byte v8bis_datacall_dualtones_detect ( void )
{
	if (dp_read_dsp_ram(0x28) == 0x0c00)
	{
		if (x_elapsed_time ( G(v8bis_ptr)->v8bis_timer ) > MS150)
		{
			G(v8bis_ptr)->v8bis_timer = 0 ;
			v8bis_single_tone_detect_setup () ;
			G(v8bis_ptr)->dp_timer = x_current_time () ;
			G(v8bis_ptr)->dp_timer1 = G(v8bis_ptr)->dp_timer ;
			G(v8bis_ptr)->v8bis_detected_single_tone = 0 ;
			x_debug_msg("dpv8bis - go to V8BIS_SINGLE_TONE_DETECT state");
			return TRUE;
		}
	}
	else
	{
		G(v8bis_ptr)->v8bis_timer = x_current_time() ;
	}
	return FALSE;
}
/*****************************************************************************
	Function : v8bis_single_tone_detect_setup
*****************************************************************************/
void v8bis_single_tone_detect_setup ( void )
{
	dp_modem_idle_cmd ();

	x_debug_msg ( "dp : v8bis in v8bis_single_tones_detect_setup" );
	dp_write_dsp_ram (0x26, 40);     		  // set threshold to -40 dBm
	dp_write_dsp_ram (0x1c, F_MRe_C) ;  // v8bis init. MRe tone 650 hz
	dp_write_dsp_ram (0x1d, F_MRd_C) ;  // v8bis init/resp MRd tone 1150 hz
	dp_write_dsp_ram (0x1e, F_CRe_C) ;  // v8bis init. CRe tone 400 hz
	dp_write_dsp_ram (0x1f, F_CRd_C) ;  // v8bis init/resp CRd tone 1900 hz
	dp_write_dsp_ram (0x20, F_ESi_C) ;  // v8bis init. ESi tone 980 hz
	dp_write_dsp_ram (0x21, F_ESr_C) ;  // v8bis resp. ESr tone 1650 hz
	dp_modem_command ( DETECT_TONES, 6, 0 ) ;
}
#endif	//V8BIS || VPCM_CLIENT

