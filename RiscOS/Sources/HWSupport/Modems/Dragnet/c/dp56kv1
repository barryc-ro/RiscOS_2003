/*name and version number:@(#)dp56kv1.c	1.50*/
/*date of get: 		  11/15/00 11:36:53*/
/*date of delta:	  11/10/00 09:19:20*/
/****************************************************************
File :	dp56kv1.c
Description :
	k56flex VENUS data pump interface for 1.1 client

	Client 1.142

Procedures Contained :

Revision History :
	Initials	Date		Change
*****************************************************************/

#define Z80_DEBUG_THIS_FILE

#include "llglob_d.h"

#include "atglob.h"
#include "dpglob.h"
#include "z80glob.h"
#include "sync.h"
#include "ioglob_d.h"
#include "allglobs.h"

#if defined(VENUS_AT_CS) || defined(CS_MODEM)
#define VENUS_CENTRAL_SITE
#define ROB_BIT_PATTERN	0x222d		// Robbed-bit pattern Loc
#endif

#if defined (VPCM_CLIENT) || defined (VPCM_SERVER)

#if !defined(VENUS_CENTRAL_SITE)
// ********************************  Client ***********************
#define ROB_BIT_PATTERN	DP_V90_ADD_RBS		// Robbed-bit pattern Loc

extern const word aI2LinTbl[128];
extern non_banked word dp_getROMwd( byte, byte * ) ;

// Get value from aI2LinTbl - it is in a different
// bank so we must play games here with Z80.
word getaI2LinTbl(word i)
{
#if !defined( MODEM_Z80 )
	return aI2LinTbl[i];
#else
	long l = address_24_of(aI2LinTbl);
	byte bank = address_24_of(aI2LinTbl) >> 16;
	word *p = ((word *) l)+i;

	return dp_getROMwd(bank, (byte *) p);
#endif
}

#endif  // !VENUS_CENTRAL_SITE


#if !defined(CS_MODEM)
extern word vp_digital_loss(void);

/****************************************************************
Routine : dp_56k_get_digital_loss_and_rob_bit_status()

		Gather digital loss and robbed bits for display
		in the ATI11 results.
*****************************************************************/
void dp_56k_get_digital_loss_and_rob_bit_status ( void )
{
	word rob_bit_pattern, mask=0x0101;
	byte i;
	
	G(x_status).DigitalLoss = 0;

#if !defined(VENUS_CENTRAL_SITE)
	// V.90 - need to get number for digital loss
	G(x_status).DigitalLoss = (byte) vp_digital_loss();
#endif // !VENUS_CENTRAL_SITE

	rob_bit_pattern = 0 ;
	for (i=0; i<6; i++)
	{
		switch (dp_read_dsp_ram((word) (ROB_BIT_PATTERN + i)))
		{
		case 4:
		case 2 :
			rob_bit_pattern |= (mask & 0xff00);
			break ;
		case 3 :
		case 1 :
			rob_bit_pattern |= (mask & 0x00ff);
			break ;
		case 5 :
		case 6 :
			rob_bit_pattern |= mask;
			break ;
		}

		mask <<= 1;
	}
			
	G(x_status).RobbedBitPattern = rob_bit_pattern ;
}

#endif // !CS_MODEM
#endif  // VPCM_CLIENT || VPCM_SERVER

extern void at_dce_speed_code(MODEM_LINE_RATE line_rate);
extern void at_form_connect_rate(char *msg);

#if !defined(CS_MODEM)
/****************************************************************
Routine : dp_56k_update_connect_status()

	Fill in line rate, Digital Loss, Robbed bits for V.90/K56FLEX.

	This is called when a PCM connection gets to data mode.  It
	doesn't need to be called at other times since these things don't
	change except on a retrain, fast rate change, or startup.
*****************************************************************/
void dp_56k_update_connect_status(void)
{
#if defined(VENUS_CENTRAL_SITE)
	byte rbits, i;
	word rbs_count;
#endif
	
	if (G(x_status).Connection <= AT_MOD_V34)
	{
		// don't bother with this if we're V.34 or below.
		return;
	}

#if defined (VPCM_CLIENT) || defined (VPCM_SERVER)
	dp_56k_get_digital_loss_and_rob_bit_status(); 

#if defined(VENUS_CENTRAL_SITE)
	if (!G(vpcm_datamode))
	{
		// K56FLEX
		G(x_line_rate_tx) =
				(MODEM_LINE_RATE)(dp_read_dsp_ram(DP_SPEED_TX) + MR_32000 - 1);
	}
	else
	{
		// V.90/V.92
		G(x_line_rate_tx) =
				(MODEM_LINE_RATE)(dp_read_dsp_ram(DP_SPEED_TX) + MRV_28000 - 1);
	}

	G(x_line_rate) = (MODEM_LINE_RATE)(dp_read_dsp_ram(DP_SPEED_RX) + 4);

	// Robbed-bit adjustment of line rate for K56FLEX
	rbs_count = 0 ;  // initialize
	if ((G(x_status).RobbedBitPattern) &&
		(G(x_line_rate_tx) > MR_34000) &&
		!G(vpcm_mode)
		)
	{
		rbits = (byte)G(x_status).RobbedBitPattern ;
		for(i=1; i<=32; i= (byte) (i*2) )
		{
			if (rbits & i)
				rbs_count += 1 ;
		}
		rbits = (byte)(G(x_status).RobbedBitPattern >> 8) ;
		for(i=1; i<=32; i= (byte) (i*2) )
		{
			if (rbits & i)
				rbs_count += 1 ;
		}

		// rob-bit adjustment is non-linear, 2k,4k,4k,6k,6k
		if (rbs_count > 2)
			rbs_count -= 1;
		if (rbs_count > 4)
			rbs_count -= 1;

		// K56FLEX, must adjust line rate for # of robbed bits.
		G(x_line_rate_tx) -= (MODEM_LINE_RATE)(rbs_count);
	}
#else
	// V.9x client
	G(x_line_rate_tx) = (MODEM_LINE_RATE)(dp_read_dsp_ram(DP_SPEED_TX) + 4);
	G(x_line_rate) = (MODEM_LINE_RATE)dp_read_dsp_ram(DP_SPEED_RX);

	if (!G(x_line_rate))
	{
		// don't have a good line rate yet... this is an error
		G(x_line_rate) = (MODEM_LINE_RATE) 1;
	}

	G(x_line_rate) = (MODEM_LINE_RATE)(G(x_line_rate) + (MRV_28000 - 1)) ;

#if defined(Z80_DEBUG_PRINT)
	{
		char connectMsg[50];

		x_debug_msg("dsp ram DP_SPEED_RX (0x834)=");
		sendDecByte((byte) dp_read_dsp_ram(DP_SPEED_RX));
		sendDumbChar('=');

		at_dce_speed_code(G(x_line_rate));
		at_form_connect_rate(connectMsg);
		ddputs_nnl(connectMsg);
		sendCrLf();

		x_debug_msg("dsp ram DP_SPEED_TX (0x833)=");
		sendDecByte((byte) dp_read_dsp_ram(DP_SPEED_TX));
		sendDumbChar('=');

		at_dce_speed_code(G(x_line_rate_tx));
		at_form_connect_rate(connectMsg);
		ddputs_nnl(connectMsg);
		sendCrLf();
	}
#endif // Z80_DEBUG_PRINT

#endif  // (!) VENUS_CENTRAL_SITE

#endif  // VPCM_CLIENT || VPCM_SERVER
}
#endif  // !CS_MODEM
