/*name and version number:@(#)llutil1v.c	1.71*/
/*date of get: 		  12/15/00 10:10:25*/
/*date of delta:	  11/30/00 16:58:54*/
/****************************************************************
File :  llutil1v.c
Description :
	Contains modem options that are global - used by all tasks.

Procedures Contained :
	x_init_modem_options
	ll_init_modem_variables

Revision History :
	Initials        Date            Change
	Gary Liu		12/08/97		Update for Magellan
*****************************************************************/

#include "llglob_d.h"
#include "dpglob.h"
#include "z80glob.h"
#if defined(V80) || defined(V8BIS)
#include "sync.h"
#endif
#if defined (CLASS2_FAX) || defined (CLASS20_FAX)
#include "fax_c2.h"
#endif
#include "allglobs.h"

#if defined(MODEM_Z80)
#define AD24(x) address_24_of(x)
#else
#define AD24(x)			((const byte *) (x))
#define strcpy_24		x_strcpy
#endif

extern void at_v25ter_options_init (void);

/****************************************************************
Routine : ll_init_na 
Description :   Initialize USA/Canada parameters (North America)
Revision History :
	Initials        Date            Change
	ATV             3/10/97         Initial
*****************************************************************/
void ll_init_na ( void )
{
	G(S).ModemOptions.DialToneHole = 255 ;          // 255 msec
	G(S).ModemOptions.MaxAutoAnsRingCount = 255 ;
	G(S).ModemOptions.MinBusyCadenceOn = 18 ;       // 180 msec 
	G(S).ModemOptions.MaxBusyCadenceOn = 60 ;       // 600 msec 
	G(S).ModemOptions.MinBusyCadenceOff = 18 ;      // 180 msec
	G(S).ModemOptions.MaxBusyCadenceOff = 60 ;      // 600 msec 
	G(S).ModemOptions.AnsToneValidTime = 10 ;       // 100 msec
	G(S).ModemOptions.MinNoAnsTimeOut = 1 ;         // 255 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 255 ;       // 255 sec 
	G(S).ModemOptions.DialBusyDetect = 1 ;          // enabled 
	G(S).ModemOptions.FilterIndex = 5 ;				// 310-640
	G(S).ModemOptions.MaxCommaPauseTime = 255 ;		// no limit 
	G(S).ModemOptions.RingImpedanceRly = 0 ;		// Off
	G(S).ModemOptions.TadTxLevel = 10 ;

	// mah - 3/21/2000 - shorten dial tone valid time 2.5 sec to .5 sec
	G(S).ModemOptions.DialToneValidTime = 5 ; // 0.5 sec

	// mah 7/10/2000 - quicker dialing 90 -> 70 ms
	// (70 ms matches USR)
	G(S).ModemOptions.DtmfDialSpeed = 70 ;          // 70 msec
}

#ifdef HOMOL
extern void dp_init_blacklist( void ) ;

/****************************************************************
Routine : ll_init_tbr21
Description :   Initialize TBR21 specific parameters.
Revision History :
	Initials        Date            Change
	ATV             07/27/98        Initial
*****************************************************************/
void ll_init_tbr21 ( void )
{
	G(S).ModemOptions.DialToneValidTime = 05 ;	//500ms to accept tbr cadence
	G(S).ModemOptions.DialToneThreshold = 40;  //-40db
	G(S).ModemOptions.DialToneHole = 10 ;		//10ms
	G(S).ModemOptions.FilterIndex = 5;			//310-640
	G(S).ModemOptions.DtmfLevel = 7;
	G(S).ModemOptions.DtmfToneDiff = 2;

    if( G( dp_daa_is_perseus ))
    {
	    G(S).ModemOptions.MinRingPeriod = 0x12 ;           // for 68Hz upper limit
	    G(S).ModemOptions.MaxRingPeriod = 0x50 ;           // for 15Hz lower limit
	    G(S).ModemOptions.TadTxLevel = 10;
    }

	G(S).ModemOptions.TxLevel = 10;
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.MinBlindDialPause = 3 ;          // 3 sec
	G(S).ModemOptions.MaxBlindDialPause = 7;           // 7 sec
	G(S).ModemOptions.MinDialPauseTime = 2  ;          // 6 sec
	G(S).ModemOptions.MaxDialPauseTime = 20 ;          // 20 sec
	G(S).ModemOptions.BusyPassCount = 2 ;
	G(S).ModemOptions.CallProgressThreshold = 38 ;		// -38db
	G(S).ModemOptions.RingCountNullDelay = 80 ;		// 8sec
	G(S).ModemOptions.MinAutoAnsRingCount = 2 ;
	G(S).ModemOptions.MaxAutoAnsRingCount = 6 ;
	G(S).ModemOptions.HookFlashTime = 10;				// 100ms
	G(S).ModemOptions.BlackListFlag = 1 ;				// Enabled
	G(S).ModemOptions.MaxCallAttempts = 5 ;
	G(S).ModemOptions.TroubleCallDelay = 0 ;           
	G(S).ModemOptions.IneffectiveCallDelay = 0 ;       
	G(S).ModemOptions.ErroneousCallDelay = 0 ;        
	G(S).ModemOptions.MaxAttempts = 255 ;              // not applicable 
	G(S).ModemOptions.RestrictDial = 1;				 	
	G(S).ModemOptions.ComplexImpedance = 2 ;	// Complex Impedance
	G(S).ModemOptions.LoopLimitRly = 1 ;               // On
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
}

/****************************************************************
Routine : ll_init_aust
Description :   Initialize Australia specific parameters.
Revision History :
	Initials        Date            Change
	ATV             9/8/94          Initial
*****************************************************************/
void ll_init_aust ( void )
{
	G(S).ModemOptions.PulseTimeMake = 33 ; 
	G(S).ModemOptions.PulseTimeBreak = 64 ; 
	G(S).ModemOptions.DtmfLevel = 8 ;                  // -8 db
	G(S).ModemOptions.DtmfDialSpeed = 80 ;          // 80 msec
	G(S).ModemOptions.DialToneHole = 100 ;             // 100 msec
	G(S).ModemOptions.RingCountNullDelay  = 80 ;       //  8 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 2 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 6 ;        
	G(S).ModemOptions.MinRingPeriod = 0x15 ;           // for 55Hz upper limit
	G(S).ModemOptions.MaxRingPeriod = 0x5c ;           // for 13Hz lower limit
	G(S).ModemOptions.ContinuousBusyDetect = 1 ;       // enabled 
	G(S).ModemOptions.BlackListFlag = 1 ;              // enabled
	G(S).ModemOptions.MaxCallAttempts  = 5; 
	G(S).ModemOptions.ErroneousCallDelay = 120 ;       // 120 min      
	G(S).ModemOptions.HookFlashTime = 9 ;              // 90 ms 
	G(S).ModemOptions.MinBlindDialPause = 2 ;          // 2 sec 
	G(S).ModemOptions.MaxBlindDialPause = 5 ;          // 5 sec
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.MaxDialPauseTime = 5 ;           // 5 sec
	G(S).ModemOptions.TxLevel = 9 ;                    // -9 dB
	G(S).ModemOptions.LoopViRly = 0 ;                  
	G(S).ModemOptions.ComplexImpedance = 2 ;           //  Complex
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Australia") ) ; 
}

/****************************************************************
Routine : ll_init_bel
Description :   Initialize Belgium specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_bel ( void )
{
	G(S).ModemOptions.PulseTimeMake = 33 ; 
	G(S).ModemOptions.PulseTimeBreak = 67 ; 
	G(S).ModemOptions.DtmfLevel = 6 ;                  // -6 db 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.CallProgressThreshold = 37 ;     // -37 dB
	G(S).ModemOptions.DialToneHole = 30 ;              // 30 msec
	G(S).ModemOptions.RingCountNullDelay  = 80 ;       //  8 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 2 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 5 ;        
	G(S).ModemOptions.MinBusyCadenceOn = 40 ;          // 400 msec
	G(S).ModemOptions.MaxBusyCadenceOn = 60 ;          // 600 msec 
	G(S).ModemOptions.MinBusyCadenceOff = 40 ;         // 400 msec
	G(S).ModemOptions.MaxBusyCadenceOff = 60 ;         // 600 msec 
	G(S).ModemOptions.AnsToneValidTime = 15 ;          // 150 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;              // enabled
	G(S).ModemOptions.MaxCallAttempts  = 4 ; 
	G(S).ModemOptions.BlackListPeriod = 6 ;            // 60 min
	G(S).ModemOptions.BlindDialPermited = 1 ;          // permited 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.HookFlashTime = 12 ;             // 120 ms 
	G(S).ModemOptions.MinDialPauseTime = 4 ;           // 4 sec 
	G(S).ModemOptions.MaxDialPauseTime = 8 ;           // 8 sec 
	G(S).ModemOptions.TxLevel = 9 ;                    // -9 dB
	G(S).ModemOptions.DialToneValidTime = 8 ;          // 800 msec 
	G(S).ModemOptions.FilterIndex = 4 ;                // 415-460
	G(S).ModemOptions.DialToneThreshold = 24 ;         // -24 dB
	G(S).ModemOptions.DissableABCD = 0 ;               // no ABCD dialing
	G(S).ModemOptions.TadTxLevel = 9 ;
	G(S).ModemOptions.RestrictDial = 1 ;               // Validate dialtring
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Belgium") ) ; 
}

/****************************************************************
Routine : ll_init_den
Description :   Initialize Denmark specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_den ( void )
{
	G(S).ModemOptions.DtmfLevel = 8 ;                  // -8 db 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.CallProgressThreshold = 47 ;     // -47 dB
	G(S).ModemOptions.RingCountNullDelay = 100 ;       // 10 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.RingCadenceOn = 15 ;             // 150  msec 
	G(S).ModemOptions.ContinuousBusyDetect = 1 ;       // enabled 
	G(S).ModemOptions.AnsToneValidTime = 32 ;          // 320 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;              // enabled
	G(S).ModemOptions.MaxCallAttempts = 5 ; 
	G(S).ModemOptions.BlackListPeriod = 255 ;          // forever 
	G(S).ModemOptions.CallingToneFlag = 2 ;    // required, disable not perimited
	G(S).ModemOptions.BlindDialPermited = 1 ;          // permited 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.HookFlashTime = 9 ;              // 90 ms 
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.MinDialPauseTime = 2 ;           // 2 sec 
	G(S).ModemOptions.MaxDialPauseTime = 20 ;          // 20 sec 
	G(S).ModemOptions.MaxNoCarrierDisc = 255 ;         // 25.5 sec 
	G(S).ModemOptions.TxLevel = 9 ;                    // -9 dB
	G(S).ModemOptions.PulseDialPermited = 1 ;          // no pulse dialing
	G(S).ModemOptions.FilterIndex = 0 ;                // 340-560
	G(S).ModemOptions.DialToneThreshold = 38 ;         // -38 dB
	G(S).ModemOptions.RestrictDial = 1 ;               // Validate dialstring 
	G(S).ModemOptions.RingImpedanceRly = 0 ;		   // Off
	G(S).ModemOptions.LoopLimitRly = 1 ;               // On, active low
	G(S).ModemOptions.ComplexImpedance = 2 ;           //  Complex; G.L.
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Denmark") ) ; 
}

/****************************************************************
Routine : ll_init_fin
Description :   Initialize Finland specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_fin ( void )
{
	G(S).ModemOptions.PulseTimeMake = 40 ; 
	G(S).ModemOptions.PulseTimeBreak = 60 ; 
	G(S).ModemOptions.DtmfLevel = 8 ;                          // -8 db
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.DialToneHole = 28 ;                      // 28 msec
	G(S).ModemOptions.RingCountNullDelay = 100 ;       // 10 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.MinBusyCadenceOn = 10 ;          // 100 msec 
	G(S).ModemOptions.MaxBusyCadenceOn = 66 ;          // 660 msec 
	G(S).ModemOptions.MinBusyCadenceOff = 10 ;         //  100 msec
	G(S).ModemOptions.MaxBusyCadenceOff = 65 ;         // 650 msec 
	G(S).ModemOptions.AnsToneValidTime = 20 ;          // 200 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;              // enabled
	G(S).ModemOptions.MaxCallAttempts = 4 ; 
	G(S).ModemOptions.ErroneousCallDelay = 60 ;        // 60 min       
	G(S).ModemOptions.BlackListPeriod = 6 ;            // 60 min
	G(S).ModemOptions.CallingToneFlag = 2 ;    // required, disable not perimited
	G(S).ModemOptions.HookFlashTime = 9 ;                      // 90 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MinDialPauseTime = 4 ;           // 4 sec 
	G(S).ModemOptions.MaxDialPauseTime = 8 ;           // 8 sec 
	G(S).ModemOptions.TxLevel = 9 ;                            // -9 dB
	G(S).ModemOptions.RestrictDial = 1 ;                       // Validate dialstring
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.RingImpedanceRly = 0 ;   // Off
	G(S).ModemOptions.ComplexImpedance = 2 ;           //  Complex; G.L.
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Finland") ) ; 
}

/****************************************************************
Routine : ll_init_fra
Description :   Initialize France specific parameters.
Revision History :
	Initials        Date            Change
	ATV             9/8/94          Initial
*****************************************************************/
void ll_init_fra ( void )
{
	G(S).ModemOptions.PulseTimeMake = 34 ; 
	G(S).ModemOptions.PulseTimeBreak = 67 ; 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.CallProgressThreshold = 38 ;     // -38 dB
	G(S).ModemOptions.DialToneDelay = 5 ;                      // 50 msec
	G(S).ModemOptions.DialToneHole = 40 ;                      // 40 msec
	G(S).ModemOptions.RingCountNullDelay = 70 ;        //  7.0 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 2 ;
	G(S).ModemOptions.MaxAutoAnsRingCount = 3 ;        
	G(S).ModemOptions.MinRingPeriod = 0x0f ;           // for 80Hz upper limit
	G(S).ModemOptions.MaxRingPeriod = 0x42 ;           // for 18Hz lower limit
	G(S).ModemOptions.RingCadenceOn = 24 ;                     // 240  msec 
	G(S).ModemOptions.MinBusyCadenceOn = 40 ;          // 400 msec 
	G(S).ModemOptions.MaxBusyCadenceOn = 63 ;          // 630 msec 
	G(S).ModemOptions.MinBusyCadenceOff = 37 ;         // 370 msec
	G(S).ModemOptions.MaxBusyCadenceOff = 63 ;         // 630 msec 
	G(S).ModemOptions.BusyPassCount = 2 ;
	G(S).ModemOptions.AnsToneValidTime = 45 ;          // 450 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;                      // enabled 
	G(S).ModemOptions.MaxCallAttempts = 5 ;            
	G(S).ModemOptions.BlackListPeriod = 255 ;          // Forever, till reset 
	G(S).ModemOptions.BlindDialPermited = 1 ;          //permited 
	G(S).ModemOptions.GuardToneType = 2 ;                      // 1800 Hz fixed 
	G(S).ModemOptions.BellModePermited = 0 ;           // not permited
	G(S).ModemOptions.OffHookRestrict = 0 ;            // 
	G(S).ModemOptions.HookFlashTime = 27 ;                     // 270 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.MinDialPauseTime = 2 ;           // 2 sec
	G(S).ModemOptions.MaxDialPauseTime = 2 ;           // 2 sec
	G(S).ModemOptions.TxLevel = 9 ;                            
	G(S).ModemOptions.DelayAttempts = 0 ;      // delay effective after 1st attempt 
	G(S).ModemOptions.DialToneValidTime = 16 ;         // 1.6 sec 
	G(S).ModemOptions.DialToneThreshold = 36 ;         // -36 dB
	G(S).ModemOptions.RxLevel = 32 ;                           
	G(S).ModemOptions.ToneThreshold = 36 ;             // -36 db
	G(S).ModemOptions.RestrictDial = 1 ;               // Validate dialstring
	G(S).ModemOptions.LoopLimitRly = 1 ;               // On, active low
	G(S).ModemOptions.CallerIdType = 4;					// French Caller ID
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("France") ) ; 
}

/****************************************************************
Routine : ll_init_ger
Description :   Initialize Germany specific parameters.
Revision History :
	Initials        Date            Change
	ATV             9/8/94          Initial
*****************************************************************/
void ll_init_ger ( void )
{
	G(S).ModemOptions.PulseTimeMake = 41 ; 
	G(S).ModemOptions.PulseTimeBreak = 60 ; 
	G(S).ModemOptions.DtmfLevel = 13 ; 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;
	G(S).ModemOptions.MaxAutoAnsRingCount = 6 ;        
	G(S).ModemOptions.MinRingPeriod = 0x14 ;           // for 58Hz upper limit
	G(S).ModemOptions.MaxRingPeriod = 0x3f ;           // for 19Hz lower limit
	G(S).ModemOptions.MinBusyCadenceOn = 9 ;           // 90 msec 
	G(S).ModemOptions.MaxBusyCadenceOn = 55 ;          // 550 msec
	G(S).ModemOptions.MinBusyCadenceOff = 20 ;         //  200 msec
	G(S).ModemOptions.MaxBusyCadenceOff = 60 ;         // 600 msec 
	G(S).ModemOptions.AnsToneValidTime = 20 ;          // 200 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;              // enabled 
	G(S).ModemOptions.MaxCallAttempts = 5 ; 
	G(S).ModemOptions.BlackListPeriod = 6 ;            // 60 min
	G(S).ModemOptions.CallingToneFlag = 1 ;            // enabled
	G(S).ModemOptions.OffHookRestrict = 0 ;            // 
	G(S).ModemOptions.HookFlashTime = 18 ;             // 180 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 40 sec 
	G(S).ModemOptions.MinDialPauseTime = 4 ;           // 4 sec
	G(S).ModemOptions.MaxDialPauseTime = 6 ;           // 6 sec
	G(S).ModemOptions.TxLevel = 10 ; //was 14 G.L.          
	G(S).ModemOptions.MaxAttempts = 12 ;               
	G(S).ModemOptions.DelayAttempts = 2 ;// delay effective after 2nd reattempt 
	G(S).ModemOptions.DialToneValidTime = 19 ;         // 1.9 sec 
	G(S).ModemOptions.FilterIndex = 5 ;                
	G(S).ModemOptions.DtmfToneDiff = 3 ;               // 3 db 
	G(S).ModemOptions.TadTxLevel = 12 ;                // -12 dB
	G(S).ModemOptions.PulseTonePermited = 1 ;          // not permited 
	G(S).ModemOptions.RestrictDial = 1 ;               // Validate dialstring
	G(S).ModemOptions.LoopViRly = 1 ;          
	G(S).ModemOptions.ComplexImpedance = 2 ;   //  Complex
	G(S).ModemOptions.OffhookShuntTime = 1 ;           //10ms
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Germany") ) ; 
}

/****************************************************************
Routine : ll_init_neth
Description :   Initialize Netherland specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_neth ( void )
{
	G(S).ModemOptions.PulseTimeMake = 40 ; 
	G(S).ModemOptions.PulseTimeBreak = 60 ; 
	G(S).ModemOptions.DtmfLevel = 8 ;                  // -8 db 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.MinAutoAnsRingCount = 2 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.MinRingPeriod = 0x2c ;           // for 68Hz upper limit
	G(S).ModemOptions.RingCadenceOn = 15 ;             // 150  msec 
	G(S).ModemOptions.MinBusyCadenceOn = 15 ;          // 150 msec 
	G(S).ModemOptions.MaxBusyCadenceOn = 65 ;          // 650 msec 
	G(S).ModemOptions.MinBusyCadenceOff = 11 ;         //  110 msec
	G(S).ModemOptions.MaxBusyCadenceOff = 65 ;         // 650 msec 
	G(S).ModemOptions.CallProgressThreshold = 34 ;     // -34 dB
	G(S).ModemOptions.DialToneHole = 30 ;              // 30 msec
	G(S).ModemOptions.RingCountNullDelay = 80 ;        //  8 sec
	G(S).ModemOptions.AnsToneValidTime = 20 ;          // 200 msec 
	G(S).ModemOptions.BlackListFlag = 0 ;              // disabled
	G(S).ModemOptions.BlackListPeriod = 6 ;            // 60 min
	G(S).ModemOptions.CallingToneFlag = 2 ;    // required, disable not perimited
	G(S).ModemOptions.BlindDialPermited = 1 ;          // permited 
	G(S).ModemOptions.MinBlindDialPause = 5 ;          // 5 sec 
	G(S).ModemOptions.MaxBlindDialPause = 5 ;          // 5 sec
	G(S).ModemOptions.GuardToneType = 2 ;              // 1800 Hz
	G(S).ModemOptions.HookFlashTime = 11 ;             // 110 ms 
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec
	G(S).ModemOptions.MaxDialPauseTime = 2 ;           // 2 sec 
	G(S).ModemOptions.MaxAttempts = 15 ;               
	G(S).ModemOptions.DialToneValidTime = 15 ;         // 1.5 sec 
	G(S).ModemOptions.FilterIndex = 5 ;                // 310-640
	G(S).ModemOptions.DialToneThreshold = 27 ;         // -27 dB
	G(S).ModemOptions.DialToneLevel = 9 ;              // 90
	G(S).ModemOptions.PulseTonePermited = 1 ;          // not permited 
	G(S).ModemOptions.RestrictDial = 1 ;               // Validate dialstring
	G(S).ModemOptions.TxLevel = 9 ;                    // -9 dB
	G(S).ModemOptions.PulseDialPermited = 0 ;          // pulse dialing allowed 
	G(S).ModemOptions.LoopLimitRly = 1 ;               // On, active low
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Netherlands") ) ; 
}

/****************************************************************
Routine : ll_init_ita
Description : Initialize Italy specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_ita ( void )
{
	G(S).ModemOptions.PulseTimeMake = 41 ; 
	G(S).ModemOptions.PulseTimeBreak = 65 ; 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.CallProgressThreshold = 50 ;     // -50 dB
	G(S).ModemOptions.DialToneHole = 10 ;              // 10 msec
	G(S).ModemOptions.RingCountNullDelay = 80 ;        //  8 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.BusyPassCount = 2 ;
	G(S).ModemOptions.AnsToneValidTime = 20 ;          // 200 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;              // disabled
	G(S).ModemOptions.MaxCallAttempts = 4 ; 
	G(S).ModemOptions.BlackListPeriod = 6 ;            // 60 min
	G(S).ModemOptions.BlindDialPermited = 1 ;          // permited
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.BusyDetectDisable = 0 ;          // not permited
	G(S).ModemOptions.GuardToneType = 2 ;                      // 1800 Hz 
	G(S).ModemOptions.OffHookRestrict = 2 ;            // not permited 
	G(S).ModemOptions.HookFlashTime = 9 ;                      // 90 ms 
	G(S).ModemOptions.MaxBlindDialPause = 10 ;         // 10 sec 
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.TxLevel = 9 ;                    // -9 dB
	G(S).ModemOptions.DialToneValidTime = 5 ;         // 500 msec
	G(S).ModemOptions.FilterIndex = 4 ;                // 415-460
	G(S).ModemOptions.DialToneThreshold = 40 ;         // -40 dB
	G(S).ModemOptions.RestrictDial = 1 ;               // Validate dialstring
	G(S).ModemOptions.RxLevel = 36 ;                           
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Italy") ) ; 
}

/****************************************************************
Routine : ll_init_nz
Description : Initialize New Zealand specific parameters.
Revision History :
	Initials        Date            Change
	ATV             9/8/94          Initial
*****************************************************************/
void ll_init_nz ( void )
{
	G(S).ModemOptions.PulseTimeMake = 33 ; 
	G(S).ModemOptions.PulseTimeBreak = 67 ; 
	G(S).ModemOptions.PulseDigitPattern = 3 ;          // reversed 
	G(S).ModemOptions.DtmfLevel = 8 ;                  // -8 db
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.DialToneHole = 30 ;              // 30 msec
	G(S).ModemOptions.RingCountNullDelay  = 80 ;       //  8 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 3 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.ContinuousBusyDetect = 1 ;       // enabled 
	G(S).ModemOptions.TxLevel = 9 ;                    // -9 dB
	G(S).ModemOptions.BlackListFlag = 0 ;              // disabled
	G(S).ModemOptions.OffHookRestrict = 0 ;            // 
	G(S).ModemOptions.HookFlashTime = 71 ;             // 710 ms
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.MinDialPauseTime = 4 ;           // 4 sec
	G(S).ModemOptions.MaxDialPauseTime = 8 ;           // 8 sec
	G(S).ModemOptions.LoopViRly = 0 ;          
	G(S).ModemOptions.ComplexImpedance = 2 ;           //  Complex; G.L.
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("New Zealand") ) ; 
}

/****************************************************************
Routine : ll_init_nor
Description : Initialize Norway specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_nor ( void )
{
	G(S).ModemOptions.DtmfLevel = 8 ;                          // -8 db
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.CallProgressThreshold = 40 ;     // -40 dB
	G(S).ModemOptions.DialToneHole = 50 ;                      // 50 msec
	G(S).ModemOptions.RingCountNullDelay = 100 ;       //  10 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.MinBusyCadenceOn = 10 ;          // 100 msec 
	G(S).ModemOptions.MaxBusyCadenceOn = 66 ;          // 660 msec 
	G(S).ModemOptions.BusyPassCount = 2 ;
	G(S).ModemOptions.MinBusyCadenceOff = 10 ;         //  100 msec
	G(S).ModemOptions.MaxBusyCadenceOff = 65 ;         // 650 msec 
	G(S).ModemOptions.ContinuousBusyDetect = 1 ;       // enabled 
	G(S).ModemOptions.AnsToneValidTime = 32 ;          // 320 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;              // enabled
	G(S).ModemOptions.MaxCallAttempts = 5 ; 
	G(S).ModemOptions.BlackListPeriod = 3 ;            // 30 min
	G(S).ModemOptions.CallingToneFlag = 2 ;    // required, disable not perimited
	G(S).ModemOptions.GuardToneType = 2 ;                      // 1800 Hz 
	G(S).ModemOptions.OffHookRestrict = 0 ;            // 
	G(S).ModemOptions.HookFlashTime = 10 ;                     // 100 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.MinDialPauseTime = 4 ;           // 4 sec 
	G(S).ModemOptions.MaxDialPauseTime = 8 ;           // 8 sec 
	G(S).ModemOptions.TxLevel = 9 ;                            // -9 dB
	G(S).ModemOptions.PulseDialPermited = 1 ;          // pulse dialing not allowed 
	G(S).ModemOptions.DialToneValidTime = 15 ;         // 1.5 sec 
	G(S).ModemOptions.FilterIndex = 0 ;                        // 340-560
	G(S).ModemOptions.DialToneThreshold = 39 ;         // -39 dB
	G(S).ModemOptions.RestrictDial = 1 ;                       // Validate dialstring
	G(S).ModemOptions.RingImpedanceRly = 0 ;   // Off
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Norway") ) ; 
}

/****************************************************************
Routine : ll_init_spa
Description : Initialize Spain specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_spa ( void )
{
	G(S).ModemOptions.PulseTimeMake = 33 ; 
	G(S).ModemOptions.PulseTimeBreak = 67 ; 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.DialToneHole = 120 ;                     // 120 msec 
	G(S).ModemOptions.RingCountNullDelay = 80 ;        //  8 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.RingCadenceOn = 75 ;                     // (750 + 50) msec 
	G(S).ModemOptions.AnsToneValidTime = 20 ;          // 200 msec 
	G(S).ModemOptions.BlackListFlag = 0 ;                      // disabled
	G(S).ModemOptions.MaxCallAttempts = 4 ; 
	G(S).ModemOptions.BlackListPeriod = 6 ;            // 60 min  
	G(S).ModemOptions.CallingToneFlag = 2 ;    // required, disable not perimited
	G(S).ModemOptions.GuardToneType = 2 ;                      // 1800 Hz 
	G(S).ModemOptions.OffHookRestrict = 0 ;            // 
	G(S).ModemOptions.HookFlashTime = 10 ;                     // 100 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.MinDialPauseTime = 5 ;           // 5 sec 
	G(S).ModemOptions.MaxDialPauseTime = 5 ;           // 5 sec 
	G(S).ModemOptions.TxLevel = 9 ;                            // -9 dB
	G(S).ModemOptions.DialToneValidTime = 12 ;         // 1.2 sec 
	G(S).ModemOptions.FilterIndex = 5 ;                        // 310-640
	G(S).ModemOptions.DialToneThreshold = 41 ;         // -41 dB 
	G(S).ModemOptions.RestrictDial = 1 ;                       // Validate dialstring
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Spain") ) ; 
}

/****************************************************************
Routine : ll_init_swe
Description : Initialize Sweden specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_swe ( void )
{
	G(S).ModemOptions.PulseTimeMake = 40 ; 
	G(S).ModemOptions.PulseTimeBreak = 60 ; 
	G(S).ModemOptions.PulseDigitPattern = 2 ;          // Sweden 
	G(S).ModemOptions.DtmfLevel = 8 ;                          // -8 db 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;
	G(S).ModemOptions.MaxAutoAnsRingCount = 2 ;        
	G(S).ModemOptions.CallProgressThreshold = 50 ;     // -50 dB
	G(S).ModemOptions.DialToneHole = 50 ;                      // 50 msec
	G(S).ModemOptions.RingCountNullDelay = 100 ;       // 10 sec
	G(S).ModemOptions.MinRingPeriod = 0x17 ;           // for 51Hz upper limit
	G(S).ModemOptions.MaxRingPeriod = 0x3c ;           // for 22Hz lower limit
	G(S).ModemOptions.MinBusyCadenceOn = 20 ;          // 200 msec 
	G(S).ModemOptions.MaxBusyCadenceOn = 30 ;          // 300 msec 
	G(S).ModemOptions.MinBusyCadenceOff = 20 ;         // 200 msec
	G(S).ModemOptions.MaxBusyCadenceOff = 85 ;         // 850 msec 
	G(S).ModemOptions.ContinuousBusyDetect = 0 ;       // disabled 
	G(S).ModemOptions.AnsToneValidTime = 12 ;          // 120 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;              // enabled
	G(S).ModemOptions.MaxCallAttempts = 5 ; 
	G(S).ModemOptions.BlackListPeriod = 6 ;            // 60 min
	G(S).ModemOptions.BlindDialPermited = 1 ;          // permited 
	G(S).ModemOptions.CallingToneFlag = 2 ;    // required, disable not perimited
	G(S).ModemOptions.GuardToneType = 2 ;                      // 1800 Hz 
	G(S).ModemOptions.HookFlashTime = 9 ;                      // 90 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec
	G(S).ModemOptions.MinDialPauseTime = 4 ;           // 4 sec 
	G(S).ModemOptions.MaxDialPauseTime = 8 ;           // 8 sec 
	G(S).ModemOptions.TxLevel = 9 ;                            // -9 dB
	G(S).ModemOptions.MaxAttempts = 10 ;               
	G(S).ModemOptions.DelayAttempts = 0 ;      // delay effective after 1st attempt 
	G(S).ModemOptions.DialToneValidTime = 15 ;         // 1.5 sec 
	G(S).ModemOptions.DtmfToneDiff = 3 ;               // 3 db 
	G(S).ModemOptions.LocalPhoneDetect = 1 ;           // off
	G(S).ModemOptions.PulseDialPermited = 1 ;          // pulse dialing not allowed 
	G(S).ModemOptions.FilterIndex = 3 ;                // 340-560
	G(S).ModemOptions.DialToneThreshold = 36 ;         // -36 dB
	G(S).ModemOptions.TadTxLevel = 14 ;                        // -14 db
	G(S).ModemOptions.RestrictDial = 1 ;                       // Validate dialstring
	G(S).ModemOptions.LoopViRly = 0 ;          
	G(S).ModemOptions.LoopLimitRly = 1 ;               // On, active low
	G(S).ModemOptions.ComplexImpedance = 2 ;           //  Complex; G.L.
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Sweden") ) ; 
}

/****************************************************************
Routine : ll_init_swi
Description : Initialize Switzerland specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_swi ( void )
{
	G(S).ModemOptions.PulseTimeMake = 40 ; 
	G(S).ModemOptions.PulseTimeBreak = 60 ; 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.CallProgressThreshold = 37 ;     // -37 dB
	G(S).ModemOptions.DialToneHole = 30 ;              // 30 msec
	G(S).ModemOptions.RingCountNullDelay = 80 ;        //  8 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 2 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.MaxRingPeriod = 60 ;             
	G(S).ModemOptions.MinBusyCadenceOn = 8 ;   //  80 ms (for 120 msec)
	G(S).ModemOptions.MaxBusyCadenceOn = 80 ;  // 800 ms 
	G(S).ModemOptions.BusyPassCount = 2 ;
	G(S).ModemOptions.MinBusyCadenceOff = 8 ;  // 80 ms (for 120 msec) 
	G(S).ModemOptions.MaxBusyCadenceOff = 80 ; //  800 ms
	G(S).ModemOptions.AnsToneValidTime = 12 ;  // 120 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;      // enabled
	G(S).ModemOptions.MaxCallAttempts = 5 ; 
	G(S).ModemOptions.BlackListPeriod = 36 ;   // 6 hrs 
	G(S).ModemOptions.GuardToneType = 2 ;      // 1800 Hz 
	G(S).ModemOptions.OffHookRestrict = 0 ;    
	G(S).ModemOptions.HookFlashTime = 12 ;     // 120 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;  // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;  // 4 sec 
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;   // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;   // 60 sec
	G(S).ModemOptions.MinDialPauseTime = 4 ;   // 4 sec 
	G(S).ModemOptions.MaxDialPauseTime = 8 ;   // 8 sec 
	G(S).ModemOptions.MaxAttempts = 24 ;               
	G(S).ModemOptions.ErrorCallWeight = 6 ;    // equivalent to 6 attempts
	G(S).ModemOptions.DialToneValidTime = 10 ; // 1.0 sec 
	G(S).ModemOptions.DialBusyDetect = 1 ;     // enabled 
	G(S).ModemOptions.FilterIndex = 0 ;        // 340-560
	G(S).ModemOptions.DialToneThreshold = 32 ; // -32 dB
	G(S).ModemOptions.TadTxLevel = 7 ;
	G(S).ModemOptions.RestrictDial = 1 ;       // Validate dialstring
	G(S).ModemOptions.TxLevel = 9 ;            // -9 dB
	G(S).ModemOptions.PulseDialPermited = 0 ;  // pulse dialing allowed 
	G(S).ModemOptions.LoopViRly = 0 ;          
	G(S).ModemOptions.ComplexImpedance = 2 ;   //  Complex
	G(S).ModemOptions.ILimitOffset = 0x37EB;   // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Switzerland") ) ; 
}

/****************************************************************
Routine : ll_init_uk
Description :   Initialize UK specific parameters.
Revision History :
	Initials        Date            Change
	ATV             9/8/94          Initial
*****************************************************************/
void ll_init_uk ( void )
{
	G(S).ModemOptions.PulseTimeMake = 34 ;             // 34 ms
	G(S).ModemOptions.PulseTimeBreak = 68 ;            // 68 ms
	G(S).ModemOptions.DtmfLevel = 6 ;                  // -6 db
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.ContinuousBusyDetect = 1 ;       // enabled 
	G(S).ModemOptions.BlackListFlag = 0 ;              // disabled
	G(S).ModemOptions.GuardToneType = 2 ;              // 1800 Hz fixed 
	G(S).ModemOptions.OffHookRestrict = 0 ;            // 
	G(S).ModemOptions.HookFlashTime = 7 ;              // set to 70 for 80 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.MinDialPauseTime = 4 ;           // 4 sec
	G(S).ModemOptions.MaxDialPauseTime = 8 ;           // 8 sec
	G(S).ModemOptions.TxLevel = 9 ;                    // -9 dB
	G(S).ModemOptions.DtmfToneDiff = 3 ;               // 3 db
	G(S).ModemOptions.FilterIndex = 3 ;                // 276-504
	G(S).ModemOptions.LoopViRly = 0;				   // On
	G(S).ModemOptions.LoopLimitRly = 1 ;               // On, active low
	G(S).ModemOptions.ComplexImpedance = 2 ;           //  Complex
	G(S).ModemOptions.CallerIdType = 2  ;              // UK Caller ID
	G(S).ModemOptions.DCOffset1 = 71;
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("United Kingdom") ) ; 
}

/****************************************************************
Routine : ll_init_aus
Description :   Initialize Austria specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_aus ( void )
{
	G(S).ModemOptions.PulseTimeMake = 40 ; 
	G(S).ModemOptions.PulseTimeBreak = 60 ; 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;			   // 90 msec
	G(S).ModemOptions.CallProgressThreshold = 45 ;     // -45 dB
	G(S).ModemOptions.DialToneHole = 100 ;             // 100 msec
	G(S).ModemOptions.RingCountNullDelay  = 80 ;       //  8 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.BusyPassCount = 2 ;
	G(S).ModemOptions.AnsToneValidTime = 20 ;          // 200 msec 
	G(S).ModemOptions.BlackListFlag = 0 ;              // disabled
	G(S).ModemOptions.MaxCallAttempts  = 5 ; 
	G(S).ModemOptions.CallingToneFlag = 2;   // required, disable not perimited
	G(S).ModemOptions.OffHookRestrict = 0;
	G(S).ModemOptions.HookFlashTime = 9 ;              // 90 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.MinDialPauseTime = 4 ;           // 4 sec 
	G(S).ModemOptions.MaxDialPauseTime = 6 ;           // 6 sec 
	G(S).ModemOptions.TxLevel = 9 ;                    // -9 dB
	G(S).ModemOptions.MaxAttempts = 6 ;
	G(S).ModemOptions.DialToneValidTime = 8 ;          // 800 msec 
	G(S).ModemOptions.FilterIndex = 6 ;                // 370-525
	G(S).ModemOptions.DialToneThreshold = 45 ;         // -45 dB
	G(S).ModemOptions.RestrictDial = 1 ;               // Validate dialstring
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Austria") ) ; 
}

/****************************************************************
Routine : ll_init_jpn
Description :   Initialize Japan specific parameters.
Revision History :
	Initials        Date            Change
	ATV             9/8/94          Initial
*****************************************************************/
void ll_init_jpn ( void )
{
	G(S).ModemOptions.PulseTimeMake = 34 ;             // 33 ms 
	G(S).ModemOptions.PulseTimeBreak = 66 ;            // 67 ms 
	G(S).ModemOptions.DtmfLevel = 7 ;                  // -7 db
	G(S).ModemOptions.DtmfDialSpeed = 60 ;          // 60 msec
	G(S).ModemOptions.DialToneHole = 250 ;                     // 250 msec
	G(S).ModemOptions.RingCountNullDelay = 80 ;        // 8 sec
	G(S).ModemOptions.AnsToneValidTime = 50 ;          // 500 msec 
	G(S).ModemOptions.BlackListFlag = 1 ;                      // enabled 
#ifdef JPN_DELAY
	G(S).ModemOptions.BlackListPeriod = 0 ;            // only delayed 
#else
	G(S).ModemOptions.BlackListPeriod = 3 ;            // 3 minutes 
	G(S).ModemOptions.MaxCallAttempts = 3 ; 
	G(S).ModemOptions.TroubleCallDelay = 0 ;           // no delay 
	G(S).ModemOptions.ErroneousCallDelay = 0 ;         // no delay 
#endif
	G(S).ModemOptions.HookFlashTime = 50 ;                     // 500 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MaxBlindDialPause = 255 ;        // 255 sec 
	G(S).ModemOptions.MinNoAnsTimeOut = 35 ;           // 35 sec 
	G(S).ModemOptions.MaxNoAnsTimeOut = 59 ;           // 59 sec 
	G(S).ModemOptions.TxLevel = 14 ;                           // - 14 db
	G(S).ModemOptions.DelayAttempts = 0 ;      // delay effective from first reattempt 
	G(S).ModemOptions.TadTxLevel = 13 ;                // - 13 db
	G(S).ModemOptions.CallerIdType = 1  ;              // Japan
	G(S).ModemOptions.DCOffset1 = 735 ;		// Japan VI
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Japan") ) ; 
}

/****************************************************************
Routine : ll_init_kor
Description :   Initialize Korea specific parameters.
Revision History :
	Initials        Date            Change
	ATV             5/6/96          Initial
*****************************************************************/
void ll_init_kor ( void )
{
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Korea") ) ; 

    if( G( dp_daa_is_perseus ))
    {
	    ll_init_na();
    }
    else
    {
	    G(S).ModemOptions.PulseTimeMake = 32 ;
	    G(S).ModemOptions.PulseTimeBreak = 64 ;
	    G(S).ModemOptions.DtmfLevel = 6 ;                  
	    G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec
	    G(S).ModemOptions.TxLevel = 11 ;           // -11 db
    }
}
/****************************************************************
Routine : ll_init_sng
Description :   Initialize Singapore specific parameters.
Revision History :
	Initials        Date            Change
	ATV             9/20/94         Initial
*****************************************************************/
void ll_init_sng ( void )
{
	G(S).ModemOptions.PulseTimeMake = 32 ;
	G(S).ModemOptions.PulseTimeBreak = 64 ;
	G(S).ModemOptions.DtmfLevel = 7 ;                          // -7 db
	G(S).ModemOptions.DtmfDialSpeed = 70 ;  
	G(S).ModemOptions.DialToneHole = 30 ;                      // 30 msec
	G(S).ModemOptions.RingCountNullDelay = 80 ;        // 8 sec
	G(S).ModemOptions.ContinuousBusyDetect = 1 ;       // enabled 
	G(S).ModemOptions.BlackListFlag = 1 ;                      // enabled 
	G(S).ModemOptions.MaxCallAttempts = 5 ;
	G(S).ModemOptions.BlackListPeriod = 0 ;            // only delayed 
	G(S).ModemOptions.CallingToneFlag = 0 ;            // disabled
	G(S).ModemOptions.HookFlashTime = 9 ;                      // 90 ms 
	G(S).ModemOptions.MinBlindDialPause = 3 ;          // 3 sec
	G(S).ModemOptions.MaxBlindDialPause = 20 ;         // 20 sec 
	G(S).ModemOptions.MinNoAnsTimeOut = 5 ;            // 5 sec 
	G(S).ModemOptions.MaxNoAnsTimeOut = 35 ;           // 35 sec 
	G(S).ModemOptions.TxLevel = 11 ;                   // -11 dB
	G(S).ModemOptions.DelayAttempts = 0 ;      // delay effective from first reattempt 
	G(S).ModemOptions.DCOffset1 = 735 ;		// 300 ohm VI
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Singapore") ) ; 
}

/****************************************************************
Routine : ll_init_mal
Description :   Initialize Malaysia specific parameters.
Revision History :
	Initials        Date            Change
	ATV             11/16/94                Initial
*****************************************************************/
void ll_init_mal ( void )
{
	ll_init_sng ( ) ;
	G(S).ModemOptions.DtmfLevel = 8 ;                  // -8 db
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Malaysia") ) ; 
}

/****************************************************************
Routine : ll_init_tha
Description :   Initialize Thailand specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/4/94         Initial
*****************************************************************/
void ll_init_tha ( void )
{
	G(S).ModemOptions.PulseTimeMake = 40 ; 
	G(S).ModemOptions.PulseTimeBreak = 60 ; 
	G(S).ModemOptions.CallProgressThreshold = 35 ;     // -35 dB
	G(S).ModemOptions.DialToneHole = 30 ;                      // 30 msec
	G(S).ModemOptions.RingCountNullDelay = 80 ;        // 8 sec
	G(S).ModemOptions.AnsToneValidTime = 5 ;           // 50 msec 
	G(S).ModemOptions.BlackListFlag = 0 ;                      // disabled
	G(S).ModemOptions.CallingToneFlag = 0 ;            // not required
	G(S).ModemOptions.HookFlashTime = 9 ;                      // 90 ms 
	G(S).ModemOptions.MaxBlindDialPause = 10 ;         // 10 sec 
	G(S).ModemOptions.MaxDialPauseTime = 10 ;          // 10 sec 
	G(S).ModemOptions.DialToneThreshold = 35 ;         // -35 dB
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Thailand") ) ; 
}

/****************************************************************
Routine : ll_init_por
Description :   Initialize Portugal specific parameters.
Revision History :
	Initials        Date            Change
	ATV             4/20/94         Initial
*****************************************************************/
void ll_init_por ( void )
{
	G(S).ModemOptions.PulseTimeMake = 33 ;             // 33 ms 
	G(S).ModemOptions.PulseTimeBreak = 67 ;            // 67 ms 
	G(S).ModemOptions.DtmfDialSpeed = 90 ;          // 90 msec
	G(S).ModemOptions.DialToneHole = 250 ;                     // 250 msec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 4 ;        
	G(S).ModemOptions.MaxRingPeriod = 0x56 ;           // for 14Hz lower limit
	G(S).ModemOptions.RingCadenceOn = 24 ;                     // 240  msec 
	G(S).ModemOptions.AnsToneValidTime = 30 ;          // 300 msec 
	G(S).ModemOptions.BlackListFlag = 0 ;                      // disabled
	G(S).ModemOptions.BlackListPeriod = 6 ;            // 60 min
	G(S).ModemOptions.HookFlashTime = 20 ;                     // 200 ms 
	G(S).ModemOptions.MinBlindDialPause = 4 ;          // 4 sec 
	G(S).ModemOptions.MaxBlindDialPause = 4 ;          // 4 sec
	G(S).ModemOptions.MaxDialPauseTime = 5 ;           // 5 sec 
	G(S).ModemOptions.TxLevel = 9 ;                            // -9 dB
	G(S).ModemOptions.DelayAttempts = 0 ;
	G(S).ModemOptions.FilterIndex = 3 ;                        // 276-504
	G(S).ModemOptions.DialToneThreshold = 35 ;         // -35 dB
	G(S).ModemOptions.DissableABCD = 1 ;          // ABCD dialing not permited 
	G(S).ModemOptions.RestrictDial = 1 ;          // Validate dialstring
	G(S).ModemOptions.MinNoAnsTimeOut = 30 ;           // 5 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 60 ;           // 60 sec 
	G(S).ModemOptions.ILimitOffset = 0x37EB;           // set to 53mA
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Portugal") ) ; 
}

/****************************************************************
Routine : ll_init_ire
Description :   Initialize Ireland specific parameters.
Revision History :
	Initials        Date            Change
	ATV             4/20/94         Initial
*****************************************************************/
void ll_init_ire ( void )
{
	ll_init_uk ( ) ;
	G(S).ModemOptions.RingCadenceOn = 15 ;                     // 150  msec 
	G(S).ModemOptions.PulseTimeBreak = 67 ;            // 67 ms
	G(S).ModemOptions.MaxCallAttempts = 4 ; 
	G(S).ModemOptions.BlackListPeriod = 6 ;            // 60 min
	G(S).ModemOptions.MinNoAnsTimeOut = 10 ;           // 10 sec
	G(S).ModemOptions.MaxNoAnsTimeOut = 39 ;           // 39 sec
	G(S).ModemOptions.AnsToneValidTime = 9 ;           // 90 msec 
	G(S).ModemOptions.PulseDialPermited = 0 ;          // 
	G(S).ModemOptions.FilterIndex = 2 ;                        // 363-502
	G(S).ModemOptions.RxLevel = 33 ;                           
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Ireland") ) ; 
}

/****************************************************************
Routine : ll_init_hon
Description :   Initialize Hong Kong specific parameters.
Revision History :
	Initials        Date            Change
	ATV             10/20/96                Initial
*****************************************************************/
void ll_init_hon ( void )
{
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Hong Kong") ) ; 
}

/****************************************************************
Routine : ll_init_can
Description :   Initialize Canada specific parameters.
Revision History :
	Initials        Date            Change
	ATV             3/8/97          Initial
*****************************************************************/
void ll_init_can ( void )
{
	ll_init_na ( ) ;
	// If blacklisting is required uncomment following lines 
//      G(S).ModemOptions.BlackListFlag = 1 ;      // enabled
//      G(S).ModemOptions.MaxCallAttempts = 5 ;
//      G(S).ModemOptions.TroubleCallDelay = 0 ;   // no delay
//      G(S).ModemOptions.ErroneousCallDelay = 0 ; // no delay
//      G(S).ModemOptions.BlackListPeriod = 6 ;    // 60 min
//      G(S).ModemOptions.ErrorCallWeight = 8 ;    // equivalent to 8 attempts
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Canada") ) ;
}

/****************************************************************
Routine : ll_init_mex
Description :   Initialize Mexico specific parameters.
Revision History :
	Initials        Date            Change
	ATV             03/17/97        Initial
*****************************************************************/
void ll_init_mex ( void )
{
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Mexico") ) ;
}

/****************************************************************
Routine : ll_init_ind
Description :   Initialize India specific parameters.
Revision History :
	Initials        Date            Change
	ATV             03/17/97        Initial
*****************************************************************/
void ll_init_ind ( void )
{
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("India") ) ;
}

/****************************************************************
Routine : ll_init_vie
Description :   Initialize Vietnam specific parameters.
Revision History :
	Initials        Date            Change
	ATV             03/17/97        Initial
*****************************************************************/
void ll_init_vie ( void )
{
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Vietnam") ) ;
}

/****************************************************************
Routine : ll_init_phi
Description :   Initialize Philippines specific parameters.
Revision History :
	Initials        Date            Change
	ATV             03/17/97        Initial
*****************************************************************/
void ll_init_phi ( void )
{
	G(S).ModemOptions.DCOffset1 = 735;		// 300 ohm VI
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Philippines") ) ;
}

/****************************************************************
Routine : ll_init_gre
Description :   Initialize Greece specific parameters.
Revision History :
	Initials        Date            Change
	ATV             05/07/97        Initial
*****************************************************************/
void ll_init_gre ( void )
{
	ll_init_uk ( ) ;
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Greece") ) ;
}

/****************************************************************
Routine : ll_init_hun
Description :   Initialize Hungary specific parameters.
Revision History :
	Initials        Date            Change
	ATV             08/21/97        Initial
*****************************************************************/
void ll_init_hun ( void )
{
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Hungary") ) ;
}

/****************************************************************
Routine : ll_init_tur
Description :   Initialize Turkey specific parameters.
Revision History :
	Initials        Date            Change
	ATV             08/21/97        Initial
*****************************************************************/
void ll_init_tur ( void )
{
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Turkey") ) ;
}
/****************************************************************
Routine : ll_init_sa
Description :   Initialize South Africa specific parameters.
Revision History :
	Initials        Date            Change
	ATV             09/24/97        Initial
*****************************************************************/
void ll_init_sa ( void )
{
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("South Africa") ) ;
}

/****************************************************************
Routine : ll_init_europe
Description :   Initialize EUROPE for TBR21
*****************************************************************/
void ll_init_europe ( void )
{
	ll_init_uk();
	G(S).ModemOptions.PulseDialPermited = 0 ;  // pulse dialing allowed
	G(S).ModemOptions.DialToneValidTime = 2 ; 
	G(S).ModemOptions.BlackListFlag = 1 ;
	G(S).ModemOptions.LoopViRly = 0 ;	// Off
	G(S).ModemOptions.LoopLimitRly = 1 ;               // On
	G(S).ModemOptions.LineGainBLSB = 0x1a ; // current limit BOM1 ON
	G(S).ModemOptions.PulseTimeBreak = 72 ; // 0x48
	G(S).ModemOptions.DtmfLevel = 7 ;
	G(S).ModemOptions.DialToneHole = 0xb0 ;
	G(S).ModemOptions.RingCountNullDelay = 0x3c ;
	G(S).ModemOptions.BusyPassCount = 4 ;
	G(S).ModemOptions.DialToneThreshold = 0x26 ;
	G(S).ModemOptions.PulseTonePermited = 1 ;
	G(S).ModemOptions.ComplexImpedance = 2 ;	// Complex Impedance
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Europe") ) ;
}

/****************************************************************
	HARDWARE SPECIFIC PARAMETER INITIALIZATION
*****************************************************************/

#endif //HOMOL

/****************************************************************
Routine : x_init_international
Description :
	Initialize all homologation parameters. Each parameter 
	initialized to default  value and, if required, modified 
	to country specific requirement.
Parameters in : none
Parameters out : none
Revision History :
	Initials        Date            Change
	AV              2/2/95          Initial
*****************************************************************/
void x_init_international ( void ) 
{
	// Default parameter values
	G(S).ModemOptions.PulseTimeMake = 36 ; 
	G(S).ModemOptions.PulseTimeBreak = 64 ; 
	G(S).ModemOptions.PulseDigitPattern = 1 ;          // normal

    if( G( dp_daa_is_perseus ))
    {
	    G(S).ModemOptions.DtmfLevel = 4 ;                  // -4 db
    }
    else
    {
	    G(S).ModemOptions.DtmfLevel = 6 ;                  // -6 db
    }

	G(S).ModemOptions.MinDtmfDialSpeed = 50 ;          // 50 msec
	G(S).ModemOptions.MaxDtmfDialSpeed = 150 ;         // 150 msec 
	G(S).ModemOptions.CallProgressThreshold = 43 ;     // -43 dB
	G(S).ModemOptions.DialToneDelay = 0 ;      
	G(S).ModemOptions.DialToneHole = 50 ;              // 50 msec
	G(S).ModemOptions.RingCountNullDelay = 60 ;        //  6 sec
	G(S).ModemOptions.MinAutoAnsRingCount = 1 ;        
	G(S).ModemOptions.MaxAutoAnsRingCount = 15 ;       
	G(S).ModemOptions.MinRingPeriod = 0x12 ;           // for 68Hz upper limit
	G(S).ModemOptions.MaxRingPeriod = 0x50 ;           // for 15Hz lower limit
	G(S).ModemOptions.RingCadenceOn = 14 ;             // (140 + 50) msec 
	G(S).ModemOptions.RingCadenceOff= 30 ;             // 600 msec
	G(S).ModemOptions.MinBusyCadenceOn = 0 ;           // standard busy det
	G(S).ModemOptions.MaxBusyCadenceOn = 0 ;           // standard busy det
	G(S).ModemOptions.BusyPassCount = 4 ;
	G(S).ModemOptions.MinBusyCadenceOff = 0 ;          // standard busy det
	G(S).ModemOptions.MaxBusyCadenceOff = 0 ;          // standard busy det
	G(S).ModemOptions.ContinuousBusyDetect = 0 ;       // disabled 
	G(S).ModemOptions.AnsToneValidTime = 10 ;          // 100 msec 
	G(S).ModemOptions.BlackListFlag = 0 ;              // disabled
	G(S).ModemOptions.MaxCallAttempts = 5 ; 
	G(S).ModemOptions.TroubleCallDelay = 1 ;           // 1 min
	G(S).ModemOptions.IneffectiveCallDelay = 1 ;       // unused parameter
	G(S).ModemOptions.ErroneousCallDelay = 1 ;         // 1 min        
	G(S).ModemOptions.BlackListPeriod = 12 ;           // 120 min
#if defined OCP	
	G(S).ModemOptions.LoopSenseWaitTime = 30 ;          // sensing enabled
#else
	G(S).ModemOptions.LoopSenseWaitTime = 0 ;          // sensing disabled
#endif 
	G(S).ModemOptions.CallingToneFlag = 1 ;            // required, disable perimited
	G(S).ModemOptions.BlindDialPermited = 1 ;          // permited
	G(S).ModemOptions.BusyDetectDisable = 1 ;          // permited
	G(S).ModemOptions.GuardToneType = 0 ;              // not present & adjustable
	G(S).ModemOptions.BellModePermited = 1 ;           // permited
	G(S).ModemOptions.OffHookRestrict = 0 ;            // unrestricted 
#ifdef VENUS_WORLD_DAA
	G(S).ModemOptions.OffhookShuntTime = 0 ;           //disabled
#else
	G(S).ModemOptions.OffhookShuntTime = 5 ;           
#endif
	G(S).ModemOptions.HookFlashTime = 50 ;             // 500 ms 
	G(S).ModemOptions.MinBlindDialPause = 2 ;          // 2 sec 
	G(S).ModemOptions.MaxBlindDialPause = 65 ;         // 65 sec 
	G(S).ModemOptions.MinNoAnsTimeOut = 35 ;           // 35 sec 
	G(S).ModemOptions.MaxNoAnsTimeOut = 65 ;           // 65 sec 
	G(S).ModemOptions.MinDialPauseTime = 2 ;           // 2 sec 
	G(S).ModemOptions.MaxDialPauseTime = 65 ;          // 65 sec 
	G(S).ModemOptions.MinNoCarrierDisc = 1 ;           // 100 msec 
	G(S).ModemOptions.MaxNoCarrierDisc = 255 ;         // 25.5 sec 
#if defined(COPERNICUS)
	G(S).ModemOptions.TxLevel = 14 ;
#elif defined(CS_MODEM)
	G(S).ModemOptions.TxLevel = 14 ;
#elif defined( VENUS_XIRCOM_DAA )
	G(S).ModemOptions.TxLevel = 12 ;
#else
	G(S).ModemOptions.TxLevel = 10 ;
#endif
	G(S).ModemOptions.TadRxGain = 3 ;                  // 15 db gain 

#if defined(FULLWAVERING)
    if( !G( dp_daa_is_perseus ))
    {
	    G(S).ModemOptions.RingDetectType = 1 ;             // Full wave
    }
#else
	G(S).ModemOptions.RingDetectType = 0 ;             // Half wave 
#endif
	G(S).ModemOptions.DelayAttempts = 1 ;// delay effective after 1st reattempt 
	G(S).ModemOptions.MaxAttempts = 255 ;              // not applicable 
	G(S).ModemOptions.ErrorCallWeight = 1 ;    // equivalent to 1 attempts
	G(S).ModemOptions.DialToneValidTime = 25 ; // 2.5 sec 
	G(S).ModemOptions.DialBusyDetect = 0 ;             // disabled 
	G(S).ModemOptions.DtmfToneDiff = 2 ;               // 2 db 
	G(S).ModemOptions.LocalPhoneDetect = 0 ;   // on
	G(S).ModemOptions.PulseDialPermited = 0 ;  // pulse dialing allowed 
	G(S).ModemOptions.FilterIndex = 1 ;                // 310-485
	G(S).ModemOptions.DialToneThreshold = 43 ; // -43 dB
	G(S).ModemOptions.DissableABCD = 0 ;       // ABCD dialing permited 
	G(S).ModemOptions.MaxCommaPauseTime = 30 ; // 30 sec
	G(S).ModemOptions.TadTxLevel = 10 ;
	G(S).ModemOptions.RxLevel = 37 ;                   // 37+6=43 db 
	G(S).ModemOptions.ToneThreshold = 43 ;             // -43 db 
	G(S).ModemOptions.DialToneLevel = 0 ;              // 0  
	G(S).ModemOptions.FaxRxLevel = 43 ;                // - 43 db  
	G(S).ModemOptions.PulseTonePermited = 0 ;  // permited
	G(S).ModemOptions.RingImpedanceRly = 1 ;   // On, default should be high

	G(S).ModemOptions.LoopViRly = 0 ;          // Off BOM2 it was 0
	G(S).ModemOptions.LoopLimitRly = 0 ;       // Off BOM1,set  high on ouput
	G(S).ModemOptions.ComplexImpedance = 0 ;   // Mercury internal components

#if defined( OPTICAL_DAA )
	// for PC Card Optical DAA
	G(S).ModemOptions.LineGainAMSB = 0x00 ;    // Mercury Gain - CIOCA MSB
	G(S).ModemOptions.LineGainALSB = 0x08 ;    // Mercury Gain - CIOCA LSB
	G(S).ModemOptions.LineGainBMSB = 0x00 ;    // Mercury Gain - CIOCB MSB
	G(S).ModemOptions.LineGainBLSB = 0x00 ;    // Mercury Gain - CIOCB LSB
#elif defined( VENUS_WORLD_DAA )
	G(S).ModemOptions.LineGainAMSB = 0x00 ;    // Mercury Gain - CIOCA MSB
	G(S).ModemOptions.LineGainALSB = 0x0c ;    // Mercury Gain - CIOCA LSB
	G(S).ModemOptions.LineGainBMSB = 0x6b ;    // Mercury Gain - CIOCB MSB
	G(S).ModemOptions.LineGainBLSB = 0x1e ;    // Mercury Gain - CIOCB LSB
#elif defined( VENUS_ERICSSON_DAA )
	G(S).ModemOptions.LineGainAMSB = 0x00 ;    // Mercury Gain - CIOCA MSB
	G(S).ModemOptions.LineGainALSB = 0x82 ;    // Mercury Gain - CIOCA LSB
	G(S).ModemOptions.LineGainBMSB = 0x6b ;    // Mercury Gain - CIOCB MSB
	G(S).ModemOptions.LineGainBLSB = 0x1e ;    // Mercury Gain - CIOCB LSB
#elif defined( VENUS_XIRCOM_DAA )
	G(S).ModemOptions.LineGainAMSB = 0x8a ;    // Mercury Gain - CIOCA MSB
	G(S).ModemOptions.LineGainALSB = 0x00 ;    // Mercury Gain - CIOCA LSB
	G(S).ModemOptions.LineGainBMSB = 0xf2 ;    // Mercury Gain - CIOCB MSB
	G(S).ModemOptions.LineGainBLSB = 0x00 ;    // Mercury Gain - CIOCB LSB
#else
	G(S).ModemOptions.LineGainAMSB = 0x88 ;    // Mercury Gain - CIOCA MSB
	G(S).ModemOptions.LineGainALSB = 0x80 ;    // Mercury Gain - CIOCA LSB
	G(S).ModemOptions.LineGainBMSB = 0x6b ;    // Mercury Gain - CIOCB MSB
	G(S).ModemOptions.LineGainBLSB = 0x1e ;    // Mercury Gain - CIOCB LSB
#endif
	G(S).ModemOptions.TadLineGainBMSB = 0x13 ; // Mercury Gain - CIOCB MSB in TAD 
											// mode 6 dB higher
	G(S).ModemOptions.FdspLineGainBMSB = 0xcd ;// Mercury Gain - CIOCB MSB in FDSP 
											// mode 3 dB higher

	G(S).ModemOptions.RestrictDial = 0 ;       // Ignore invalid dial modifiers 
	G(S).ModemOptions.CallerIdType = 0  ;      // NA
	G(S).ModemOptions.CTR21Enable = FALSE ;	// Disable CTR21 by default
	G(S).ModemOptions.DCOffset1 = 111;		// Generic VI
	G(S).ModemOptions.ILimitOffset = 0;
	strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("North America") ) ; 

	// we need to read serial eeprom to identify which country we need
	// to initialize the parameter table. if there is no serial eeprom
	// we would init CountryId to Japan.
#ifdef HOMOL
	G(S).ModemOptions.CountryId =  read_eeprom ( COUNTRY_ID ) ;

	switch ( G(S).ModemOptions.CountryId )
	{
		case AUSTRALIA :                
			ll_init_aust () ;       
			break ;

		case BELGIUM :          
			ll_init_bel () ;        
			break ;

		case DENMARK :          
			ll_init_den () ;        
			break ;

		case FINLAND :          
			ll_init_fin () ;        
			break ;

		case FRANCE :           
			ll_init_fra () ;
			break ;

		case GERMANY :          
			ll_init_ger () ;
			break ;

		case NETHERLANDS :              
			ll_init_neth () ;
			break ;

		case ITALY :            
			ll_init_ita () ;
			break ;

		case NEWZEALAND :               
			ll_init_nz () ; 
			break ;

		case NORWAY :           
			ll_init_nor () ;
			break ;

		case SPAIN :            
			ll_init_spa () ;
			break ;

		case SWEDEN :           
			ll_init_swe () ;
			break ;

		case SWITZERLAND :              
			ll_init_swi () ;
			break ;

		case UK :               
			ll_init_uk () ;
			break ;

		case AUSTRIA :          
			ll_init_aus () ;
			break ;

		case JAPAN :            
			ll_init_jpn () ;
			break ;

		case PRC :              // People's Republic of China
			strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("PRC") ) ; 
			break ;

		case KOREA :            
			ll_init_kor () ;
			break ;

		case MALAYSIA :         
			ll_init_mal () ;
			break ;

		case SINGAPORE :                
			ll_init_sng () ;
			break ;

		case TAIWAN :           
			G(S).ModemOptions.MinBlindDialPause = 3 ;          // 3 sec
			strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Taiwan") ) ; 
			break ;

		case THAILAND :         
			ll_init_tha () ;
			break ;

		case INDONESIA :                
			strcpy_24 ( G(S).ModemOptions.CountryIdStr, AD24("Indonesia") ) ; 
			break ;

		case PORTUGAL :         
			ll_init_por () ;
			break ;

		case IRELAND :          
			ll_init_ire () ;
			break ;

		case HONGKONG :         
			ll_init_hon () ;
			break ;

		case CANADA :           
			ll_init_can () ;
			break ;

		case MEXICO :
			ll_init_mex () ;
			break ;

		case INDIA :
			ll_init_ind () ;
			break ;

		case VIETNAM :
			ll_init_vie () ;
			break ;

		case PHILIPPINES :
			ll_init_phi () ;
			break ;

		case GREECE :
			ll_init_gre () ;
			break ;

		case HUNGARY :
			ll_init_hun () ;
			break ;

		case TURKEY :
			ll_init_tur () ;
			break ;

		case SOUTHAFRICA :
			ll_init_sa () ;
			break ;

		case EUROPE :
			ll_init_europe();	// init TBR21 countries for generic build
			break ;
		case NA :               // North America - USA, Canada
		default : 
			G(S).ModemOptions.CountryId = NA;	// default to USA 
			break ;
	}

#endif  // end HOMOL

#if defined(CS_MODEM)
	G(S).ModemOptions.CountryId =  NA;
#endif

	if ( G(S).ModemOptions.CountryId == NA )
		ll_init_na () ;

#ifdef HOMOL
	// mah 10/13 - ported from Apollo
	// parameters for TBR21 countries
	if ( G(S).ModemOptions.CTR21Enable == TRUE )
		ll_init_tbr21 () ;
#endif  // end HOMOL

	G(S).ModemOptions.TransmitLevel = G(S).ModemOptions.TxLevel ; 

    if( G( dp_daa_is_perseus ))
    {
	    G(S).ModemOptions.LoopSenseWaitTime = 50 ;   //500 ms DLG detection
	    if ( G(S).ModemOptions.ComplexImpedance & 0x02 ) //complex
	    {
		    G(S).ModemOptions.DtmfLevel += 11 ; // Increase DTMF level
		    G(S).ModemOptions.TxLevel += 4 ;	// Increase Tx Level
		    G(S).ModemOptions.TadTxLevel += 4 ;	// Increase Tad Tx Level
	    }
    }

	// following protection is required since the dsp does
	// not generate dtmf tones if the level value actually 
	// written to dsp is less than 2.
	if ( G(S).ModemOptions.DtmfLevel < 2 ) 
		G(S).ModemOptions.DtmfLevel = 2 ;
}

/****************************************************************
Routine : x_init_international_default 
Description : Initialize parameters that need to be set to default
	even when the test mode is on. 
Parameters in : none
Parameters out : none
Revision History :
	Initials        Date            Change
	AV              2/2/95          Initial
*****************************************************************/
void x_init_international_default ( void ) 
{
	G(S).ModemOptions.GuardTone = G(S).ModemOptions.GuardToneType ;
	if ( G(S).ModemOptions.CallingToneFlag == 0 )      // not required
		G(S).ModemOptions.DataCallingTone = 0 ;            //disabled
	if ( ( G(S).ModemOptions.BellModePermited == 0 )   // not permited
		|| (( G(S).ModemOptions.CountryId != NA ) 
		&& ( G(S).ModemOptions.CountryId != CANADA)))	// non NA country 
		G(S).ModemOptions.CommStdSetting = 0;                      // CCITT
	if ( G(S).ModemOptions.NoAnsTimeOut < G(S).ModemOptions.MinNoAnsTimeOut ) 
		G(S).ModemOptions.NoAnsTimeOut = G(S).ModemOptions.MinNoAnsTimeOut ; 
	if ( G(S).ModemOptions.NoAnsTimeOut > G(S).ModemOptions.MaxNoAnsTimeOut ) 
		G(S).ModemOptions.NoAnsTimeOut = G(S).ModemOptions.MaxNoAnsTimeOut ; 

	G(S).ModemOptions.WaitDialTimeOut = G(S).ModemOptions.NoAnsTimeOut ; 

	switch ( G(S).ModemOptions.CountryId )
	{
		case AUSTRALIA :
			G(S).ModemOptions.BlindDialPause = 4 ;		// 4 sec
			G(S).ModemOptions.DtmfDialSpeed = 95 ;		// 95 msec
			break ;
		case DENMARK :  
			G(S).ModemOptions.DtmfDialSpeed = 90 ;		// 90 msec
			break ;
		case FINLAND :  
			G(S).ModemOptions.NoCarrierDisc = 2 ;
			break ;
		case FRANCE :
			G(S).ModemOptions.NoAnsTimeOut = 140 ;		// 140 sec
			G(S).ModemOptions.NoCarrierDisc = 2 ;
			G(S).ModemOptions.DtmfDialSpeed = 80 ;		// 80 msec
			G(S).ModemOptions.WaitDialTimeOut = 10 ; 
			break ;
		case GERMANY :  
			G(S).ModemOptions.DtmfDialSpeed = 90 ;             // 90 msec
			break ;
		case NETHERLANDS :      
			G(S).ModemOptions.DtmfDialSpeed = 90 ;             // 90 msec
			break ;
		case SWEDEN :           
			G(S).ModemOptions.DtmfDialSpeed = 70 ;		// 70 msec
			break ;
		case NORWAY :           
			G(S).ModemOptions.NoCarrierDisc = 9 ;
			break ;
		case NEWZEALAND :               
			G(S).ModemOptions.NoCarrierDisc = 15 ;
			break ;
		case SPAIN :    
			G(S).ModemOptions.WaitDialTimeOut = 11 ; 
			break ;
		case UK :
			G(S).ModemOptions.BlindDialPause = 4 ;		// 4 sec
			G(S).ModemOptions.DtmfDialSpeed = 85 ;		// 85 msec
			break ;
		case JAPAN :            
			G(S).ModemOptions.DataCallingTone = 0 ;		// disabled
			break ;
		case IRELAND :  
			G(S).ModemOptions.BlindDialPause = 4 ;		// 4 sec
			G(S).ModemOptions.DtmfDialSpeed = 70 ;		// 70 msec
			break ;
		case PORTUGAL : 
			G(S).ModemOptions.NoCarrierDisc = 2 ;
			G(S).ModemOptions.InactivityTimer = 4 ;     // 4 minutes
			break ;
		case NA :               // USA, Canada 
			G(S).ModemOptions.DataCallingTone = 0 ;		// disabled
			break ;
	}

	if ( G(S).ModemOptions.DtmfDialSpeed < G(S).ModemOptions.MinDtmfDialSpeed ) 
		G(S).ModemOptions.DtmfDialSpeed = G(S).ModemOptions.MinDtmfDialSpeed ; 
	if ( G(S).ModemOptions.DtmfDialSpeed > G(S).ModemOptions.MaxDtmfDialSpeed ) 
		G(S).ModemOptions.DtmfDialSpeed = G(S).ModemOptions.MaxDtmfDialSpeed ; 
	if ( G(S).ModemOptions.BlindDialPause < G(S).ModemOptions.MinBlindDialPause )
		G(S).ModemOptions.BlindDialPause = G(S).ModemOptions.MinBlindDialPause ;
	if ( G(S).ModemOptions.BlindDialPause > G(S).ModemOptions.MaxBlindDialPause )
		G(S).ModemOptions.BlindDialPause = G(S).ModemOptions.MaxBlindDialPause ;
	if ( G(S).ModemOptions.DialPauseTime < G(S).ModemOptions.MinDialPauseTime )
		G(S).ModemOptions.DialPauseTime = G(S).ModemOptions.MinDialPauseTime ;
	if ( G(S).ModemOptions.DialPauseTime > G(S).ModemOptions.MaxDialPauseTime )
		G(S).ModemOptions.DialPauseTime = G(S).ModemOptions.MaxDialPauseTime ;

}

/****************************************************************
Routine : x_init_modem_options
Description :
	Initialize all modem options to factory defaults.  Take
	into account what country we're in.

	This is called by at&f and other places where we
	need to get back to the default state.  At power up
	this function is called and then the options are overwritten
	by the EEPROM values.
*****************************************************************/
void x_init_modem_options ( void )
{
	#if defined(CS_4)
	G(S).ModemOptions.AutoAnswer = 1 ; // changed default to 1 for CS_4
	#else
	G(S).ModemOptions.AutoAnswer = 0 ; // changed default to 0 for WinFax
	#endif
	G(S).ModemOptions.RingCount = 0 ;  // initialize # of rings detected to 0 
	G(S).ModemOptions.EscapeChar = 43;                 // default is +
	G(S).ModemOptions.CRChar = 13;
	G(S).ModemOptions.LFChar = 10;
	G(S).ModemOptions.BSChar = 8;
	G(S).ModemOptions.BlindDialPause = 2 ;             // 2 sec
	G(S).ModemOptions.NoAnsTimeOut = 140;	// 140 sec for 2 v90 + 1 v34
	G(S).ModemOptions.DialPauseTime = 2;
#ifdef VPCM_SERVER
	G(S).ModemOptions.NoCarrierDisc = 40;
#else
	G(S).ModemOptions.NoCarrierDisc = 20;
#endif
	G(S).ModemOptions.DtmfDialSpeed = 95;
	G(S).ModemOptions.EscapeGuardTime = 50;
	G(S).ModemOptions.InactivityTimer = 0;     // disabled
	G(S).ModemOptions.DataCallingTone = 1;     //default is enable
	G(S).ModemOptions.DialLineRate = 0; // s37
	G(S).ModemOptions.AutoRate = 1;
	G(S).ModemOptions.AutoMode = 1;
#if !defined(CS_MODEM)		
	G(S).ModemOptions.CellPhoneType = read_eeprom( CELL_PHONE_TYPE ) ;
#endif
	G(S).ModemOptions.bV34Enable = 1 ; //default V34 enabled

#if defined(CS_V110)
	G(S).ModemOptions.V110Speed = 0;		// default to disable v.110
#endif

#if defined(CS_MODEM)
	G(S).ModemOptions.Dummy25 = 0;	//default to 0
	G(S).ModemOptions.Dummy26 = 0; // default monitor retrain to off
  #ifdef IWF_DATA
	G(S).ModemOptions.BlindDialPermited = 1;
  #endif
#endif

	// 56K options
#if defined(VENUS_AT_CS) || defined(CS_MODEM)
	G(S).ModemOptions.Rate56K = 200;			// enable 56K by default - s38
	G(S).ModemOptions.DigitalLoss56K = 0;		// u-law by default
	G(S).ModemOptions.Dummy20 = 0;				// no special ec values
	G(S).ModemOptions.Dummy23 = 0;				// no special ec values
#else
	G(S).ModemOptions.Rate56K = 1;				// enable 56K by default - s38
	G(S).ModemOptions.DigitalLoss56K = 7;		// 0db dig loss w/ RBS for 56k
#endif
	G(S).ModemOptions.Enabled56K = FALSE;      // enabled if negotiated by v.8bis
	G(S).ModemOptions.NewCoperRing = 0;
	G(S).ModemOptions.EchoConstel = 0;
	G(S).ModemOptions.EchoRam = 0;
	G(S).ModemOptions.RamEchoAddrLow = 0;
	G(S).ModemOptions.RamEchoAddrHigh = 0;

#if !defined(K56FLEX) && !defined(VPCM_CLIENT) && !defined(VPCM_SERVER)
	G(S).ModemOptions.Rate56K = 0;     // disable 56K V.8bis negotiation
#endif

	// Set AT global flags to factory default
	G(S).ModemOptions.ExtResultCode = 1 ;
	G(S).ModemOptions.ConnectDteRate = 0 ;
	G(S).ModemOptions.AdjustBPS = 0;
	G(S).ModemOptions.AdaptiveAnswer = FALSE;
	G(S).ModemOptions.DialToneDetect = 1 ;
	G(S).ModemOptions.BusyToneDetect = 1 ;
	G(S).ModemOptions.DialMode = 1 ;                   // Tone Dial enabled
	G(S).ModemOptions.EchoToDTE = 1 ;
	G(S).ModemOptions.ResultCode = 0 ;
	G(S).ModemOptions.ResultCodeFormat = 1 ;   // text format
	G(S).ModemOptions.CDControl = 1 ;
	G(S).ModemOptions.DTRControl = 2 ;         // DTR drop line when off
	#if defined(CLAUDIA)
	G(S).ModemOptions.DSRControl = 1 ;
	#else
	G(S).ModemOptions.DSRControl = 0 ;
	#endif
	G(S).ModemOptions.GuardTone = 0 ;
	G(S).ModemOptions.SpeakerVolume = 2 ;              // medium
	G(S).ModemOptions.SpeakerControl = 1 ;
	G(S).ModemOptions.NegotiationFallback = 7 ;
	G(S).ModemOptions.FeatureNegotiation = 7 ;
	G(S).ModemOptions.V42 = V42_LAPM_MNP_BUFFER ;
    G(S).ModemOptions.Compression = MNP_COMP | V42BIS_COMP;

#if defined (VPCM_CLIENT)
	G(S).ModemOptions.VpcmOption = 2;	// enable V.90 - S109
#endif // VPCM_CLIENT

#if defined(MODEM_Z80)
	// don't allow V.44/V.92 unless V92 capable
	if (1 & z80_v92cap)
#endif // MODEM_Z80
	{
#if defined (VPCM_CLIENT)
		G(S).ModemOptions.VpcmOption = 18;	// enable V.90, V.92 - S109
#endif // VPCM_CLIENT
#if defined(V44)
# if defined(CS_4)
		G(S).ModemOptions.Compression |= (V44_COMP); // no smart mode
# else
		G(S).ModemOptions.Compression |= (V44_COMP|V44S_COMP); // smart mode
# endif
		v44_set_default_params();
#endif // V44
	}

#if defined (VPCM_SERVER)
	G(S).ModemOptions.VpcmOption = 1;	// enable V90 & K56flex - S109
#endif	// VPCM_SERVER

	G(S).ModemOptions.CommStdSetting = 1; // default is Bell
	G(S).ModemOptions.V23Reverse = 0; // default is not reverse mode
	G(S).ModemOptions.FlowControl = HW_FLOWCTRL ;
	G(S).ModemOptions.Sanity = 0x23 ; // sanity check for modem options

	G(S).ModemOptions.MimicFIFOrate = 0 ; // default for 130kbps max.
	G(S).ModemOptions.wHayes95 = 0;

#if defined(EXT_MODEM) || defined(COPERNICUS) || \
	defined(CS_MODEM) || defined( USB_MODEM ) || !defined( MODEM_Z80 )
	// No sleep for these platforms
	G(S).ModemOptions.SleepModeTimer = 0 ;
#else
	G(S).ModemOptions.SleepModeTimer = 60;
#endif

	// set up the default voice command options
	G(S).ModemOptions.CallerId = 0 ;
	G(S).ModemOptions.VoiceVolumeControl = 128 ;       // nominal volume
	G(S).ModemOptions.VoiceMicGainControl = 128 ;      // nominal volume
	G(S).ModemOptions.VoiceLineSelection = 0 ;
	G(S).ModemOptions.RingbackGoAway = 50 ;
	G(S).ModemOptions.RingbackNeverCame = 10 ;
	G(S).ModemOptions.SilenceSensitivity = 128 ;
	G(S).ModemOptions.SilenceDetectTimer = 50 ;
	G(S).ModemOptions.VoiceCompression = VCM_LINEAR16 ;
	G(S).ModemOptions.VoiceSamplingRate = VSM_8KHZ ;
	G(S).ModemOptions.BeepToneTimer = 100 ;
	G(S).ModemOptions.DistinctiveRing = 0 ;
	G(S).ModemOptions.RingReportInterval = 0 ;
	G(S).ModemOptions.SpeakerPhoneMode = 0 ; //default is FDX aggressive 
	G(S).ModemOptions.SynRingVolume = 10; //default is -10Db
	G(S).ModemOptions.SynRingFreq = 0 ;
	G(S).ModemOptions.VoiceEventMask = 0xFFFF ;	// default with all events
	G(S).ModemOptions.DteInactivityTimer = 0 ;	//disable by default
	G(S).ModemOptions.HangupControl = 0 ;		//disable by default

	G(S).ModemOptions.DsvdVoiceCallFirst = FALSE ;
#ifdef V80
	G(S).ModemOptions.V8_Answer = 1 ;  // v8 monitor ci tone enabled
	G(S).ModemOptions.V8_Orig = 1 ;    // v8 orig tone enabled
#else
	G(S).ModemOptions.V8_Answer = 0 ;  // v8 monitor ci tone disabled
	G(S).ModemOptions.V8_Orig = 0 ;    // v8 orig tone disabled
#endif	//V80
	G(S).ModemOptions.V8_CI_Octet = 0xC1 ;     // v8 ci call function octet
	G(S).ModemOptions.V8bis = 1 ;		// enable DCE-controlled V.8bis neg

	// enable power control, shaping. 6db power drop checking.
	// Local power drop set to 4.
	G(S).ModemOptions.wV34Option = V34_DEFAULT_OPTION ;

	G(S).ModemOptions.wV34MSEScale = V34_MSE_SCALE ;
	G(S).ModemOptions.wV34RxSymbol = V34_RX_SYMBOL_RATE ;
	G(ETC_mode) = 0;						//default to ETC mode off
	G(S).ModemOptions.ETC = 0;				//default #ETC is disabled.
	G(S).ModemOptions.CellConnectMsg = 0;	// cell connect message disabled

	G(S).ModemOptions.PulseDial20pps = 0x08;
#if defined( MODEM_Z80 ) || defined(MODEM_ARM)
# if defined(MNP_OFRAMES_BY_REFERENCE)
#  if defined(CS_4)
	G(S).ModemOptions.MNPMaxOctets = (MAX_QMP_DATA_BYTES - 6);
#  else
	G(S).ModemOptions.MNPMaxOctets = 128-6 ; // default to 128 ?
#  endif // !CS_4
# else
	// default to 64 if NOT by reference
	G(S).ModemOptions.MNPMaxOctets = 64;
# endif // !HDLC_FRAMES_BY_REFERENCE
#else
	G(S).ModemOptions.MNPMaxOctets = 250 ;	// default to 256
#endif
	G(S).ModemOptions.BreakControl = 5 ;
	G(S).ModemOptions.BreakLength = 3 ;        // 300ms
	G(S).ModemOptions.DisableFallForward = 0 ;        // enabled as defautl
	G(S).ModemOptions.AdaptiveAnswer = FALSE ; // disabled

	if ( G(x_test_mode_on) == FALSE )
		x_init_international () ;
#if defined(V80) && !defined(CS_MODEM)
	io_sync_power_up_init () ;
#endif
#ifdef V8BIS
	v8bis_power_up_init () ;
#endif

	x_init_international_default () ;

	G(dp_dial_string)[0] = 0 ;

#ifdef V25TER
	at_v25ter_options_init();
#endif	//V25TER
}

/****************************************************************
Routine : ll_init_modem_variables
Description :
	Power-Up initialization.  This function is called
	by UART_init() on first time powerup.

	Initialize variables with their factory default
	settings, then overwrite with anything saved
	in nonvolatile memory.

*****************************************************************/
void ll_init_modem_variables ( void )
{
	G(x_modem_state) = MS_INITIALIZING ; // Initializing all the other Tasks
	G(x_line_rate) = MR_14400 ;
	G(x_dial_residual) = MR_OK ;
	G(x_modem_ec) = EC_NO ;
	G(x_fax_state) = FAX_IDLE ;
	G(x_modem_mode) = MODEM_DATA ;
	G(x_test_mode_on) = FALSE ;
	G(x_minute_count)  = 0;
	G(x_minute_timer)  = x_current_time() ;
	G(x_minute_timer_long)  = x_current_time_long() ;
	G(x_dma_xfer) = FALSE ;

	// all these parameters should not be reset by an at&f and atz
	G(S).ModemOptions.CountryId = NA ; // North America
	G(S).ModemOptions.DataBits = 8 ;
	G(S).ModemOptions.Parity = 0 ;
	G(S).ModemOptions.StopBits = 0 ;
#if defined(MODEM_Z80)
	G(S).ModemOptions.DteRate = DTE_19200;
#else
	G(S).ModemOptions.DteRate = DTE_115200;
#endif
#if defined(V92_MODEM_ON_HOLD)
	G(S).ModemOptions.MHOptions = 0;
#endif
	G(dp_CallWaitingEnable) = FALSE;
	G(x_parity_mask) = 0xFF ;

	G(S).ModemOptions.SpeakerphoneMicMute = 0x7fff ;   // 0 db mic mute
    if( G( dp_daa_is_perseus ))
    {
	    G(S).ModemOptions.SpeakerphoneMicGain = 0x9000 ;   // +6 db mic gain
    }
    else
    {
	    G(S).ModemOptions.SpeakerphoneMicGain = 0x8ab8 ;   // +3 db mic gain
    }

	// load factory default settings
	x_init_modem_options () ;
#if defined (CLASS2_FAX) || defined (CLASS20_FAX)
	io_fax_c2_init ();        // Initialize class2 FAX function
#endif
#if !defined(CS_MODEM)
	// load settings if saved in eeprom
	ll_load_modem_options () ;
	at_init_diagnostics () ;	// Initialize diagnostics params on power up
#endif
}

#if !defined(CS_MODEM)
/****************************************************************
	Function : ll_load_modem_options () ;
	Load the user options from EEPROM
	called from at_z and at initialization.

	layout of EEPROM (512x8) is (see llglob_d.h) :

							     ADDR
		+--------------------+
		|         o          |     0
		|     Plug&Play      |
		|         o          |
		+--------------------+
		|       country      |    141 or 253 (or 0 if no PnP)
		+--------------------+
		|       speaker      |    142 (254 for Dolphin)
		+--------------------+
		|       active       |    143 (255 for Dolphin)
		+--------------------+
		|         o          |    Starts on 16 byte page boundary
		|         o          |          (144 for Barracuda)
		|     user data      |          (256 for Dolphin)
		|         o          |
		|         o          |
		+--------------------+
		|   user checksum    |    144 + MAX_OPTION_LENGTH (also % 16)
		+--------------------+
		|         o          |    user chksum+1
		|       phone1       | 
		|         o          |
		+--------------------+
		|         o          |    ???+(sizeof(PHONE) = 36)
		|       phone2       |
		|         o          |
		+--------------------+
		|         o          |   ...
		|       phone3       | 
		|         o          |
		|         o          |    250
		|       phonen       |
		|         o          |
		+--------------------+
		|   Homologation     |  staring from HOMOL_START_LOC
		|   Parameters       |
		+--------------------+

	Currently the checksum protects only the user area.

*****************************************************************/
BOOL ll_load_modem_options ( void )
{
#if defined(CS_4)
	return FALSE ;
#else	// !CS_4
	byte MySReg[MAX_OPTION_LENGTH] ;
	byte slen ;
	word sloc ;
	byte chksum ;
	byte bdata ;
	byte *bptr ;
	byte *toptr ;

# if defined( PNPSTRING )
	{
		// Build the PnP enumeration sequence
		// from the serial eeprom.
		PnP_buildit ( FALSE ) ;
	}
# endif

	bdata = read_eeprom ( USER_ACTIVE ) ;

	ddputs_24_nnl(AD24("EEdata..."));
	if ( bdata == 0x55 )    // user data is present
	{
		ddputs_24_nnl(AD24("present..."));
		bptr = MySReg ;
		chksum = 0 ;
		sloc = USER_DATA ;

# if defined (EEPROM_X24C04)
		// -----------------------------------------------
		//                      Uses Sequential Reads
		// -----------------------------------------------
#  if (USER_DATA + MAX_OPTION_LENGTH) <= 0xff
		// all data is before the page break
		read_eeprom_pg ( sloc, bptr, MAX_OPTION_LENGTH ) ;
#  elif USER_DATA > 0xff
		// all data is after the page break
		read_eeprom_pg ( sloc, bptr, MAX_OPTION_LENGTH ) ;
#  else
		// data spans the page break - two partitions to read.
		// read data before the page break
		read_eeprom_pg ( sloc, bptr, 0xff-USER_DATA ) ;

		// read data after the page break
		sloc += (0xff-USER_DATA) ;
		bptr += (0xff-USER_DATA) ;
		read_eeprom_pg ( sloc, bptr, MAX_OPTION_LENGTH-(0xff-USER_DATA) ) ;
#  endif
		bptr = MySReg ;
		slen = MAX_OPTION_LENGTH ;
		while ( slen-- )
		{
			chksum += *bptr++ ;
		}
# else
		// -----------------------------------------------
		//                      Random Reads
		// -----------------------------------------------
		slen = MAX_OPTION_LENGTH ;
		while ( slen-- )
		{
			*bptr = read_eeprom ( sloc++ ) ;
			chksum = (byte) (chksum + *bptr++);
		}
# endif
		// test the stored checksum against calculated one
		bdata = read_eeprom ( USER_CHKSUM ) ;
		if ( bdata == chksum )
		{
			ddputs_24_nnl(AD24("Chksums OK\r\n"));
			bptr = MySReg ;
			toptr = (byte *)(&G(S)) ;
			for ( slen=0; slen<MAX_OPTION_LENGTH; slen++ )
			{
				*toptr++ = *bptr++;
			}

			if ( G(x_test_mode_on) == FALSE )
			{
				if ( G(S).ModemOptions.CountryId == JAPAN )
					G(S).ModemOptions.TxLevel = G(S).ModemOptions.TransmitLevel ;
			}

			return ( TRUE ) ;
		}
		write_eeprom ( USER_ACTIVE, 0x00 ) ;
	}
	return ( FALSE ) ;
#endif //CS_4
}
#endif //CS_MODEM

#if !defined(CS_MODEM)
/****************************************************************
	Function : ll_save_modem_options ( ) ;
	Store the user options
	called from at_and_w
	see eeprom layout above:
*****************************************************************/
BOOL ll_save_modem_options ( void )
{
#if defined(CS_4)
	return FALSE ;
#else
	byte slen ;
	word sloc ;
	byte chksum ;
	byte *bptr ;

	write_eeprom ( USER_ACTIVE, 0x00 ) ;
	slen = MAX_OPTION_LENGTH ;
	sloc = USER_DATA ;
	chksum = 0 ;
	bptr = (byte *)(&G(S)) ;
# if defined (EEPROM_X24C04)
	while ( slen-- )
	{
		chksum += *bptr++ ;
	}
	bptr = (byte *)(&G(S)) ;
	for ( slen=0; slen < MAX_OPTION_LENGTH/16; slen++ )
	{
		write_eeprom_pg ( sloc, bptr, 16 ) ;
		sloc += 16 ;
		bptr += 16 ;
	}
# else
	while ( slen-- )
	{
		chksum = (byte) (chksum + *bptr);
		write_eeprom ( sloc++, *bptr++ ) ;
	}
# endif
	write_eeprom ( USER_CHKSUM, chksum ) ;
	write_eeprom ( USER_ACTIVE, 0x55 ) ;

	if ( ll_load_modem_options () )
	{
		return ( TRUE ) ;
	}
	return ( FALSE ) ;
#endif //CS_4
}

/*******************************************************************
	load number given by the index.
********************************************************************/
byte load_number ( word index, byte *buffer )
{
	word i = 0;
	word idx;

	idx = (word) (PHONE_ONE + index * (MAX_PHONE_LENGTH + 2));
	if ( read_eeprom ( idx++ ) != 0x55 )
	{
		buffer[0] = 0 ;
		return ( FALSE ) ;
	}

	while (i < MAX_PHONE_LENGTH)
	{
		if ((buffer[i++] = read_eeprom (idx++)) == 0) break;
	}
	return ( TRUE ) ;
}

/*******************************************************************
	save a number in the eeprom
*******************************************************************/
byte store_number ( word index, byte *number )
{
	word i = 0;
	word idx;
	byte temp [MAX_PHONE_LENGTH] ;

	idx = (word) (PHONE_ONE + index * (MAX_PHONE_LENGTH + 2));

	// The next line tells us that we do have numbers stored in eeprom
	write_eeprom (idx++, 0x55);

	while ( (number[i] != 0) && (i < MAX_PHONE_LENGTH) )
	{
#ifdef V25TER
		switch ( number[i] )
		{
			case '0' :
			case '1' :
			case '2' :
			case '3' :
			case '4' :
			case '5' :
			case '6' :
			case '7' :
			case '8' :
			case '9' :
			case 'A' :
			case 'B' :
			case 'C' :
			case 'D' :
			case '#' :
			case '*' :
			case ',' :
			case '"' :
			case 'T' :
			case 'P' :
			case 'W' :
			case '@' :
			case '!' :
			case ';' :
#endif	//V25TER
		write_eeprom (idx++, number[i++]);
#ifdef V25TER
			break;
		default :
			i++;
			break;
		}
#endif	//V25TER
	}
	write_eeprom (idx, 0);

	return ( load_number ( index, temp ) ) ;
}
#endif //CS_MODEM
