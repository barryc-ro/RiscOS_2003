/*name and version number:@(#)arm_emi.c	1.1*/
/*date of get: 		  01/12/01 11:49:19*/
/*date of delta:	  01/12/01 11:24:59*/
/*******************************************************************************
 * Copyright (c) 2000 Vitana Corporation.
 * Copyright (c) 2000 Lucent Technologies Inc.
 * 
 ******************************************************************************/
 

/******************************************************************************
 *
 * File:     $RCSfile$
 *
 * Description: This file binds the data structure pointers found in the
 *              globals.h and globals.c files to specific Trident register
 *              addresses.
 *
 *
 * Revision: $Revision$
 * Date:     $Date$
 *
 */

#include "llglob_d.h"
#include "arm_glob.h"
#include "allglobs.h"

/**********************************************************************
 *
 * Name: InitEMI
 *
 * Description: function to create ptr's to all the Trident peripherals
 *
 * Arguments: N/A
 *
 * Returns: N/A
 *
 */ 

void InitEMI (void)
{

// First, load up all of the register bases
    EMI_Ptr = (StructEMI *) EMI_BASE;               // make a pointer to the EMI registers
    RPCM_Ptr = (StructRPCM *) RPCM_BASE;            // make a pointer to the Reset and Power registers
	PIC_Ptr = (StructPIC *) PIC_BASE;               // make a pointer to the PIC registers
    DMAC_Ptr = (StructDMAC *) DMAC_BASE;            // make a pointer to the DMAC registers
    PPI1_Ptr = (StructPPI *) PPI1_BASE;             // make a pointer to the PPI registers
//    PPI2_Ptr = (StructPPI *) PPI2_BASE;             // make a pointer to the PPI registers
//    SSI_Ptr = (StructSSI *) SSI_BASE;               // make a pointer to the SSI registers
//    KEYBD_Ptr = (StructKEYBD *) KEYBD_BASE;          // make a pointer to the ASCC registers
//    ASCC0_Ptr = (StructASCC *) ASCC0_BASE;          // make a pointer to the ASCC registers
    ASCC1_Ptr = (StructASCC *) ASCC1_BASE;          // make a pointer to he ASCC registers
//    ASCC2_Ptr = (StructASCC *) ASCC2_BASE;          // make a pointer to the ASCC registers
//    SIM0_Ptr = (StructSIM *) SIM0_BASE;             // make a pointer to the ASCC registers
//    SIM1_Ptr = (StructSIM *) SIM1_BASE;             // make a pointer to the ASCC registers
//    IRDA_Ptr = (StructASCC *) IRDA_BASE;            // make a pointer to the ASCC registers
    PWM_Ptr = (StructPWM *) PWM_BASE;               // make a pointer to the Timer registers
//    RTC_Ptr = (StructRTC *) RTC_BASE;               // make a pointer to the RTC registers
//    ADC_Ptr = (StructADC *) ADC_BASE;               // make a pointer to the ADC registers
//    ICP_Ptr = (StructICP *) ICP_BASE;               // make a pointer to the ICP registers


#if defined(YS)
	// DP chip select setup
	EMI_Ptr->EMI_CS2_CONFIG = ( EMI_CS_CONFIG_UBE_ON
								| EMI_CS_CONFIG_BS_8
								| EMI_CS_CONFIG_SET_OFF
								| EMI_CS_CONFIG_HS_1
								| EMI_CS_CONFIG_WS_2
								| EMI_CS_CONFIG_ENABLE);
	EMI_Ptr->EMI_CS2_BASE = ( EMI_BASE_SIZE_4K | ((APO_BASE >> 12) << 4) );

	// Mosquito chip select
	EMI_Ptr->EMI_CS3_CONFIG = ( EMI_CS_CONFIG_UBE_ON
								| EMI_CS_CONFIG_BS_8
								| EMI_CS_CONFIG_SET_OFF
								| EMI_CS_CONFIG_HS_1
								| EMI_CS_CONFIG_WS_2
								| EMI_CS_CONFIG_ENABLE);
	EMI_Ptr->EMI_CS3_BASE = ( EMI_BASE_SIZE_4K | ((MOS_BASE >> 12) << 4) );

	// Mosquito 16550 base pointer
	MOS_Ptr = (Struct16550 *) MOS_BASE;
#endif

    APO_Ptr = (StructAPO *) APO_BASE;               // make a pointer to the EMI registers
}

