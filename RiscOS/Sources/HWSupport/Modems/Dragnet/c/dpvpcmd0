/*name and version number:@(#)dpvpcmd0.c	1.13*/
/*date of get: 		  12/15/00 10:10:30*/
/*date of delta:	  11/30/00 16:57:44*/
/****************************************************************
File :  dpvpcmd0.c
Description :
	Venus VPCM Erom download

Procedures Contained :
		dp_download_PCM_EROM()

Revision History :
	Initials    Date        Change
	MAH			12/30/97
*****************************************************************/

#include "llglob_d.h"

#include "dpglob.h"
//msm// #include "z80glob.h"
#include "z80flash.h"

#if defined(VPCM_CLIENT) || defined(VPCM_SERVER)

#if defined(VPCM_SERVER)
# if defined(CS_4)
#  include "c4vped0.h"
# elif defined(CS_MODEM)
#  include "csvped0.h"
# else
#  include "dpvped0.h"
# endif
#else
  // Client
# if defined(DRAGNET2)
#  include "dpdrds0.h"
# else
#  include "dpvper0.h"
# endif
#endif

#include "allglobs.h"

// File			inc client	inc server	array
//----------------------------------------------------
// dpvpcmd0.c	dpvper0.h	dpvped0.h	wVP_EROM0
// dpvpcmd1.c	dpvper1.h	dpvped1.h	wVP_EROM1
// dpvpcmd2.c	dpvper2.h	dpvped2.h	wVP_EROM2
// dpvpcmd3.c	dpvpv80.h	dpvpv8d.h	wVP_V8Wk0
//				dpvpde0.h	dpvpded.h	wVP_DE000
// dpvpcmd4.c	dpvpwk0.h	dpvpwkd.h	wVP_VenWk0

#if !defined(DRAGNET2)
#if defined(COMPRESS_TABLES)
extern const word wVP_EROM1[] ;
extern const word wVP_EROM2[] ;
#else
extern const word wVP_EROM1[ (12*1024)>>1 ] ;
extern const word wVP_EROM2[ (8*1024)>>1  ] ;
#endif
#endif // !DRAGNET2

/****************************************************************
Routine : vpcm_download_eram()

  Download ERAM for phase 3/4/datamode
  for V.90.  (Client or central site.)

*****************************************************************/
void vpcm_download_eram(void)
{
#if !defined(CS_MODEM)
#if defined(DRAGNET2)
	// DRAGNET2 has no "ERAM" but we'll use this opportunity to
	// download the .v90ds1 section.
	x_debug_msg("download .v90ds1");
	DOWNLOAD_DSP(wVP_Vds10);
	x_debug_msg("done downloading .v90ds1");
#else
	x_debug_msg("vpcm - download eram ") ;
	// Download to DSP External RAM
	DOWNLOAD_DSPk56(wVP_EROM0, BBR0);
	DOWNLOAD_DSPk56(wVP_EROM1, BBR1);
	DOWNLOAD_DSPk56(wVP_EROM2, BBR2);
#endif

#if defined(VPCM_SERVER)
	// Download RX patch for QMP
	#if defined(SA_QMP_RX_PATCH)
	sa_dspInitQMP( V90_MODE );
	#endif

	// This lets the DSP access the RAM
	// with its code and data pointers going
	// to where we have RAM set up.
	DP_WRITE_XYPAGE();
	DP_WRITE_IOC();
#endif  //VPCM_SERVER
#endif  //!CS_MODEM
}
#endif // VPCM_CLIENT || VPCM_SERVER
