/*name and version number:@(#)serv_par.h	1.1*/
/*date of get: 		  09/08/00 16:22:23*/
/*date of delta:	  09/08/00 15:19:07*/

/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - serv_par.h
 *
 * $Revision$
 *
 * $Date$
 *
 * function(s)
 *
 *      - Implements the services parameters header module of the
 *        NETBRICKS family product.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    NETBRICKS Services		                        |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-2000 by NETBRICKS SA          |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

				/* License number */

#define LICENSE_NBER                "LICENSE ARCHIVES-NETBRICKS"

/*-------------------------------------------------------------------------*/

	/*
		Compiler :

		TC, BORLANDC, MSC, IT, IT68, LA, IC86, IC86_V3, MT68, CC, GCC, C_TMS320,
		CCA_HP, CC68, HC29K, ULTRAC, GNU68, C_TI_MVP, ACC_SPARC, MT68_SPARC,
		HIGHC, IC960CA, CC_DIAB, ACORN_CC, SDS68K, CC_WATCOM_TNT, CC_WATCOM
		JPS_THUMB_CC, MT96, CC_ST20, VIP_P2, VIP_EM
	*/

#define C_COMPILER                  HIGHC

/*-------------------------------------------------------------------------*/

	/*
		OS :

		MS_DOS, VRTX, UNIX, PSOS, PSOS86, PSOS_PLUS, OS2, RTC86, AMX, KOS, MTR86,
		WINDOWS_NT, OS_IOPOS, IMECOM_OS, SCEPTRE, VXWORKS, LYNXOS, CHORUS,
		OS9, MVP_ME, OSE_OS68, MS_WINDOWS, WINDOWS_95, RISC_OS, RTEMS,
		OMNITEL_OS, NUCLEUS_PLUS, OS_ST20, OS_RTXC, OS_PRECISE_MQX
	*/

#define OS 				OS_PRECISE_MQX

	/*
		OS release :

		necessary for AMX     : I86_V2, I86_V3, I386_V1, MC68000_V2, MC68000_V3, AMXPPC32
		necessary for VXWORKS : VXWORKS_5_0, VXWORKS_5_1, VXWORKS_5_2
		necessary for RISC_OS : RISCOS_3_5, RISCOS_3_6, RISCOS_3_7
	*/

#define OS_RELEASE                  ???

/*-------------------------------------------------------------------------*/

	/*
		Target OM_CPU :

		MOTOROLA_1, MOTOROLA_2, MOTOROLA_4,
		MC68000, MC68010, MC68020, MC68030, MC68040, CPU32, MC680X0,
		MC68302, MC68360, CPU_MPC860
		INTEL_1, INTEL_2, INTEL_4, INTEL_8
		I80188, I80186, I80386, I80486, PENTIUM, I80XXX,
		I960, I960CA, I960KA, I960KB, I960J
		SPARC, AMD29000, HP_PA_2, HP_PA_4, TMS320, TI_MVP,
		ARM_600, ARM_700, ARM_7500, ARM_SA
		ST20_CPU
		CPU_PRIVATE
	*/

#define OM_CPU                      ARM_700

	/*
		ALIGNMENT:
		A default value is assigned to this parameter according to the OM_CPU
		value, in services.h.
		Defining its value here will override the default value.
		Values: 1, 2, 4, 8, 16, ...
	*/

/*#define ALIGNMENT					1, 2, 4, 8, ... */

	/*
		OM_BYTE_ORDER:
		Specifies the order of bytes into words:
			- OM_LSB_MSB: Little Endian (LSB first)
			- OM_MSB_LSB: Big Endian    (MSB first)
		A default value is assigned to this parameter according to the OM_CPU
		value, in services.h.
		Defining its value here will override the default value.
	*/

/*#define OM_BYTE_ORDER			OM_LSB_MSB or OM_MSB_LSB */

/*-------------------------------------------------------------------------*/

	/*
		Code Type :

		OM_RELOCATABLE or OM_PIC (Position-Independent Code)
	*/

#define OM_CODE_TYPE				OM_RELOCATABLE	/* Code type */

/*-------------------------------------------------------------------------*/

							/* TIMER MANAGEMENT */

#define TIMER_IT                    ON             /* Timer IT handler (ON) (strongly recommended)
													   or timer process (OFF) (only if no HW timer tick) */

/*-------------------------------------------------------------------------*/

							/* CONFIGURATION PARAMETERS */

#define RESET_CONFIG                ON	            /* Reset configuration allowed (ON) or not (OFF) */
#define CONFIG_UPDATE_MANAGEMENT    OFF             /* Configuration update management (ON) or not (OFF) */
#define CONFIG_DELAY				OFF				/* Delaying send of configuration message : ON or OFF */

/*-------------------------------------------------------------------------*/

							/* OPTIMIZATION OPTIONS */

#define OPTIMIZATION                SPEED           /* was MIXED Optimization : SPEED, SIZE, MIXED */

/*-------------------------------------------------------------------------*/

							/* ASSERT : During debugging */

#define ASSERT                      ON              /* Assert option ON or OFF */

/*-------------------------------------------------------------------------*/

#define BLOCK_COUNTING              ON              /* Block counting facilities : ON or OFF */

/*-------------------------------------------------------------------------*/

					/* MESSAGE AND BUFFER CACHE FOR OPTIMIZATION */

#define MESSAGE_CACHE               ON              /* Message cache ON or OFF */
#define BUFFER_CACHE                ON              /* Buffer cache ON or OFF */
#define TIMER_CELL_CACHE            ON              /* Timer cell cache ON or OFF */

/*-------------------------------------------------------------------------*/

					/* CONGESTION CONTROL OPTION */

#define MESSAGE_CONG_CONTROL        ON              /* Message congestion control ON or OFF */
#define BUFFER_CONG_CONTROL         ON              /* Buffer congestion control ON or OFF */

/*-------------------------------------------------------------------------*/

					/* DATA AREA IN THE MESSAGE (recommended) */

#define MESSAGE_SEND_DATA           ON              /* Information data in message */

/*-------------------------------------------------------------------------*/

	/*
		Equipment :

		TE (terminal), NT2 (network termination 2), LE (Local Exchange),
		NT1 or NT1_PLUS, AN (Access Network), V5_GW (V5 AN + LE)
	*/

#define EQUIPMENT                   TE

/*-------------------------------------------------------------------------*/

						/* SIMULATION OPTIONS */

#define SIMULATION                  OFF             /* Simulation   : ON, OFF */

#if SIMULATION == ON
#   define SIM_ANALYSER             ON              /* Analyser     : MUST BE ON in this case */
#   define SIM_BUILDER              ON              /* Builder      : MUST BE ON in this case */
#else
#   define SIM_ANALYSER             OFF             /* Analyser     : ON or OFF as wanted */
#   define SIM_BUILDER              OFF             /* Builder      : MUST BE OFF in this case */
#endif

/*-------------------------------------------------------------------------*/

						/* INTERNAL AUDIT PARAMETER */

#define MESSAGE_AUDIT               ON              /* Message audit ON or OFF */

#if MESSAGE_AUDIT == ON
#   define MESSAGE_AUDIT_SIZE       1000             /* Size of the message audit array */
#   define MESSAGE_AUDIT_DATA_LGTH  16              /* Size of the message or buffer data stored in the audit array */
#	define MESSAGE_AUDIT_DATA_ONLY 	ON				/* Useful data only in audit */
#else
#   define MESSAGE_AUDIT_SIZE       0               /* Size of the message audit array */
#endif

#define MESSAGE_CAPTURE             OFF              /* Message capture ON or OFF */

/*-------------------------------------------------------------------------*/

							/* REVISION STRINGS */

#define REVISION_STRING             OFF             /* Insert Revision String information into sources (ON/OFF) */

/*-------------------------------------------------------------------------*/

	/*
		Number of blocks in the "temporary memory partition" list
		(The list is to be stored in the 'i_service' structure)
	*/

#define OM_TMP_MEM_PARTITION		OFF				/* generate the code (ON) or not (OFF) */
#define OM_TMP_BLOCKS_NB			0				/* max nb of blocks in the list */

/*-------------------------------------------------------------------------*/

	/*
		OM_BUFFER_SEGMENTATION: ON/OFF
		enable (ON) or disable (OFF) the buffer segmentation/reassembly
		functions (om_segment_into_buffers() and om_reassemble_buffers()).

		This allows SM to send large configuration structures within a linked
		list of buffers if they do not fit into one buffer only.

		Requires OM_TMP_MEM_PARTITION to be set to ON.
	*/

#define OM_BUFFER_SEGMENTATION		OFF

/*-------------------------------------------------------------------------*/

						/* ADDRESSING RANGES */

typedef unsigned char               nai_t;          /* Network Acess ID */
typedef unsigned char               sapi_t;         /* Service Access Point ID */
typedef unsigned char               add_t;          /* Connection ID */
typedef unsigned char               chani_t;       	/* channel ID */
typedef unsigned char               ent_id_t;       /* Entity ID */
typedef unsigned char               code_t;         /* Primitive code */
typedef unsigned char               priority_t;     /* Priority value */

typedef unsigned long               timer_val_t;    /* Value of a timer */

/*-------------------------------------------------------------------------*/

						/* MEMORY PARTITION ID */

#define PID_BASE                    0               /* Base of fixed length partition ID */
#define PID_MESSAGE                 PID_BASE        /* Communication message partition ID*/
#define PID_BUFFER                  PID_BASE+1      /* Buffer partition ID */
#define PID_TIMER                   PID_BASE+2      /* Timer-cell partition ID */
#define MX_PID                      3               /* Maximum number of partition ID */

#define PID_VL                      255             /* variable length partition ID */

/*-------------------------------------------------------------------------*/

/*EOF*/
