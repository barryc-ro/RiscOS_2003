/*name and version number:@(#)cellular.h	1.27*/
/*date of get: 		  09/06/00 16:58:48*/
/*date of delta:	  02/25/97 14:08:41*/
/****************************************************************************
/
/	Copyright 1993, 1994. All Rights Reserved by:
/	    AT&T
/	    (908) 957-3072
/
/
/	This document contains material confidential to AT&T its contents must
/	not be revealed, used or disclosed to anyone or company with out
/	written permission by AT&T.  The information contained herein is solely
/	for the use of AT&T.
/
/	File:		ac00cell.h
/
/	Module Version:	1.00
/
/	Function:	This file contains the #defines and structure 
/			definitions for the ACU code.
/
/	Product:	ACU core code
/
/	History:	ac00cell.h v2.09
/
/	Created:	01/18/94
/
/
/		---------------------------------------------------------
/		-			Modifications			-
/		---------------------------------------------------------
/
/        Author & Date:	EYL
/        Description:
/        Reason:
/
*****************************************************************************/
void cellular_bg(void);
void cell_init(void);
void enable_cell_filter(void);
void cell_disable_system_int ( void );
void cell_enable_system_int ( void );
void cell_disable_dc_i_int ( void );
void cell_enable_dc_i_int ( void );
void cell_disable_dc_io1_int ( void );
void cell_enable_dc_io1_int ( void );
void cell_dc_cntrl1_low ( void );
void cell_dc_cntrl1_high ( void );
void cell_dc_cntrl2_low ( void );
void cell_dc_cntrl2_high ( void );
byte cell_dc_i_read ( void );
byte cell_dc_io1_read ( void );
void cell_init_io ( void );
byte send_cell_cmd ( word ) ;
byte cell_send_motorola_cmd ( word ) ;
byte dp_int_regread ( byte ) ;
void dp_int_regwrite ( byte, byte ) ;
byte cell_dc_io2_read ( void ) ;
byte cell_state_online ( void ) ;

#ifdef DSP_MARS /*****************************************/

//Config DC_CNTRL1(bio2) as output,  and DC_I(bio3), DC_IO1(bio4),
//DC_IO2(bio1) as input
#define DC_CNTRL1_INIT dp_regwrite(0xba, (byte)((dp_regread(0xba)&0xe1)|0x04))
#define DC_CNTRL1_INPUT		// dummy
#define DC_CNTRL1_OUTPUT 	// dummy
#define DC_CNTRL1_LOW dp_regwrite(0xbb, (byte)(dp_regread(0xbb)|0x04))
#define DC_CNTRL1_HIGH  dp_regwrite(0xbb, (byte)(dp_regread(0xbb)&(~0x04)))
#define DC_CNTRL1_SET 		// dummy

#define DC_I_INIT 		// dummy
#define DC_I_LOW dp_regwrite(0xbb, (byte)(dp_regread(0xbb)&(~0x08)))
#define DC_I_HIGH dp_regwrite(0xbb, (byte)(dp_regread(0xbb)|0x08))
#define DC_I_INPUT dp_regwrite(0xba, (byte)(dp_regread(0xba)&(~0x08)))
#define DC_I_OUTPUT dp_regwrite(0xba, (byte)(dp_regread(0xba)|0x08))
#define DC_I_INT_ENABLE dp_bamil_rbc &= ~(0x08)
#define DC_I_INT_DISABLE dp_bamil_rbc |= 0x08
#define DC_I_INT_SET dp_regwrite(0xbc, dp_bamil_rbc)
#define DC_I_INT_CLR dp_regwrite(0xbd, 0x08)
#define DC_I_INT_CLR_RESET dp_regwrite(0xbd, ~0x08)
#define DC_I_INT_READ (DP_READ_DSP_REG(0xbb)&0x08)
#define DC_I_READ (dp_regread(0xbb)&0x08)

#define DC_IO1_SYSTEM_INT_ENABLE dp_bamil_rd7 &= 0xbf
#define DC_IO1_SYSTEM_INT_SET dp_regwrite( 0xd7, dp_bamil_rd7 )

#define DC_IO1_INT_RISE_EDGE dp_regwrite(0xbf,(byte)(dp_regread(0xbf)|(0x10)))
#define DC_IO1_INT_ENABLE dp_bamil_rbc &= ~(0x10)
#define DC_IO1_INT_DISABLE dp_bamil_rbc |= 0x10
#define DC_IO1_INT_SET dp_regwrite(0xbc, dp_bamil_rbc)
#define DC_IO1_INT_CLR dp_regwrite(0xbd, 0x10)
#define DC_IO1_INT_CLR_RESET dp_regwrite(0xbd, ~0x10)
#define DC_IO1_INT_LEVEL DP_READ_DSP_REG(0xbb)&0x10
#define DC_IO1_LEVEL dp_regread(0xbb)&0x10

#define DC_CNTRL2_INIT		// dummy
#define DC_CNTRL2_INPUT		// dummy
#define DC_CNTRL2_OUTPUT	dp_regwrite(0xdb, (byte)(dp_regread(0xdb)|(0x02)))
#define DC_CNTRL2_HIGH dp_regwrite(0xdc, (byte)(dp_regread(0xdc)&(~0x02)))
#define DC_CNTRL2_LOW dp_regwrite(0xdc, (byte)(dp_regread(0xdc)|0x02))
#define DC_CNTRL2_SET		// dummy

#define DC_IO2_INIT 		// dummy
#define DC_IO2_INPUT 		// dummy
#define DC_IO2_OUTPUT  		// dummy
#define DC_IO2_READ (dp_regread(0xbb)&0x02)

#else // not DSP_MARS *****************************************/
#ifdef VENUS /*****************************************/

//Config DC_CNTRL1 and DC_CNTRL2 as output,  and DC_I, DC_IO1, DC_IO2 as
//input
#define DC_CNTRL1_INIT dp_regwrite(0xba, (byte)((dp_regread(0xba)&0xc1)|0x0a))
#define DC_CNTRL1_INPUT		// dummy
#define DC_CNTRL1_OUTPUT 	// dummy
#define DC_CNTRL1_LOW dp_regwrite(0xbb, (byte)(dp_regread(0xbb)|0x08))
#define DC_CNTRL1_HIGH  dp_regwrite(0xbb, (byte)(dp_regread(0xbb)&(~0x08)))
#define DC_CNTRL1_SET 		// dummy

#define DC_I_INIT 		// dummy
#define DC_I_LOW dp_regwrite(0xbb, (byte)(dp_regread(0xbb)&(~0x20)))
#define DC_I_HIGH dp_regwrite(0xbb, (byte)(dp_regread(0xbb)|0x20))
#define DC_I_INPUT dp_regwrite(0xba, (byte)(dp_regread(0xba)&(~0x20)))
#define DC_I_OUTPUT dp_regwrite(0xba, (byte)(dp_regread(0xba)|0x20))
#define DC_I_INT_ENABLE dp_bamil_rbc &= ~(0x20)
#define DC_I_INT_DISABLE dp_bamil_rbc |= 0x20
#define DC_I_INT_SET dp_regwrite(0xbc, dp_bamil_rbc)
#define DC_I_INT_CLR dp_regwrite(0xbd, 0x20)
#define DC_I_INT_CLR_RESET dp_regwrite(0xbd, ~0x20)
#define DC_I_INT_READ (DP_READ_DSP_REG(0xbb)&0x20)
#define DC_I_READ (dp_regread(0xbb)&0x20)

#define DC_IO1_SYSTEM_INT_ENABLE dp_bamil_rd7 &= 0xbf
#define DC_IO1_SYSTEM_INT_SET dp_regwrite( 0xd7, dp_bamil_rd7 )

#define DC_IO1_INT_RISE_EDGE dp_regwrite(0xbf,(byte)(dp_regread(0xbf)|(0x10)))
#define DC_IO1_INT_ENABLE dp_bamil_rbc &= ~(0x10)
#define DC_IO1_INT_DISABLE dp_bamil_rbc |= 0x10
#define DC_IO1_INT_SET dp_regwrite(0xbc, dp_bamil_rbc)
#define DC_IO1_INT_CLR dp_regwrite(0xbd, 0x10)
#define DC_IO1_INT_CLR_RESET dp_regwrite(0xbd, ~0x10)
#define DC_IO1_INT_LEVEL DP_READ_DSP_REG(0xbb)&0x10
#define DC_IO1_LEVEL dp_regread(0xbb)&0x10

#define DC_CNTRL2_INIT		// dummy
#define DC_CNTRL2_INPUT		// dummy
#define DC_CNTRL2_OUTPUT	// dummy
#define DC_CNTRL2_HIGH dp_regwrite(0xbb, (byte)(dp_regread(0xbb)&(~0x02)))
#define DC_CNTRL2_LOW dp_regwrite(0xbb, (byte)(dp_regread(0xbb)|0x02))
#define DC_CNTRL2_SET		// dummy

#define DC_IO2_INIT 		// dummy
#define DC_IO2_INPUT 		// dummy
#define DC_IO2_OUTPUT  		// dummy
#define DC_IO2_READ (dp_regread(0xbb)&0x04)

#define DC_CALLBACK_TIME_CELL 	// dummy
#define DC_CALLBACK_TIME_DEFAULT // dummy

#else // not VENUS *****************************************

#define DC_CNTRL1_INIT dp_regwrite(0x29, (byte)((dp_regread(0x29)&0xfc)|0x01))
#define DC_CNTRL1_INPUT		// dummy
#define DC_CNTRL1_OUTPUT	// dummy
#define DC_CNTRL1_HIGH dp_reg2b |= 0x08
#define DC_CNTRL1_LOW  dp_reg2b &= ~0x08
#define DC_CNTRL1_SET  dp_regwrite(0x2b, dp_reg2b)

#define DC_I_INIT 		// dummy
#define DC_I_INPUT 		// dummy
#define DC_I_INT_ENABLE dp_bamil_rbc &= ~(0x20)
#define DC_I_INT_DISABLE dp_bamil_rbc |= 0x20
#define DC_I_INT_SET dp_regwrite(0xbc, dp_bamil_rbc)
#define DC_I_INT_CLR dp_regwrite(0xbd, 0x20)
#define DC_I_INT_CLR_RESET dp_regwrite(0xbd, ~0x20)
#define DC_I_INT_READ (DP_READ_DSP_REG(0xbb)&0x20)
#define DC_I_READ (dp_regread(0xbb)&0x20)
#define DC_I_INIT 		// dummy
#define DC_I_INPUT dp_regwrite(0x11,(byte)(dp_regread(0x11)&(~0x20)))
#define DC_I_INT_READ (DP_READ_DSP_REG(0x10)&0x20)
#define DC_I_READ (dp_regread(0x10)&0x20)

#define DC_IO1_SYSTEM_INT_ENABLE	// dummy
#define DC_IO1_SYSTEM_INT_SET		// dummy
#define DC_IO1_INT_RISE_EDGE		// dummy

#define DC_IO1_INT_ENABLE dp_camil_r2e&=~RTSN
#define DC_IO1_INT_DISABLE dp_camil_r2e|=RTSN
#define DC_IO1_INT_SET dp_regwrite(0x2e, dp_camil_r2e)
#define DC_IO1_INT_CLR (dp_regwrite(0x2f,0x84))
#define DC_IO1_INT_CLR_RESET 		// dummy
#define DC_IO1_INT_LEVEL ((DP_READ_DSP_REG(0x2f)^RTSLVL)&RTSLVL)
#define DC_IO1_LEVEL ((dp_regread(0x2f)^RTSLVL)&RTSLVL)

#define DC_CNTRL2_INIT		// dummy
#define DC_CNTRL2_INPUT dp_regwrite(0x11, (byte)(dp_regread(0x11)&(~0x40)))
#define DC_CNTRL2_OUTPUT dp_regwrite(0x11, (byte)((dp_regread(0x11)&0xbf)|0x40))
#define DC_CNTRL2_LOW dp_regwrite(0x10, (byte)((dp_regread(0x10)&0xbf)|0x40))
#define DC_CNTRL2_HIGH dp_regwrite(0x10, (byte)(dp_regread(0x10)&(~0x40)))
#define DC_CNTRL2_SET		// dummy

#define DC_IO2_INIT 		// dummy
#define DC_IO2_INPUT dp_regwrite(0x11, (byte)(dp_regread(0x11)&(~0x80)))
#define DC_IO2_OUTPUT dp_regwrite(0x11, (byte)((dp_regread(0x11)&0x7f)|0x80))
//#define DC_IO2_READ (DP_READ_DSP_REG(0x10)&0x80)
#define DC_IO2_READ (dp_regread(0x10)&0x80)


#endif // VENUS *****************************************
#endif // DSP_MARS *****************************************

#ifndef MODEM_Z80
#ifdef APOLLO_NT
#define DC_CALLBACK_TIME_CELL 
#define DC_CALLBACK_TIME_DEFAULT
#else
#define DC_CALLBACK_TIME_CELL VMODEM_Start_Timer ( 2 )
#define DC_CALLBACK_TIME_DEFAULT VMODEM_Start_Timer ( 5 )
extern void  STDCALL VMODEM_Start_Timer ( int ) ;
#endif
#endif

/* cellular background states */
typedef enum {
	CELL_STATE_OFFLINE,
	//CELL_STATE_SLEEP,
	//CELL_STATE_RX,
	CELL_STATE_DIAL_SEND,
	CELL_STATE_ONLINE
} CELL_STATE ;

#define MTRL_SEND_MASK	0x8000
#define	MOTOROLA_MUTE_ENABLE	0x0003
#define	MOTOROLA_MUTE_DISABLE	0x0005
#define	MOTOROLA_CLR	0x0012  
#define	MOTOROLA_SEND	0x0013  
#define	MOTOROLA_END	0x0017  
#define	MOTOROLA_HKS	0x001F
#define	MOTOROLA_VSET	0x00BC  
#define	MOTOROLA_VRECAL	0x0098  
#define	MOTOROLA_REQ	0x7B11  
#define	MOTOROLA_RING	0x3F40  
#define	MOTOROLA_IDLE	0x7A83
#define	MOTOROLA_RELEASE 0x7A8E
#define	MOTOROLA_WAIT_ANSWER 0x7A88
#define	MOTOROLA_START_MSG 0x0054
#define	MOTOROLA_STOP_MSG  0x0060

#define	MOT_TX_COLLISION 2

#define DTRN		0x80
#define RTSN		0x04
#define RTSLVL		0x10

//defines for cell_bStatus
#define MOTORALA_RX_REQ		0x01
#define CELL_RX_INT		0x02
#define CELL_RX_RELEASE		0x04

extern byte dp_camil_r2e;
extern byte cell_ring_int;

extern byte cell_send_nec_cmd ( byte ) ;
extern void cell_set_busy_line_high ( void ) ;
extern byte cell_set_busy_line_low ( void ) ;
extern void cell_init ( void );
extern void cell_set_mux_land ( void ) ;
extern void cell_set_mux_direct ( void ) ;
extern void enable_cell_filter( void ) ;
extern void cell_answer ( void ) ;
extern void cellular_bg (void) ;
extern void cell_isr ( void ) ;
extern byte cell_originate (void) ;
extern void cell_dial ( byte ) ;
extern void cell_onhook ( void ) ;
extern void cell_send ( void ) ;
extern void init_ETC_defaults ( void ) ;
#define DEEMPH_COEFF_0  0X9E
#define DEEMPH_COEFF_1  0X9F
#define DEEMPH_COEFF_2  0XA0
#define DEEMPH_COEFF_3  0XA1
#define DEEMPH_COEFF_4  0XA2


