/*name and version number:@(#)project.h	1.1*/
/*date of get: 		  09/08/00 16:22:19*/
/*date of delta:	  09/08/00 15:18:51*/

/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - project.h
 *
 *
 *-------------------------------------------------------------------------*/


#ifndef PROJECT_H
#define PROJECT_H

# define ROME_LUCENT
# define XBUS1		0x40011000
#define  X_WRITE8(o, v)	(*(volatile uchar *)(XBUS1|((o)<<2)) = (uchar)(v))

extern void printf( char *f, ... );
extern void sa_setXBUS ( unsigned char );

enum HostMsgNum {
    NOT_PERMITTED,              /* 0 */
    HMSG_PING_SARM,             /* 1 */
    HMSG_TEST_SAR_MEM,          /* 2 */
    HMSG_OPEN_CHANNEL,          /* 3 */
    HMSG_CLOSE_CHANNEL,         /* 4 */
    HMSG_TX_DATA_REMAINING,     /* 5 */
    HMSG_SET_PPP_MASK,          /* 6 */
    HMSG_CALL_STATISTICS,       /* 7 */
    HMSG_UPLOAD_DSP_MODULE,     /* 8 */
    HMSG_SEND_BREAK,            /* 9 */
    HMSG_TEST_DSP,              /* 10 */
    HMSG_ENABLE_PRINTF,         /* 11 */
    HMSG_READ_DSP_MEM,          /* 12 */
    HMSG_WRITE_DSP_MEM,         /* 13 */
    HMSG_READ_SARM_MEM,         /* 14 */
    HMSG_WRITE_SARM_MEM,        /* 15 */
    HMSG_SET_PREDATA_HDR,       /* 16 */
    HMSG_START_TFTP_DUMP,       /* 17 */
    HMSG_ABORT_TFTP_DUMP,       /* 18 */
    HMSG_TEST_CRYSTAL,          /* 19 */
    HMSG_ENABLE_PPP,            /* 20 */
    HMSG_SWITCH_CHANNEL_APP,    /* 21 */

    /*
     * VoIP responses
     */
    HMSG_VOIP_MSG=64,       /* 64 */

	/*
	 * Internal Use Only
	 */
	VOICE_DATA_MSG,		// a data packet to a voice call
	MODEM_DATA_MSG,		// a data packet to a modem call
	INTERNAL_POLL_MSG,	// internal polling message
	INTERNAL_OFFHOOK_MSG,	// internal off-hook detected or requested
	INTERNAL_ONHOOK_MSG,	// internal on-hook detected or requested
	INTERNAL_RING_ENABLE_MSG,	// internal ring enable command
	INTERNAL_RING_DISABLE_MSG,	// internal ring disable command
	INTERNAL_ASSIGN_VOICE_CALL,	// internal activate voice task on modem
	INTERNAL_ASSIGN_DATA_CALL,	// internal activate data task on modem
	VOICE_INTERNAL_FRAMEQ_MSG,	// internal frame queue event message
	INTERNAL_ASSIGN_TIMESLOT_MSG,	// internal set time slot
	INTERNAL_UNASSIGN_TIMESLOT_MSG,	// internal unset time slot
	MODEM_FLUSH_MSG,		// modem dte flush signal to to_host_task
	INTERNAL_WINK_MSG,	// internal WINK_MSG message for MULTI_TECH

	LAST_INTERNAL_MSG,
	/*
	 * Framer Interface Messages (per Multitech proposal)
	 */
	FRAMER_SET_LINE_INTERFACE_MODE = 100,
	FRAMER_GET_LINE_INTERFACE_MODE,
	FRAMER_SET_PRI_SWITCH_TYPE,
	FRAMER_GET_PRI_SWITCH_TYPE,
	FRAMER_SET_T1_CONFIGURATION,
	FRAMER_GET_T1_CONFIGURATION,
	FRAMER_SET_E1_CONFIGURATION,
	FRAMER_GET_E1_CONFIGURATION,
	FRAMER_SET_CLOCK_CONFIGURATION,
	FRAMER_GET_CLOCK_CONFIGURATION,
	FRAMER_GET_T1_ALARM_STATUS = 120,
	FRAMER_GET_E1_ALARM_STATUS,
	FRAMER_GET_T1_RECEIVE_LEVEL,
	FRAMER_SET_OOS_STATUS = 130,
	FRAMER_GET_OOS_STATUS,
	FRAMER_SET_LOOPBACK_MODE = 140,
	FRAMER_GET_LOOPBACK_MODE,
	FRAMER_SET_TRANSPARENT_TIMESLOTS = 150,
	FRAMER_GET_TRANSPARENT_TIMESLOTS,

    /* Add additional messages above this line */
    NUM_HOST_MSGS       /* keep as last entry */
};
void host_send_msg(enum HostMsgNum msgNum, uint_8 dp, uint_32 param);

#endif /* PROJECT_H */

/*EOF*/
