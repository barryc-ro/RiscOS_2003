/*name and version number:@(#)mnp.h	1.61*/
/*date of get: 		  09/06/00 16:59:21*/
/*date of delta:	  07/05/00 15:48:30*/
/****************************************************************
File :	mnp.h
Description :
	Contains all #defines and declarations for mnp protocol.

Revision History :
	Initials	Date		Change
	MB     		06/15/93	Initial
*****************************************************************/
#ifndef __MNP_H__
#define __MNP_H__

#define BEGIN_FRAME		0x4000
#define END_FRAME		0x8000
#define CHAR_NOT_AVAIL	0x00
#define CHAR_AVAIL		0x01

#define MNP_MAX_OCTETS	64
#define MNP_MOD			256

#define T404			SECOND3

/* mnp framing modes */
#define MNP_OCTET_MODE 		2
#define MNP_BIT_MODE		3  //hdlc

/* mnp protocol data units */
#define PDU_LR  	1
#define PDU_LD  	2
#define PDU_LT  	4
#define PDU_LA  	5
#define PDU_LN  	6
#define PDU_LNA 	7

/* mnp attention types */
#define MNP_ATTN_NOD_NOE	0
#define MNP_ATTN_D_AND_E	1
#define MNP_ATTN_D_NOE		2
#define MNP_ATTN_NOD_E		3

/* mnp disconnect codes */
#define MNP_DISC_LR_NOT_RECEIVED	1
#define MNP_DISC_LR_BAD_PARM1		2
#define MNP_DISC_LR_UNKNOWN			3
#define MNP_DISC_USER_REASON		255

#define MNP_NUM_OF_CREDITS 			\
			(G(lapm_local_busy) || G(io_at_esc_detect) ? 0 : G(mnp_rk))

typedef enum {
	MNP_IDLE,
	MNP_ORIG_INITIAL,
	MNP_ORIG_WAIT_LR,
	MNP_ANSW_INITIAL,
	MNP_ANSW_PRE_CONNECT,
	MNP_ANSW_WAIT_LA,
	MNP_WAIT_FIFO_EMPTY,
	MNP_PRE_CONNECT,
	MNP_CONNECT,
	MNP_DISC_CMD,
	MNP_DISC_RSP,
	MNP_DOWN
}  MNP_STATE ;

typedef enum {
	MNP_RX_OCTET_SYNC,
	MNP_RX_OCTET_START_DLE,
	MNP_RX_OCTET_STX,
	MNP_RX_OCTET_DATA,
	MNP_RX_OCTET_DATA_DLE,
	MNP_RX_OCTET_FCS1,
	MNP_RX_OCTET_FCS2 
} MNP_RX_OCTET_STATE ;


/* MNP GLOBAL FUNCTIONS */

/* mnp_lib.c */
extern void mnp_init_variables ( void ) ;	// need to be banked used by lapm
extern byte mnp_negotiate_params ( void ) ;
extern void mnp_reset_flow_timer ( void ) ;
extern byte mnp_flow_timer_expired ( word ) ;

/* mnp_bg.c */
extern void mnp_tx_break ( void ) ;
extern void mnp_init ( void ) ;
extern void mnp_disconnect ( void ) ;
extern byte mnp_background ( void ) ;

/* mnp_bg.c */
extern void mnp_read_octet_from_dce_buf ( void ) ;

/* mnp_dce.c */
extern non_banked word mnp_crc ( byte, word ) ;
extern non_banked void mnp_tx_octet_frame ( void ) ;
extern non_banked void mnp_tx_hdlc_frame ( void ) ;
extern non_banked void mnp_rx_data ( void ) ;

/* mnp_ctl.c */
extern non_banked void mnp_build_lr_frame ( void ) ;
extern non_banked void mnp_build_control_frame ( byte ) ;
extern non_banked byte mnp_rx_frame_type ( void ) ;
extern non_banked void mnp_tx_control_frame ( byte ) ;
extern non_banked void mnp_send_pdu_la_frame ( byte ) ;

/* mnp_dte.c */
extern non_banked void mnp_build_lt_frame ( void ) ;
extern non_banked void mnp_process_lt_frame ( void ) ;

/* mnp_5a.c */
extern non_banked void mnp5_ad_frq_init ( void );
extern non_banked byte mnp5_decode ( byte ) ;
extern non_banked void mnp5_encode ( byte ) ;
extern non_banked void mnp5_encode_flush ( void ) ;
#endif	// __MNP_H__
