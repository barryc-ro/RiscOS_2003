/*name and version number:@(#)vpcmcnst.h	1.22*/
/*date of get: 		  01/10/01 16:57:56*/
/*date of delta:	  01/10/01 10:40:28*/
/***********************************************************************
 * File Name: VpcmCnst.h
 * Function : Real Time Constellation and Slicer Table Design for V.pcm
 *			  Coverd line:
 *			  A/u-law     : A-law and u-law
 *            Digital loss: 0dB , 3dB, 6dB, 3dB PBX, 2dB
 *            RBS         : RBS0, RBSA and RBSB before and after DLoss
 *            Data rate   : 28K to 56K
 *			  Max power   : -0.5dBm to -16dBm with 0.5 dBm step
 *			  compesated  : power compensated and non-compensated
 * Time     : Tuesday, 13:31:43, January 06, 1998
 * Author   : Jerry Wang, MT3C-208, (732)957-6155, zhenyuwang@lucent.com
 *          : Jiangtao, Xi, MT2G-233,(732)957-2294,jiangtaoxi@lucent.com
 ***********************************************************************/

#ifndef VPCMCNST_H
#define VPCMCNST_H

#include "z80glob.h"
#include "dpglob.h"

#define rram(x)					dp_read_dsp_ram((word) (x))
#define Wram(loc, data)			dp_write_dsp_ram((word) (loc), (word) (data))

#define LEV_CUTOFF_MSE	100

extern void vp_DownLoad(word *add, word dsp_add, int length);
extern byte altRBS[6];

typedef struct {
	double phGain[6];
	int digLossGain;
	float tblMseFac;
	float dspMseFac;

	short int digLoss;
	short int digGain;
	short int max0;
	short int max1;
	short int max2;

	word maxPow;
	word powCmpst;
	word mse;
	word Header[7];
	word STbl[600];
	word mdist;
	word powRatio;
	word mLev[6];

	byte rbs[6];
	byte rxAlaw;
	byte aLaw;
	byte maxRate;
	byte rate;
	byte ready;					// state flag value for ready
	byte pass;
	byte cpt;
	byte JVAL;
	byte sr;

	byte testFlag;
	byte NLev;
	int host_ready; 
	int digLossGainDt;
	short int digGainDt;
	int maxLev;
	double rxBMpower;
} CPCPT_PARA_VALUE;

////////////////////////////////////////////////////////
//
void vp_SaveResult(
	CPCPT_PARA_VALUE *para_value,
	word *txBM, word *rxBM
);

void vp_get_parameters(CPCPT_PARA_VALUE	*cpt_value);


extern void vp_calculate_tables(
		word *lrnTbl,
		CPCPT_PARA_VALUE *para_value,
		word *txBM,
		word *rxBM
		);

extern void vp_download_tables(
		CPCPT_PARA_VALUE *para_value,
		word *txBM,
		word *rxBM
		);

extern void vp_cpcptinit (
	word *lrnTbl,
	CPCPT_PARA_VALUE *para_value
	);

extern void vp_HeaderInit(CPCPT_PARA_VALUE *para_value, word *txBM, word *rxBM);

extern byte GetGain(
	word *lrnTbl,
	CPCPT_PARA_VALUE *para_value
	);

extern void vp_GetGainPost(			// processing seg 0,1,2,6,&7
	word *lrnTbl,
	CPCPT_PARA_VALUE *para_value
	);

extern void vp_GetMdist(CPCPT_PARA_VALUE *para_value);

extern byte vp_UpLevel(
	short int  x,
	const short int *tableArray,	// pointer of table array
	byte tblLen,			// size of table for searching
	byte bitsLen			// number of bits to express the tblLen
	);

extern void vp_AltRbsLrnTbli(
	word *lrnTbl,	// (i)
	word *lrnTbli	// (o)
	);

short int vp_iabs(short int x);
extern word *lrnTbli, *tbl, *levelMse;
extern void dp_print_state_pointers(void);

extern byte dp_print_ram_on_change(word ramloc, long msg, word *tempVar);
#define AD24(x)	(address_24_of(x))


#endif //VPCMCNST_H

