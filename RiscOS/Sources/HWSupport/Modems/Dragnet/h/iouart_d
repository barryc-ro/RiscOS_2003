/*name and version number:@(#)iouart_d.h	1.63*/
/*date of get: 		  02/26/01 15:10:05*/
/*date of delta:	  02/26/01 06:46:32*/
/****************************************************************
File :	iouart_d.h
Description :
	Contains the declarations for the UART layer functions.

Revision History :
	Initials	Date		Change
	VR      	10/22/92	Initial
*****************************************************************/

extern non_banked byte UART_init(void);
extern non_banked void UART_reset(void);
extern non_banked void UART_background(void);

#define UART_CD_ON       		0x0001
#define UART_DSR_ON       		0x0002
#define UART_RING_ON      		0x0004
#define UART_CTS_ON       		0x0008
#define UART_DSR_EVENT     		0x0010
#define UART_CTS_EVENT     		0x0020
#define UART_DCE_BREAK_ON		0x0040
#define UART_AT_CMD_RESPONSE	0x0080
#define UART_DTR_ON      		0x0100
#define UART_RTS_ON      		0x0200
#define UART_DTE_BREAK_ON		0x0400
#define UART_CD_EVENT      		0x1000
#define UART_RING_EVENT    		0x2000
#define UART_TXEMPTY_EVENT 		0x4000
#define UART_XOFF_ON      		0x8000	// see cstartup.asm file
//
// Modem Status Register (Read-Only) Offset 6
//
#define	MSR_DELTA_CTS	0x01	// change in CTS lead
#define MSR_DELTA_DSR	0x02	// change in DSR lead
#define MSR_TRAIL_RING	0x04	// Trailing edge of RI lead
#define MSR_DELTA_DCD	0x08	// change in DCD lead
#define	MSR_IRQ_MASK	(MSR_DELTA_CTS|MSR_DELTA_DSR\
						|MSR_TRAIL_RING|MSR_DELTA_DCD)
#define MSR_CTS_STAT	0x10	// current status of CTS lead
#define MSR_DSR_STAT	0x20	// current status of DSR lead
#define MSR_RI_STAT	0x40	// current status of DSR lead
#define MSR_DCD_STAT	0x80	// current status of DCD lead
#define MSR_STATUS_MASK	(MSR_CTS_STAT|MSR_DSR_STAT|MSR_RI_STAT|MSR_DCD_STAT)

extern void UART_dtr_off(void);
extern void UART_dtr_on(void);
extern BOOL UART_dtr_blocked(void);
extern void UART_start_break(void);
extern void UART_stop_break(void);
extern void UART_data_bits(byte data_bits);
extern void UART_stop_bits(byte stop_bits);
extern void UART_parity(byte parity);

extern void UART_SetQue(void);
extern void UART_SetRxQue(word rxSize);
extern void UART_SetTxQue(word txSize);

extern void UART_Flush(byte queue);

