/*name and version number:@(#)dsp_cmd.h	1.3*/
/*date of get: 		  09/06/00 16:59:39*/
/*date of delta:	  09/24/99 11:39:34*/
/*****************************************************************************
** File        : dsp_cmd.h                                                   *
** Version     : 1.5                                                         *
**---------------------------------------------------------------------------*
** Description :                                                             *
**   Include file for modules wishing to use the dsp command interface       *
** functions provided in the driver file dsp_cmd.c                           *
**                                                                           *
**---------------------------------------------------------------------------*
**                               HISTORY                                     *
** Date            Ver   Dev  Comments                                       *
** 31st Oct  1998  1.0   RGT  Initial Revision                               *
**                                                                           *
**  9th Nov  1998  1.1   RGT  Added DTMF command constants. Also reduced the *
**                            time allowed for DSP to ACK a command to 5ms.  *
**                                                                           *
** 17th Nov  1998  1.2   RGT  Added global external decl for dsp command     *
**                            struct for use by all non-interrupt routines.  *
**                                                                           *
**[Release 2]----------------------------------------------------------------*
** Date            Ver   Dev  Comments                                       *
** 25th Jan  1999  1.3   RGT  Added command constants for echo cancellation  *
**                            and compander selection.                       *
**                                                                           *
** 16th Feb  1999  1.4   RGT  Added in prototypes for new commands that allow*
**                            easy config of companders and echo cancellation*
**                            from anywhere in the code without having to    *
**                            assemble a DSP command directly.               *
**                                                                           *
** 20th Apr  1999  1.5   RGT  Moved several config params into v_config.h and  *
**                            modified their naming formats.                 *
**                                                                           *
******************************************************************************/
#ifndef __DSP_CMD_H__
	#define __DSP_CMD_H__

/****************************************************************************
          ####   ###   #   #   ###  #####   ###  #   #  #####  ###
         #      #   #  ##  #  #       #    #   # ##  #    #   #
         #      #   #  # # #   ###    #    ##### # # #    #    ###
         #      #   #  #  ##      #   #    #   # #  ##    #       #
          ####   ###   #   #  ####    #    #   # #   #    #   ####
*****************************************************************************/

/*************************************************************
** Hardware Addresses for sending and receiving command data *
**************************************************************/
#define		TX_CMD_ID_REG		0x37
#define		TX_CMD_ARG_REG		0x34
#define		RX_CMD_ID_REG		0x35
#define		RX_CMD_ARG_REG		0x34


/**************************************************
** Master DSP Command State Machine Return Values *
***************************************************/
#define		DSP_CMD_SM_OK		0
#define		DSP_CMD_SM_FATAL	1

/*****************************************
** Command ID and Parameter Declarations *
******************************************/
#define		SANITY_SCAN		0x40	// [ID]
#define		DSP_SANITY_RESP		0x41	// [ID]
#define		DTMF_GENERATE		0x42	// [ID] [DIGIT]
#define		DTMF_DETECTED		0x43	// [ID] [DIGIT]

#define		SELECT_COMPANDER	0x44	// [ID] [PNET] [PSTN]
	#ifndef U_LAW
	#define	U_LAW			0x00
	#endif
	#ifndef A_LAW
	#define	A_LAW			0x01
	#endif

#define		ECHO_CANCELLATION	0x45	// [ID] [ON|OFF]

/****************************************************************************
            #####  #   #  ####   #####  ####   #####  #####  ###
              #    #   #  #   #  #      #   #  #      #     #
              #     ###   ####   ###    #   #  ###    ###    ###
              #      #    #      #      #   #  #      #         #
              #      #    #      #####  ####   #####  #     ####
*****************************************************************************/
#ifndef ASSEMBLER
#include <v_defs.h>

/*******************************************
** DSP Command Format: currently 5 bytes   *
**   [CMD_ID] [ARG1][ARG2][ARG3][ARG4]     *
********************************************/
typedef struct 
{
  byte	id;				// Command Identifier
  byte	args[CFG_DCMD_MAX_ARGS];	// Command Arguements
} dspCmdStruct;

/*******************************************
** Command Transmit Section Data Structure *
********************************************/
typedef struct 
{
  word cmdsTxd;
  byte content;		// #of commands in queue
  byte inPtr;		// next free command slot
  byte outPtr;		// 1st command in queue
  word issueTime;	// time command was issued
  byte retries;		// # of attempts to send
  byte ifState;		// i/f state (V_BUSY or V_READY)
  dspCmdStruct cmdBuf[CFG_DCMD_BUF_SZ];	// Transmit Command queue
} dspCmdTxStruct;

/******************************************
** Command Receive Section Data Structure *
*******************************************/
typedef struct 
{
  word cmdsRcvd;
  byte content;			// Commands in queue
  byte inPtr;			// next free command slot
  byte outPtr;			// 1st command in queue
  dspCmdStruct cmdBuf[CFG_DCMD_BUF_SZ];	// Receive Command queue
} dspCmdRxStruct;

#endif

/****************************************************************************
           ####   ####    ###   #####  #   #  ####   #####   ###
           #   #  #   #  #   #    #    #   #  #   #  #      #
           ####   ####   #   #    #     ###   ####   ###     ###
           #      #  #   #   #    #      #    #      #          #
           #      #   #   ###     #      #    #      #####  ####
*****************************************************************************/
#ifndef ASSEMBLER
#include <v_camil.h>

void dsp_command_interface_init(VGLOB *vglob_ptr);
byte submit_dsp_command        (VGLOB *vglob_ptr, dspCmdStruct * dspCmd);
void send_dsp_command          (VGLOB *vglob_ptr);
void get_dsp_command           (VGLOB *vglob_ptr);
void process_dsp_ack           (VGLOB *vglob_ptr);
byte dsp_command_state_machine (VGLOB *vglob_ptr);
byte process_dsp_command       (VGLOB *vglob_ptr);
void select_echo_cancellation  (VGLOB *vglob_ptr, byte);
void select_compander          (VGLOB *vglob_ptr, byte, byte);
#endif


/****************************************************************************
              #####  #   #  #####  #####  ####   #   #   ###
              #       # #     #    #      #   #  ##  #  #
              ###      #      #    ###    ####   # # #   ###
              #       # #     #    #      #  #   #  ##      #
              #####  #   #    #    #####  #   #  #   #  ####
*****************************************************************************/
#if defined(_1_INSTAANCE)
#ifndef ASSEMBLER
extern dspCmdStruct  dspCmd;// holds generic commands for DSP
#endif
#endif  // _1_INSTANCE
#endif
