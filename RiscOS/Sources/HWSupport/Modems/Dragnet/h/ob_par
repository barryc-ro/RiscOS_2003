/*name and version number:@(#)ob_par.h	1.1*/
/*date of get: 		  09/08/00 16:22:22*/
/*date of delta:	  09/08/00 15:19:03*/
/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - ob_par.h
 *
 *				Init NETBRICKS BRICKS parameters.
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    NETBRICKS              		                    |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-2000 by NETBRICKS SA          |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#ifndef OB_PAR
#define OB_PAR

/*--------------------------------------------------------------------------*/

	/* Each Task Template Index must be unique accross all processors.
	 * The 'mailbox_qid' field of the server_task_list[] array is
	 * used to determine the Task Template Index associated to the
	 * created Server Task.
	 * The following constants defines the base value for the NETBRICKS
	 * Tasks Templates Indexes.
	 * The actual Task Template Index value is computed as follows:
	 *
	 *             OM_TASK_TEMPLATE_INDEX_BASE + mailbox_qid
	 *
	 * This base value should be chosen so that NETBRICKS-created Tasks
	 * Templates Indexes be unique accross all processors.
	 */

#define OM_TASK_TEMPLATE_INDEX_BASE		0x01000000L

/*--------------------------------------------------------------------------*/

#define	INIT_TSK_PRIORITY		126 	/* Init Task priority - lower priority than any server task one */
#define	INIT_TSK_STACK_SIZE		500L	/* Init Task stack size */

/*--------------------------------------------------------------------------*/

	/* Ob_init_wait_all_server_init() macro:
	 *
	 * Called after having initialised all needed OS resources.
	 * We must wait for all servers to be initialised, i.e. all server tasks
	 * to have run once, before being able to send the first message to SM.
	 * We can suspend the current task for a several ms, so that all servers
	 * can have time to initialise.
	 * Under OMNITEL_OS, this is useless as the servers entry points are being
	 * called at the time the different tasks are created.
	 */

#define Ob_init_wait_all_server_init()

/*--------------------------------------------------------------------------*/

#endif /* OB_PAR */

/*EOF*/
