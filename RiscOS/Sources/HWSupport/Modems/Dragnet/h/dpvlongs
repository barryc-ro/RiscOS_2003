/*name and version number:@(#)dpvlongs.h	1.1*/
/*date of get: 		  09/06/00 16:59:01*/
/*date of delta:	  08/03/98 16:10:41*/
/****************************************************************
File :	
Description : DSP download code - long space disconnect
Revision History :
	Initials	Date		Change
	  SH		8/3/98		DSP code: Venus_LongSpace.h ver 1.1

*****************************************************************/

#define	LongSpaceLongest  0x0eca
#define	LongSpaceCurr     0x0ecb
#define	LongSpaceStart    0xcecc
#define	rxhdlc_opt        0x0311

/***************************************************************

To use, download wLongSpace after reaching data mode and
initializing PDM in async mode.  Then write the starting
address of the patch (LongSpaceStart) to rxhdlc_opt.  I.e,

	dp_download_dsp((byte *)&wLongSpace[0],
		(word)(sizeof(wLongSpace)/sizeof(word)));
	dp_write_dsp_ram( rxhdlc_opt, LongSpaceStart );

The patch monitors the output of the descrambler and records
the length of the longest string of 0's in LongSpaceLongest.
(Note: Units for LongSpaceCurr and LongSpaceLongest is symbols,
not bits.)


The controller can periodically read LongSpaceLongest to see
if it exceeds some predetermined value that would indicate a
valid long-space-disconnect for the current rate.  It is also
OK (but not necessary) to clear this value during operation.
LongSpaceLongest will saturate at 0x7fff rather than wrap.

****************************************************************/

const word wLongSpace[] =
{
0x0ECA, 0x0019, 0x6085, /* Address, size, checksum */
0x0000, 0x0000, 0x1962,
0x3CD0, 0x5000, 0x0ECB,
0x38D0, 0x99CE, 0xD002,
0x0ED7, 0x1200, 0x6050,
0x0EE0, 0x9F2E, 0x20D0,
0x5000, 0x0ECA, 0x3CD0,
0xC369, 0xD011, 0x0EE0,
0x20D0, 0x5080, 0x6AAB,
0xC200
};

