/*name and version number:@(#)conf_ob.h	1.1*/
/*date of get: 		  09/08/00 16:22:22*/
/*date of delta:	  09/08/00 15:19:02*/

/*--------------------------------------------------------------------------*
 *                       M O D U L E   H E A D E R
 *
 * filename - conf_ob.h
 *
 * $Revision$
 *
 * $Date$
 *
 *      Omnitel Bricks-related system configuration data :
 *
 *		!!! WINDOWS_NT/95 EXAMPLE !!!
 *
 *		- Omnitel servers;
 *		- Server_main() invocation;
 *		- Servers/tasks definition tables;
 *		- Other tasks definition tables;
 *
 *-------------------------------------------------------------------------*/

/*[]---------------------------------------------------[]*/
/*|                                                     |*/
/*|    OMNITEL-BRICKS                                   |*/
/*|                                                     |*/
/*|    Copyright (c) 1989-1997 by OMNITEL SA            |*/
/*|    All Rights Reserved.                             |*/
/*|                                                     |*/
/*[]---------------------------------------------------[]*/

#ifndef CONF_OB_H
#define CONF_OB_H

#define REGULAR

				/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/
				/*                               */
				/*  SERVERS DESCRIPTIONS SAMPLES */
				/*                               */
				/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/



		/*----------------------------------*/
		/* Entities entry points prototypes */
		/*----------------------------------*/

#if NEW_FCT_STYLE == ON
	uchar 	sm					(struct message FAR *);
	uchar 	appli				(struct message FAR *);
	uchar 	cc					(struct message FAR *);
	uchar 	ns					(struct message FAR *);
	uchar 	mns					(struct message FAR *);
	uchar 	dl					(struct message FAR *);
	uchar 	mdl					(struct message FAR *);
/*************************************************************************/
#if defined REGULAR

	uchar 	ph_d_pri			(struct message FAR *);
	uchar 	mph_d_pri			(struct message FAR *);

#else
/*************************************************************************/

	/* OMNITEL-BRICKS Physical entities in case of PH-LOOP */

	uchar 	ph_loop				(struct message FAR *);
	uchar 	mph_loop			(struct message FAR *);

#endif
/*************************************************************************/

	void	sm_var_init			(void);
	void	appli_var_init		(void);
	void	cc_var_init			(void);
	void	ns_var_init			(void);
	void	mns_var_init		(void);
	void	dl_var_init			(void);
	void	mdl_var_init		(void);
	void	ph_d_pri_var_init	(void);
	void	mph_d_pri_var_init	(void);
#else
	uchar 	sm					();
	uchar 	appli				();
	uchar 	cc					();
	uchar 	ns					();
	uchar 	mns					();
	uchar 	dl					();
	uchar 	mdl					();
/*************************************************************************/
#if defined REGULAR

	uchar 	ph_d_pri			();
	uchar 	mph_d_pri			();

#else
/*************************************************************************/

	/* OMNITEL-BRICKS Physical entities in case of PH-LOOP */

	uchar 	ph_loop				();
	uchar 	mph_loop			();

#endif
/*************************************************************************/

	void	sm_var_init			();
	void	appli_var_init		();
	void	cc_var_init			();
	void	ns_var_init			();
	void	mns_var_init		();
	void	dl_var_init			();
	void	mdl_var_init		();
	void	ph_d_pri_var_init	();
	void	mph_d_pri_var_init	();
#endif

		/*--------------------------------*/
		/*           SM server            */
		/*        description table       */
		/*--------------------------------*/

struct server_def CONST_ARRAY t_server_sm [] = {

	/* entity ID,   entry point, congestion processing, global vars init function */

		/* System Management entity */

	{ENT_SM,        sm,             OFF,    OFF,    (p_var_init_fct)sm_var_init},

	{ENT_NIL},	/* End of Server list */
};

		/* Server's static queue id */

#define QID_SERVER_SM				0

		/* Server's entry point function definition */

	Server_main(
		server_sm,			/* name of the server's main function */
		t_server_sm,		/* pointer on the server's definition list */
		QID_SERVER_SM,		/* message queue identifier */
		0,					/* unused */
		P_NIL,				/* unused - pointer on the messages origination
							   entities' list (used for simulation only) */
		P_NIL				/* unused - pointer on the server's flags list */

		)


		/*--------------------------------*/
		/*  ISDN's Layer 3 and CC server  */
		/*        description table       */
		/*--------------------------------*/

struct server_def CONST_ARRAY t_server_ns_cc [] = {

	/* entity ID,   entry point, congestion processing, global vars init function */

		/* ISDN-BRICKS Call Control entity */

	{ENT_CC,        cc,             OFF,    OFF,    (p_var_init_fct)cc_var_init},

		/* ISDN-BRICKS Network Signalling entities */

	{ENT_NS,        ns,             OFF,    OFF,    (p_var_init_fct)ns_var_init},
	{ENT_MNS,       mns,            OFF,    OFF,    (p_var_init_fct)mns_var_init},

	{ENT_NIL},	/* End of Server list */
};

		/* Server's static queue id */

#define QID_SERVER_NS_CC			1

		/* Server's entry point function definition */

	Server_main(
		server_ns_cc,		/* name of the server's main function */
		t_server_ns_cc,		/* pointer on the server's definition list */
		QID_SERVER_NS_CC,	/* message queue identifier */
		0,					/* unused */
		P_NIL,				/* unused - pointer on the messages origination
							   entities' list (used for simulation only) */
		P_NIL				/* unused - pointer on the server's flags list */

		)



		/*--------------------------------*/
		/*  ISDN's Layer 2 and 1 server   */
		/*        description table       */
		/*--------------------------------*/

struct server_def CONST_ARRAY t_server_ph_dl [] = {

	/* entity ID,   entry point, congestion processing, global vars init function */

		/* OMNITEL-BRICKS LAP-B / LAP-D entities */

	{ENT_DL,        dl,             OFF,    OFF,    (p_var_init_fct)dl_var_init},
	{ENT_DL_D,      dl,             OFF,    OFF},
	{ENT_MDL,       mdl,            ON,     ON,     (p_var_init_fct)mdl_var_init},

		/* OMNITEL-BRICKS Physical entities */

/*************************************************************************/
#if defined REGULAR

	{ENT_PH_D,		ph_d_pri,       OFF,    OFF,    (p_var_init_fct)ph_d_pri_var_init},
	{ENT_MPH,       mph_d_pri,      OFF,    OFF,    (p_var_init_fct)mph_d_pri_var_init},

#else
/*************************************************************************/


	/* OMNITEL-BRICKS Physical entities in case of PH-LOOP */

	{ENT_PH,		ph_loop,        OFF,    OFF,    (p_var_init_fct)P_NIL},
	{ENT_PH_D,      ph_loop,        OFF,    OFF,    (p_var_init_fct)P_NIL},
	{ENT_MPH,       mph_loop,       OFF,    OFF,    (p_var_init_fct)P_NIL},

#endif
/*************************************************************************/

	{ENT_NIL},	/* End of Server list */
};



		/* Server's static queue id */

#define QID_SERVER_PH_DL			2

		/* Server's entry point function definition */

	Server_main(
		server_ph_dl,		/* name of the server's main function */
		t_server_ph_dl,		/* pointer on the server's definition list */
		QID_SERVER_PH_DL,	/* message queue identifier */
		0,					/* unused */
		P_NIL,				/* unused - pointer on the messages origination
							   entities' list (used for simulation only) */
		P_NIL				/* unused - pointer on the server's flags list */

		)



		/*--------------------------------*/
		/*          APPLI server          */
		/*        description table       */
		/*--------------------------------*/

struct server_def CONST_ARRAY t_server_appli [] = {

	/* entity ID,   entry point, congestion processing, global vars init function */

		/* ISDN-BRICKS Call Control entity */

	{ENT_APPLI,     appli,          OFF,    OFF,    (p_var_init_fct)P_NIL},

	{ENT_NIL},	/* End of Server list */
};

		/* Server's static queue id */

#define QID_SERVER_APPLI			3

		/* Server's entry point function definition */

	Server_main(
		server_appli,		/* name of the server's main function */
		t_server_appli,		/* pointer on the server's definition list */
		QID_SERVER_APPLI,	/* message queue identifier */
		0,					/* unused */
		P_NIL,				/* unused - pointer on the messages origination
							   entities' list (used for simulation only) */
		P_NIL				/* unused - pointer on the server's flags list */

		)



/*-------------------------------------------------------------------------*/

				/*-=-=-=-=-=-=-=-=-=-=-=-*/
				/*                       */
				/*     SERVERS/TASKS     */
				/*   DEFINITION TABLES   */
				/*                       */
				/*-=-=-=-=-=-=-=-=-=-=-=-*/

	/*
		This table shall contain the tasks parameters associated with the
		different Omnitel's servers present in the system.
	*/

CONST struct os_task_def server_task_list [] =

	/*  task_name, entry, priority, (no stack), mailbox_name, queue_id   */

{

	{   "SM  ", (void(*)())server_sm,    10,       P_NIL,  2048*2, "SM  ", QID_SERVER_SM},
	{   "PHDL", (void(*)())server_ph_dl, 20,		P_NIL,  2048*2, "PHDL", QID_SERVER_PH_DL},
	{   "NSCC", (void(*)())server_ns_cc, 30,       P_NIL,  2048*2, "NSCC", QID_SERVER_NS_CC},
	{   "APPL", (void(*)())server_appli, 40,       P_NIL,  2048*2, "APPL", QID_SERVER_APPLI},

	{ TASK_NIL },   /* End of list */

};

	/* Determine number of servers according to the size of the previous table */

#define MX_SERVER   (sizeof (server_task_list) / sizeof (server_task_list[0]))

				/*-=-=-=-=-=-=-=-=-=-=-=-*/
				/*                       */
				/*      OTHER TASKS      */
				/*   DEFINITION TABLES   */
				/*                       */
				/*-=-=-=-=-=-=-=-=-=-=-=-*/

#define QID_TIMER_PROC			MX_SERVER+1
#define QID_KEYB_PROC			MX_SERVER+2

void keyboard_thread (void);

CONST struct os_task_def other_task_list [] = {

	/*  task_name  entry_point       priority (no stack address)  stack size     mailbox_name  queue_id   */

#if TIMER_IT == OFF
	{   "TIMR", timer_process, THREAD_PRIORITY_TIME_CRITICAL,P_NIL,  0,          "", QID_TIMER_PROC},
#endif

/*
	{   "KEYB", keyboard_thread,THREAD_PRIORITY_LOWEST,      P_NIL,  0,          "", QID_KEYB_PROC},
*/

	{ TASK_NIL },   /* End of list */

};

#define MX_OTHER_TASKS  (sizeof (other_task_list) / sizeof (other_task_list[0]))

#endif

/*EOF*/
