/************************************************************************/
/* 	        Copyright 1996 Acorn Network Computers		        */
/*									*/
/*  This material is the confidential trade secret and proprietary	*/
/*  information of Acorn Network Computers. It may not be reproduced,   */
/*  used sold, or transferred to any third party without the prior      */
/*  written consent of Acorn Network Computers. All rights reserved.	*/
/* 									*/
/************************************************************************/

/*
 * Simple terminal program demonstrating serial library.
 *
 * Modification History
 *---------------------
 * 15-May-96 RWB Created
 */
#include "kernel.h"
#include "swis.h"

/*
 * Look for a key press
 */
int
console_get_key(int time)
{
  _kernel_swi_regs reg;
  int flag = 0;
  int key;

  reg.r[0] = 129;                        /* read keyboard for information */
  reg.r[1] = time & 0xFF;	      	 /* time limit low byte */
  reg.r[2] = (time>>8) & 0x7F;           /* time limit low byte 0x00->0x7F */
  _kernel_swi(OS_Byte, &reg, &reg);

  if (reg.r[1] == 0)      /* received a null, could be a function following */
  {
    flag = 1;             /* set flag to indicate possible function key */
    reg.r[0] = 129;
    reg.r[1] = time & 0xFF;
    reg.r[2] = (time>>8) & 0x7F;
    _kernel_swi(OS_Byte, &reg, &reg);
  }

  if (reg.r[2] == 0)                        /* key has been read */
  {
    key = reg.r[1];
    if (flag) key = key<<8;		    /* add an offset if function key */
  }
  else
  {
    key = -1;                               /* no key read */
  }

  return (key);
}

/*
 * Print the contents of given buffer to the screen
 */
void
console_put_text(char *pchBuffer, int iLength)
{
  _kernel_swi_regs reg;

  reg.r[0] = (int)pchBuffer;
  reg.r[1] = iLength;
  _kernel_swi(OS_WriteN,&reg,&reg);
}

