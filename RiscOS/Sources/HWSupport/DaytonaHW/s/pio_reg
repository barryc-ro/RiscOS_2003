; File:    pio_reg.s
; Purpose: Read and write the processor I/O register
; Author:  Ben Laughton
; History: 1997-08-26: BAL: Created

	GET	Hdr:ListOpts
	GET	Hdr:Macros
	GET	Hdr:System
	GET	hdr.CVars

PIORegister	* &320000c
BuzzerMask	* 1

	AREA	|C$$Code|, CODE, READONLY

	ImportVar buzzer_state

	EXPORT	pio_register_read[LEAF]
pio_register_read

	PHPSEI	r3			; disable irqs, save current state

	LDR	r1, =PIORegister	; address of PIO register in r1
        LDR     r2, [r1]		; get contents of PIO register
	ORR	r2, r2, r0		; set bits we want to read to 1
	STR     r2, [r1]		; write 'read mask' into PIO register
	LDR	r2, [r1]		; get contents of PIO register
	AND	r0, r2, r0		; ensure only bits we were asked to
					; read can be set
	PLP	r3			; restore IRQs
	NOP
	MOVS	pc, lr


	EXPORT	pio_register_write[LEAF]
pio_register_write

	STMFD	sp!, {r4-r6, lr}

	PHPSEI	r4			; disable irqs, save current state

	AND	r1, r0, r1		; ensure no spurious bits set in
					; new PIO register contents
	LDR	r2, =PIORegister	; address of PIO register in r2
	LDR	r3, [r2]		; get contents of PIO register
	ORR	r0, r0, #BuzzerMask	; mask out buzzer as well for safety
	BIC	r3, r3, r0		; mask out bits we want to alter

	StaticBaseFromSL r6		; static base for C variables
	LDRVar	r5, r6, buzzer_state	; get buzzer state

	ORR	r1, r1, r5		; new bits for PIO register
					; (rewrite buzzer for safety)
	ORR	r3, r3, r1		; new PIO register contents
	STR	r3, [r2]		; write new contents into PIO register

	PLP	r4			; restore IRQs
	NOP

	LDMFD	sp!, {r4-r6, pc}^

	LTORG
	END
