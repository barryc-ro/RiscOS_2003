/* File:    list.h
 * Purpose: Interface to list handling routines
 * Author:  Ben Laughton
 * History: 1997-08-17: BAL: created
 */

#ifndef DaytonaHW_list_h
#define DaytonaHW_list_h

/* =============================================================================
 * Include header files
 */




/* =============================================================================
 * Define contants
 */




/* =============================================================================
 * Define types
 */

typedef struct list_header_t
{
    struct list_item_t *prev;
    struct list_item_t *next;
} list_header_t;

typedef struct list_t
{
    list_header_t *first;
    list_header_t *last;
} list_t;




/* =============================================================================
 * Define macros
 */

#define M_list_next_item (i) (((list_header_t *) (i))->header.next)




/* =============================================================================
 * Declare global variables
 */




/* =============================================================================
 * Declare function prototypes
 */

extern list_t *list_create (void);

extern void list_add_item (list_t *const list);

extern void list_remove_item (list_t *const list, list_header_t *item);

#endif
