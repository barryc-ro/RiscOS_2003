/* File:    buffer.h
 * Purpose: Header file for buffer manager routines
 * Author:  Mark RISON
 * History: 1997-05-27: MGR: created
 *          1997-07-22: BAL: merged into DaytonaHW and reformatted to be
 *                           consistent with rest of source code.
 */

#ifndef DaytonaHW_bufman_h
#define DaytonaHW_bufman_h

/* =============================================================================
 * Include header files
 */

/* CLib */
#include "kernel.h"




/* =============================================================================
 * Define contants
 */

#define BufferManager_InsertByte 0
#define BufferManager_InsertBlock 1
#define BufferManager_RemoveByte 2
#define BufferManager_ReturnFreeSpace 7
#define BufferManager_PurgeBuffer 8




/* =============================================================================
 * Define types
 */

extern void (*buffermanager_service_routine) (void);




/* =============================================================================
 * Declare global variables
 */

extern void *buffermanager_service_pw;



/* =============================================================================
 * Declare function prototypes
 */

extern int buffermanager_put_byte (const unsigned int b, const char c);

extern int buffermanager_put_block (const unsigned int b,
                                    const char *const s,
                                    const int n);

extern int buffermanager_get_byte (const unsigned int b);

extern int buffermanager_get_nfree (const unsigned int b);

extern void buffermanager_purge (const unsigned int b);

unsigned int buffermanager_call_service
             (_kernel_swi_regs *r, void (*routine) (void), void *pw);


#endif
