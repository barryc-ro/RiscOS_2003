/* File:    watchdog.c
 * Purpose: Reset the Daytona hardware watchdog
 * Author:  Ben Laughton
 * History: 1997-07-14: BAL: created
 */




/* =============================================================================
 * Include header files
 */

/* CLib */
#include <stddef.h>
#include "kernel.h"

/* DaytonaHW */
#include "interrupts.h"
#include "watchdog.h"



/* =============================================================================
 * Define functions
 */

/* -----------------------------------------------------------------------------
+
   watchdog_reset

   Reset the Daytona hardware watchdog.
-
 */

extern void watchdog_reset (void)
{
    unsigned int irqs;
    int i = 0;
    volatile unsigned int *watchdog_reset_address[] =
    {
        (unsigned int *) 0x03010a08,
        (unsigned int *) 0x03010a00,
        (unsigned int *) 0x03010a0c,
        NULL
    };


    /* Write any value into a fixed sequence of addresses to reset the watchdog.
     * Must disable interrupts because if sequence is broken the watchdog state
     * machine will reset.
     */
    irqs = irqs_off ();

    while (watchdog_reset_address[i] != NULL)
        *watchdog_reset_address[i++] = 0;

    irqs_restore (irqs);
}
