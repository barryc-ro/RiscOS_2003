; > $.Kernel.Source.VduModes
; 24-May-91

; general purpose mode macros

        GBLA    NumModes
NumModes SETA   0
        GBLA    mode

        MACRO
        VIDC_List $modeno, $lbpp,$hsync,$hbpch,$hlbdr,$hdisp,$hrbdr,$hfpch, $vsync,$vbpch,$vlbdr,$vdisp,$vrbdr,$vfpch,$pixrate,$sp,$vclock,$palindex, $ncolour, $bbcgapmode
 [ ($modeno) >= NumModes
NumModes SETA   ($modeno)+1
 ]
        LCLA    sub
        LCLA    vclockslow
mode    SETA    ($modeno)       ; convert to a number, so we can convert back to a hex string

VL_$mode
        &       1       ; VIDC list type
        &       0       ; base mode (irrelevant, all entries overwritten)

 [ $lbpp = 3
sub     SETA    5
 ]
 [ $lbpp = 2
sub     SETA    7
 ]
 [ $lbpp = 1
sub     SETA    11
 ]
 [ $lbpp = 0
sub     SETA    19
 ]
        ASSERT  ($hsync :AND: 1)=0
        ASSERT  ($hbpch :AND: 1)=1
        ASSERT  ($hlbdr :AND: 1)=0
        ASSERT  ($hdisp :AND: 1)=0
        ASSERT  ($hrbdr :AND: 1)=0
        ASSERT  ($hfpch :AND: 1)=1
 [ (($hsync+$hbpch+$hlbdr+$hdisp+$hrbdr+$hfpch) :AND: 3)<>0
        ! 0, "Warning: mode unsuitable for interlaced use"
 ]
        ASSERT  (($vclock)=LCDClock*1000) :LOR: (($vclock)=LCDClock*1000/2)
 [ ($vclock)=LCDClock*1000/2
vclockslow SETA 1
 |
vclockslow SETA 0
 ]

; Horizontal
        &       (&80:SHL:24) :OR: ((($hsync+$hbpch+$hlbdr+$hdisp+$hrbdr+$hfpch -2  )/2) :SHL: 14) ; HCR
        &       (&84:SHL:24) :OR: ((($hsync                                    -2  )/2) :SHL: 14) ; HSWR
        &       (&88:SHL:24) :OR: ((($hsync+$hbpch                             -1  )/2) :SHL: 14) ; HBSR
        &       (&8C:SHL:24) :OR: ((($hsync+$hbpch+$hlbdr                      -sub)/2) :SHL: 14) ; HDSR
        &       (&90:SHL:24) :OR: ((($hsync+$hbpch+$hlbdr+$hdisp               -sub)/2) :SHL: 14) ; HDER
        &       (&94:SHL:24) :OR: ((($hsync+$hbpch+$hlbdr+$hdisp+$hrbdr        -1  )/2) :SHL: 14) ; HBER
        &       (&9C:SHL:24) :OR: (((($hsync+$hbpch+$hlbdr+$hdisp+$hrbdr+$hfpch-2)/2+1)/2):SHL:14); HIR
; Vertical
        &       (&A0:SHL:24) :OR: (($vsync+$vbpch+$vlbdr+$vdisp+$vrbdr+$vfpch    -1)    :SHL: 14) ; VCR
        &       (&A4:SHL:24) :OR: (($vsync                                       -1)    :SHL: 14) ; VSWR
        &       (&A8:SHL:24) :OR: (($vsync+$vbpch                                -1)    :SHL: 14) ; VBSR
        &       (&AC:SHL:24) :OR: (($vsync+$vbpch+$vlbdr                         -1)    :SHL: 14) ; VDSR
        &       (&B0:SHL:24) :OR: (($vsync+$vbpch+$vlbdr+$vdisp                  -1)    :SHL: 14) ; VDER
        &       (&B4:SHL:24) :OR: (($vsync+$vbpch+$vlbdr+$vdisp+$vrbdr           -1)    :SHL: 14) ; VBER
; Control Register
        &       (&E0:SHL:24) :OR: ($lbpp :SHL: 2)
        &       -1
        &       (&00:SHL:24) :OR: $pixrate
        &       (&01:SHL:24) :OR: $sp
        &       (&02:SHL:24) :OR: $vclock
        &       -1

VWS_$mode * ($palindex) :OR: (($ncolour):SHL:8) :OR: (($bbcgapmode):SHL:16) :OR: (vclockslow :SHL: 24)
        GBLA    Valid_$mode     ; indicate mode is valid by the presence of this symbol
        MEND

        MACRO
$label  OutputTable $prefix, $offset
$label
mode    SETA    0
        WHILE   mode < NumModes
 [ :DEF: Valid_$mode
        &       $prefix$mode + $offset
 |
        &       -1
 ]
mode    SETA    mode + 1
        WEND
        MEND

    [ LCDClock = 16
sw1     *       72
sw2     *       36
bp1     *       115
bp2     *       57
fp1     *       113
fp2     *       57
pc1     *       16000
pc2     *       8000
    |
sw1     *       108
sw2     *       54
bp1     *       175
bp2     *       87
fp1     *       269
fp2     *       135
pc1     *       24000
pc2     *       12000
    ]

        VIDC_List  0, 0,sw1,bp1,  0, 640,  0,fp1, 1,0,112,256,116,0,24000,0,pc1,0, 1,0        ; MODE 0
        VIDC_List  1, 1,sw2,bp2,  0, 320,  0,fp2, 1,0,112,256,116,0,24000,0,pc2,1, 3,0        ; MODE 1
        VIDC_List  2, 2,sw2,bp2,  0, 320,  0,fp2, 1,0,112,256,116,0,24000,0,pc2,2,15,0        ; MODE 2
        VIDC_List  3, 1,sw1,bp1,  0, 640,  0,fp1, 1,0,115,250,119,0,24000,0,pc1,0, 1,1        ; MODE 3
        VIDC_List  4, 0,sw1,bp1,  0, 640,  0,fp1, 1,0,112,256,116,0,24000,0,pc1,0, 1,0        ; MODE 4
        VIDC_List  5, 1,sw2,bp2,  0, 320,  0,fp2, 1,0,112,256,116,0,24000,0,pc2,1, 3,0        ; MODE 5
        VIDC_List  6, 1,sw2,bp2,  0, 320,  0,fp2, 1,0,115,250,119,0,24000,0,pc2,0, 1,1        ; MODE 6
        VIDC_List  7, 2,sw2,bp2,  0, 320,  0,fp2, 1,0,115,250,119,0,24000,0,pc2,4,15,0        ; MODE 7
        VIDC_List  8, 1,sw1,bp1,  0, 640,  0,fp1, 1,0,112,256,116,0,24000,0,pc1,1, 3,0        ; MODE 8
        VIDC_List  9, 2,sw2,bp2,  0, 320,  0,fp2, 1,0,112,256,116,0,24000,0,pc2,2,15,0        ; MODE 9
        VIDC_List 10, 3,sw2,bp2,  0, 320,  0,fp2, 1,0,112,256,116,0,24000,0,pc2,3,63,0        ; MODE 10
        VIDC_List 11, 1,sw1,bp1,  0, 640,  0,fp1, 1,0,115,250,119,0,24000,0,pc1,1, 3,0        ; MODE 11
        VIDC_List 12, 2,sw1,bp1,  0, 640,  0,fp1, 1,0,112,256,116,0,24000,0,pc1,2,15,0        ; MODE 12
        VIDC_List 13, 3,sw2,bp2,  0, 320,  0,fp2, 1,0,112,256,116,0,24000,0,pc2,3,63,0        ; MODE 13
        VIDC_List 14, 2,sw1,bp1,  0, 640,  0,fp1, 1,0,115,250,119,0,24000,0,pc1,2,15,0        ; MODE 14
        VIDC_List 15, 3,sw1,bp1,  0, 640,  0,fp1, 1,0,112,256,116,0,24000,0,pc1,3,63,0        ; MODE 15

        VIDC_List 25, 0,sw1,bp1,  0, 640,  0,fp1, 1,0,  0,480,  4,0,24000,0,pc1,0, 1,0        ; MODE 25
        VIDC_List 26, 1,sw1,bp1,  0, 640,  0,fp1, 1,0,  0,480,  4,0,24000,0,pc1,1, 3,0        ; MODE 26
        VIDC_List 27, 2,sw1,bp1,  0, 640,  0,fp1, 1,0,  0,480,  4,0,24000,0,pc1,2,15,0        ; MODE 27
        VIDC_List 28, 3,sw1,bp1,  0, 640,  0,fp1, 1,0,  0,480,  4,0,24000,0,pc1,3,63,0        ; MODE 28

        VIDC_List 41, 0,sw1,bp1,  0, 640,  0,fp1, 1,0, 64,352, 68,0,24000,0,pc1,0, 1,0        ; MODE 41 EGA
        VIDC_List 42, 1,sw1,bp1,  0, 640,  0,fp1, 1,0, 64,352, 68,0,24000,0,pc1,1, 3,0        ; MODE 42
        VIDC_List 43, 2,sw1,bp1,  0, 640,  0,fp1, 1,0, 64,352, 68,0,24000,0,pc1,2,15,0        ; MODE 43

        VIDC_List 44, 0,sw1,bp1,  0, 640,  0,fp1, 1,0,140,200,144,0,24000,0,pc1,0, 1,0        ; MODE 44 CGA
        VIDC_List 45, 1,sw1,bp1,  0, 640,  0,fp1, 1,0,140,200,144,0,24000,0,pc1,1, 3,0        ; MODE 45
        VIDC_List 46, 2,sw1,bp1,  0, 640,  0,fp1, 1,0,140,200,144,0,24000,0,pc1,2,15,0        ; MODE 46

        MACRO
        TestMode $frame
        LCLA    fpch
fpch    SETA    (LCDClock*2000000/485/$frame - 640 - sw1 - bp1)/2*2+1
        ! 0, "Frame = $frame Fpch = &":CC::STR:fpch
        VIDC_List $frame,2,sw1,bp1,0,640,0,&$fpch, 1,0,0,480,4,0,24000,0,LCDClock*1000,2,15,0
        MEND

 [ IncludeTestModes
        TestMode 65
        TestMode 70
        TestMode 75
        TestMode 80
        TestMode 85
        TestMode 90
        TestMode 95
        TestMode 100
        TestMode 105
 ]

BigVIDCTable    OutputTable VL_, -BigVIDCTable

BigWSTable      OutputTable VWS_, 0

hdsr    *       2047 - sw1 - bp1
hdsr0   *       hdsr :AND: &F
hdsr1   *       (hdsr :SHR: 4) :AND: &F
hdsr2   *       (hdsr :SHR: 8) :AND: &F

LCDRegTable
        =       &F, &F, &1              ; vdsr = &1FF => 1 line after start of vsync before display
        =       &D, &E, &0              ; vdlr = &0ED => 237 = no. of lines per panel - 3
        =       hdsr0, hdsr1, hdsr2     ; hdsr = 2047 - pixels of hsync and hbporch
        =       &0, &5, &0              ; hdlr = &050 => 80*8 pixels of display horizontally

        END
