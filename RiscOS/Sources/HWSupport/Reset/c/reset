/* > reset.c
 *
 *	  Reset code.
 */

#include <stdlib.h>
#include "kernel.h"
#include "swis.h"

#include "module.h"
#include "reset.h"
#include "veneer.h"
#include "iomd.h"


_kernel_oserror *
reset_initialise( void *pw )
{
	_kernel_oserror *err =  _swix( OS_ClaimDeviceVector, _IN(0)|_IN(1)|_IN(2),
                                        IOMD_RESET_DEVNO, veneer_reset_irq, pw );

        if ( err == NULL )
        {
                /* Enable reset interrupt. */
		int old_irqs = veneer_irqs_off();
		*(char *)IOMD_IRQMSKC |= IOMD_RESET_IRQ_BIT;
		veneer_irqs_on( old_irqs );
        }
        return err;                
}


void
reset_finalise( void *pw )
{
        /* Disable reset interrupt. */
	int old_irqs = veneer_irqs_off();
	*(char *)IOMD_IRQMSKC &= ~IOMD_RESET_IRQ_BIT;
	veneer_irqs_on( old_irqs );
        
	_swix( OS_ReleaseDeviceVector, _IN(0)|_IN(1)|_IN(2),
			IOMD_RESET_DEVNO, veneer_reset_irq, pw );
}


void
reset_irq( _kernel_swi_regs *r, void *pw )
{
        /* Just reset the box! */
        _swix( OS_Reset, NULL );

	NOT_USED( r );
	NOT_USED( pw );
}
