#include "swis.h"

#define BM_InsertByte      0
#define BM_InsertBlock     1
#define BM_RemoveByte      2
#define BM_RemoveBlock     3
#define BM_ExamineByte     4
#define BM_ExamineBlock    5
#define BM_UsedSpace       6
#define BM_FreeSpace       7
#define BM_PurgeBuffer     8
#define BM_NextFilledBlock 9


/*
 * State information for each stream
 */
typedef struct Stream
{
    unsigned int devicefs_stream;
    unsigned int fileswitch_handle;
    unsigned int buffersize;
    unsigned int bufferthreshold;
    unsigned int buffer;
    unsigned int buffer_privid;
    char*       buffer_start;
    uint32_t    buffer_insertion;
    OHCI_ED*    ed;
    OHCI_TD*    td;
    uintptr_t   tda;
} Stream;

extern void (*BuffManService)(void);
extern void *BuffManWS;
extern Stream InputStream, OutputStream;

extern unsigned int call_buffermanager(_kernel_swi_regs *r, void (*addr)(void), void *pw);

#define CallBufMan(r) call_buffermanager(r, BuffManService, BuffManWS)

/* callbacks */
extern _kernel_oserror* reset_cb (_kernel_swi_regs* r, void* pw, void* data);
extern _kernel_oserror* new_device_cb (_kernel_swi_regs* r, void* pw, void* data);
extern _kernel_oserror* remove_device_cb (_kernel_swi_regs* r, void* pw, void* data);
extern _kernel_oserror* set_address_cb (_kernel_swi_regs* r, void* pw, void* data);
extern _kernel_oserror* set_config_cb (_kernel_swi_regs* r, void* pw, void* data);

