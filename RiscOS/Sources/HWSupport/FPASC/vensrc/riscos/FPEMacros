; >riscos.FPEMacros
;
; Copyright (c) 1993 Acorn Computers Ltd., Cambridge, England.
;
; Assembler source for FPA support code and emulator
; ==================================================
; Macro definitions
;

;
; **********************************************************************
;
;
; AdrWS - address module workspace
;
	MACRO
$label	AdrWS	$reg
   [ FPEAnchor > &1000
$label	LDR	$reg, =FPEAnchor
	LDR	$reg, [$reg]
   |
$label	MOV	$reg, #0
	LDR	$reg, [$reg, #FPEAnchor]
   ]
   	MEND

;
; **********************************************************************
;
;
; FPInstrDone - perform any post-processing of a floating point instruction
;
        MACRO
$label  FPInstrDone     $opt

;
; no post-processing, but we do want to stop the thing crossing page
; boundaries, as our abort handler won't be expecting this.
;
        [ "$opt" <> ""
        MOVS    r0, r9, LSL #20         ; sets EQ if crossing 4K boundary
        ]

        MEND

;
; **********************************************************************
;
; Macros for core debugging
;

	MACRO
$label	Debug0	$message
$label  DLINE	"$message"
	MEND

	MACRO
$label	Debug1	$message,$reg
$label	DREG	$reg,"$message "
	MEND

	MACRO
$label	Debug2	$message,$reg1,$reg2
$label	DREG	$reg1,"$message ",cc
	DREG	$reg2
	MEND

	MACRO
$label	Debug3	$message,$reg1,$reg2,$reg3
$label	DREG	$reg1,"$message ",cc
	DREG	$reg2," ",cc
	DREG	$reg3
	MEND

	MACRO
$label	Debug4	$message,$reg1,$reg2,$reg3,$reg4
$label	DREG	$reg1,"$message "
	DREG	$reg2
	DREG	$reg3
	DREG	$reg4,,cc
	MEND

;
; **********************************************************************
;

	END

;
; EOF riscos.FPEMacros
;
