/* > led.h
 *
 *      LED header.
 */

#define LED_COUNT		2

#define LED_TICKER_CLAIMED_FLAG (1U<<0)

#define LED_ON_FLAG		(1U<<0)
#define LED_FLASHING_FLAG	(1U<<1)
#define LED_PUBLIC_FLAGS	(LED_ON_FLAG | LED_FLASHING_FLAG)
#define LED_ON_PRIVATE		(1U<<31)

#ifndef LED0_STATE
#define LED0_STATE 0
#endif

#ifndef LED1_STATE
#define LED1_STATE 0
#endif

#ifndef LED0_FLASH_RATE
#define LED0_FLASH_RATE 50
#endif

#ifndef LED1_FLASH_RATE
#define LED1_FLASH_RATE 50
#endif

#define LED_VAR			"Alias$URLOpenCLI_LEDSet"
#define LED_VARVAL		"LEDSet %*0"
#define LED_VARVALLEN		(sizeof(LED_VARVAL)-1)

typedef struct _led
{
	unsigned int flags;
	unsigned int old_flags;
	const char *name;
	unsigned int flash_rate;
	unsigned int flash_count;
}
led;

extern _kernel_oserror *led_control( _kernel_swi_regs *r, void *pw );
extern _kernel_oserror *led_flashrate( _kernel_swi_regs *r, void *pw );
extern _kernel_oserror *led_initialise( void *pw );
extern void led_finalise( void *pw );
extern void led_set( char *args, void *pw );
extern void led_refresh( void );
