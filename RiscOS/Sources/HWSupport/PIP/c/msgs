/******************************************************************************

      File: msgs.c
   Purpose: module message handling
    Author: A.Pirozek
   History: 25-03-98 - AJP Created

 ******************************************************************************/

#include <stdio.h>
#include "kernel.h"
#include "swis.h"
#include "modhdr.h"
#include "msgs.h"

static _kernel_oserror error_block;
static _kernel_oserror error_block2;

static _kernel_oserror error_list []=
{
  ERROR_INVALID_ARG            +PIP_00, "Invalid argument",
  ERROR_INVALID_NUMBER_REG     +PIP_00, "Invalid number for -Register argument",
  ERROR_MISSING_TOKEN_REG      +PIP_00, "Value missing for -Register argument",
  ERROR_INVALID_ARG_BGSOURCE   +PIP_00, "Invalid argument for -BGSource",
  ERROR_MISSING_ARG_BGSOURCE   +PIP_00, "Missing argument for -BGSource",
  ERROR_MISSING_ARG_PIPSOURCE  +PIP_00, "Missing argument for -PIPSource",
  ERROR_INVALID_ARG_PIPSOURCE  +PIP_00, "Invalid argument for -PIPSource",
  ERROR_MISSING_ARG_PIPPOS     +PIP_00, "Missing argument for -PIPPos",
  ERROR_INVALID_ARG_PIPPOS     +PIP_00, "Invalid argument for -PIPPos",
  ERROR_MISSING_ARG_PIPSIZE    +PIP_00, "Missing argument for -PIPSize",
  ERROR_INVALID_ARG_PIPSIZE    +PIP_00, "Invalid argument for -PIPSize",
  ERROR_MISSING_ARG_GFXSIZE    +PIP_00, "Missing argument for -GFXSize",
  ERROR_INVALID_ARG_GFXSIZE    +PIP_00, "Invalid argument for -GFXSize",
  ERROR_MISSING_ARG_GFXPOS     +PIP_00, "Missing argument for -GFXPos",
  ERROR_INVALID_ARG_GFXPOS     +PIP_00, "Invalid argument for -GFXPos",
  ERROR_MISSING_ARG_GFXALPHA   +PIP_00, "Missing argument for -GFXAlpha",
  ERROR_INVALID_ARG_GFXALPHA   +PIP_00, "Invalid argument for -GFXAlpha",
  ERROR_INVALID_VALUE_GFXALPHA +PIP_00, "Invalid value for -GFXAlpha (0-128)",
  ERROR_MISSING_ARG_GFXFADE    +PIP_00, "Missing argument for -GFXFade",
  ERROR_INVALID_ARG_GFXFADE    +PIP_00, "Invalid argument for -GFXFade",
  ERROR_BAD_REASON_CODE        +PIP_00, "Invalid reason code",
  ERROR_RESERVED_FLAGS_MUSTB0  +PIP_00, "Reserved flags must be 0",
  ERROR_BAD_SUB_REASON_CODE    +PIP_00, "Sub reason code out of range",
  ERROR_INVALID_VIDEO_SOURCE   +PIP_00, "Invalid video source",
  ERROR_INVALID_FLAG_COMBI     +PIP_00, "Invalid flags combination",
  ERROR_MALLOC_FAILED          +PIP_00, "malloc failed",
  ERROR_REGISTER_FILE_NOTFOUND +PIP_00, "Register file not found",
  ERROR_REGFILE_INVALID_LINE   +PIP_00, "Invalid line in register file at %d    ",
  ERROR_REGFILE_BAD_REGISTER   +PIP_00, "Bad register offset at line %d    ",
  ERROR_REGFILE_BAD_REGVAL     +PIP_00, "Bad register value at line %d    ",
  ERROR_CANT_OPEN_FILE         +PIP_00, "Couldn't open file",
  ERROR_FILE_WRITE_FAILED      +PIP_00, "File write failed",
  ERROR_MISSING_ARG_PIPTOP     +PIP_00, "Missing argument for -PIPTop",
  ERROR_INVALID_ARG_PIPTOP     +PIP_00, "Invalid argument for -PIPTop",
  ERROR_CHANNEL                +PIP_00, "Hey lad, downt yoo gow pressin that channel buttun cos it downt doo nowt!",
  ERROR_SHORT_SPRITE_FILE      +PIP_00, "Sprite file too short",
  ERROR_FILE_NOT_FOUND         +PIP_00, "File not found",
  ERROR_NOT_24BPP_SPRITE       +PIP_00, "Not a 24bpp sprite",
  ERROR_MISSING_ARG_ALPHA_MODE +PIP_00, "Missing argument for -GFXAlphaMode",
  ERROR_INVALID_ARG_ALPHA_MODE +PIP_00, "Invalid argument for -GFXAlphaMode",
  ERROR_MISSING_ARG_GFX_KEYING +PIP_00, "Missing argument for -GFXAlphaKeying",
  ERROR_INVALID_ARG_GFX_KEYING +PIP_00, "Invalid argument for -GFXAlphaKeying",
  ERROR_MISSING_ARG_GFX_KLEVELS+PIP_00, "Missing argument for -GFXKey",
  ERROR_INVALID_ARG_GFX_KLEVELS+PIP_00, "Invalid argument for -GFXKey",
  ERROR_MISSING_ARG_GFX_FALPHA +PIP_00, "Missing argument for -GFXFontAlpha",
  ERROR_INVALID_ARG_GFX_FALPHA +PIP_00, "Invalid argument for -GFXFontAlpha",
  ERROR_INVALID_VALUE_FALPHA   +PIP_00, "Invalid value for -GFXFontAlpha (0-128)",
  ERROR_MISSING_ARG_GFX_FILTER +PIP_00, "Missing argument for -GFXFilter",
  ERROR_INVALID_ARG_GFX_FILTER +PIP_00, "Invalid argument for -GFXFilter",
  ERROR_INVALID_VALUE_GFX_FILTER+PIP_00,"Invalid value for -GFXFilter, must be 0 or 1",
  ERROR_INVALID_SCREEN_NUMBER  +PIP_00, "Invalid screen number",
  ERROR_TABLE_END,                      "Unknown error message"
};

/******************************************************************************
 return a 'No memory in RMA' error
  parameters:
     returns:
 ******************************************************************************/
_kernel_oserror *msge_no_mem ( void)
{
  static const struct
  {
    int  errnum;      /* The "not enough memory in RMA" error code */
    char errmess[6];
  } nomem_err = { 0x101, "NoMem" };

  return _swix ( MessageTrans_ErrorLookup, _INR(0,3), &nomem_err,
                 0, &error_block, sizeof ( error_block));
}

/******************************************************************************
 return an error message
  parameters: err_numb - error number
     returns:
 ******************************************************************************/
_kernel_oserror *msge_lookup ( int err_numb)
{
  int index =0;

  while ( error_list [ index].errnum !=err_numb +PIP_00 &&
          error_list [ index].errnum !=ERROR_TABLE_END)
    index ++;

  return &error_list [ index];
}

/******************************************************************************
 make an error message
  parameters: err_numb - error number
     returns:
 ******************************************************************************/
_kernel_oserror *msge_make ( int err_numb, int val)
{
  int index =0;

  while ( error_list [ index].errnum !=err_numb +PIP_00 &&
          error_list [ index].errnum !=ERROR_TABLE_END)
    index ++;

  error_block2.errnum =err_numb +PIP_00;
  sprintf ( error_block2.errmess, error_list [ index].errmess, val);
  return &error_block2;
}
