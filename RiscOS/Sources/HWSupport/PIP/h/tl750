/******************************************************************************

      File: tl750.h
   Purpose: header file for tl750.c
    Author: A.Pirozek
   History: 26-03-98

 ******************************************************************************/

#ifndef __tl750_h
#define __tl750_h

#include "module.h"

#define TL750_ALPHA_FADE_OUT 0
#define TL750_ALPHA_FADE_IN  1

extern uint podule_base, tl750_regs, mem_straight,
            mem_swapped, screen_start;
extern uint *volatile waddr;

/* registers */
#define DISP_CONFIG                       (0)
#define DISP_STATUS                       (1)
#define DISP_INT_EN                       (2)
#define DISP_INT_STAT                     (3)
#define DISP_COUNT                        (4)
#define DISP_SYNC_DELAY1                  (5)
#define DISP_SYNC_DELAY2                  (6)
#define DISP_BG_CUMLUMA                   (7)
#define DISP_SVDO_CUMLUMA                 (8)
#define DISP_SGFX_CUMLUMA                 (9)
#define DISP_OPQ_CUMLUMA                  (0xa)
#define DISP_BG_CONFIG                    (0x10)
#define DISP_BGFX_TILESA                  (0x11)
#define DISP_BGFX_TILEOSET                (0x12)
#define DISP_BGFX_TILESIZE                (0x13)
#define DISP_SVDO_CONFIG                  (0x20)
#define DISP_SVDO_SA                      (0x21)
#define DISP_SVDO_EA                      (0x22)
#define DISP_SVDO_RPTR                    (0x23)
#define DISP_SVDO_SIZE                    (0x24)
#define DISP_SVDO_POS                     (0x25)
#define DISP_SGFX_CONFIG                  (0x30)
#define DISP_SGFX_SA                      (0x31)
#define DISP_SGFX_PITCH                   (0x32)
#define DISP_SGFX_SIZE                    (0x33)
#define DISP_SGFX_POS                     (0x34)
#define DISP_GALPHA_IBASE                 (0x35)
#define DISP_SGFX_BCOLOUR                 (0x36)
#define DISP_SGFX_MAX_KEY                 (0x37)
#define DISP_SGFX_MIN_KEY                 (0x38)
#define DISP_HSCALE_CTRL                  (0x39)
#define DISP_VSCALE_CTRL                  (0x3a)
#define DISP_SGFX_SCSIZE                  (0x3b)
#define DISP_CURS_SA                      (0x40)
#define DISP_CURS_POS                     (0x41)
#define DISP_CURS_OFFSET                  (0x42)
#define DISP_CURS_CLUT_REG                (0x50)
#define DISP_MEM_ADDR                     (0x60)
#define DISP_MEM_DATA                     (0x61)
#define VSC_A_CTRL                        (0x80)
#define VSC_B_CTRL                        (0x81)
#define VSC_A_STATUS                      (0x82)
#define VSC_B_STATUS                      (0x83)
#define VSC_INT_EN_REG                    (0x84)
#define VSC_INT_STATUS                    (0x85)
#define VSC_BCS_REG                       (0x86)
#define VSC_ROI_HREG                      (0x87)
#define VSC_ROI_VREG                      (0x88)
#define VSC_DDA_HREG                      (0x8a)
#define VSC_CTRL_REG                      (0x89)
#define VSC_DDA_VREG                      (0x8b)
#define VSC_IBUF_REG                      (0x8c)
#define VSC_DBUF_SADR                     (0x8d)
#define VSC_DBUF_EADR                     (0x8e)
#define VSC_DBUF_WADR                     (0x8f)
#define Blt_Chan_S0                       (0xa0)
#define Blt_Chan_S1                       (0xa1)
#define Blt_Chan_D                        (0xa2)
#define Blt_Cmd                           (0xa3)
#define Blt_Mode                          (0xa4)
#define Blt_Stat                          (0xa5)
#define APU_CPB_CONFIG                    (0xc1)
#define APU_IEC_CONFIG                    (0xc2)

/* register bit masks */
/* (3) display configuration register */
#define DISP_CONFIG_BG_VIDEO_ENABLE       (1<<1)  /* background video display */
#define DISP_CONFIG_SCALED_GRAPHIC_ENABLE (1<<3)  /* scaled graphic enable */
#define DISP_CONFIG_SCALED_VIDEO_ENABLE   (1<<2)  /* scaled video enable */
#define DISP_CONFIG_CURSOR_ENABLE         (1<<4)  /* cursor on/off */
#define DISP_CONFIG_VIDEO1_ENABLE         (1<<5)  /* video port 1 enable */
#define DISP_CONFIG_VIDEO2_ENABLE         (1<<6)  /* video port 2 enable */
#define DISP_CONFIG_VIDEO1_SELECT         (3<<8)  /* video port 1 select */
/*  (14) background graphics and video configiguration */
#define DISP_BG_CONFIG_BG_VIDEO_SELECT    (7)     /* bg video source */
#define DISP_BG_CONFIG_BG_TILE_ENABLE     (1<<3)  /* bg gfx tile enable */
#define DISP_BG_CONFIG_BG_COLOUR          (0xffffff00) /* bg colour */
/*  (22) scaled video size registers */
#define DISP_SVDO_SIZE_WIDTH              (0x000003ff) /* width 0-1022 */
#define DISP_SVDO_SIZE_HEIGHT             (0x3ff<<16)  /* width 0-1022 */
/*  (23) scaled video position */
#define DISP_SVDO_POS_X                   (0x000003fe) /* X */
#define DISP_SVDO_POS_Y                   (0x3ff<<16)  /* Y */
/*  (24) scaled graphics configuration register */
#define DISP_SGFX_CONFIG_FORMAT           (0xf)   /* graphics format */
#define DISP_SGFX_CONFIG_KEYING           (1<<4)  /* colour keying */
#define DISP_SGFX_CONFIG_ALPHA_MODE       (1<<6)  /* local or global alpha */
#define DISP_SGFX_CONFIG_BORDER           (1<<25) /* border on/off */
/*  (26) scaled graphics pitch */
#define DISP_SGFX_PITCH_PITCH             (0x7ff)
/*  (27) scaled graphics size register */
#define DISP_SGFX_SIZE_WIDTH              (0x3ff)     /* width of sgfx */
#define DISP_SGFX_SIZE_HEIGHT             (0x3ff<<16) /* height of sgfx */
/*  (28) scaled graphics configuration register */
#define DISP_SGFX_POS_X                   (0x3ff)  /* x position of graphic */
/*  (28) scaled graphics configuration register */
#define DISP_SGFX_POS_Y                   (0x3ff<<16)/* y position of graphic */
/*  (29) global alpha register and index base register */
#define DISP_GALPHA_GLOBAL_ALPHA          (0xff)  /* global alpha level */
/*  (43/44) video channel A and B control register */
#define VSC_AB_CTRL_STANDARD              (3<<2)  /* ntsc, pal etc */
#define VSC_AB_CTRL_ENABLE                (1<<18)
/*  (53) scaled video control register */
#define VSC_CTRL_REG_ENABLE_PIP           (1)     /* enable pip */
#define VSC_CTRL_REG_SOURCE_SELECT        (1<<1)  /* select source for pip */

typedef struct _rect
{
  int x, y, w, h;
} rect;

#define max(a,b) ((a)>(b)?(a):(b))
#define RW_MACRO

#ifdef RW_MACRO
#define tl750_register_wo(r,a,e)\
    *(waddr +( r)) = (*(waddr +( r))&((a)^0xffffffffu))^(e)
#endif

#define MAX_REG (512)

extern _kernel_oserror *tl750_init ( void *pw);
extern _kernel_oserror *tl750_register ( int regoff, int *and, int *eor);
#ifndef RW_MACRO
extern void tl750_register_wo ( int regoff, int and, int eor);
#endif
extern _kernel_oserror *tl750_bgsource_colour ( uint colour);
extern _kernel_oserror *tl750_bgsource_sprite ( char *spritefile);
extern _kernel_oserror *tl750_bgsource_video ( int vidsource);
extern _kernel_oserror *tl750_bgsave ( void);
extern _kernel_oserror *tl750_bgrestore ( void);
extern _kernel_oserror *tl750_pipsource ( int source, int zoom);
extern _kernel_oserror *tl750_pipsave ( void);
extern _kernel_oserror *tl750_piprestore ( void);
extern _kernel_oserror *tl750_pipsize_set_width ( int width);
extern _kernel_oserror *tl750_pipsize_set_height ( int height);
extern _kernel_oserror *tl750_pipsize_alter_width ( int width);
extern _kernel_oserror *tl750_pipsize_alter_height ( int height);
extern _kernel_oserror *tl750_pippos_set_x ( int x);
extern _kernel_oserror *tl750_pippos_set_y ( int y);
extern _kernel_oserror *tl750_pippos_alter_x ( int x);
extern _kernel_oserror *tl750_pippos_alter_y ( int y);
extern _kernel_oserror *tl750_piptop ( int tb);
extern _kernel_oserror *tl750_gfxsize_set_width ( int width);
extern _kernel_oserror *tl750_gfxsize_set_height ( int height);
extern _kernel_oserror *tl750_gfxsize_alter_width ( int width);
extern _kernel_oserror *tl750_gfxsize_alter_height ( int height);
extern _kernel_oserror *tl750_gfxsize_full_screen ( void);
extern _kernel_oserror *tl750_gfxpos_set_x ( int x);
extern _kernel_oserror *tl750_gfxpos_set_y ( int y);
extern _kernel_oserror *tl750_gfxpos_alter_x ( int x);
extern _kernel_oserror *tl750_gfxpos_alter_y ( int y);
extern _kernel_oserror *tl750_gfxalpha ( int alpha);
extern _kernel_oserror *tl750_gfxfade ( int fade);
extern _kernel_oserror *tl750_setbase ( uint base);
extern _kernel_oserror *tl750_write_to_base ( uint value);
extern _kernel_oserror *tl750_info ( void);
extern _kernel_oserror *tl750_memtest ( void);
extern _kernel_oserror *tl750_read_register_file ( char *regfile);
extern _kernel_oserror *tl750_save_register_file ( char *regfile);
extern _kernel_oserror *tl750_tick_handler( _kernel_swi_regs *r, void *pw);
extern _kernel_oserror *tl750_final ( void *pw);
extern _kernel_oserror *tl750_cursor ( int state);
extern void tl750_gfxkey ( int state);
extern void tl750_gfx_colour_keys ( uint min, uint max);
extern void tl750_gfx_alpha_mode ( int mode);
extern void tl750_gfxset_format ( int format);
extern void tl750_pip_read_pos ( int *x, int *y);
extern void tl750_pip_read_size ( int *w, int *h);
extern void tl750_pip_set_pos ( int x, int y);
extern void tl750_pip_set_size ( int w, int h);
extern _kernel_oserror *tl750_savemem ( char *memfile);
extern void tl750_clearmem ( void);
extern void tl750_gfxfilter ( int filtnum);
extern _kernel_oserror *tl750_gfx_visible_screen ( int snumb);
extern _kernel_oserror *tl750_gfx_written_screen ( int snumb);
extern void tl750_gfx_alter_screen_sa ( uint offset);

#endif /* __tl750_h */
