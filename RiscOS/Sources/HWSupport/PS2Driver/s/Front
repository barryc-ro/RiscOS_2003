; > Sources.Front

;-----------------------------------------------------------------------------
;       Useful declarations.
;

; Driver state flags.
state_RESET             *       &01     ; In reset.
state_KEYUP             *       &02     ; This key is going up.
state_WANTACK           *       &04     ; Don't send any more until ACK from keyboard.
state_WANTBAT           *       &08     ; Don't send any more until BAT from keyboard.
state_SPECIAL           *       &10     ; In special code sequence.
state_BREAK             *       &20     ; In break code sequence.
 [ RCASupport
state_RCA		*	&40	; In RCA (E2, nn) sequence.
state_FUNCDOWN		*	&80	; FUNC key is down
 ]

; Bytes from keyboard.
keybd_ERROR             *       &00
keybd_BAT               *       &AA
keybd_SPECIAL           *       &E0
keybd_BREAK             *       &E1
 [ RCASupport
keybd_RCA		*	&E2
 ]
keybd_KEYUP             *       &F0
keybd_ACK               *       &FA
keybd_RESEND            *       &FE

; Keyboard commands.
command_SETLEDS         *       &ED
command_SETRATE         *       &F3
command_RESEND          *       &FE
command_RESET           *       &FF

command_SETCOUNT        *       &E8     ;AKA Set Resolution
command_ENABLE          *       &F4     ; Start transmission if in Incremental Stream mode
command_DISABLE         *       &F5     ; Stop transmission of mouse position reports
command_DEFAULT         *       &F6

 [ RCASupport
; Key up/down codes for mangling FUNC+digit into Fdigit
; Fortunately the codes for the digits 1 to 0 are consecutive, as are the codes for F1 to F10

keyupdown_1		*	&11
keyupdown_F1		*	&01
keyupdown_FUNC		*	&81

; KeyV code for POWER key

keyv_POWER              *       &80
 ]

resend_count            *       10      ; Maximum number of resends in sequence.

;-----------------------------------------------------------------------------
;       Workspace layout.
;

;PortName
; 1  KBDDAT & KBDCR  (may have keyboard OR mouse attached)
; 2  MSEDAT & MSECR  (may have mouse OR keyboard attached)
; 3  PSD             (pseudo stream through KEYV to Stork internal keyboard)
;
;DeviceType
; 0  Unknown
; 1  Mouse
; 2  Keyboard
;
channel                 RN      R10
                        ^       0,channel
moduleworkspace         #       4       ;pointer to modules workspace ie its R12 value

TxBuffer                #       16      ; Circular buffer for commands sent to keyboard.
TxBufferEnd             #       0
TxInsert                #       4       ; Pointer to position to insert into TxBuffer.
TxPtr                   #       4       ; Pointer to next byte in TxBuffer to send to keyboard.
PortName                #       1
KBState                 #       1       ; Port state.
ResendCount             #       1       ; Remaining resends allowed.
DeviceType              #       1       ;
                        #       3:AND:(-:INDEX:@)

RXStateHandler          #       4       ; Address of current state handler.

Byte1                   #       1       ; First byte of serial mouse report.
Byte2                   #       1       ; Second byte of serial mouse report.
Byte3                   #       1       ; Third byte of serial mouse report.
Byte4                   #       1       ; Fourth byte of serial mouse report.
                        #       3:AND:(-:INDEX:@)
channel_ws_size         *       :INDEX:@


;machine type/channels available
; 1  medusa ie PS2 kbd only
; 2  kryten ie PS2 kbd & PS2 mouse
; 3  stork  ie PS2 kbd & PS2 mouse & Keyboard/battery micro
;
workspace               RN      R12
                        ^       0,workspace
wsorigin                #       0
 [ international
message_file_open       #       4
message_file_block      #       4*4
 ]

PortCount               #       4
KeyState                #       1       ; Keyboard driver state.
LEDState                #       1       ; Current LED state.
                        #       3:AND:(-:INDEX:@)

MouseData               #       0       ; Mouse data record.
DeltaX                  #       4       ; X movement since last query from Kernel.
DeltaY                  #       4       ; Y movement since last query from Kernel.
Buttons                 #       4       ; Button states.
LastButtons             #       1       ; Button states on last poll.
                        #       3:AND:(-:INDEX:@)

 [ KillAutoRepeat
  [ RCASupport
KeyFlags                #       20      ; Key up/down flags. (extended for RCA from 16)
  |
KeyFlags                #       16      ; Key up/down flags.
  ]
 ]

 [ RCASupport
FunkyDigits		#	12	; 10 bytes needed for FUNC'd digits - each byte = 0 for not FUNC'd, 1 for FUNC'd
 ]

 [ debugtable
DebugTable              #       508
DebugTableEnd           #       0
DebugPtr                #       4
 ]

PS2ch1                  #       channel_ws_size ;KBDDAT & KBDCR  (may have keyboard OR mouse attached)
PS2ch2                  #       channel_ws_size ;MSEDAT & MSECR  (may have mouse OR keyboard attached)
PS2ch3                  #       channel_ws_size

max_running_work        *       :INDEX:@

        ! 0, "PS2Driver workspace is ":CC:(:STR:(:INDEX:@)):CC:" bytes"


        END
