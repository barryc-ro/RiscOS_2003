/* error.h
 *
 *      General purpose error header.
 */

/* We use top bit of error number to flag whether error needs	*/
/* to be looked up before being returned to the OS.		*/
#define ERROR_LOOKUP_BIT	(1U<<31)

/* Error numbers used by the module.
 */
#define ERROR_NOMEM		0x00000101
#define ERROR_BUFOFLO		0x000001E5
#define ERROR_BADPARM		0x000001ED

/* Declare the given error in a memory efficient way.
 */
#define ERROR_STRUCT(name,text) \
        struct {int errnum; char errmess[sizeof(text)+1];} name = {ERROR_LOOKUP_BIT|ERROR_##name,text}

/* Declare the given error as external.
 */
#define ERROR_EXTERN(name) \
        extern struct {int errnum; char errmess[1];} name

/* Turn a pointer into an error.
 */
#define ERROR(e)  ((_kernel_oserror *)&(e))
