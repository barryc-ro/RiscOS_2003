/* > ir.h
 *
 *      ir driver header.
 */

#ifndef __kernel_h
#include "kernel.h"
#endif


/*
 * Constants
 */

/* Modifier keys in packet_t.keyboard.mods */
#define KEY_MOD_MOD2	1
#define KEY_MOD_MOD1	2
#define KEY_MOD_ALT	4
#define KEY_MOD_SHIFT	8
#define KEY_MOD_CTRL	16

/* Commands in command_t.command */
#define CMD_RESET	1
#define CMD_HALT	2

/* Bits in Flags */
#define ENABLED		(1<<0)
#define STANDBY		(1<<1)


/*
 *  Types
 */
typedef union
{
  unsigned int word;			/* Bytes 1 to 3 */

  typedef struct {
    unsigned int tag		: 4;	/* Byte 1 */
  } generic;

  typedef struct {
    unsigned int tag		: 4;	/* Byte 1 */
    unsigned int new_tag	: 4;
    unsigned int num_hi		: 7;	/* Byte 2 */
    unsigned int low_battery	: 1;
    unsigned int num_lo		: 8;	/* Byte 3 */
  } reg_basic;

  typedef struct {
    unsigned int tag		: 4;	/* Byte 1 */
    unsigned int new_tag	: 4;
    unsigned int num_hi		: 7;	/* Byte 2 */
    unsigned int num_15		: 1;	/* Bogus! */
    unsigned int num_lo		: 8;	/* Byte 3 */
  } reg_extended;

  typedef struct {
    unsigned int tag		: 4;	/* Byte 1 */
    unsigned int unused		: 2;
    unsigned int resend		: 1;
    unsigned int repeat		: 1;
    unsigned int scancode	: 8;	/* Byte 2 */
    unsigned int unused2	: 3;	/* Byte 3 */
    unsigned int mods		: 5;
  } keyboard;

  typedef struct {
    unsigned int tag		: 4;	/* Byte 1 */
    unsigned int button2	: 1;
    unsigned int button1	: 1;
    unsigned int y_8		: 1;
    unsigned int x_8		: 1;
    unsigned int x		: 8;	/* Byte 2 */
    unsigned int y		: 8;	/* Byte 3 */
  } absolute;

  typedef struct {
    unsigned int tag		: 4;	/* Byte 1 */
    unsigned int button2	: 1;
    unsigned int button1	: 1;
    unsigned int y_polarity	: 1;
    unsigned int x_polarity	: 1;
    unsigned int x		: 8;	/* Byte 2 */
    unsigned int y		: 8;	/* Byte 3 */
  } relative;

  typedef struct {
    unsigned int tag		: 4;	/* Byte 1 */
    unsigned int cycle		: 2;
    unsigned int unused		: 2;
    unsigned int data_hi	: 8;	/* Byte 2 */
    unsigned int data_lo	: 8;	/* Byte 3 */
  } data;
  
} packet_t;


typedef union
{
  unsigned char byte;

  typedef struct
  {
    unsigned int command	: 3;
    unsigned int info		: 4;
    unsigned int topbit		: 1;	/* Should always be set */
  } generic;
  
} command_t;


/*
 * Public functions
 */
void Disable( void );
int ir_DeviceRxDataPresent( void );
void ir_finalise( void *pw );
_kernel_oserror *ir_initialise( void *pw );
void ir_keyb(int direction, unsigned int code, unsigned int mods);
int ir_getfamily(void);
void ir_setfamily(int);
void reset(int family);
void halt(void);


/*
 * Public globals
 */
extern int in_handle, out_handle;		/* DeviceFS serial: handles */
extern unsigned int last_code, last_mods;	/* Keyboard stuff */
extern int Flags;
