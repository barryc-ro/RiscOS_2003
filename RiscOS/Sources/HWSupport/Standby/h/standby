/* > standby.h
 *
 *      Standby header.
 */

#define STANDBY_SHUTDOWN_FLAG   (1<<0)
#define STANDBY_BUSY_FLAG       (1<<1)
#define STANDBY_ENABLE_KEYBOARD (1<<2)
#define STANDBY_ENABLE_POINTER	(1<<3)

#define STANDBY_STANDBY_FORCE_FLAG	(1<<0)
#define STANDBY_STANDBY_SKIP_PREQUIT	(1U<<31)

#define STANDBY_LED_NUMBER	1

#define STANDBY_ONLINE_EVENT	0x00000007

#define STANDBY_ENABLE_DELAY	500

/* If InitState not defined default to 1 (go into standby) */
#if 0 * STANDBY_INITIAL_STATE + 1 == 0
#undef STANDBY_INITIAL_STATE
#define STANDBY_INITIAL_STATE		1
#endif

extern _kernel_oserror *standby_initialise( void *pw );
extern void standby_finalise( void *pw );
extern _kernel_oserror *standby_state( _kernel_swi_regs *r );
extern _kernel_oserror *standby_standby( _kernel_swi_regs *r, void* pw );
extern _kernel_oserror *standby_online( _kernel_swi_regs *r, void *pw );
