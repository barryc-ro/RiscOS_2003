/* > standby.h
 *
 *      Standby header.
 */

#define STANDBY_DEVNO           36

#define STANDBY_SHUTDOWN_FLAG   (1<<0)
#define STANDBY_BUSY_FLAG       (1<<1)
#define STANDBY_HANDLED_FLAG    (1<<2)
#define STANDBY_ENABLE_KEYBOARD (1<<3)
#define STANDBY_ENABLE_POINTER	(1<<4)
#define STANDBY_DISABLE_FLAG    (1<<5)

#define STANDBY_CALLAFTER       10

#define STANDBY_LED_FLAG        (1<<0)
#define STANDBY_LED_GREEN       0
#define STANDBY_LED_RED         1


extern _kernel_oserror *standby_initialise( void *pw );
extern void standby_finalise( void *pw );
extern _kernel_oserror *standby_state( _kernel_swi_regs *r );
extern _kernel_oserror *standby_standby( _kernel_swi_regs *r, void* pw );
extern _kernel_oserror *standby_online( _kernel_swi_regs *r );
extern _kernel_oserror *standby_control( _kernel_swi_regs *r );
extern void standby_wimpreplyhandler( _kernel_swi_regs* r, void* pw);
