/* > module.h
 *
 *      Header file for module.
 */

#define MODULE_NAME             "Standby"

#define NOT_USED(v)             ((v)=(v))

#define FALSE                   0
#define TRUE                    (~(FALSE))

#define TinySupport_Init        0x82c40
#define TinySupport_Die         0x82c41
#define TinySupport_Init2       0x82c42
#define TinySupport_Share       0x82c43

#define UpCall_Online           13
#define UpCall_Standby          14

#define Service_ShutDown            0x7E
#define Service_ShutDownComplete    0x80
#define Service_Standby             0xAD

#define ScreenBlankerReason_StrictBlank     8
#define ScreenBlankerReason_StrictUnblank   9

#undef TaskModule_SendMessage
#define TaskModule_SendMessage	0x4D300

#undef SoundFX_Play
#define SoundFX_Play		0x4EF41

typedef struct
	{
	unsigned int		size;
	unsigned int		sender;
	unsigned int		myref;
	unsigned int		yourref;
	unsigned int		action;
	}
	message_header;

typedef struct	{
	message_header	header;
	union	{
		int	value;
		struct	{
			unsigned int	singletask;
			}
			data;
		}
		prequit;
	}
	message_prequit;


_kernel_oserror *module_finalise( int fatal, int podule, void *pw );
_kernel_oserror *module_initialise( char *cmd_tail, int podule_base, void *pw );
_kernel_oserror *module_swi( int swi_no, _kernel_swi_regs *r, void *pw );
