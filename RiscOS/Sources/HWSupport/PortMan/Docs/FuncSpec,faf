<html>
  <head>
    <title>Port Manager Module Functional Specification</title>
  </head>
  <body>
    <h1>Port Manager Module Functional Specification</h1>
    <hr>
    <center><table>
      <tr><td>Drawing Number:</td>
          <td>(unknown)</td>
      </tr>
      <tr><td>Issue:</td>
          <td>A</td>
      </tr>
      <tr><td>Date:</td>
          <td>1 March, 1999</td>
      </tr>
      <tr><td>Previous issue:</td>
          <td>None</td>
      </tr>
      <tr><td>Status:</td>
          <td>Draft</td>
      </tr>
      <tr><td>Change:</td>
          <td></td>
      </tr>
      <tr><td>Author:</td>
          <td>Neil Turton</td>
      </tr>
      <tr><td>Master Format:</td>
          <td>HTML</td>
      </tr>
    </table></center>
    <hr>
    <h2>1 Introduction</h2>
    <h3>1.1 Purpose and scope</h3>
    <h3>1.2 Change history</h3>
    <h3>1.3 Anticipated Changes</h3>
    <h3>1.4 References</h3>
    <h3>1.5 Terminology</h3>

    <h2>2 Outstanding Issues</h2>

    <h2>3 Technical Background</h2>

    <h2>4 User interface</h2>

    <h2>5 Programmer interface</h2>
    <p>
      The Port Manager module will provide the following SWIs.  All SWIs return a
      standard RISC OS error block in <code>r0</code> and set the V bit if the
      operation failed.

    <h3>5.1 PortMan_AccessBit (&amp;????0)</h3>

    <h4>5.1.1 On entry</h4>
      <table border="1">
        <tr>
          <th width="20%">Register</th>
          <th width="60%">Meaning</th>
        </tr>
        <tr>
          <td align="center"><code>r0</code></td>
          <td>Flags.</td>
        </tr>
        <tr>
          <td align="center"><code>r1</code></td>
          <td>Pointer to tag name - NUL terminated.</td>
        </tr>
      </table>

    <h4>5.1.2 Flags</h4>
      <table border="1">
        <tr>
          <th width="20%">Bit number</th>
          <th width="60%">Meaning when set</th>
        </tr>

        <tr>
          <td align="center"><code>0</code></td> <td>The bit should be masked.</td>
        </tr>
        <tr>
          <td align="center"><code>1</code></td> <td>The bit should be toggled.</td>
        </tr>
      </table>
      All other bits should be <strong>zero</strong> on entry.

    <h4>5.1.3 On exit</h4>
      <table border="1">
        <tr>
          <th width="20%">Register</th>
          <th width="60%">Meaning</th>
        </tr>
        <tr>
          <td align="center"><code>r0</code> </td>
          <td>Output flags.</td>
        </tr>
      </table>
      All other registers are preserved.

    <h4>5.1.4 Output flags</h4>
      <table border="1">
        <tr>
          <th width="20%">Bit</th>
          <th width="60%">Meaning when set</th>
        </tr>

        <tr>
          <td align="center"><code>0</code></td>
          <td>The old value of the bit.</td>
        </tr>

        <tr>
          <td align="center"><code>1</code></td>
          <td>The new value of the bit.</td>
        </tr>
      </table>
      All other registers are preserved.

    <h4>5.1.5 Effect</h4>
    <p>
      This SWI will modify a single bit which is under the control of the
      module if it is an output bit.  If the specified bit is an input bit,
      the value of the bit is not changed.  The bit is specified by a tag
      name which is pointed to by <code>r1</code> on entry.  The logical
      value of the bit is first cleared if bit <code>0</code> of flags is
      set.  The value is then toggled if bit <code>1</code> of flags is set. 
      The original value of the bit is returned in <code>r0</code>.  Note:
      The meaning of the logical state of the bit is defined by the tag and
      may be different from the value of the bit in hardware.

    <h4>5.1.6 Errors</h4>
    <p>
      The following errors are defined.
      <table border="1">
        <tr>
          <th>Error number</th>
          <th>Meaning</th>
        </tr>

        <tr>
          <td align="center">&amp;????0</td>
          <td>The specified tag does not exist.</td>
        </tr>

      </table>

    <h2>6 Data interchange</h2>
    <h3>6.1 Defined tags</h3>
    <p>
      The following tags are currently defined.
    <p>   
      <table border="1">
        <tr>
          <th width="20%">Tag name</th>
          <th width="10%">Type</th>
          <th width="50%">Meaning of bit when set</th>
        </tr>

        <tr>
          <td align="center"><code>LED_Red</code></td>
          <td align="center">Output</td>
          <td>The red LED is on.</td>
        </tr>

        <tr>
          <td align="center"><code>LED_Green</code></td>
          <td align="center">Output</td>
          <td>The green LED is on.</td>
        </tr>

        <tr>
          <td align="center"><code>MPEG_Fitted</code></td>
          <td align="center">Input</td>
          <td>MPEG Hardware is fitted.</td>
        </tr>

        <tr>
          <td align="center"><code>SCART_CVBS</code></td>
          <td align="center">Output</td>
          <td>CVBS should be selected on the SCART connector (not RGB select).</td>
        </tr>

        <tr>
          <td align="center"><code>SCART_TV</code></td>
          <td align="center">Output</td>
          <td>TV mode should be asserted on the SCART connector (not external mode).</td>
        </tr>

        <tr>
          <td align="center"><code>WATCHDOG_STANDBY</code></td>
          <td align="center">Output</td>
          <td>Inform watchdog timer that the machine is in standby.</td>
        </tr>
      </table>

    <h2>7 Data formats</h2>
    <h3>7.1 Tags file format</h3>
    <p>
      This module is configured using a tags file.  The file is a set of
      lines containing colon separated fields.  The following fields are
      defined.

      <table border="1">
        <tr>
          <th>Field number</th>
          <th>Default if optional</th>
          <th>Meaning</th>
        </tr>

        <tr>
          <td align="center"><code>1</code></td>
          <td><em>Mandatory</em></td>
          <td>The name of the tag to be matched.</td>
        </tr>

        <tr>
          <td align="center"><code>2</code></td>
          <td><em>Mandatory</em></td>
          <td>Specifies which bit the tag refers to.</td>
        </tr>

        <tr>
          <td align="center"><code>3</code></td>
          <td><code>0</code></td>
          <td>Specifies which port should be used.</td>
        </tr>

        <tr>
          <td align="center"><code>4</code></td>
          <td><code>0</code></td>
          <td>Flags.</td>
        </tr>
      </table>

    <h3>7.2 Tags file flags</h3>
    <p>
      The flags field in the tags file has the following meaning.
    <p>
      <table border="1">
        <tr>
          <th>Flag big</th>
          <th>Meaning</th>
        </tr>

        <tr>
          <td align="center"><code>0</code></td>
          <td>Bit is inverted in hardware.</td>
        </tr>

        <tr>
          <td align="center"><code>1</code></td>
          <td>Bit is an output bit.</td>
        </tr>
      </table>

    <h2>8 External dependencies</h2>

    <h2>9 Acceptance test</h2>

    <h2>10 Non compliances</h2>

    <h2>11 Development test stategy</h2>

    <h2>12 Product organisation</h2>

    <h2>13 Future enhancements</h2>

    <h2>14 Glossary</h2>

    <h2>15 References</h2>

    <h2>16 History</h2>

  </body>
</html>
