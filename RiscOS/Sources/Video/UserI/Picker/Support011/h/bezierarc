#ifndef bezierarc_H
#define bezierarc_H

/*bezierarc.h - arc to bezier conversion*/

/* Constants */
#define bezierarc_PI      3.1415927
#define bezierarc_RAD90   (bezierarc_PI/2)
#define bezierarc_RAD360  (bezierarc_PI*2)

/* Construct a bezier arc of less than 90 degrees */
extern void bezierarc_short (os_coord centre, double start_angle,
      double end_angle, int radius, os_coord *start, os_coord *end,
      os_coord *control1, os_coord *control2);

/* Construct a 90 degree bezier arc */
extern void bezierarc_90 (os_coord centre, double start_angle,
      int radius, os_coord *start, os_coord *end, os_coord *control1,
      os_coord *control2);

/* Construct a set of points defining a circle */
extern void bezierarc_circle (os_coord centre, int radius, os_coord p [13]);

/* Get points for first segment of an arc -> number of segments */
extern int bezierarc_start (os_coord centre, double start_angle,
      double end_angle, int radius, os_coord *start, os_coord *end,
      os_coord *bezier1, os_coord *bezier2);

/* Next segment of arc -> 0 or next segment number */
extern int bezierarc_segment (int segment, os_coord *end, os_coord *bezier1,
      os_coord *bezier2);

#endif
