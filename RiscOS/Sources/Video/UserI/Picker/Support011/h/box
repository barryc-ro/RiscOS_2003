#ifndef box_H
#define box_H

/*box - various operations on boxes*/

#ifndef os_H
   #include "os.h"
#endif

/* ---------------------- box_extend ---------------------------------------
 *
 * Description:   Extends a box so that includes a new point.
 *
 * Parameters:    *b - the box
 *                *p - the point
 *
 * Returns:       b updated
 *
 * Other info:    Either 0, 1 or 2 edges of the box are moved
 */

extern os_box *box_extend (os_box *b, os_coord *p);

/* ---------------------- box_intersection ---------------------------------
 *
 * Description:   Intersects one box into another.
 *
 * Parameters:    *a - the box to be modifed
 *                *b - the new box
 *
 * Returns:       a updated.
 *
 * Other info:    If there was no intersection, NULL is returned
 *                   and *a is not changed. *B is never changed.
 */

extern os_box *box_intersection (os_box *a, os_box *b);

/* ---------------------- box_within ---------------------------------------
 *
 * Description:   Is a point within a box, or on the boundary?
 *
 * Parameters:    *p - the point
 *                *b - the box
 *
 * Returns:       Whether p lies within b.
 */

extern bool box_within (os_coord *p, os_box *b);

/* ---------------------- box_union ----------------------------------------
 *
 * Description:   Unites one box into another.
 *
 * Parameters:    *a - the box to be modified
 *                *b - the new box
 *
 * Returns:       a updated
 *
 * Other info:    There is always a union! *B is never changed.
 */

extern os_box *box_unite (os_box *a, os_box *b);

/* ---------------------- box_overlap --------------------------------------
 *
 * Description:   Do two boxes overlap?
 *
 * Parameters:    *a, *b - two boxes
 *
 * Returns:       whether they overlap
 *
 * Other info:
 */

extern bool box_overlap (os_box *a, os_box *b);

#endif
