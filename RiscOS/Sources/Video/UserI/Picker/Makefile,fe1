# Makefile for Colour Picker
#
# RISC OS 3.70:
# Now has local version of Support stuff (we have effectively unwound Picker back to
# RISC OS 3.60 version, and local Support stuff with it, 'coz new stuff was bust
# and no time to work out how to fix
#
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name       Description
# ----       ----       -----------
# 18-Aug-94   JC        Created.
# 22-Aug-94   JC        Added -DPICKER to CC flags
# 22-Aug-94   AMcC      Added generic flags and targets for ROM build
# 30-Aug-94   AMcC      Set ZM macro to -zM
# 30-Aug-94   JC        Removed resorces from image; internationalisation
# 31-Aug-94   JC        Added -DSTANDALONE
# 22-Sep-94   AMcC      Now exports Hdr:ColourPick
#

#
# Paths
#
EXP_HDR = <Export$Dir>

VPATH = @ @.Support011

OSLIB_DEFS = <OSLibDef$Dir>

#
# Generic options:
#
MKDIR   = cdir
CC      = cc -I@.Support011 -IOS: -fach -wp -DPICKER
CP      = copy
CPFLAGS = ~cfr~v
OBJASM  = ObjAsm ${THROWBACK} -depend !Depend -stamp -quit
CMHG    = CMHG
LINK    = Link 
RM      = remove
WIPE    = -wipe
WFLAGS  = ~c~v
ZM      = -zM

#
# Libraries:
#
OSLIB  = OSLib:OSLib.o
RSTUBS = RISC_OSLib:o.romcstubs
ABSSYM = RISC_OSLib:o.abssym

#
# Program specific options:
#
COMPONENT = Picker
TARGET    = aof.Picker
#EXPORTS   = ${OSLIB_DEFS}.ColourPick \
#            ${EXP_HDR}.ColourPick
EXPORTS   = ${EXP_HDR}.ColourPick

OBJS = o.callback o.cmyk o.dialogue o.header o.helpreply o.hsv \
      o.icon o.lookup o.main o.model o.muldiv o.realloc o.relocate \
      o.resource o.riscos o.rgb o.steppable o.tables o.task o.veneer o.window

OBJS_310 = o.callback oSA.cmyk o.dialogue o.files o.header310 o.helpreply oSA.hsv \
      o.icon o.lookup oSA.main o.model o.muldiv o.realloc o.relocate \
      o.resource o.riscos oSA.rgb o.steppable o.tables o.task o.veneer o.window

OBJSD = debug.callback debug.cmyk debug.dialogue debug.files \
      o.header debug.helpreply o.hostfs debug.hsv debug.icon debug.lookup \
      debug.main debug.model o.muldiv debug.realloc \
      debug.relocate debug.resource debug.riscos debug.rgb \
      debug.steppable debug.tables debug.task o.veneer debug.window \
      debug.trace debug.m

RESOURCES = o.Messages o.Sprites o.Templates o.RGBMessages o.RGBTemplates \
      o.HSVMessages o.HSVTemplates o.CMYKMessages o.CMYKTemplates

RESOURCES310 = o.Message310 o.Sprites o.Templates o.RGBMessages o.RGBTemplates \
      o.HSVMessages o.HSVTemplates o.CMYKMessages o.CMYKTemplates

ASMS = s.callback s.cmyk s.colourpick s.dialogue s.hsv s.icon s.lookup \
      s.m s.main s.model s.realloc s.relocate s.resource s.riscos \
      s.rgb s.steppable

INCS = i.callback i.cmyk i.dialogue i.hsv i.icon i.lookup i.m i.main \
      i.model i.realloc i.relocate i.resource i.riscos i.rgb i.steppable

HFILES = h.cmyk_i h.hsv_i h.dialogue_i h.rgb_i

#
# Generic rules (used by top-level build):
#
rom: ${TARGET}
        @echo ${COMPONENT}: rom module built

export: ${EXPORTS}
        @echo ${COMPONENT}: export complete

install_rom: ${TARGET}
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @echo ${COMPONENT}: rom module installed

clean:
        ${WIPE} o.* ${WFLAGS}
        ${WIPE} oSA.* ${WFLAGS}
        ${RM} linked.${COMPONENT}
        ${RM} map.${COMPONENT}
        ${RM} ${TARGET}
        ${WIPE} rm.* ${WFLAGS}
        @echo ${COMPONENT}: cleaned

resources:
        ${MKDIR} ${RESDIR}.${COMPONENT}
        ${MKDIR} ${RESDIR}.${COMPONENT}.CMYK
        ${MKDIR} ${RESDIR}.${COMPONENT}.HSV
        ${MKDIR} ${RESDIR}.${COMPONENT}.RGB
        ${CP} Resources.Messages       ${RESDIR}.${COMPONENT}.Messages       ${CPFLAGS}
        ${CP} Resources.Templates      ${RESDIR}.${COMPONENT}.Templates      ${CPFLAGS}
        ${CP} Resources.Sprites        ${RESDIR}.${COMPONENT}.Sprites        ${CPFLAGS}
        ${CP} Resources.CMYK.Messages  ${RESDIR}.${COMPONENT}.CMYK.Messages  ${CPFLAGS}
        ${CP} Resources.CMYK.Templates ${RESDIR}.${COMPONENT}.CMYK.Templates ${CPFLAGS}
        ${CP} Resources.HSV.Messages   ${RESDIR}.${COMPONENT}.HSV.Messages   ${CPFLAGS}
        ${CP} Resources.HSV.Templates  ${RESDIR}.${COMPONENT}.HSV.Templates  ${CPFLAGS}
        ${CP} Resources.RGB.Messages   ${RESDIR}.${COMPONENT}.RGB.Messages   ${CPFLAGS}
        ${CP} Resources.RGB.Templates  ${RESDIR}.${COMPONENT}.RGB.Templates  ${CPFLAGS}
        @echo ${COMPONENT}: resource files copied

#${OSLIB_DEFS}.ColourPick: def.ColourPick
#        ${CP} def.ColourPick $@ ${CPFLAGS}

${EXP_HDR}.ColourPick: hdr.ColourPick
        ${CP} hdr.ColourPick $@ ${CPFLAGS}
#
# ROM target (re-linked at ROM Image build time)
#
${TARGET}: ${OBJS} ${HFILES} ${OSLIB} ${RSTUBS}
        ${LINK} -o $@ -aof ${OBJS} ${OSLIB} ${RSTUBS}

#
# Final link for the ROM Image (using given base address)
#
rom_link:
        ${MKDIR} linked
        ${MKDIR} map
        ${LINK} -o linked.${COMPONENT} -map -bin -base ${ADDRESS} ${TARGET} ${ABSSYM} > map.${COMPONENT}
        truncate map.${COMPONENT} linked.${COMPONENT}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @echo ${COMPONENT}: rom_link complete

#
# Extra {development} rules:
#

all: RM.Picker
   @Echo Made all

alld: RM.PickerD
   @Echo Made all

clean_all:
       -Destroy h.cmyk_i h.hsv_i h.dialogue_i h.rgb_i ${OBJS} ${ROM_OBJS} \
         ${OBJSD} ${ASMS} ${INCS} ${RESOURCES} RM.Picker RM.PickerD RM.Picker310
        @echo ${COMPONENT}: cleaned

asms: ${ASMS}
   @Echo Made asms

incs: ${INCS}
   @Echo Made incs

objs: ${OBJS} ${OBJSD} ${RESOURCES}
   @Echo Made objs

map: ${OBJS} ${OSLIB} CLib:o.Stubs
   ${LINK} -map -output null: -s Symbols ${OBJS} ${OSLIB} CLib:o.Stubs > Map
   @Echo Made map

release: RM.Picker
   %Copy RM.Picker <Choices$Write>.Boot.PreDesk.Picker.Picker ~CFLNRV
   /Choices:Boot.PreDesk.Picker
   @Echo Made release

#Internal targets
RM.Picker: ${OBJS} ${OSLIB} CLib:o.Stubs
   ${LINK} -module -o $@ ${OBJS} ${OSLIB} CLib:o.Stubs

RM.PickerD: ${OBJSD} ${RESOURCES} ${OSLIB} CLib:o.Stubs
   ${LINK} -module -o $@ ${OBJSD} ${RESOURCES} ${OSLIB} CLib:o.Stubs

# For Aquarius
RM.Picker310: ${OBJS_310} ${RESOURCES310} ${OSLIB} CLib:o.Stubs
   ${LINK} -module -o $@ ${OBJS_310} ${RESOURCES310} ${OSLIB} CLib:o.Stubs

h.cmyk_i: Resources.CMYK.Templates CMYKResEd
   CMYKResEd

h.hsv_i: Resources.HSV.Templates HSVResEd
   HSVResEd

h.dialogue_i: Resources.Templates ResEd
   ResEd

h.rgb_i: Resources.RGB.Templates RGBResEd
   RGBResEd

o.main:	h.dialogue_i
o.main:	h.cmyk_i
o.main:	h.hsv_i
o.main:	h.rgb_i
debug.trace: h.hostfs

o.RGBMessages: Resources.RGB.Messages
   ResGen RGB.Messages o.RGBMessages Resources.RGB.Messages Resources.Picker.RGB.Messages

o.RGBTemplates: Resources.RGB.Templates
   ResGen RGB.Templates o.RGBTemplates Resources.RGB.Templates Resources.Picker.RGB.Templates

o.HSVMessages: Resources.HSV.Messages
   ResGen HSV.Messages o.HSVMessages Resources.HSV.Messages Resources.Picker.HSV.Messages

o.HSVTemplates: Resources.HSV.Templates
   ResGen HSV.Templates o.HSVTemplates Resources.HSV.Templates Resources.Picker.HSV.Templates

o.CMYKMessages: Resources.CMYK.Messages
   ResGen CMYK.Messages o.CMYKMessages Resources.CMYK.Messages Resources.Picker.CMYK.Messages

o.CMYKTemplates: Resources.CMYK.Templates
   ResGen CMYK.Templates o.CMYKTemplates Resources.CMYK.Templates Resources.Picker.CMYK.Templates

o.Message310: Resources.Message310
   ResGen Messages o.Message310 Resources.Message310 Resources.Picker.Messages

#o.4desktop: Resources.4desktop
#   ResGen 4desktop o.4desktop Resources.4desktop Resources.Colours.Tables.4desktop

#General rules
.SUFFIXES:     .cmhg .h .c .debug .o .oSA .asm .Hdr .i .def .Resources
.c.o:;         ${CC} ${THROWBACK} -depend !Depend -c ${ZM} -ff -o $@ $<
.c.oSA:;       ${CC} ${THROWBACK} -depend !Depend -c ${ZM} -ff -DSTANDALONE -o $@ $<
.c.debug:;     ${CC} ${THROWBACK} -depend !Depend -c ${ZM} -DTRACE=1 -DSTANDALONE -o $@ $<
.c.i:;         ${CC} -E -C $< > $@
.c.s:;         ${CC} ${ZM} -S -ff $<
.cmhg.o:;      ${CMHG} $< $@
.asm.o:;       ${OBJASM} -from $< -to $@
.asm.debug:;   ${OBJASM} -pd "STANDALONE SETL {TRUE}" -from $< -to $@
.def.h:;       DefMod -h < $< > $@
.def.o:;       DefMod -l -o l.$* < $<
               LibFile -o -c $@ -via ViaFile
               Wipe l.$* ~cr
.Resources.o:; ResGen $* $@ $< Resources.Picker.$*

# Dynamic dependencies:
