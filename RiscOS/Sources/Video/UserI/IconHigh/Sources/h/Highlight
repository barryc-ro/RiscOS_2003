#ifndef __Highlight_h
#define __Highlight_h

#ifndef __Desk_Wimp_h
	#include "Desk.Wimp.h"
#endif


/* These enums should all be distinct from KEY_BUFFER_NEAREST, currently #defined as -1
 * in c.Emulation -- see the end of _EmulationPointerStart () in the same file for why.
 */
typedef enum	{
	iconhigh_direction_NONE,
	iconhigh_direction_UP,
	iconhigh_direction_DOWN,
	iconhigh_direction_LEFT,
	iconhigh_direction_RIGHT,
	iconhigh_direction_NEAREST,
	iconhigh_direction_NEXT,
	iconhigh_direction_PREV
	}
	iconhigh_direction;

#include "Emulation.h"
#include "Globals.h"

void	MoveHighlight( Desk_wimp_point* newpos, iconhigh_direction direction, void* pw);
/*
Calculates which is nearest icon to move to, and sets *newpos to this
icon. Returns with *newpos unchanged if unable to process request (eg if
previous operation hasn't finished).
 */

void	_MoveHighlight( Desk_wimp_point* newpos, int besticon_number, iconhigh_direction direction, void* pw);
/*
Same as MoveHighlight, but allows besticon_number to be specified rather than
calculated, if its value is not -1.
 */

void	__MoveHighlight( Desk_wimp_point* newpos, int window, int besticon_number, iconhigh_direction direction, void* pw);
/*
Same as _MoveHighlight, but allows window to be specified rather than selected
from pointer position, if its value is not -1.
 */

void	CancelHighlightHandlers( void* pw);
/*
Cancels any callbacks set by highlight code.
 */


#define	IconHigh_IgnoreIcon( icon) ( (icon)->flags.data.buttontype==Desk_iconbtype_NEVER || (icon)->flags.data.shaded || (icon)->flags.data.deleted)

/*static*/ void	MoveHigh2( IconHigh_emulationtype emulation, iconhigh_direction direction, void* pw);
/*static*/ void	MoveHigh3( IconHigh_emulationtype emulation, iconhigh_direction direction,
                           int window, int icon, void* pw);


#endif
