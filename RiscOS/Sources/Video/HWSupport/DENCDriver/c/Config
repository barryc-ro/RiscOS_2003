/******	Config.c ***********************************************************

Project:	STB-400
Component:	DENCDriver
This file:	Command line configuration interface

Copyright 1999 Pace Micro Technology plc. All rights reserved.

This material is the confidential trade secret and proprietary information
of Pace Micro Technology plc. It may not be reproduced, used, sold, or
transferred to any third party without the prior written consent of
Pace Micro Technology plc.

History:
Date		Who	Change
----------------------------------------------------------------------------
01/10/1999	BJGA	Created
22/10/1999	BJGA	API updated in line with issue C specification
03/03/2000	BJGA	Implemented all configuration options

***************************************************************************/

/************/
/* Includes */
/************/

#include <stdio.h>
#include <stdbool.h>
#include "kernel.h"

#include "Config.h"
#include "Defs.h"
#include "SWI.h"

/*****************/
/* Private types */
/*****************/

/**********************/
/* Private prototypes */
/**********************/

/********************/
/* Public variables */
/********************/

/*********************/
/* Private variables */
/*********************/

/*********************/
/* Private constants */
/*********************/

/********************/
/* Public functions */
/********************/

/******	Config_SetTVStandard() *********************************************

Purpose:	Configures a new TV standard
In:		TV standard string
Out:		Pointer to error block

***************************************************************************/

_kernel_oserror *Config_SetTVStandard (const char *arg_string)
{
  _kernel_oserror *e = NULL;
  e = SWI_TVSetup (0, arg_string, NULL, NULL, NULL);
  return e;
}

/******	Config_PrintTVStandard() *******************************************

Purpose:	Displays currently configured TV standard

***************************************************************************/

void Config_PrintTVStandard (void)
{
  const char *tv_standard;
  SWI_TVSetup (0, NULL, NULL, &tv_standard, NULL);
  printf ("TVStandard %s\n", tv_standard);
}

/******	Config_SetTVChannel() **********************************************

Purpose:	Configures a new modulator channel
In:		TV channel string
Out:		Pointer to error block

***************************************************************************/

_kernel_oserror *Config_SetTVChannel (const char *arg_string)
{
  _kernel_oserror *e = NULL;
  e = SWI_TVSetup (0, NULL, arg_string, NULL, NULL);
  return e;
}

/******	Config_PrintTVChannel() ********************************************

Purpose:	Displays currently configured modulator channel (with MHz value)

***************************************************************************/

void Config_PrintTVChannel (void)
{
  const char *tv_channel;
  SWI_TVSetup (0, NULL, NULL, NULL, &tv_channel);
  printf ("TVChannel  %s\n", tv_channel);
}
