/******	SWI.c **************************************************************

Project:	STB-400
Component:	DENCDriver
This file:	SWI handler

Copyright 1999 Pace Micro Technology plc. All rights reserved.

This material is the confidential trade secret and proprietary information
of Pace Micro Technology plc. It may not be reproduced, used, sold, or
transferred to any third party without the prior written consent of
Pace Micro Technology plc.

History:
Date		Who	Change
----------------------------------------------------------------------------
01/10/1999	BJGA	Created
22/10/1999	BJGA	API updated in line with issue C specification
14/12/1999	BJGA	API updated in line with issue D specification

***************************************************************************/

/************/
/* Includes */
/************/

#include "kernel.h"

#include "Defs.h"
#include "SWI.h"

/*****************/
/* Private types */
/*****************/

/**********************/
/* Private prototypes */
/**********************/

/********************/
/* Public variables */
/********************/

/*********************/
/* Private variables */
/*********************/

/*********************/
/* Private constants */
/*********************/

/********************/
/* Public functions */
/********************/

/******	SWI_SetState() *****************************************************

Purpose:	Handles Macrovision_SetState
In:		flags:
                  bit 0:     clear => defer until next screen mode change
                  bit 1:     set => just return old state
		state:
		  bits 0-3:  2 => enable anti-taping
		             others => disable it
		  bit 4:     set => engage DENC test signal
		  bit 5:     set => engage modulator test signal
		  bit 6:     set => disable modulator even if not in standby
		  bits 7-8:  0 => preserve SCART pin 8 state
		             1 => set SCART pin 8 low
		             2 => set SCART pin 8 intermediate (anamorphic)
		             3 => set SCART pin 8 high
		return_old_state: address to write old state into
Out:		Pointer to error block

***************************************************************************/

_kernel_oserror *SWI_SetState (unsigned int flags, unsigned int state, unsigned int *old_state)
{
  _kernel_oserror *e = NULL;
  IGNORE(flags);
  IGNORE(state);
  IGNORE(old_state);
  return e;
}

/******	SWI_LoadCaptions() *************************************************

Purpose:	Handles Macrovision_LoadCaptions
Note:		A future enhancement, does nothing yet

***************************************************************************/

_kernel_oserror *SWI_LoadCaptions (unsigned int flags, char *bytes, unsigned int length)
{
  _kernel_oserror *e = NULL;
  IGNORE(flags);
  IGNORE(bytes);
  IGNORE(length);
  return e;
}

/******	SWI_PlatformFeatures0() ********************************************

Purpose:	Handles Macrovision_PlatformFeatures 0
In:		Address to write pointer to TV standards structure into
Out:		Pointer to error block

***************************************************************************/

_kernel_oserror *SWI_PlatformFeatures0 (void **block)
{
  _kernel_oserror *e = NULL;
  IGNORE(block);
  return e;
}

/******	SWI_PlatformFeatures1() ********************************************

Purpose:	Handles Macrovision_PlatformFeatures 1
In:		TV channel list number;
		address to write pointer to TV channel list into
Out:		Pointer to error block

***************************************************************************/

_kernel_oserror *SWI_PlatformFeatures1 (unsigned int list_number, void **block)
{
  _kernel_oserror *e = NULL;
  IGNORE(list_number);
  IGNORE(block);
  return e;
}

/******	SWI_PlatformFeatures2() ********************************************

Purpose:	Handles Macrovision_PlatformFeatures 2
In:		Address to write pointer to TV standard into;
		address to write pointer to TV channel into;
Out:		Pointer to error block

***************************************************************************/

_kernel_oserror *SWI_PlatformFeatures2 (char **tv_standard, char **tv_channel)
{
  _kernel_oserror *e = NULL;
  IGNORE(tv_standard);
  IGNORE(tv_channel);
  return e;
}

/******	SWI_PlatformFeatures3() ********************************************

Purpose:	Handles Macrovision_PlatformFeatures 3
In:		Address to write pointer to video circuitry info block into
Out:		Pointer to error block

***************************************************************************/

_kernel_oserror *SWI_PlatformFeatures3 (void **block)
{
  _kernel_oserror *e = NULL;
  IGNORE(block);
  return e;
}
