/*
 * pip.h
 */

/************************************************************************/
/*              Copyright 1999 Pace Micro Technology PLC                */
/************************************************************************/

#ifndef PIP_CONTROLLER

  #define PIP_CONTROLLER

  #define PIP_SDA9488  0
  #define PIP_SDA9489  1

  #define PIP_OVERLAY_IS_OFF    0
  #define PIP_OVERLAY_IS_ON     1


//  #define PIP_POS_GET           1
//  #define PIP_POS_SCR_UNITS     8


  #define PIP_SCALE_RESET        2
  #define PIP_SCALE_ASPECT       4
  #define PIP_SCALE_PIPUNIT      8
  #define PIP_SCALE_PIPRAW      16



  #define PIP_UNITS_DIVISION 0
  #define PIP_UNITS_OSSCREEN 1
  #define PIP_UNITS_PIPRAW   2
  #define PIP_SCALE_UNITS_OSSCREEN 0
  #define PIP_SCALE_UNITS_PIPUNIT  1
  #define PIP_SCALE_UNITS_PIPRAW   2

  #define PIP_ERRORV_STATUS        -1
  #define PIP_ERRORV_RELEASE       0
  #define PIP_ERRORV_CLAIM         1



  int pip_init_device(void);

  void pip_setchip(int chip_id);
  int pip_getchip(void);
  void pip_setconversionvalue(_kernel_swi_regs *reg);
  void pip_getconversionvalue(_kernel_swi_regs *reg);
  void pip_getorigin(int *x,int *y);
  void pip_setorigin(int x,int y);
  void pip_setborderwidth(int width);
  void pip_setbordercolour(unsigned int colour);
  void pip_getbordersettings(int *width, unsigned int *colour);
void pip_setposition(int x_pos,int y_pos, int flags,int units);
void pip_getposition(_kernel_swi_regs *reg);
void pip_setscaling(_kernel_swi_regs *reg);
void pip_getscaling(_kernel_swi_regs *reg);
  void pip_on(void);
  void pip_off(void);
  int pip_getstatus(void);


  _kernel_oserror *pip_raw_write(int offset, unsigned char value);
  unsigned char pip_fake_read(int offset);
  _kernel_oserror *pip_control(_kernel_swi_regs *reg);
  _kernel_oserror *pip_config(_kernel_swi_regs *reg);

#endif
