 SUBT MPEGControl module SWIs ; => &.Hdr.MPEGCtrl

; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************

; Date       Who  Version       Description
; ----       ---  -------       -----------
; 15-Feb-95  TMD  -		Added StreamFlags_AudioSkipToSync
; 06-Mar-95  TMD  -		Added ResetStream SWI
; 24-May-95  TMD  -		Added MuteSound SWI
; 08-Jun-95  TMD  -		Added StreamFlags_PassThroughToVideo
; 27-Jun-95  TMD  -		Added PacketDescriptorFlags_AllSent, PacketDescriptorFlags_PassedToBackground
; 11-Aug-95  TMD  -		Added SoundVolume SWI
; 23-Aug-95  TMD  -		Added StreamFlags_StartPaused flag
; 25-Oct-95  TMD  -		Added StreamFlags_SkippingAfterReset flag
; 05-Feb-95  TMD  -		Added StreamFlags_DVB
; 15-Feb-95  TMD  -		Added SelectProgram SWI
; 07-Mar-96  TMD  -		Added Stats SWI
; 10-Jun-96  TMD  -		Added StreamFlags_SkipUntilCorrectMode
; 27-Jun-96  TMD  -		Added RegisterProgramElementHandler, DeregisterProgramElementHandler SWIs
; 28-Jun-96  TMD  -		Added PEHReason codes
; 03-Jul-96  TMD  -		Added PEHFlags codes
; 12-Aug-96  TMD  -		Added PEHFlags_StreamIdentifiedByPID
; 14-Nov-97  TMD  -		Added ResetStreamFlags_VideoPresent, ResetStreamFlags_AudioPresent,
;				 ResetStreamFlags_SkipUntilCorrectMode, ResetStreamFlags_TrickPlayMode
; 11-Feb-98  TMD  -		Added Service_MPEGControlStarting
; 19-Feb-98  TMD  -		Added StreamFlags_OVSNPTDescriptors
; 13-Oct-98  TMD  -		Added SetAudioParameters SWI
; 22-Oct-98  NTurton		Removed Service_MPEGControlStarting (now in Hdr:Services) - comment by TMD
; 20-Nov-98  TMD  -		Added StreamFlags_NoProgramSelected
; 26-Nov-98  TMD  -		Added PacketDescriptorFlags_AudioPacketHeaderStuffing
; 30-Nov-98  TMD  -		Removed erroneous comment about PacketDescriptorFlags_AudioPacketHeaderStuffing
; 01-Dec-98  BAvison            Added ControlOp SWI. Duplicated SWICheckValue for separate use by MPEGControl and MPEGSystem/Transport
; 10-Feb-99  BAvison            Added ResetStreamFlags_SegmentTransition
; 10-Feb-00  BAvison  0.10      Added StreamFlags_ResetOnGoodDataFollows and ResetStreamFlags_DeferReset
; 17-Feb-00  BAvison  0.11      Added SetSpeedFlags_DeferSetSpeed
; 02-Mar-00  BAvison  0.13      Added SWI MPEGControl_SetVideoParameters
; 03-May-00  BAvison  0.14      Added CloseStreamFlags_BlankVideo
; 04-May-00  BAvison  0.15      Corrected typo (oops)
; 26-May-00  BAvison  0.17      Added SWI MPEGControl_GetSprite
; 06-Jul-00  BAvison  0.18      Added PEHFlags_RequiredFlag bits and MPEGControl_Play flags
; 17-Jul-00  BAvison  0.19      Added BufferDescriptor_CSH and BufferDescriptorFlags_NewFormat

OldOpt SETA {OPT}
 OPT OptNoList+OptNoP1List

SWIClass SETS "MPEGControl"

 ^ MPEGControlSWI_Base

 AddSWI OpenStream
 AddSWI FullBuffers
 AddSWI CloseStream
 AddSWI Play
 AddSWI SetSpeed
 AddSWI ResetStream
 AddSWI MuteSound
 AddSWI SoundVolume
 AddSWI SelectProgram
 AddSWI Stats
 AddSWI RegisterProgramElementHandler
 AddSWI DeregisterProgramElementHandler
 AddSWI SetAudioParameters
 AddSWI ControlOp
 AddSWI SetVideoParameters
 AddSWI GetSprite

 OPT OldOpt

; Bitstream packet descriptor structure

                                        ^       0
PacketDescriptor_Link                   #       4       ; link to next descriptor
PacketDescriptor_FreeRoutine            #       4       ; address of routine to call to free packet
PacketDescriptor_FreeWorkspace          #       4       ; workspace pointer for free_packet routine
PacketDescriptor_Start                  #       4       ; start address of packet data
PacketDescriptor_Length                 #       4       ; length of packet data (bytes)
PacketDescriptor_BufferDescriptor       #       4       ; buffer descriptor for parent buffer
PacketDescriptor_Flags                  #       4       ; bit 0 set => start of MPEG packet
                                                        ; bit 1 set => BSn valid
                                                        ; bit 2 set => PTS valid
                                                        ; bit 3 set => DTS valid
							; bit 4 set => full length unknown
PacketDescriptor_BSn                    #       4       ; size of system target decoder input buffer
                                                        ; (in bytes)
PacketDescriptor_PTS                    #       8       ; presentation time stamp
PacketDescriptor_DTS                    #       8       ; decoding time stamp
PacketDescriptor_FullLength             #       4       ; full length of MPEG packet (only valid if bit 0 of flags set and bit 4 clear)
PacketDescriptorSize                    *       @

; Packet descriptor flags

PacketDescriptorFlags_MPEGStart         *       1 :SHL: 0
PacketDescriptorFlags_BSnValid          *       1 :SHL: 1
PacketDescriptorFlags_PTSValid          *       1 :SHL: 2
PacketDescriptorFlags_DTSValid          *       1 :SHL: 3
PacketDescriptorFlags_FullLengthUnknown *       1 :SHL: 4       ; indicates full length of packet is unknown
                                                                ; (eg if PES packet length is zero in MPEG 2 transport stream)

; Bits in packet descriptor flags used by video module

PacketDescriptorFlags_Unchecked         *       1 :SHL: 8       ; indicates packet has not been checked for multiple picture
                                                                ; start codes
PacketDescriptorFlags_AllSent		*	1 :SHL: 9	; set by background process when all data sent
PacketDescriptorFlags_PassedToBackground *	1 :SHL: 10	; packet has been passed to background stuffer

; Bits in packet descriptor flags used by audio stuff

PacketDescriptorFlags_AudioPacketHeaderStuffing * 1 :SHL: 16	; in process of stuffing audio packet header

; Buffer descriptor structure

                                ^       0
BufferDescriptor_Link           #       4       ; pointer to "next" buffer descriptor
BufferDescriptor_FreeRoutine    #       4       ; pointer to routine to free buffer
BufferDescriptor_FreeWorkspace  #       4       ; workspace pointer for free_buffer routine
BufferDescriptor_Start          #       4       ; pointer to start of buffer data
BufferDescriptor_Length         #       4       ; length of buffer data (in bytes)
BufferDescriptor_Packets        #       4       ; number of outstanding packets in this buffer
BufferDescriptor_CSH            #       4       ; the handle of the control stream this buffer comes from
BufferDescriptorSize            *       @

; Flag bits in BufferDescriptor_Packets

BufferDescriptorFlags_NewFormat *       1 :SHL: 31      ; BufferDescriptor_CSH is present

; Bits in flags word passed to MPEGControl_OpenStream

StreamFlags_VideoPresent                *       1 :SHL: 0
StreamFlags_AudioPresent                *       1 :SHL: 1
StreamFlags_SyncToStream                *       1 :SHL: 2       ; when set, audio module syncs to stream
StreamFlags_NoLipSync                   *       1 :SHL: 3       ; when set, don't attempt to lipsync (ie audio module sends no SCRs)
StreamFlags_NoVideoPTSs                 *       1 :SHL: 4       ; when set, video doesn't send any PTSs
StreamFlags_UseCallBacks                *       1 :SHL: 5       ; when set, use callbacks from IRQs to send data, rather than directly
                                                                ;  in IRQ routine
StreamFlags_AudioSkipToSync             *       1 :SHL: 6       ; when set, audio module skips to audio synchronisation word at start
StreamFlags_PassThroughToVideo          *       1 :SHL: 7       ; when set, pass data through to video (temporary flag for MPEG 2 debug)
StreamFlags_StartPaused                 *       1 :SHL: 8       ; when set, start up paused (video waits until first picture displayed)
StreamFlags_DVB                         *       1 :SHL: 9       ; when set, we're connected to DVB system:-
                                                                ;  * TS packets have tag word on front; and
                                                                ;  * need to issue DVBControl SWIs to enable individual PIDs
StreamFlags_OVSNPTDescriptors           *       1 :SHL: 10      ; when set, we're on OVS server with trick play:
                                                                ;  * look for OVS NPT descriptors in PMT and store the last one away
                                                                ;  * on ResetStream discard data until we see ContentID change
StreamFlags_ResetOnGoodDataFollows      *       1 :SHL: 11      ; when set, do a reset stream when NPTReferenceDescriptor signals GDF
                                                                ;  (only useful when StreamFlags_OVSNPTDescriptors is set)

; Private flags in same word

StreamFlags_TrickPlayMode               *       1 :SHL: 26      ; we're in trick play mode
StreamFlags_NoProgramSelected           *       1 :SHL: 27      ; junking data because user selected program zero (MPEGCtrl only)
StreamFlags_OVSNPTSkipping              *       1 :SHL: 28      ; waiting after a ResetStream for change in ContentID in OVS NPT
StreamFlags_SkipUntilCorrectMode        *       1 :SHL: 29      ; junking data after a ResetStream, until we get data of correct
                                                                ; normal/trick_play mode
StreamFlags_SkippingAfterReset          *       1 :SHL: 30      ; junking data after a ResetStream, until a video sequence header
StreamFlags_StreamClosing               *       1 :SHL: 31

; Bits in flags word passed to MPEGControl_ResetStream

ResetStreamFlags_VideoPresent           *       1 :SHL: 0
ResetStreamFlags_AudioPresent           *       1 :SHL: 1
ResetStreamFlags_SkipUntilCorrectMode   *       1 :SHL: 2
ResetStreamFlags_TrickPlayMode          *       1 :SHL: 3       ; tell MPEG2Video module that its a trick (ie fast-motion) stream
ResetStreamFlags_DeferReset             *       1 :SHL: 4       ; don't actually reset, just store ResetStreamFlags for next internal reset

; Private flags in same word

ResetStreamFlags_InternalReset          *       1 :SHL: 5       ; generated by a segment transition or GDF, so we don't need to wait for GDF

; Bits in flags word passed to MPEGControl_CloseStream

CloseStreamFlags_BlankVideo             *       1 :SHL: 0       ; blank the MPEG video plane when the video stream has closed

; Bits in flags word passed to MPEGControl_Play

PlayFlags_VideoReady                    *       1 :SHL: 0       ; video unit is ready to start playing
PlayFlags_AudioReady                    *       1 :SHL: 1       ; audio unit is ready to start playing
PlayFlags_EOSImminent                   *       1 :SHL: 2       ; imminent end-of-stream flagged by higher level transport layer
PlayFlags_VideoIdle                     *       1 :SHL: 3       ; video unit is idle
PlayFlags_AudioIdle                     *       1 :SHL: 4       ; audio unit is idle

; Bits in flags word passed to MPEGControl_SetSpeed

SetSpeedFlags_DeferSetSpeed             *       1 :SHL: 0       ; if changing to a slower speed, defer speed change until the first underrun

; Program Element Handler reason codes

				^	0
PEHReason_OpenStream		#	1
PEHReason_DataTransfer		#	1
PEHReason_CloseStream		#	1
PEHReason_Play			#	1
PEHReason_SetSpeed		#	1
PEHReason_ResetStream		#	1

; Flags passed to MPEGControl_RegisterProgramElementHandler

PEHFlags_IncludeAdaptationFields	*	1 :SHL: 0
PEHFlags_IncludePESHeaders		*	1 :SHL: 1
PEHFlags_IncludeTSHeader		*	1 :SHL: 2
PEHFlags_StreamIdentifiedByPID		*	1 :SHL: 3
PEHFlags_RequiredFlag_Shift             *       4
PEHFlags_RequiredFlag_Mask              *       &1F :SHL: PEHFlags_RequiredFlag_Shift

        END
