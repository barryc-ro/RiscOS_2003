; Hdr:AV110
;
; Header file for TMS320AV110 MPEG Audio Decoder
;
; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************

; Date       Who  Description
; ----       ---  -----------
; 15-Jul-94  TMD  Added AV110_PATCH address
; 20-Apr-95  TMD  Added AV110_VERSION address

        MACRO
        AReg    $regname, $index
$regname        *       ($index)*4
        MEND

; Register addresses

        AReg    AV110_ANC_0, &06        ; (R) ancillary data buffer (32 bits)
        AReg    AV110_ANC_1, &07        ;   - holds last 32 bits of ancillary data
        AReg    AV110_ANC_2, &08
        AReg    AV110_ANC_3, &09

        AReg    AV110_BUFF_0, &12       ; (R) input buffer word counter (15 bits)
        AReg    AV110_BUFF_1, &13       ;   - amount of data in input buffer (in 32-bit words)

        AReg    AV110_FREE_FORM_0, &14
        AReg    AV110_FREE_FORM_1, &15

        AReg    AV110_PCM_18, &16

        AReg    AV110_DATAIN, &18       ; (W) audio data input register (8 bits)

        AReg    AV110_INTR_0, &1A
        AReg    AV110_INTR_1, &1B

        AReg    AV110_INTR_EN_0, &1C
        AReg    AV110_INTR_EN_1, &1D

        AReg    AV110_ATTEN_L, &1E      ; (R/W) L + R channel attenuators (6 bits each)
        AReg    AV110_ATTEN_R, &20      ;     - minimum = 0, maximum = 63 in 2-dB steps

        AReg    AV110_AUD_ID, &22       ; (R/W) audio stream ID (5 bits)
        AReg    AV110_AUD_ID_EN, &24    ; (R/W) bit 0 set => only decode the selected stream

        AReg    AV110_SYNC_LCK, &28
        AReg    AV110_CRC_ECM, &2A      ; (R/W) CRC error handling (2 bits)
        AReg    AV110_SYNC_ECM, &2C
        AReg    AV110_PLAY, &2E
        AReg    AV110_MUTE, &30
        AReg    AV110_SKIP, &32
        AReg    AV110_REPEAT, &34
        AReg    AV110_STR_SEL, &36
        AReg    AV110_PCM_ORD, &38
        AReg    AV110_EOS, &3A
        AReg    AV110_LATENCY, &3C
        AReg    AV110_DRAM_EXT, &3E
        AReg    AV110_RESET, &40
        AReg    AV110_RESTART, &42
        AReg    AV110_PCM_FS, &44
        AReg    AV110_DMPH, &46

        AReg    AV110_PATCH, &52                ; location used for patching

        AReg    AV110_IRC_CNT_0, &54
        AReg    AV110_IRC_CNT_1, &55
        AReg    AV110_IRC_CNT_2, &56
        AReg    AV110_IRC_CNT_3, &57
        AReg    AV110_IRC_CNT_4, &58

        AReg    AV110_HEADER_0, &5E
        AReg    AV110_HEADER_1, &5F
        AReg    AV110_HEADER_2, &60
        AReg    AV110_HEADER_3, &61

        AReg    AV110_PTS_0, &62
        AReg    AV110_PTS_1, &63
        AReg    AV110_PTS_2, &64
        AReg    AV110_PTS_3, &65
        AReg    AV110_PTS_4, &66

        AReg    AV110_BALE_LIM_0, &68           ; (R/W) buffer almost empty limit (15 bits)
        AReg    AV110_BALE_LIM_1, &69           ;     - number of 32-bit words in buffer
        AReg    AV110_BALF_LIM_0, &6A           ; (R/W) buffer almost full limit (15 bits)
        AReg    AV110_BALF_LIM_1, &6B           ;     - number of 32-bit words in buffer

        AReg    AV110_ANC_AV, &6C       ; (R) no. of bits of ancillary data available (6 bits)

	AReg	AV110_VERSION, &6D	; Version of device (TMXA/B = &00, TMXC = &22, TMXE = &23)

        AReg    AV110_PCM_DIV, &6E

        AReg    AV110_DIF, &6F

        AReg    AV110_SIN_EN, &70

        AReg    AV110_SRC_0, &72
        AReg    AV110_SRC_1, &73
        AReg    AV110_SRC_2, &74
        AReg    AV110_SRC_3, &75
        AReg    AV110_SRC_4, &76

        AReg    AV110_IRC_0, &78
        AReg    AV110_IRC_1, &79
        AReg    AV110_IRC_2, &7A
        AReg    AV110_IRC_3, &7B
        AReg    AV110_IRC_4, &7C

        AReg    AV110_IRC_LOAD, &7E

; Bits/values in various registers

AV110_CRC_ECM_Disabled  *       0       ; CRC checking disabled
AV110_CRC_ECM_Mute      *       1       ; Mute on CRC error
AV110_CRC_ECM_Repeat    *       2       ; Repeat last frame on CRC error
AV110_CRC_ECM_Skip      *       3       ; Skip invalid frame on CRC error

; Bits in INTR and INTR_EN

AV110INTRL_SyncChange   *       1 :SHL: 0       ; Change in synchronisation state
AV110INTRL_Header       *       1 :SHL: 1       ; Valid header registered
AV110INTRL_PTS          *       1 :SHL: 2       ; Valid PTS registered
AV110INTRL_BALE         *       1 :SHL: 3       ; Buffer almost empty
AV110INTRL_BALF         *       1 :SHL: 4       ; Buffer almost full
AV110INTRL_CRCError     *       1 :SHL: 5       ; CRC error detected
AV110INTRL_Ancillary    *       1 :SHL: 6       ; Ancillary data registered
AV110INTRL_AncFull      *       1 :SHL: 7       ; Ancillary data full

AV110INTRH_PCMUnderflow *       1 :SHL: 0       ; PCM output buffer underflow
AV110INTRH_FreqChange   *       1 :SHL: 1       ; Sampling frequency changed
AV110INTRH_Deemphasis   *       1 :SHL: 2       ; Deemphasis changed
AV110INTRH_SRC          *       1 :SHL: 3       ; SRC (system reference clock) detected
AV110INTRH_EOS          *       1 :SHL: 4       ; EOS (end of stream) detected

; Bits in software-controlled interrupt mask

AV110INTR_SyncChange    *       1 :SHL: 0       ; Change in synchronisation state
AV110INTR_Header        *       1 :SHL: 1       ; Valid header registered
AV110INTR_PTS           *       1 :SHL: 2       ; Valid PTS registered
AV110INTR_BALE          *       1 :SHL: 3       ; Buffer almost empty
AV110INTR_BALF          *       1 :SHL: 4       ; Buffer almost full
AV110INTR_CRCError      *       1 :SHL: 5       ; CRC error detected
AV110INTR_Ancillary     *       1 :SHL: 6       ; Ancillary data registered
AV110INTR_AncFull       *       1 :SHL: 7       ; Ancillary data full
AV110INTR_PCMUnderflow  *       1 :SHL: 8       ; PCM output buffer underflow
AV110INTR_FreqChange    *       1 :SHL: 9       ; Sampling frequency changed
AV110INTR_Deemphasis    *       1 :SHL: 10      ; Deemphasis changed
AV110INTR_SRC           *       1 :SHL: 11      ; SRC (system reference clock) detected
AV110INTR_EOS           *       1 :SHL: 12      ; EOS (end of stream) detected

AV110INTR_All           *       &1FFF           ; all interrupts

; Values in version register

AV110VERSION_TMXB	*	&00
AV110VERSION_TMXC	*	&22
AV110VERSION_TMXE	*	&23

        END
