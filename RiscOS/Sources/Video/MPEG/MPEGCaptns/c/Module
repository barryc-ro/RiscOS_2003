/******	Module.c **********************************************************\

This file:	Main module entry points

History:
Date		Who	Change
----------------------------------------------------------------------------
26/04/1999	BJGA	Created

\**************************************************************************/

/* CLib headers */

#include "swis.h"
#include "Global/Services.h"

/* Local headers */

#include "Defs.h"
#include "ModHdr.h"
#include "Module.h"

/* Constants */

#define Macrovision_LoadCaptions        0x4D541
#define MPEGVideo_RegisterHandler       0x4930B
#define MPEGVideo_DeregisterHandler     0x4930C

/* Global variables */

/* Static prototypes */

void MPEGControlStarting(int reason, void *pw);

/******	Module_Init() *****************************************************\

Purpose:	Module initialisation code
In:		Invocation command tail, I/O or instantiation number, private word
Out:		Error pointer

\**************************************************************************/

_kernel_oserror *Module_Init(const char *cmd_tail, int podule_base, void *pw)
{
  _kernel_oserror *e = NULL;

  IGNORE(cmd_tail);
  IGNORE(podule_base);

  e = _swix (MPEGVideo_RegisterHandler, _INR(0,2), 1, caption_handler, *(int *)pw);
  e = _swix (MPEGVideo_RegisterHandler, _INR(0,2), 2, caption_handler, *(int *)pw);

  return e;
}

/******	Module_Final() ****************************************************\

Purpose:	Module finalisation code
In:		Fatality indicator, I/O or instantiation number, private word
Out:		Error pointer

\**************************************************************************/

_kernel_oserror *Module_Final(int fatal, int podule, void *pw)
{
  _kernel_oserror *e = NULL;

  IGNORE(fatal);
  IGNORE(podule);

  e = _swix (MPEGVideo_DeregisterHandler, _INR(0,2), 1, caption_handler, *(int *)pw);
  e = _swix (MPEGVideo_DeregisterHandler, _INR(0,2), 2, caption_handler, *(int *)pw);

  return e;
}

/******	MPEGControlStarting() *******************************************\

Purpose:	See if the video unit has been (re)initialised. Register our handlers if so.
In:		Service_MPEGControlStarting information word, private word
Out:		nothing

\**************************************************************************/

void MPEGControlStarting(int reason, void *pw)
{
  switch (reason & 0xFE)
  {
    case 3<<1: /* Video unit (MPEGDriver) has (re)initialised */
    {
      _swix (MPEGVideo_RegisterHandler, _INR(0,2), 1, caption_handler, *(int *)pw);
      _swix (MPEGVideo_RegisterHandler, _INR(0,2), 2, caption_handler, *(int *)pw);
      break;
    }
  }
}

/******	Module_Service() *******************************************\

Purpose:	Handle service calls from MPEGDriver
In:		Service number, registers, private word
Out:		nothing

\**************************************************************************/

void Module_Service(int service_number, _kernel_swi_regs *r, void *pw)
{
  switch (service_number)
  {
    case Service_MPEGControlStarting:
    {
      MPEGControlStarting((int) r->r[0], pw);
      break;
    }
  }
}

/******	Module_CaptionHandler() *******************************************\

Purpose:	Pass closed-caption data to the DENC
In:		Registers and private word (unused)
Out:		Error pointer

\**************************************************************************/

_kernel_oserror *Module_CaptionHandler(_kernel_swi_regs *r, void *pw)
{
  int flags = (int) r->r[0];
  char *data = (char*) r->r[1];
  int data_length = (int) r->r[2];

  IGNORE(pw);

  _swix (Macrovision_LoadCaptions, _INR(0,2), flags, data, data_length);
  r->r[8] = 0; /* claim */
  return NULL;
}
