/******	Service.c **********************************************************

Project:	STB-400
Component:	MPEGDriver
This file:	Service call handling

Copyright 1999 Pace Micro Technology plc. All rights reserved.

This material is the confidential trade secret and proprietary information
of Pace Micro Technology plc. It may not be reproduced, used, sold, or
transferred to any third party without the prior written consent of
Pace Micro Technology plc.

History:
Date		Who	Change
----------------------------------------------------------------------------
20/09/1999	BJGA	Created
07/10/1999	BJGA	Implemented Service_ServicePreReset

***************************************************************************/

/************/
/* Includes */
/************/

#include <stdbool.h>
#include "swis.h"

#include "Global/SWIs.h"
#include "MPEG/MPEGCtrl.h"

#include "IRQ.h"
#include "ModHdr.h"
#include "Service.h"

/*****************/
/* Private types */
/*****************/

/**********************/
/* Private prototypes */
/**********************/

/********************/
/* Public variables */
/********************/

/*********************/
/* Private variables */
/*********************/

/*********************/
/* Private constants */
/*********************/

/********************/
/* Public functions */
/********************/

/******	Service_ServicePreReset() ******************************************

Purpose:	Handles Service_PreReset (releases interrupts)
Out:		|true| to claim the service call

***************************************************************************/

bool Service_ServicePreReset (void)
{
  IRQ_DisableVideoIRQs ();
  IRQ_DisableAudioIRQs ();
  IRQ_DisableCommonIRQs ();
  return false;
}

/******	Service_ServiceMPEGControlStarting() *******************************

Purpose:	Handles Service_MPEGControlStarting (re-registers PEHs)
Out:		|true| to claim the service call

***************************************************************************/

bool Service_ServiceMPEGControlStarting (void *pw)
{
  _swix (MPEGControl_RegisterProgramElementHandler, _INR(0,3), 0, 1 /* MPEG-1 video */, program_element_handler, pw);
  _swix (MPEGControl_RegisterProgramElementHandler, _INR(0,3), 0, 2 /* MPEG-2 video */, program_element_handler, pw);
  return false;
}
