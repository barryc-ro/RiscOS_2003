/******	Audio.h ************************************************************

Project:	STB-400
Component:	MPEGDriver
This file:	Audio SWI handling

Copyright 1999-2000 Pace Micro Technology plc. All rights reserved.

This material is the confidential trade secret and proprietary information
of Pace Micro Technology plc. It may not be reproduced, used, sold, or
transferred to any third party without the prior written consent of
Pace Micro Technology plc.

History:
Date		Who	Change
----------------------------------------------------------------------------
20/09/1999	BJGA	Created
10/08/2000	BJGA	Added MPEGAudio_SetAudioParameters 2

***************************************************************************/

#ifndef __audio_h
#define __audio_h

/* Includes */

#include "kernel.h"

#include "Types.h"

/* Public prototypes */

extern _kernel_oserror *Audio_SWIOpenStream (stream_flags_t *flags, control_stream_handle_t csh, audio_parameters_structure_t *aps, stream_handle_t *return_ash);
extern _kernel_oserror *Audio_SWIFullPackets (unsigned int flags, stream_handle_t ash, bitstream_packet_t *packets);
extern _kernel_oserror *Audio_SWICloseStream (unsigned int flags, stream_handle_t ash);
extern _kernel_oserror *Audio_SWIPlay (unsigned int flags, stream_handle_t ash);
extern _kernel_oserror *Audio_SWISetSpeed (unsigned int flags, stream_handle_t ash, unsigned int speed);
extern _kernel_oserror *Audio_SWIResetStream (reset_stream_flags_t *flags, stream_handle_t ash, unsigned int *return_discarded_data_size);
extern _kernel_oserror *Audio_SWIMuteSound (unsigned int flags, stream_handle_t ash);
extern _kernel_oserror *Audio_SWISoundVolume (unsigned int flags, stream_handle_t ash, int volume, int *return_old_volume);
extern _kernel_oserror *Audio_SWIStats (unsigned int flags, stream_handle_t ash, unsigned int *tags, void *buffer, int buffer_size, void **return_pointer, int *return_buffer_remaining);
extern _kernel_oserror *Audio_SWISetAudioParameters0 (stream_handle_t ash, int new_state, int *return_old_state);
extern _kernel_oserror *Audio_SWISetAudioParameters1 (stream_handle_t ash, dual_channel_specifier new_state, dual_channel_specifier *return_old_state, audio_channel_type *return_channel_type);
extern _kernel_oserror *Audio_SWISetAudioParameters2 (stream_handle_t ash, int new_state, int *return_old_state);

#endif
