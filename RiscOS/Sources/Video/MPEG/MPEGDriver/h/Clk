/******	Clk.h **************************************************************

Project:	STB-400
Component:	MPEGDriver
This file:	33-bit clock arithmetic

Copyright 1999-2000 Pace Micro Technology plc. All rights reserved.

This material is the confidential trade secret and proprietary information
of Pace Micro Technology plc. It may not be reproduced, used, sold, or
transferred to any third party without the prior written consent of
Pace Micro Technology plc.

History:
Date		Who	Change
----------------------------------------------------------------------------
01/09/1999	BJGA	Created
28/03/2000	BJGA	Added Clk_Add(), Clk_ReadRawSTC(), Clk_ConvertSTCtoPCR()

***************************************************************************/

#ifndef __clk_h
#define __clk_h

/* Includes */

#include <stdbool.h>

#include "Debug.h"

/* Public types */

typedef struct
{
  unsigned int lsw;
  unsigned char msb;
} clk;

/* Public prototypes */

/******	Clk_Greater() ******************************************************

Purpose:	Compares two clock references
In:		Two clock references to compare
Out:		|true| if a>b (with wraparound)

***************************************************************************/

extern bool Clk_Greater (clk a, clk b);

/******	Clk_Less() *********************************************************

Purpose:	Compares two clock references
In:		Two clock references to compare
Out:		|true| if a<b (with wraparound)

***************************************************************************/

extern bool Clk_Less (clk a, clk b);

/******	Clk_Subtract() *****************************************************

Purpose:	Subtracts one clock reference from another
In:		Two clock references
Out:		The value of a-b (a 33-bit value)

***************************************************************************/

extern clk Clk_Subtract (clk a, clk b);

/******	Clk_Add() **********************************************************

Purpose:	Adds two clock references together
In:		Two clock references
Out:		The value of a+b (a 33-bit value)

***************************************************************************/

extern clk Clk_Add (clk a, clk b);

/******	Clk_ReadRawSTC() ***************************************************

Purpose:	Reads the current 33-bit value of a monotonic 90kHz timer
In:		It is assumed that we are in SVC mode, with IRQs disabled
Out:		Timer value
Notes:		The STC in the 3520 appears to be broken, and this is the
		workaround: the value is derived from the OS's 100Hz
		monotonic timer and the current value of Timer0 (2MHz),
		which are combined and rescaled to 90kHz, with a granularity
		of 9 ticks.

***************************************************************************/

extern clk Clk_ReadRawSTC (void);

/******	Clk_ConvertSTCtoPCR() **********************************************

Purpose:	Converts a raw STC value to the equivalent PCR
In:		Raw STC value (as returned from Clk_ReadRawSTC)
Out:		PCR value
Notes:		PCR will increment slowly in slow-motion mode, and not at
		all in pause mode

***************************************************************************/

extern clk Clk_ConvertSTCtoPCR (clk STC);

#if Debugging==1 && DebugProfiling==1
/******	Clk_GetHiResTime() *************************************************

Purpose:	Returns a 2Mhz monotonic timer

***************************************************************************/

extern unsigned int Clk_GetHiResTime (void);
#endif

#endif
