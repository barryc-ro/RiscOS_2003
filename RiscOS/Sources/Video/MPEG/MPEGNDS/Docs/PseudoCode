SWI_RegisterHandlers
  Claim client block (R11)
  Link client block into client list
  Initialise client block
  Register a descriptor handler (all streams)	(R12=client block)

DescriptorHandler_OpenStream	(R12=client block)
	MOV	R11, R12
	LDR	R12, [R11, #CL_ModuleWorkspace]
  Claim DSH block (R10)
  Link into DSH list in parent client block
  Call client's OpenStream handler
  Initialise DSH block
  Return DSH block pointer

DescriptorHandler_DataTransfer	(R2=DSH block, R12=client block)
	MOV	R11, R12
	LDR	R12, [R11, #CL_ModuleWorkspace]
	MOV	R10, R2
  Have we got the PID?
  Yes:
    Is there a program element handler installed (i.e. is PID <> -1)?
    No:
      Register a program element handler on that PID	(R12=DSH block)
  Have we got all of the data?
  Yes:
    Pass CA private_data_bytes to client
    Reset buffer pointers to empty

ProgramElementHandler_OpenStream	(R12=DSH block)
	LDR	R11, [R12, #DSH_ClientBlock]
	MOV	R10, R12
	LDR	R12, [R11, #CL_ModuleWorkspace]
  Claim PEH block (R9)
  Link into PEH list in parent client block
  Initialise PEH block
  Return PEH block pointer

ProgramElementHandler_DataTransfer	(R2=PEH block, R12=DSH block)
	LDR	R11, [R12, #DSH_ClientBlock]
	MOV	R10, R12
	MOV	R9, R2
	LDR	R12, [R11, #CL_ModuleWorkspace]
  Have we got a complete ECM (reference)?
  Yes:
    Is there a descrambler handler installed (i.e. is flag set)?
    No:
      Register a descrambler handler on the stream	(R12=DSH block)
    Reset buffer pointers to empty

DescramblerHandler_OpenStream	(R12=DSH block)
	LDR	R11, [R12, #DSH_ClientBlock]
	MOV	R10, R12
	LDR	R12, [R11, #CL_ModuleWorkspace]
  Claim PDH block (R9)
  Link into PDH list in parent client block
  Initialise PDH block
  Return PDH block pointer

DescramblerHandler_DataTransfer	(R2=PDH block, R12=DSH block)
	LDR	R11, [R12, #DSH_ClientBlock]
	MOV	R10, R12
	MOV	R9, R2
	LDR	R12, [R11, #CL_ModuleWorkspace]
  Have we got a complete TS packet payload?
  Pass TS packet payload for descrambling to client
  Reset buffer pointers to empty
  Claim next available bitstream buffer

BitStream_Buffer_Claim
  Is free list empty?
  Yes:
    Claim a new block for bitstream buffers
    Initialise the buffers onto the free list
  Pop head item off free list and return it

BitStream_Buffer_Free
  Add the current bitstream buffer to the free list

DescriptorHandler_ResetStream	(R2=DSH block, R12=client block)
	MOV	R11, R12
	LDR	R12, [R11, #CL_ModuleWorkspace]
	MOV	R10, R2
  Reset buffer pointers to empty

ProgramElementHandler_ResetStream	(R2=PEH block, R12=DSH block)
	LDR	R11, [R12, #DSH_ClientBlock]
	MOV	R10, R12
	MOV	R9, R2
	LDR	R12, [R11, #CL_ModuleWorkspace]
  Reset buffer pointers to empty

DescramblerHandler_ResetStream	(R2=PDH block, R12=DSH block)
	LDR	R11, [R12, #DSH_ClientBlock]
	MOV	R10, R12
	MOV	R9, R2
	LDR	R12, [R11, #CL_ModuleWorkspace]
  Reset buffer pointers to empty

DescramblerHandler_CloseStream	(R2=PDH block, R12=DSH block)
	LDR	R11, [R12, #DSH_ClientBlock]
	MOV	R10, R12
	MOV	R9, R2
	LDR	R12, [R11, #CL_ModuleWorkspace]
  Deregister PDH
  Delink PDH block
  Free PDH block

ProgramElementHandler_CloseStream	(R2=PEH block, R12=DSH block)
	LDR	R11, [R12, #DSH_ClientBlock]
	MOV	R10, R12
	MOV	R9, R2
	LDR	R12, [R11, #CL_ModuleWorkspace]
  Deregister PEH
  Delink PEH block
  Free PEH block

DescriptorHandler_CloseStream	(R2=DSH block, R12=client block)
	MOV	R11, R12
	LDR	R12, [R11, #CL_ModuleWorkspace]
	MOV	R10, R2
  Call client's CloseStream handler
  Delink DSH block
  Free DSH block
