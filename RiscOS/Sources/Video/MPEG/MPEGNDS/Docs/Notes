
0	Pointer to previous client block (or null if this is the head item)
4	Pointer to next client block (or null if this is the tail item)
8	Module workspace pointer
12	Reloc modifier words (8 bytes)
20	OpenStream_Handler() function pointer
24	ResetStream_Handler() function pointer
28	CloseStream_Handler() function pointer
32	CADescriptor_Handler() function pointer
36	ECMTSPacket_Handler() function pointer
40	Descrambler_Handler() function pointer
44	R0 as passed into MPEGControl_RegisterDescriptorHandler
48	R4 as passed into MPEGControl_RegisterDescriptorHandler
52	Number of bytes of data remaining before calling client
56	Pointer to head of descriptor buffer




Size of the descriptor buffer is maximum possible private_data_bytes from a
CA descriptor.




* SWI SetCASID registers the CAS ID globally, for all clients/streams from that
  point onwards. I.e. it stores that word in an allocated part of the module
  workspace.

  Q. What is an invalid CAS ID (in case they try to register the descriptor
     handler without setting it)?

* SWI RegisterHandlers will traverse the client block list, looking for an entry
  which matches all of the function pointers. If found, an error is returned.

  If no match was found, a new client block is created and placed into the client
  block list - don't care if at head or tail.

* SWI DeregisterHandlers will traverse the client block list, looking for an entry
  which matches all of the function pointers. If not found, an error is returned.

  If found, the descriptor handler is deregistered. If an element handler is
  installed, that is also removed. If a descrambler handler is installed, that is
  also removed.

  Any buffers belonging to the handlers are freed (i.e. returned to the buffer
  free pool) and the client block is freed.






