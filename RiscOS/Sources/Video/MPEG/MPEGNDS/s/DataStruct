; >s.DataStruct
; Copyright © Pace Micro Technology plc, 2002
; All rights reserved.
;
; Various global constants and data structure definitions.

; Macro ripped-out of Wimp sources...
	MACRO
$label	ALIGNHASH  $m
 [ ((:INDEX:@) :AND: ($m-1)) <> 0
$label	#	$m - ((:INDEX:@) :AND: ($m-1))
 |
$label	#	0
 ]
        MEND

; Maximum possible size of a transport stream packet's payload (round-up to quad-words)...
TS_PAYLOAD_SIZE		*	184

; Size of an internal bitstream packet plus its descriptor...
BITSTREAM_HDR_SIZE	*	PacketDescriptor_BSn
BITSTREAM_SIZE		*	BITSTREAM_HDR_SIZE + TS_PAYLOAD_SIZE + 8

	; Will the end of the payload lie on a quad-word boundary in RMA?
	ASSERT	((BITSTREAM_SIZE + 4) :AND: 15) = 0

CA_BUF_SIZE		*	255		; Size of the CA descriptor buffer
CA_INIT			*	CA_BUF_SIZE	;
CA_SKIP			*	-1		;

; Flags used to register program element handler...
ELEMENT_FLAGS		*	PEHFlags_IncludePESHeaders :OR: PEHFlags_StreamIdentifiedByPID :OR: PEHFlags_StreamSpecific

; Flags used to register descriptor handler...
DESCRIPTOR_FLAGS	*	0

; Tag for a CA descriptor - used to register descriptor handler...
DESCRIPTOR_TAG		*	9

; Flags used to register descrambling handler...
DESCRAMBLER_FLAGS	*	PSHFlags_StreamSpecific

;
; *********************** REGISTER NAMING CONVENTIONS ***********************
;
WS			RN	R12		; Pointer to MPEGNDS's module workspace
CL			RN	R11		; Pointer to client's CL block (client information)
SB			RN	R10		; Pointer to client's DSH block (descriptor handler)

;
; *********************** MODULE WORKSPACE ***********************
;
			^	0
WS_Flags		#	4		; Flags word
WS_ClientList		#	4		; Pointer to the head client list block
WS_FreeList		#	4		; Pointer to the head bitstream buffer on the free list (see note below)
WS_BufUsageRtn		#	4		; Pointer to the buffer usage modification routine in MPEGControl
WS_CASID		#	4		; Global CAS ID setting
  [ DEBUG
WS_DAnum		#	4		; Debug dynamic area's number
WS_DAbase		#	4		; Debug dynamic area's base address
  ];DEBUG

;WS_DebugFlags		#	4
;WS_DebugFlags_PEH	*	1 :SHL: 0
;WS_DebugFlags_PDH	*	1 :SHL: 1
;WS_DebugCSH		#	4

WS_SIZE			*	@		; Size in bytes of the module workspace block

;
; *********************** SWI R0 FLAG BITS ***********************
;
RegFlag_CAS		*	1 :SHL: 0	; Set is R2 contains CA_system_ID to use, else use global value

;
; *********************** MPEG NDS CLIENT BLOCK ***********************
;
			^	0
CL_Prev			#	4		; Ptr to the previous client block (null if this is head item)
CL_Next			#	4		; Ptr to the next client block (null if this is tail item)
CL_WS			#	4		; Ptr to the MPEG NDS module workspace
CL_RelocModifiers	#	8		; Copy of the client's relocation modifiers
CL_OpenStream		#	4		; Ptr to client's OpenStream function
CL_ResetStream		#	4		; Ptr to client's ResetStream function
CL_CloseStream		#	4		; Ptr to client's CloseStream function
CL_CADescriptor		#	4		; Ptr to client's CADescriptor function
CL_ECMTSPacket		#	4		; Ptr to client's ECMTSPacket function
CL_Descrambling		#	4		; Ptr to client's Descrambling function
CL_CASID		#	4		; The CAS ID to be used to derive the ECM PID for a stream
CL_StreamList		#	4		; Ptr to start of stream block list
CLIENT_BLK_SIZE		*	@		; Size in bytes of a client block

;
; *********************** STREAM BLOCK ***********************
;
			^	0
SB_Prev			#	4		; Pointer to previous stream block for this client
SB_Next			#	4		; Pointer to next stream block for this client
SB_Flags		#	4		; Stream block flags word
SB_Flags_PEH		*	1 :SHL: 0	;   Bit 0 set - PEH registered
SB_Flags_PDH		*	1 :SHL: 1	;   Bit 1 set - PDH registered
SB_Flags_FirstChunk	*	1 :SHL: 2	;   Bit 2 set - Next PDH chunk is first of payload accumulated in this bitstream packet
SB_WS			#	4		; MPEG NDS workspace pointer
SB_CL			#	4		; Client block pointer for owner of this handler
SB_CSH			#	4		; Control stream handle of this stream
SB_Handle		#	4		; Handle to pass to MPEG NDS' client in function calls
SB_ECMPID		#	4		; PID for the ECM stream (upon which the PEH was registered)
; DSH bits...
SB_DSH_Remain		#	4		; Number of bytes required before passing the data on
SB_DSH_BufPtr		#	4		; Pointer to location in DSH buffer to copy next byte into
SB_DSH_Buffer		#	CA_BUF_SIZE	; Buffer for accumulating the handler's data
 ALIGNHASH 4					; Following stuff should be word-aligned
; PEH bits...
SB_PEH_Fetched		#	4		; Number of bytes of data fetched thus far
SB_PEH_Buffer		#	TS_PAYLOAD_SIZE	; Buffer for accumulating the handler's data
 ALIGNHASH 4					; Following stuff should be word-aligned
; PDH bits...
SB_PDH_First		#	4		; Pointer to the first copied byte of payload in our bitstream packet
SB_PDH_Packet		#	4		; Pointer to the bitstream packet descriptor for copying data into
; Other bits...
SB_SIZE			*	@		; Size in bytes of a stream block

 [ DEBUG
 ! 0, "SB_DSH_Remain    &" :CC: :STR: SB_DSH_Remain
 ! 0, "SB_DSH_BufPtr    &" :CC: :STR: SB_DSH_BufPtr
 ! 0, "SB_DSH_Buffer    &" :CC: :STR: SB_DSH_Buffer
 ! 0, "SB_PEH_Fetched   &" :CC: :STR: SB_PEH_Fetched
 ! 0, "SB_PEH_Buffer    &" :CC: :STR: SB_PEH_Buffer
 ! 0, "SB_PDH_First     &" :CC: :STR: SB_PDH_First
 ! 0, "SB_PDH_Packet    &" :CC: :STR: SB_PDH_Packet
 ];DEBUG

	END
