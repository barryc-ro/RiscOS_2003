If STB$StandbyPressed Then Obey
Pointer 0
IRDefault
Set PlayMPEG$File1 %0

SetEval PlayMPEG$FromURL (PlayMPEG$File1 LEFT 13) RIGHT 7
If "<PlayMPEG$FromURL>" = "MPEG1SS" Then Set PlayMPEG$FromURL mpeg1ss
If "<PlayMPEG$FromURL>" = "MPEG2TS" Then Set PlayMPEG$FromURL mpeg2ts
If "<PlayMPEG$FromURL>" = "mpeg1ss" OR "<PlayMPEG$FromURL>" = "mpeg2ts" Then SetEval PlayMPEG$File2 PlayMPEG$File1 RIGHT ((LEN PlayMPEG$File1) - 14) Else SetEval PlayMPEG$File2 PlayMPEG$File1 RIGHT ((LEN PlayMPEG$File1) - 6)

X Set MPEG$Control <MPEG$Type>
Set MPEG$Control <PlayMPEG$FromURL>

If "<MPEG$DTType>" =  "NFS" Then Set Alias$PlayMPEGRun @RunType_FFD MPEGFiles:<PlayMPEG$file2> -task %*1
If "<MPEG$DTType>" <> "NFS" Then Set Alias$PlayMPEGRun @RunType_FFD <PlayMPEG$file2> -task %*1

Hourglass_Off
PlayMPEGRun
Hourglass_On

UnSet PlayMPEG$File1
UnSet PlayMPEG$File2
UnSet PlayMPEGRun
UnSet PlayMPEG$FromURL

Fx 15
Fx 21
If STB$StandbyPressed = 0 Then RMReinit IR
/FlushKeys
IRreset

If "%1" <> "-novideo" THEN RedrawScrn
If "<User$StatusReport>" <> "" Then Run MPEGUtils:MPEGError
If "<User$NPT>"          <> "" Then Run MPEGUtils:NPTResume
IF "<User$StatusReport>" <> "" Then Set MPEG$LastError <User$StatusReport> (<User$StatusErr> at <User$StatusErl>) at <Sys$Time> <Sys$Date> <Sys$Year> [%0]
IF "<User$StatusReport>" <> "" AND "<MPEG$FirstError>" = "None" THEN Set MPEG$FirstError <MPEG$LastError>
If "<User$StatusReport>" <> "" Then Set Alias$Temp SetEval MPEGErrorLog<User$StatusErr> |<MPEGErrorLog<User$StatusErr>> +1
If "<User$StatusReport>" <> "" Then Temp
If "<User$StatusReport>" = "" Then SetMacro Alias$Temp SetEval MPEG$StreamsPlayed <MPEG$StreamsPlayed>+1
If "<User$StatusReport>" = "" Then Temp
Unset Alias$Temp
