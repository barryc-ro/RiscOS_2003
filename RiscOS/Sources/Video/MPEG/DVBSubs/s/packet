;*****************************************************************************
; $Id$
; $Name$
;
; Author(s):  Ben Avison
; Project(s): DSL4000 Deployment (A170)
;
; ----------------------------------------------------------------------------
; Copyright [2002] Pace Micro Technology PLC.  All rights reserved.
;
; The copyright in this material is owned by Pace Micro Technology PLC
; ("Pace").  This material is regarded as a highly confidential trade secret
; of Pace.  It may not be reproduced, used, sold or in any other way exploited
; or transferred to any third party without the prior written permission of
; Pace.
;
; ----------------------------------------------------------------------------
; Purpose: Veneer to packet-free routines
;
; ----------------------------------------------------------------------------
; History: See source control system log
;
;****************************************************************************/

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:APCS.<APCS>
        GET     Hdr:MPEGCtrl

        AREA    |Asm$$Code|, CODE, READONLY

; extern void packet_FreeHead_USR(PacketDescriptor_t * volatile *head, PacketDescriptor_t * volatile *tail, PacketDescriptor_t *check);

; Frees the head packet on a list

; In:   Addresses of head and tail pointers, value we expect the head
;       pointer to contain
; Out:  If |*head| still points to the same thing as |check|, then the head
;       link is delinked and freed, and |*head| and |*tail| are updated
;       accordingly. Otherwise, it is assumed that |check| was freed in the
;       background, and so no action is taken

; The list may only be asynchronously modified from callbacks, so the list
; head and tail are involatile while we are in SVC mode.
; Note that the descriptor's free routine must be called in SVC mode anyway.

        EXPORT  packet_FreeHead_USR
packet_FreeHead_USR
        MRS     a4, CPSR
        SWI     XOS_EnterOS
        LDR     lr, [a1]
        TEQ     lr, a3
        BNE     %FT90           ; packet has already been freed
        LDR     lr, [a3, #PacketDescriptor_Link]
        STR     lr, [a1]
        LDR     lr, [a2]
        TEQ     lr, a3
        MOVEQ   lr, #0
        STREQ   lr, [a2]        ; zero the tail pointer if necessary
        MOV     lr, #0
        STR     lr, [a3, #PacketDescriptor_Link]
        ASSERT  PacketDescriptor_FreeWorkspace = PacketDescriptor_FreeRoutine + 4
        ASSERT  PacketDescriptor_FreeRoutine = 4
        MOV     a1, a3
        LDMIB   a1, {a2, ip}
        TEQ     a2, #0
        MOVNE   lr, pc
        MOVNE   pc, a2
90      MSR     CPSR_c, a4
        Return  , LinkNotStacked


; extern void packet_FreeHead_SVC(PacketDescriptor_t * volatile *head, PacketDescriptor_t * volatile *tail);

; Frees the head packet on a list

; In:   Addresses of head and (optionally) tail pointers
; Out:  Head link is delinked and freed, and |*head| and |*tail| are
;       updated accordingly.

; The list may only be asynchronously modified from callbacks, so the list
; head and tail are involatile by virtue of us being in SVC mode.

        EXPORT  packet_FreeHead_SVC
packet_FreeHead_SVC
        FunctionEntry
        LDR     a3, [a1]
        LDR     lr, [a3, #PacketDescriptor_Link]
        STR     lr, [a1]
        TEQ     a2, #0
        BEQ     %FT50           ; no tail pointer specified
        LDR     lr, [a2]
        TEQ     lr, a3
        MOVEQ   lr, #0
        STREQ   lr, [a2]        ; zero the tail pointer if necessary
50      MOV     lr, #0
        STR     lr, [a3, #PacketDescriptor_Link]
        ASSERT  PacketDescriptor_FreeWorkspace = PacketDescriptor_FreeRoutine + 4
        ASSERT  PacketDescriptor_FreeRoutine = 4
        MOV     a1, a3
        LDMIB   a1, {a2, ip}
        TEQ     a2, #0
        MOVNE   lr, pc
        MOVNE   pc, a2
        Return


        END
