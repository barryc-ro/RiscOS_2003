#include "messages.h"

#include "swis.h"
#include "toolbox.h"

#include <string.h>
#include "stdbool.h"

static MessagesFD MessageBlock;
static bool Initialised = false;

/* ********************************************************** */

_kernel_oserror *messages_initialise()
{
   _kernel_oserror *err = NULL;

   err = _swix(MessageTrans_OpenFile,

               _INR(0,2),

               &MessageBlock,
               "Resources:$.Resources.IPTeletext.Messages",
               NULL);

   if (!err)
      Initialised = true;

   return err;
}

void messages_final(void)
{
   if (Initialised)
      _swix(MessageTrans_CloseFile,_IN(0),&MessageBlock);
}

char const *messages_simple_lookup(char const *tag)
{
   char const *result;

   if (!Initialised ||
       _swix(MessageTrans_Lookup,
             _INR(0,7) | _OUT(2),

	     &MessageBlock, tag, 0, 0, 0, 0, 0, 0,

             &result) != NULL)
   { /* message lookup failed so return the part of the tag after a colon
        or the whole tag */
      char *t =  strchr(tag,':');

      result = (t) ? t : tag;

   }

   return result;
}

_kernel_oserror *messages_error_lookup(int errnum, char const *tag)
{
   static _kernel_oserror oops = { 0, "Error message lookup failed." };
   _kernel_oserror *err = &oops;

   if (Initialised)
   {
      _kernel_oserror tempError;

      tempError.errnum = errnum;
      strncpy(tempError.errmess,tag,sizeof(tempError.errmess));

      err = _swix(MessageTrans_ErrorLookup,
                  _INR(0,7),

                  &tempError,
                  &MessageBlock,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0);
   }

   return err;
}
