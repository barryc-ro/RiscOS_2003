#ifndef PEHANDLERS_H
#define PEHANDLERS_H

#include "kernel.h"
#include "stdbool.h"

typedef struct program_element_packet
{
   struct program_element_packet *next;
   void (*freeroutine)(unsigned int);
   unsigned int freeworkspace;
   void *dataStart;
   unsigned int length;
   unsigned int bufferDescriptor;
   unsigned int flags;
   unsigned int bsn;
   char pts[5];
   char reserved1[3];
   char dts[5];
   char reserved2[3];
   unsigned int fullLength;
} program_element_packet;

typedef struct decoded_page
{
   bool active;
   bool ptsPassed;
   int page;
   int subPage;
   int flags;
   int nationalOptionCharset;
   char header[32];
   char pageData[40*24];
   char pts[5];
   int fastTextLinks[5];
   bool fastTextLinksValid;
   bool ignorePacket24;
} decoded_page;

typedef struct pe_process_state
{
   bool gotStartPacket;
   bool waitingForFirstHeader;
   bool serialTransmission;
   decoded_page pageDecode[8];
   char pts[5];
} pe_process_state;

extern bool VideoStreamOpen;

_kernel_oserror *peh_open_stream(unsigned int flags,
                                 unsigned int controlStreamHandle,
                                 unsigned int *programElementStreamHandle);

_kernel_oserror *peh_data_transfer(unsigned int flags,
                                   unsigned int programElementStreamHandle,
                                   program_element_packet *pragramElementPacket);

_kernel_oserror *peh_close_stream(unsigned int flags,
                                  unsigned int programElementStreamHandle);
char bitswap(char a);
int parity(char v);

#endif /* PEHANDLERS_H */
