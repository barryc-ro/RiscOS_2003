 New interfaces required for DEC/Telecom Finland work
 ----------------------------------------------------

1. The pause/resume sequence requires the capability to discard all incoming
data for the time being. For this we use

	SWI MPEGControl_SelectProgram, 3, ctrlhandle, -1, 0, 0

which select program number 1, but video stream and audio stream number 0,
which do not exist (I number the streams starting at 1).

To resume, use

	SWI MPEGControl_SelectProgram, 3, ctrlhandle, -1, 1, 1

which select program number 1, and video and audio stream 1.

Note that in the case of pause/resume we should issue an
MPEGControl_ResetStream just *before* this.

2. To handle transitions between normal/fast-forward/fast-reverse it is
necessary for the MPEGTrans module to be able to discard data until it gets
data of the right mode. To do this we extend MPEGControl_ResetStream as
follows:-

	SWI MPEGControl_ResetStream

 in:	r0 = flags:
 		bit 0 set => new stream has video data
 		bit 1 set => new stream has audio data
 		bit 2 set => r2 = mode of new data
 	r1 = control stream handle
 	
 	r2 = mode of new data, if bit 2 of r0 set:
 		0 => fast forward
 		1 => slow motion
 		2 => freeze frame
 		3 => fast reverse
 		4 => slow reverse
 	       -1 => normal play
 	     Note that these values correspond to the values of the
 	     trick_mode_control field in the PES packet header, except
 	     for -1 which corresponds to DSM_trick_mode_flag = 0, and
 	     hence no trick_mode_control field.

 out:	r2 = estimate of amount of discarded video data, in bytes
 	r3 = estimate of amount of discarded audio data, in bytes

Note that the values in r2 and r3 on exit only indicate the amount of data
that is discarded immediately, and not any data which is subsequently
discarded because it is in the wrong mode, since this data may be discarded
after this call has returned.
