create_variables
        Entry   "R0-R4"
        ADR     R0, var1_name
        ADR     R1, var1_code
        MOV     R2, #var1_code_end - var1_code
        MOV     R3, #0
        MOV     R4, #VarType_Code
        SWI     XOS_SetVarVal
        EXIT    VS
        ADR     R0, var2_name
        ADR     R1, var2_code
        MOV     R2, #var2_code_end - var2_code
        MOV     R3, #0
        MOV     R4, #VarType_Code
        SWI     XOS_SetVarVal
        EXIT

delete_variables
        Entry   "R0-R4"
        ADR     R0, var1_name
        ADR     R1, var1_code
        MOV     R2, #-1
        MOV     R3, #0
        MOV     R4, #VarType_Code
        SWI     XOS_SetVarVal
        ADR     R0, var2_name
        ADR     R1, var2_code
        MOV     R2, #-1
        MOV     R3, #0
        MOV     R4, #VarType_Code
        SWI     XOS_SetVarVal
        EXITS


var1_name   = "MPEG$Control", 0
var2_name   = "PlayMPEG$LastLoaded", 0
        ALIGN

; Note: use SWIs instead of BLs in following code because it will be relocated!

var1_code
        B       var1_write
var1_read
        Entry
        MOV     R0, #1          ; read demux module
        SWI     XMPEGControl_ControlOp
        CMP     R1, #0
        ADREQ   R0, var1_buffer0
        ADRGT   R0, var1_buffer1
        ADRLT   R0, var1_buffer2
        MOVEQ   R2, #var1_buffer0_end - var1_buffer0
        MOVGT   R2, #var1_buffer1_end - var1_buffer1
        MOVLT   R2, #var1_buffer2_end - var1_buffer2
        EXIT
var1_write
        Entry   "R0"
        MOV     R4, #-1
        ADR     R0, var1_buffer0
        BL      var1_strncasecmp
        MOVEQ   R4, #0
        ADR     R0, var1_buffer1
        BL      var1_strncasecmp
        MOVEQ   R4, #1
        MOV     R0, #0          ; set demux module
        ADDS    R1, R4, #0      ; clears V
        SWIGE   XMPEGControl_ControlOp
        STRVS   R0, [sp]
        EXIT
var1_strncasecmp
; Entry:
; R0,R1 -> strings to compare (R0 must be upper case and null terminated)
; R2 = number of characters in R1 string
; Exit:
; EQ => strings match
        Entry   "R0-R4"
        B       %FT09
01      LDRB    R3, [R0], #1
        LDRB    R4, [R1], #1
        SUB     R2, R2, #1
        CMP     R4, #'a'
        RSBGES  R14, R4, #'z'
        SUBGE   R4, R4, #'a'-'A'
        TEQ     R3, R4
        EXIT    NE
09      TEQ     R2, #0
        BNE     %BT01
        LDRB    R3, [R0]
        TEQ     R3, #0
        EXIT
var1_buffer0
        =       "MPEG1SS"
var1_buffer0_end
        =       0
var1_buffer1
        =       "MPEG2TS"
var1_buffer1_end
        =        0
var1_buffer2
        =       "Unset"
var1_buffer2_end
        =       0
        ALIGN
var1_code_end


var2_code
        MOVS    PC, R14         ; no write code (variable is read-only)
var2_read
        Entry
        MOV     R0, #1          ; read demux module
        SWI     XMPEGControl_ControlOp
        CMP     R1, #0
        ADREQ   R0, var2_buffer0
        ADRGT   R0, var2_buffer1
        ADRLT   R0, var2_buffer2
        MOVEQ   R2, #var2_buffer1 - var2_buffer0
        MOVGT   R2, #var2_buffer2 - var2_buffer1
        MOVLT   R2, #0
        EXIT
var2_buffer0
        =       "MPEGCtrl"
var2_buffer1
        =       "MPEGTrans"
var2_buffer2
        =       0
        ALIGN
var2_code_end


        END
