sysctrlinfo             = "SysCtrlInfo", 0
sysctrldebugon          = "SysCtrlDebugOn", 0
sysctrldebugoff         = "SysCtrlDebugOff", 0

transctrlinfo           = "TransCtrlInfo", 0
transctrldebugon        = "TransCtrlDebugOn", 0
transctrldebugoff       = "TransCtrlDebugOff", 0

        ALIGN

sysctrl_cmds
        DCD     sysctrlinfo - .
        DCD     sysctrldebugon - .
        DCD     sysctrldebugoff - .

transctrl_cmds
        DCD     transctrlinfo - .
        DCD     transctrldebugon - .
        DCD     transctrldebugoff - .


CtrlInfo_Code
        MOV     R6, #0
        B       common_code
CtrlDebugOn_Code
        MOV     R6, #1
        B       common_code
CtrlDebugOff_Code
        MOV     R6, #2
        ; drop through...
common_code
        Push    "R14"
        LDR     R12, [R12]
        ; Check selected module is still alive
        LDR     R1, DemuxModule
        CMP     R1, #0
        BMI     err_no_module_selected

        LDREQ   R5, MPEGSystem_Base
        LDRNE   R5, MPEGTransport_Base
        LDR     R4, [R5, #Module_HC_Table]
        ADD     R4, R5, R4
        ADREQ   R14, sysctrl_cmds
        ADRNE   R14, transctrl_cmds
        ADD     R6, R14, R6, LSL #2
        LDR     R14, [R6]
        ADD     R6, R6, R14

        ; R4 -> help/command table
        ; R5 = module base
        ; R6 -> command name to match
01      LDRB    R0, [R4]
        TEQ     R0, #0          ; end of command table?
        BEQ     err_command_not_found

        MOV     R3, #0          ; start by assuming they match
        MOV     R14, R6
02      LDRB    R0, [R14], #1
        LDRB    R1, [R4], #1
        TEQ     R0, R1
        MOVNE   R3, PC          ; nonzero value => they don't match
        TEQ     R1, #0
        BNE     %BT02           ; loop until terminator

        ADD     R4, R4, #3
        BIC     R4, R4, #3      ; ALIGN (R4)
        TEQ     R3, #0
        ADDNE   R4, R4, #4*4
        BNE     %BT01           ; skip to next command and loop if not match

        ; R4 -> code offset
        ; R5 = module base
        ; R6 -> command name ("Sys"/"Trans" prefix form, not "Ctrl" prefix)
        MOV     R0, R6
        MOV     R1, #0
        LDR     R14, DemuxModule
        CMP     R14, #1
        ADRLO   R12, MPEGSystem_PW
        ADREQ   R12, MPEGTransport_PW
        LDR     R4, [R4]
        ADD     R4, R5, R4
        CLRV
        MOV     R14, PC         ; PC will be 8 bytes ahead
        MOV     PC, R4
        ; drop through...

common_code_exit
        Pull    "PC"

        MakeErrorBlock  NoCommand
err_command_not_found
        ThrowError  NoCommand
        B       common_code_exit


LoadMPEGCtrl_Code
        Entry
        LDR     R12, [R12]
        MOV     R0, #0          ; set demux module
        MOV     R1, #0          ; module = MPEGSystem
        BL      int_control_op
        EXIT

LoadMPEGTrans_Code
        Entry
        LDR     R12, [R12]
        MOV     R0, #0          ; set demux module
        MOV     R1, #1          ; module = MPEGTransport
        BL      int_control_op
        EXIT

        END
