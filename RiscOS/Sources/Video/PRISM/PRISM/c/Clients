/**************************************************************/
/* File:    Clients.c                                         */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Manage client lists.                              */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 21-Jun-2001 (ADH): Created.                       */
/**************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#include <kernel.h>
#include <swis.h>

#ifdef TRACE2
  #define TRACE
#endif
#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

#include "Lists.h"
#include "Utils.h"

#include "Clients.h"

/* Local variables */

static client * client_list = NULL;

/**************************************************************/
/* clients_print_list()                                       */
/*                                                            */
/* Print a list of currently registered clients, as for       */
/* "*PRISMClients".                                           */
/**************************************************************/

_kernel_oserror * clients_print_list(void)
{
  _kernel_oserror * e;
  const char      * buffer = NULL;
  size_t            len;

  if (client_list == NULL)
  {
    e = read_message("PCl00", &buffer, &len);

    if (e != NULL)
    {
      return e;
    }

    /* Print it - length-limit as we're using MessageTrans_Lookup */
    /* (albeit indirectly) in its "give us the buffer" mode, so   */
    /* the string is terminated by char 10 rather than NUL.       */

    printf("%.*s\n", len, buffer);
  }
//  else
//  {
//    size_t       len;
//    const char * info;
//
//    printf("Client   PM SID   SWI base   Active\n");
//
//    for (len = 0; len < 9; ++len)
//    {
//      printf("========");
//    }
//
//    printf("=======\n");
//
//    for (list = client_list; list; list = list->next)
//    {
//      control * c = &list->ctrl;
//
//      info = c->protocol != 0 ? protocol_get_info_from_swi_base(c->protocol) : NULL;
//      if (info == NULL) info = "-";
//
//      printf("%08X %08X %08X   %s\n",
//             (int) list,
//             c->id,
//             c->protocol,
//             info);
//    }
//  }

  return NULL;
}

/**************************************************************/
/* clients_register()                                         */
/*                                                            */
/* Handle the PRISM_Register SWI.                             */
/*                                                            */
/* Parameters: Pointer to register block.                     */
/**************************************************************/

_kernel_oserror * clients_register(_kernel_swi_regs * r)
{
  (void) r;

  return NULL;
}

/**************************************************************/
/* clients_shutdown()                                         */
/*                                                            */
/* Shut down the client registry.                             */
/**************************************************************/

void clients_shutdown(void)
{
  client * c;

  dprintf(("Clients", "clients_shutdown: Called\n"));

  for (c = client_list; c; c = c->next)
  {
    lists_remove_all((void **) &c->items);
  }

  lists_remove_all((void **) &client_list);

  dprintf(("Clients", "clients_shutdown: Successful\n"));
}
