 
Title; ColourTrans ( ... the next generation)
Author; David De Vorchik
History;
        06-Jun-92 DDV Created
        10-Aug-92 DDV Brough up to date with changes to SelectTable.


This document outlines the changes between the 'Green' release and the latest 
version of ColourTrans.


ColourTrans 1.08

 * ColourTrans makes full use of OS_SetColour when selecting colours, it
   no longer calls VDU 18 or 17 to change colour it is all performed using
   those SWIs - RISC OS 3.10 users can load a ECFUtils module which will
   patch the kernel routines to provde full support for these calls.
       
 * Nasty RISC OS 3.10 bug fixed where the green component was dropped in
   eight bit per pixel modes (for translation tables).

 * We can now generate pixel translation tables for 16 and 32 bit per pixel
   sprites, allowing Sprite Extend to plot them correctly.  Translating in
   reverse is not supported however.

 * Dithering at 16 bit per pixel is now supported, if the depth > 16 bit 
   per pixel then the dithering bit is ignored.

 * Cache structure changed, now stored colour words and GCOL values as
   words.  This means a slight re-shuffle factor.

 * Note: ReturnGCOL and ReturnColourNumber functions can return
         a word instead of a byte.

 * SetGCOL has been recoded and is now more sensible in its handling of
   dithering requests and filtering the parameters.

 * Full support for 8 bit per pixel CLUT modes added.

 * Backwards compatability hack introduced, new control bit on
   SelectTable / GenerateTable to generate big tables, if clear
   and depth >= 8 then 8 bit-per-pixel fast tables generated. 

 * New bit on select table to generate GCOL tables, used by back 
   compatibilty code.

 * Calling ColourTrans_ReadPalette or ColourTrans_WritePalette in
   either a 16 or 32 bit per pixel mode will cause an error to 
   be returned.
 

To be done

 * Generation of 16 or 32 bit tables to any other mode
 * Adopt new calibration model
 * PaletteV block read / write implemented
