; generated by Norcroft RISC OS ARM C vsn 4.10 [Jan 13 1993]
a1 RN 0
a2 RN 1
a3 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lr RN 14
pc RN 15

f0 FN 0
f1 FN 1
f2 FN 2
f3 FN 3
f4 FN 4
f5 FN 5
f6 FN 6
f7 FN 7

        AREA |C$$code|, CODE, READONLY

        IMPORT  |__main|
|x$codeseg|
        B       |__main|

        IMPORT  |x$stack_overflow|
        IMPORT  callback
        EXPORT  declare
declare
        MOV     ip, sp
        STMFD   sp!, {v1,v2,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        SUB     sp, sp, #24
        STR     a1, [sp, #8]
        STR     a2, [sp, #4]
        MOV     a1, #0
        STR     a1, [sp, #12]
        STR     a1, [sp, #16]
        ADD     v1, a2, a3
        ADD     a1, a2, #40
        STR     a1, [sp, #20]
        LDR     v2, [pc, #L00004c-.-8]
        LDR     ip, [sl, #0]
        ADD     v2, ip, v2
        B       |L000080.J5.declare|
L00004c
        IMPORT  main_declaration_callback
        DCD     main_declaration_callback
|L000050.J4.declare|
        STR     a1, [sp, #0]
        LDR     a4, [a1, #0]
        MOV     a2, sp
        LDR     a1, [v2, #0]
        MOV     a3, #1
        BL      callback
        ADD     a1, sp, #20
        LDR     a2, [sp, #20]
        LDR     a2, [a2, #4]
        LDR     a3, [a1, #0]
        ADD     a2, a2, a3
        STR     a2, [a1, #0]
|L000080.J5.declare|
        LDR     a1, [sp, #20]
        CMPS    a1, v1
        BLT     |L000050.J4.declare|
        LDR     a1, [sp, #16]
        LDMEA   fp, {v1,v2,fp,sp,pc}^

        IMPORT  xpdriver_declare_font
        IMPORT  strlen
        EXPORT  declare_font_table
declare_font_table
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,v5,v6,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        SUB     sp, sp, #4
        MOV     v4, #0
        MOV     v2, v4
        MOV     v1, a2
        LDR     a1, [v1, #0]
        STR     a1, [v1, #12]
        LDR     a2, [a1, #4]
        ADD     v6, a1, a2
        LDR     a1, [v1, #8]
        ANDS    a1, a1, #1
        MOVEQ   a1, v4
        MOVNE   a1, #1
        ORR     v5, a1, #2
        LDR     a1, [v1, #12]
        ADD     a1, a1, #8
        STR     a1, [sp, #0]
        B       |L000124.J8.declare_font_table|
|L0000ec.J7.declare_font_table|
        ADD     a2, a1, #1
        MOV     a3, v5
        MOV     a1, #0
        BL      xpdriver_declare_font
        MOVS    v2, a1
        BNE     |L00013c.J11.declare_font_table|
        MOV     v3, sp
        LDR     a1, [sp, #0]
        ADD     a1, a1, #1
        BL      strlen
        ADD     a2, a1, #2
        LDR     a1, [v3, #0]
        ADD     a1, a2, a1
        STR     a1, [v3, #0]
|L000124.J8.declare_font_table|
        LDR     a1, [sp, #0]
        CMPS    a1, v6
        BGE     |L00013c.J11.declare_font_table|
        LDRB    a2, [a1, #0]
        CMPS    a2, #0
        BNE     |L0000ec.J7.declare_font_table|
|L00013c.J11.declare_font_table|
        LDR     a1, [v1, #16]
        CMPS    a1, #0
        STREQ   v2, [v1, #16]
        CMPS    v2, #0
        MOVNE   a1, v4
        MOVEQ   a1, #1
        LDMEA   fp, {v1,v2,v3,v4,v5,v6,fp,sp,pc}^

        EXPORT  declare_group
declare_group
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,v5,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v4, #0
        MOV     v2, v4
        MOV     v1, a2
        LDR     a1, [v1, #0]
        LDR     a2, [a1, #4]
        ADD     v3, a1, a2
        ADD     a1, a1, #36
        STR     a1, [sp, #-4]!
        LDR     v5, [pc, #L00004c-.-8]
        LDR     ip, [sl, #0]
        ADD     v5, ip, v5
        B       |L0001d0.J5.declare_group|
|L00019c.J4.declare_group|
        STR     a1, [v1, #0]
        LDR     a1, [sp, #0]
        LDR     a4, [a1, #0]
        MOV     a2, v1
        LDR     a1, [v5, #0]
        MOV     a3, #1
        BL      callback
        MOV     a1, sp
        LDR     a2, [sp, #0]
        LDR     a2, [a2, #4]
        LDR     a3, [a1, #0]
        ADD     a2, a2, a3
        STR     a2, [a1, #0]
|L0001d0.J5.declare_group|
        LDR     a1, [sp, #0]
        CMPS    a1, v3
        BLT     |L00019c.J4.declare_group|
        LDR     a1, [v1, #16]
        CMPS    a1, #0
        STREQ   v2, [v1, #16]
        CMPS    v2, #0
        MOVNE   a1, v4
        MOVEQ   a1, #1
        LDMEA   fp, {v1,v2,v3,v4,v5,fp,sp,pc}^

        EXPORT  declare_tagged
declare_tagged
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v4, #0
        MOV     v3, v4
        MOV     v2, a2
        LDR     a1, [v2, #0]
        ADD     a1, a1, #28
        STR     a1, [v2, #0]
        LDR     a4, [a1, #0]
        MOV     a2, v2
        LDR     a1, [pc, #L00004c-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        LDR     a1, [a1, #0]
        MOV     v1, #1
        MOV     a3, v1
        BL      callback
        LDR     a1, [v2, #16]
        CMPS    a1, #0
        STREQ   v3, [v2, #16]
        CMPS    v3, #0
        MOVNE   a1, v4
        MOVEQ   a1, v1
        LDMEA   fp, {v1,v2,v3,v4,fp,sp,pc}^

        IMPORT  textarea_declare
        EXPORT  declare_text_area
declare_text_area
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v3, #0
        MOV     v1, a2
        LDR     a1, [v1, #8]
        ANDS    a1, a1, #1
        MOV     v2, #1
        MOVEQ   a1, v3
        MOVNE   a1, v2
        ORR     a2, a1, #2
        LDR     a1, [v1, #0]
        BL      textarea_declare
        LDR     a2, [v1, #16]
        CMPS    a2, #0
        STREQ   a1, [v1, #16]
        CMPS    a1, #0
        MOVNE   a1, v3
        MOVEQ   a1, v2
        LDMEA   fp, {v1,v2,v3,fp,sp,pc}^

        AREA |C$$data|

|x$dataseg|

        END
