; generated by Norcroft RISC OS ARM C vsn 4.10 [Jan 13 1993]
a1 RN 0
a2 RN 1
a3 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lr RN 14
pc RN 15

f0 FN 0
f1 FN 1
f2 FN 2
f3 FN 3
f4 FN 4
f5 FN 5
f6 FN 6
f7 FN 7

        AREA |C$$code|, CODE, READONLY

        IMPORT  |__main|
|x$codeseg|
        B       |__main|

        IMPORT  |x$stack_overflow|
        IMPORT  callback_new
        IMPORT  callback_register
        IMPORT  callback_delete
Create_List
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v2, a1
        MOV     v1, a2
        BL      callback_new
        MOVS    v4, a1
        MOVEQ   a1, #0
        LDMEQEA fp, {v1,v2,v3,v4,fp,sp,pc}^
        MOV     v3, #0
        B       |L000074.J7.Create_List|
|L000038.J6.Create_List|
        ADD     a1, v2, v3, ASL #3
        LDR     a4, [a1, #0]
        STMFD   sp!, {a4}
        LDR     a2, [a1, #4]
        MOV     a1, v4
        MOV     a4, #1
        MOV     a3, #0
        BL      callback_register
        ADD     sp, sp, #4
        CMPS    a1, #0
        MOVEQ   a1, v4
        BLEQ    callback_delete
        MOVEQ   a1, #0
        LDMEQEA fp, {v1,v2,v3,v4,fp,sp,pc}^
        ADD     v3, v3, #1
|L000074.J7.Create_List|
        CMPS    v3, v1
        BLT     |L000038.J6.Create_List|
        MOV     a1, v4
        LDMEA   fp, {v1,v2,v3,v4,fp,sp,pc}^

        IMPORT  files_messages
        IMPORT  xresourcefs_register_files
        IMPORT  getenv
        IMPORT  xmessagetrans_file_info
        IMPORT  malloc
        IMPORT  xmessagetrans_open_file
        EXPORT  main_error_lookup
        IMPORT  xmessagetrans_close_file
        IMPORT  free
        IMPORT  xresourcefs_deregister_files
        EXPORT  main_initialise
main_initialise
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,v5,v6,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        SUB     sp, sp, #8
        MOV     v6, #0
        MOV     v4, v6
        MOV     v3, v6
        BL      files_messages
        BL      xresourcefs_register_files
        MOVS    v1, a1
        LDR     v5, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     v5, ip, v5
        BNE     |L000250.J6.main_initialise|
        MOV     v3, #1
        ADD     a1, pc, #L000118-.-8
        BL      getenv
        CMPS    a1, #0
        ADDNE   v2, pc, #L000128-.-8
        ADDEQ   v2, pc, #L00013c-.-8
        ADD     a3, sp, #4
        MOV     a2, sp
        MOV     a1, v2
        BL      xmessagetrans_file_info
        MOVS    v1, a1
        BNE     |L000250.J6.main_initialise|
        LDR     a1, [sp, #0]
        ANDS    a1, a1, #1
        BEQ     |L000164.J12.main_initialise|
        LDR     a1, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        STR     v6, [a1, #16]
        B       |L000194.J14.main_initialise|
L000114
        DCD     |x$dataseg|
L000118
        DCB     &44,&72,&61,&77
        DCB     &46,&69,&6c,&65
        DCB     &24,&50,&61,&74
        DCB     &68,&00,&00,&00
L000128
        DCB     &44,&72,&61,&77
        DCB     &46,&69,&6c,&65
        DCB     &3a,&4d,&65,&73
        DCB     &73,&61,&67,&65
        DCB     &73,&00,&00,&00
L00013c
        DCB     &52,&65,&73,&6f
        DCB     &75,&72,&63,&65
        DCB     &73,&3a,&52,&65
        DCB     &73,&6f,&75,&72
        DCB     &63,&65,&73,&2e
        DCB     &44,&72,&61,&77
        DCB     &46,&69,&6c,&65
        DCB     &2e,&4d,&65,&73
        DCB     &73,&61,&67,&65
        DCB     &73,&00,&00,&00
|L000164.J12.main_initialise|
        LDR     a1, [sp, #4]
        BL      malloc
        LDR     a2, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     a2, ip, a2
        STR     a1, [a2, #16]
        CMPS    a1, #0
        BNE     |L000194.J14.main_initialise|
        ADD     a2, pc, #L00018c-.-8
        B       |L000244.J37.main_initialise|
L00018c
        DCB     &4e,&6f,&4d,&65
        DCB     &6d,&00,&00,&00
|L000194.J14.main_initialise|
        LDR     a1, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        LDR     a3, [a1, #16]
        MOV     a2, v2
        MOV     a1, v5
        BL      xmessagetrans_open_file
        MOVS    v1, a1
        BNE     |L000250.J6.main_initialise|
        MOV     v4, #1
        LDR     a1, [pc, #L0002c8-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        MOV     a2, #6
        BL      Create_List
        LDR     a2, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     a2, ip, a2
        STR     a1, [a2, #212]
        CMPS    a1, #0
        BEQ     |L000240.J20.main_initialise|
        LDR     a1, [pc, #L0002cc-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        MOV     a2, #11
        BL      Create_List
        LDR     a2, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     a2, ip, a2
        STR     a1, [a2, #216]
        CMPS    a1, #0
        BEQ     |L000240.J20.main_initialise|
        LDR     a1, [pc, #L0002d0-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        MOV     a2, #4
        BL      Create_List
        LDR     a2, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     a2, ip, a2
        STR     a1, [a2, #220]
        CMPS    a1, #0
        BNE     |L000250.J6.main_initialise|
|L000240.J20.main_initialise|
        SUB     a2, pc, #.+8-L00018c
|L000244.J37.main_initialise|
        MOV     a1, #1
        BL      main_error_lookup
        MOV     v1, a1
|L000250.J6.main_initialise|
        CMPS    v1, #0
        BEQ     |L0002c0.J26.main_initialise|
        LDR     v2, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     v2, ip, v2
        LDR     a1, [v2, #220]
        BL      callback_delete
        LDR     a1, [v2, #216]
        BL      callback_delete
        LDR     a1, [v2, #212]
        BL      callback_delete
        CMPS    v4, #0
        BEQ     |L000294.J27.main_initialise|
        MOV     a1, v5
        BL      xmessagetrans_close_file
        CMPS    v1, #0
        MOVEQ   v1, a1
|L000294.J27.main_initialise|
        LDR     a1, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        LDR     a1, [a1, #16]
        BL      free
        CMPS    v3, #0
        BEQ     |L0002c0.J26.main_initialise|
        BL      files_messages
        BL      xresourcefs_deregister_files
        CMPS    v1, #0
        MOVEQ   v1, a1
|L0002c0.J26.main_initialise|
        MOV     a1, v1
        LDMEA   fp, {v1,v2,v3,v4,v5,v6,fp,sp,pc}^
L0002c8
        DCD     |x$dataseg|+&14
L0002cc
        DCD     |x$dataseg|+&44
L0002d0
        DCD     |x$dataseg|+&9c

        EXPORT  main_terminate
main_terminate
        MOV     ip, sp
        STMFD   sp!, {v1,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        LDR     v1, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     v1, ip, v1
        LDR     a1, [v1, #220]
        BL      callback_delete
        LDR     a1, [v1, #216]
        BL      callback_delete
        LDR     a1, [v1, #212]
        BL      callback_delete
        LDR     a1, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        BL      xmessagetrans_close_file
        LDR     a1, [v1, #16]
        BL      free
        BL      files_messages
        BL      xresourcefs_deregister_files
        MOV     a1, #0
        LDMEA   fp, {v1,fp,sp,pc}^

        IMPORT  verify_diagram
        IMPORT  declare
        IMPORT  render
        IMPORT  bbox
        EXPORT  main_swi
main_swi
        MOV     ip, sp
        STMFD   sp!, {v1,v2,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v2, a1
        MOV     v1, a2
        LDMED   v1, {a1,a2}
        BL      verify_diagram
        CMPS    a1, #0
        LDMNEEA fp, {v1,v2,fp,sp,pc}^
        LDR     a1, [pc, #L000394-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        CMPS    v2, #0
        BEQ     |L000398.J11.main_swi|
        CMPS    v2, #1
        BEQ     |L0003c4.J10.main_swi|
        CMPS    v2, #2
        BNE     |L0003ec.J8.main_swi|
        LDMFD   v1, {a1,a2,a3}
        BL      declare
        CMPS    a1, #0
        LDMEA   fp, {v1,v2,fp,sp,pc}^
L000394
        DCD     |x$dataseg|+&bc
|L000398.J11.main_swi|
        ADD     a4, v1, #16
        LDMFD   a4, {a3,a4}
        STMFD   sp!, {a3,a4}
        LDR     a2, [v1, #12]
        CMPS    a2, #0
        MOVEQ   a4, a1
        MOVNE   a4, a2
        LDMFD   v1, {a1,a2,a3}
        BL      render
        CMPS    a1, #0
        LDMEA   fp, {v1,v2,fp,sp,pc}^
|L0003c4.J10.main_swi|
        LDR     a4, [v1, #16]
        STMFD   sp!, {a4}
        LDR     a2, [v1, #12]
        CMPS    a2, #0
        MOVEQ   a4, a1
        MOVNE   a4, a2
        LDMFD   v1, {a1,a2,a3}
        BL      bbox
        CMPS    a1, #0
        LDMEA   fp, {v1,v2,fp,sp,pc}^
|L0003ec.J8.main_swi|
        ADD     a3, pc, #L000400-.-8
        ADD     a2, pc, #L00040c-.-8
        MOV     a1, #488
        LDMEA   fp, {v1,v2,fp,sp,lr}
        B       main_error_lookup
L000400
        DCB     &44,&72,&61,&77
        DCB     &46,&69,&6c,&65
        DCB     &00,&00,&00,&00
L00040c
        DCB     &42,&61,&64,&53
        DCB     &77,&69,&00,&00

        EXPORT  main_service
main_service
        MOV     ip, sp
        STMFD   sp!, {v1,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v1, a2
        CMPS    a1, #96
        BNE     |L000450.J4.main_service|
        BL      files_messages
        ADD     a4, v1, #8
        LDMFD   a4, {a3,a4}
        MOV     ip, a3
        LDR     a2, [v1, #4]
        MOV     lr, pc
        MOV     pc, ip
|L000450.J4.main_service|
        MOV     a1, #0
        LDMEA   fp, {v1,fp,sp,pc}^

        IMPORT  |x$stack_overflow_1|
        IMPORT  xos_read_args
        IMPORT  xosfile_read_no_path
        IMPORT  xosfile_make_error
        IMPORT  riscos_scan_fixed
        IMPORT  xosfile_load_stamped_no_path
        EXPORT  main_command
main_command
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,v5,v6,fp,ip,lr,pc}
        SUB     fp, ip, #4
        SUB     ip, sp, #1168
        CMPS    ip, sl
        BLLT    |x$stack_overflow_1|
        MOV     v3, #0
        MOV     v1, v3
        CMPS    a3, #0
        BNE     |L0006c8.J4.main_command|
        SUB     sp, sp, #76
        SUB     sp, sp, #1024
        MOV     v2, v3
        MOV     a4, #0
        STMFD   sp!, {a4}
        ADD     a3, sp, #16
        MOV     a2, a1
        ADD     a1, pc, #L0004fc-.-8
        MOV     a4, #40
        ADD     a4, a4, #1024
        BL      xos_read_args
        ADD     sp, sp, #4
        MOVS    v1, a1
        BNE     |L0006b8.J9.main_command|
        MOV     a4, #0
        ADD     a3, sp, #4
        STMFD   sp!, {a3,a4}
        ADD     a2, sp, #16
        LDR     a1, [sp, #20]
        MOV     a4, #0
        MOV     a3, #0
        BL      xosfile_read_no_path
        ADD     sp, sp, #8
        MOVS    v1, a1
        BNE     |L0006b8.J9.main_command|
        LDR     a2, [sp, #8]
        CMPS    a2, #1
        BEQ     |L000538.J12.main_command|
        LDR     a1, [sp, #12]
        BL      xosfile_make_error
        B       |L000604.J47.main_command|
L0004fc
        DCB     &66,&69,&6c,&65
        DCB     &2f,&61,&2c,&6d
        DCB     &30,&30,&2c,&6d
        DCB     &30,&31,&2c,&6d
        DCB     &31,&30,&2c,&6d
        DCB     &31,&31,&2c,&6d
        DCB     &32,&30,&2c,&6d
        DCB     &32,&31,&2c,&62
        DCB     &62,&6f,&78,&2f
        DCB     &73,&2c,&73,&75
        DCB     &70,&70,&72,&65
        DCB     &73,&73,&2f,&73
        DCB     &2c,&66,&6c,&61
        DCB     &74,&6e,&65,&73
        DCB     &73,&2f,&6b,&00
|L000538.J12.main_command|
        MOV     v1, v3
        ADD     v4, sp, #16
        LDR     v6, [pc, #L00060c-.-8]
        LDR     ip, [sl, #0]
        ADD     v6, ip, v6
        LDR     v5, [pc, #L000394-.-8]
        LDR     ip, [sl, #0]
        ADD     v5, ip, v5
|L000558.J14.main_command|
        MOV     v2, v3
|L00055c.J15.main_command|
        ADD     a1, v4, v2, ASL #3
        LDR     a1, [a1, v1, ASL #2]
        CMPS    a1, #0
        BEQ     |L000590.J17.main_command|
        ADD     a2, v6, v2, ASL #3
        LDR     a3, [a2, v1, ASL #2]
        ADD     a2, sp, #52
        ADD     a2, a2, #1024
        ADD     a2, a2, v2, ASL #3
        ADD     a2, a2, v1, ASL #2
        BL      riscos_scan_fixed
        CMPS    a1, #0
        BNE     |L0005a8.J16.main_command|
|L000590.J17.main_command|
        ADD     a1, v5, v2, ASL #3
        LDR     a1, [a1, v1, ASL #2]
        ADD     a2, sp, #52
        ADD     a2, a2, #1024
        ADD     a2, a2, v2, ASL #3
        STR     a1, [a2, v1, ASL #2]
|L0005a8.J16.main_command|
        ADD     v2, v2, #1
        CMPS    v2, #3
        BLT     |L00055c.J15.main_command|
        ADD     v1, v1, #1
        CMPS    v1, #2
        BLT     |L000558.J14.main_command|
        LDR     a1, [sp, #48]
        CMPS    a1, #0
        BEQ     |L0005e0.J23.main_command|
        MOV     a2, sp
        MOV     a3, #256
        BL      riscos_scan_fixed
        CMPS    a1, #0
        BNE     |L0005e8.J22.main_command|
|L0005e0.J23.main_command|
        MVN     a1, #0
        STR     a1, [sp, #0]
|L0005e8.J22.main_command|
        LDR     a1, [sp, #4]
        BL      malloc
        MOVS    v2, a1
        BNE     |L000618.J26.main_command|
        ADD     a2, pc, #L000610-.-8
        MOV     a1, #49
        BL      main_error_lookup
|L000604.J47.main_command|
        MOV     v1, a1
        B       |L0006b8.J9.main_command|
L00060c
        DCD     |x$dataseg|+&e0
L000610
        DCB     &4e,&6f,&4d,&65
        DCB     &6d,&00,&00,&00
|L000618.J26.main_command|
        MOV     a4, #0
        MOV     a3, #0
        MOV     a2, #0
        STMFD   sp!, {a2,a3,a4}
        MOV     a2, v2
        LDR     a1, [sp, #24]
        MOV     a4, #0
        MOV     a3, #0
        BL      xosfile_load_stamped_no_path
        ADD     sp, sp, #12
        MOVS    v1, a1
        BNE     |L0006b8.J9.main_command|
        LDR     a2, [sp, #4]
        MOV     a1, v2
        BL      verify_diagram
        MOVS    v1, a1
        BNE     |L0006b8.J9.main_command|
        LDR     a1, [sp, #0]
        MOV     a4, a1
        MOV     a3, #0
        STMFD   sp!, {a3,a4}
        LDR     a2, [sp, #48]
        CMPS    a2, #0
        MOVEQ   a2, v3
        MOVNE   a2, #1
        LDR     a3, [sp, #52]
        CMPS    a3, #0
        MOVEQ   a3, v3
        MOVNE   a3, #2
        ORR     a2, a2, a3
        CMNS    a1, #1
        MOVNE   v3, #4
        ORR     a1, a2, v3
        ADD     a4, sp, #60
        ADD     a4, a4, #1024
        LDR     a3, [sp, #12]
        MOV     a2, v2
        BL      render
        ADD     sp, sp, #8
        MOVS    v1, a1
|L0006b8.J9.main_command|
        MOV     a1, v2
        BL      free
        ADD     sp, sp, #76
        ADD     sp, sp, #1024
|L0006c8.J4.main_command|
        MOV     a1, v1
        LDMEA   fp, {v1,v2,v3,v4,v5,v6,fp,sp,pc}^

        IMPORT  strcpy
        IMPORT  xmessagetrans_error_lookup
main_error_lookup
        MOV     ip, sp
        STMFD   sp!, {a1,a2,a3,a4}
        STMFD   sp!, {fp,ip,lr,pc}
        SUB     fp, ip, #20
        SUB     ip, sp, #300
        CMPS    ip, sl
        BLLT    |x$stack_overflow_1|
        SUB     sp, sp, #276
        ADD     a1, fp, #12
        STR     a1, [sp, #272]
        MOV     a1, #0
|L0006fc.J4.main_error_lookup|
        LDR     a2, [sp, #272]
        ADD     a2, a2, #3
        BIC     a2, a2, #3
        ADD     a2, a2, #4
        STR     a2, [sp, #272]
        LDR     a3, [a2, #-4]
        ADD     a2, sp, #256
        STR     a3, [a2, a1, ASL #2]
        ADD     a1, a1, #1
        CMPS    a1, #4
        BLT     |L0006fc.J4.main_error_lookup|
        MVN     a1, #255
        STR     a1, [sp, #272]
        LDR     a1, [fp, #4]
        STR     a1, [sp, #0]
        ADD     a1, sp, #4
        LDR     a2, [fp, #8]
        BL      strcpy
        ADD     a4, sp, #256
        LDMFD   a4, {a1,a2,a3,a4}
        STMFD   sp!, {a1,a2,a3,a4}
        LDR     a2, [pc, #L000114-.-8]
        LDR     ip, [sl, #0]
        ADD     a2, ip, a2
        ADD     a1, sp, #16
        MOV     a4, #0
        MOV     a3, #0
        BL      xmessagetrans_error_lookup
        LDMEA   fp, {fp,sp,pc}^

        AREA |C$$data|

|x$dataseg|

Control_Block
        %       16

Message_Data
        DCD     &00000000

Verification_Table
        DCD     &00000000
        IMPORT  verify_font_table
        DCD     verify_font_table+0
        DCD     &00000006
        IMPORT  verify_group
        DCD     verify_group+0
        DCD     &00000001
        IMPORT  verify_text
        DCD     verify_text+0
        DCD     &00000007
        IMPORT  verify_tagged
        DCD     verify_tagged+0
        DCD     &00000006
        DCD     verify_group+0
        DCD     &0000000c
        IMPORT  verify_trfm_text
        DCD     verify_trfm_text+0

Rendering_Table
        DCD     &00000000
        IMPORT  render_font_table
        DCD     render_font_table+0
        DCD     &00000001
        IMPORT  render_text
        DCD     render_text+0
        DCD     &00000001
        IMPORT  render_text_system
        DCD     render_text_system+0
        DCD     &00000002
        IMPORT  render_path
        DCD     render_path+0
        DCD     &00000005
        IMPORT  render_sprite
        DCD     render_sprite+0
        DCD     &00000006
        IMPORT  render_group
        DCD     render_group+0
        DCD     &00000007
        IMPORT  render_tagged
        DCD     render_tagged+0
        DCD     &00000009
        IMPORT  render_text_area
        DCD     render_text_area+0
        DCD     &0000000c
        IMPORT  render_trfm_text
        DCD     render_trfm_text+0
        DCD     &0000000c
        IMPORT  render_trfm_text_system
        DCD     render_trfm_text_system+0
        DCD     &0000000d
        IMPORT  render_trfm_sprite
        DCD     render_trfm_sprite+0

Declaration_Table
        DCD     &00000000
        IMPORT  declare_font_table
        DCD     declare_font_table+0
        DCD     &00000006
        IMPORT  declare_group
        DCD     declare_group+0
        DCD     &00000007
        IMPORT  declare_tagged
        DCD     declare_tagged+0
        DCD     &00000009
        IMPORT  declare_text_area
        DCD     declare_text_area+0

Identity
        DCD     &00010000
        DCD     &00000000
        DCD     &00000000
        DCD     &00010000
        DCD     &00000000
        DCD     &00000000

        EXPORT  main_verification_callback
main_verification_callback
        DCD     &00000000

        EXPORT  main_render_callback
main_render_callback
        DCD     &00000000

        EXPORT  main_declaration_callback
main_declaration_callback
        DCD     &00000000
        DCD     &00010000
        DCD     &00010000
        DCD     &00010000
        DCD     &00010000
        DCD     &00000100
        DCD     &00000100

        END
