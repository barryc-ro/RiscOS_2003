; Hdr.GrubbyWS

; This file contains the addresses of all the grubby locations that aren't
; publicly exported, but which the Interlace module uses anyway!

; The following are offsets in VDU driver workspace - if any of these change on
; future versions of RISC OS, then this module won't work properly and may crash
; the machine!

PalIndex		*	&00B4
ModeFlags		*	&0094
VduStatus		*	&0148
ScreenStart		*	&00C0
DisplayStart		*	&0178
DisplayBankAddr		*	&0180
DriverBankAddr		*	&017C
DisplayScreenStart	*	&0190
DisplayYWindLimit	*	&0198
DisplayYEigFactor	*	&01A0
YEigFactor		*	&009C

LineLength		*	&0088	; The following are only needed in mode descriptor variant
ScreenSize		*	&007C
RowLength		*	&00DC
CursorStartOffset	*	&015C
CursorEndOffset		*	&0160
SavedCursorStartOffset	*	&2EA4	; CursorStartOffset in kernel's save area
SavedCursorEndOffset	*	&2EA8	; CursorEndOffset   ---------""----------
CursorFlags		*	&01F0
CursorX			*	&0128
CursorY			*	&012C
CursorAddr		*	&0130
InputCursorX		*	&0134
InputCursorY		*	&0138
InputCursorAddr		*	&013C
Log2BPC			*	&00A0
DisplayModeFlags	*	&0188

; Bits in CursorFlags

CursorsSplit		*	1 :SHL: 18

; We assume it is safe to allocate an area at this logical address
; This may not be a valid assumption if lots of dynamic areas have been created, or
; if the machine has a lot of physical memory.

DummyScreen 		*   	&A0000000

; We assume that the logical address of the L1 page table is at this address.

L1PT    		*       &02C0C000

; The following is an address in RISC OS's interrupt despatch table, which holds the current
; workspace and code addresses for the current owner of the VSync device

; This in fact has already moved on ARM7500 versions of RISC OS.
; JRH: It's moved again on ARM7500 systems which have support for the IRQC register

VSyncDeviceWS 		* 	&01F01844
VSyncDeviceWS7500 	* 	&01F017E8
VSyncDeviceWSwIRQC 	* 	&01F01664

; The following is a location in VDU driver workspace which holds the soft copy of the
; VIDC20 Control Register. This is used so we can modify the Interlace bit in this register.

ControlRegisterSoftCopy * 	&1584

	END
