	GET	Desk.sh.FnNames

	AREA	|C$code|, CODE, READONLY

	MACRO
	Convert3BitCol	$reg, $offset, $tableoffset
	; Converts the 5-bit colour at bits { $offset, $offset+1, ..., $offset+4} within $reg.

	IF $offset=0
	AND	r14, $reg, #31
	ELSE
	MOV	r14, $reg, LSR #$offset
	AND	r14, r14, #31
	ENDIF

	ADD	r14, a3, r14, LSL #2
	LDR	r14, [r14, #$tableoffset]
	;LDR	r14, [a3, r14, LSL #2]


	ORR	r12, r12, r14, LSL #$offset
	MEND


	MACRO
	ConvertReg	$reg
	MOV	r12, #0
	Convert3BitCol	$reg,  0, 0*32*4
	Convert3BitCol	$reg,  5, 1*32*4
	Convert3BitCol	$reg, 10, 2*32*4
	Convert3BitCol	$reg, 16, 0*32*4
	Convert3BitCol	$reg, 21, 1*32*4
	Convert3BitCol	$reg, 26, 2*32*4
	MOV	$reg, r12
	MEND

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:APCS.<APCS>


	; On entry:
	;	r0=a1 is start address.
	;	r1=a2 is end address
	;	r2=a3 is convertions (6*32 entries, one set for each 5 bit part of word)
	;	r3=a4 is target colour.

	Desk_ASMacros_EXTERNALFUNCTION	DrawLine_16bpp

	FunctionEntry "v1-v6,r10,r11"

	;
loopstart
	LDMFD	r0, { r4-r11}

	; Now convert each of r4-r11
	ConvertReg	r4
	ConvertReg	r5
	ConvertReg	r6
	ConvertReg	r7
	ConvertReg	r8
	ConvertReg	r9
	ConvertReg	r10
	ConvertReg	r11

	STMEA	a1!, { r4-r11}

	CMP	a1, a2
	BLT	loopstart

	Return  "v1-v6,r10,r11"

	END

