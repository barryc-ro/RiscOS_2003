Introduction
============

This file is intended for Acorn's internal use and details the steps that
have been, are and will be necessary to amend the Font Manager to cope with
16-bit fonts.
	Font Manager internals, as a whole, are not described beyond the
scope of adapting the old 8-bit module to cope with the demands of 16-bit
character representation.

The format of this file is free; it will supply relevant file overviews,
a diary of progress and engineering-specific items. No claim is made
for completeness and if the reader wishes to pursue a particular line
of enquiry that this document cannot satisfy, it is recommended that he/she
contact Richard Browning, Neil Raine, John Redford or Sophie Wilson who may
be able to supply more information.


Font Manager File Descriptions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Fonts02: PaintChar (see notes)
Fonts04: DrawChar (see notes)


Font Manager Notes
~~~~~~~~~~~~~~~~~~



1/11/96:

Discovered Paintchar and Drawchar which seem to be the most relevant calls
for rendering characters. Paintchar draws fonts from bitmaps. Drawchar draws
fonts from outlines.


5/11/96:

Meeting between Neil Raine and Richard Browning -
	Determined that Paintchar is of little import. Also, if hints are not
required or not supplied, Drawchar and associated routines are also of little
consequence. If hints do become necessary, it would be worthwhile reexamining
this code.
	It was therefore concluded that simply modifying the outline cache
routine to accept input from the relevant Bitstream function would be
appropriate, perhaps in a callback fashion. Amendments to core Bitstream
modules may become necessary.


20/11/96:

Rearranged the module source so that the user can conditionally create the
module either to partner an active Font Manager module (ie the module created
has a different SWI base and Font_ calls are now Font16_) or to replace it
(ie the module created has the original SWI base and calls are Font_).


15/1/97:

Secured the chunking code to accept 16-bit font files. Not long now...
setleafnames_R6


Font Manager Coding Issues
~~~~~~~~~~~~~~~~~~~~~~~~~~

Logical flow for printing characters
====================================

Font_Paint
	paintchars
		paintchar
	

SetPixelsPtr
------------
ensureheaders_untransformed
	GetPixels4Header
		openpixels_R2R7	} Set full name of font
		getnewheader	} Loads header from file
setpixelsptr (-> setpixelsptr2)
	CachePixels
		CacheChunk
			( cache_fromoutlines_direct
				cacheoutlines
					getoutlinesinfo
					loadoutlinechunk
						setoutlineptr
							readnewchunk
								openpixels_R2R7	
			( cache_newchunk
				readnewchunk
					openpixels_R2R7




Amended and Added Font Manager SWIs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Font_Paint
Font_ScanString
Font_FindFont
Font_WideFormat

Bitstream module
~~~~~~~~~~~~~~~~
Currently supported SWIs:
WFR_GetFunctionTable
WFR_CspInitBitmapCache
WFR_CspSetCacheParams
WFR_CspOpen
WFR_CspOpenAlt1
WFR_CspSetPfr


DefineFont
	MakePathName
		getpathnamefromID