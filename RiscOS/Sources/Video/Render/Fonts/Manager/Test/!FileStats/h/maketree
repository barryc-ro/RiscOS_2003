/* > h.maketree
 */


typedef struct node
{
  int value, frequency;
  struct node *left, *right;
} node;


typedef struct heapstr
{
  int nitems;
  node **array, **ptr;
} heapstr;


extern node * maketree(int n, int *frequencies);
extern void initheap(heapstr *heapp, int n, int *frequencies);
extern void sortheap(heapstr *heapp);
extern int mycompare(const void *item1, const void *item2);
extern void addheap(heapstr *heapp, node *newitem);
extern node * removeheap(heapstr *heapp);
extern void freeheap(heapstr *heapp);
extern node * newnode(int value, int frequency, node *left, node *right);
extern void error(char *str);

