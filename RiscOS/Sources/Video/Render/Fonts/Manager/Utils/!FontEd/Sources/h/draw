/*  Title: > h.draw
 */

#define MAXPATH 1024
#define MAXPATH2 (MAXPATH * 4)

typedef enum
{
  DRAW_TERM = 0,          /* end of path */
  DRAW_MOVE = 2,          /* moveto x,y */
  DRAW_CLOS = 5,          /* closepath */
  DRAW_CURV = 6,          /* curveto x1,y1, x2,y2, x3,y3 */
  DRAW_LINE = 8           /* lineto x,y */
} drawelement;

#if 0
#define Draw_ProcessPath     0x40700
#define Draw_ProcessPathFP   0x40701
#define Draw_Fill            0x40702
#define Draw_FillFP          0x40703
#define Draw_Stroke          0x40704
#define Draw_StrokeFP        0x40705
#define Draw_StrokePath      0x40706
#define Draw_StrokePathFP    0x40707
#define Draw_FlattenPath     0x40708
#define Draw_FlattenPathFP   0x40709
#define Draw_TransformPath   0x4070A
#define Draw_TransformPathFP 0x4070B
#endif

extern int *buildoutptr;     /* used on return from buildpath */
extern int xscale, yscale;   /* global parameters to buildpath */

#define initsize(array) { array[0] = DRAW_TERM; array[1] = sizeof(array) - 2*sizeof(int); }
os_error * buildpath(Char_Block *charptr, int *fillpath, int *strokepath, BOOL doscaffold);
os_error * buildp(Char_Block *charptr,
                  int **fillpp, int **strokepp,
                  scaffoldstr *scaffold, int xoffset, int yoffset);

os_error *drawfill(int *path, int *matrix, int flatness);
os_error *drawfill_winding(int *path, int *matrix, int flatness);
os_error *drawstroke(int *path, int *matrix, int flatness);
os_error *moveto(Pt_Block *,scaffoldstr *);
os_error *lineto(Pt_Block *,scaffoldstr *);
os_error *curveto(Pt_Block *,Pt_Block *,Pt_Block *,scaffoldstr *);
os_error *closepath(void);
void endpath(void);
void bezier(int,int,int,int,int,int,int,int);

int scaleptx(Pt_Block *,scaffoldstr *);
int scalepty(Pt_Block *,scaffoldstr *);
