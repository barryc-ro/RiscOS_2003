/*  Title: > h.loadsave
 */

extern BOOL heaptrace;


/* ---- functions --------------------------------------------------------- */


os_error * scanloading(BOOL *foundany, int bpp);

os_error * loadfile(Font_Block *font, const char *filename, int estsize);
os_error * loadfile2(Font_Block *font, const char *filename, int estsize);

os_error * loadfiledata(const char *filename, Font_Block *font, FFile_FontHdr **filepp);
os_error * grungefiledata(FFile_FontHdr **filepp);
os_error * deletefont(Font_Block * font);

os_error * findmetrics(Font_Block *font, char *outbuffer, int size);
os_error * findoutlines(Font_Block *font, char *outbuffer, int size);
os_error * findleaf(Font_Block *font, char *outbuffer, int size, const char *leafname);
os_error * findfontdir(Font_Block *font, char *outbuffer, int size);
os_error * loadscaffold(Font_Block *font);
os_error * findbasefile(Font_Block *font);
os_error * losebasefile(Font_Block *font);
os_error * loadchar(Char_Block *charptr);
os_error * unsuspendpathdata(Char_Block *charptr);
os_error * reloadchar(Char_Block *charptr);
int getcharheader(Char_Block * charptr);

os_error * savechar(Char_Block *charptr);
os_error * savechardata(Char_Block *charptr,char * newdata,int newsize);

void outpoint(Pt_Block *pt);
int charaddr(Font_Block * font, int charno);
BOOL inbasefile(Font_Block *font, int ch);
os_error * alter_inheritance(Font_Block *font, int chunk);
void abortf(Font_Block *);

os_error * newpt(pt_type,int,int,Path_Block *,Pt_Block **);

#define getheap(type,ptr) heapalloc(sizeof(type),(void **)ptr)
os_error * heapalloc(int,void **);

void debugfont(Font_Block *);
void debugchar(Char_Block *, char *);
void restorescreen(void);

os_error * savefilechk(Font_Block *fontptr, const char *filename, int estsize);
os_error * savefile(Font_Block *fontptr, const char *filename, int estsize);
os_error * savescaffold(Font_Block *font);

os_error * savefilechk2(Font_Block *fontptr, const char *filename, int estsize);
os_error * savefile2(Font_Block *fontptr, const char *filename, int estsize);

os_error * changetitle(Font_Block *font, int tablesize, const char *title1, const char *title2);
os_error * changenchunks(FFile_FontHdr **filepp, int numchunks);
os_error * changenchars(Font_Block *font, int nchars);

#define chunkoffset(f,i) *chunkoffptr(f,i)
int * chunkoffptr(FFile_FontHdr *f, int i);
int nchunks(FFile_FontHdr *f);

os_error *myflex_alloc(flex_ptr p, int size);
os_error *myflex_midextend(char *debug, flex_ptr p, int offset, int amount);
