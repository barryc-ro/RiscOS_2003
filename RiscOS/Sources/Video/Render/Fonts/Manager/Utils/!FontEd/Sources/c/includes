/* > c.includes
 *
 * File of stuff which should be in RISC_OSLib
 *
 * History:
 *
 * 16-Dec-89: NDR: Created.
 * 16-Dec-89: NDR: Transformed sprite stuff added.
 * 20-Feb-90: NDR: Transformed sprite stuff removed.
 * 21-Feb-90: NDR: Transformed sprite stuff added again (RISC_OSLib compatible)
 *
 */

#include "h.includes"

/* ---- ensure we have a large initial stack chunk ------------------------------- */

int __root_stack_size = 48*1024;


/* ---- additions that should go in RISC_OSLib ----------------------------------- */

/* c.sprite */

#if 0

static void setfromtag(int op, sprite_area *area, sprite_id *spr, os_regset *r)
{
  if (area == sprite_mainarea)
  {
    r->r[0] = op;
 /* r->r[1] unused */
  }
  else
  {
    r->r[1] = (int) area;
    if ((spr->tag) == sprite_id_addr)
    {
      r->r[0] = 512 + op;
      r->r[2] = (int) (spr->s.addr);
    }
    else
    {
      r->r[0] = 256 + op;
      r->r[2] = (int) (spr->s.name);
    }
  }
}


#define PutSpriteTransformed  56

static os_error * sprite__op(os_regset *r)
{
  return os_swix(OS_SpriteOp, r);
}


os_error
  *sprite_put_pgm
  (sprite_area *area, sprite_id *id, int gcol_action, sprite_box *box,
    sprite_pgm *pgm, sprite_pixtrans *pix_trans)
{ os_regset reg_set;
  setfromtag (PutSpriteTransformed, area, id, &reg_set);
  reg_set.r [3] = (box == NULL? 0: 1 << 1) | (1 << 0);
  reg_set.r [4] = (int) box;
  reg_set.r [5] = gcol_action;
  reg_set.r [6] = (int) pgm;
  reg_set.r [7] = (int) pix_trans;
  return sprite__op (&reg_set);
}

#endif


/* c.wimp */

os_error * wimp_taskinnit(char *name, int *version, wimp_t *t)
{
os_regset r;
os_error *e;

r.r[0] = *version;
r.r[1] = 'T' +
        ('A' << 8) +
        ('S' << 16) +
        ('K' << 24);
r.r[2] = (int) name;
e = os_swix(Wimp_Initialise, &r);
*version = r.r[0];
*t =  r.r[1];
return(e);
}

