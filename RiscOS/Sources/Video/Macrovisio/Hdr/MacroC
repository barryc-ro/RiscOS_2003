; > Hdr.MacroC

; Variant for STB2/2 ie MPEG 2

; ProvideSWI flag:
;
; When true, the module provides a SWI to switch between the three states:
;  a) Normal video path
;  b) Macrovision video path, no anti-taping
;  c) Macrovision video path, anti-taping
; for both PAL and NTSC.
; Note that the switch doesn't take effect until the next mode change.
;
; When false, the module relies on detecting entry into certain numbered screen modes to
; switch into states b) and c), otherwise it selects state a).

		GBLL	ProvideSWI
ProvideSWI	SETL	{TRUE}

; ExternalSyncGenerator flag:
;
; When true, this implies that in state a) the video syncs are provided by an external
; sync generator, so the RCV1 and RCV2 outputs should be disabled.

; When false, there is no external sync generator, so the SAA7183 always generates the syncs.
; In this case, the SAA7183 registers should be programmed the same for both states a) and b)
; - the only difference being that in state a) the TDA8540 is programmed to select the VIDC
; analogue RGB (overlaid on the MPEG video via ED0).
;
		GBLL	ExternalSyncGenerator
ExternalSyncGenerator SETL {FALSE}

; ProgramCTRL1 flag:
;
; When true, the module issues an MPEGVideo_CardControl(2) SWI to set the state of the
; signal CTRL1 on the SCART connector, so as to select:
;	RGB when in normal mode, and
;	CVBS when in Macrovision mode
;
; When false, the module does not issue this SWI

		GBLL	ProgramCTRL1
ProgramCTRL1	SETL	{TRUE}

; ForceMacroVideoPath flag:
;
; When true, the Macrovision video path is always selected. This is necessary for podules without daughter cards,
; as the non-Macrovision video path cannot provide syncs.
;
; When false, the video path is selected as appropriate for the mode selected

		GBLL	ForceMacroVideoPath
ForceMacroVideoPath SETL {FALSE}

; FMT16: 0 => select format CbYCrY on eight lines on MP port (CCIR656 compatible)
;	 1 => select format CbCr on DP port and Y on MP port

FMT16		*	0		; 8-bit on MPEG 2 hardware

; UV2C: 0 => Cb/Cr data are two's complement
;	1 => Cb/Cr data are straight binary

UV2C		*	0		; 2's complement on MPEG 2 hardware

; PRCV2: 0 => RCV2 is active high (when output)
;        1 => RCV2 is active low (when output)

PRCV2		*	1		; active low until we suss out the positioning on STB2/2 itself

; SRCV1: 2_00 => output VSYNC on RCV1
;	 2_01 => output odd/even on RCV1
;	 2_10 => output field sequence on RCV1

SRCV1		*	2_01		; output odd/even

; RCV2S: controls timing of start of HSYNC output pulse to VIDC, L64002 wrt sync pulse
; RCV2E: controls timing of end of same pulse

RCV2S		*	0	; start RCV2 on Hsync
RCV2E		*	1	; for central positioning of MPEG

; RCV2SN adjusts RCV2S in non-Macrovision mode. This moves the picture right more
		GBLA	RCV2SN
RCV2SN		SETA	16

; RCV2EN adjusts RCV2E in non-macrovision mode.  This moves the picture right more.
		GBLA	RCV2EN
RCV2EN		SETA	57	; Adjustment for non-macrovision modes

; AntiTaping_DOWNB: when 0, RGB DACs are enabled in anti-taping mode;
;		    when 1, RGB DACs are disabled in anti-taping mode;

AntiTaping_DOWNB *	1	; disable RGB DACs, to prevent avoidance of anti-taping

; MacroRGB_Off:  Should we disable the RGB DACs on the macrovision chip and
;   VIDC when the macrovision path is selected?
		GBLL	MacroRGB_Off
MacroRGB_Off	SETL	{FALSE}

; Have_Double_TDA: Some boards have 2 TDA chips.
		GBLL	Have_Double_TDA
Have_Double_TDA	SETL	{FALSE}

; Captions: Should we allow closed captions to be encoded in the NTSC macrovision path?
                GBLL    Captions
Captions        SETL    {TRUE} :LAND: ProvideSWI

; BINV_Var:  Should we configure burst-inversion using a system variable?
		GBLL	BINV_Var
BINV_Var	SETL	{FALSE}

; NewColourScheme:  Support the new universal logical colour/supremacy scheme, as in Baseline 400?
                GBLL    NewColourScheme
NewColourScheme SETL    {TRUE}  ; hey, why not, even though Baseline 400 doesn't support STB-22

		GET	Hdr.GetAll

                LNK     s.Module
