//main test loop

#include <stdio.h>
#include <stdlib.h>
#include <swis.h>
#include <string.h>
#include "serial_lib.h"
#include "serial.h"
#include "timer.h"
#include "command.h"
#include "debug.h"
#include "support.h"
#include "MPEG.h"
#include "IR.h"
#include "kernel.h"

//Globals
int instream=0;
int outstream=0;
int debug=0;

void do_exit(void)
{
  close_streams();
}

int main(void)
{

  atexit(do_exit);

  if (!initialise_serial())
  {
    printf("TestTask unable to open serial stream\n");
    return(1);
  }


//The initial handshake is now done by the pretest utility
//this is done because running a 'C' prog before box has booted
//from a server messes up the error handling

//if we got this far we must have an s-tester on the end

//need to initialise CheckURL here
//This is used by VideoCtrl on STBs to parse RTSP URLs
//remove from non STB builds

CheckURLinit();


  _kernel_oscli("STBStateOn");   //enables IR micro

  //Now kill the STBstate module to disable the standby button!
  _kernel_oscli("RMKill STBState");

 do
 {
  //get command always returns 1 unless we want to break
  //out of the main loop
  if(data_waiting(instream))
   if (!get_command()) break;
  //check the status of a video if one if running
  playMPEG(NULL,1);
  //echos IR data if enabled
  IR(NULL,NULL);
 }
 while(1);

 return (1);
}
