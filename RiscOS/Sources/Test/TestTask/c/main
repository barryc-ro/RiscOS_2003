//main test loop

#include <stdio.h>
#include <stdlib.h>
#include <swis.h>
#include <string.h>
#include "serial_lib.h"
#include "serial.h"
#include "timer.h"
#include "command.h"
#include "debug.h"
#include "support.h"
#include "MPEG.h"
#include "IR.h"

//Globals
int instream=0;
int outstream=0;
int debug=0;

void do_exit(void)
{
  close_streams();
}

int main(void)
{
  int num_chars;
  long timer;
  //the response from S-Tester to initial 'AT'
  char response[8];
  //the expected response from the initial 'AT'
  char *expected="\xFF\xAETest\xAF\xFF";

  atexit(do_exit);

  if (!initialise_serial())
  {
    printf("TestTask unable to open serial stream\n");
    return(1);
  }

 //we send an 'AT' command on startup to tell S-Tester we
 //have started
 serial_write_str(outstream,"AT");

 //look for a response
 num_chars=0;
 timer_reset(&timer);

 do
 {
 if (data_waiting(instream))
   response[num_chars++]=serial_read_byte(instream);
 }
 while (timer_read(&timer) < 10 && num_chars<8);

 response[num_chars++]='\0';

 //exit if we got the wrong response
 if(strcmp(response,expected))
   return(1);


 //if we got this far we must have an s-tester on the end

 do
 {
  //get command always returns 1 unless we want to break
  //out of the main loop
  if(data_waiting(instream))
   if (!get_command()) break;
  //check the status of a video if one if running
  playMPEG(NULL,1);
  //echos IR data if enabled
  IR(NULL,NULL);
 }
 while(1);

 return (1);
}
