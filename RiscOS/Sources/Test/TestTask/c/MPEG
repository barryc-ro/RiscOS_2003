//mplag
//play mpeg video using the VideoControl module
#include "stdio.h"
#include "swis.h"
#include "string.h"
#include "Debug.h"

extern int debug;

int get(void)
/* Perform a GET function
 */
{
        int rtn_key=-1;
        _kernel_swi_regs regs;
        int iCarry;


                regs.r[0] = 145;
                regs.r[1] = 0;
                _kernel_swi_c(OS_Byte, &regs, &regs,&iCarry);
                if (iCarry == 0){  //we got something

                        rtn_key=regs.r[2];
                }
        return rtn_key;
}

//register with the video control module
int vc_register(void)
{
  _kernel_swi_regs reg;
  _kernel_oserror *err = NULL;

  err=_kernel_swi(0x53500, &reg, &reg); //VideoControl_Register
  if(err)
  {
     printf("ERROR::%s\n",err->errmess);
     return 0;
  }
  else
    return reg.r[1];
}

int vc_setup(int sessionID,char *clip)
{
  _kernel_swi_regs reg;
  _kernel_oserror *err = NULL;

  reg.r[0]=0;
  reg.r[1]=sessionID;
  reg.r[2]=(int)clip;
  reg.r[3]=0;
  reg.r[4]=0;
  reg.r[5]=0;

  err=_kernel_swi(0x53501, &reg, &reg); //VideoControl_Setup

  if(err)
    printf("ERROR::%s\n",err->errmess);

  return reg.r[0];  //status
}

void vc_deregister(int sessionID)
{
  _kernel_swi_regs reg;

  reg.r[0]=0;
  reg.r[1]=sessionID;

  _kernel_swi(0x53507, &reg, &reg); //VideoControl_Deregister
}



//wait for server response
int vc_wait(int sessionID)
{
  _kernel_swi_regs reg;
  _kernel_oserror *err = NULL;


  do
  {
    reg.r[0]=0;
    reg.r[1]=sessionID;
    _kernel_swi(0x53503, &reg, &reg); //VideoControl_Status
  }
  while(!(reg.r[0] & 2) && !err);

  //VDU 28,8,66,88,6 ?
  if(reg.r[2] !=200)
  {
    vc_deregister(sessionID);
    return 0;
  }
  return 1;
}

void vc_play(int sessionID,char *rate)
{
  _kernel_swi_regs reg;

  reg.r[0]=0;
  reg.r[1]=sessionID;
  reg.r[2]=NULL;
  reg.r[3]=(int)rate;

  _kernel_swi(0x53505, &reg, &reg); //VideoControl_Play
}

//data is MPEG URL
void playMPEG(char *data,int check)
{
  static int sessionID;
  static int playing=0;

  if(check)
  {
    if (playing)
      playing=vc_wait(sessionID);
  }
  else
  {
    if(strlen(data)!=0)  //play
      {
        sessionID=vc_register();
        vc_setup(sessionID,data);
        vc_wait(sessionID);
        vc_play(sessionID,"1");
        playing=1;
      }
    else                //stop
      {
        vc_play(sessionID,"0");
        vc_wait(sessionID);         //wait for stop
        vc_deregister(sessionID);
        playing=0;
        if(debug) DebugMode();
      }
  }
}


