//PS2

//1.00  06-12-1999 NCE Created

//Tests the PS2 posts on the 7500FE
//This requires a cable which wires the two ports clk->clk and data->data
//Alternatively you can use the seperate mouse and keyboard tests

#include "debug.h"
#include "swis.h"
#include "PeeknPoke.h"
#include "Support.h"


//7500 registers as defined in the 7500FE 'Advance data book'
//at www.cirrus.com/products/overviews/ps7500fe.html
#define KBDAT    0x04
#define KBDCR    0x08
#define MSEDAT   0xA8
#define MSECR    0xAC


int CheckExpect(int expect)
{
  int iKBDCR,iMSECR;

  wait(1); //this seems to be needed for reliable sync

  iKBDCR=peek_reg(KBDCR);
  deprintf("KBDCR-> %X\n",iKBDCR);
  deprintf("KEY CLK-> %d\n",iKBDCR & 0x01);
  deprintf("KEY Data -> %d\n",(iKBDCR & 0x02)>>1);

  iMSECR=peek_reg(MSECR);
  deprintf("MSECR-> %X\n",iMSECR);
  deprintf("Mouse CLK-> %d\n",iMSECR & 0x01);
  deprintf("Mouse Data -> %d\n",(iMSECR & 0x02)>>1);

  if((iKBDCR & 0x03)!= expect)
  {
    deprintf("Failed\n");
    return 0;
  }

  if((iMSECR & 0x03) != expect)
  {
    deprintf("Failed\n");
    return 0;
  }

  return 1;
}

//returns a string containing '1's and '0's
//the first character represents a clock failure
//second character repesents a data failure
char *PS2(void)
{
  //clear the mouse state machine bit
  poke_reg(MSECR,0x00);

   //clear the keyboard state machine bit
  poke_reg(KBDCR,0x00);
  if (!CheckExpect(0x03)) return "11";

  //try poking the mouse clk
  poke_reg(MSECR,0x01);
  if (!CheckExpect(0x02)) return "10";

  //poke the mouse data line
  poke_reg(MSECR,0x02);
  if (!CheckExpect(0x01)) return "01";

  //poke the mouse & data line
  poke_reg(MSECR,0x03);
  if (!CheckExpect(0x00)) return "11";

  //reset the lines
  poke_reg(MSECR,0x00);
  poke_reg(KBDCR,0x00);
  if (!CheckExpect(0x03)) return "11";

  //now try the other way!!

  //poke the keyboard clk
  poke_reg(KBDCR,0x01);
  if (!CheckExpect(0x02)) return "10";

  //poke the kbd data line
  poke_reg(KBDCR,0x02);
  if (!CheckExpect(0x01)) return "01";

  //poke the clk & data line
  poke_reg(KBDCR,0x03);
  if (!CheckExpect(0x00)) return "11";

  //reset the lines
  poke_reg(KBDCR,0x00);
  poke_reg(MSECR,0x00);

  if (!CheckExpect(0x03)) return "11";

  return "00";
}
