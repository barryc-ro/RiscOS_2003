//Flash.c
#include <stdio.h>
#include "PeeknPoke.h"
#include "debug.h"
#include "stdlib.h"


//Flash is in podule slot 0
#define BASE 0x88000000

//32 bit flash checksum (size in K)
int flash_check32(char *data)
{
  int l;
  unsigned int sum=0;
  int size;

  size=atoi(data)*1024;


  for(l=0;l<size;l++)
  {
   sum+=peek_byte(BASE+l*4);
  }
  deprintf("32 bit checksum 0X%08X",sum);
  return sum;
}

//get manuf & ID, return data in buf
//Magic numbers from the AMD AT49F001 data sheet
//Should work for AT29 family and JEDEC compatable devices
void flash_info(char *buff)
{
  int man,dev;

  //put the device in ID mode
  poke_byte(BASE+0x5555*4,0xAA);
  poke_byte(BASE+0x2AAA*4,0x55);
  poke_byte(BASE+0x5555*4,0x90);

  man=peek_byte(BASE);
  dev=peek_byte(BASE+4);

  deprintf("Man ID: %X",man);
  deprintf("Device Code : %X\n",dev);

  sprintf(buff,"%02X%02X",man,dev);
}

int flash_program(void)
{
  return system("{ > null: } <TestTask$Dir>.^.Flash.flashpod -e -p -v <TestTask$Dir>.^.Flash.STBEther00");
}








