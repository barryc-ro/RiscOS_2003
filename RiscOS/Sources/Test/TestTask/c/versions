//versions.c

//obtain chip version numbers

//1.00  10-11-1999 NCE Created - Based on code by BAR/SBF

#include "swis.h"
#include "debug.h"
#include "CPUType.h"
#include "IOControl.h"
#include "stdio.h"
#include "string.h"

//ARM ID
//7500 & 7500FE return 710

void ARM_ID(char *reply)
{
  int cpu_id = 0;

  cpu_id = ARM_identification();

  cpu_id = (cpu_id >> 4) & 0xfff; // extract part number field

  sprintf(reply,"%3X",cpu_id);
  deprintf("ARM_ID: %X\n",reply);

}

//Get IOMD version
//pass in a pointer to char to store result
void IOMD(char *reply)
// Get the IOMD details
{
        int ioctrlid=0;
        int ioctrlvsn=0;

        ioctrlid=find_ioctrl_id();
        ioctrlvsn=find_ioctrl_vsn();

        deprintf("IOMD_ID: %X\n",ioctrlid);
        deprintf("IOMD_Vsn: %X\n",ioctrlvsn);

        sprintf(reply,"%4X%2X",ioctrlid,ioctrlvsn);
}

//Get the type and revision of the MPEG decoder
//Currently STi3520
void MPEG_ID(char *reply)
{
  _kernel_swi_regs reg;
  _kernel_oserror *err = NULL;
  char hex[10];

  reg.r[0]=7;

  err=_kernel_swi(0x49305,&reg,&reg); //MPEGVideo_CardContol

  if(err)
    {
      deprintf("ERROR::%s\n",err->errmess);
      sprintf(reply,"ERR");
      return;
    }

  reply[0]=reg.r[1] & 0x01;

  //get a asccii hex representation of r[2];
  sprintf(hex,"%X",reg.r[2]);

  //we only want the bottom two chars
  reply[1]=hex[0];
  reply[2]=hex[1];
  reply[3]='\0';
}







