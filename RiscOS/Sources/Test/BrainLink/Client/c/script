/*************************************************************************
Copyright [2000] Pace Micro Technology PLC. All rights reserved.

The copyright in this material is owned by Pace Micro Technology PLC
("Pace"). This material is regarded as highly confidential trade secret
of Pace. It may not be reproduced, used, sold or in any other way exploited
or transferred to any third party without the prior written permission of
Pace.
--------------------------------------------------------------------------
* Purpose:
*
*
--------------------------------------------------------------------------
* History:
*
*
**************************************************************************/

/**************************************************************************
* Include header files
**************************************************************************/
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include "swis.h"
#include "brainlink.h"
#include "blclient.h"
#include "serial/serial.h"
#include "zmodem/zmodem.h"
#include "script.h"



static FILE* script_file;
static bool processing_script = false;

extern bool ack;

/*********************************************************************************
* function: script_startProcessing
*
* description:
*
* Parameters:
* Assumptions:
*
*
*
* Returns:
*
*
*
*
*********************************************************************************/
extern void script_startProcessing (FILE* script)
{
   if (!processing_script)
   {
      script_file = script;
      processing_script = true;
      enableNullEvents ();
   }
}



/*********************************************************************************
* function: script_process
*
* description:
*
* Parameters:
* Assumptions:
*
*
*
* Returns:
*
*
*
*
*********************************************************************************/
extern int script_process (int event_code, WimpPollBlock* event, IdBlock* id_block, void* handle)
{
   static char line[256];
   static bool waiting_to_send_file = false;
   static int index = 0;

   event_code = event_code;
   event = event;
   id_block = id_block;
   handle = handle;

   if (processing_script == true)
   {
      if (waiting_to_send_file == true)
      {
         if (ack == true)
         {
            ack = false;
            waiting_to_send_file = false;
            directzmodemtx (&line[index + 1]);
         }
      }

      else if (fgets (line, 255, script_file))
      {
         if (strlen (line) > 1)
         {
            /* replace '\n' with '\0' */
            line[strlen (line) - 1] = '\0';

            /* find position of first non-white space character */
            index = 0;
            while (line[index] <= SPACE)
            {
               index++;
            }

            /* if the line begins with 'c', then it is a client command. */
            if ((line[index] == 'c' || line[index] == 'C') && line[index + 1] == ':')
            {
               _swix (OS_CLI, _IN(0), &line[index + 2]);
            }

            /* if the line begins with '>', need to transmit file using z-modem. */
            else if (line[index] == '>')
            {
               waiting_to_send_file = true;
            }

            /* a line beginning with '#' is a comment. */
            else if (line[index] == '#')
            {
            }

            /* transmit everything else to the server. */
            else
            {
               serial_writeString (&line[index]);
               serial_writeByte (RETURN);
            }
         }
      }
      else
      {
         processing_script = false;
         fclose (script_file);
         disableNullEvents ();
      }
   }
   return 0;
}



