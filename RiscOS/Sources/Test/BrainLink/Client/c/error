/*************************************************************************
Copyright [2000] Pace Micro Technology PLC. All rights reserved.

The copyright in this material is owned by Pace Micro Technology PLC
("Pace"). This material is regarded as highly confidential trade secret
of Pace. It may not be reproduced, used, sold or in any other way exploited
or transferred to any third party without the prior written permission of
Pace.
--------------------------------------------------------------------------
* Purpose:
*
*
--------------------------------------------------------------------------
* History:
*
*
**************************************************************************/

/**************************************************************************
* Include header files
**************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <setjmp.h>
#include "tboxlibs/window.h"
#include "tboxlibs/wimplib.h"
#include "swis.h"
#include "error.h"



/***************************************************************************
* Local #defines
***************************************************************************/


/****************************************************************************
* typedefs
*****************************************************************************/


/****************************************************************************
* Function prototypes
*****************************************************************************/


/****************************************************************************
* Global data
*****************************************************************************/
extern jmp_buf env;




/**************************************************************************
* function: error_showError
*
* description:
* Parameters:
* Assumptions:
*
*
*
* Returns:
*
*
*
*
**************************************************************************/
extern void error_showError (_kernel_oserror* e)
{
   int choice = 0;

   if (e)
   {
      _swix (Wimp_ReportError, _INR (0, 2) | _OUT (1), e, 1, "BrainLink", &choice);
      exit (EXIT_FAILURE);
   }
}


/**************************************************************************
* function: error_showErrorContinue
*
* description:
* Parameters:
* Assumptions:
*
*
*
* Returns:
*
*
*
*
**************************************************************************/
extern void error_showErrorContinue (_kernel_oserror* e)
{
   int choice = 0;

   if (e)
   {
      _swix (Wimp_ReportError, _INR (0, 2) | _OUT (1), e, 3, "BrainLink", &choice);
      if (choice == 1)
      {
         longjmp (env, MAIN_FROM_SHOW_ERROR_CONT);
      }
      else if (choice == 2)
      {
         exit (EXIT_FAILURE);
      }
   }
}














