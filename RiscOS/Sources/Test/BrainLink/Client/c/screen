/*************************************************************************
Copyright [2000] Pace Micro Technology PLC. All rights reserved.

The copyright in this material is owned by Pace Micro Technology PLC
("Pace"). This material is regarded as highly confidential trade secret
of Pace. It may not be reproduced, used, sold or in any other way exploited
or transferred to any third party without the prior written permission of
Pace.
--------------------------------------------------------------------------
* Purpose:
*
*
--------------------------------------------------------------------------
* History:
*
*
**************************************************************************/

/**************************************************************************
* Include header files
**************************************************************************/
#include "screen.h"
#include "swis.h"
/***************************************************************************
* Local #defines
***************************************************************************/


/****************************************************************************
* typedefs
*****************************************************************************/

/****************************************************************************
* Function prototypes
*****************************************************************************/


/****************************************************************************
* Global data
*****************************************************************************/




/***************************************************************************
* function: readScreenModeVariables
*
* description:
* Parameters:
* Assumptions:
*
*
*
* Returns:
*
*
*
*
***************************************************************************/
extern void screen_readScreenModeVariables (SCREEN_MODE* mode)
{
   /* read the x scaling factor */
   _swi (OS_ReadModeVariable, _INR (0, 1) | _OUT (2), -1, XEIG_FACTOR, &mode->xeig_factor);

   /* read the y scaling factor */
   _swi (OS_ReadModeVariable, _INR (0, 1) | _OUT (2), -1, YEIG_FACTOR, &mode->yeig_factor);
}


/***************************************************************************
* function: readVDUVariables
*
* description:
* Parameters:
* Assumptions:
*
*
*
* Returns:
*
*
*
*
***************************************************************************/
extern void screen_readVDUVariables (VDU_DATA* vdu)
{
   int vdu_var_input[64];
   int vdu_var_output[64];

   vdu_var_input[0] = GCHAR_SIZE_X;
   vdu_var_input[1] = GCHAR_SIZE_Y;
   vdu_var_input[2] = -1;   /* terminate the list */

   /* perform the read */
   _swi (OS_ReadVduVariables, _INR (0, 1), vdu_var_input, vdu_var_output);

   vdu->gchar_size_x = vdu_var_output[0];
   vdu->gchar_size_y = vdu_var_output[1];
}




/***************************************************************************
* function: pixelsToOSUnits
*
* description:
* Parameters:
* Assumptions:
*
*
*
* Returns:
*
*
*
*
***************************************************************************/
extern void screen_pixelsToOSUnits (unsigned int* pixels_x,
                                    unsigned int* pixels_y,
                                    const SCREEN_MODE* const mode)
{
   /* scale x value */
   *pixels_x = *pixels_x << mode->xeig_factor;

   /* scale y value */
   *pixels_y = *pixels_y << mode->yeig_factor;
}




