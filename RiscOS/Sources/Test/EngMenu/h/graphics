/****************************************************************************/
//   	Filename:	graphics.h
//	Author:		Alistair Rodger
//	Spec:		DO 2501,833/FS
//
// © Pace Micro Technology Ltd
//
//	Description:
//	this is an object that ownes graphic functionality
//	as such it should be this only that would need changing
//	to change platform 
//
// History:
//
// Date      Who	Description of change
// ===========================================
// 10/10/99  AR		File created
/****************************************************************************/

#ifndef __graphics_h_
#define __graphics_h_

#include "message.h"

class graphics : public ParentObject
{
  private :
	typedef enum {
  		align_left,
  		align_right,
  		align_centre
	} text_alignment;
	
	typedef struct
        {
          	int x0;
          	int y0;
          	int x1;
          	int y1;
        } box;

	_kernel_oserror* error;
	
  	int x_eig, y_eig, bpp;
  	
  	int element_offset;	// this is the number of elements to shift down to vertically center the elements
  	boolean redraw_sprite;

  	int fonthandle;
  	int sprite_area[12 * 1024];

  	// this is the size of the display window
  	int window_height;
  	int window_width;
  	box safe_area;
  		
  	// sprite based graphics
  	_kernel_oserror* plot_sprite_translated(int x, int y);
	_kernel_oserror* load_sprite(const char *filename);
	
  	// font based graphics
  	_kernel_oserror* display_text(const char *text, text_alignment align, box border, int box_col, int font_col);
	_kernel_oserror *draw_full_box(int xbl, int ybl, int xtr, int ytr, int col);

  public:
  	// menu draw methods
  	_kernel_oserror *drawWindow();
  	_kernel_oserror *reDrawWindow(int elements);
  	_kernel_oserror *redrawSecondaryString(int row, char* text);
  	_kernel_oserror *drawMenuElement(boolean selected, int row, char *text, char *text2 = NULL);
  	_kernel_oserror *drawCentredMenuElement(boolean selected, int row, char *text);
  	
  	_kernel_oserror *drawDialogue(char* text);
  	_kernel_oserror *drawError(char* errormess);
  	
  	_kernel_oserror *getError() 	{ return error; }
  	graphics(const char* sprite_file);
  	~graphics();
};
#endif
