/*
 ----------------------------------------------------------------------------
  Copyright [1999] Pace Micro Technology PLC.  All rights reserved.
  
  The copyright in this material is owned by Pace Micro Technology PLC
  ("Pace").  This material is regarded as a highly confidential trade secret
  of Pace.  It may not be reproduced, used, sold or in any other way exploited
  or transferred to any third party without the prior written permission of
  Pace.
  ----------------------------------------------------------------------------
*/
/*------------------------------------------------------------------------------*/
/*    Filename    : h.main	                                                */
/*    Author	  : A.Rodger						        */
/*    Date        : may 1999						        */
/*    Source      : c++.main						        */
/*    Description : this application is the base notifier object this takes     */
/*                message queue objects and displays them on screen             */
/*                                                                              */
/*    Modification history:      		       			        */
/*------------------------------------------------------------------------------*/
#ifndef __MAIN_H_
#define __MAIN_H_

	// standard libraries
#include "swis.h"
#include <stdlib.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#include <stdarg.h>

#include "message.h"

	// Global Definitions
#define IGNORE(a) (a=a)


typedef enum {
  key_ctrlu     = 0x015,
  key_delete	= 0x07F,
  key_bspace    = 0x008,
  key_select 	= 0x00D,
  key_up 	= 0x18F,
  key_down	= 0x18E,
  key_left	= 0x18C,
  key_right	= 0x18D
} key_values;
  	
typedef struct {
  	char *choice;
  	int  value;
  	void* next;
  	void* prev;
} list_choice;

typedef struct {
  	char     TVStandard[12];
  	int	 NVRAM_value;
  	int	 TVChannels_offset;
} TV_Standard_struct;

typedef struct {
  	char     TVChannel[4];
  	int	 NVRAM_value;
} TV_Channel_struct;

typedef struct {
  	int			channel_count;
  	TV_Channel_struct 	channels[1];
} TV_Channel_Returnable;
  	

// see prm 1-850
#define select_key_button_number 73

#define DialogueDelay	200 // in centiseconds

#define NVRAM_Read               	0x4EE00
#define NVRAM_Write              	0x4EE01
#define Macrovision_PlatformFeatures	0x4D543

// the maximum number of elements in a menu.
#define MAX_elements 8

// this is the size of the arg array if it goes over this it will 
// be extended by this;
#define arg_size	10

#define task_name "EngMenu"

// the following section is the dynamic function definitions
typedef   _kernel_oserror*	(*string_fn_ptr)(char**, int, char**);
typedef   _kernel_oserror* 	(*manage_fn_ptr)(void);
typedef   _kernel_oserror*	(*list_fn_ptr)(list_choice**);

typedef struct{
  char*		token;
  string_fn_ptr function;
} string_fn_table;

typedef struct{
  char*		token;
  manage_fn_ptr function;
} manage_fn_table;

typedef struct{
  char*		token;
  list_fn_ptr	function;
} list_fn_table;

string_fn_ptr lookup_string_function(char *token, _kernel_oserror** err);
manage_fn_ptr lookup_management_function(char *token, _kernel_oserror** err);
list_fn_ptr   lookup_list_function(char *token, _kernel_oserror** err);

// generic manipulation functions.
_kernel_oserror* change_menu(void *menu);
_kernel_oserror* addListElement(list_choice** list, char* element, int value);
#endif
