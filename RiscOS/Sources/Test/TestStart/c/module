/************************************************************************/
/*                  Copyright 1997 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/
#include <stdlib.h>
#include <stdio.h>
#include "swis.h"
#include "module.h"
#include "header.h"
#include "Pop.h"
#include "dongle.h"

#if CMHG_VERSION < 516
#define CMHG_CONST
#else
#define CMHG_CONST const
#endif

/*
 * module housekeeping globals
 */
void   *workspace_pointer = NULL;
#ifdef USE_TINY
static _kernel_oserror *TinyError;
#endif


/*
 * module finalise
 */
_kernel_oserror *
module_finalise(int fatal, int podule, void *pw)
{
#ifdef USE_TINY
  if ( TinyError == NULL ) _swix( TinySupport_Die, 0 );
#endif

  return NULL;
}
/*
 * module initialise
 */
_kernel_oserror *
module_initialise(CMHG_CONST char *cmd_tail, int podule_base, void *pw)
{
  _kernel_swi_regs reg;
  int flag=1;

  workspace_pointer = pw;

#ifdef USE_TINY
  /*
   * try to use TinyStubs if possible.
   */
  reg.r[0] = (int)workspace_pointer;
  TinyError = _kernel_swi(TinySupport_Share, &reg, &reg);
#endif

 if(dongle())
 {
   //set system variable to flag that the dongle have been found
   reg.r[0]=(int) "TestStart$Flag";
   reg.r[1]=(int)&flag;
   reg.r[2]=4;
   reg.r[3]=0;
   reg.r[4]=1;

    _kernel_swi(OS_SetVarVal, &reg, &reg);
 }

  return (NULL);
}
