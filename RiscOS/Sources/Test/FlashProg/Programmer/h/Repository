/***************************************************/
/* File   : Repository.h                           */
/*                                                 */
/* Purpose: Repository managing functions.         */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 07-Jan-1999: Created.                  */
/***************************************************/

#ifndef Repository_Included

  #define Repository_Included

  /* Required system includes */

  #include "kernel.h"

  /* Main list structure holding entry details */

  struct repository_entry;

  typedef struct repository_entry
  {
    struct repository_entry * prev;
    struct repository_entry * next;

    char                    * path;
    char                    * name;
    char                    * version;
    char                    * build_date;
    char                    * build_master;

    unsigned int              crc_pre;
    unsigned int              crc_post;

  } repository_entry;

  /* On entry flags values for repository_enumerate and related functions */

  #define Repository_Enumerate_DisplayProgress (1u<<0)

  /* On exit flags values for repository_enumerate and related functions */

  #define Repository_Enumerate_OutOfMemory     (1u<<0)
  #define Repository_Enumerate_OpenInError     (1u<<1)
  #define Repository_Enumerate_ReadError       (1u<<2)

  /* Max entries in one flat directory for the repository (standard */
  /* ADFS would give 77, for example, but you might want to leave   */
  /* some headroom within this).                                    */

  #define Repository_MaxEntries 70

  /* Function prototypes */

  _kernel_oserror * repository_build_entry       (const char * path, repository_entry ** entries,
                                                  unsigned int * count, unsigned int * flags);
  _kernel_oserror * repository_enumerate_zip     (repository_entry ** entries, unsigned int * count, unsigned int * flags);
  void              repository_free_entry        (repository_entry * entry);

#endif
