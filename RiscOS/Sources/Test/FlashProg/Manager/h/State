/***************************************************/
/* File   : State.h                                */
/*                                                 */
/* Purpose: Where global state exists, keep track  */
/*          of it and present a clear get / set    */
/*          interface.                             */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 26-Jan-1999: Created.                  */
/***************************************************/

#ifndef State_Included

  #define State_Included

  /* Required local includes */

  #include "Repository.h"

  /* Various state enumerations */

  typedef enum state_list
  {
    in_main_repository = 0,
    in_zip_list,
    nothing_selected

  } state_list;

  /* Function prototypes */

  void               state_set_list_details  (repository_entry * main, unsigned int main_c,
                                              repository_entry * zip,  unsigned int zip_c);
  void               state_get_list_details  (repository_entry ** main, unsigned int * main_c,
                                              repository_entry ** zip,  unsigned int * zip_c);

  void               state_set_list_state    (state_list state);
  state_list         state_get_list_state    (void);

  void               state_set_list_selected (repository_entry * entry);
  repository_entry * state_get_list_selected (void);

#endif
