Overview
========

ROM image files for production line use consist of more than just the
ZLib compressed raw data used by NCUpgrade, in order to assist in
managing more than one image at a time (e.g. for multiple language
versions of a given OS release). The files consist of a human readable
header followed by the compressed raw data of the ROM image itself.
Because the header preceeds the raw image data, it is not necessary
to load the entire image to examine what it is - a command such as
'*Type' is sufficient to read the header.


Format
======

All entries in the header consist of lines of plain text terminated by
line feed characters (&0A). This is the standard RISC OS and Unix line
ending type. Entries consist of name / value pairs. If a file reader
doesn't recognise an entry it ignores it and moves to the next one; this
allows the format to be extended if required at a later date without
stopping existing software reading the known header items. Note that
in order to identify a correct file, the sequence "RPKG" followed by
a line feed is searched for. All image files MUST start with this
sequence.

Each header entry is identified by a single byte, to simplify file
reading. There follows an optional comment, mostly for the benefit of
human readers, followed by a colon and a line feed character - for
this reason the comment section may not include either of these, but
can include anything else and is of unlimited length. Currently, the
following ID bytes are defined:

  Byte       Meaning
  ---------  --------------------------------------------------------
  'a' (97)   A descriptive name for the image
  'b' (98)   Version number (e.g. "2.01")
  'c' (99)   Build date ("dd/mm/ccyy hh:mm", e.g. "29/01/1999 16:29")
  'd' (100)  Build master (kept short; e.g. "E-14 Ltd.")
  'e' (101)  32-bit CRC of ROM image data before compression
  'f' (102)  32-bit CRC of ROM image data after compression
  '0' (48)   After this header item the raw data follows

The '0' ID byte, optional following comment, and terminating colon
and line feed character are always the last header item in the file
since this is followed by the ROM image data.

After the name field comes the value field. This is treated as a raw
string, and the contents are only length limited or kept to a specific
format by convention, not by necessity of file readers or writers. The
string is terminated by a line feed character. The table listing
defined ID bytes above gives examples of expected formats. Note that
it is best tokeep the descriptive name of the image to 34 characters
or smaller in length and the build master name should be kept short;
this is to ensure it doesn't get clipped in the ROM image display of
the repository manager, "NCRmgr", thus helping legibility in that
application. By example, a typical ROM image may appear in the NCRmgr
display like this:

  |                                    |
  | rimgcs24                           |
  | Customer 2 image release 4         |
  | 2.00 29/01/1999 16:29 E-14 Ltd.    |
  |                                    |
    <--     34 characters wide     -->

The first entry above is the image leafname; it isn't derived from
the file contents at all.

The descriptive name, version number, build date and build master
entries are optional. The CRC pre, CRC post and data entries are
mandatory.


Example
=======

The image displayed above would look something like this as a ROM
image file:

RPKG
a Name:
Customer 2 image release 4
b Version:
2.00
c Build Date:
29/01/1999 16:29
d Build Master:
E-14 Ltd.
e 32-bit CRC pre:
1F56EE93
f 32-bit CRC post:
75BD26C1
0 Data:
<compressed ROM image data goes here>

The strings 'Name', 'Version', 'Build Date' and so-on are of course just
comments sitting next to an ID byte, and could be anything, though the
above represents sensible, easily understandable strings to use. When
using the "MakeNCimg" tool to create one of these files from an
uncompressed ROM image source, the values of the CRC pre and CRC post-
compression are auto-generated via. ZLib's crc32 function; the user
inputs the name, version, build date and build master. The tool will
offer a default value for the build date based on the source ROM image
file's date stamp, though the person using the tool doesn't have to
accept this, and will offer "E-14 Ltd." for the build master, though
again this can be overridden.

-- 
Andrew Hodgkinson, Senior Software Engineer
Element 14 Ltd.                              Tel: +44 (0) 1223 725247
645 Newmarket Road                           Fax: +44 (0) 1223 725347
Cambridge, CB5 8PB, United Kingdom           WWW: http://www.e-14.com/