/* >h.Support

ACORN TEST SOFTWARE (c) Acorn Computers Ltd. 1997

************************* CHANGE LIST *************************************
                                                                        
Vers    Date            Name    Comment                                 
------  ---------       ---     -------------------------------------------
1.00    20 Mar 97       BAR     Initial writing
1.01    01 May 97       BAR     Added define for CODEERROR

This is a C header file, defining variables and functions for Support.

*/

/* Declare the functions available */
extern int get_yn_responce_forever(void);
extern int get_yn_responce_timed(int delay);
extern int get_key_forever(int reqd_key);
extern int get_key_abortable(int reqd_key, int abort_key);
extern int get_key_timed(int reqd_key, int delay);
extern void WaitForSpaceBar(void);
extern void WaitForOKKey(void);
extern int inkey(int delay);
extern int get(void);
extern void flush_keyboard(void);
extern void log_status(int test,int status);
extern int check_logged_status(int failed_count, int cycle);
extern void clear_res_store(int cycle);
extern int find_memory_size(int area);
extern int make_error_no(int c_err, int t_base, int t_numb, int f_numb);
extern void display_status_led(int test_mode, int status);
extern void change_led_state(int led, int state, int rate);
extern int get_led_state(int led);
extern void set_led_state(int led, int state);
extern void led_steady_off(int led);
extern void led_steady_on(int led);
extern void led_flash_off(int led);
extern void led_flash_on(int led);
extern void set_led_flash_rate(int led, int rate);
extern void wait_for_cont(void);
extern void wait(int seconds);

/* Declare the variables available */
extern int tests_status;
extern int tests_done;

/* Declare the constants available*/
/* for debugging purposes */
extern int flagDebugging;
#define debug	if (!flagDebugging); else

#define RAW_SPACE               98      /* Raw keycode for the spacebar */
#define SPACE_CHR               32      /* Space bar character          */
#define NO_KEY_PRESS            -1      /* No key pressed               */
                                        /* Name(s)             Key Legened */
#define GOOD_KEY                0x8D    /* Yes, ok, Good key   Right Arrow *//* MENU */
#define BAD_KEY                 0x8C    /* No, Not ok, Bad key Left Arrow  *//* HOME */
#define CONT_KEY                0x0D    /* Continue Space Bar  OK, Return' */
#define CONT                    -2      /* Flag saying carry on ...     */
#define OSW_READSYSCLOCK        1 

/* declare the structure to store the results in */
typedef struct _results
{
        int done;               /* did we do it this cycle ? */
        int result;             /* what was its result */
	int total_runs;         /* total times run */
	int total_fails;        /* total times failed */
        int first;              /* cycle first failure happened */
}
results_store;

/* define the various states we can have */
#define FAILED          0
#define PASSED          1
#define RUNNING         2
#define COMPLETED       3
#define LASTSTATUS      3

/* define the various tess we can have */
#define ROM             0
#define DRAM            1
#define NVRAM           2
#define SYSTEM          3
#define MODEM           4
#define AUDIO           5
#define SMARTCARD       6
#define USERINPUT       7
#define LOGGEDCODES     8
#define NUMB_TESTS      8

/* define the various sub-tests we can have */
#define ARMCPU          0
#define IOCONTROL       1
#define IDNUMBER        2
#define OSVSN           3
#define DRAMSIZE        4
#define CODE1           5
#define CODE2           6
#define CODE3           7
#define CODE4           8
#define WARRANTY        9
#define ONTIME          10
#define SCARDSERIAL     11
#define MODEMROMCHECK   12
#define MODEMLINECHECK  13
#define SUBTESTCONT     14
#define CODEERROR       15

/* define the different types of test mode we can have */
#define MODE_USER       0
#define MODE_LIFE       1

/* Specifiy the various areas of memory we can get information on  */
#define DRAM_AREA       1
#define VRAM_AREA       2
#define ROM_AREA        3
#define IO_AREA         4

/* define which LED is RED and which is GREEN */
#define LED_RED         0               /* This is the LEFT LED */
#define LED_GREEN       1               /* This is the RIGHT LED */

/* Define the LED status codes */
#define LED_OFF         0x0
#define LED_ON          0x1
#define LED_FLASH       0x2

/* define the LED Flash Rates in CSec's */
#define LED_FLASH_USER  25
#define LED_FLASH_LIFE  75

/* Declare the messages available */
