/* > storedinfo.c */

/* StoredInfo specific header. */

#ifndef __time_h
#include <time.h>
#endif

#define STOREDINFO_MINSINOP_TAG		"MinutesInOperation"
#define STOREDINFO_MINSINOPCHECK_TAG	"MinutesInOperationCheck"
#define STOREDINFO_MINSINOP_SIZE	3

#define STOREDINFO_FAULTS_TAG		"FaultCodes"
#define STOREDINFO_FAULTSCHECK_TAG	"FaultCodesCheck"
#define STOREDINFO_FAULTSINDEX_TAG	"FaultCodesIndex"
#define STOREDINFO_FAULT_SIZE		8
#define STOREDINFO_FAULT_COUNT		4
#define STOREDINFO_FAULTINDEX_MASK	(STOREDINFO_FAULT_COUNT - 1)
#define STOREDINFO_FAULTS_SIZE		(STOREDINFO_FAULT_SIZE * STOREDINFO_FAULT_COUNT)

#define STOREDINFO_WARRANTY_TAG		"WarrantyClock"
#define STOREDINFO_WARRANTYCHECK_TAG	"WarrantyClockCheck"
#define STOREDINFO_WARRANTY_SIZE	2

#define STOREDINFO_SETWARRANTY_FLAG	(1<<0)
#define STOREDINFO_CALLBACKSET_FLAG	(1<<1)
#define STOREDINFO_COUNTING_FLAG	(1<<2)


typedef struct _fault_code
{
	int code;
	char text[4];
}
fault_code;


extern fault_code storedinfo_faultsbuffer[STOREDINFO_FAULT_COUNT];


extern _kernel_oserror *storedinfo_initialise( void *pw );
extern void storedinfo_finalise( void *pw );
extern void storedinfo_servicetestsingle( void );
extern void storedinfo_servicetestcont( void );
extern void storedinfo_standby( _kernel_swi_regs *r, void *pw );
extern void storedinfo_errorstarting( _kernel_swi_regs *r );
extern time_t storedinfo_secsto1997( void );
