/* >c.CMOS

TEST SOFTWARE (c) Element 14 Ltd. 1999

************************* CHANGE LIST *************************************

Vers    Date            Name    Comment
------  ---------       ---     -------------------------------------------
1.00    08 Feb 99       SBF     Created
1.01    24 Feb 99       SBF     Added code to inform the user that the CMOS
                                has been reset

Performs operations on the CMOS RAM
*/


/* Library includes */
#include <stdio.h>

#include "kernel.h"
#include "swis.h"

/* Project includes */
#include "support.h"
#include "display.h"
#include "msgs.h"


/* Local definitions */
#define CHECKSUM_LOCATION 0xEF  /* Location 239 */


/* Functions */

/*
 * Function   : cmos_overwrite_checksum
 * Description: overwrites the CMOS checksum; forces CMOS to
 *              reset automatically upon next power on
 * Params in  : none
 * Params out : none
 * Returns    : pointer to error block if failed, NULL if successful
 */

_kernel_oserror *cmos_overwrite_checksum(void)
{
  _kernel_swi_regs reg;
  _kernel_oserror *error = NULL;

  /* Read the checksum value */
  reg.r[0] = 161;                                                               /* Read CMOS */
  reg.r[1] = CHECKSUM_LOCATION;                                                 /* Checksum byte */
  error = _kernel_swi(OS_Byte, &reg, &reg);
  if (error) return error;                                                      /* Exit on error */

  reg.r[2]++;                                                                   /* Increment value */

  reg.r[0] = 162;                                                               /* Write CMOS */
  error = _kernel_swi(OS_Byte, &reg, &reg);                                     /* Value in r2 */
  if (error) return error;                                                      /* Exit on error */

  /* Everything OK; the CMOS has been reset */
  display_info(cmos_msg[0]);                                                    /* Inform the user of the reset */
  return NULL;
}

/* End of c.CMOS */
