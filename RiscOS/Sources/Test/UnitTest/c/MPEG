//MPEG - MPEG video test
//Note this is not an MPEG player but simply makes a CLI call
//to the MPEG player
// 17/2/99  NCE        created

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"

#include "support.h"
#include "module.h"
#include "InputTest.h"
#include "display.h"
#include "msgs.h"
#include "MouseTest.h"
#include "MPEG.h"

void play_MPEG(void)
{
  int result;
  _kernel_swi_regs reg;
  char MPEGPath[128];
  char MPEGCommand[64],MPEGTrans[64],MPEGFile[64],MPEGExtra[64];

  //pur SCART into a known state
  SCART_Select_Aux();
  SCART_Select_RGB();

  //put a about to play MPEG message here
  display_status(MPEG,RUNNING);
  display_info(input_test_msg[15]);
  display_info(input_test_msg[17]);
  display_info(input_test_msg[18]);
  display_info(input_test_msg[19]);
  display_instruction(YESNO_INST_LINE,(general_msg[0]));
  WaitForOKKey();
  clear_whole_screen();
  readvarval("MPEGTest$Command",MPEGCommand,64);
  readvarval("MPEGTest$Transport",MPEGTrans,64);
  readvarval("MPEGTest$VideoFile",MPEGFile,64);
  readvarval("MPEGTest$Extra",MPEGExtra,64);
  sprintf(MPEGPath,"%s %s%s %s",MPEGCommand,MPEGTrans,MPEGFile,MPEGExtra);
  reg.r[0]=(int)MPEGPath;
  _kernel_swi(Wimp_StartTask,&reg,&reg);


  //restore graphics cursor
  mouse_off();
  _kernel_oswrch(5);
  display_refresh();
  display_status(MPEG,RUNNING);
  display_info(input_test_msg[16]);

  //Reset SCART
  SCART_Select_Aux();
  SCART_Select_RGB();

  display_instruction(YESNO_INST_LINE,general_msg[02]);
  result=get_yn_responce_forever();
  log_status(MPEG,result);
  display_refresh();
}


//Some functions to control SCART
//note that SCART_Select_Aux and SCART_Select_Tuner are mutually exclusive
//i.e. you can select AUX or Tuner, not both!
//SCART_Select_RGB and SCART_Select_CVBS are also mutually exclusive.

#define MPEGVideo_CardControl_SWI 0x49305

void SCART_Select_Aux(void)
{
 //selects the SCART Aux input
  _kernel_swi_regs reg;

  reg.r[0]=2;
  reg.r[1]=0x20;
  reg.r[2]=~0x20;

  _kernel_swi(MPEGVideo_CardControl_SWI,&reg,&reg);
}

void SCART_Select_Tuner(void)
{
 //selects the SCART Tuner input
  _kernel_swi_regs reg;

  reg.r[0]=2;
  reg.r[1]=0;
  reg.r[2]=~0x20;

  _kernel_swi(MPEGVideo_CardControl_SWI,&reg,&reg);
}

void SCART_Select_RGB(void)
{
 //selects the SCART RGB input
  _kernel_swi_regs reg;

  reg.r[0]=2;
  reg.r[1]=0x40;
  reg.r[2]=~0x40;

  _kernel_swi(MPEGVideo_CardControl_SWI,&reg,&reg);
}


void SCART_Select_CVBS(void)
{
 //selects the SCART CVBS input
  _kernel_swi_regs reg;

  reg.r[0]=2;
  reg.r[1]=0;
  reg.r[2]=~0x40;

  _kernel_swi(MPEGVideo_CardControl_SWI,&reg,&reg);
}


