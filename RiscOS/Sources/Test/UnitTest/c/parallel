//parrallel port test
//uses the parallel port dongle
//replaces the printer test
//see the IAC ROM test software spec 2208,663/FS
//for details of the dongle wiring.
//nicke 11/8/99


#include <stdio.h>
#include <kernel.h>
#include "Pop.h"
#include "Support.h"
#include "Display.h"


//diddle with the dongle!
//the bit twiddling used to calculate status_model and control_model
//models the way a functioning parrallel port should react to the bit
//patterns.
int dongle(void)
{
  int bit =1;
  int status_model=0;
  int control_model=0;
  p_set_data_out();
  do
  {
    p_data_set(bit);
    status_model=(((bit & 0x01)<<6)|((~bit & 0x02)<<6)|((bit & 0x04)<<3)
                 |((bit & 0x08)<<1)|((bit & 0x10)>>1));
    if (p_status_read() != status_model) return FALSE;
  }
  while(bit++ < 0x20);

  p_set_data_in();

  bit = 0;
  do
  {
    p_set_control_outs(bit);
    control_model=(((~bit & 0x01)<<5)|((~bit & 0x02)<<4)|((bit & 0x04)<<4)
                  |((~bit & 0x08)<<4));
    if (p_read_data() != control_model) return FALSE;
  }
  while(bit++ < 0x10);

  return TRUE;
}

void parallel(void)
{
  display_status(PARALLEL,RUNNING);
  log_status(PARALLEL,dongle());
  display_refresh();
}

