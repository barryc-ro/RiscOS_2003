/* global.h, global variables                                               */
/*
 * tmndecode
 * Copyright (C) 1995 Telenor R&D
 *                    Karl Olav Lillevold <kol@nta.no>
 *
 * based on mpeg2decode, (C) 1994, MPEG Software Simulation Group
 * and mpeg2play, (C) 1994 Stefan Eckart
 *                         <stefan@lis.e-technik.tu-muenchen.de>
 *
 */

#include "tmndec.h"
/* #include <stdio.h>*/

/* choose between declaration (GLOBAL undefined)
 * and definition (GLOBAL defined)
 * GLOBAL is defined in exactly one file (tmndec.c)
 */

#define BBB(s) if(((ld->source)==0)&& muck==0) {sprintf((char*)bugmsg+125,"!!!%s",s);muck=1;}

/* getbits.c */
#include "getbits.h"


#ifndef GLOBAL
#define EXTERN extern
#else
#define EXTERN
#endif

EXTERN int muck
#ifdef GLOBAL
=0
#endif
;
/* Some macros */
#define mmax(a, b)  	((a) > (b) ? (a) : (b))
#define mmin(a, b)  	((a) < (b) ? (a) : (b))
#define mnint(a)        ((a) < 0 ? (int)(a - 0.5) : (int)(a + 0.5))
#define sign(a)         ((a) < 0 ? -1 : 1)

/* prototypes of global functions */


/* output.s*/
extern void do_8_pixels(char *source, char *output, char *table);

/* getblk.c */
void getblock _ANSI_ARGS_((int comp, int mode));
void get_sac_block _ANSI_ARGS_((int comp, int mode));

/* gethdr.c */
int getheader _ANSI_ARGS_((void));
void startcode _ANSI_ARGS_((void));

/* getpic.c */
void getpicture _ANSI_ARGS_((int *framenum, int first));
void putlast _ANSI_ARGS_((int framenum));

/* getvlc.c */
int getTMNMV _ANSI_ARGS_((void));
int getMCBPC _ANSI_ARGS_((void));
int getMODB _ANSI_ARGS_((void));
int getMCBPCintra _ANSI_ARGS_((void));
int getCBPY _ANSI_ARGS_((void));

/* idct.c */
void idct _ANSI_ARGS_((int *block));
void init_idct _ANSI_ARGS_((void));

/* idctref.c */
void init_idctref _ANSI_ARGS_((void));
void idctref _ANSI_ARGS_((int *block));

/* tmndec.c */
void error _ANSI_ARGS_((char *text));
void printbits _ANSI_ARGS_((int code, int bits, int len));
#ifdef USE_TIME
void doframerate();
#endif

/* recon.c */
void reconstruct _ANSI_ARGS_((int bx, int by, int P, int bdx, int bdy));

/* store.c */
void storeframe _ANSI_ARGS_((unsigned char *src[]));

/* sac.c */
int decode_a_symbol _ANSI_ARGS_((int cumul_freq[ ], int));
void decoder_reset _ANSI_ARGS_((void ));

/* jrevdct.s*/

void asm_j_rev_dct(int zerosuffixlength, int * data);


/* global variables */

EXTERN char version[]
#ifdef GLOBAL
  ="tmndecode v2.0c\n(C) 1995 Telenor R&D, Norway\n"
#endif
;

/* zig-zag scan */
extern unsigned char zig_zag_scan[64];

/* color space conversion coefficients
 *
 * entries are {crv,cbu,cgu,cgv}
 *
 * crv=(255/224)*65536*(1-cr)/0.5
 * cbu=(255/224)*65536*(1-cb)/0.5
 * cgu=(255/224)*65536*(cb/cg)*(1-cb)/0.5
 * cgv=(255/224)*65536*(cr/cg)*(1-cr)/0.5
 *
 * where Y=cr*R+cg*G+cb*B (cr+cg+cb=1)
 */

EXTERN int convmat[8][4]
#ifdef GLOBAL
=
{
  {117504, 138453, 13954, 34903}, /* no sequence_display_extension */
  {117504, 138453, 13954, 34903}, /* ITU-R Rec. 709 (1990) */
  {104597, 132201, 25675, 53279}, /* unspecified */
  {104597, 132201, 25675, 53279}, /* reserved */
  {104448, 132798, 24759, 53109}, /* FCC */
  {104597, 132201, 25675, 53279}, /* ITU-R Rec. 624-4 System B, G */
  {104597, 132201, 25675, 53279}, /* SMPTE 170M */
  {117579, 136230, 16907, 35559}  /* SMPTE 240M (1987) */
}
#endif
;

EXTERN int quiet;
EXTERN int trace;
EXTERN char errortext[256]
#ifdef GLOBAL
={1}
#endif
;
EXTERN unsigned char *oldrefframeorig[3],*bframeorig[3],*newframeorig[3];
extern unsigned char *oldrefframe[3],*bframe[3],*newframe[3];
EXTERN unsigned char *refframe[3];
EXTERN unsigned char *refframeorig[3];

#define MV_INDEX(b,c,d,e) ((MV) + (b)+(((c)+(  (((d)+((e)<<MV_d3_log))<<2)+((d)+((e)<<MV_d3_log))  ))<<1))


extern int *MV; /* changed to allow plying of different sized movies*/
extern int MV_d3_log;
extern char *modemap;
extern int mb_width;
extern int pb_frame;

EXTERN int df_mode;

extern int coded_picture_width;
extern int mv_outside_frame;
extern int adv_pred_mode;
extern int trb, itrd, trd;		/* added irtd to amortise division cost*/
extern char roundtab[16];


#define MM_INDEX(a,b) ((modemap) + (a) + ((b)<<MV_d3_log))
#define MODE_MASK (7)
#define MODE_COD  (8)


EXTERN unsigned char *clp;
EXTERN unsigned char *bugmsg; /* inserted to allow debugging under replay */
EXTERN unsigned char *tmpc;  /* aburr 9/7/96*/

extern int mb_height;
EXTERN int coded_picture_height;
extern int chrom_width;
EXTERN int chrom_height;
extern int pict_type;
extern int newgob;
EXTERN int syntax_arith_coding;
extern int long_vectors;
//extern int fault;
EXTERN int verbose;
EXTERN int refidct;
EXTERN int temp_ref, source_format, tr_framenum;
extern int quant;
#ifdef USE_TIME
EXTERN int framerate;
EXTERN struct timeval tftarget;
#endif


extern int bquant;
#define TRDDIV 32768

/* output */
EXTERN char *outputname;
EXTERN int outtype;
#define T_YUV      0
#define T_SIF      1
#define T_TGA      2
#define T_PPM      3
#define T_X11      4
#define T_YUV_CONC 5


/* This is a flag used by getpicture to defer storing of b-frames*/
EXTERN unsigned char defer_bool
#ifdef GLOBAL
=0
#endif
;



typedef struct ld {
  /* bit input */
/*  FILE * infile;*/

/*  unsigned char rdbfr[2051];*/
  unsigned char *rdptr;
  unsigned char inbfr[16];
  int incnt;
  int bitcnt;
  /*Stuff above to be elim */
  /* my new stuff:*/
  unsigned char *source, *dest, *table;
  int bitsthru; /* this is 0-7*/
  /* block data */
  int *block;
  /* RJWs hack */
  int *zsc;
} thing;

extern thing base;

EXTERN thing *ld;
extern char *quants_stored_ptr;
extern char quants_stored[144];
extern int quants_stored_last_y;
