;**************************************************************************
;
;  File:        s.tryout16
;
;  Description:
;
;  Version:     0.0 16 Sep 1997
;
;  Author:      Alex Burr (aburr@acorn.com)
;
;  Modification History:
;
;    Date         Name                  Description
;    ----------------------------------------------------------------------
;
;**************************************************************************
;  This is included via a GET directive and is not assembled as is
;**************************************************************************

;	AREA	|Test$$Code|,CODE,READONLY

;	GET	hdr.D

	GET	s.plook

	EXPORT	doframe

dith	*	0
ACCCCR	* 	1
tryrgb	*	0
oldeor	*	0
try16	*	1

pling	DCB	"HERE"
	DCD	ppl
	DCD	mash
	DCD	torgb
	DCD	decsize


ro	RN	r1
rtab	RN	r3
ryp	RN	r2
rup	RN	r4
rvp	RN	r5
rw	RN	r6
rh	RN	r7
ry	RN	r8
ru	RN	r9
rv	RN	r10
rp1	RN	r11
rp2	RN	r12
rt	RN	r14
rt2	RN	r0

	MACRO
	do8to5	$rn,$ri,$s

 [  $s/=0
	MOV	$ri,$rn,LSL #$s
 [ $s/=24
	BIC	$ri,$ri,#&00FF0000
 ]
	SUBS	$ri,$ri,$ri,ASR #5
 ]
 [ $s=0
	BIC	$ri,$rn,#&00ff0000
	SUBS	$ri,$ri,$ri,ASR #5
 ]
	ADDPL	$ri,$ri,#(1:SHL:26)
	SUBMI	$ri,$ri,#(1:SHL:26)
	MOV	$ri,$ri,LSR #24+3	;Ri <- VVVVV
	MEND

	MACRO
	fnwrite	$rout,$ra,$rb


 [ decsize = 2
	bic	$ra,$ra,#&ff0000
	bic	$ra,$ra,#&ff000000
	orr 	$ra,$ra,$rb,LSL #16
	stmia	$rout!,{$ra}
 ]
 [ decsize = 4

	stmia	$rout!,{$ra,$rb}
 ]

	MEND

	MACRO
	doyto6	$rn,$rj,$s

 [ $s/=0
	MOV	$rj,$rn,LSL #$s
  [ $s/=24
	BIC	$rj,$rj,#&00FF0000
  ]
	SUB	$rj,$rj,$rj,LSR #6
 ]
 [ $s=0
	BIC	$rj,$rn,#&00ff0000
	SUB	$rj,$rj,$rj,LSR #6
 ]
	ADD	$rj,$rj,#(1:SHL:25)
	MOV	$rj,$rj,LSR #24+2	;Ri <- YYYYYY


	MEND

	MACRO
	in	$s1,$s2,$rs
	doyto6 ry,ru,$s1
	doyto6 ry,rv,$s2
	orr    ru,ru,$rs,LSL #6
	orr    rv,rv,$rs,LSL #6
	MEND

	MACRO
	putout  $cm,$cm2

 [ ppl = 1
	bic	ru,ru,#&ff0000
	bic	ru,ru,#&ff000000
	bic	rv,rv,#&ff0000
	bic	rv,rv,#&ff000000
        plook rv,rv,rtab
	plook ru,ru,rtab
 ]


 	fnwrite ro,ru,rv
	MEND

hpix	DCD	0
stt	DCD	0
eort	DCD	&80808080
doframe
        FunctionEntry "r4-r11"
        ldr	rw,xpix
	ldr	rh,ypix
	str	rh,hpix
 [ ppl=0 	;no plook, so use extra reg
	mov	rtab,rw
 ]
	ldmia	r0,{ryp,rup,rvp}

iloop	ldr	ru,[rup],#4	;U4U3U2U1
	ldr	rv,[rvp],#4	;V4V3V2V1
	ldr	ry,[ryp],#4	;Y4Y3Y2Y1
 [ torgb=0
  [ oldeor=1 ;mash/=1

 	eor	ru,ru,#128		;would one ldr+2*eor be faster?
	eor	ru,ru,#128*256
	eor	ru,ru,#128*256*256
	eor	ru,ru,#128*256*256*256

	eor	rv,rv,#128
	eor	rv,rv,#128*256
	eor	rv,rv,#128*256*256
	eor	rv,rv,#128*256*256*256
  |
	ldr	rt,eort
	eor	ru,ru,rt
	eor	rv,rv,rt
  ]
  [ try16=1
   [ ACCCCR=1
	do8to5	ru,rt,24
	do8to5	rv,rt2,24
	orr	rp1,rt,rt2,LSL #5
	do8to5	ru,rt,16
	do8to5	rv,rt2,16
	orr	rt2,rt,rt2,LSL #5
        orr	rp1,rp1,rt2,LSL #16

	do8to5	ru,rt,8
	do8to5	rv,rt2,8
	orr	rp2,rt,rt2,LSL #5
	do8to5	ru,rt,0
	do8to5	rv,rt2,0
	orr	rt2,rt,rt2,LSL #5
        orr	rp2,rp2,rt2,LSL #16

   ]
  ]
 ]
	in     24,16,rp1
	putout 0,1

	mov    rp1,rp1,ROR #16

	in	8,0,rp1

	putout 0,1

	ldr	ry,[ryp],#60

	in	24,16,rp2

	putout 0,1

	mov    rp2,rp2,ROR #16

	in	8,0,rp2

	putout 0,1
 [ ppl=1
	ldr	rh,xpix
 |
	mov	rh,rtab
 ]

 [ decsize=2
	sub	ro,ro,#16
	add	ro,ro,rh,LSL #1
 ]
 [ decsize=4
	sub	ro,ro,#32
	add	ro,ro,rh,LSL #2
 ]
	ldr	ry,[ryp,rh]!

	mov	rp1,rp1,ROR #16
 	in	24,16,rp1

	putout 2,3

	mov	rp1,rp1,ROR #16
	in	8,0,rp1

	putout 2,3

	ldr	ry,[ryp,#4]

	mov	rp2,rp2,ROR #16
 	in	24,16,rp2

	putout 2,3

	mov	rp2,rp2,ROR #16
	in	8,0,rp2

	putout  2,3

	subs	rw,rw,#8
 [ ppl=1
	ldrne	rh,xpix
 |
	movne	rh,rtab
 ]
	subne	ryp,ryp,#64-8
 [ decsize=2
	subne	ro,ro,rh,LSL #1
 ]
 [ decsize=4
	subne	ro,ro,rh,LSL #2
 ]
	subne	ryp,ryp,rh
	bne	iloop

	add	ryp,ryp,#64+8
	add	rup,rup,#32
	add	rvp,rvp,#32

	ldr	rh,hpix
	subs	rh,rh,#2

	str	rh,hpix
 [ ppl=1
	ldr	rw,xpix
 |
	mov 	rw,rtab
 ]

	bne	iloop

        Return  "r4-r11"

;	EXPORT	PatchTable
PatchTable
	ptable

	END
