
;	AREA	|Test$$Code|,CODE,READONLY

	GET	hdr.D<Decomp18$Variant>

	GET	hdr.plook

	EXPORT	doframe


ro	RN	r1
rtab	RN	r2
ryp	RN	r3
rup	RN	r4
rvp	RN	r5
rw	RN	r6
rh	RN	r7
ry	RN	r8
ru	RN	r9
rv	RN	r10
rp1	RN	r11
rp2	RN	r12
rt	RN	r14
rt2	RN	r0



	MACRO
	fnwrite	$rout,$ra,$rb

 [ decsize = 1
	strb	$ra,[$rout],#1
	strb	$rb,[$rout],#1
 ]
 [ decsize = 2
	bic	$ra,$ra,#&ff0000
	bic	$ra,$ra,#&ff000000
	orr 	$ra,$ra,$rb,LSL #16
	stmia	$rout!,{$ra}
 ]
 [ decsize = 4
	stmia	$rout!,{$ra,$rb}
 ]


	MEND

	MACRO
	crush	$rn,$ri,$rj,$rm
			; reduce 00000000 YYYYYYYY UUUUUUUU VVVVVVVV
		      	; to	00000000 00000000 0YYYYYUU UUUVVVVV

;change this to go to 6Y5UV

	AND	$ri,$rm,$rn,LSR #16+3	;Ri <- VVVVV
	AND	$rj,$rm,$rn,LSR #8+3	;Rj <- UUUUU
	ORR	$ri,$rj,$ri,LSL #5	;ri <- VVVVVUUUUU
	AND	$rj,$rm,$rn,LSR #3	;rj <- YYYYY
	ORR	$rn,$rj,$ri,LSL #5	;rn <- VVVVVUUUUUYYYYY


	MEND

	MACRO
	putout

 [ mash =1
	mov	rh,#&1f
	crush	rp1,rt,rt2,rh
	crush	rp2,rt,rt2,rh
 ]
 [ mash = 3
	mov	rh,#1
	orr	rh,rh,LSL #16
	orr	rh,rh,LSL #8
	bic	rp1,rp1,rh
	bic	rp2,rp2,rh
 ]
 [ ppl = 1
        plook rp1,rp1,rtab
	plook rp2,rp2,rtab
 ]

 	fnwrite ro,rp1,rp2
	MEND

	MACRO
	in1


	and	rt,ru,#255
	and	rp1,rv,#255
	orr	rt,rt,rp1,LSL #8	;V1U1
	and	rp1,ry,#255
	orr	rp1,rp1,rt,LSL #8	;V1U1Y1
	mov	rp2,ry,LSR #8
	and	rp2,rp2,#255
	orr	rp2,rp2,rt,LSL #8       ;V1U1Y2

	MEND

	MACRO
        in2


	and	rt,ru,#255*256
	and	rp1,rv,#255*256
	orr	rt,rt,rp1,LSL #8	;V2U200
	and	rp1,ry,#255*256*256
	orr	rp1,rt,rp1,LSR #16	;V2U2Y3
	and	rp2,ry,#255*256*256*256
	orr	rp2,rt,rp2,LSR #24	;V2U2Y4

	MEND

hpix	DCD	0
stt	DCD	0

doframe
	stmfd	r13!,{r4-r12,lr}
        ldr	rw,xpix
	ldr	rh,ypix
	str	rh,hpix
 [ ppl = 0 	;no plook, so use extra reg
	mov	rtab,rw
 ]
	ldmia	r0,{ryp,rup,rvp}

iloop	ldr	ru,[rup],#4	;U4U3U2U1
	ldr	rv,[rvp],#4	;V4V3V2V1
	ldr	ry,[ryp]	;Y4Y3Y2Y1

	eor	ru,ru,#128		;would one ldr+2*eor be faster?
	eor	ru,ru,#128*256
	eor	ru,ru,#128*256*256
	eor	ru,ru,#128*256*256*256

	eor	rv,rv,#128
	eor	rv,rv,#128*256
	eor	rv,rv,#128*256*256
	eor	rv,rv,#128*256*256*256

	in1
	putout
	in2
	putout

	ldr	ry,[ryp,#4]
	mov	ru,ru,ROR #16
	mov	rv,rv,ROR #16

	in1
	putout
	in2
	putout
 [ ppl=1
	ldr	rh,xpix
 ]
 [ ppl=0
	mov	rh,rtab
 ]
	add	ryp,ryp,rh
 [ decsize=1
	add	ro,ro,rh
	sub	ro,ro,#8
 ]
 [ decsize=2
	add	ro,ro,rh,LSL #1
	sub	ro,ro,#16
 ]
 [ decsize=4
	add	ro,ro,rh,LSL #2
	sub	ro,ro,#32
 ]

	ldr	ry,[ryp]
	mov	ru,ru,ROR #16
	mov	rv,rv,ROR #16

	in1
	putout
	in2
	putout

	ldr	ry,[ryp,#4]
	mov	ru,ru,ROR #16
	mov	rv,rv,ROR #16

	in1
	putout
	in2
	putout




	subs	rw,rw,#8
 [ ppl=1
	ldrne	rh,xpix
 ]
 [ ppl=0
	movne	rh,rtab
 ]
 [ decsize=1
	subne	ro,ro,rh
 ]
 [ decsize=2
	subne	ro,ro,rh,LSL #1
 ]
 [ decsize=4
	subne	ro,ro,rh,LSL #2
 ]

	subne	ryp,ryp,rh
	add	ryp,ryp,#8
	bne	iloop

	ldr	rh,hpix
	subs	rh,rh,#2

	str	rh,hpix
 [ ppl=1
	ldr	rw,xpix
 ]
 [ ppl=0
	mov 	rw,rtab
 ]

	bne	iloop




	ldmfd	r13!,{r4-r12,pc}^

;	EXPORT	PatchTable
PatchTable
	ptable


	END
