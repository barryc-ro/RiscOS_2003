
;	AREA	|Test$$Code|,CODE,READONLY

;	GET	hdr.D<Decomp18$Variant>

	GET	hdr.plook

	EXPORT	doframe

dith	*	0
ACCCCR	* 	1
tryrgb	*	0
oldeor	*	0
trynstr	*	1


pling	DCB	"HERE"
	DCD	ppl
	DCD	mash
	DCD	torgb
	DCD	decsize

ro	RN	r1
rtab	RN	r3
ryp	RN	r2
rup	RN	r4
rvp	RN	r5
rw	RN	r6
rh	RN	r7
ry	RN	r8
ru	RN	r9
rv	RN	r10
rp1	RN	r11
rp2	RN	r12
rt	RN	r14
rt2	RN	r0

 [ torgb=1
 [  tryrgb=0
crv	DCD	104597
cbu	DCD	132201
cgu	DCD	25675
cgv	DCD	53279
ccy	DCD	76309
 ]

 ]
	MACRO
	DORGB 	$rr,$rb,$rt,$ry,$ru,$rv
;rg=ry

 [ trynstr=0
	stmfd 	r13!,{$ru,$rv}

 ]
	LDR	$rt,ccy
	SUB	$ry,$ry,#16
	MUL	$ry,$rt,$ry
	ADD	$ry,$ry,#32768
	LDR	$rt,cbu
	MLA	$rb,$rt,$ru,$ry
	LDR	$rt,crv
        MLA	$rr,$rt,$rv,$ry
	LDR	$rt,cgu
	MUL	$ru,$rt,$ru
        LDR	$rt,cgv
	MLA	$rv,$rt,$rv,$ru
	SUB	$ry,$ry,$rv

;still need to clp and LSR 16


	MOV	$rv,#255

	MOV	$rr,$rr,ASR #16
 	MOVS	$rt,$rr,ASR #8
	EORNE	$rr,$rv,$rt,LSR #24

	MOV	$ry,$ry,ASR #16
 	MOVS	$rt,$ry,ASR #8
	EORNE	$ry,$rv,$rt,LSR #24

	MOV	$rb,$rb,ASR #16
 	MOVS	$rt,$rb,ASR #8
	EORNE	$rb,$rv,$rt,LSR #24

	ORR	$rt,$ry,$rb,LSL #8
	ORR	$rt,$rr,$rt,LSL #8
 [ trynstr=0
	ldmfd	r13!,{$ru,$rv}
 ]

	MEND




	MACRO
	fnwrite	$rout,$ra,$rb

 [ decsize = 1
	strb	$ra,[$rout],#1
	strb	$rb,[$rout],#1
 ]
 [ decsize = 2
	bic	$ra,$ra,#&ff0000
	bic	$ra,$ra,#&ff000000
	orr 	$ra,$ra,$rb,LSL #16
	stmia	$rout!,{$ra}
 ]
 [ decsize = 4
	stmia	$rout!,{$ra,$rb}
 ]


	MEND

	MACRO
	crush0	$rn,$ri,$rj,$rm
			; reduce 00000000 YYYYYYYY UUUUUUUU VVVVVVVV
		      	; to	00000000 00000000 0YYYYYUU UUUVVVVV

;;change this to go to 6Y5UV

;	AND	$ri,$rm,$rn,LSR #16+3	;Ri <- VVVVV
;	AND	$rj,$rm,$rn,LSR #8+3	;Rj <- UUUUU
;	ORR	$ri,$rj,$ri,LSL #5	;ri <- VVVVVUUUUU
;	AND	$rj,$rm,$rn,LSR #3	;rj <- YYYYY
;	ORR	$rn,$rj,$ri,LSL #5	;rn <- VVVVVUUUUUYYYYY

 [ ACCCCR=1
	MOV	$ri,$rn,LSL #8
	SUBS	$ri,$ri,$ri,ASR #5
	ADDPL	$ri,$ri,#(1:SHL:26)
	SUBMI	$ri,$ri,#(1:SHL:26)
	MOV	$ri,$ri,LSR #24+3	;Ri <- VVVVV

	MOV	$rj,$rn,LSL #16
	SUBS	$rj,$rj,$rj,ASR #5
	ADDPL	$rj,$rj,#(1:SHL:26)
	SUBMI	$rj,$rj,#(1:SHL:26)
	MOV	$rj,$rj,LSR #24+3	;Ri <- UUUUU


	ORR	$ri,$rj,$ri,LSL #5	;ri <- VVVVVUUUUU

	MOV	$rj,$rn,LSL #24
	SUB	$rj,$rj,$rj,LSR #6
	ADD	$rj,$rj,#(1:SHL:25)
	MOV	$rj,$rj,LSR #24+2	;Ri <- YYYYYY

	ORR	$rn,$rj,$ri,LSL #6	;rn <- VVVVVUUUUUYYYYYY
 ]
 [ ACCCCR=0
	MOV	$rm,#&1f
	AND	$ri,$rm,$rn,LSR #16+3	;Ri <- VVVVV
	AND	$rj,$rm,$rn,LSR #8+3	;Rj <- UUUUU

	ORR	$ri,$rj,$ri,LSL #5	;ri <- VVVVVUUUUU
	MOV	$rm,#&3f
	AND	$rj,$rm,$rn,LSR #2	;rj <- YYYYYY
	ORR	$rn,$rj,$ri,LSL #6	;rn <- VVVVVUUUUUYYYYYY
 ]

	MEND

	MACRO
	crush1	$rn,$ri,$rj,$rm
	MOV	$rm,#&78
	MOVS	$ri,$rn,LSL #8
	ADDMI	$ri,$ri,#(&1:SHL:25)
	SUBPL	$ri,$ri,#(&1:SHL:25)
	MOV	$ri,$ri,LSR #24+3

	MOVS	$rj,$rn,LSL #16
	ADDMI	$rj,$rj,#(&1:SHL:25)
	ADDPL	$rj,$rj,#(&1:SHL:25)
	MOV	$rj,$rj,LSR #24+3

	ORR	$ri,$rj,$ri,LSL #5	;ri <- VVVVVUUUUU
	MOV	$rm,#&3f
	AND	$rj,$rm,$rn,LSR #2	;rj <- YYYYYY
	ORR	$rn,$rj,$ri,LSL #6	;rn <- VVVVVUUUUUYYYYYY
	MEND

	MACRO
	crush2	$rn,$ri,$rj,$rm
	MOV	$rm,#&78
	MOVS	$ri,$rn,LSL #8
	ADDMI	$ri,$ri,#(&2:SHL:25)
	SUBPL	$ri,$ri,#(&2:SHL:25)
	MOV	$ri,$ri,LSR #24+3

	MOVS	$rj,$rn,LSL #16
	ADDMI	$rj,$rj,#(&2:SHL:25)
	SUBPL	$rj,$rj,#(&2:SHL:25)

	MOV	$rj,$rj,LSR #24+3

	ORR	$ri,$rj,$ri,LSL #5	;ri <- VVVVVUUUUU
	MOV	$rm,#&3f
	AND	$rj,$rm,$rn,LSR #2	;rj <- YYYYYY
	ORR	$rn,$rj,$ri,LSL #6	;rn <- VVVVVUUUUUYYYYYY

	MEND


	MACRO
	crush3	$rn,$ri,$rj,$rm
	MOV	$rm,#&78
	MOVS	$ri,$rn,LSL #8
	ADDMI	$ri,$ri,#(&3:SHL:25)
	SUBPL	$ri,$ri,#(&3:SHL:25)
	MOV	$ri,$ri,LSR #24+3

	MOVS	$rj,$rn,LSL #16
	ADDMI	$rj,$rj,#(&3:SHL:25)
	SUBPL	$rj,$rj,#(&3:SHL:25)
	MOV	$rj,$rj,LSR #24+3

	ORR	$ri,$rj,$ri,LSL #5	;ri <- VVVVVUUUUU
	MOV	$rm,#&3f
	AND	$rj,$rm,$rn,LSR #2	;rj <- YYYYYY
	ORR	$rn,$rj,$ri,LSL #6	;rn <- VVVVVUUUUUYYYYYY
	MEND


	MACRO
	putout  $cm,$cm2

 [ mash =1
 [ dith =1
	crush$cm  rp1,rt,rt2,rh
	crush$cm2 rp2,rt,rt2,rh
 ]
 [ dith /=1
	crush0	rp1,rt,rt2,rh
	crush0	rp2,rt,rt2,rh
 ]
 ]

 [ mash = 3
	mov	rh,#1
	orr	rh,rh,rh,LSL #16
	orr	rh,rh,rh,LSL #8
	bic	rp1,rp1,rh
	bic	rp2,rp2,rh
 ]
 [ ppl = 1
        plook rp1,rp1,rtab
	plook rp2,rp2,rtab
 ]

 	fnwrite ro,rp1,rp2
	MEND



	MACRO
	rin1
        and	rt2,ru,#255
	sub	rt2,rt2,#128
	and	rh,rv,#255
	sub	rh,rh,#128
	and	rt,ry,#255

	MEND
        MACRO
	riny1
 [ trynstr=1
        and	rt2,ru,#255
	sub	rt2,rt2,#128
	and	rh,rv,#255
	sub	rh,rh,#128
 ]
	and	rt,ry,#255*256
	mov	rt,rt,LSR #8
	MEND

	MACRO
	rin2
	and	rt2,ru,#255*256
	mov	rt2,rt2,LSR #8
	sub	rt2,rt2,#128
	and	rh,rv,#255*256
	mov	rh,rh,LSR #8
	sub	rh,rh,#128
	and	rt,ry,#255*256*256
	mov	rt,rt,LSR #16
	MEND

	MACRO
	riny2
  [ trynstr=1
	and	rt2,ru,#255*256
	mov	rt2,rt2,LSR #8
	sub	rt2,rt2,#128
	and	rh,rv,#255*256
	mov	rh,rh,LSR #8
	sub	rh,rh,#128
  ]
	and	rt,ry,#255*256*256*256
	mov	rt,rt,LSR #24
	MEND



	MACRO
	in1


	and	rt,ru,#255
	and	rp1,rv,#255
	orr	rt,rt,rp1,LSL #8	;V1U1
	and	rp1,ry,#255
	orr	rp1,rp1,rt,LSL #8	;V1U1Y1
	mov	rp2,ry,LSR #8
	and	rp2,rp2,#255
	orr	rp2,rp2,rt,LSL #8       ;V1U1Y2

	MEND

	MACRO
        in2


	and	rt,ru,#255*256
	and	rp1,rv,#255*256
	orr	rt,rt,rp1,LSL #8	;V2U200
	and	rp1,ry,#255*256*256
	orr	rp1,rt,rp1,LSR #16	;V2U2Y3
	and	rp2,ry,#255*256*256*256
	orr	rp2,rt,rp2,LSR #24	;V2U2Y4

	MEND

hpix	DCD	0
stt	DCD	0
eort	DCD	&80808080
doframe
	stmfd	r13!,{r4-r12,lr}
        ldr	rw,xpix
	ldr	rh,ypix
	str	rh,hpix
 [ ppl=0 	;no plook, so use extra reg
	mov	rtab,rw
 ]
	ldmia	r0,{ryp,rup,rvp}

iloop	ldr	ru,[rup],#4	;U4U3U2U1
	ldr	rv,[rvp],#4	;V4V3V2V1
	ldr	ry,[ryp]	;Y4Y3Y2Y1
 [ torgb=0
 [ oldeor=1 ;mash/=1

 	eor	ru,ru,#128		;would one ldr+2*eor be faster?
	eor	ru,ru,#128*256
	eor	ru,ru,#128*256*256
	eor	ru,ru,#128*256*256*256

	eor	rv,rv,#128
	eor	rv,rv,#128*256
	eor	rv,rv,#128*256*256
	eor	rv,rv,#128*256*256*256
 ]
 [ oldeor=0
	ldr	rt,eort
	eor	ru,ru,rt
	eor	rv,rv,rt
 ]
 ]
 [ torgb=0
 	in1
 ]
 [ torgb=1
	stmfd	R13!,{rvp,rup}
	rin1
	DORGB  rup,rvp,rp1,rt,rt2,rh
	riny1
	DORGB  rup,rvp,rp2,rt,rt2,rh
 ]
	putout 0,1
 [ torgb=0
	in2
 ]
 [ torgb=1
	rin2
	DORGB  rup,rvp,rp1,rt,rt2,rh
	riny2
	DORGB  rup,rvp,rp2,rt,rt2,rh
 ]

	putout 0,1

	ldr	ry,[ryp,#4]
	mov	ru,ru,ROR #16
	mov	rv,rv,ROR #16
 [ torgb=0
 	in1
 ]
 [ torgb=1
	rin1
	DORGB  rup,rvp,rp1,rt,rt2,rh
	riny1
	DORGB  rup,rvp,rp2,rt,rt2,rh
 ]
	putout 0,1
 [ torgb=0
	in2
 ]
 [ torgb=1
	rin2
	DORGB  rup,rvp,rp1,rt,rt2,rh
	riny2
	DORGB  rup,rvp,rp2,rt,rt2,rh
 ]

	putout 0,1

 [ ppl=1
	ldr	rh,xpix
 ]
 [ ppl=0
	mov	rh,rtab
 ]
	add	ryp,ryp,rh
 [ decsize=1
	add	ro,ro,rh
	sub	ro,ro,#8
 ]
 [ decsize=2
	add	ro,ro,rh,LSL #1
	sub	ro,ro,#16
 ]
 [ decsize=4
	add	ro,ro,rh,LSL #2
	sub	ro,ro,#32
 ]

	ldr	ry,[ryp]
	mov	ru,ru,ROR #16
	mov	rv,rv,ROR #16
 [ torgb=0
 	in1
 ]
 [ torgb=1
	rin1
	DORGB  rup,rvp,rp1,rt,rt2,rh
	riny1
	DORGB  rup,rvp,rp2,rt,rt2,rh
 ]
	putout 2,3
 [ torgb=0
	in2
 ]
 [ torgb=1
	rin2
	DORGB  rup,rvp,rp1,rt,rt2,rh
	riny2
	DORGB  rup,rvp,rp2,rt,rt2,rh
 ]

	putout 2,3


	ldr	ry,[ryp,#4]
	mov	ru,ru,ROR #16
	mov	rv,rv,ROR #16
 [ torgb=0
 	in1
 ]
 [ torgb=1
	rin1
	DORGB  rup,rvp,rp1,rt,rt2,rh
	riny1
	DORGB  rup,rvp,rp2,rt,rt2,rh
 ]
	putout 2,3
 [ torgb=0
	in2
 ]
 [ torgb=1
	rin2
	DORGB  rup,rvp,rp1,rt,rt2,rh
	riny2
	DORGB  rup,rvp,rp2,rt,rt2,rh
 ]

	putout  2,3
 [ torgb=1
	ldmfd	r13!,{rup,rvp}
 ]


	subs	rw,rw,#8
 [ ppl=1
	ldrne	rh,xpix
 ]
 [ ppl=0
	movne	rh,rtab
 ]
 [ decsize=1
	subne	ro,ro,rh
 ]
 [ decsize=2
	subne	ro,ro,rh,LSL #1
 ]
 [ decsize=4
	subne	ro,ro,rh,LSL #2
 ]

	subne	ryp,ryp,rh
	add	ryp,ryp,#8
	bne	iloop

	ldr	rh,hpix
	subs	rh,rh,#2

	str	rh,hpix
 [ ppl=1
	ldr	rw,xpix
 ]
 [ ppl=0
	mov 	rw,rtab
 ]

	bne	iloop




	ldmfd	r13!,{r4-r12,pc}^

;	EXPORT	PatchTable
PatchTable
	ptable
 [ tryrgb=1
crv	*	104597
cbu	*	132201
cgu	*	25675
cgv	*	53279
ccy	*	76309

	GBLA	count

	MACRO
	mtab	$ttt
count	SETA	0
	WHILE	count<128
	DCD	count*$ttt
count	SETA	count+1
	WEND

count	SETA	128
	WHILE	count>0
	DCD	(-count*$ttt)
count	SETA	count-1
	WEND
	MEND

tcrv
	mtab	crv
tcbu
	mtab    cbu
tcgu
	mtab	cgu
tcgv
	mtab	cgv
tccy
	mtab	ccy

 ]

	END
