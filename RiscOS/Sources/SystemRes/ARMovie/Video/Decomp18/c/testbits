#include <stdio.h>
#include <string.h>
#define GLOBAL
#include "config.h"
#include "global.h"
#include "arecon.h"
#include "agetbits.h"
unsigned char biz[640] ;


void printbits(code,bits,len)
int code,bits,len;
{
  int i;
  for (i=0; i<len; i++)
    printf("%d",(code>>(bits-1-i))&1);
  putchar('\n');
}

int main(argc,argv)
int argc;
char * argv[];
{
 int m,n,i,a,b;

 ld=&base;
 ld->source=&biz[0];


 printf("add: %x\n",(int)&biz[0]);
/*  n=rand()%4;
  n=rand()%4;
  n=rand()%4;
  n=1;
  flushbits(n*8);*/

 ainitbits(&biz[0]);
 printf("n: %d thru: %d Source %x \n",n,atbthu(),atbsource());



 for(i=0;i<640;i++)
 {biz[i]=(char)rand();}
 for(i=0;i<640/4;i++){

  m=rand()%8;
  n=rand()%25;
  switch((char)m){
  case 0:
       	  printf("get\n");
          printbits(a=agetbits(n),n,n);
          printbits(b=getbits(n),n,n);
          if(a!=b) printf("\a,a: %d,b %d\n",a,b);
	  break;

  case 1:
       	  printf("show\n");
          printbits(a=ashowbits(n),n,n);
          printbits(b=showbits(n),n,n);
          if(a!=b) printf("\a,a: %d,b %d\n",a,b);
          break;

  case 2:
       	  printf("flush\n");
          aflushbits(n);
           flushbits(n);

           break;
  default:
       	  printf("get1\n");
          printbits(a=agetbits1(),1,1);
          printbits(b=getbits1(),1,1);
          if(a!=b) printf("\a,a: %d,b %d\n",a,b);
	  break;

  }

 }
/* for(i=0;i<16*8;i++)
  {printf("%d",agetbits1());
   if(!((i+1)%8)) putchar('\n');
  }*/
}
