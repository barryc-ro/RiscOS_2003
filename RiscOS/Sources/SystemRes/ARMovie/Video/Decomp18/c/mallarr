/***************************************************************************
 *
 *  File:        mallarr.c
 *
 *  Description: h263 mallarr implementation
 *
 *  Version:     0.0 16 Sep 1997
 *
 *  Author:      Alex Burr (aburr@acorn.com)
 *
 *  Modification History:
 *
 *    Date         Name                  Description
 *    ----------------------------------------------------------------------
 *
 ***************************************************************************/

#include <stdlib.h> /* for size_t*/
#include "memory.h" // was dy_malloc.h

#undef TESET
#ifdef TEST

#include <stdio.h>

int fa[2][3][4][5];
int ****ga;
#endif

/* RJW */
int *get1array(int d1) // removed a * pjg 16/9/97
{
#ifdef TEST
  return malloc((size_t)(d1*sizeof(int)));
#else
  return dy_malloc((size_t)(d1*sizeof(int)));
#endif
}

int *get2array(int d1,int d2)
{
  return dy_malloc((size_t)(d1*d2*sizeof(int)));
}

char *get2arraychar(int d1,int d2)
{
  return dy_malloc((size_t)(d1*d2*sizeof(char)));
}

int *get4array(int d1,int d2,int d3,int d4)
{
  return dy_malloc((size_t)(d1*d2*d3*d4*sizeof(int)));
}


#ifdef TEST
int main(argc,argv)
int argc;
char *argv[];
{
  int i,j,k,l,c=0;
  for(l=0;l<2;l++)
   for(k=0;k<3;k++)
    for(j=0;j<4;j++)
     for(i=0;i<5;i++)
      {
       c++;
       fa[l][k][j][i]=c;
      }
  ga=get4array(2,3,4,5);
  if(ga==NULL)
   {
     printf("malloc failed\n");
     exit(1);
   }

  for(i=0;i<2;i++)
   for(j=0;j<3;j++)
    for(k=0;k<3;k++)
     for(l=0;l<5;l++)
      {
        ga[i][j][k][l]=fa[i][j][k][l];
        printf("g[%d][%d][%d][%d] adr %x = %d \n",i,j,k,l,(int)&ga[i][j][k][l],ga[i][j][k][l]);

      }

}
#endif
