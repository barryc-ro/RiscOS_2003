
      for (comp=0; comp<blk_cnt; comp++) {
        HierProf_Start("clrblock")
#ifdef OLD_CLEARBLOCK
        clearblock(comp);
#else
	memset64(ld->block[comp]);
#endif
	HierProf_Stop()
#ifdef BB_INTRA
	  bp = ld->block[comp];
#ifdef BB_SAC
	    INTRADC_index = decode_a_symbol(cumf_INTRADC);
	    bp[0] = intradctab[INTRADC_index];
/*	    if (trace)
	      printf("INTRADC Index: %d INTRADC: %d \n", INTRADC_index, bp[0]);*/
#else
	    bp[0] = getbits(8);
/*	    if (trace) {
	      printf("DC[%d]: (",comp);
	      printbits((int)bp[0],8,8);
	      printf("): %d\n",(int)bp[0]);
	    }*/
#endif
/*	  if (bp[0] == 128)
	    if (!quiet)
	      fprintf(stderr,"Illegal DC-coeff: 1000000\n");*/
	  if (bp[0] == 255)  /* Spec. in H.26P, not in TMN4 */
	    bp[0] = 128;
	  bp[0] *= 8; /* Iquant */
	  if ( (CBP & (1<<(blk_cnt-1-comp))) ) {
#ifndef BB_SAC
	      getblock(comp,0);
#else
	      get_sac_block(comp,0);
#endif
          }
#else
	  if ( (CBP & (1<<(blk_cnt-1-comp))) ) {
#ifndef BB_SAC
	      getblock(comp,1);
#else
	      get_sac_block(comp,1);
#endif
          }
#endif

//#ifdef HierProf_PROFILE
//	if (fault) {
//	  HierProf__StopClock( ref, HierProf_Clock_GetTimeFreeze());
//	  goto resync;
//	}
//#else
	if (fault) goto resync;
//#endif

      }
