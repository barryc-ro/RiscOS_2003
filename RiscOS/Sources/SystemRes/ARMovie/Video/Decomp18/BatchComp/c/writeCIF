#define OURTYPE 18
/*
read newheader:
	x
	y
	fps
	fpc
	nc


initreader

for i=1 to new_nc
  initcoder
  codechunk
  shutcoder
next i
shutreader
*/
#include "reader.h"
#include "filestuff.h"
#include <string.h>
#include "cdir.h"

typedef struct wr {
  int FramesPerChunk;
  int NumChunks;
  char *sourcename;
  char destname[256];
}WState;

WState writestate;


const flt ffff={125,1};

void parsenewheader(char *headername);
void parsenewheader(char *headername)
     /*leaves armovie open */
{    int type;
     FILE *header;

     char intmp[256];

     header=fopen(headername,"rb");
     if(header==NULL) error("Could not open header file\n");

     fgets(intmp,8,header);
     if(strncmp(intmp,"ARMovie",7)) error("Not an ARMovie header file\n");

     scanret(header,4); /* skip movie name, date, author,*/

     type  = getint(header);
     if(type !=OURTYPE) error("Wrong type\n");
     scanret(header,1);

     readstate.x=getint(header);
     scanret(header,1);
     readstate.y=getint(header);
     scanret(header,1);
     fgets(intmp,255,header);
     if(strstr(intmp,"YUV")==NULL) error(" Not a YUV file\n");

     readstate.outfps=getflt(header);
     scanret(header,5); /* skip sound stuff*/
     writestate.FramesPerChunk=getint(header);
 /*    scanret(header,1);
     writestate.NumChunks=getint(header);*/



}
void parseargs(int argc,char *argv[])
{
  int i;
  for(i=1;i<argc;i++)
  {if(argv[i][0]=='-')
   {
     if(0==strcmp(argv[i],"-source"))
     {if(++i<argc)
       writestate.sourcename=argv[i];
      continue;
     }
     if(0==strcmp(argv[i],"-dest"))
      {if(++i<argc)
        { strcpy(writestate.destname,argv[i]);
          if(argv[i][strlen(argv[i])]!='.')
          strcat(writestate.destname,".");
        }

       continue;

      }
   }
  }
}


int main(int argc,char *argv[])
{ FILE *chunkout;
  unsigned char *cfout;
  char filename[256];
  char dirname[256];

  int i,j,leng,leng2;

  parseargs(argc,argv);
  readstate.ArmovieName=writestate.sourcename;
  strcpy(filename,writestate.destname);
  strcat(filename,"header");
  parsenewheader(filename); /* sets up readstate*/
  initreader(readstate);
  writestate.NumChunks=(readstate.FramesPerChunk*(readstate.NumChunks+1))/writestate.FramesPerChunk-1;
  /* Ignores leftover frames*/
  leng= readstate.x*readstate.y*3/2; /* testing*/
   for(i=0;i<=writestate.NumChunks;i++)
   {
    sprintf(filename,"%sImages%d.%2.2d",writestate.destname,i/77,i%77);
    sprintf(dirname,"%sImages%d",writestate.destname,i/77);
    if(0!=cdir(dirname)) error("could not create dir\n");
    chunkout=fopen(filename,"wb");
    if(chunkout==NULL)
     error("Could not open output file\n");
    for(j=0;j<writestate.FramesPerChunk;j++)
     {
      cfout=readframe();
      leng2=fwrite(cfout,sizeof(unsigned char),leng,chunkout);
      if(leng!=leng2) error("Error writing output\n");
     }
    fclose(chunkout);
   }
  shutreader();
}
