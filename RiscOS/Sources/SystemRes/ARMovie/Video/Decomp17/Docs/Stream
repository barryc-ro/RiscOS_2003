Definition of the moving blocks data stream
===========================================

The data stream should be considered as a stream of bits with the least
significant bit arriving first. The extracted codes from this stream
construct a new frame from data which may be from the data stream,
or the previous frame. The new frame is constructed as an array of 4x4 pixel
blocks, with each pixel block constructed in a number of ways:

* Generate a new 4 x 4 pixel block from data in the stream

* Copy a 4 x 4 pixel block from the previous frame

* Copy a 4 x 4 pixel block from the previous parts of this frame

* Construct a 4 x 4 pixel block in sub-blocks of 2 x 2 pixel blocks. Each 2
x 2 pixel block may be a copy previous parts of this frame, or constructed
from data in the stream.

A frame is scanned from top left to bottom right so that when a copy of a
pixel block from this frame is triggered the source must be from existing
pixels. That is, the source must be non-overlapping and above or to the left
of the new block.

A 4 x 4 pixel block of data is supplied in YUV format with 4 x 4 Y values
and 1 x 1 U and V values. The Y, U and V values are each 5 bits long. This
means that 90 bits are supplied for the data in a 4 x 4 pixel block.

A 2 x 2 pixel block of data is supplied in YUV format with 2 x 2 Y values
and 1 x 1 U and V values. The Y, U and V values are each 5 bits long. This
means that 30 bits are supplied for the data in a 2 x 2 pixel block.

A 4 x 4 pixel block copy from the frame being constructed could, in theory,
come from any 4 x 4 area already constructed. In practice it is only worth
providing encodings for close positions. As the source must not overlap the
destination only 8 source positions are provided for:
        x offset        y offset
        2 left          4 up
        1 left          4 up
        none            4 up
        1 right         4 up
        2 right         4 up
        4 left          none up
        4 left          1 up
        4 left          2 up

Similarly when a 2 x 2 area is being generated by copying from the frame
under construction the following offsets are given encodings:
        x offset        y offset
        2 left          2 up
        1 left          2 up
        none            2 up
        1 right         2 up
        2 right         2 up
        2 left          1 up
        2 left          none
        3 left          none


Here's how the encoding works:

Note: binary numbers are written big endian (ie lsb first). This is show
the bit which is interpreted first to the left so .

At the top level:
00      4 x 4 stationary block
01      4 x 4 move case
10      4 x 4 data
11      4 x 4 treated as four 2 x 2 cases

4 x 4 data is encoded as:
YYYYYYYYYYYYYYYYUV
where each Y, U and V is 5 bits. The Ys are supplied in this order:
         1  2  3  4
         5  6  7  8
         9 10 11 12
        12 14 15 16

The four 2 x 2 cases are encoded as:
00      2 x 2 stationary block
01      2 x 2 data
1       2 x 2 move case

2 x 2 data is encoded as:
YYYYUV
Where each Y, U and V is 5 bits. The Ys are supplied in this order:
         1  2
         3  4

A move case (both 4 x 4 and 2 x 2) is encoded as follows:
00xxx           temporal copy from a place where max(x dist, y dist)=1
01xxxx          temporal copy from a place where max(x dist, y dist)=2
10xxxxxx(x)     temporal copy from a place where max(x dist, y dist)=3 (or 4),
                OR spatial copy
11xxxxxxxx..    temporal copies for rest

temporal copy = copy from previous(time) frame.
spatial copy = copy from previous(position) places in current(time) frame.

[T](x,y) specifies a temporal copy of (x,y) distance
[S](x,y) specifies a spacial copy of (x,y) distance
  x < 0 specifies the source is to the left of the destination
  y < 0 specifies the source is above the destination

In detail the copies are defined as:

00xxx
  0               [T](-1,-1)
  1               [T](0,-1)
  2               [T](1,-1)
  3               [T](-1,0)
  4               [T](1,0)
  5               [T](-1,1)
  6               [T](0,1)
  7               [T](1,1)

01xxxx
  0              [T](-2,-2)
  1              [T](-1,-2)
  2              [T](0,-2)
  3              [T](1,-2)
  4              [T](2,-2)
  5              [T](-2,-1)
  6              [T](2,-1)
  7              [T](-2,0)
  8              [T](2,0)
  9              [T](-2,1)
  10             [T](2,1)
  11             [T](-2,2)
  12             [T](-1,2)
  13             [T](0,2)
  14             [T](1,2)
  15             [T](2,2)

10xxxxx(x)
type (a) and type (b):

               4 x 4 case:      2 x 2 case:
   0           [S](-2,-4)       [S](-2,-2)
   1           [S](-1,-4)       [S](-1,-2)
   2           [S](0,-4)        [S](0,-2)
   3           [S](1,-4)        [S](1,-2)
   4           [S](2,-4)        [S](2,-2)
   5           [S](-4,0)        [S](-2,-1)
   6           [S](-4,-1)       [S](-2,0)
   7           [S](-4,-2)       [S](-3,0)
   8           [T](-3,-3)
   9           [T](-2,-3)
  10           [T](-1,-3)
  11           [T](0,-3)
  12           [T](1,-3)
  13           [T](2,-3)
  14           [T](3,-3)
  15           [T](-3,-2)
  16           [T](3,-2)
  17           [T](-3,-1)
  18           [T](3,-1)
  19           [T](-3,0)
  20           [T](3,0)
  21           [T](-3,1)
  22           [T](3,1)
  23           [T](-3,2)
  24           [T](3,2)
  25           [T](-3,3)
  26           [T](-2,3)
  27           [T](-1,3)
  28           [T](0,3)
  29           [T](1,3)
  30           [T](2,3)
  31           [T](3,3)
type (b) only
  32           [T](-4,-4)
  33           [T](-3,-4)
  34           [T](-2,-4)
  35           [T](-1,-4)
  36           [T](0,-4)
  37           [T](1,-4)
  38           [T](2,-4)
  39           [T](3,-4)
  40           [T](4,-4)
  41           [T](-4,-3)
  42           [T](4,-3)
  43           [T](-4,2)
  44           [T](4,2)
  45           [T](-4,1)
  46           [T](4,1)
  47           [T](-4,0)
  48           [T](4,0)
  49           [T](-4,1)
  50           [T](4,1)
  51           [T](-4,2)
  52           [T](4,2)
  53           [T](-4,3)
  54           [T](4,3)
  55           [T](-4,4)
  56           [T](-3,4)
  57           [T](-2,4)
  58           [T](-1,4)
  59           [T](0,4)
  60           [T](1,4)
  61           [T](2,4)
  62           [T](3,4)
  63           [T](4,4)

Rest of codes:

11xxxxxx
