; env.s

	AREA |env$$code|, CODE, READONLY

XOS_WriteC	EQU	&20000
XOS_Write0	EQU	&20002
XOS_NewLine	EQU	&20003
XOS_File	EQU	&20008
XOS_Module	EQU	&2001e

; --------------------------------------------------------------------------------
	EXPORT malloc
malloc
	stmfd	sp!,{lr}
	mov	r3, r0
	mov	r0, #6
	swi	XOS_Module
	mov	r0, r2
	ldmfd	sp!,{pc}^

; --------------------------------------------------------------------------------
	EXPORT free
free
	stmfd	sp!,{lr}
	mov	r2, r0
	mov	r0, #7
	swi	XOS_Module
	ldmfd	sp!,{pc}^

; --------------------------------------------------------------------------------
	EXPORT puts
puts
	stmfd	sp!,{lr}
	swi	XOS_Write0
	swi	XOS_NewLine
	ldmfd	sp!,{pc}^
	
; --------------------------------------------------------------------------------
	EXPORT savemem
savemem
	stmfd	sp!,{r4-r5,lr}
	mov	r4, r0
	mov	r5, r1
	mov	r1, r2
	mov	r0, #10
	mov	r2,   #&ff0
	orr	r2, r2, #&d
	swi	XOS_File
	ldmfd	sp!,{r4-r5,pc}^

	EXPORT loadfile
loadfile
	stmfd	sp!, {r4-r7,lr}
	mov	r2, r1
	mov	r1, r0
	mov	r0, #255
	mov	r3, #0
	swi	XOS_File
	ldmfd	sp!, {r4-r7,pc}^

; --------------------------------------------------------------------------------
	EXPORT putu32
putu32
	stmfd	sp!, {lr}
	mov	r3, r0
	mov	r2, #28
	adrl	r1, hex
_loop_putu32
	mov	r0, r3, lsr r2
	and	r0, r0, #15
	ldrb	r0, [r1, r0]
	swi	XOS_WriteC
	subs	r2, r2, #4
	bge	_loop_putu32
	swi	XOS_NewLine
	ldmfd	sp!,{pc}^

hex	DCB "0123456789abcdef"
	ALIGN

; --------------------------------------------------------------------------------
	IMPORT |Image$$ZI$$Base|
	IMPORT |Image$$ZI$$Limit|

zi_base		DCD |Image$$ZI$$Base|
zi_limit	DCD |Image$$ZI$$Limit|

	EXPORT get_zi
get_zi
	ldr	r0, zi_limit
	ldr	r1, zi_base
	sub	r0, r0, r1
	movs	pc, lr

	END
