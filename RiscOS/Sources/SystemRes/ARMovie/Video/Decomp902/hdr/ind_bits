; idn_bits.hdr
; Macros to do some indeo codec things

SKIP	EQU 0
COPY	EQU 1

; --------------------------------------------------------------------------------
	MACRO
$label	m_copyQuad $dst, $src, $nrows, $pitch, $tmp1, $tmp2

$label	tst	$src, #3
	ldreq	$tmp2, [$src]
	beq	$label.aligned
	;
	ldrb	$tmp2,[$src,#3]
	ldrb	$tmp1,[$src,#2]
	orr	$tmp2,$tmp1,$tmp2,lsl#8
	ldrb	$tmp1,[$src,#1]
	orr	$tmp2,$tmp1,$tmp2,lsl#8
	ldrb	$tmp1,[$src]
	orr	$tmp2,$tmp1,$tmp2,lsl#8
$label.aligned
	str	$tmp2, [$dst]
	add	$src, $src, $pitch, lsl#2
	add	$dst, $dst, $pitch, lsl#2
	subs	$nrows, $nrows, #1
	bgt	$label
	
	MEND

; --------------------------------------------------------------------------------
	MACRO
$label	m_copyOct $dst, $src, $nrows, $pitch, $tmp1, $tmp2, $tmp3

$label	tst	$src, #3
	ldmeqia $src,{$tmp2,$tmp3}
	beq	$label.aligned
	;
	ldrb	$tmp2, [$src,#3]
	ldrb	$tmp1, [$src,#2]
	orr	$tmp2, $tmp1, $tmp2, lsl#8
	ldrb	$tmp1, [$src,#1]
	orr	$tmp2, $tmp1, $tmp2, lsl#8
	ldrb	$tmp1, [$src]
	orr	$tmp2, $tmp1, $tmp2, lsl#8
	;
	ldrb	$tmp3, [$src,#7]
	ldrb	$tmp1, [$src,#6]
	orr	$tmp3, $tmp1, $tmp3, lsl#8
	ldrb	$tmp1, [$src,#5]
	orr	$tmp3, $tmp1, $tmp3, lsl#8
	ldrb	$tmp1, [$src,#4]
	orr	$tmp3, $tmp1, $tmp3, lsl#8
	;
$label.aligned
	stmia	$dst, {$tmp2,$tmp3}
	add	$dst, $dst, $pitch,lsl#2
	add	$src, $src, $pitch,lsl#2
	;
	subs	$nrows, $nrows, #1		; nrows can be 2,4,6,8
	bgt	$label

	MEND
	
; --------------------------------------------------------------------------------
	MACRO
$label	m_fillQuad $dst, $value, $nrows, $pitch

$label	str	$value, [$dst], $pitch, lsl#2
	str	$value, [$dst], $pitch, lsl#2
	subs	$nrows, $nrows, #2
	bgt	$label
	
	MEND
	
; --------------------------------------------------------------------------------
	MACRO
$label	m_fillOct $dst, $value1, $value2, $nrows, $pitch

$label	stmia	$dst, {$value1, $value2}
	add	$dst, $dst, $pitch, lsl#2
	subs	$nrows, $nrows, #1
	bgt	$label

	MEND

; --------------------------------------------------------------------------------
	MACRO
$label	m_interpolateQuad $q, $pitch, $tmp1, $tmp2

$label	ldr	$tmp1, [$q, -$pitch, lsl#2]
	ldr	$tmp2, [$q, $pitch, lsl#2]
	mov	$tmp1, $tmp1, lsr#1
	add	$tmp1, $tmp1, $tmp2, lsr#1
	bic	$tmp1, $tmp1, #&80000000
	bic	$tmp1, $tmp1, #&00800000
	bic	$tmp1, $tmp1, #&00008000
	bic	$tmp1, $tmp1, #&00000080
	str	$tmp1, [$q]
	
	MEND

; --------------------------------------------------------------------------------
	MACRO
$label	m_interpolateOct $q, $pitch, $tmp1, $tmp2

$label	ldr	$tmp1, [$q, -$pitch, lsl#2]
	ldr	$tmp2, [$q, $pitch, lsl#2]
	mov	$tmp1, $tmp1, lsr#1
	add	$tmp1, $tmp1, $tmp2, lsr#1
	bic	$tmp1, $tmp1, #&80000000
	bic	$tmp1, $tmp1, #&00800000
	bic	$tmp1, $tmp1, #&00008000
	bic	$tmp1, $tmp1, #&00000080
	str	$tmp1, [$q], #4
	;
	ldr	$tmp1, [$q, -$pitch, lsl#2]
	ldr	$tmp2, [$q, $pitch, lsl#2]
	mov	$tmp1, $tmp1, lsr#1
	add	$tmp1, $tmp1, $tmp2, lsr#1
	bic	$tmp1, $tmp1, #&80000000
	bic	$tmp1, $tmp1, #&00800000
	bic	$tmp1, $tmp1, #&00008000
	bic	$tmp1, $tmp1, #&00000080
	str	$tmp1, [$q]

	MEND

; --------------------------------------------------------------------------------
	MACRO
$label	m_monoOct $dst, $pixel, $pitch, $tmp1, $flag

$label	and	$tmp1, $pixel, #&7f
	orr	$tmp1, $tmp1, $tmp1, lsl#8
	orr	$tmp1, $tmp1, $tmp1, lsl#16
	mov	$pitch, $pitch, lsl#2
	sub	$pitch, $pitch, #4
	;
	str	$tmp1, [$dst], #4
	str	$tmp1, [$dst], $pitch
	str	$tmp1, [$dst], #4
	str	$tmp1, [$dst], $pitch
	str	$tmp1, [$dst], #4
	str	$tmp1, [$dst], $pitch
	str	$tmp1, [$dst], #4
	str	$tmp1, [$dst], $pitch
	str	$tmp1, [$dst], #4
	str	$tmp1, [$dst], $pitch
	str	$tmp1, [$dst], #4
	str	$tmp1, [$dst], $pitch
	str	$tmp1, [$dst], #4
	str	$tmp1, [$dst], $pitch
	str	$tmp1, [$dst], #4
	str	$tmp1, [$dst], $pitch
	ands	$flag, $pixel, #&80
	
	MEND

; --------------------------------------------------------------------------------
	MACRO
$label	m_correctDyads $dst, $src, $table, $index01, $index23, $tmp1, $tmp2, $tmp3

$label	ldrb	$tmp2, [$src,#1]
	ldrb	$tmp1, [$src]
	orr	$tmp2, $tmp1, $tmp2, lsl#8
	;
	ldrb	$tmp3, [$src, #3]
	ldrb	$tmp1, [$src, #2]
	orr	$tmp3, $tmp1, $tmp3, lsl#8
	;
	ldr	$tmp1, [$table, $index01, lsl#2]
	add	$tmp2, $tmp2, $tmp1
	;
	ldr	$tmp1, [$table, $index23, lsl#2]
	add	$tmp3, $tmp3, $tmp1
	orr	$tmp2, $tmp2, $tmp3, lsl#16
	str	$tmp2, [$dst]
	
	MEND

; --------------------------------------------------------------------------------
	MACRO
$label	m_getCount $p, $type, $tmp

$label	ldrb	$p, [$p]
	mov	$tmp, #COPY
	str	$tmp, [$type]
	mov	$tmp, #SKIP
	cmp	$p, #32
	subgt	$p, $p, #32
	strgt	$tmp, [$type]
	MEND
	
; --------------------------------------------------------------------------------
	MACRO
$label	m_repeat_putback $tmp0, $tmp1, $tmp2, $tmp3

$label	adrl	$tmp0, repeating
	ldr	$tmp1, [$tmp0]
	cmp	$tmp1, #0
	movne	$tmp1, #0
	strne	$tmp1, [$tmp0]
	bne	$label.exit
	adrl	$tmp2, DataStream
	mov	$tmp1, #1
	ldr	$tmp3, [$tmp2]
	sub	$tmp3, $tmp3, #1
	str	$tmp1, [$tmp0]
	str	$tmp3, [$tmp2]
$label.exit
	MEND

	END
