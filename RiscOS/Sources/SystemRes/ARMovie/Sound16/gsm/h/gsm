/***************************************************************************
 *
 *  File:        GSM:gsm.h
 *
 *  Description: GSM codec C header file
 *
 *  Version:     1.0 8 Oct 1997
 *
 *  Author:      Pete Goodliffe (pgoodliffe@acorn.co.uk)
 *               from source by Jutta Degener and Carsten Bormann,
 *               Technische Universitaet Berlin
 *               Please see their COPYRIGHT file
 *
 *  Modification History:
 *
 *    Date         Name                  Description
 *    ----------------------------------------------------------------------
 *
 ***************************************************************************/

#ifndef GSM_H
#define GSM_H

//#include "gsm_gsm.h"
#include "private.h"

////////////////////////////////////////////////////////////////////////////
// state structure for an GSM conversion pass

typedef struct gsm_mono_state *gsm_mono;

typedef struct gsm_stereo_state *gsm_stereo;


////////////////////////////////////////////////////////////////////////////
// initialising a GSM pass

extern int  gsm_mono_sizeof(void);
extern void gsm_mono_init(gsm_mono);

extern int  gsm_stereo_sizeof(void);
extern void gsm_stereo_init(gsm_stereo);


////////////////////////////////////////////////////////////////////////////
// encoding/decoding 16 bit signed linear samples <--> GSM
//    encodes a whole GSM frame (160 samples <--> 33 byte frame)
//    unless stereo when 320 samples, interleaved L/R <--> 2 frames, L then R

extern void gsm_mono_coder (
    short indata[],                  // ptr to input data:  sign 16 bit lin
    unsigned char outdata[],         // ptr to output buffer: char stream
    gsm_mono state                   // coder state structure
);

extern void gsm_stereo_coder (
    short indata[],                  // ptr to input data:  sign 16 bit lin
    unsigned char outdata[],         // ptr to output buffer: char stream
    gsm_stereo state                 // coder state structure
);

// both decoders return zero if successful, else error

extern int gsm_mono_decoder (
    unsigned char indata[],          // ptr to input data: GSM char stream
    short outdata[],                 // ptr to output buffer: sign 16 bit lin
    gsm_mono state                   // decoder state structure
);

extern int gsm_stereo_decoder (
    unsigned char indata[],          // ptr to input data: GSM char stream
    short outdata[],                 // ptr to output buffer: sign 16 bit lin
    gsm_stereo state                 // decoder state structure
);

////////////////////////////////////////////////////////////////////////////
// nasty bobbins used elsewhere

typedef struct gsm_state * 	gsm;
typedef short		   	gsm_signal;		// signed 16 bit
typedef unsigned char		gsm_byte;
typedef gsm_byte 		gsm_frame[33];		// 33 * 8 bits

#define	GSM_MAGIC		0xD		  	// 13 kbit/s RPE-LTP

#define	GSM_OPT_VERBOSE		1
#define	GSM_OPT_FAST		2
#define	GSM_OPT_LTP_CUT		3
#define	GSM_OPT_WAV49		4
#define	GSM_OPT_FRAME_INDEX	5
#define	GSM_OPT_FRAME_CHAIN	6

////////////////////////////////////////////////////////////////////////////


#endif // GSM_H
