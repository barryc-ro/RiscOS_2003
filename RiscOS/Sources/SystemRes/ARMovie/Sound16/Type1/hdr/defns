;	hdr.defns
;
;**************************************************************************
;
;	Compile-time variable definitions
;

DMABufferSize * 416 		; 512 is the max value allowed
				; 8 bit code sets this to 416

; SoundDMA bits

swi_Sound_Configure             * &40140

; SoundChannels bits

swi_Sound_Volume                * &60180

; Sound linear handler settings

SoundLinearHandler 		* 3
swi_Sound_SampleRate		* &60146
swi_Sound_LinearHandler		* &60145
swi_Sound_Mode			* &60144

                                ^ 0
Sound_OldRate 			# 4
Sound_End 			* @

	GBLA	SoundWorkspaceMax

SoundWorkspaceMax SETA		Sound_End

; Shared sound settings

SharedSound 			* 2
swi_SharedSound_SampleRate	* &6B446
swi_SharedSound_InstallHandler	* &6B440
swi_SharedSound_RemoveHandler	* &6B441
swi_SharedSound_HandlerVolume	* &6B443

                                ^ 0
SharedSound_HandlerNumber	# 4
SharedSound_OldSampleRate	# 4
SharedSound_End 		* @

	[ SharedSound_End > SoundWorkspaceMax
SoundWorkspaceMax SETA SharedSound_End
	]

; Audio Control settings

AudioControl 			* 1
swi_AudioControl_LinearHandler 	* &6D080

                                ^ 0
AudioControl_OldRate		# 4
AudioControl_End		* @

	[ AudioControl_End > SoundWorkspaceMax
SoundWorkspaceMax SETA AudioControl_End
	]

; Main workspace definitions

workspaceMax 			* 120

                                ^ 0
workspace_soundOn		# 1
workspace_currentPlayBuffer	# 1
workspace_currentDataBuffer	# 1
                                # ((@+3):AND::NOT:3)-@
workspace_Frequency		# 4
workspace_Accumulator		# 4
workspace_SystemRate	 	# 4
workspace_OutputDriver		# 4
workspace_muteBlock		# 4
workspace_OldBufferSize		# 4
workspace_CurrentBufferPtr	# 4
workspace_FillInProgress	# 4
        [ realtime
workspace_InputBytesToSkip      # 4
        ]
workspace_SoundVolume		# 4
workspace_SoundWorkspace	* @
workspace_end 			* @+SoundWorkspaceMax

	ASSERT workspace_end <= workspaceMax

; Mute block is a 64 byte block

muteBlock_GlobalFlags		* 0
muteBlock_RealTimeModeFlag	* 4
muteBlock_Frequency32		* 8
muteBlock_Frequency24		* 12
muteBlock_Quality		* 16
muteBlock_Stereo		* 17
muteBlock_ControlWord		* 20
; Bytes 18-63 are reserved by Acorn for future expansion

pauseFlag			* 1:SHL:0
muteFlag			* 1:SHL:1
stopFlag			* 1:SHL:2

sndflag_fixedClock		* 1:SHL:0
sndflag_qualityCosts		* 1:SHL:1
sndflag_soundDisabled		* 1:SHL:2
sndflag_AudioControlAware	* 1:SHL:3


flag_mix			* 1:SHL:0
flag_quality			* 1:SHL:1
flag_stereo			* 1:SHL:29
flag_volumeStored		* 1:SHL:30
flag_mute			* 1:SHL:31


; Each of the two buffers has 16 bytes of header information
;   followed by the data itself

buffer_Len 	* 0		; Length of data in the buffer
buffer_fullFlag * 4		;  Buffer full if = 0, empty if = 1
buffer_Pointer 	* 8		; Current position in the buffer
; Note that there are only 12 bytes in the header
buffer_data 	* 12		; Start of data in buffer

bufferFullBit 	* 1
bufferFull 	* 0
bufferEmpty 	* 1

	END
