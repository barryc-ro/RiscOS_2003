/***************************************************************************
 *
 *  File:        ADPCM:adpcm.h
 *
 *  Description: ADPCM codec C header file
 *
 *  Version:     1.0 19 Aug 1997
 *
 *  Author:      Pete Goodliffe (pgoodliffe@acorn.co.uk)
 *               Passed on from srose
 *               From an algorithm passed on from Mark Taunton
 *
 *  Modification History:
 *
 *    Date         Name                  Description
 *    ----------------------------------------------------------------------
 *    19 Aug 1997  Pete Goodliffe        Added adpcm_sizeof() & adpcm_init()
 *                                       for use in Replay Encode/Decode
 *    19 Aug 1997  Pete Goodliffe        Added adpcm_mono_decoder for easier
 *                                       calling from a m/c veneer
 *    1 Oct 1997   Pete Goodliffe        made separate mono & stereo versions
 *                                       of fns to simplify params for APCS
 *
 ***************************************************************************/

#ifndef ADPCM_H
#define ADPCM_H

////////////////////////////////////////////////////////////////////////////
// state structure for an ADPCM conversion pass

struct adpcm_mono_state {
    short    valprev;    // Previous output value
    char     index;      // Index into stepsize table
};

struct adpcm_stereo_state {
    short    valprev_l;  // Previous output value     - left
    char     index_l;    // Index into stepsize table - left
    char     nothing;    // Align
    short    valprev_r;  // Previous output value     - right
    char     index_r;    // Index into stepsize table - right
};


////////////////////////////////////////////////////////////////////////////
// initialising an ADPCM pass

extern int  adpcm_mono_sizeof(void);
extern void adpcm_mono_init(struct adpcm_mono_state *state);

extern int  adpcm_stereo_sizeof(void);
extern void adpcm_stereo_init(struct adpcm_stereo_state *state);


////////////////////////////////////////////////////////////////////////////
// encoding/decoding 16 signed linear samples <--> ADPCM

// returns the size of compressed data created in bytes
extern int adpcm_mono_coder (
    short indata[],                  // ptr to input data:  sign 16 bit lin
    unsigned char outdata[],         // ptr to output buffer: char stream
    int len,                         // no samples to convert
    struct adpcm_mono_state *state   // coder state structure
);

// returns the size of compressed data created in bytes
extern int adpcm_stereo_coder (
    short indata[],                  // ptr to input data:  sign 16 bit lin
    unsigned char outdata[],         // ptr to output buffer: char stream
    int len,                         // no samples to convert per channel
    struct adpcm_stereo_state *state // coder state structure
);

extern int adpcm_mono_decoder (
    unsigned char indata[],          // ptr to input data: ADPCM char stream
    short outdata[],                 // ptr to output buffer: sign 16 bit lin
    int len,                         // no samples
    struct adpcm_mono_state *state   // decoder state structure
);

extern int adpcm_stereo_decoder (
    unsigned char indata[],          // ptr to input data: ADPCM char stream
    short outdata[],                 // ptr to output buffer: sign 16 bit lin
    int len,                         // no samples per channel
    struct adpcm_stereo_state *state // decoder state structure
);

#endif // ADPCM_H
