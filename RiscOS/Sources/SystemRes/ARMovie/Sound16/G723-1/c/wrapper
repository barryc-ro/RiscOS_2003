/*
 * wrapper.c: A dummy PN style decompressor
 */
#include "typedef.h"
#include "basop.h"
#include "cst_lbc.h"
#include "tab_lbc.h"
#include "coder.h"
#include "decod.h"
#include "exc_lbc.h"
#include "util_lbc.h"
#include "cod_cng.h"
#include "dec_cng.h"
#include "vad.h"

extern Flag  UseHp;
extern Flag  UsePf;
extern Flag  UseVx;
extern enum  Wmode    WrkMode;
extern enum  Crate    WrkRate;

/* Global variables */
enum  Crate    WrkRate = Rate63 ;

int   PackedFrameSize[2] = {
   24 ,
   20
   } ;

Flag    UseHp = True ;
Flag    UsePf = True ;
Flag    UseVx = False ;
Flag    UsePr = True ;

/* Prototypes */
int InitDecoder(void);
int Decode(void * inBuf, int inLength, void *shBuf,
	short *numItemsOut, int presentBitfield);
void FreeDecoder(void);
void SetFlavor(int q);

void WrapperInit(int q) {

  Init_Decod( ) ;

  /* Init Comfort Noise Functions */
  if( UseVx ) {
    Init_Vad();
    //Init_Cod_Cng( );
  }
  Init_Dec_Cng( );
}

void WrapperDecompress(char *in_data,  int  in_len,
                       char *out_data, int *out_len) {
  int info, size;

  *out_len = 0;
  while (in_len > 0) {
    info = in_data[0] & 3;
    switch (info) {
      case 2: {
        size = 4;
        break;
      }
      case 3: {
        size = 1;
        break;
      }
      case 1: {
        size = 20;
        break;
      }
      case 0: {
        size = 24;
        break;
      }
    }
    Decod((Word16 *)out_data, in_data, 0);
    out_data += 240*2;
    *out_len += 240*2;
    in_data += size;
    in_len -= size;
  }
}

void WrapperFree(void) {

}
