        GET     Hdr:ListOpts
        GET     Hdr:APCS.<APCS>

; converted to ObjAsm format commenting out original differences

;#include "use_asm.h"

	AREA |C$$CODE|, CODE, READONLY

;#if !defined(RISC_OS)
;fp      .req    r11
;ip      .req    r12
;sp      .req    r13
;lr      .req    r14
;pc      .req    r15
;#endif
fp	RN	r11
ip	RN	r12
sp	RN	r13
lr	RN	r14
pc	RN	r15

;        .text

;the_bs_adr:
;#if defined(RISC_OS)
;	.word	the_bs
	IMPORT	the_bs
the_bs_adr	DCD	the_bs
;#else
;	.word	_the_bs
;#endif

;#if USE_ASM
;        .global _getbits, getbits
;_getbits:
;getbits:
	EXPORT	getbits
getbits
;#endif

;#if defined(PROF) && !defined(RISC_OS)
;	mov	ip, lr
;	bl	mcount
;	.word	getbits_pr
;#endif
	ldr	r2, the_bs_adr
	ldmia	r2, {r1,r3}
	cmp	r0, r1
	bgt	%f10 ;10f
	mvn	ip, #0
	ldr	r3, [r3, #0]
	bic	r3, r3, ip, lsl r1
	sub	r1, r1, r0
	mov	r0, r3, lsr r1
	str	r1, [r2, #0]
        Return  , LinkNotStacked        ; movs	pc, lr
;10:	rsb	r0, r0, #32
10	rsb	r0, r0, #32
	cmp	r1, #0
	beq	%f20 ;20f
;#if defined(RISC_OS)
        str     lr, [sp, #-4]!  ; stmfd	sp!, {lr}       ; cannot use sl in RISC OS mode
	ldr	lr, [r3], #4
	rsb	ip, r1, #32
	mov	ip, lr, lsl ip
	mov	ip, ip, lsr r0
	add	r1, r0, r1
	ldr	r0, [r3]
	orr	r0, ip, r0, lsr r1
	stmia	r2, {r1,r3}
        Return                          ; ldmfd	sp!, {pc}^
;#else
;	ldr	sl, [r3], #4			; for RISC iX, use sl freely without saving
;	rsb	ip, r1, #32
;	mov	ip, sl, lsl ip
;	mov	ip, ip, lsr r0
;	add	r1, r0, r1
;	ldr	r0, [r3]
;	orr	r0, ip, r0, lsr r1
;	stmia	r2, {r1,r3}
;	movs	pc, lr
;#endif
;20:	ldr	ip, [r3, #4]!
20	ldr	ip, [r3, #4]!
	stmia	r2, {r0,r3}
	mov	r0, ip, lsr r0
	Return  , LinkNotStacked        ; movs	pc, lr


;	.data
;getbits_pr:
;	.word	0

getbits_pr	DCD	0

	END
