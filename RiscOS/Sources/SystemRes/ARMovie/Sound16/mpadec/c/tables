/* tables.h */

// added in Alex Burr's MPEG II inclusions 28 Jan 98

#include <stdio.h>

#include "mpa.h"
#include "fxptparams.h"
#include "soundtypes.h"
#include "frame.h"
#include "tables.h"

char *mode_name[4] = { "stereo", "joint stereo", "dual channel", "mono" };

int sample_rate1[4] = { 44100, 48000, 32000, 0 };
int sample_rate2[4] = { 22050, 24000, 16000, 0 };

int LI_bitrate_M1[14] = // altered name 28 Jan 98
{
     32000,  64000,  96000, 128000, 160000, 192000, 224000,
    256000, 288000, 320000, 352000, 384000, 416000, 448000,
};
int LII_bitrate_M1[14] =  // altered name 28 Jan 98
{
     32000,  48000,  56000,  64000,  80000,  96000, 112000,
    128000, 160000, 192000, 224000, 256000, 320000, 384000,
};
int LIII_bitrate_M1[14] = // altered name 28 Jan 98
{
     32000,  40000,  48000,  56000,  64000,  80000,  96000,
    112000, 128000, 160000, 192000, 224000, 256000, 320000,
};

// added these two 28 Jan 98
int LI_bitrate_M2[14] =
{
     32000,  48000,  56000,  64000,  80000,  96000, 112000,
    128000, 144000, 160000, 176000, 192000, 224000, 256000,
};
int LII_bitrate_M2[14] =
{
      8000,  16000,  24000,  32000,  40000,  48000,  56000,
     64000,  80000,  96000, 112000, 128000, 144000, 160000,
};

typedef struct
{
    int sblimit;
    al_table table;
} alloc_table;

#define SBINFO(b,g,q) { (b) ? (b) - 1 : 0, g, (g) ? ((q) == 3 ? 2 : (q)) : (q) == 2 ? 0 : (q) - 3 }

// added 28 Jan 98
static alloc_table alloc_M2 =
{
    30,
{ { {					/* 1 */
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
},
{					/* 1 */
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
},
{					/* 1 */
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
},
{					/* 1 */
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
},
{					/* 10 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 10 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 10 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 10 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 10 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 10 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 10 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
},
{					/* 10 */
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
} } }
};

static alloc_table alloc_0 =
{
    27,
{ { {
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 3, 0,  2),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
    SBINFO(16, 0, 16)
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 3, 0,  2),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 3, 0,  2),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
} } }
};
static alloc_table alloc_1 =
{
    30,
{ { {
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 3, 0,  2),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 3, 0,  2),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 3, 0,  2),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO( 3, 0,  2),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
},
{
    SBINFO( 2, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(16, 0, 16),
} } }
};
static alloc_table alloc_2 =
{
    8,
{ { {					/* 0 */
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
},
{					/* 1 */
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
},
{					/* 2 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 3 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 4 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 5 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 6 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 7 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
} } }
};
static alloc_table alloc_3 =
{
    12,
{ { {					/* 0 */
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
},
{					/* 1 */
    SBINFO( 4, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
    SBINFO( 8, 0,  8),
    SBINFO( 9, 0,  9),
    SBINFO(10, 0, 10),
    SBINFO(11, 0, 11),
    SBINFO(12, 0, 12),
    SBINFO(13, 0, 13),
    SBINFO(14, 0, 14),
    SBINFO(15, 0, 15),
},
{					/* 2 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 3 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 4 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 5 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 6 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 7 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 8 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 9 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 10 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
},
{					/* 11 */
    SBINFO( 3, 0,  0),
    SBINFO( 5, 1,  0),
    SBINFO( 7, 1,  1),
    SBINFO(10, 1,  3),
    SBINFO( 4, 0,  4),
    SBINFO( 5, 0,  5),
    SBINFO( 6, 0,  6),
    SBINFO( 7, 0,  7),
} } }
};

/****************************************************************/
/*                                                              */
/* Using the decoded info the appropriate possible quantization */
/* per subband table is loaded                                  */
/*                                                              */
/****************************************************************/

/* Set up allocation table, etc, for Layer II frame */
// altered as below 28 Jan 98
void set_alloc_table (FrameInfo *fi, uint32 samplerate, uint32 chanbitrate, char ID) // new parameter, ID
{
    alloc_table *at;
    if (ID) { // conditional
      if ((samplerate == 48000 && chanbitrate >= 56000) ||
  	  (chanbitrate >= 56000 && chanbitrate <= 80000))
	  at = &alloc_0;
      else if (samplerate != 48000 && chanbitrate >= 96000)
	at = &alloc_1;
      else if (samplerate != 32000 && chanbitrate <= 48000)
	at = &alloc_2;
      else
	at = &alloc_3;
    }
    else { // added this else block
        at = &alloc_M2;
    }
    fi->alloc = &at->table;
    fi->sblimit = at->sblimit;
}

/* EOF tables.c */
