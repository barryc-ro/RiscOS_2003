/***************************************************************************
 *
 *  File:        JOIN:SoundTrack.h
 *
 *  Description: Join SoundTrack class header
 *
 *  Version:     0.0 27 Aug 1997
 *
 *  Author:      Pete Goodliffe (pgoodliffe@acorn.com)
 *
 *  Modification History:
 *
 *    Date         Name                  Description
 *    ----------------------------------------------------------------------
 *
 ***************************************************************************/

#ifndef SOUNDTRACK_H
#define SOUNDTRACK_H

#include "ARHeader.h"
#include "SoundLdr.h"

////////////////////////////////////////////////////////////////////////////
// SoundTrack abstract class
//     Requires:
//     Behaviour: Handles all operations relating to a single sound track

class SoundTrack_Type2;

class SoundTrack {

    public:

        virtual ~SoundTrack();

        ////////////////////////////////////////////////////////////////////
        // readNoChunks
        //     Behaviour: returns the number of chunks of sound in this
        //                sound file

        int readNoChunks()               { return noChunks; }

        ////////////////////////////////////////////////////////////////////
        // readFormat
        //     Behaviour: returns the sound encoding format

        virtual int readFormat();

        ////////////////////////////////////////////////////////////////////
        // readSize
        //     Behaviour: returns the size of the entire sound file
        //                in samples

        virtual int readSize();

        ////////////////////////////////////////////////////////////////////
        // readChunkSize
        //     Requires:  chunk number
        //     Behaviour: returns the size of sound data for the given chunk

        virtual int readChunkSize(int chunk);

        ////////////////////////////////////////////////////////////////////
        // readMaxChunkSize
        //     Requires:
        //     Behaviour: returns the size of biggest sound chunk

        virtual int readMaxChunkSize();

        ////////////////////////////////////////////////////////////////////
        // load
        //     Requires:  pointer to destination buffer of adequate size
        //     Behaviour: loads given sound chunk data into buffer

        virtual void load(char *dest, int chunk);

        virtual void resetEncoder() {}
        virtual SoundTrack_Type2 *thisPtr_Type2() { return NULL; }

    protected:

        ////////////////////////////////////////////////////////////////////
        // Constructor
        //   private in order to stop this abstract class from being
        //   instantiated
        //     Requires:
        //     Behaviour: creates a sound track, calulates chunk size
        SoundTrack();

        SoundLoader *soundLoader;
        int  trackNo;                      // the track no
        int  noChunks;                     // the number of chunks of sound
                                           // available *in the input file*
                                           // N.B. not necessaily = number
                                           // in the ARMovie
        int  maxChunksize;                 // size of biggest chunk
        int *chunksize;                    // no bytes of sound per chunk

}; // end class SoundTrack

#endif // SOUNDTRACK_H
