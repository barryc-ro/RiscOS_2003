/***************************************************************************
 *
 *  File:        JOIN:Sounds.h
 *
 *  Description: Join Sounds class header
 *
 *  Version:     0.0 22 Aug 1997
 *
 *  Author:      Pete Goodliffe (pgoodliffe@acorn.com)
 *
 *  Modification History:
 *
 *    Date         Name                  Description
 *    ----------------------------------------------------------------------
 *
 ***************************************************************************/

#ifndef SOUNDS_H
#define SOUNDS_H

#include "ARHeader.h"
#include "ARChoices.h"
#include "SoundTrack.h"
#include "ST_Type0.h"
#include "ST_Type1.h"
#include "ST_Type2.h"
#include "SoundLdr.h"

////////////////////////////////////////////////////////////////////////////
// Sounds class
//     Requires:  SoundTrack subclasses
//     Behaviour: Forms an interface to the sound files and provides
//                information on them (whatever format they are in)

class Sounds {

    public:

        ////////////////////////////////////////////////////////////////////
        // Constructor
        //     Requires:  whether sound is enabled, the source directory,
        //                the ARHeader object, whether ARMovie sound input
        //                enabled (if so, no of ARMovie files)
        //                if ARMovie sound input, array of pointers to f/nms
        //                from the ARMovieChoices object
        //     Behaviour: creates the SoundTrack objects
        //                if sound is disabled, updates the header
        //                if ARMovie enabled, updates header

        Sounds(
            ARMovieChoices &choices,
            ARMovieHeader &header
        );

        ~Sounds();

        ////////////////////////////////////////////////////////////////////
        // readNoSoundTracks
        //     Behaviour: returns the number of sound tracks

        int readNoTracks()           { return noTracks; }

        ////////////////////////////////////////////////////////////////////
        // readMaxChunk
        //     Behaviour: returns the last chunk of sound data available
        //                in all of the tracks

        int readMaxChunk()           { return maxChunk; }

        ////////////////////////////////////////////////////////////////////
        // readSoundTrack
        //     Behaviour: returns the appropriate SoundTrack object

        SoundTrack *readTrack(int track);

        ////////////////////////////////////////////////////////////////////
        // readChunkSize
        //     Behaviour: returns the size of sound data for chunk

        int readChunkSize(int chunk) { return totalChunksize[chunk]; }

        ////////////////////////////////////////////////////////////////////
        // readOddmaxsize, read Evenmaxsize
        //     Requires:
        //     Behaviour: returns size of biggest odd/even numbered chunk

        int readOddmaxsize()        { return oddmaxsize; }
        int readEvenmaxsize()       { return evenmaxsize; }

    private:

        // private methods
        void createSoundTrack(
            int track,
            ARMovieChoices &choices,
            ARMovieHeader &header
        );

        // private data members
        int           noTracks;       // the number of sound tracks
        int           armovies;       // the number of armovie files
        char        **armoviefiles;   // array of ptrs to ARMovie filenames
        SoundTrack  **soundTracks;    // the sound track objects
        SoundLoader **soundLoaders;   // their sound loaders
        int           maxChunk;       // no of max chunk in all SoundTracks
        int           oddmaxsize;     // odd max chunk size
        int           evenmaxsize;    // even max chunk size
        int          *totalChunksize; // total size of each chunk

}; // end class Sounds

#endif // SOUNDS_H
