/******	Main.c ************************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Fonts configuration plug-in
This file:	Overall control

History:
Date		Who	Change
----------------------------------------------------------------------------
20/05/1998	BJGA	Created
27/05/1998	BJGA	Added fontmerge plug-in status globals
28/05/1998	BJGA	Added complain, quit_parent, parent_taskhandle
			and implemented main_startquit

\**************************************************************************/

/* CLib */
#include <stdlib.h>
/* Toolbox */
#include "event.h"
#include "wimplib.h"
#include "toolbox.h"
/* Common */
#include "error.h"
#include "misc.h"
/* Local headers */
#include "DeskFont.h"
#include "Main.h"  /* includes prototypes for this file */
#include "ToolboxE.h"
#include "WimpE.h"
#include "WimpM.h"

#define	WimpVersion	((int) 310)

/* Global variables */

	BOOL		quit = FALSE;
	BOOL		complain = TRUE;
	ObjectId	mainwindow_id;
	ObjectId	fontmenu_id;
	MessagesFD	messages;
	BOOL		fontmerge_alive = FALSE;
	int		fontmerge_taskhandle;
	BOOL		quit_parent = FALSE;
	int		parent_taskhandle;
	const char	*status_file = "<Choices$Write>.Boot.PreDesk.FontSetup";

/* Static global variables */

static	WimpPollBlock	poll_block;
static	IdBlock		id_block;

/******	main() ************************************************************\

In:		Command line option:
		  -openat x y
		    specifies initial position to open window at

\**************************************************************************/

#include <stdio.h>

int main (int argc, char *argv[])
{
  error_initialise ();
  throw (toolbox_initialise (0, WimpVersion, wimpm_messages, toolboxe_events,
    "<FontSetup$Dir>", &messages, &id_block, NULL, NULL, NULL));
  misc_parsearguments (argc, argv);
  throw (event_initialise (&id_block));
  throw (event_set_mask (wimpe_mask));
  
  wimpm_register ();
  wimpe_register ();
  toolboxe_register ();
  
  /* Initialise ROM font lookup table */
  DeskFont_BuildRomFontTable ("Resources:$.Fonts", NULL);
  
  error_recover_point();
  while (!quit)
  {
    throw (event_poll (NULL, &poll_block, NULL));
  }
  exit (EXIT_SUCCESS);
}

/******	main_startquit() **************************************************\

Purpose:	General function for asking plug-in for consent for us to
		quit both us and it
In:		Flag word to pass in Message_PlugInQuit
		or -1 to keep the last-used flag word

\**************************************************************************/

void main_startquit (int flags)
{
  WimpMessage buffer;
  static int stored_flags = 0;
  
  if (flags != -1) stored_flags = flags;
  buffer.hdr.size = 28;
  buffer.hdr.your_ref = 0;
  buffer.hdr.action_code = Wimp_MPlugInQuit;
  buffer.data.words [0] = PlugInSystem_Fonts;
  buffer.data.words [1] = stored_flags;
  throw (wimp_send_message (18, &buffer, 0, 0, NULL));
}
