/******	WimpE.c ***********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Fonts configuration plug-in
This file:	Wimp event code

History:
Date		Who	Change
----------------------------------------------------------------------------
20/05/1998	BJGA	Created
28/05/1998	BJGA	Added handler for UserMessageAcknowledge
08/06/1998	BJGA	Removed quit_parent code from wimpe_usermessageacknowledge

\**************************************************************************/

/* Toolbox */
#include "event.h"
#include "wimplib.h"
#include "toolbox.h"
/* Common */
#include "misc.h"
/* local headers */
#include "Main.h"
#include "WimpE.h"  /* includes prototypes for this file */

static int wimpe_keypressed (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle);
static int wimpe_usermessageacknowledge (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle);

int wimpe_mask =	Wimp_Poll_NullMask +
			Wimp_Poll_PointerLeavingWindowMask +
			Wimp_Poll_PointerEnteringWindowMask +
			Wimp_Poll_LoseCaretMask +
			Wimp_Poll_GainCaretMask +
			Wimp_Poll_PollWordNonZeroMask ;

void wimpe_register (void)
{
  throw (event_register_wimp_handler (-1, Wimp_EKeyPressed, wimpe_keypressed, NULL));
  throw (event_register_wimp_handler (-1, Wimp_EUserMessageAcknowledge, wimpe_usermessageacknowledge, NULL));
}

/******	wimpe_ekeypressed() ***********************************************\

Purpose:	Handles Key_Pressed event

\**************************************************************************/

static int wimpe_keypressed (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle)
{
  throw (wimp_process_key (event->key_pressed.key_code));
  return 1;
}

/******	wimpe_usermessageacknowledge() ************************************\

Purpose:	Handles User_Message_Acknoledge

\**************************************************************************/

static int wimpe_usermessageacknowledge (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle)
{
  if (((WimpUserMessageAcknowledgeEvent *) event) -> hdr.action_code == Wimp_MPlugInQuit)
  {
    /* Quit both unconditionally */
    if (fontmerge_alive)
    {
      WimpMessage buffer;
      buffer.hdr.size = 20;
      buffer.hdr.your_ref = 0;
      buffer.hdr.action_code = Wimp_MQuit;
      throw (wimp_send_message (17, &buffer, fontmerge_taskhandle, 0, NULL));
    }
    quit = TRUE;
  }
  return 1;
}
