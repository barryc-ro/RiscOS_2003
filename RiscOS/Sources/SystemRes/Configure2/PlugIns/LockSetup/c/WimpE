/******	WimpE.c ***********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	FSLock configuration plug-in
This file:	Wimp event code

History:
Date		Who	Change
----------------------------------------------------------------------------
12/12/1997	BJGA	Created
15/12/1997	BJGA	Added support for ack'ed Message_FSLockStateChangeRequest

\**************************************************************************/

/* Toolbox */
#include "event.h"
#include "wimplib.h"
#include "toolbox.h"
/* Common */
#include "misc.h"
/* local headers */
#include "Settings.h"
#include "WimpE.h"  /* includes prototypes for this file */

static int wimpe_keypressed (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle);
static int wimpe_usermessageacknowledge (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle);

int wimpe_mask =	Wimp_Poll_NullMask +
			Wimp_Poll_PointerLeavingWindowMask +
			Wimp_Poll_PointerEnteringWindowMask +
			Wimp_Poll_LoseCaretMask +
			Wimp_Poll_GainCaretMask +
			Wimp_Poll_PollWordNonZeroMask ;

void wimpe_register (void)
{
  throw (event_register_wimp_handler (-1, Wimp_EKeyPressed, wimpe_keypressed, NULL));
  throw (event_register_wimp_handler (-1, Wimp_EUserMessageAcknowledge, wimpe_usermessageacknowledge, NULL));
}

/******	wimpe_keypressed() ************************************************\

Purpose:	Handles Key_Pressed event

\**************************************************************************/

static int wimpe_keypressed (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle)
{
  throw (wimp_process_key (event->key_pressed.key_code));
  return 1;
}

/******	wimpe_usermessageacknowledge() ************************************\

Purpose:	Handles User_Message_Acknoledge

\**************************************************************************/

static int wimpe_usermessageacknowledge (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle)
{
  if (((WimpUserMessageAcknowledgeEvent *) event) -> hdr.action_code
    != Wimp_MFSLockStateChangeRequest) return 0;
  
  /* This probably means we are run independently of Configure, so we can just go ahead
   * and perform the operation without checking for objections. */
  settings_write ();
  return 1;
}
