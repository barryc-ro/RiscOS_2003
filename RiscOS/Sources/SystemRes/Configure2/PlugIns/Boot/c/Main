/******	Main.c ************************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	!Boot configuration plug-in
This file:	Overall control

History:
Date		Who	Change
----------------------------------------------------------------------------
22/06/1998	BJGA	Created

\**************************************************************************/

/* CLib */
#include <stdlib.h>
/* Toolbox */
#include "event.h"
#include "wimplib.h"
#include "toolbox.h"
/* Common */
#include "error.h"
#include "misc.h"
/* Local headers */
#include "Main.h"
#include "ToolboxE.h"
#include "WimpE.h"
#include "WimpM.h"

#define	WimpVersion	((int) 310)

/* Global variables */

	BOOL		Quit = FALSE;
	BOOL		QuitMeToo = FALSE;
	ObjectId	Window_Obj;
	MessagesFD	messages;
	plugin		BootApps = { FALSE, 0 };
	plugin		BootBoot = { FALSE, 0 };
	plugin		BootRun = { FALSE, 0 };
	plugin		BootMerge = { FALSE, 0 };

/******	main() ************************************************************\

In:		Command line option:
		  -openat x y
		    specifies initial position to open window at

\**************************************************************************/

int main (int argc, char *argv[])
{
  WimpPollBlock poll_block;
  IdBlock id_block;
  
  error_initialise ();
  throw (toolbox_initialise (0, WimpVersion, WimpM_Messages, ToolboxE_Events,
    "<BootSetup$Dir>", &messages, &id_block, NULL, NULL, NULL));
  misc_parsearguments (argc, argv);
  throw (event_initialise (&id_block));
  throw (event_set_mask (WimpE_Mask));
  
  WimpM_Register ();
  WimpE_Register ();
  ToolboxE_Register ();
  
  error_recover_point();
  while (!Quit)
  {
    throw (event_poll (NULL, &poll_block, NULL));
  }
  exit (EXIT_SUCCESS);
}

/******	Main_StartQuit() **************************************************\

Purpose:	General function for asking plug-ins for consent for us to
		quit both us and them
In:		Flag word to pass in Message_PlugInQuit
		or -1 to keep the last-used flag word

\**************************************************************************/

void Main_StartQuit (int flags)
{
  WimpMessage buffer;
  static int stored_flags = 0;
  
  if (flags != -1) stored_flags = flags;
  buffer.hdr.size = 28;
  buffer.hdr.your_ref = 0;
  buffer.hdr.action_code = Wimp_MPlugInQuit;
  buffer.data.words [0] = PlugInSystem_Boot;
  buffer.data.words [1] = stored_flags;
  throw (wimp_send_message (18, &buffer, 0, 0, NULL));
}
