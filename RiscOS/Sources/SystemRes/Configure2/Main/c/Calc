/******	Calc.c ************************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Configure central application 
This file:	Selector callback routines

History:
Date		Who	Change
----------------------------------------------------------------------------
10/12/1997	BJGA	Split from Main
			Added these headers

\**************************************************************************/

/* Comment out the following line for simpler behaviour */
#define FilerLike

/* CLib */
#include "swis.h"
/* Common */
#include "misc.h"
/* local headers */
#include "Calc.h"  /* includes prototypes for this file */
#include "Selector.h"

/******	calc_width() ******************************************************\

Purpose:	Horizontal selector callback function
In:		Current icon, gap and window widths, total no of icons
Out:		Scrollbar flag, min/max/current widths to use

\**************************************************************************/

selector_size calc_width (int iconw, int gapw, int windw, int nicons)
{
#ifdef FilerLike
  selector_size result;
  int dx = 1u << _swi (OS_ReadModeVariable, _INR(0,1)|_RETURN(2), -1, 4);
  int xs = dx * (1 + _swi (OS_ReadModeVariable, _INR(0,1)|_RETURN(2), -1, 11));
  xs -= 22; /* the assumed width of window borders - correct this when facility is added to Wimp!!! */
  result.flags = 0;
  result.min = 0;
  result.max = min(nicons,(xs - gapw) / (iconw + gapw)) * (iconw + gapw) + gapw;
  result.visible = (windw == -1) ? (gapw + (iconw + gapw) * 5) : windw;
  return result;
#else
  selector_size result;
  result.flags = 0;
  result.visible = result.min = result.max = gapw + (iconw + gapw) * 5;
  return result;
#endif
}

/******	calc_height() *****************************************************\

Purpose:	Vertical selector callback function
In:		Current icon, gap and window heights, no of rows
Out:		Scrollbar flag, min/max/current heights to use

\**************************************************************************/

selector_size calc_height (int iconh, int gaph, int windh, int nrows)
{
#ifdef FilerLike
  selector_size result;
  result.flags = 1;
  result.min = gaph + iconh + gaph;
  result.max = gaph + (iconh + gaph) * nrows;
  result.visible = (windh == -1) ? (min(nrows,4) * (iconh + gaph) + gaph) : windh;
  return result;
#else
  selector_size result;
  result.flags = (nrows > 4) ? 1 : 0;
  result.max = gaph + (iconh + gaph) * nrows;
  result.min = gaph + (iconh + gaph) * min(nrows,4);
  result.visible = (windh == -1) ? result.min : windh;
  return result;
#endif
}
