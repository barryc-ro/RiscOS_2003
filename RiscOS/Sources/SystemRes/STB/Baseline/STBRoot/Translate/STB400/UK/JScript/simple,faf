
<HTML>
<HEAD>
<META HTTP-EQUIV=Content-Type CONTENT="text/html; charset=iso-8859-1">
<TITLE>êêHTMLSimple_Titleëë</TITLE>
<SCRIPT LANGUAGE="JavaScript1.1">

// this page is an example of the simplest of pages used to load and play
// video using the JavaScript interface.  This loads a pre-defined channel
// in a page and does nothing.  When the page is unloaded the video is
// unloaded.  this page does nothing else.

// construct the media object.  This exposes video control methods.
var mediaObject = new MediaCtrl();

// Assign the response script to a short script which is executed whenever a
// response is received from the server.
mediaObject.responseScript = "getResponse();"

// this variable contains the single channel number that is to be loaded
var ChannelNumber = 9;

// this variable is used to remember if we have sent a play request yet.
var state = "unloaded";

// this method is called when the page is loaded this sends a load request to the
// server and sets the state (remembering that it has sent the load)
function loadTelly()
{
        error = null;

        error = mediaObject.load("rtsp:///multicast?channel="+ChannelNumber);

        if (error)
        {
             alert("an error occurred loading the channel "+ error.description);
        }
        else
        {
             state = "loaded";
        }
}

// this function is similar to the load function with the exception that it sends
// a play request.  This is called from the response to the load request.
function playTelly()
{
        error = mediaObject.play();

        if (error)
        {
                alert ("error in sending the play request "+error.description);
        }
        else
        {
                state = "playing";
        }
}

// this function is called when a response is received from the server.  This is called
// when the responseScript is executed.
function getResponse()
{
        var response_received = false;
        var code = 0;
        var error = null;

        error = mediaObject.getResponse(response_received, code);

        if (error != null)
        {
                alert("an error occurred in reading the response "+ error.description);
        }
        else
        {
                if (response_received == true)
                {
                        if (code != 200)
                        {
                                alert("the server returned the error "+ code);
                        }
                        else
                        {
                              if (state == "loaded")
                              {
                                        playTelly();
                              }
                        }

                        return true;
                }
                else
                {       // this should never be called as we are not expecting
                        // an asynchronous message
                        alert("response called without a response");
                }
        }
        return false;
}

</SCRIPT>
</HEAD>
<BODY bgcolor="transparent" onload="javascript:loadTelly()">
</BODY>
</HTML>