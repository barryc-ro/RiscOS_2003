; FixWimpPal
; ----------

; A simple utility that ensure that the Wimp programs logical colour 0 to
; black in all modes, without affecting the display of anything that relies
; on the "Wimp palette" (actually the Wimp's physical colour mapping) being
; the same as it has ever been. It is intended for use on STBs where we
; actually want to switch the Wimp mode to a low bpp value so that an EPG can
; still be implemented using the browser even when we need a low bpp value
; either (a) on bandwidth grounds, or (b) due to graphics hardware limitations.
; Without this modification, we get lots of nasty flashes when we change mode
; to 4bpp or less, as the Kernel, the Wimp and the browser argue over which
; logical colour should be used to represent black.


; Copyright 2000 Pace Micro Technology plc. All rights reserved.
;
; This material is the confidential trade secret and proprietary information
; of Pace Micro Technology plc. It may not be reproduced, used, sold, or
; transferred to any third party without the prior written consent of
; Pace Micro Technology plc.


        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Wimp

        AREA    |Asm$$Code|, CODE, READONLY

        ; First, set the Wimp colour -> physical colour mapping so as to be
        ; derived from Wimp_SetPalette or *WimpPalette. This is necessary to
        ; get around a bug in Wimps < 4.53, which will write over the physical
        ; colour map instead of the Wimp palette if the physical colour map is
        ; not disabled.
        MOV     r1, #0
        MOV     r2, #0
        MOV     r3, #0
        MOV     r4, #0
        MOV     r5, #0
        MOV     r6, #0
        MOV     r7, #0
        SWI     XWimp_SetColourMapping

        ; Set the Wimp palette so that the greyscale is the reverse of the
        ; traditional order. This will be used to set up the hardware palette
        ; when you do a Wimp_SetMode for a 16, 4 or 2 colour mode, so there
        ; won't be any problems caused by the fact that the kernel will have
        ; filled the framebuffer with logical colour 0.
        ADR     r1, new_wimp_palette
        SWI     XWimp_SetPalette

        ; Now set the physical colour map to the traditional Wimp palette.
        ; This should ensure that all unpaletted sprites, windows and icons
        ; are plotted as expected, and also ensure that any logical colours
        ; returned from Wimp_SetColour and Wimp_ReadPixTrans still correspond
        ; to the correct physical colours.
        MOV     r1, #-1
        MOV     r2, #-1
        MOV     r3, #-1
        MOV     r4, #-1
        SWI     XWimp_SetColourMapping

        CMP     r0, r0  ; clear V
        MOV     pc, r14


        AREA    |Asm$$Data|, DATA, READONLY

new_wimp_palette
        DCD     &00000000,&33333300,&55555500,&77777700
        DCD     &99999900,&BBBBBB00,&DDDDDD00,&FFFFFF00
        DCD     &99440000,&00EEEE00,&00CC0000,&0000DD00
        DCD     &BBEEEE00,&00885500,&00BBFF00,&FFBB0000
        DCD     &00000000,&FFFF0000,&99000000,&0000FF00

        END
