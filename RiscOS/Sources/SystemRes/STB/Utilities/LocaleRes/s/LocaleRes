; >LocaleRes
;
; This transient utility is designed to place the current territory name into the
; specified system variable. This name can then be used by an application to find
; the correct localised resources for the system it is running on.
;
; --- SAR, 13th Aug 2001
;

	GET	Hdr:ListOpts
	GET	Hdr:Macros
	GET	Hdr:System
	GET	Hdr:ModHand
	GET	Hdr:Proc
	GET	Hdr:Services
	GET	Hdr:FSNumbers
	GET	Hdr:NewErrors
	GET	Hdr:Territory
	GET	Hdr:HighFSI
	GET	VersionAsm


	AREA	|Asm$$Data|, DATA


				^	0
SynStr				=	"var", 0
SynStr_VarName			#	4
Utility_Title			=	"$Module_ComponentName", 9
Utility_VersionAndDate		=	"$Module_MajorVersion ($Module_Date)"
Utility_Copyright		=	" © Pace Micro Technology plc", 0
	ALIGN


	AREA	|Asm$$Code|, CODE, READONLY


	Entry
	; Preserve the pointer to the system variable name in R11...
	ADR	R0, SynStr
	MOV	R2, R12
	MOV	R3, #1020
	SWI	XOS_ReadArgs
	BVS	%FT80
	LDR	R11, [R12, #SynStr_VarName]
	TEQ	R11, #0
	BEQ	%FT80
	LDRB	R14, [R11]
	TEQ	R14, #0
	BEQ	%FT80
	; Munge R12 point to the remaining buffer space (word-aligned)...
	BIC	R3, R3, #3
	ADD	R12, R12, #1020
	SUB	R12, R12, R3
	; Read current territory number...
	SWI	XTerritory_Number
	EXIT	VS
	; Attempt to convert into a string with Service_International...
	MOV	R5, R3
	MOV	R1, #Service_International
	MOV	R2, #Inter_CNoToCNa
	MOV	R3, R0
	MOV	R4, R12
	SWI	XOS_ServiceCall
	EXIT	VS
	; If the service call was not claimed, use the Territory SWI...
	TEQ	R1, #0
	STREQB	R1, [R12, R5]
	BEQ	%FT00
	MOV	R1, R12
	MOV	R2, R5
	SWI	XTerritory_NumberToName
	EXIT	VS
00	; Read the string length into R2 for setting the system variable...
	SUB	R2, R12, #1
01	LDRB	R14, [R2, #1]!
	TEQ	R14, #0
	BNE	%BT01
	SUBS	R2, R2, R12
	BEQ	%FT81

;	Push	"R0-R12"
;	SWI	XOS_WriteS
;	DCB	"String '", 0
;	ALIGN
;	MOV	R0, R12
;	SWI	XOS_Write0
;	SWIVC	XOS_WriteI+"'"
;	SWIVC	XOS_NewLine
;	Pull	"R0-R12"
;
;	Push	"R0-R12"
;	SUB	SP, SP, #12
;	SWI	XOS_WriteS
;	DCB	"Length: ", 0
;	ALIGN
;	MOV	R0, R2
;	MOV	R1, SP
;	MOV	R2, #12
;	SWI	XOS_ConvertHex8
;	SWIVC	XOS_Write0
;	SWIVC	XOS_NewLine
;	ADD	SP, SP, #12
;	Pull	"R0-R12"
;
;	Push	"R0-R12"
;	SUB	SP, SP, #12
;	SWI	XOS_WriteS
;	DCB	"Byte at end: ", 0
;	ALIGN
;	LDRB	R0, [R12, R2]
;	MOV	R1, SP
;	MOV	R2, #12
;	SWI	XOS_ConvertHex2
;	SWIVC	XOS_Write0
;	SWIVC	XOS_NewLine
;	ADD	SP, SP, #12
;	Pull	"R0-R12"

	; Store the name string in the specified system variable...
	MOV	R0, R11
	MOV	R1, R12
	MOV	R3, #0
	MOV	R4, #0
        SWI	XOS_SetVarVal
	EXIT
80	; Exit with an error if there is a problem with our parameters...
	ADR	R0, %FT90
	SETV
	EXIT
81	; Exit with an error if the locale string we computed is empty...
	ADR	R0, %FT91
	SETV
	EXIT
90	;
	DCD	490
	DCB	"Syntax: $Module_ComponentName <system variable>", 0
	ALIGN
91	;
	DCD	1
	DCB	"LocaleVar could not read the current locale (empty string)", 0
	ALIGN


	END
