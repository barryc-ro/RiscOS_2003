
	AREA	|asm$$code|,CODE,READONLY
	EXPORT	rolib1

lk	RN 14

a1	RN 0
a2	RN 1
a3	RN 2
a4	RN 3

v1	RN 4
v2	RN 5
v3	RN 6
v4	RN 7
v5	RN 8
v6	RN 9

XOS_MASK	* &20000
XOS_CallASWI	* &2006f

rolib1	DCD	os_swi
; void os_swi(int swicode, os_regset* /*inout*/);

; In    a1 contains swi number, a2 points to ARM register structure

os_swi
        STMDB   sp!, {v1-v6, sl, lk}
        MOV     r10, r0
        MOVS    ip, r1
        BEQ     os_swi_noregset
        LDMIA   ip, {r0-r9}
        SWI     XOS_CallASWI
        STMIA   ip, {r0-r9}
        LDMIA   sp!, {v1-v6, sl, pc}^
os_swi_noregset
        SWI     XOS_CallASWI
        LDMIA   sp!, {v1-v6, sl, pc}^

	NOP				; must pad correctly
	NOP
	NOP
	NOP

; os_error *os_swix(int swicode, os_regset* /*inout*/);

; In    a1 contains swi number, a2 points to ARM register structure

os_swix
        STMDB   sp!, {v1-v6, sl, lk}
        ORR     a1, a1, #XOS_MASK       ; make a SWI of V-error type
        MOV     r10, r0
        MOVS    ip, r1
        BEQ     os_swix_noregset
        LDMIA   ip, {r0-r9}
        SWI     XOS_CallASWI
        STMIA   ip, {r0-r9}
        MOVVC   a1, #0
        LDMIA   sp!, {v1-v6, sl, pc}^
os_swix_noregset
        SWI     XOS_CallASWI
        MOVVC   a1, #0
        LDMIA   sp!, {v1-v6, sl, pc}^

	DCD	-1

	END
