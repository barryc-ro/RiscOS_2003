/*
 *
 * ShowStat - DCI4 driver/MbufManager statistics gathering
 *
 *
 * Copyright (C) Element 14 Ltd.
 *
 */
#ifndef msgs_h_included
#define msgs_h_included

extern const char *msgs_get_banner(void);
extern const char *msgs_get_help(void);
extern size_t msgs_max_width(void);

typedef enum {
        msg_FEATURE_HEADER,
        msg_DRIVER_NAME,
        msg_UNIT_NUMBER,
        msg_HW_ADDRESS,
        msg_PHYS_LOC,
        msg_DRIVER_MODULE,
        msg_INTERFACE_TYPE,
        msg_POLARITY,
        msg_MTU,
        msg_LINK_STATUS,
        msg_ACTIVE_STATUS,
        msg_RX_VALUES,
        msg_DUPLICITY,
        msg_LINK_FAILURES,
        msg_COLLISIONS,
        msg_TX_COLLISIONS,
        msg_TX_EXCESS_COLL,
        msg_TX_HEARTBEAT,
        msg_TX_NOT_LISTENING,
        msg_TX_FRAMES,
        msg_TX_BYTES,
        msg_TX_GENERAL_ERRORS,
        msg_TX_LAST_DEST,
        msg_RX_CRC_FAILURES,
        msg_RX_ALIGNMENT,
        msg_RX_DROPPED,
        msg_RX_RUNT,
        msg_RX_OVERLONG,
        msg_RX_JABBERS,
        msg_RX_LATE_EVENTS,
        msg_RX_UNWANTED_FRAMES,
        msg_RX_FRAMES,
        msg_RX_BYTES,
        msg_RX_GENERAL_ERRORS,
        msg_RX_LAST_SOURCE,
        msg_SWI_BASE
} msg_id;

extern const char *msgs_get(msg_id);

typedef enum {
        val_LINK_STATUS_OK,
        val_LINK_STATUS_NOT_OK,
        val_STATUS_ACTIVE,
        val_STATUS_INACTIVE,
        val_RX_STATUS_VALUE_0,
        val_RX_STATUS_VALUE_1,
        val_RX_STATUS_VALUE_2,
        val_RX_STATUS_VALUE_3,
        val_HALF_DUPLEX,
        val_FULL_DUPLEX,
        val_POLARITY_CORRECT,
        val_POLARITY_INCORRECT,
        val_STATTYPE_HEADING,
        val_GENERAL_SUPPLIER,   /* Order important for type printing */
        val_NETWORK_PROTOCOL,
        val_NETWORK_DRIVER,
        val_MBUF_MANAGER,       /* End order important */
        val_ST_OFF,		/* Order is vital for bool printing */
        val_ST_ON,
        val_ST_NO,
        val_ST_YES,
        val_ST_FALSE,
        val_ST_TRUE,
        val_ST_NEVER,
        val_ST_ALWAYS,
        val_ST_ZERO,
        val_ST_ONE		/* End order important */
} val_id;

extern const char *values_get(val_id);

extern const char *feature_name(size_t bit_num);

extern const char *interface_type(unsigned int id);

#endif
