/*
 * LoadCMOS
 *
 * Copyright (C) Pace Micro Technology plc. 1999
 *
 * Restores a CMOS RAM settings file
 *
 *
 *
 * History:
 *
 * 04-Oct-1999   SBrodie   Rewrote this utility in proper C.
 *
 *
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>
#include "kernel.h"
#include "swis.h"

#include "Global/CMOS.h"

static void fail(const char *format, ...)
{
        va_list ap;

        va_start(ap, format);
        vfprintf(stderr, format, ap);
        va_end(ap);
        exit(0); /* Just print it */
}

static void tryswi(_kernel_oserror *e)
{
        if (e) fail("%s\n", e->errmess);
}

static int read_cmos(int location)
{
        int value;

        tryswi(_swix(OS_Byte, _INR(0,1)|_OUT(2), ReadCMOS, location, &value));
        return value;
}

int main (int argc, char *argv[])
{
        FILE *f;
        int location;

        if (argc < 2) {
                fail("Syntax: LoadCMOS <filename>\n");
        }

        f = fopen(argv[1], "rb");
        if (!f) {
                fail("Unable to open %s\n", argv[1]);
        }

        for (location = 0; ; ++location) {
                int byte = fgetc(f);
                if (byte == EOF) break;

                if (location == YearCMOS || location == YearCMOS + 1) continue;
                if (location == AlarmAndTimeCMOS) {
                        const int r = read_cmos(AlarmAndTimeCMOS);
                        byte &= ~DSTCMOSBit;
                        byte |= (r & DSTCMOSBit);
                }

                tryswi(_swix(OS_Byte, _INR(0,2), WriteCMOS, location, byte));
        }

        fclose(f);
        return 0;
}
