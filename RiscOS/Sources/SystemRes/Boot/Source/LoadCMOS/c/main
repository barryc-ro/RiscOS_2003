/*main.c - LOADCMOS *command*/

/*History

   27th Oct 1994 J R C Written

*/

/*From CLib*/
#include <stdio.h>
#include <string.h>

/*From OSLib*/
#include "os.h"
#include "osbyte.h"
#include "osfile.h"
#include "osfind.h"
#include "osgbpb.h"

/*From Support*/
#include "x.h"

int main (void)

{  struct {char *prog, *file; char argb [os_CLI_LIMIT + 1];} argl;
   os_f f;
   int r, w, i, size, obj_type;
   x_exception x, y;

   x_TRY (&x)
   {  os_read_args ("prog/a,file/a", os_get_env (NULL, NULL), (char *) &argl,
           sizeof argl);

      obj_type = osfile_read_stamped_no_path (argl.file, NULL, NULL, &size,
            NULL, NULL);

      if (obj_type != osfile_IS_FILE)
         osfile_make_error (argl.file, obj_type);

      f = osfind_openin (osfind_NO_PATH | osfind_ERROR_IF_ABSENT |
            osfind_ERROR_IF_DIR, argl.file, NULL);

      x_TRY (&y)
         for (i = 0; i < size; i++)
         {  (void) osgbpb_read (f, (byte *) &w, 1);
            /*(Note that the top 24 bits of |w| are garbage.)*/

            switch (i)
            {  case osbyte_CONFIGURE_DST:
                  /*Do not load bit 7.*/
                  os_byte (osbyte_READ_CMOS, i, SKIP, NULL, &r);

                  os_byte (osbyte_WRITE_CMOS, i, w & ~osbyte_CONFIGURE_DST_MASK |
                        r & osbyte_CONFIGURE_DST_MASK, NULL, NULL);
               break;

               case osbyte_CONFIGURE_YEAR0:
               case osbyte_CONFIGURE_YEAR1:
                  /*Do nothing - these are never loaded.*/
               break;

               default:
                  os_byte (osbyte_WRITE_CMOS, i, w, NULL, NULL);
               break;
            }
         }
      x_CATCH (&y)
         ;

      osfind_close (f);

      x_RETHROW (&y);
   }
   x_CATCH (&x)
      ;
   /*Do not return an error - just print it out. J R C 23rd Aug 1995*/
   if (x_ERROR (&x) != NULL)
      fprintf (stderr, "%s\n", x_ERROR (&x)->errmess);
   /*was x_EXIT (&x);*/

   return 0;
}
