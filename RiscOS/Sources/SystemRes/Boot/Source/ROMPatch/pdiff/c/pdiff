
/* pdiff.c */

/* output differences between 4M ROM files in style required for MJS ROMpatch
   (or in mnemonic form for checking, if -m option) */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "swis.h"
#include "kernel.h"

#define ROMstart 0x3800000

int main(int argc, char *argv[])
{
  int          i,j,mnemonic,farg;
  unsigned int *buff1,*buff2,this,prev;
  FILE         *f1,*f2;
  char         *dis, *p;

  if ((argc == 4) && (argv[1][0] == '-') && (argv[1][1] == 'm'))
  {
    mnemonic = 1;
    farg = 2;
  }
  else if (argc == 3)
  {
    mnemonic = 0;
    farg = 1;
  }
  else
  {
    fprintf(stderr,"usage: pdiff [-m] <4M ROM 1> <4M ROM 2>\n"
                   "       -m selects mnemonic trace (else ROMPatch data)\n");
    exit(1);
  }

  f1 = fopen(argv[farg],"rb");
  f2 = fopen(argv[farg+1],"rb");

  if ((f1 == NULL) || (f2 == NULL))
  {
    fprintf(stderr,"failed to open file(s)\n");
    exit(1);
  }

  buff1 = malloc(0x100000);
  buff2 = malloc(0x100000);

  if ((buff1 == NULL) || (buff2 == NULL))
  {
    fprintf(stderr,"failed to malloc 2 Mb of buffers\n");
    exit(1);
  }

  prev=0;
  for (i=0; i<4; i++)
  {
    fread(buff1,0x100000,1,f1);
    fread(buff2,0x100000,1,f2);
    for (j=0; j<0x40000; j++)
    {
      if (buff1[j] != buff2[j])
      {
        this = ROMstart+i*0x100000+j*4;
        if (this != prev+4) printf("\n");
        if (mnemonic)
        {
          _swix(Debugger_Disassemble,_INR(0,1)|_OUT(1),buff1[j],this,&dis);
          p = strchr(dis,';'); if (p) *p = '\0';
          printf("%8.8x: %-30s",this,dis);
          _swix(Debugger_Disassemble,_INR(0,1)|_OUT(1),buff2[j],this,&dis);
          p = strchr(dis,';'); if (p) *p = '\0';
          printf(" | %-30s\n",dis);
        }
        else
        {
          printf("     {(uint32 *)0x%8.8x, 0x%8.8x, 0x%8.8x},\n",this,buff1[j],buff2[j]);
        }
        prev = this;
      }
    }
  }

  fclose(f1);
  fclose(f2);

  return 0;
}
