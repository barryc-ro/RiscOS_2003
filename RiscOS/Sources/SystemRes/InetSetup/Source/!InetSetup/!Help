Internet Setup
==============

InetSetup is used to configure the TCP/IP network stack built into RISC OS
3.7.

Together with the new Internet application (which is contained within !Boot),
it replaces the functionality of the old !Internet and !BootNet that
were available separately for previous versions of RISC OS.

For information on how to use InetSetup, see the RISC OS 3.7 release note.
Extensive interactive help is available - press the Help button in
InetSetup's main dialogue box.


Troubleshooting
---------------
You may find that some options are greyed out. This will be because some
required software has not been found in your ROMs or in your System
application.  Some options (eg Reverse ARP and RouteD) will only be available
if you have the full TCP/IP Protocol Suite.

No name resolver is supplied with this edition of RISC OS, but InetSetup
is aware of four of the available name resolvers:

         Resolve from Gnome Computers
         Resolver from ANT
         InetDB by Adam Goodfellow
         ResolverZM by Stewart Brodie

If InetSetup detects any of these in your System application it will allow
you to select one and configure it in the Hosts dialogue box.


What InetSetup does
-------------------
InetSetup scans both the ROM and the System directory of your computer to
find available network modules. It also autodetects network cards fitted to
your computer. It then offers configuration dialogue boxes for the available
network software and hardware.

When the Save button is clicked:

     1) InetSetup checks that all settings are consistent.
     2) Obsolete and duplicate network modules are unplugged.
     3) Required network modules are inserted if available in ROM.
     4) !Internet's configuration files are updated, if the TCP/IP
        Protocol Suite is enabled.
     5) A SetUpNet obey file is placed into your !Boot directory
        to ensure that the networking software is run on startup.
     6) You are given the opportunity to restart your computer.


Technical details
-----------------
InetSetup is hardwired with details of common network interfaces. To add an
unknown interface to InetSetup's interface list, place a detection program in
!InetSetup.AutoSense. All files in the AutoSense directory are run before the
InetSetup application starts. Your program should detect the presence of an
interface (independently of its driver module being present - it may be
unplugged), and for each interface present set a system variable

  InetSetup$Driver$<location>

<Location> is not significant, but is presented to the user in InetSetup,
with underscores converted to spaces. Example locations are "NIC", "Slot_4"
and "Econet".

The variable should be set to

    <description>:<unit>:<driver module>[:<version>[:<module filename>[:P]]]
      
where

      description = human-readable description of interface, eg
                    "Ethernet III"
      unit = DCI-4 driver name, eg "ea0"
      driver module = name of driver module, eg "Ether3"
      version = minimum version required for DCI 4.02 support, eg "4.21".
                If omitted, it is assumed that any version will do.
      module filename = filename of driver module in System:Modules.Network,
                        eg "Ether3-16". If omitted, it will not attempt to
                        softload the module should it not be present in
                        ROM.
      P : if present, the interface is a point-to-point interface (eg SLIP).
          Note that most point-to-point interfaces (eg PPP) use dynamic
          addressing, and should not be set up using InetSetup. Your
          dialler software should arrange for the interface to be set
          each time you dial.

The required version numbers for the core networking modules are specified in
InetSetup's Messages file. If, for example, you have Net 6.18 in ROM, but
require Net 6.19, then you must set v_Net to 6.19 in the Messages file,
otherwise InetSetup, when used, will RMInsert the Net from the ROM, and not
cause the new Net module to be loaded on startup.

InetSetup currently generates the files Choices:Internet.Startup, and
<Boot$ToBeLoaded>.SetUpNet. The other files in the Choices:Internet directory
are intended to be manually edited.  Any changes made to the Startup or
SetUpNet files will be lost when InetSetup next runs.
