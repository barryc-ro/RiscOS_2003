/*
    (c) Copyright Warm Silence Software Ltd, 1996
    PHBG 28/4/97: Initial version
*/

#include <ctype.h>
#include <string.h>
#include "memory.h"

#include "strext.h"

char *strdup(char *s)
{
    char *res;

    if(s == NULL) return NULL;
    res = Malloc(strlen(s)+1);
    strcpy(res, s);
    return res;
}

int ci_strcmp(char *s1, char *s2)
{
    while(*s1 && toupper(*s1) == toupper(*s2))
    {
        s1++;
        s2++;
    }
    return toupper(*s1) - toupper(*s2);
}

int ustrlen(unicode_t *s)
{
    int i;

    for(i = 0; 1; i++)
        if(*s++ == 0)
            return i;
}

int ustrcmp(unicode_t *s, unicode_t *t)
{
    while(*s && *s == *t)
    {
        s++; t++;
    }
    return *s - *t;
}

unicode_t *ustrdup(unicode_t *s)
{
    unicode_t *res;
    int l;

    l = (ustrlen(s) + 1) * sizeof(unicode_t);
    res = Malloc(l);
    memcpy(res, s, l);
    return res;
}

unicode_t *ustrrchr(unicode_t *s, unicode_t c)
{
    unicode_t *res;

    res = NULL;
    while(*s)
    {
        if(*s == c) res = s;
        s++;
    }
    return res;
}
