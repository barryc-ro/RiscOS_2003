#include "kernel.h"
#include "swis.h"
#include <string.h>
#include <stdlib.h>
#include "WSSerr.h"
#include "WSSvar.h"
#include "WSSmem.h"

char *VarRead(char *var)
{
    _kernel_swi_regs r;
    int len;
    static char *buf = NULL;

    if(buf != NULL)
    {
        Free(buf);
        buf = NULL;
    }
    r.r[0] = (int) var;
    r.r[1] = 0;
    r.r[2] = -1;
    r.r[3] = 0;
    r.r[4] = 3;
    _kernel_swi(OS_ReadVarVal, &r, &r);
    if(r.r[2] == 0)
        return "";
    len = ~(r.r[2]);
    buf = Malloc0(len + 1);
    if(buf == NULL)
    {
        Error("Insufficient memory to read variable");
        return "";
    }
    r.r[0] = (int) var;
    r.r[1] = (int) buf;
    r.r[2] = len + 1;
    r.r[3] = 0;
    r.r[4] = 3;
    _kernel_swi(OS_ReadVarVal, &r, &r);
    buf[len] = 0;
    return buf;
}

void VarSet(char *var, char *str)
{
    _kernel_swi_regs r;

    r.r[0] = (int) var;
    r.r[1] = (int) str;
    r.r[2] = strlen(str);
    r.r[3] = 0;
    r.r[4] = 0;
    _kernel_swi(OS_SetVarVal, &r, &r);
}
