#include <stdio.h>

#include "instance.h"

#include "swis.h"

static char name[80];

_kernel_oserror *Instance_Create(int *instance, char **old_instance) {

  _kernel_oserror *err;
  int inst;

  *old_instance = NULL;

  // Find a free instance
  inst = -1;
  do {
    // Look up an instance
    if (inst != -1)
      sprintf(name, "AMPlayer%%SHOUTcast%d", inst);
    else
      sprintf(name, "AMPlayer%%SHOUTcast");
    err = _swix(OS_Module, _INR(0,1), 18, name);
    // If no error, then that instance exists - loop again.
    if (err == NULL)
      inst++;
  } while (err == NULL);

  // Read the currently preferred instance
  err = _swix(OS_Module, _INR(0,1) | _OUT(5), 18, "AMPlayer", old_instance);
  if (err) {
    /* AMPlayer not loaded? */
    return err;
  }

  // Create new instance - automatically becomes preferred.
  err = _swix(OS_Module, _INR(0,1), 14, name);
  if (err) {
    // Out of memory?
    return err;
  }

  *instance = inst;

  return NULL;
}

_kernel_oserror *Instance_Select(int instance, char **old_instance) {

  _kernel_oserror *err;

  *old_instance = NULL;

  // Read the currently preferred instance
  err = _swix(OS_Module, _INR(0,1) | _OUT(5), 18, "AMPlayer", old_instance);
  if (err) {
    /* AMPlayer not loaded? */
    return err;
  }

  // Select our instance
  if (instance != -1)
    sprintf(name, "AMPlayer%%SHOUTcast%d", instance);
  else
    sprintf(name, "AMPlayer%%SHOUTcast");
  return _swix(OS_Module, _INR(0,1), 16, name);
}

_kernel_oserror *Instance_DeSelect(char *old_instance) {

  // Restore original preferred instance
  sprintf(name, "AMPlayer%%%s", old_instance);
  return _swix(OS_Module, _INR(0,1), 16, name);
}

_kernel_oserror *Instance_Destroy(int instance) {

  if (instance != -1)
    sprintf(name, "AMPlayer%%SHOUTcast%d", instance);
  else
    sprintf(name, "AMPlayer%%SHOUTcast");
  // Kill the instance off
  return _swix(OS_Module, _INR(0,1), 4, name);
}
