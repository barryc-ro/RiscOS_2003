;
; Fixed point code for ARM7M, SA110, etc.
; (C) 1999 Thomas Olsson

#include "h.defs"

#include "a.asmhdr"

	MACRO
	FPMUL $dst,$a,$b,$pp,$tmp
	SMULL $tmp,$dst,$b,$a
	MOV $dst,$dst,LSL#($pp)+1
	ORR $dst,$dst,$tmp,LSR#31-($pp)
	MEND

	AREA	|C$$code|, CODE, READONLY

        FUNC NeedARM7M
        MOV R0,#1
 [ ATPCS32
        MOV PC,R14
 |
        MOVS PC,R14
 ]
	FUNCEND

        ; binops ------------------------

	FUNC muls			; R0=a
					; R1=b
					; R0=a*b
	SMULL R12,R0,R1,R0
	MOV R0,R0,LSL#1
;	ADD R0,R0,R12,LSR#31		; for that added bit of accuracy... no audible difference
 [ ATPCS32
        MOV PC,R14
 |
        MOVS PC,R14
 ]
	FUNCEND

	FUNC mlas			; R0=a
					; R1=b
					; R2=c
					; R0=a*b+c
	SMULL R12,R0,R1,R0
	ADD R0,R2,R0,LSL#1
;	ADD R0,R0,R12,LSR#31
 [ ATPCS32
        MOV PC,R14
 |
        MOVS PC,R14
 ]
	FUNCEND

	FUNC mulss_pnts_SH		; R0=a
					; R1=b
					; R0=a*b<<pnts_SH
	FPMUL R0,R0,R1,pnts_SH,R12
 [ ATPCS32
        MOV PC,R14
 |
        MOVS PC,R14
 ]
	FUNCEND

	FUNC mulss_ispow_gain_SH	; R0=a
					; R1=b
					; R0=a*b<<(ispow_SH+gain_SH)

	FPMUL R0,R0,R1,ispow_SH+gain_SH,R12
 [ ATPCS32
        MOV PC,R14
 |
        MOVS PC,R14
 ]
	FUNCEND

	FUNC mulss_pow_SH		; R0=a
					; R1=b
					; R0=a*b<<pow_SH
	FPMUL R0,R0,R1,pow_SH,R12
 [ ATPCS32
        MOV PC,R14
 |
        MOVS PC,R14
 ]
	FUNCEND

	FUNC mulss_cos36_SH		; R0=a
					; R1=b
					; R0=a*b<<cos36_SH
	FPMUL R0,R0,R1,cos36_SH,R12
 [ ATPCS32
        MOV PC,R14
 |
        MOVS PC,R14
 ]
	FUNCEND

	FUNC mulss_cos12_SH		; R0=a
					; R1=b
					; R0=a*b<<cos12_SH
	FPMUL R0,R0,R1,cos12_SH,R12
 [ ATPCS32
        MOV PC,R14
 |
        MOVS PC,R14
 ]
	FUNCEND

	END
