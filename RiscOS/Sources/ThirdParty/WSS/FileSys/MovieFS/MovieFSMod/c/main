/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.
    
    PHBG: Initial version
*/

#include <stdio.h>
#include <stdlib.h>
#include "swis.h"
#include "kernel.h"
#include "error.h"
#include "memory.h"
#include "fspatch.h"
#include "fsys.h"
#include "recog.h"

#include "serv.h"

static char user_reg[512 + 16] = "unencrypted  regIllegal copy";

static void *local_pw;

static void add_file_type(int file_type)
{
    FsPatchAddImage(local_pw, file_type);
}

static void remove_file_type(int file_type)
{
    FsPatchRemoveImage(file_type);
}

_kernel_oserror* finalise(int fatal, int podule, void *pw)
{
    FsPatchRemoveFS();
    FsysShut();
    RecogShutDown();
    MemKill();
    return NULL;
}

static void avifs_registration(char *args, void *pw)
{
    printf("Registered to: %s\n", user_reg + 16);
}

_kernel_oserror *command(char *arg_string, int argc, int cmd_no, void *pw)
{
    if(setjmp(*ErrorLink()))
    {
        return ErrorReport();
    }
    else
    {
        switch(cmd_no)
        {
            case 0: avifs_registration(arg_string, pw); break;
        }
        return 0;
    }
}

_kernel_oserror *initialise(char *cmd_tail, int podule, void *pw)
{
    local_pw = pw;
    FsPatchAddFS(local_pw);
    RecogAdder(add_file_type);
    RecogRemover(remove_file_type);
    RecogStartUp(local_pw);
    printf("MovieFS v1.96 (c) Warm Silence Software Ltd.\nAll rights reserved.\nWritten by Paul Gardiner and Robin Watts\n");
    return 0;
}

void service(int service_number, _kernel_swi_regs *r, void *pw)
{
    switch(service_number)
    {
        case Service_FSRedeclare:
            FsPatchAddFS(local_pw);
            RecogRedeclare();
            break;
        case Service_RecogAnnounce:
            if(!setjmp(*ErrorLink()))
                /* Only respond to ones with R3=0 */
                if (r->r[3] == 0)
                    RecogAnnounce(r->r[0], r->r[2]);
            break;
    }
}
