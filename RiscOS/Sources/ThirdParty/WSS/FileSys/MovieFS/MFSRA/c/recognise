/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.

    RJW: Initial version
    PHBG 8/5/98: Account for comment lines
*/

#include <stdio.h>
#include <string.h>
#include "bool.h"
#include "kernel.h"
#include "swis.h"
#include "config.h"
#include "strncasecm.h"

#define LINE_LIMIT (1024)

static int fetch(int file, char *buffer, int start, int len) {

  _kernel_swi_regs regs;

  regs.r[0] = 3;
  regs.r[1] = file;
  regs.r[2] = (int) buffer;
  regs.r[3] = len;
  regs.r[4] = start;
  return _kernel_swi(OS_GBPB, &regs, &regs) ? 0 : len - regs.r[3];
}

static int pos;

static int get(int file)
{
    char c;

    return fetch(file, &c, pos++, 1) == 1 ? c : -1;
}


static int eof;

static void prefix_of_line(int file, char *buf, int len)
{
    int i, c;

    for(i = 0; i < LINE_LIMIT && (c = get(file)) != '\r' && c != '\n' && c != -1; i++)
        if(i < len)
            buf[i] = c;
    if(i < len)
        buf[i] = 0;
    if(c == -1)
        eof = 1;
    if(i >= LINE_LIMIT)
    {
        buf[0] = 0;
        eof = 1;
    }
}

int Recognise(int vsn, int f)
{
  char buffer[5];

  if (vsn != 0)
    return -1;
  if(fetch(f, buffer, 0, 4) < 4)
      return -1;
  if(strncmp(buffer, ".ra\375", 4) == 0)
      return RA_FILETYPE;
  if(strncmp(buffer, ".RMF", 4) == 0)
      return RA_FILETYPE;
  eof = pos = 0;
  while(!eof)
  {
      prefix_of_line(f, buffer, 5);
      if(strncasecmp(buffer, "pnm:", 4) == 0)
          return RA_FILETYPE;
      if(strncasecmp(buffer, "http:", 4) == 0)
          return RA_FILETYPE;
      if(strncasecmp(buffer, "file:", 5) == 0)
          return RA_FILETYPE;
      if(buffer[0] != ';' && buffer[0] != 0)
          return -1;
  }
  return -1;
}
