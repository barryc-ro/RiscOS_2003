/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.
    
    PHBG: Initial version
*/

#include <string.h>
#include "fileio.h"
#include "memory.h"
#include "image.h"

#define MAX(x, y) ((x) > (y) ? (x) : (y))
#define MIN(x, y) ((x) < (y) ? (x) : (y))

void ImageRead(char *buf, int size, int pos, image_t *img)
{
    int ind1, ind2, i;
    int start, end, posend, fill_offset, fill_size;
    char *fill_buf;
    part_t *part;
    
    posend = pos + size;
    while(img->index > 0 && img->part[img->index - 1].end > pos)
        img->index--;
    while(img->index < img->nparts && img->part[img->index].end <= pos)
        img->index++;
    ind1 = img->index;
    while(img->index < img->nparts && img->part[img->index].start < posend)
        img->index++;
    ind2 = img->index;
    for(i = ind1; i < ind2; i++)
    {
        part = &(img->part[i]);
        start = MAX(part->start, pos);
        end = MIN(part->end, posend);
        fill_offset = start - part->start;
        fill_size = end - start;
        fill_buf = buf + (start - pos);
        part->fill(fill_buf, fill_size, fill_offset, img->data, part);
    }
}

int ImageSize(image_t *img)
{
    return img->part[img->nparts - 1].end;
}

void ImageFree(image_t *img)
{
    img->free_data(img->data);
    Free(img->name);
    Free(img->part);
    Free(img);
}
