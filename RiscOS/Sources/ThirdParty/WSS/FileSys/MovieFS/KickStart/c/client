/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.

    RJW: Initial version
*/

#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <setjmp.h>
#include "kernel.h"
#include "swis.h"
//#include "rmbase.h"
#include "bool.h"
#include "filter.h"
#include "recog.h"

#include "serv.h"

_kernel_oserror* finalise(int fatal, int podule, void *pw) {

  killfilter();
  return NULL;
}

_kernel_oserror *initialise(const char *cmd_tail, int podule, void *pw)
{
  /* Filter stuff */
  printf("Kickstart v1.96 (c) Warm Silence Software.\nAll rights reserved.\nWritten by Paul Gardiner and Robin Watts\n");

  RecogStartUp(pw);

  /* Try to start filter regardless */
  startfilter();

  return NULL;
}

void service(int service_number, _kernel_swi_regs *r, void *pw)
{

  switch (service_number) {
    case 0x87: /* Service_FilterManagerInstalled */
      startfilter();
      break;
    case 0x88: /* Service_FilterManagerDying */
      filterdying();
      break;
    case Service_RecogAnnounce:
      /* Only respond if an understood one */
      if (r->r[3] == 0)
        RecogAnnounce(r->r[0], r->r[2]);
      break;
  }
}
