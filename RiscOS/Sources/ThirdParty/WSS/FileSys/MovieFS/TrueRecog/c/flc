/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.
    
    PHBG: Initial version
*/

#include <string.h>
#include "fileio.h"
#include "memory.h"
#include "error.h"
#include "nosup.h"
#include "options.h"
#include "t_dec.h"
#include "flc.h"

#define NULL 0

static struct dec_s decoder = {"610", "", 0};

film_spec *FlcStructure(int f)
{
    unsigned int hdr[32];
    int magic;
    int pos, opos, i;
    film_spec *film;
    video_spec *vs;
#ifndef FLC
    return NULL;
#endif
    FsReadAt(f, 0, hdr, 128);
    magic = hdr[1] & 0xFFFF;
    if(magic != 0xAF11 && magic != 0xAF12)
        return NULL;
#ifdef BaseRelease
    NoSupport("FLI/FLC");
#endif
    vs = Malloc(sizeof(video_spec));
    film = Malloc(sizeof(film_spec));
    film->handle = f;
    film->type = (magic == 0xAF11 ? "FLI" : "FLC");
    film->video = vs;
    film->audio = NULL;
    vs->xsize = hdr[2] & 0xFFFF;
    vs->ysize = hdr[2] >> 16;
    vs->rate = (magic == 0xAF11 ? 70 : 1000);
    vs->scale = hdr[4] & 0xFFFF;
    if(vs->scale == 0) vs->scale = (magic == 0xAF11 ? 5 : 70);
    vs->nchunks = hdr[1] >> 16;
    vs->chunk = Malloc(vs->nchunks * sizeof(dib_t));
    vs->force_interleave = 0;
    vs->decoder = &decoder;
    vs->decoder_scaled = NULL;
    vs->compression[0] = 0;
    pos = 128;
    opos = 0;
    i = 0;
    while(i < vs->nchunks)
    {
        hdr[1] = 0;
        FsReadAt(f, pos, hdr, 8);
        switch(hdr[1] & 0xFFFF)
        {
            case 0xF100:
            case 0x00A1:
                break;
            case 0xF1FA:
                vs->chunk[i].start = pos;
                vs->chunk[i].size = hdr[0];
                i++;
                break;
            default:
                if(i > 4)
                    vs->nchunks = i - 1;
                else
                    Error("FLC 0x%04X at 0x%08X from 0x%08X",
                      hdr[1] & 0xFFFF, pos, opos);
        }
        opos = pos;
        pos += hdr[0];
    }
    return film;
}
