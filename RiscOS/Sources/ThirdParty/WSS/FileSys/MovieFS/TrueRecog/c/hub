/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.

    PHBG: Initial version
*/

#include <string.h>
#include "t_dec.h"
#include "error.h"
#include "memory.h"
#include "fileio.h"
#include "image.h"
#include "replay.h"
#include "avi.h"
#include "options.h"
#include "au.h"
#include "wav.h"
#include "wve.h"
#include "voc.h"
#include "dl.h"
#include "qt.h"
#include "flc.h"
#include "aiff.h"
#include "animator.h"
#include "authority.h"
#include "hub.h"

#define IF_HEADER_SIZE  (60+4)
#define IF_SIZE         (IF_HEADER_SIZE+256)
#define IF_STRING       ("MovieFS Indirection")
#define NULL 0

static film_spec *cinepak_check(film_spec *film)
{
    if(film->video == NULL)
        return film;
    if(strcmp(film->video->decoder->dec_num, "602") == 0)
    {
#ifdef Cinepak
        switch("Xinepak Disabled"[0])
#else
        switch("Cinepak Disabled"[0])
#endif
        {
            case 'X': return film;
            case 'H': film->video->decoder->dec_num = "699"; return film;
            default: AviFree(film); return NULL;
        }
    }
    if(strcmp(film->video->decoder->dec_num, "603") == 0)
    {
#ifdef RPZA
        switch("XPZA Disabled"[0])
#else
        switch("RPZA Disabled"[0])
#endif
        {
            case 'X': return film;
            case 'H': film->video->decoder->dec_num = "699"; return film;
            default: AviFree(film); return NULL;
        }
    }
    return film;
}

static film_spec *non_indirect(int handle)
{
    film_spec *film;

    film = AviStructure(handle);
    if(film == NULL) film = WavStructure(handle);
    if(film == NULL) film = QtStructure(handle);
    if(film == NULL) film = FlcStructure(handle);
#ifdef WVE
    if(film == NULL) film = WveStructure(handle);
#endif
#ifdef VOC
    if(film == NULL) film = VocStructure(handle);
#endif
#ifdef AIFF
    if(film == NULL) film = AiffStructure(handle);
#endif
#ifdef AU
    if(film == NULL) film = AuStructure(handle);
#endif
#ifdef ANM
    if(film == NULL) film = AnmStructure(handle);
#endif
#ifdef DL
    if(film == NULL) film = DlStructure(handle);
#endif
    if(film != NULL) film = AuthorityCheck(film);
    if(film != NULL) film = cinepak_check(film);
    return film;
}

static film_spec *indirect(int handle)
{
    char buf[IF_SIZE+1];
    int handle2;

    FsReadAt(handle, 0, buf, IF_SIZE);
    buf[IF_SIZE] = 0;
    if(strcmp(IF_STRING, buf) != 0) return NULL;
    handle2 = FsOpen(buf + IF_HEADER_SIZE);
    if(handle2 == 0) return NULL;
    return non_indirect(handle2);
}

image_t *HubInterpret(int handle)
{
    film_spec *film;
    image_t *img;

    film = indirect(handle);
    if(film != NULL)
    {
        img = ReplayImage(film);
        AviFree(film);
        return img;
    }
    film = non_indirect(handle);
    if(film != NULL)
    {
        img = ReplayImage(film);
        AviFree(film);
        return img;
    }
    Error("Not recognised (MFSUniv)");
    return NULL;
}
