/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.

    PHBG: Initial version
*/

#ifndef _Sprite_
#define _Sprite_

typedef struct
{
    int mode;
    int xsize, ysize;
    int memory;
} spr_type;

typedef struct spr_sprite_s *spr_sprite;

spr_type SprType(int, int, int);
/*
    Returns a sprite type for the specified (mode, x_size,
    y_size).
*/

spr_sprite SprCreate(spr_type);
    /* Create a sprite of the specified type.               */

void SprFree(spr_sprite);
    /* Free the memory allocated to the specified sprite.   */
    /* This should not be applied to an element of an       */
    /* array returned from SprLoadN, because it will free   */
    /* some of the memory allocated to other members of the */
    /* array.                                               */

void SprVDU(spr_sprite);
    /* Direct plotting commands to the specified sprite.    */
    /* If NULL is specified then plotting is directed back  */
    /* to the terminal. This call should not be used while  */
    /* output is directed to a bitmapped window (see        */
    /* ScnVDU).                                             */

void SprPlotQ(spr_sprite, int, int);
    /* Do a quick plot of the specified sprite, without     */
    /* any colour translation or scaling. This call uses    */
    /* the current graphics cursor position.                */

#endif /* _Sprite_ */
