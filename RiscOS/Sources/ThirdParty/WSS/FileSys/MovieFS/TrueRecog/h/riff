/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.

    PHBG: Initial version
*/

#ifndef _RIFF_
#define _RIFF_

#include "t_dib.h"
#include "t_chunk.h"

#define RIFFCODE(a, b, c, d) (a | (b<<8) | (c<<16) | (d<<24))
#define RIFF_RIFF RIFFCODE('R', 'I', 'F', 'F')
#define RIFF_AVI  RIFFCODE('A', 'V', 'I', ' ')
#define RIFF_LIST RIFFCODE('L', 'I', 'S', 'T')
#define RIFF_msvc RIFFCODE('m', 's', 'v', 'c')
#define RIFF_MSVC RIFFCODE('M', 'S', 'V', 'C')
#define RIFF_DIB  RIFFCODE('D', 'I', 'B', ' ')
#define RIFF_RGB  RIFFCODE('R', 'G', 'B', ' ')
#define RIFF_RLE  RIFFCODE('R', 'L', 'E', ' ')
#define RIFF_CRAM RIFFCODE('C', 'R', 'A', 'M')
#define RIFF_cvid RIFFCODE('c', 'v', 'i', 'd')
#define RIFF_ULTI RIFFCODE('U', 'L', 'T', 'I')
#define RIFF_RT21 RIFFCODE('R', 'T', '2', '1')
#define RIFF_IV31 RIFFCODE('I', 'V', '3', '1')
#define RIFF_IV32 RIFFCODE('I', 'V', '3', '2')
#define RIFF_hdrl RIFFCODE('h', 'd', 'r', 'l')
#define RIFF_avih RIFFCODE('a', 'v', 'i', 'h')
#define RIFF_strl RIFFCODE('s', 't', 'r', 'l')
#define RIFF_strh RIFFCODE('s', 't', 'r', 'h')
#define RIFF_strf RIFFCODE('s', 't', 'r', 'f')
#define RIFF_auds RIFFCODE('a', 'u', 'd', 's')
#define RIFF_vids RIFFCODE('v', 'i', 'd', 's')
#define RIFF_movi RIFFCODE('m', 'o', 'v', 'i')
#define RIFF_idx1 RIFFCODE('i', 'd', 'x', '1')
#define RIFF_rec  RIFFCODE('r', 'e', 'c', ' ')
#define RIFF_xxpc RIFFCODE('\0', '\0', 'p', 'c')

#define RIFF_WAVE RIFFCODE('W', 'A', 'V', 'E')
#define RIFF_fmt  RIFFCODE('f', 'm', 't', ' ')
#define RIFF_data RIFFCODE('d', 'a', 't', 'a')

chunk_handle RiffOpen(int, int);

void RiffClose(void);

chunk_handle RiffDup(chunk_handle);

int RiffEOC(chunk_handle);

chunk_handle RiffRead(chunk_handle);

void RiffRewind(chunk_handle);

int RiffType(chunk_handle);

int RiffSize(chunk_handle);

dib_t RiffPlace(chunk_handle);

void RiffData(chunk_handle, void *, int);

void RiffFree(chunk_handle);

void RiffDataMagic(chunk_handle, void *, int);

#endif /* _RIFF_ */

