/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.

    PHBG 7/1/96: Initial version
*/

#include <string.h>
#include <stdlib.h>
#include "memory.h"
#include "url.h"

url_t UrlParse(char *url, int default_port)
{
    url_t res;
    char *p;
    
    res = Malloc(sizeof(*res));
    res->protocol = Malloc(strlen(url)+1);
    strcpy(res->protocol, url);
    p = strchr(res->protocol, ':');
    if(p == NULL)
    {
        Free(res->protocol);
        Free(res);
        return NULL;
    }
    *p++ = '\0';
    if(*p == '/') p++;
    if(*p == '/') p++;
    res->address = p;
    p = strchr(res->address, '/');
    if(p == NULL)
    {
        Free(res->protocol);
        Free(res);
        return NULL;
    }
    *p++ = '\0';
    res->resource = p;
    p = strchr(res->resource, '$');
    if(p) *p = '\0';
    p = strchr(res->resource, '?');
    if(p) *p = '\0';
    p = strchr(res->resource, '\012');
    if(p) *p = '\0';
    
    p = strchr(res->address, ':');
    if(p == NULL)
    {
        res->port = default_port;
    }
    else
    {
        *p = 0;
        res->port = atoi(p+1);
    }
    return res;
}

void UrlFree(url_t url)
{
    if(url->protocol) Free(url->protocol);
    Free(url);
}
