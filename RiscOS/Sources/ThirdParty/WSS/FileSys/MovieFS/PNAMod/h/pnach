/*
    (c) Copyright Warm Silence Software Ltd, 1996
    All rights reserved.

    PHBG 29/1/97: Initial version
    RJW  29/1/97: Virtualised version
*/

#ifndef _PNACH_
#define _PNACH_

#include "chunk.h"
#include "connstate.h"

/* Handle type for callers of pnatch */
typedef struct pnach_handle_s *pnach_handle_t;

/* 'Overloadable' handle type for callees of pnatch */
typedef void *pnach_generic_handle_t;

/* Interface for callers */
void PnaChInit(void);

void PnaChFin(void);

pnach_handle_t PnaChOpen(char *);

void PnaChClose(pnach_handle_t);

conn_state_t PnaChState(pnach_handle_t);

void PnaChService(pnach_handle_t);

chunk_desc_t *PnaChFetch(pnach_handle_t, int);

ra_header_t *PnaChInfo(pnach_handle_t);

char *PnaChError(pnach_handle_t);

char *PnaChAddress(pnach_handle_t);

char *PnaChResource(pnach_handle_t);

data_t PnaChHeader(pnach_handle_t);

/* Signature for callees */
typedef struct {
  void                   (*init)     (void);
  void                   (*fin)      (void);
  pnach_generic_handle_t (*open)     (char *);
  void                   (*close)    (pnach_generic_handle_t);
  conn_state_t           (*state)    (pnach_generic_handle_t);
  void                   (*service)  (pnach_generic_handle_t);
  chunk_desc_t *         (*fetch)    (pnach_generic_handle_t, int);
  ra_header_t *          (*info)     (pnach_generic_handle_t);
  char *                 (*error)    (pnach_generic_handle_t);
  char *                 (*address)  (pnach_generic_handle_t);
  char *                 (*resource) (pnach_generic_handle_t);
  data_t                 (*header)   (pnach_generic_handle_t);
} pnach;

#endif
