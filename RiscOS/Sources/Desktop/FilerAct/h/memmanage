/*
     This header describes the interface to the manipulation of
     large lumps of memory and files.

Revision History:

0.00  13-Jun-89  JSR  Created.
*/

#ifndef __os_h
#include "os.h"
#endif

/*
     For c.memmanage
*/
extern void action_slot( int );
extern os_error *init_memmanagement( void );
extern os_error *init_for_copying( void );
extern os_error *add_file_to_chain( char *dest, char *source, int size, int reload, int exec, int attr, int objtype, int force, int *full );
extern os_error *read_a_block( int *i_am_full, int *need_another_file, int *that_finished_a_file );
extern os_error *write_a_block( int *i_am_empty, int *that_finished_a_file );
extern char *next_file_to_be_written( void );
extern char *next_file_to_be_read( void );
extern void restart_file_read( void );
extern void restart_file_write( void );
extern void skip_file_read( void );
extern void skip_file_write( void );
extern int bytes_left_to_read( void );
extern int bytes_left_to_write( void );
extern void closedown_memmanagement( void );
extern void copy_go_faster( int do_it );
extern int size_of_finished_file;
extern char *source_of_finished_file;

