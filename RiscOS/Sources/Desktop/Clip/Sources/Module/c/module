/* > module.c
 *
 *      RISC OS module related code.
 */

/* From CLib */
#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"

#include "Desk.Core.h"
#include "Desk.Debug.h"

#include "Desk.Core.h"
#include "Desk.Error2.h"
#include "Desk.BackTrace.h"
#include "Desk.Event.h"

#include "ModuleTask.ModuleTask.h"

#include "module.h"
#include "moddefs.h"

#include "App.AppForMod.h"


/*#ifdef ClipApp_MODULE*/


ModuleTask_client_fns	ModuleTask_Client = { Clip_ModuleInitialise};


_kernel_oserror*	Clip_ModuleInitialise( const char *cmd_tail, int podule_base, void *pw )
{
	ModuleTask_Client.module_commandhandler	= NULL;
	ModuleTask_Client.module_service	= NULL;
	ModuleTask_Client.module_enter		= ClipApp_Initialise;
	ModuleTask_Client.module_finalise	= ClipApp_ModFinalise;
	ModuleTask_Client.module_name		= Clip_MODULENAME;
	ModuleTask_Client.command_desktop	= "Desktop_ClipHolder";
	ModuleTask_Client.command_desktop_num	= CMD_Desktop_ClipHolder;
	ModuleTask_Client.taskhandle_ptr	= &Desk_Event_taskhandle;
	
	Desk_Debug_Initialise();
	Desk_Debug_Printf( Desk_error_PLACE "Clip_ModuleInitialise called\n");
	Desk_Debug_Printf( Desk_error_PLACE "malloc( 30) = 0x%p\n", malloc( 30));
	
	Desk_Error2_Init_JumpSig();
	
	Desk_Debug_Printf( Desk_error_PLACE "Clip_ModuleInitialise returning\n");
	return NULL;

    Desk_UNUSED( cmd_tail );
    Desk_UNUSED( podule_base );
    Desk_UNUSED( pw );
}



/*#endif*/	/* #ifdef ClipApp_MODULE	*/

