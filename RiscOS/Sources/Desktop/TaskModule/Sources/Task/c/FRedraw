#include "swis.h"

#include "Desk.LinkList.h"
#include "Desk.WimpSWIs.h"
#include "Desk.DeskMem.h"
#include "Desk/Event.h"

#include "FRedraw.h"
#include "Task.h"


typedef struct	{
	Desk_window_redrawblock	redraw;
	}
	redraw_block;


static Desk_bool	NonZeroPollWordHandler( Desk_event_pollblock* event, void* reference)
	{
	redraw_block*			redraw = (redraw_block*) reference;
	
	_swix( Wimp_ForceRedraw, _INR(0,4), 
		redraw->redraw.window, 
		redraw->redraw.rect.min.x, 
		redraw->redraw.rect.min.y, 
		redraw->redraw.rect.max.x, 
		redraw->redraw.rect.max.y
		);
		
	TaskModule_globalblock.pollword--;
	Desk_Event_Release( Desk_event_NONZEROPOLLWORD, Desk_event_ANY, Desk_event_ANY, NonZeroPollWordHandler, redraw);
	Desk_DeskMem_Free( redraw);
	
	Desk_Debug_Printf( Desk_error_PLACE "Called Wimp_ForceRedraw\n");
	Desk_Debug_Printf( Desk_error_PLACE "TaskModule_ForceRedraw_NonZeroPollWordHandler returning\n");
	
	return Desk_bool_FALSE;
	
	Desk_UNUSED( event);
	}

void	TaskModule_ForceRedrawFn( _kernel_swi_regs* r, void* pw)
	{
	Desk_window_redrawblock*	redraw0	= (Desk_window_redrawblock*) r;
	redraw_block*			redraw	= Desk_DeskMem_MallocType( redraw_block);
	
	redraw->redraw	= *redraw0;
	Desk_Event_Claim( Desk_event_NONZEROPOLLWORD, Desk_event_ANY, Desk_event_ANY, NonZeroPollWordHandler, redraw);
	TaskModule_globalblock.pollword++;
	
	Desk_UNUSED( pw);
	}


