#include "swis.h"

#include "Desk.LinkList.h"
#include "Desk.WimpSWIs.h"
#include "Desk.DeskMem.h"

#include "FRedraw.h"
#include "Task.h"


typedef struct	{
	Desk_linklist_header	header;
	Desk_window_redrawblock	redraw;
	}
	redraw_block;

void	TaskModule_ForceRedraw( Desk_window_redrawblock* redraw0)
	{
	redraw_block*	redraw = Desk_DeskMem_MallocType( redraw_block);
	redraw->redraw	= *redraw0;
	Desk_LinkList_AddToTail( &TaskModule_globalblock.forceredraws, &redraw->header);
	TaskModule_globalblock.pollword++;
	}


Desk_bool	TaskModule_ForceRedraw_NonZeroPollWordHandler( Desk_event_pollblock* event, void* reference)
	{
	TaskModule_block*		app = (TaskModule_block*) reference;
	redraw_block*			redraw;
	
	for	(
		redraw = Desk_LinkList_FirstItem( &TaskModule_globalblock.forceredraws);
		redraw;
		)
		{
		redraw_block*	next = Desk_LinkList_NextItem( &redraw->header);
		
		/*
		Desk_Error2_TryCatch(
			Desk_Wimp_ForceRedraw( &redraw->redraw);
			,
			)
		*/
		_swix( Wimp_ForceRedraw, _INR(0,4), 
			redraw->redraw.window, 
			redraw->redraw.rect.min.x, 
			redraw->redraw.rect.min.y, 
			redraw->redraw.rect.max.x, 
			redraw->redraw.rect.max.y
			);
		
		TaskModule_globalblock.pollword--;
		
		Desk_LinkList_Unlink( &TaskModule_globalblock.forceredraws, &redraw->header);
		Desk_DeskMem_Free( redraw);
		
		Desk_Debug_Printf( Desk_error_PLACE "Called Wimp_ForceRedraw\n");
		redraw = next;
		}
	
	Desk_Debug_Printf( Desk_error_PLACE "TaskModule_ForceRedraw_NonZeroPollWordHandler returning\n");
	return Desk_bool_FALSE;
	
	Desk_UNUSED( event);
	Desk_UNUSED( app);
	}
