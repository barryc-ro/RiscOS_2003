; s.Buffered
;
; Handle buffered list of actions
;
;


;------------------------------------
; ReadBufferedList
; Reads and acts on the buffered list actions.
;
;
ReadBufferedList ROUT

        Push    "LR" 

01        
        Pull    "PC",VS
        LDR     r2,Buffered_list
        CMP     r2,#0
        Pull    "PC",EQ                 ; No more in list

        LDR     r14,[r2,#ic_next]
        Debug   sa,"Next block is ",r14
        STR     r14,Buffered_list       ; Unlink from list

        LDR     r0,[r2,#ic_action]
        Debug   sa,"Action is ",r0
        
        MOV     LR,PC
        ADD     PC,PC,r0,ASL #2
        B       %BT01
        B       AddIconXY               ; 0 = Add icon at x y
        B       RemoveIcon              ; 1 = Remove icon given path.
        B       AddTinyDirs             ; 2 = Add TinyDirs icon.
        B       AddIconXY               ; 3 = Add new TinyDir to icon bar.
        B       RemoveAllTinyDirs
        B       RemoveAllPinboard
        B       AddIconXY

RemoveAllPinboard             
        Push "LR"                 

        MOV     r0,#ModHandReason_Free
        SWI     XOS_Module
        Pull    "PC",VS

        Debug   sa,"Remove all pinboard icons"
        LDR     r0,backdrop_handle
        BL      SelectFileIcons
        LDR     r0,backdrop_handle
        BL      RemoveIcons

        ;LDR     r0,poll_word
        ;TST     r0,#PollWordReason_Recache
        ;BLEQ    ClearBackdrop           ; Clear the backdrop if no recache pending

        Pull    "PC"

RemoveAllTinyDirs
                 
        Push "LR"

        Debug   td,"Remove all TDs"

        MOV     r0,#ModHandReason_Free
        SWI     XOS_Module
        Pull    "PC",VS

        MOV     r0,#-2
        BL      SelectFileIcons
        MOV     r0,#-2
        BL      RemoveIcons

        Pull    "PC"


AddTinyDirs    
        Push    "LR"

        MOV     r0, #ModHandReason_Free         ; Delete buffered icon block
        SWI     XOS_Module
        Pull    "PC",VS 

        Debug   sa,"Block deleted"
Int_AddTinyDirs
        LDR     r0, TinyDirs_Handle             ; Do nothing if already exists
        CMP     r0, #0      
        Debug   sa,"Handle is ",r0
        Pull    "PC",GE     

        Debug   sa,"Doesn't already exist"


        LDR     r0,TinyDirs_Icons
        CMP     r0,#0                 
        Pull    "PC",GT                         ; Do nothing if there are other icons.

        Debug   sa,"number of icons is 0"

        ADR     r2, tinydirs_icon_name          ; Add Tinydirs icon
        MOV     r0, #SpriteReason_ReadSpriteSize
        SWI     XWimp_SpriteOp
        Pull    "PC",VS

        Debug   sa,"Sprite found"

        MOVVC   r0, r6                          ; creation mode of sprite
        MOVVC   r1, #VduExt_XEigFactor
        SWIVC   XOS_ReadModeVariable
        MOVVC   r5, r3, LSL r2
        MOVVC   r3, #0
        MOVVC   r1, #VduExt_YEigFactor
        SWIVC   XOS_ReadModeVariable
        Pull    "PC",VS
        MOV     r6, r4, LSL r2
        ADD     r6, r6, #20
        MOV     r4, #20
        Debug   sa,"Creating icon"

        ADR     r1, tinydirs_icon_block         ; Transfer data
        LDMIA   r1, {r7,r8,r9,r10}
        ADR     r1, dataarea
        MOV     r2, #-2
        STMIA   r1, {r2,r3,r4,r5,r6,r7,r8,r9,r10}
        SWI     XWimp_CreateIcon
        Pull    "PC",VS   

        Debug   sa,"Icon created"

        STR     r0, TinyDirs_Handle
        Pull    "PC"

tinydirs_icon_block
        DCD     &0000301A
tinydirs_icon_name
        DCB     "Directory",0,0,0
        ALIGN


; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; AddIconXY
;
; The buffered list contained an AddIcon reason code. Add the icon!

AddIconXY       ROUT
                ENTRY

        MOV     r10, r2
        MOV     r11, r0
        Debug   im,"Add icon at x, y"
        BL      GetIconSprite

        ADD     r2,r10,#ic_spritename+1 ; Point at sprite
        MOV     r0,#40                  ; Get sprite info
        SWI     XWimp_SpriteOp
        EXIT    VS         

        ; At this point, r6 = sprite mode r3=width r4=height (in pixels)
        ; Read X and Y eigen factors.
        MOV     r0,r6
        MOV     r1, #VduExt_XEigFactor
        SWI     XOS_ReadModeVariable
        MOVVC   r3,r3,ASL r2            ; r3 = width in OS units
        MOVVC   r1, #VduExt_YEigFactor
        SWIVC   XOS_ReadModeVariable
        MOVVC   r4,r4,ASL r2            ; r4 = height in OS units
        ADDVC   r4,r4,#&28
        EXIT    VS

        ; Get width of leafname in current desktop font
        MOV     r8,r9
        MOV     R0,#1
        MOV     R1,R9
        Push    "r2"
        MOV     R2,#0
        SWI     XWimp_TextOp
        Pull    "r2"
        CMP     r3,r0
        MOVLT   r3,r0

        ; See if icon is being placed on iconbar
        ADR     r1,dataarea
        LDR     r14,[r10,#ic_window]
        STR     r14,[r1]  
        Debug   im,"Window ",r14
        CMP     r14,#0
        BGE     %FT01                   ; Not on iconbar      

        ; On iconbar - tinydirs
        MOV     r0,#0
        STR     r0,[r1,#4]              ; x0 = 0
        MOV     r0,#-16                 ; y0 =-16
        STR     r0,[r1,#8] 
        STR     r3,[r1,#12]             ; x1
        ADD     r0,r0,r4                ; y1
        STR     r0,[r1,#16]
        LDR     r14,tinydirs_icon_flags
        STR     r14,[r1,#20]
        B       %FT20

; Work out bounding box for icon
01
         LDR     r5, [r10, #ic_x]
         LDR     r6, [r10, #ic_y]
         CMP     r11, #BufferReason_AddAtXYWithoutLock
         BLNE    AddIcon_LockToGrid
         STR     r5, [r1, #4]
         STR     r6, [r1, #8]
         ADD     r5, r5, r3
         ADD     r6, r6, r4
         STR     r5, [r1, #12]
         STR     r6, [r1, #16]

;        LDR     r0,[r10,#ic_x]          ; x0
;        LDR     r14,Pinboard_options
;        TST     r14,#PinboardOption_Grid
;        MOV     r14,#grid_x_spacing
;        BEQ     %FT02  
;        ADD     r0,r0,r14,LSR #1
;        DivRem  r5,r0,r14,r6
;        MUL     r0,r5,r14
;        STR     r0,[r10,#ic_x]

;02
;        SUBS    r5,r14,r3
;        ADDPL   r0,r0,r5,LSR #1         ; Centre in grid box

;        Debug   im,"X0 ",r0
;        STR     r0,[r1,#4]

;        ADD     r0,r0,r3                ; x1
;        Debug   im,"X1 ",r0
;        STR     r0,[r1,#12]

;        LDR     r0,[r10,#ic_y]          ;y1
        
;        LDR     r14,Pinboard_options
;        TST     r14,#PinboardOption_Grid
;        MOV     r14,#grid_y_spacing
;        BEQ     %FT03

;        LDR     r2,Screen_y1
;        SUB     r3,r2,r0
;        ADD     r3,r3,r14,LSR #1
;        DivRem  r5,r3,r14,r6
;        MUL     r0,r5,r14
;        SUB     r0,r2,r0
;        STR     r0,[r10,#ic_y]

;03
;        SUBS    r5,r14,r4
;        SUBPL   r0,r0,r5,LSR #1         ; Centre in grid box

;        SUB     r0,r0,r4
;        LDR     R14,icon_bar_height
;        CMP     R14,R0
;        MOVGT   R0,R14

;        Debug   im,"Y0 ",r0
;        STR     r0,[r1,#8]             ; y0

;        ADD     r0,r0,r4
;        Debug   im,"Y1 ",r0
;        STR     r0,[r1,#16]              ; y1

        LDR     r14,icon_flags
        STR     r14,[r1,#20]
                                        
20      ; Create icon
        STR     r9,[r1,#24]             ; -> Leaf Name
        ADD     r14,r10,#ic_spritename
        STR     r14,[r1,#28]            ; -> Validation string.
        MOV     r14,#14
        STR     r14,[r1,#32]            ; Length of sprite name
        SWI     XWimp_CreateIcon        ; Create the icon
        EXIT    VS
        STR     r0,[r10,#ic_icon]       ; Store the icon's handle

        ; Make sure ic_x and ic_y are correct
        LDR     r14, [r1, #4]
        STR     r14, [r10, #ic_x]
        LDR     r14, [r1, #8]
        STR     r14, [r10, #ic_y]

        ; Set icon state
        STR     r0,[r1,#4]
        MOV     r0,#0
        STR     r0,[r1,#8]
        STR     r0,[r1,#12]
        SWI     XWimp_SetIconState
        EXIT    VS
                                 
        ; Increment number of icons.
        LDR     r0,[r10,#ic_window]
        CMP     r0,#0                   ; if window handle is zero, it's a tinydir
        LDRLT   r0,TinyDirs_Icons
        LDRGE   r0,Pinboard_Icons
        ADD     r0,r0,#1
        STRLT   r0,TinyDirs_Icons
        STRGE   r0,Pinboard_Icons

        ; Now link the icon to the active icon list * AT END *
        ADR     r14,Icon_list
04
        LDR     r2,[r14,#ic_next]
        CMP     r2,#0
        MOVNE   r14,r2
        BNE     %BT04    
            
        ; r14 -> Last item.
        STR     r10,[r14,#ic_next]
        STR     r14,[r10,#ic_prev]
        MOV     r0,#0
        STR     r0,[r10,#ic_next]

        LDR     r0,Pinboard_options
        TST     r0,#PinboardOption_TinyDirs
        EXIT    EQ                              ; No TinyDirs icon.

        LDR     r0,TinyDirs_Icons
        CMP     r0,#0
        EXIT    EQ                              ; No icons on icon bar.

        LDR     r0,TinyDirs_Handle
        CMP     r0,#0
        EXIT    LT                              ; No TinyDirs icon. 

        ADR     r1,dataarea
        MOV     r14,#-2
        STR     r14,[r1]
        STR     r0,[r1,#4]
        SWI     XWimp_DeleteIcon
        MOV     r0,#-1
        STR     r0,TinyDirs_Handle
        EXIT
        

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; AddIcon_LockToGrid
;
; Work out where to place an icon on the grid.
; 
; In: r3, r4 - icon width and height
;     r5, r6 - x and y co-ord
;
; Out: r5, r6 - new x and y co-ord

AddIcon_LockToGrid ENTRY "r0"
        
        ; Check for Grid lock
        LDR     r0, Pinboard_options
        TST     r0, #PinboardOption_Grid
        BLNE    FindNearestGridXY

        ; No grid lock, so centre and return
        MOV     r0, #grid_x_spacing
        SUB     r0, r0, r3
        ADD     r5, r5, r0, LSR #1
        MOV     r0, #grid_y_spacing
        SUB     r0, r0, r4
        ADD     r6, r6, r0, LSR #1
        EXIT
                
      
;--------------------------------------------------------------------------
;Remove icon given path in icon block.
;Frees the input block, and the icon's block.
;
RemoveIcon      ROUT

        Push    "r0-r4,LR"

        LDR     r0,Icon_list
01
        Debug   pi,"Next icon is ",r0
        CMP     r0,#0
        Pull    "r0-r4,PC",EQ   ; End of list

        ADD     r1,r0,#ic_path
        ADD     r3,r2,#ic_path
        DebugS  pi,"First path is ",r1
        DebugS  pi,"Second path is ",r3
02
        LDRB    r14,[r1],#1
        BIC     r14,r14,#&20
        LDRB    r4 ,[r3],#1
        BIC     r4,r4,#&20
        TEQ     r4,r14
        LDRNE   r0,[r0,#ic_next]
        BNE     %BT01           ; Not equal, check next block.

        CMP     r14,#0          ; At end ?
        BNE     %BT02           ; No, check next character.

; Found icon, delete it.

        MOV     r4,r0

        ADR     r1,dataarea
        LDR     r0,[r4,#ic_window]
        STR     r0,[r1]
        LDR     r0,[r4,#ic_icon]
        STR     r0,[r1,#4]
        MOV     r0,#1:SHL:23
        ORR     r0,r0,#1:SHL:7
        STR     r0,[r1,#8]
        STR     r0,[r1,#12]
        SWI     XWimp_SetIconState
        STRVS   r0,[sp]
        Pull    "r0-r4,PC",VS

        ADR     r1,dataarea
        SWI     XWimp_DeleteIcon

        LDR     r0,[r1]
        CMP     r0,#0
        LDRLT   r0,TinyDirs_Icons
        LDRGE   r0,Pinboard_Icons
        SUB     r0,r0,#1
        STRLT   r0,TinyDirs_Icons
        STRGE   r0,Pinboard_Icons

        MOV     r0,#ModHandReason_Free
        SWI     XOS_Module

        LDR     r1,[r4,#ic_next]
        LDR     r2,[r4,#ic_prev]
        CMP     r2,#0
        STREQ   r1,Icon_list
        STRNE   r1,[r2,#ic_next]
        CMP     r1,#0
        STRNE   r2,[r1,#ic_prev]

        MOV     r2,r4
        SWI     XOS_Module
        STRVS   r0,[sp]
        Pull    "r0-r4,PC",VS

        BL      Redraw           

        LDR     r0,Pinboard_options
        TST     r0,#PinboardOption_TinyDirs
        Pull    "r0-r4,PC",EQ
          
        LDR     r0,TinyDirs_Icons
        CMP     r0,#0
        Pull    "r0-r4,PC",NE

        MOV     r1,#-2
        MOV     r0,#BufferReason_AddTinyDirsIcon
        BL      BufferIcon
        STRVS   r0,[sp]
        Pull    "r0-r4,PC"


; GetIconSprite
;
; Entry
;       r2 -> Icon block
; Exit
;       r9 -> Leaf name.
;       Sprite name filled in icon block.

GetIconSprite   ROUT

        Push    "r0-r10,LR"

        MOV     r10,r2

        ADD     r9,r2,#ic_path
        MOV     r8,r9
01
        LDRB    r14,[r8],#1
        CMP     r14,#"."
        MOVEQ   r9,r8
        CMP     r14,#0
        BNE     %BT01

        DebugS  pi,"Leaf is ",r9

        LDR     r0,[r2,#ic_filetype]
        CMP     r0,#-1
        ADREQL  r0,SpriteName_Untyped
        BEQ     %FT10

        CMP     r0,#&1000               ; Directory ?
        BEQ     resolve_directorysprite

        CMP     r0,#&2000               ; Application.
        BNE     %FT01    

        ; It's an application  Filer_Boot it to make sure we have the sprite.

        ADRL    r0,FilerBoot_command
        ADR     r1,dataarea
        BL      Copy_r0r1

        ADD     r0,r10,#ic_path
        BL      Copy_r0r1
        ADR     r0,dataarea
        DebugS  pi,"Boot command is ",r0
        SWI     XOS_CLI
        Debug   pi,"Returned from OS_CLI"
        Pull    "r0-r10,PC",VS

; Check that this sprite exists

        MOV     r0,#40                  ; Get sprite info
        MOV     r2,r9                   ; Sprite name = leaf name.
        SWI     XWimp_SpriteOp
        ADRVSL  r0,SpriteName_Application
        MOVVC   r0,r9

        B       %FT10

01                                      ; It's a file build name.
        Debug   pi,"Its a file"
                  
        ADRL    r0,SpriteName_File
        ADR     r1,dataarea
        BL      Copy_r0r1
        LDR     r0,[r2,#ic_filetype]
        SUB     r1,r1,#1
        MOV     r2,#32
        SWI     XOS_ConvertHex4
        Pull    "r0-r10,PC",VS
        MOV     r14,#"_"
        STRB    r14,[r0]

; Check that this sprite exists

        MOV     r0,#40                  ; Get sprite info
        ADR     r2,dataarea
        DebugS  pi,"Check for ",r2
        SWI     XWimp_SpriteOp
        ADRVC   r0,dataarea
        ADRVS   r0,SpriteName_Untyped
        
10                                      ; r1 -> sprite name
        ADDS    r1,r10,#ic_spritename   ; Clears V
        MOV     r14,#"S"                ; "S" for validation string
        STR     r14,[r1],#1
        BL      Copy_r0r1

        STR     r9,[sp,#9*4]

        Debug   pi,"Returning"
        Pull    "r0-r10,PC"


resolve_directorysprite
; this is required as 'typed' directories (eg. archives and dos discs) get passed
; accross as ordinary directories.
        Push    "R1-R5"
        ADD     R1,R2,#ic_path
        MOV     R0,#17
        SWI     XOS_File
        ADRVS   r0,SpriteName_Directory
        BVS     %FT80   
        TEQ     R0,#3                                   ; image file?
        ADRNE   r0,SpriteName_Directory
        BNE     %FT80
        LDR     R4,=&fff00000
        AND     R3,R2,R4
        TEQ     R3,R4
        ADRNE   r0,SpriteName_Directory                 ; load/exec only!
        BNE     %FT80
; R2 bits 19...8 are the real type
        AND     R2,R2,R4, LSR #12
        ADR     r0,SpriteName_File
        ADR     r1,dataarea
        BL      Copy_r0r1
        MOV     r0,r2, LSR #8
        SUB     r1,r1,#1
        MOV     r2,#32
        SWI     XOS_ConvertHex4
        ADRVS   r0,SpriteName_Directory
        BVS     %FT80
        MOV     r14,#"_"
        STRB    r14,[r0]

; Check that this sprite exists

        MOV     r0,#40                  ; Get sprite info
        ADR     r2,dataarea

        SWI     XWimp_SpriteOp
        ADRVC   r0,dataarea
        ADRVS   r0,SpriteName_Directory
80
        Pull    "R1-R5"
        B       %BT10


SpriteName_Untyped      DCB     "File_xxx",0
SpriteName_Directory    DCB     "Directory",0
SpriteName_File         DCB     "File_",0   
SpriteName_Application  DCB     "Application",0
FilerBoot_command       DCB     "Filer_Boot ",0
                        ALIGN
icon_flags              DCD     &4000A50B
tinydirs_icon_flags     DCD     &1700A50B



        LNK     s.Mouse
