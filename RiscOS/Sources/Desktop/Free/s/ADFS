;-------------------------------------------------------------------------
;
; adfs_entry  
;
; Entry point for adfs discs.
adfs_entry
         
        TEQ     r0,#FreeReason_GetName  
        BEQ     adfs_GetName  
        TEQ     r0,#FreeReason_GetSpace         
        BEQ     adfs_GetSpace  
        TEQ     r0,#FreeReason_ComparePath
        BEQ     adfs_ComparePath  
        TEQ     r0,#FreeReason_GetSpace64
        BEQ     adfs_GetSpace64
     
        Pull    "PC"

;-----------------------------------------------------------------------
; adfs_GetName
;
; Put the name of the drive specified in r3 into the buffer at r2
;
adfs_GetName

        Push    "r1-r3"

        Debug   xx,"Get name"

        MOV     r0,r3
        ADR     r1,disc_desc
        SWI     XADFS_DescribeDisc
        Pull    "r1-r3,PC",VS

        Debug   xx,"Get name- SWI OK"

        ADD     r4,r1,#22

      [ Version >= 4               ; Cope with unnamed discs
        LDRB    r14,[r4]
        CMP     r14,#" "
        MOVLE   r14,#":"
        STRLEB  r14,[r2],#1
        MOVLE   r4,r3
      ]

        MOV     r0,r2
      [ Version >= 4
        MOV     r3,#10             ; Max length
        BL      copy_r0r4r3_space  ; Copy name to buffer
      |
        BL      copy_r0r4_null     ; Copy name to buffer
      ]

        MOV     r0,#11             ; Name is 10 chars + terminator.

        Debug   xx,"r0 set ",r0

        Pull    "r1-r3,PC"
;-----------------------------------------------------------------------
; adfs_GetSpace
;
; Put the free space on the drive specified in r3 into the buffer at r2
;
adfs_GetSpace

        Push    "r1-r3"

        Debug   xx,"Get space"


        MOV     r0,r3
        ADR     r1,disc_desc
        SWI     XADFS_DescribeDisc
        Pull    "r1-r3,PC",VS

        LDR     r0,[r1,#16]        ; Store disc size in buffer.
        STR     r0,[r2]

        MOV     r0,r3
        SWI     XADFS_FreeSpace
        Pull    "r1-r3,PC",VS

        STR     r0,[r2,#4]         ; Free space
        LDR     r1,[r2]
        SUB     r1,r1,r0
        STR     r1,[r2,#8]         ; used space

        Pull    "r1-r3,PC"

;-----------------------------------------------------------------------
; adfs_GetSpace64
;
; Put the free space on the drive specified in r3 into the buffer at r2
;

adfs_GetSpace64

        Push    "r1-r5"

        Debug   xx,"Get space64"

        MOV     r0,r3
        ADR     r1,disc_desc
        SWI     XADFS_DescribeDisc
        Pull    "r1-r5,PC",VS

        LDR     r0,[r1,#16]        ; Store disc size in buffer.
        STR     r0,[r2]

        LDR     r0,[r1,#36]        ; and the high word
        STR     r0,[r2,#4]

        MOV     r0,r3 
        MOV     r5,r2              ; save the buffer pointer
        SWI     XADFS_FreeSpace64
        
        ; if this errors we return with V CLEAR, since the error is anticipated
        ; and we then fall back to trying _FreeSpace
        
        BVS     %FT02

        STR     r0,[r5,#8]         ; free space (low)
        STR     r1,[r5,#12]        ; free space (high)
        
        LDR     r3,[r5]            ; disc size (low)
        LDR     r4,[r5,#4]         ; disc size (high)
        
        mextralong_subtract r0,r1,r3,r4,r0,r1
        
        STR     r0,[r5,#16]        ; used space (low)
        STR     r1,[r5,#20]        ; used space (high)

        MOV     r0,#0              ; indicate that we handled the new reason code
        
02
        CLRV  

        Pull    "r1-r5,PC"

;-------------------------------------------------------------------------
; adfs_ComparePath
;
;
 
adfs_ComparePath

        Push  "r0-r9"

        Debug  xx,"ADFS compare path"

        ADR    r1,dataarea
01
        LDRB   r0,[r2],#1
        CMP    r0,#"."
        Debug  xx,"Copy ",r0
        MOVEQ  r0,#0
        STRB   r0,[r1],#1
        CMP    r0,#0
        BNE    %BT01            ; Copy to first "."

        ADR    r3,dataarea
        MOV    r2,r3
        Push   "PC"
        B      adfs_GetName
        MOV    r0,r0
        Debug  xx,"Got name ",r0

        ADR    r2,dataarea
        LDR    r3,[sp,#3*4]
        CMPSTR r2,r3

        Pull   "r0-r9,PC"

        LNK     s.RAMFS
