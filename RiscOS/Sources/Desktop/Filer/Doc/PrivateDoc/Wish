Here is the wish/request/bug list. It is probably out of date, but here is
somewhere to note down these things.

Filer Action Window
*  TCaspell: No close after a few seconds windows - Suck it and see. I feel
   there won't be a problem with these, but I'm prepeared to change it if
   this isn't the case.
*  Result is visible.
*  KAllchorne: Settype on an unstamped file should stamp it, and thus set
      the type too. - only for load & exec = &ffffffff (really a fileswitch
      bug)
*  JSutton: show when an action has finished by some means.
*  DSeal: enable completely read files to be written to disc when the link
      gets too flakey to continue.
*  JAllin: Is Quiet obvious/necessary?
*  AFrance: When shift-dragging the destination should be deleted if it would
      have been deleted during a normal copy operation.
*  WStoye: Document extentions in DocRISCOS+.
*  LHardwick: Log of failures/successes.
*  RWilson: queued filer actions (see Think).
*  RWilson: close box on action window.

Bugs:
*  JUrquhart:
     I've noticed several times that if I write to a floppy disk using "filer"
     two different course of action can cause problems.

        1. Several copies in parallel to the same floppy make it unreadable (it
           reports a disk error when the copied files are read).
        
       2.  Pause a write to a floppy disk can cause the copied files to be
           unreadable.

      The disks are unreadable on my machine and other machines (all A500s).
     Re-writing onto the same floppy (without using the parallel facility or 
     pause) after the previous problems seems to fix it and it becomes readable.
*  WStoye + general: append 'when executing !boot/*iconspriting !sprites' to errors
     encountered during these operations.
*  NRaine: Possible failure to write out read-in, newer files.
*  TDobson: Possible poo on ones self loading in files.
*  NRaine: Memory shortage may cause machine enstiffment.

General
*  Disallowed options on files should be greyed out. This needs cooperation
   from the filing systems. At the moment there is no way to determine
   whether one can do owner specific operations in a directory easily.
*  Arrange vertically/horizontally option. This is a major feature. See
   William about this once all the other stuff has been done.
*  PColmer: Access sub menu should default to non-recursive.
*  ASmith: shift-open of a directory shouldn't load application stuff.
*  Several inside and outside of Acorn: The disc icons should correspond to $ so
     that a backup could be started by dragging one disc onto another.
*  JCoxhead: A whole bunch of suggestions:

   A separate Filer icon would have these properties:

         Directories dragged onto it would be opened.

         It would have a menu with: `Info =>,' `Display =>' (Large icons,
      Small icons, Full info), `Sort =>' (Name, type, Size, Date), `Show
      Actions,' `Close All,' `Save =>' (data icon).

         The main menu for each individual Filer would have `Display =>'
      (Large icons, Small icons, Full info), Sort => (Name, Type, Size,
      Date), but not `Show actions,' `Close all' or `Save.' The display
      options only affect the current directory, not any others (which
      continue to use the opions set on the icon-bar menu). The other
      entries would be as present.

   Open questions: 

         Would happens when you drop a non-directory file onto the Filer
      icon?

         What does a select click on the Filer icon do?

   Other ideas:

         Instead of each filing system appearing as its own icon on the icon
      bar, the Filer could keep track of that information, which it could
      present in a special window that has devices in it instead of
      directories (where each device represents its own root directory):
      then all the files on one device could be copied onto another by one
      drag operation. This window has no `New directory' option, of course,
      and it would also have to give access somehow to the facilities at
      present offered by each filing system.

         This window could appear after a single click on the Filer icon.
      (This could be done by default on startup.)

*  TCaspell: improve sticky selection: double clicking within a selection opens
     the clicked-upon thing, deselects it and leaves the rest selected. This is
     perceived as being onconsistent.
*  MChallis: Apply recursively should be optional for all operations, not just
      access setting.
*  JCoxhead: grey out set type when only a directory or application is selected.
*  PSwindell: deselect items only when finished being read by background operation.
*  NRaine: Invalidate only those objects which have been altered, update only
      those bits of the visible objects which have changed, re-read only those bits
      of the object's information which need re-reading, block copy when possible.
*  KKirkham: as display applies to all files this should be made more explicit, eg
      by selecting all files when display option is chosen and hanging display
      off select all.
*  Recache time tuning depending on time taken to recache last time.
*  NRaine, RWilson: Shift or ctrl or ... to prevent booting of apps when
        openning applications.
*  JRoach: shift-double-click should edit the object more generally. It
        already edits applications, so this should be a simple logical
        extension of what's already there.

Bugs:

*  JAllin: Sorting by type doesn't sort untyped files correctly. This is due to
     the check for typed files being incorrect.
*  DElworthy, TCaspell: Heap full/broken/... from FileSwitch occasionally. This
     might have been brought on by new Filer, but this error is only detected by
     FileSwitch (curious eh?). My suspision is that FileSwitch has a bug in it
     (always blame somebody else).
*  WStoye: document changes in DocRISCOS+

Fixed, and need documentation:

*  JThackray: Filer's idea of date stamp is inconsistent with rest of RISCOS
     A file is officially not date stamped if the top three nibbles of the 
     load address are not fff or if the load and execute addresses are the
     same.

Other areas of difficulty:

*  Vax fileserver doesn't support OS_File 7 (create a file). Andy Ingles
      says this will be resolved if there is time, and it may be cured
      if the fileserver emulator is ported to the R140 and rewritten in
      C.

