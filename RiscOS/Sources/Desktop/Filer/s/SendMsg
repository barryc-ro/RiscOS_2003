; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; SendDataOpenMessage
; ===================

;       r1 -> full dirname
;       r2 -> leafname
;       r3 = file type
;       r4 = who to send it to (task handle, window handle or 0)
;       r5 = icon handle (only needed if r4 = window handle)

SendDataOpenMessage     Entry   "r0,r7"
        MOV     r0, #Message_DataOpen
        MOV     r7, #0
        BL      SendMessageCommon
        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; SendMessage
; ===========

; In    r0 = message action
;       r1 -> full dirname
;       r2 -> leafname
;       r3 = file type
;       r4 = who to send it to (task handle, window handle or 0)
;       r5 = icon handle (only needed if r4 = window handle)

SendMessage     Entry   "r7"
        MOV     r7, #-1
        BL      SendMessageCommon
        EXIT


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; SendMessageCommon
; =================

; In    r0 = message action
;       r1 -> full dirname
;       r2 -> leafname
;       r3 = file type
;       r4 = who to send it to (task handle, window handle or 0)
;       r5 = icon handle (only needed if r4 = window handle)
;       r7 = Value for R1+36 field
;       If version > 140
;          r8,r9 Two words to place after the path name.
; Used to send DataOpen/DataLoad messages from Filer; both have same data fmt

 [ disallow_longpaths
maximum_pathlength      *       200
        MakeErrorBlock  Filer_BadPath
 ]

SendMessageCommon Entry "r1-r9"

 [ disallow_longpaths
        BL      strlen_excludingspaces
        CMP     r3, #maximum_pathlength
        BLE     %FT10
        ADR     r0, ErrorBlock_Filer_BadPath
        BL      LookupError
        EXIT
10      LDR     r3, [sp, #4*2]
 ]

        SUB     sp, sp, #256            ; make temp frame
        ADD     r1, sp, #ms_yourref
        MOV     r2, r0
        MOV     r0, #0                  ; yourref = 0 -> start of sequence
        MOV     r8, r3                  ; get filetype in suitable register
        LDR     r3, windowhandle
        LDR     r4, iconhandle
        LDR     r5, absmousex
        LDR     r6, absmousey
 [ debugtask
 DREG r2, "SendMessage: action ",cc,Integer
 DREG r3, " window ",cc,Integer
 DREG r4, ", icon ",cc
 DREG r5, ", mx ",cc,Integer
 DREG r6, ", my ",cc,Integer
 DREG r8, ", file type "
 ]
        STMIA   r1!, {r0, r2-r8}        ; yourref/action/w/i/x/y/
 ASSERT ms_action               = ms_yourref + 4
 ASSERT msDataTransfer_window   = ms_yourref + 8
 ASSERT msDataTransfer_icon     = ms_yourref + 12
 ASSERT msDataTransfer_x        = ms_yourref + 16
 ASSERT msDataTransfer_y        = ms_yourref + 20
 ASSERT msDataTransfer_filesize = ms_yourref + 24
 ASSERT msDataTransfer_filetype = ms_yourref + 28
 ASSERT msDataTransfer_filename = ms_yourref + 32

        LDR     r2, [sp, #4*0 + 256]    ; r1in = dirname
 [ debugtask
 DSTRING r2, "dirname ",cc
 ]
        BL      strcpy_excludingspaces  ; stop on spaces so Neil can send wally
                                        ; dirnames at top level

        LDR     r2, [sp, #4*1 + 256]    ; r2in = leafname
 [ debugtask
 DSTRING r2, ", leafname "
 ]
        BL      AppendLeafnameToDirname

        BL      strlen
        ADD     r1, r1, r3

        ADD     r1, r1, #3+1            ; round up to word size (remember null)
        BIC     r1, r1, #3
      [ version >= 140
        LDR     r0,[sp,#4*7 + 256]      ; Get entry r8
        STR     r0,[r1],#4
        LDR     r0,[sp,#4*8 + 256]      ; Get entry r9
        STR     r0,[r1],#4
      ]
        SUB     r1, r1, sp
        STR     r1, [sp, #ms_size]

        MOV     r0, #User_Message_Recorded
        MOV     r1, sp
        LDR     r2, [sp, #4*3 + 256]    ; r4in = who to send it to
        LDR     r3, [sp, #4*4 + 256]    ; r5in = icon handle
 [ debugtask
 DREG r2,"Sending recorded message from Filer to thandle/whandle ",,Word
 ADD r14, r1, #msDataTransfer_filename ; a la doc'n
 DSTRING r14, "Full filename is "
 LDR r14, [r1, #msDataTransfer_filetype]
 DREG r14, "Filetype "
 DREG r0,  "Event type "
 LDR r14, [r1, #ms_action]
 DREG r14, "Action "
 LDR r14, [r1, #ms_size]
 DREG r14, "Message size "
 ]
        SWI     XWimp_SendMessage
 [ debugtask
 BVC %FT00
 DLINE "***Error from SendMessage"
00
 DLINE "message sent"
 ]
 [ version >= 138
        CLRV
 ]
        ADD     sp, sp, #256            ; free temp frame
        EXIT

        END
