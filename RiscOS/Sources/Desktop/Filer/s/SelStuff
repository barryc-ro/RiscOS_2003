 [ retainsel
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; In    r4 -> old directory viewer
;       r7 -> new directory viewer

; For each object in the new directory, look it up in the old directory
; and copy across its selection state

CopySelectionStateAcross ENTRY "r1, r3, r5, r6"

        LDR     r3, [r7, #d_nfiles]     ; r3 = no of files to do
        CMP     r3, #0
        EXIT    EQ                      ; [nothing in this new viewer]
                                        ; eg. everything's been deleted

        LDR     r6, [r7, #d_dirname]
        ADD     r5, r7, #d_headersize   ; first fileinfo^

90      LDR     r1, [r5, #df_fileptr]
        ADD     r1, r6, r1, LSR #16     ; leafname^
        BL      CopySelectionStateForFile

        SUBS    r3, r3, #1
        ADDNE   r5, r5, #df_size        ; next fileinfo^
        BNE     %BT90

        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; In    r1 -> new file leafname
;       r4 -> old dirviewer block
;       r5 -> new fileinfo block

; Loop over files in old dirviewer, see if any match

CopySelectionStateForFile ENTRY "r2, r3, r6, r8"

        LDR     r3, [r4, #d_nfiles]     ; r3 = no of files to do
        CMP     r3, #0
        EXIT    EQ                      ; [nothing in this old viewer]
                                        ; rarer: nothing there to start with

        LDR     r6, [r4, #d_dirname]
        ADD     r8, r4, #d_headersize   ; first fileinfo^

90      LDR     r2, [r8, #df_fileptr]
        ADD     r2, r6, r2, LSR #16     ; leafname^
        BL      strcmp

        LDREQB  r14, [r8, #df_state]    ; Copy over state byte
        STREQB  r14, [r5, #df_state]
        EXIT    EQ

        SUBS    r3, r3, #1
        ADDNE   r8, r8, #df_size        ; next fileinfo^
        BNE     %BT90

        EXIT
 ]

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; In    r4 -> dirviewer block

InitSelection ROUT

        STR     r4, sel_dir

        LDR     r2, [r4, #d_dirnamestore] ; r2 -> dirname
        STR     r2, sel_dirname

        LDR     r3, [r4, #d_nfiles]
        ADD     r3, r3, #1              ; will be adjusted below
        STR     r3, sel_filenumber

        ADD     r5, r4, #d_headersize - df_size ; ditto
        STR     r5, sel_fileblock

; .............................................................................
; Out   NE: r5 = Nowt if nothing doing
;       EQ: selection set up
;           r2 -> selected leafname
;           r3  = selected file number
;           r4 -> selected dirviewer block
;           r5 -> selected fileinfo block

GetSelection ENTRY

        LDR     r3, sel_filenumber
        LDR     r4, sel_dir
        LDR     r5, sel_fileblock

10      SUBS    r3, r3, #1
        BLE     %FA90

        ADD     r5, r5, #df_size

        LDRB    r14, [r5, #df_state]    ; Is it selected ?
        TST     r14, #dfs_selected
        BEQ     %BT10

; Found one

        STR     r3, sel_filenumber
        STR     r5, sel_fileblock

        LDR     r2, sel_dirname
 [ debugsel
 DREG r5,"Returing selection: ",cc
 DSTRING r2,", dirname ",cc
 ]
        LDR     r14, [r5, #df_fileptr]
        LDR     r2, [r4, #d_filenames]
        ADD     r2, r2, r14, LSR #16    ; r2 -> leafname
        STR     r2, sel_leafname

        BL      FindFileType
;      [ version >= 143
;        LDRB    r14,[r5,#df_type]
;        TEQ     r14,#dft_partition
;        MOVEQ   r3,#filetype_directory
;      ]
        STR     r3, sel_filetype
 [ debugsel
 DSTRING r2,", leafname ",cc
 DREG r3,", filetype ",cc
 ]

        LDR     r3, sel_filenumber
 [ debugsel
 DREG r3,", file number "
 ]

        CMP     r0, r0                  ; EQ
        EXIT


90      addr    r2, anull
        STR     r2, sel_leafname

        MOV     r14, #-2
        STR     r14, sel_filetype

 [ debugsel
 DLINE "No selection found"
 ]
        MOVS    r5, #Nowt               ; NE
        EXIT
        END
