; DragASprite support module

                ^ 0,r12
wsp             #       4       ; workspace pointer
fgsa            #       4       ; foreground sprite area
bg0sa           #       4       ; background 0 sprite area
bg1sa           #       4       ; background 1 sprite area
bl_offset_x     #       4       ; offset from drag box origin to sprite origin
bl_offset_y     #       4       ; offset from drag box origin to sprite origin
x_size          #       4       ; size in OS units of sprite
y_size          #       4       ; size in OS units of sprite
FirstMoveIsPlot #       1
wss     *       :INDEX:@

Nowt    *       &bc000003

        MACRO
$Label  SortRegs $rl, $rh
$Label  CMP     $rl, $rh
        Swap    $rl, $rh, GT
        MEND

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Module header
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Module_BaseAddr
MySWIBase       *       Module_SWISystemBase + DragASpriteSWI * Module_SWIChunkSize

        DCD     0       ; Start
        DCD     Support_Init            -Module_BaseAddr
        DCD     Support_Die             -Module_BaseAddr
        DCD     0       ; Service call
        DCD     Support_TitleString     -Module_BaseAddr
        DCD     Support_HelpString      -Module_BaseAddr
        DCD     0       ; Commands
        DCD     MySWIBase
        DCD     Support_Swi             -Module_BaseAddr
        DCD     Support_SwiList         -Module_BaseAddr
        DCD     0       ; SWI decode code

Support_TitleString     DCB     "DragASprite", 0

Support_HelpString
        DCB     "Drag A Sprite",9, "0.12 (16 Feb 1998)", 0

Support_SwiList
        DCB     "DragASprite", 0
        DCB     "Start", 0
        DCB     "Stop", 0
        DCB     0

        ALIGN
Support_Init
        Push    "lr"
        MOV     r0, #ModHandReason_Claim
        MOV     r3, #wss
        SWI     XOS_Module
        STRVC   r2, [r12]
        STRVC   r12, [r2, #:INDEX:wsp]
        MOV     r12, r2
        ChkKernelVersion
        MOV     r2, #Nowt
        STR     r2, fgsa
        STR     r2, bg0sa
        STR     r2, bg1sa
        MOV     r2, #0
        Pull    "pc"

Support_Die ENTRY
        LDR     r12, [r12]
        BL      Done
        EXIT

Support_Swi ROUT
        LDR     r12, [r12]
        CMP     r11, #(SwiIssue_End - SwiIssue_Start)/4
        ADDLO   pc, pc, r11, ASL #2
        B       SwiOutOfRange
SwiIssue_Start
        B       StartUp
        B       Done
SwiIssue_End
SwiOutOfRange
        ADR     r0, ErrorBlock_NoSuchSWI
        ADR     r1, Support_TitleString
        B       LookupError

        MakeInternatErrorBlock NoSuchSWI,,BadSWI

; **********************************************************************
;
; Message token lookup function.  We only use Global messages.
;

LookupError
        Push    "r1-r7,lr"
        MOV     r4, r1
        MOV     r1, #0
        MOV     r2, #0
        MOV     r5, #0
        MOV     r6, #0
        MOV     r7, #0
        SWI     XMessageTrans_ErrorLookup
        Pull    "r1-r7,pc"

        END
