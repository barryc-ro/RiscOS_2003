/*----------------------------------------------------------------------*/
/*    Filename    : h.db                                        	*/
/*    Author	  : Steve Hunt, hacked by Rich Buckley			*/
/*    Date        : Fri 15th February 1995				*/
/*    Description : A set of veneers which intercept malloc and free    */
/*    		    calls. Information is then dumped to a debug file   */
/* 		    regarding the block allocations. At any time, a 	*/
/* 		    Check of the allocated blocks can be made by calling*/
/* 		    db_check. A count is maintained of the number*/
/* 		    of allocated blocks, and a unique block id. The id  */
/* 		    dependant on the order that the allcation was       */
/* 		    performed. 						*/
/*    Modification history:    	    		       			*/
/*    		   							*/
/*----------------------------------------------------------------------*/

#ifndef __db_h
#define __db_h

#include <stdlib.h>
#include "constants.h"

/*
 * Define this for a debugging malloc.  Having DEBUG set too is
 * a good idea if you want to see the messages...
 */

#if DEBUG

#ifdef malloc
#undef malloc
#endif
extern void *db_malloc (size_t size);
#define malloc(size) db_malloc (size)

#ifdef free
#undef free
#endif
extern void db_free (void *ptr);
#define free(ptr) db_free (ptr)

extern void db_check(void);

extern void db_query(void *m_void);

#else

#define db_check() ((void) 0)
#define db_query() ((void) 0)

#endif /* DEBUG */

extern void db_file_init(char*filename);
extern int  db_printf   (char *format, ...);

#endif /* __db_h */
