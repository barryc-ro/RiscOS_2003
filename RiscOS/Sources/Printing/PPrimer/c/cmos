/*----------------------------------------------------------------------*/
/*    Filename    : h.cmos                                       	*/
/*    Author	  : R.W.Buckley						*/
/*    Date        : Mon 20th February 1995				*/
/*    Description : Functions to read/write to CMOS RAM			*/
/*    Modification history:    	    		       			*/
/*    		   							*/
/*----------------------------------------------------------------------*/
#include <stdlib.h>

#include "kernel.h"
#include "swis.h"
#include "constants.h"

#include "nvram.h"

extern _kernel_swi_regs reg; /* Global set of registers to use */
extern _kernel_oserror *err; /* Error block */

/*----------------------------------------------------------------------
    Name : config_get_printer

    Description : Read byte in CMOS to get current printer configuration
----------------------------------------------------------------------*/
_kernel_oserror *cmos_get_printer(int *i_printer, int *i_colour, int *i_paper)
{
  /* Try reading from new NVRAM location first. */
  reg.r[0] = (int)PrinterIDTAG;
  reg.r[1] = (int)i_printer;
  reg.r[2] = 0;
  err = _kernel_swi(NVRAM_Read, &reg, &reg);
  if ((err != NULL) || (reg.r[0] < 0))
  {
    /* Reading new location failed so try the old one. */
    reg.r[0] = 161;           /* Read CMOS RAM */
    reg.r[1] = PrinterIDCMOS; /* Location of printer ID byte */
    err = _kernel_swi(OS_Byte, &reg, &reg);  ERROR_RETURN(err);
    *i_printer = reg.r[2];
  }

  reg.r[1] = PSITCMOS;      /* Location of printer information byte */
  err = _kernel_swi(OS_Byte, &reg, &reg);  ERROR_RETURN(err);
  *i_colour = reg.r[2] & PSITCMOS_MASK;

  reg.r[1] = PrinterPaperCMOS;
  err = _kernel_swi(OS_Byte, &reg, &reg);  ERROR_RETURN(err);
  *i_paper = reg.r[2] & PrinterPaper_MASK;
  return NULL;
}

#if 0
/****** NOT USED AT PRESENT ******/

/*----------------------------------------------------------------------
    Name : config_set_printer

    Description : Set byte in CMOS to change current printer configuration
----------------------------------------------------------------------*/
_kernel_oserror *cmos_set_printer(int i_printer, int i_colour)
{
  /* Try writing to new NVRAM location first. */
  reg.r[0] = (int)PrinterIDTAG;
  reg.r[1] = (int)&i_printer;
  reg.r[2] = 0;
  err = _kernel_swi(NVRAM_Write, &reg, &reg);
  if ((err != NULL) || (reg.r[0] < 0))
  {
    /* Writing new location failed so try the old one. */
    reg.r[0] = 162;           /* Write CMOS RAM */
    reg.r[1] = PrinterIDCMOS; /* Location of printer ID byte */
    reg.r[2] = i_printer;
    err = _kernel_swi(OS_Byte, &reg, &reg);  ERROR_RETURN(err);
  }
  reg.r[0] = 161;           /* Read CMOS RAM */
  reg.r[1] = PSITCMOS;      /* Location of printer information byte */
  err = _kernel_swi(OS_Byte, &reg, &reg);  ERROR_RETURN(err);

  if (i_colour == 1)
    reg.r[2] |= PSITCMOS_MASK;
  else
    reg.r[2] &= ~PSITCMOS_MASK;

  reg.r[0] = 162;           /* Write CMOS RAM */
  err = _kernel_swi(OS_Byte, &reg, &reg);

  return err;
}

#endif
