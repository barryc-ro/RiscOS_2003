; > Core.JPEGSWI


;----------------------------------------------------------------------------
;
; SWI PDriver_JPEGSWI implementation
;
;----------------------------------------------------------------------------

; ----- jpegswi -----
;  Entry: R8 = reason code (original SWI number - SWI chunk)
;         all other registers as for original JPEG SWI

jpegswi
        Push    "LR"
        CMP     R8, #JPEG_PlotScaled - JPEG_Info
        BEQ     jpegswi_plotscaled
        CMP     R8, #JPEG_PlotTransformed - JPEG_Info
        BEQ     jpegswi_plottransformed
        CMP     R8, #JPEG_PlotFileScaled - JPEG_Info
        BEQ     jpegswi_nosupport
        CMP     R8, #JPEG_PlotFileTransformed - JPEG_Info
        Pull    "PC", NE

jpegswi_nosupport
        Push    "R0-R7,R9"
        LDMIA   R12,{R10,R11}           ;R10 =current handle, R11 =current workspace
        ADR     R0, ErrorBlock_PrintJPEGNoSupp
        BL      LookupSingle            ; Always sets the V flag
        BL      makepersistenterror
        STRVS   R0, [SP]
        Pull    "R0-R7,R9,PC"

        MakeInternatErrorBlock PrintJPEGNoSupp,,JPNoSup

jpegswi_plottransformed
        Push    "R0-R7,R9"
        LDMIA   R12,{R10,R11}           ;R10 =current handle, R11 =current workspace
        BL      checkpersistenterror
        BVS     jpegswi_persistentreturn
;
;have to adjust positional parts of matrix or dest. coords
;according to origin and useroffset
;
        TST     R1, #1  ; coords or matrix
        BNE     jpegswi_pt_coords
;matrix
        Push    "R4-R7,R8,R9"
        LDMIA   R2,{R4-R7,R8,R9}      ;get current matrix
        Debug JPEG, "JPEG plottransformed, matrix > postn ",R8,R9
        BL      puttrans_offsetR8R9   ;adjust positional part
        ADR     R2,JPEGtransnewmatrix ;R2 now -> new matrix area
        STMIA   R2,{R4-R7,R8,R9}      ;store new stuff
        Debug JPEG, "JPEG plottransformed, matrix < postn ",R8,R9
        Pull    "R4-R7,R8,R9"
        B       jpegswi_pt_go
;coords
jpegswi_pt_coords
        Push    "R4,R5,R8,R9"
        MOV     R4,R2                 ;R4 -> old coords block
        ADR     R2,JPEGtranscoords    ;R2 -> new coords block
        MOV     R5,#4                 ;4 pairs to adjust
jpegswi_pt_coords_loop
        LDMIA   R4!,{R8,R9}
        Debug JPEG, "JPEG plottransformed, coords > postn ",R8,R9
        BL      puttrans_offsetR8R9
        STMIA   R2!,{R8,R9}
        Debug JPEG, "JPEG plottransformed, coords < postn ",R8,R9
        SUBS    R5,R5,#1
        BNE jpegswi_pt_coords_loop
        ADR     R2,JPEGtranscoords    ;R2 -> new coords block
        Pull    "R4,R5,R8,R9"
;
jpegswi_pt_go
        BL      jpeg_plottransformed
        BVS     jpegswi_errorreturn
        Pull    "R0-R7,R9,PC"

jpegswi_plotscaled
        Push    "R0-R7,R9"
        LDMIA   R12,{R10,R11}           ;R10 =current handle, R11 =current workspace
        BL      checkpersistenterror
        BVS     jpegswi_persistentreturn
        Debug JPEG, "JPEG plotscaled at ",R1,R2
        BL      jpeg_plotscaled
        BVS     jpegswi_errorreturn
        Pull    "R0-R7,R9,PC"

jpegswi_persistentreturn
jpegswi_errorreturn
        STRVS   R0,[SP]                 ; error, so return with R0 -> Error block
        MOV     R0, #0
        STR     R0, jpeg_ctransflag     ; make sure ctrans flag not left set
        Pull    "R0-R7,R9,PC"

        END
