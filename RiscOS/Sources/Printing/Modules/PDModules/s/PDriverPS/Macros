; > Sources.PDriverPS.Macros

                GET     hdr:DDVMacros
JPEG            SETD    true
PageBox         SETD    true
mjs             SETD    true
misc		SETD	true
svc		SETD	true	;service calls

; Macro definitions for the PostScript printer driver

; Macros to output data to the printer

                GBLS    PrErrLabel
PrErrLabel      SETS    ""

; Macro to set a place to branch to on errors in the other macros. It must be
; used before any of the other macros are. Used without a parameter, it
; resets to the initial state of not being able to use the other macros.

        MACRO
        PrError $errlabel
        OPT     OptNoSets+OptNoControl+OptNoMends
PrErrLabel SETS "$errlabel"
        MEND

        MACRO
$label  PrPassError $fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       "$fallthrough" = ""
        [       PrErrLabel = ""
        !       8,"No error label set for PostScript output macros"
        |
        BVS     $PrErrLabel
        ]
        ]
        MEND

        MACRO
$label  PrChrIm $char,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        ASSERT  :LEN:"$char" = 1
$label  BL      output_immstring
        DCB     "$char",0
        ALIGN
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrChr   $reg,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        LCLA    tempa
        [       ("$reg":LEFT:1) = "#"
tempa   SETA    -1
        |
tempa   SETA    $reg
        ]
        [       tempa <> R0
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_character
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  BL      output_character
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrNewLn $fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrLnIm  "",$fallthrough
        MEND

        MACRO
$label  PrStrIm $string,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  BL      output_immstring
        DCB     "$string",0
        ALIGN
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrLnIm  $string,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  BL      output_immstring
        DCB     "$string",10,0
        ALIGN
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrStr   $base,$min,$max,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $base <> R0
$label  Push    "R0,R2,R3"
        MOV     R0,$base
        |
$label  Push    "R2,R3"
        ]
        MOV     R2,#$min
        MOV     R3,#($max)-($min)
        BL      output_string
        [       $base <> R0
        STRVS   R0,[R13]
        Pull    "R0,R2,R3"
        |
        Pull    "R2,R3"
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrLn    $base,$min,$max,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrStr   $base,$min,$max
        PrNewLn $fallthrough
        MEND

        MACRO
$label  PrGStIm $string,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  BL      output_immgstring
        DCB     "$string",0
        ALIGN
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrGLnIm $string,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrGStIm $string
        PrNewLn $fallthrough
        MEND

        MACRO
$label  PrGSt   $reg,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R0
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_gstring
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  BL      output_gstring
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrGLn   $reg,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrGSt   $reg
        PrNewLn $fallthrough
        MEND

        MACRO
$label  PrStrN  $base,$len,$min,$max,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $base <> R0
        [       $len <> R2
$label  Push    "R0,R2,R3,R4"
        [       $len <> R0
        MOV     R0,$base
        MOV     R2,$len
        |
        [       $base <> R2
        MOV     R2,$len
        MOV     R0,$base
        |
        EOR     R0,R0,R2
        EOR     R2,R2,R0
        EOR     R0,R0,R2
        ]
        ]
        |
$label  Push    "R0,R3,R4"
        MOV     R0,$base
        ]
        |
        [       $len <> R2
$label  Push    "R2,R3,R4"
        MOV     R2,$len
        |
$label  Push    "R3,R4"
        ]
        ]
        MOV     R3,#$min
        MOV     R4,#($max)-($min)
        BL      output_stringN
        [       $base <> R0
        [       $len <> R2
        STRVS   R0,[R13]
        Pull    "R0,R2,R3,R4"
        |
        STRVS   R0,[R13]
        Pull    "R0,R3,R4"
        ]
        |
        [       $len <> R2
        Pull    "R2,R3,R4"
        |
        Pull    "R3,R4"
        ]
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrLnN   $base,$len,$min,$max,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrStrN  $base,$len,$min,$max
        PrNewLn $fallthrough
        MEND

        MACRO
$label  PrHex   $reg,$corruptR0,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R0
        [       "$corruptR0" = ""
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_hexbyte
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  MOV     R0,$reg
        BL      output_hexbyte
        ]
        |
        BL      output_hexbyte
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrNum   $reg,$corruptR0,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R0
        [       "$corruptR0" = ""
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_number
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  MOV     R0,$reg
        BL      output_number
        ]
        |
        BL      output_number
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrNumSp $reg,$corruptR0,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R0
        [       "$corruptR0" = ""
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_numberspace
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  MOV     R0,$reg
        BL      output_numberspace
        ]
        |
        BL      output_numberspace
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrPair  $reg1,$reg2,$corruptR0andR1,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg1 <> R0
        [       $reg2 <> R1
        [       "$corruptR0andR1" = ""
$label  Push    "R0,R1"
        [       $reg2 <> R0
        MOV     R0,$reg1
        MOV     R1,$reg2
        |
        [       $reg1 <> R1
        MOV     R1,$reg2
        MOV     R0,$reg1
        |
        EOR     R0,R0,R1
        EOR     R1,R1,R0
        EOR     R0,R0,R1
        ]
        ]
        BL      output_coordpair
        STRVS   R0,[R13]
        Pull    "R0,R1"
        |
        [       $reg2 <> R0
$label  MOV     R0,$reg1
        MOV     R1,$reg2
        |
        [       $reg1 <> R1
$label  MOV     R1,$reg2
        MOV     R0,$reg1
        |
$label  EOR     R0,R0,R1
        EOR     R1,R1,R0
        EOR     R0,R0,R1
        ]
        ]
        BL      output_coordpair
        ]
        |
        [       "$corruptR0andR1" = ""
$label  Push    "R0"
        MOV     R0,$reg1
        BL      output_coordpair
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  MOV     R0,$reg1
        BL      output_coordpair
        ]
        ]
        |
        [       $reg2 <> R1
        [       "$corruptR0andR1" = ""
$label  Push    "R1"
        MOV     R1,$reg2
        BL      output_coordpair
        Pull    "R1"
        |
$label  MOV     R1,$reg2
        BL      output_coordpair
        ]
        |
$label  BL      output_coordpair
        ]
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrRGB   $reg,$corruptR1,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R1
        [       "$corruptR1" = ""
$label  Push    "R1"
        MOV     R1,$reg
        BL      output_rgbvalue
        Pull    "R1"
        |
$label  MOV     R1,$reg
        BL      output_rgbvalue
        ]
        |
        BL      output_rgbvalue
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrVarIm $varname,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  BL      output_variable
        DCB     "$varname",0
        ALIGN
        PrPassError $fallthrough
        MEND

	MACRO
$l	DebugEscState	$fn
	[		debug
$l	Push		"r0-r2, lr"
	SavePSR         lr
	Push		"lr"			;save flags
	MOV		r0, #229
	MOV		r1, #0
	MOV		r2, #255
	SWI		XOS_Byte
	Debug		misc, "$fn: esc disabled", r1
	Pull		"lr"
	RestPSR         lr,,f			;restore flags
	Pull		"r0-r2, lr"		;restore everything else
	]
	MEND

      [ debug
        InsertNDRDebugRoutines
      ]

        END
