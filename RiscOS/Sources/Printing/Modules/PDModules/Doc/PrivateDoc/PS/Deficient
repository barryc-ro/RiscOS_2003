PostScript printing deficiencies
--------------------------------

This file summarises known defiencies in the PostScript printing system.  It
does not cover bugs (fixed or unfixed) but design deficiencies which need
more thought.

25 Sep 92: SAH: Encapsulated PostScript
                Printer selection commands



Encapsulated PostScript
=======================

An EPSF file is supposed to be structured in such a way that it can be
physically inserted into another PostScript document to provide an illustration. 
This imposes certain constraints upon what the EPSF file may do; in particular
it must not perform a "showpage" operation and it must not do any device setup -
it should assume that the printer has already been put into an appropriate state
by the parent document.

PDriverPS produces EPSF if the print job is started with PDriver_SelectIllustration. 
Applications which know that they are producing a one-page illustration-like document
(such as !Draw) are encouraged to use this call rather than PDriver_SelectJob.

However, PDriverPS faces a dichotomy; in reality most print jobs from !Draw go
straight to the printer, and therefore need to print out directly (without
being included in another document).  The EPSF produced by PDriverPS is
therefore compromised because it contains a call to showpage.  This could
potentially cause problems when trying to use the EPSF as an illustration in
another PostScript program, but it's not a big problem because most such
programs redefine showpage to be a no-op over the encapsulated inclusion.

More seriously, PDriverPS omits the device setup commands (a4, legal etc) in an
EPSF job.  This is the correct action for a true EPSF file, but if the job is
sent straight to the printer it will not necessarily print out in the ideal way. 
For example, if you are printing A4 onto an A3 printer, you want the printer to
receive the "a4" command so that it can rotate and centre the A4 image on the A3
paper and hence avoid the unprintable margins.  Users will notice that
difference by comparison with multi-page documents which have the device setup
commands.

I think the only solution to this problem is for the user to explicitly request
EPSF files.  This would take the form of another option in the printer setup
dialogue.  When the printer system receives a SelectIllustration call it would
check this option and only bother about EPSF if it is set.  (In any case, it
should only ever bother with EPSF if the output is being sent to a file.  We
can't base the decision entirely on that, though - the user might want to print
to file and then take the file to a printer via a floppy, for example.)
We can take the opportunity to remove other infelicities (such as showpage) from
our EPSF.

Another possible way is to extend the PrData format so that the device setup
commands and "showpage" string can be specified there.  We could then provide a
printer definition for an EPSF-only printer that has empty strings for these
values.


Printer selection commands
==========================

RISC OS 3 PrData files do not contain an entry for the PostScript paper select
command.  (RISC OS 2 did).  RISC OS 3 !Printers "invents" the paper select
command by taking the first part of the paper size's name (up to the first
space), lowercasing it, and using that!  This works for (eg) "A4 (Generic
PostScript)" but is hopeless for other requirements (eg "Reverse A4").

A more general mechanism is required.  The paper select commands are not well
defined; a particular printer may define new ones.  Should be possible to
specify the paper select command as part of the paper specification, and
preferably edit it with the "Edit paper sizes" dialogue.
