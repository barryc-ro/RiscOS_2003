/* ink.c */

#include <ctype.h>
#include <stdio.h>
#include <string.h>

#include "DebugLib.DebugLib.h"

#include "error.h"
#include "IdString.h"

#include "ink.h"

/*********************** static function declarations *******************/

static int findLevel( const char *s, char token );

/*********************** static function definitions *******************/

static int findLevel( const char *s, char token )
{
  char *p;
  for( p = strchr( s, ',' ); p; p = strchr( p+1, ',' ))
  {
    if( p[1] && p[1] == token && p[2] >= '0' && p[2] <= '9' && p[3] == ',' ) break;
  }
  return p ? p[2] - '0' : -1;
}

/*********************** extern function definitions *******************/

_kernel_oserror *ink_levels( int *mono, int *colour )
{
  char *id = NULL;
  char *value = NULL;
  char *temp = NULL;
  char *p;
  _kernel_oserror *err = NULL;

  err = IdString_read( &id );

  /* Now check that it is an HP printer because we only know about them */
  if( !err )
  {
    value = IdString_token( id, IDSTRING_MFG, IDSTRING_MFG_L );
    for( p = value; *p; p++ ) *p = toupper( *p ); /* HP vary the case between printers! */
    if( !value || strcmp( value, IDSTRING_HP_MFG ) != 0 )
      err = error_construct( error_ID_NOT_UNDERSTOOD );
  }

  /* Read out the status part of the string */
  if( !err )
  {
    value = IdString_token( id, IDSTRING_HP_STATUS, NULL );
    printf( "VSTATUS: = %s\n", value );
    if( !value ) err = error_construct( error_ID_NOT_UNDERSTOOD );
  }

  /* Find ,B#, and ,C#, where # is any digit */ 
  if( !err )
  { temp = malloc( strlen( value ) + 3 );
    if( temp == NULL ) err = error_construct( error_MEMORY );
  }

  if( !err )
  {
    temp[0] = ',';
    strcpy( temp+1, value );
    strcat( temp, "," );
    *mono = findLevel( temp, 'K' );
    *colour = findLevel( temp, 'C' );
  }
  else
  {
    *mono = *colour = -1;
  }

  free( value );
  free( id );
  free( temp );

  return err;
}

/* ink_starLevels
  Write ink level data to stdout
*/
_kernel_oserror *ink_starLevels( void )
{
  _kernel_oserror *err = NULL;
  int mono, colour;

  err = ink_levels( &mono, &colour );

  if( !err )
  {
    printf( "Ink levels:" );
    if( mono == -1 && colour == -1 )
    {
      printf( " No ink level information available\n" );
    }
    else
    {
      if( mono != -1 ) printf( " Black = %i", mono );
      if( colour != -1 ) printf( " Colour = %i\n", colour );
    }
  }

  return err;
}

/* End of ink.c */

