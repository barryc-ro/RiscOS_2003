; > FullRGB
;-------------------------------
; This contains the code changes necessary for 16/24-bit sprite handling
; routines are called using something like
; LDR R14,KCMYTable:CMP R14,#1:BLLS FullRGB
; where KCMYTable is set to 1 for 16-bit, 0 for 24-bit
;-------------------------------

   [ fullrgb
FullRGB
;very few registers left, values calibrated at rendering time (=quicker)
;not including the overlap compensation (which depends on the halftone used)
;still have to consider Removal (also dictated by the palette)
 EntryS "R0-R6"
;For fifteen bit worlds, this code is entered with EQ status
 ADR R11,FullRGBInfo             ;Goes redbuffer,greenbuffer,bluebuffer,pixsep,remove
 LDMIA R11,{R3-R6,R14}
 AND R14,R14,#&FF                ;Often next door to Overlap flag
 BNE Not15bit
 LDR  R0,[R3],R6                 ;Load 16 bits/R6=2 for next load
 MOV  R4,#&F8                    ;Mask for the bits, shift to the top end
 AND  R2,R4,R0,LSR#7
 AND  R1,R4,R0,LSR#2
 AND  R0,R4,R0,LSL#3
 ORR  R0,R0,R0,LSR#5             ;Increase the range to 0-255
 ORR  R1,R1,R1,LSR#5
 ORR  R2,R2,R2,LSR#5
Not15bit
;Flags are still set for continuation....
 LDRNEB R0,[R3],R6                 ;Load red
 LDRNEB R1,[R4],R6                 ;green
 LDRNEB R2,[R5],R6                 ;blue

 STMIA R11,{R3-R5}               ;remember next load position

 MVN  R11,#&FF
 EOR  R11,R11,R0,LSL#8
 EOR  R11,R11,R1,LSL#16
 EORS R11,R11,R2,LSL#24          ;Z will be set if we had white (R=G=B=255) ...
 EXITS EQ                        ;and white means no need to think about key removal

 CMP   R0,R1
 MOVLO R0,R1
 CMP   R0,R2
 MOVLO R0,R2

;R0 has max RGB i.e.NOT min CMY
 EOR   R0,R0,#&FF
 MUL   R0,R14,R0
 MOV   R0,R0,LSR#3
 ADD   R11,R11,R0
 SUB   R11,R11,R0,LSL#8
 SUB   R11,R11,R0,LSL#16
 SUB   R11,R11,R0,LSL#24
 EXITS

;Replace loads with this
; LDR   R14,KCMYTable
; CMP   R14,#1
; LDRHIB R11,[R10]
; LDRHI R11,[R14,R11,LSL#2]
; BLLS  FullRGB

;Also need to change end of line compensations in error diffuser
;(i.e. in addition to ADD R10,R10,R0 need 3*ADD xbuffer,xbuffer,(R0+R8)*pixsep:pixsep=-pixsep
FullRGBSwitch
 EntryS "R3-R6,R11"
 ADR R11,FullRGBInfo             ;Goes redbuffer,greenbuffer,bluebuffer,pixsep,remove
 LDMIA R11,{R3-R6}
 ADD R14,R0,R8
 MULS R14,R6,R14
 RSBMI R14,R14,#0                ;Answer must be +ve (R6 may have switched)
 ADD R3,R3,R14
 ADD R4,R4,R14                   ;These are two junk if 16 bit
 ADD R5,R5,R14
 RSB R6,R6,#0
 STMIA R11,{R3-R6}
 EXITS

;and check after ADD R10,R10,R0:ADD R10,R10,R8 ....
; LDR    R14,KCMYTable
; CMP    R14,#1
; BLLS   FullRGBSwitch

  ]

  END
