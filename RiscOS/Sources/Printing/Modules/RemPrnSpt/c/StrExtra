#include <ctype.h>
#include <kernel.h>
#include <swis.h>
#include <stdlib.h>

/*
 * Not the right place for it really, but anyhow
 */

char *canon (char *pathname)
{
  _kernel_swi_regs r ;



  r.r[0] = 37 ; /* Cononicalise path */
  r.r[1] = (int) pathname ;
  r.r[2] = 0 ; /* Buffer ptr */
  r.r[5] = 0 ; /* Buffer lenghth */

  r.r[3] = 0 ; /* Path */
  r.r[4] = 0 ; /* Path variable */

  _kernel_swi (OS_FSControl, &r, &r) ;

  if ((r.r[2] = (int) malloc (1 - r.r[5])) == NULL)
  {
    return ((char *)0) ;
  }
  else
  {
    r.r[5] = 1 - r.r[5] ;
    _kernel_swi (OS_FSControl, &r, &r) ;

    return ((char *) r.r[2]) ;
  }
}

extern int stricmp(const char *s1, const char *s2)
{
  int ch1, ch2;
  for (;;) {
    ch1 = *s1++;  ch2 = *s2++;
    /* care here for portability... don't rely on ANSI spec */
    if (isupper(ch1)) ch1 = tolower(ch1);
    if (isupper(ch2)) ch2 = tolower(ch2);
    if (ch1 != ch2) return ch1-ch2;
    if (ch1 == 0) return 0;
  }
}


extern int strincmp(const char *s1, const char *s2, int n)
{
  int ch1, ch2;
  while (n-- > 0) {
    ch1 = *s1++;  ch2 = *s2++;
    /* care here for portability... don't rely on ANSI spec */
    if (isupper(ch1)) ch1 = tolower(ch1);
    if (isupper(ch2)) ch2 = tolower(ch2);
    if (ch1 != ch2) return ch1-ch2;
    if (ch1 == 0) return 0;
  }
  return 0;
}
