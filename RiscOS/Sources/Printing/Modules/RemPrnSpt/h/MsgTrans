/*> h.MsgTrans <*/

#define MSGBUFSIZE 256

/*-------------------------------------------------------------------------*/
/* Wrappers for MessageTrans SWIs              Copyright (c) 1991 SMCormie */
/*-------------------------------------------------------------------------*/

extern _kernel_oserror *msgtrans_openfile(char *ResourceFile, int file_data[]) ;

/*------------------------- msgtrans_closefile ----------------------------
 * Description: If the Messages file is open then this function closes it.
 *
 * Parameters:  None.
 *
 * Returns:     Nothing.
 */
extern void msgtrans_closefile(int f[]);

/*--------------------------- msgtrans_lookup -----------------------------
 * Description: Lookup the token in the Messages file and if *buf is non-0
 *              then copy the string found into the buffer pointed to by *buf
 *              (performing substitutions if necessary) or if *buf is 0 then
 *              set *buf to the string found.
 *
 * Parameters:  char *token - Token to look for.
 *              char **buf  - Address of character buffer pointer.
 *                            If *buf == 0 then set to point to buffer on output.
 *              int *bufsz  - Size of buffer (if *buf is non-0).
 *                            If *buf == 0 then set to length of output string.
 *              char *p1    - Parameter 1.
 *              char *p2    - Parameter 2.
 *              char *p3    - Parameter 3.
 *              char *p4    - Parameter 4.
 *
 * Returns:     _kernel_error * - NULL if all goes well.
 */
extern _kernel_oserror *msgtrans_lookup(
  int  file_data[],
  char *token,
  char **buf,
  char *p1,
  char *p2,
  char *p3,
  char *p4
);

extern _kernel_oserror *msgtrans_error_lookup(
  int  file_data[],
  _kernel_oserror  *errblk,
  char *p1,
  char *p2,
  char *p3,
  char *p4
) ;
