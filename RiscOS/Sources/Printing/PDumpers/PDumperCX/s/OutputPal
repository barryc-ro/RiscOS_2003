; this code is based strongly on the single bit colour error diffusion intialised
; from manipulate

	MACRO
	PalVal  $tmp, $reg, $buffer, $byteH, $byteL, $C ,$M, $Y
	
	MOV  $reg, $byteH		; we need this as a register as byte etc are numbers
	MOV  $tmp, $reg, LSL #24
	MOV  $reg, $byteL	; we need this as a register as byte etc are numbers
	ORR  $tmp, $tmp, $reg, LSL #16
	MOV  $reg, $C
	ORR  $tmp, $tmp, $reg
	STR  $tmp, [$buffer], #4	; store an one word

	MOV  $reg, $M
	MOV  $tmp, $reg, LSL #16
	MOV  $reg, $Y
	ORR  $tmp, $tmp, $reg
	STR  $tmp, [$buffer], #4	; store an one word
	MEND
	
SetLookupPalette
	[ {TRUE}			; set false to use palette
	Push "R1, lr"
	MOV  R1, #0
	STR  R1, use_output_palette	; so we can delete it if we are using it
	Pull "R1, pc"
	|
	Push "R1-R4, LR"
	
	;   R0 = private word and is preserved in swi
	MOV   R3, #512	; because this works
	LDR   R4, =BlockType_OutputPalette
	
	SWI   XPDumper_Claim
	DebugIf VC,StartPage, "claimed block"
	DebugE  StartPage, "claimed block error"
	Pull "R1-R4, PC", VS	; run away on error
	
	MOV  R3, R2
	
	MOV  R1, #1
	STR  R1, use_output_palette	; so we can delete it if we are using it
	
	[ {TRUE}
	MOV  r1, #22
	STR  r1, [r3], #4		; store the size as the first word
			;CMY BYTE
	;Debug prepstrip, "palette", r3
	PalVal r1, r2, r3, #&00, #&01, #0,  #0,  #95  ;y
	PalVal r1, r2, r3, #&00, #&02, #0,  #0,  #170 ;Y
	PalVal r1, r2, r3, #&00, #&03, #0,  #0,  #255 ;YY
	
	PalVal r1, r2, r3, #&00, #&10, #0,  #85,  #0	;M
	PalVal r1, r2, r3, #&00, #&20, #0,  #170, #0
	PalVal r1, r2, r3, #&00, #&30, #0,  #255, #0
	
	PalVal r1, r2, r3, #&01, #&00, #80,  #0,  #0	;C
	PalVal r1, r2, r3, #&02, #&00, #170, #0,  #0
	PalVal r1, r2, r3, #&03, #&00, #255, #0,  #0
	
	PalVal r1, r2, r3, #&00, #&11, #0,  #85,  #85	;my	;MY combs
	PalVal r1, r2, r3, #&00, #&12, #0,  #85,  #170  ;mY
	PalVal r1, r2, r3, #&00, #&13, #0,  #85,  #255  ;mYY
	PalVal r1, r2, r3, #&00, #&22, #0,  #255, #255  ;MY
	PalVal r1, r2, r3, #&00, #&21, #0,  #170, #85   ;My
	PalVal r1, r2, r3, #&00, #&31, #0,  #255, #85   ;MMy

	PalVal r1, r2, r3, #&01, #&01, #85,  #0, #85   ;cy	;CY combs
	PalVal r1, r2, r3, #&01, #&02, #85,  #0, #170  ;cY
	PalVal r1, r2, r3, #&01, #&03, #85,  #0, #255  ;cYY
	PalVal r1, r2, r3, #&02, #&02, #255, #0, #255  ;CY
	PalVal r1, r2, r3, #&02, #&01, #170, #0, #85   ;Cy
	PalVal r1, r2, r3, #&03, #&01, #255, #0, #85   ;CCy
	
	PalVal r1, r2, r3, #&01, #&10, #85,  #85, #0   ;cm	;CM combs
	PalVal r1, r2, r3, #&01, #&20, #85,  #170,#0   ;cM
	PalVal r1, r2, r3, #&01, #&30, #85,  #255,#0   ;cMM
	PalVal r1, r2, r3, #&02, #&20, #255, #255,#0   ;CM
	PalVal r1, r2, r3, #&02, #&10, #170, #85, #0   ;Cm
	PalVal r1, r2, r3, #&03, #&10, #255, #85, #0   ;CCm
	
	PalVal r1, r2, r3, #&01, #&11, #80, #85, #95 ; cmy 	;CMY combs
	PalVal r1, r2, r3, #&02, #&22, #255, #255, #255 ; CMY 	;CMY combs
	PalVal r1, r2, r3, #&02, #&11, #255, #170, #170 ; Cmy 	;CMY combs
	PalVal r1, r2, r3, #&01, #&21, #170, #255, #170 ; cMy 	;CMY combs
	PalVal r1, r2, r3, #&01, #&12, #170, #170, #255 ; cmY 	;CMY combs
	 |
	MOV  r1, #63
	STR  r1, [r3], #4		; store the size as the first word
	
	 ;Debug prepstrip, "palette", r3
	PalVal r1, r2, r3, #&00, #&01, #0,  #0,  #85	;C
	PalVal r1, r2, r3, #&00, #&02, #0,  #0,  #170
	PalVal r1, r2, r3, #&00, #&03, #0,  #0,  #255
	PalVal r1, r2, r3, #&00, #&04, #0,  #85, #0
	PalVal r1, r2, r3, #&00, #&05, #0,  #85 ,#85
	PalVal r1, r2, r3, #&00, #&06, #0,  #85, #170
	PalVal r1, r2, r3, #&00, #&07, #0,  #85, #255
	PalVal r1, r2, r3, #&00, #&08, #0,  #170,#0
	PalVal r1, r2, r3, #&00, #&09, #0,  #170,#85
	PalVal r1, r2, r3, #&00, #&0A, #0,  #170,#170
	PalVal r1, r2, r3, #&00, #&0B, #0,  #170,#255
	PalVal r1, r2, r3, #&00, #&0C, #0,  #255,#0
	PalVal r1, r2, r3, #&00, #&0D, #0,  #255,#85
	PalVal r1, r2, r3, #&00, #&0E, #0,  #255,#170
	PalVal r1, r2, r3, #&00, #&0F, #0,  #255,#255
	PalVal r1, r2, r3, #&00, #&10, #85, #0,  #0
	PalVal r1, r2, r3, #&00, #&11, #85, #0,  #85
	PalVal r1, r2, r3, #&00, #&12, #85, #0,  #170
	PalVal r1, r2, r3, #&00, #&13, #85, #0,  #255
	PalVal r1, r2, r3, #&00, #&14, #85, #85, #0
	PalVal r1, r2, r3, #&00, #&15, #85, #85, #85
	PalVal r1, r2, r3, #&00, #&16, #85, #85, #170
	PalVal r1, r2, r3, #&00, #&17, #85, #85, #255
	PalVal r1, r2, r3, #&00, #&18, #85, #170,#0
	PalVal r1, r2, r3, #&00, #&19, #85, #170,#85
	PalVal r1, r2, r3, #&00, #&1A, #85, #170,#170
	PalVal r1, r2, r3, #&00, #&1B, #85, #170,#255
	PalVal r1, r2, r3, #&00, #&1C, #85, #255,#0
	PalVal r1, r2, r3, #&00, #&1D, #85, #255,#85
	PalVal r1, r2, r3, #&00, #&1E, #85, #255,#170
	PalVal r1, r2, r3, #&00, #&1F, #85, #255,#255
	PalVal r1, r2, r3, #&00, #&20, #170,#0, #0
	PalVal r1, r2, r3, #&00, #&21, #170,#0, #85
	PalVal r1, r2, r3, #&00, #&22, #170,#0, #170
	PalVal r1, r2, r3, #&00, #&23, #170,#0, #255
	PalVal r1, r2, r3, #&00, #&24, #170,#85,#0
	PalVal r1, r2, r3, #&00, #&25, #170,#85,#85
	PalVal r1, r2, r3, #&00, #&26, #170,#85,#170
	PalVal r1, r2, r3, #&00, #&27, #170,#85,#255
	PalVal r1, r2, r3, #&00, #&28, #170,#170,#0
	PalVal r1, r2, r3, #&00, #&29, #170,#170,#85
	PalVal r1, r2, r3, #&00, #&2A, #170,#170,#170
	PalVal r1, r2, r3, #&00, #&2B, #170,#170,#255
	PalVal r1, r2, r3, #&00, #&2C, #170,#255,#0
	PalVal r1, r2, r3, #&00, #&2D, #170,#255,#85
	PalVal r1, r2, r3, #&00, #&2E, #170,#255,#170
	PalVal r1, r2, r3, #&00, #&2F, #170,#255,#255
	PalVal r1, r2, r3, #&00, #&30, #255,#0,  #0
	PalVal r1, r2, r3, #&00, #&31, #255,#0,  #85
	PalVal r1, r2, r3, #&00, #&32, #255,#0,  #170
	PalVal r1, r2, r3, #&00, #&33, #255,#0,  #255
	PalVal r1, r2, r3, #&00, #&34, #255,#85, #0
	PalVal r1, r2, r3, #&00, #&35, #255,#85, #85
	PalVal r1, r2, r3, #&00, #&36, #255,#85, #170
	PalVal r1, r2, r3, #&00, #&37, #255,#85, #255
	PalVal r1, r2, r3, #&00, #&38, #255,#170,#0
	PalVal r1, r2, r3, #&00, #&39, #255,#170,#85
	PalVal r1, r2, r3, #&00, #&3A, #255,#170,#170
	PalVal r1, r2, r3, #&00, #&3B, #255,#170,#255
	PalVal r1, r2, r3, #&00, #&3C, #255,#255,#0
	PalVal r1, r2, r3, #&00, #&3D, #255,#255,#85
	PalVal r1, r2, r3, #&00, #&3E, #255,#255,#170
	PalVal r1, r2, r3, #&00, #&3F, #255,#255,#255
        ]   ;palette choice          
	Debug StartPage, "Sorted for eggs"
	Pull "R1-R4, PC"
	]   ;routine
	END

