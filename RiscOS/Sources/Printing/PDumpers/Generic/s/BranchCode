; > BranchCode

;..............................................................................

; Handle the reason codes being sent from the PDriverDP module to the 
; dumper.   We must range check this value and then attempt to 
; despatch as required, the strip type is also checked to ensure that
; it is supported.

; in    R11 reason code

BranchCode ROUT
        TEQ     PC,#SVC_mode            ;Enable IRQs

	DebugEscState BranchCode

	Debug	Calls, "+BranchCode", r11

	Push	"lr"

;for OutputDump, check width is multiple of 8 (assumed by newer code)
;ie. prevent old PDriverDP causing crash
        TEQ     R11,#PDumperReason_OutputDump
        BNE     bc_checkw_done
        TST     R3,#7
        BEQ     bc_checkw_done
        ADRL	R0,bc_old_pdriverdp
        SETV
        Pull	"pc"

bc_checkw_done
        TEQ     R11,#PDumperReason_SetDriver
        MOVEQ   R9,#0
        ANDNE   R9,R2,#&FF              ;Get the strip type or make one up if required

        CMP     R9,#StripType_MAX
        BCS     BadStripType            ;Complain about the bad strip type

        MOV     R10,#(%10-%00)/4
        CMP     R11,R10                 ;Is the reason code valid?
	BCS	BadPDumperCall          ;Complain about an invalid operation

	;Check that escape is enabled
	Push	"r0-r2"
	MOV	r0, #229
	MOV	r1, #0
	MOV	r2, #255
	SWI	XOS_Byte
	TEQ	r1, #0
	Pull	"r0-r2"
	BNE	EscDisabled

	;Check reentrancy (must be last test, or the bit will get set in error).
	;JRC Mon 28th April 1997
	Push	"r0, r1"
	ADR	r1, pd_error_flag_set
	LDR	r0, [r1]
	TST	r0, #1 :SHL: 2
	ORREQ	r0, r0, #1 :SHL: 2	;if the bit is clear, set it
	STREQ	r0, [r1]
	Pull	"r0, r1"
	BNE	InUse			;otherwise, it's a mistake

	ADR	lr, unthread
	ORR	lr, lr, #SVC_mode	;must be in SVC mode
        MLA	r11, r9, r10, r11	;Index via n*strip type, where n is the number of jumps
        ADD	pc, pc, r11, LSL #2
	&	0			;filler
00
        B       SetDriver_Monochrome
        B       OutputStrip_Monochrome
        B       ColourSet_Monochrome
        B       StartPage_Monochrome
        B       EndPage_Monochrome
        B       StartJob_Monochrome
        B       AbortJob_Monochrome
        B       MiscOp_Monochrome
10
        B       SetDriver_Grey
        B       OutputStrip_Grey
        B       ColourSet_Grey
        B       StartPage_Grey
        B       EndPage_Grey
        B       StartJob_Grey
        B       AbortJob_Grey
        B       MiscOp_Grey
                
        B       SetDriver_Colour256
        B       OutputStrip_Colour256
        B       ColourSet_Colour256
        B       StartPage_Colour256
        B       EndPage_Colour256
        B       StartJob_Colour256
        B       AbortJob_Colour256
        B       MiscOp_Colour256

unthread
	Push	"r0, r1"
	ADR	r1, pd_error_flag_set
	LDR	r0, [r1]
	BIC	r0, r0, #1 :SHL: 2	;clear the reentrancy bit
	STR	r0, [r1]
	Pull	"r0, r1"

	DebugIf	VC, Calls, "-BranchCode"
	DebugE	Calls, "-BranchCode"
	;NB flags preserved from subroutine
	Pull	"pc"

        GET     s.24Bit

;..............................................................................

;rare error, not internationalised
bc_old_pdriverdp
        DCD     0
        DCB     "$PDumperTitle needs newer PDriverDP (illegal strip width)",0
        ALIGN

InUse
        ADR     R0,ErrorBlock_PDumperInUse
        B       %FT95

BadStripType
        ADR     R0,ErrorBlock_PDumperBadStrip
        B       %FT95

EscDisabled
	ADR	R0,ErrorBlock_PDumperEscDisabled
	B	%FT95

BadPDumperCall
        ADR     R0,ErrorBlock_PDumperBadCall
95
        Push    "R1,LR"                 
        ADDR    R1,title                ;->Title string 
        SWI     XPDumper_LookupError     
        Pull    "R1,LR"
        DebugE	Calls, "-BranchCode"
        Pull	"pc"


        MakeInternatErrorBlock	PDumperInUse,,InUse
        MakeInternatErrorBlock	PDumperBadCall,,BadCall
        MakeInternatErrorBlock	PDumperBadStrip,,BadStrp
        MakeInternatErrorBlock	PDumperEscDisabled,,NoEsc

        END
