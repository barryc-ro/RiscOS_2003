/*----------------------------------------------------------------------*/
/*    Filename    : h.printer                                           */
/*    Author	  : A.Rodger						*/
/*    Date        : Nov 1997						*/
/*    Source      : c++.printer						*/
/*    Description : this set of classes that is the essence of this	*/
/*		Application these are the data structures used for	*/
/*		the printing setup					*/
/*    Modification history:      		       			*/
/*----------------------------------------------------------------------*/

#ifndef	__printer_h_
#define __printer_h_

#include "main.h"
#include "fwindow.h"
#include "file_op.h"

	// this is the class used for maniputating printer margins
class margins
{
public:
	int offset;
	
	int width, height;
	int bmarg, tmarg, lmarg, rmarg;
	
	margins() {offset = 0;};
	file *update_file(file *paper_file, int n_offset);
	void set_values(file *paper_file, int n_offset);
	void set_from_display(f_window *display);
	void show(f_window *display);
};

	// this class gives the offset for the data string without having to unpack the data block.
class location
{
public:
  	int	address;
  	int 	size;
  	location();
  	
  	char *get_string(char *buffer, int bf_size, char *string, int st_size);
};

#define DATA_dump_depth            0	// the data locations passed to the printer in the data block
#define DATA_y_interlace           1
#define DATA_x_interlace           2
#define DATA_pass_per_line         3
#define DATA_strip_type            4
#define DATA_output_bpp            5
#define DATA_no_passes             6
#define DATA_pass                  7
#define DATA_data_old_version      8

	// this is the data block that is in the pdf files this outlines the different command strings
class data_block
{
public:
	char   *block;
  	int 	size;

	location page_start; 		// these are locations within the block see PRM 3-669
  	location page_end;
  	location line_return;
  	location line_skip;
  	location line_end;
  	location line_end_i2;
  	location line_end_i3;
  	location zero_skip;
  	location line_start;
  	location line_start_2;
  	location pass1_start;
  	location pass1_start_2;
 	location pass2_start;
  	location pass2_start_2;
  	location pass3_start;
  	location pass3_start_2;
  	location pass4_start;
  	location pass4_start_2;
  	location set_lines;
  	location formfeed;
  	
	data_block()	{ block = NULL; };
	~data_block();	
  	void set_values(char *buffer, int b_size);
   	void set_locations();  	
	void show(f_window *display);
	void Debug_show();
};

	// this is the parent class for all pdf files 
class pdf
{  	
public:
	f_window *display;
  	char *file_name;
  	
  	char *short_name;
  	int x_res, y_res;
  	int flags;
  	int paper_offset;
  	margins p_margins;
  	
	pdf() {};
	virtual file *output_to_file() {return NULL;};
	virtual ~pdf() {};
  	virtual void show() {};
	void set_margins(int paper);
};
	
	// this class is used for bitmap printers
class small_pdf:public pdf
{
public:
  	char *dumper_used;
  	int dumper_number;
  	int palette_number, strip_type;
  	int halftone_type;
  	data_block data;
  	int x_offset, y_offset;
 
  	small_pdf(file *pdf_file);
  	~small_pdf();
  	
	file *output_to_file();
  	void show();
};





/***************************** PRINTER CLASS ********/

	// this is a class with method for the printer
class printer_methods
{
  	_kernel_swi_regs reg;	 /* Declared in main */
public: 
	printer_methods();
	~printer_methods() {};

	void prime(small_pdf *pdf_file);
	void set_paper_size(margins *page);	
	void get_paper_size(margins *page);
	void get_info();
//	void show();
};

#endif
