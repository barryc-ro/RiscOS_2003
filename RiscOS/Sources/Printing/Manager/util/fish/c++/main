#include "WimpJob.h"
#include "main.h"
//#include "fwindow.h"
#include "events.h"
#include "printer.h"
#include "error.h"

#include "<Lib$Dir>.DebugLib/DebugLib.h"

WimpJob wimp_task;	// this is the main body the task id etc.
//text_window debug;	// this is the debug window made of a text window.

pdf *prn_defn;
printer_methods printer;

_kernel_oserror *err; /* Error block */

// Error function
int Error(_kernel_oserror *err)
{
  if (err != NULL){
      wimp_report_error(err,0,task_name,0,0,0);
      return TRUE;
  }
  return FALSE;
}

void BadError(_kernel_oserror *err)
{
  if (err != NULL){
      wimp_report_error(err,0,task_name,0,0,0);
      exit(0);
  }
}

	// Debug Function
void Debug(char *format, ...)
{
#ifdef DEBUGLIB
  va_list list;

  va_start (list, format);
  dvprintf (("", format, list));
  va_end(list);

#endif
  format = format;
}



	// this is the list of tasks added for all objects
void add_event_handlers(void)
{
  wimp_task.AddFunction(menu_quit_event, quit_function, &wimp_task);
  wimp_task.AddFunction(Toolbox_Error, handler_Toolbox_Error, NULL);
  //wimp_task.AddFunction(SaveAs_AboutToBeShown, handler_saveas_created, &debug);
  //wimp_task.AddFunction(SaveAs_SaveToFile, handler_saveas, &debug);
  //wimp_task.AddFunction(Debug_File_Stop, handler_debug_stop, &debug);

  wimp_task.AddFunction(radio_A4, radio_button_changed, NULL);
  wimp_task.AddFunction(radio_Legal, radio_button_changed, NULL);
  wimp_task.AddFunction(radio_Letter, radio_button_changed, NULL);

  wimp_task.AddFunction(printer_prime,print_primer, &printer);
  wimp_task.AddFunction(printer_set_paper,print_set_pagesize, &printer);
  wimp_task.AddFunction(print_info_to_debug, print_get_info, &printer);
  wimp_task.AddFunction(save_paper_file, save_paper_info, NULL);
  wimp_task.AddFunction(save_pdf_file, save_pdf_info, NULL);
}

	// this is the list of messages used by all objects
void add_message_handlers(void)
{
  wimp_task.AddMessage(Wimp_MDataLoad,  message_load, &wimp_task);
  wimp_task.AddMessage(Wimp_MPrintSave, PrintSave, &wimp_task);
  wimp_task.AddMessage(Wimp_MPrintFile, PrintFile, &wimp_task);
  wimp_task.AddMessage(Wimp_MPrintTypeKnown, PrintTypeKnown, &wimp_task);
  wimp_task.AddMessage(Wimp_MPrintTypeOdd, PrintTypeOdd, &wimp_task);
}



	// main function
int main()
{
  WimpMessage msg;

  msg.hdr.your_ref = 0;
  msg.hdr.action_code = Wimp_MPrintInit;
  wimp_send_message(Wimp_EUserMessage , &msg, 0,0,0);

  prn_defn = NULL;

  add_event_handlers();

  add_message_handlers();

  debug_initialise("fish", "NULL:", "DebugLib$Level_fish");
  debug_output_device(DEBUGIT_OUTPUT);

  wimp_task.set_mask(POLL_MASK);
  	//loop
  while(wimp_task.poll());

  delete prn_defn;
}
