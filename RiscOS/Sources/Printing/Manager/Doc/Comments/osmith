Path: acorn!uknet!bnr.co.uk!pipex!warwick!doc.ic.ac.uk!agate!ames!elroy.jpl.nasa.gov!usc!cs.utexas.edu!uunet!gumby!yale!cs.yale.edu!news-mail-gateway!daemon
From: /G=Owen/S=Smith/O=SJ-Research/ADMD=INTERSPAN/C=GB/@mhs-relay.ac.uk
Newsgroups: comp.sys.acorn.tech
Subject: Re: Help with printer offsets please
Message-ID: <ARM200-930113131032-5ED345CD*@MHS>
Date: 13 Jan 93 13:10:32 GMT
Sender: /G=Owen/S=Smith/O=SJ-Research/ADMD=INTERSPAN/C=GB/@mhs-relay.ac.uk
Organization: Yale CS Mail/News Gateway
Lines: 53

hobbs@rocks.enet.dec.com (Mike Hobbs) wrote:

>I recently got RO 3 and set up !Printers to drive my Citizen ProLaser 12,
>HP PaintJet, KXP1124 and ArcFax.

>One of the first things I noticed was that there is a nice !PrintEdit
>application and so I used it to try to set up the graphics printing origin
>for the ProLaser because the default is far too far down the page.  However,
>these x and y offsets seem to be totally ignored.

>I dumped the output of a test print to a file before and after changing the
>x and y offsets and both files were identical.  If I manually edit the print
>file I can get the printer to start printing at a different origin but the
>Acorn driver just doesn't do its stuff.

First of all, I assure you that this code does work. I did one side of the
implementation and all of the testing of the paper offsets. I assume you're
running the Citizen ProLaser 12 in HP LaserJet emulation mode - if you're
using it as a PostScript printer then that explains things. There are no
paper offsets for postscript - I believe that on PostScript you're supposed
to calibrate the printer itself.

You may be being caught out by the way !PrintEdit stores the paper offsets.
Having changed the paper offsets in the main window, you then have to open
up every graphics resolution one by one and click OK in each of them, and
then save the new printer definition file. This is because the paper offsets
are stored in the per graphics resolution data (in pixels), and the graphics
resolution data is encoded when OK is clicked in the graphics window. It's a
fairly duff way of doing it, but I implemented it at the very last minute
(note that the paper offsets are not in the manuals). I suppose it would
have been more obvious to have the paper offsets in the graphics resolution
window, but I reasoned that the information was going to be the same for all
resolutions and therefore you want to type it in once only, in which case I
should have gone for a better implementation. Oh well - you live and learn.
On the bonus side I did allow you to type in negative paper offsets, which
would be needed for a printer whose initial print position was above and to
the left of the top left corner of the paper.

The biggest problem with the baroque user interface is it isn't documented
anywhere, which is my fault. The paper offsets are not in the manual, the
release notice mentions them very briefly, the !PrintEdit.!Help file says
almost nothing, which leaves the Printers.Read_Me file on App2. While this
does say useful things about the paper offsets (in two different sections),
it fails to mention the crucial user interface oddity. Indeed if you follow
my instructions for using the Printers.Top_Left file to calibrate dot matrix
paper offsets, nothing will happen because I tell you to just type them in
and then save the file. Damn. Guess who didn't try following his own
instructions to see if they worked?

Oh well. Maybe it'll make it into a subsequent revision of the release
notice or manuals.

Owen.
