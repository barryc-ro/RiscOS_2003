/*----------------------------------------------------------------------*/
/*    Filename    : h.cmos                                       	*/
/*    Author	  : R.W.Buckley						*/
/*    Date        : Mon 20th February 1995				*/
/*    Description : Functions to read/write to CMOS RAM			*/
/*    Modification history:    	    		       			*/
/*    		   							*/
/*----------------------------------------------------------------------*/

#include <stdlib.h>

#include "kernel.h"
#include "swis.h"
#include "constants.h"

extern _kernel_swi_regs reg; /* Global set of registers to use */
extern _kernel_oserror *err; /* Error block */

/*----------------------------------------------------------------------
    Name : cmos_get_mode

    Description : Read byte in CMOS to get current configured mode,
                  or -1 if configured mode is auto
----------------------------------------------------------------------*/
_kernel_oserror *cmos_get_mode(int *i_wimp_mode)
{
  reg.r[0] = 161;           /* Read CMOS RAM */
  reg.r[1] = MODE2CMOS;	    /* Location of Wimpmode auto bit */
  ERROR_RETURN(_kernel_swi(OS_Byte, &reg, &reg));
  if (reg.r[2] & WIMPMODEAUTO)
    *i_wimp_mode = -1;
  else
  {
    reg.r[1] = WIMPMODE; 	    /* Location of Wimp mode */
    ERROR_RETURN(_kernel_swi(OS_Byte, &reg, &reg));
    *i_wimp_mode = reg.r[2];
  }

  return NULL;
}
/*----------------------------------------------------------------------
    Name : cmos_get_printer

    Description : Read byte in CMOS to get current printer configuration
----------------------------------------------------------------------*/
_kernel_oserror *cmos_get_printer(int *i_printer, int *i_colour)
{
  reg.r[0] = 161;           /* Read CMOS RAM */
  reg.r[1] = PrinterIDCMOS; /* Location of printer ID byte */
  ERROR_RETURN(_kernel_swi(OS_Byte, &reg, &reg));
  *i_printer = reg.r[2];

  reg.r[1] = PSITCMOS;      /* Location of printer information byte */
  ERROR_RETURN(_kernel_swi(OS_Byte, &reg, &reg));
  *i_colour = reg.r[2] & PSITCMOS_MASK;

  return NULL;
}

/*----------------------------------------------------------------------
    Name : cmos_set_printer

    Description : Set byte in CMOS to change current printer configuration
----------------------------------------------------------------------*/
_kernel_oserror *cmos_set_printer(int i_printer, int i_colour)
{
  reg.r[0] = 162;           /* Write CMOS RAM */
  reg.r[1] = PrinterIDCMOS; /* Location of printer ID byte */
  reg.r[2] = i_printer;
  ERROR_RETURN(_kernel_swi(OS_Byte, &reg, &reg));

  reg.r[0] = 161;           /* Read CMOS RAM */
  reg.r[1] = PSITCMOS;      /* Location of printer information byte */
  ERROR_RETURN(_kernel_swi(OS_Byte, &reg, &reg));

  if (i_colour == 1)
    reg.r[2] |= PSITCMOS_MASK;
  else
    reg.r[2] &= ~PSITCMOS_MASK;

  reg.r[0] = 162;           /* Write CMOS RAM */

  return _kernel_swi(OS_Byte, &reg, &reg);
}
