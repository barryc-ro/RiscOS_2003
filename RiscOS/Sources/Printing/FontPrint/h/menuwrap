/*
 * Menu flag components
 */
#define menusize(n) (28 + 24 * (n))

#define MFLAGS_NONE       0
#define MFLAGS_TICKED     1
#define MFLAGS_DOTTED     2
#define MFLAGS_WRITEABLE  4
#define MFLAGS_MESSAGE    8
#define MFLAGS_SEETHRU    16
#define MFLAGS_LAST       128
#define MFLAGS_INDIRTITLE 256

/*
 * Icon flag components
 */
#define IFLAGS_TEXT     (1<<0)
#define IFLAGS_HCENTRE  (1<<3)
#define IFLAGS_FILLED   (1<<5)
#define IFLAGS_INDIR    (1<<8)
#define IFLAGS_SHADED   (1<<22)
#define IFLAGS_FORE     (MWORK_FORE << 24)
#define IFLAGS_BACK     (MWORK_BACK << 28)
#define IFLAGS          (IFLAGS_TEXT | IFLAGS_FILLED | IFLAGS_INDIR | IFLAGS_FORE | IFLAGS_BACK)

/*
 * Colours
 */
#define MTITLE_FORE 7
#define MTITLE_BACK 2
#define MWORK_FORE  7
#define MWORK_BACK  0

typedef struct
{
    int indir_title;
    int nentries;
    int nused;
    char *data;
} MenuRec, *MenuPtr;

char *start_menu (MenuPtr menu, int nentries, char *title);
int add_menu_entry (MenuPtr menu,
                    char *item,       /* item text to be copied.  Use "" for empty */
                    int size,         /* size in chars of buffer, or 0 for length of 'item' */
                    int width,        /* width in characters, or 0 to calculate from 'size' */
                    int flags,
                    MenuPtr submenu);

void free_menu_items (MenuPtr menu);
void free_menu (MenuPtr menu);
void set_submenu (MenuPtr menu, int entry, MenuPtr submenu, char *data);
void set_subwindow (MenuPtr menu, int entry, int handle);

char *grow_menu (MenuPtr menu, int newsize);
void untick_menu (MenuPtr menu);
void tick_menu_item (MenuPtr menu, int item);
int menu_string_match (MenuPtr menu, char *text);
void set_menu_title (MenuPtr menu, char *text);
void set_menu_item_text (MenuPtr menu, int item, char *text);
char *read_menu_item_text (MenuPtr menu, int item);
void set_menu_item_active(MenuPtr menu, int item, int on);
void set_menu_active(MenuPtr menu, int on);

#define menuwidth(menu) (((int *)((menu)->data))[4])
