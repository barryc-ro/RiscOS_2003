#ifndef HTFED_H
#define HTFED_H
//===========================================================================
//
//  Filename     :  htfed.h
//
//  Module       :  Open Source Imaging
//
//  Description  :  This file contains prototypes for error diffusion.
//
//  Copyright  1994-1999, Hewlett-Packard Company, all rights reserved.
//
//============================================================================

#define FORWARD_FED( thresholdValue, bitMask )\
{\
    tone = (*inputPtr++ );\
    fedResPtr = fedResTbl + (tone << 2);\
    level = *fedResPtr++;\
    if (tone != 0)\
    {\
    tone = ( tmpShortStore + (HPInt16)(*fedResPtr++) );\
    if (tone >= thresholdValue)\
        {\
        tone -= 255;\
        level++;\
        }\
        switch (level)\
        {\
            case 0:\
            break;\
            case 1:\
            rasterByte1 |= bitMask;\
            break;\
            case 2:\
            rasterByte2 |= bitMask;\
            break;\
            case 3:\
            rasterByte2 |= bitMask; rasterByte1 |= bitMask;\
            break;\
            case 4:\
            rasterByte3 |= bitMask;\
            break;\
            case 5:\
            rasterByte3 |= bitMask; rasterByte1 |= bitMask;\
            break;\
            case 6:\
            rasterByte3 |= bitMask; rasterByte2 |= bitMask;\
            break;\
            case 7:\
            rasterByte3 |= bitMask; rasterByte2 |= bitMask; rasterByte1 |= bitMask;\
            break;\
        }\
    }\
    else\
    {\
    tone = tmpShortStore;\
    }\
    *diffusionErrorPtr++ = tone >> 1;\
    tmpShortStore = *diffusionErrorPtr + (tone - (tone >> 1));\
}

#define BACKWARD_FED( thresholdValue, bitMask )\
{\
    tone = (*inputPtr-- );\
    fedResPtr = fedResTbl + (tone << 2);\
    level = *fedResPtr++;\
    if (tone != 0)\
    {\
    tone = ( tmpShortStore + (HPInt16)(*fedResPtr++) );\
    if (tone >= thresholdValue)\
        {\
        tone -= 255;\
        level++;\
        }\
        switch (level)\
        {\
            case 0:\
            break;\
            case 1:\
            rasterByte1 |= bitMask;\
            break;\
            case 2:\
            rasterByte2 |= bitMask;\
            break;\
            case 3:\
            rasterByte2 |= bitMask; rasterByte1 |= bitMask;\
            break;\
            case 4:\
            rasterByte3 |= bitMask;\
            break;\
            case 5:\
            rasterByte3 |= bitMask; rasterByte1 |= bitMask;\
            break;\
            case 6:\
            rasterByte3 |= bitMask; rasterByte2 |= bitMask;\
            break;\
            case 7:\
            rasterByte3 |= bitMask; rasterByte2 |= bitMask; rasterByte1 |= bitMask;\
            break;\
        }\
    }\
    else\
    {\
    tone = tmpShortStore;\
    }\
    *diffusionErrorPtr-- = tone >> 1;\
    tmpShortStore = *diffusionErrorPtr + (tone - (tone >> 1));\
}

#endif // INCLUDED_HTFED
