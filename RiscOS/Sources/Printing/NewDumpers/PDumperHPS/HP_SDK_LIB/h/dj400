#ifndef DJ400_H
#define DJ400_H

class DeskJet400 : public Printer
{
public:
        DeskJet400(SystemServices* pSS,BOOL proto=FALSE);

#if defined(_CGTIMES) || defined(_COURIER) || defined(_LTRGOTHIC) || defined(_UNIVERS)
        Font* RealizeFont(const int index,const BYTE bSize,
                                                const TEXTCOLOR eColor=BLACK_TEXT,
                                                const BOOL bBold=FALSE,const BOOL bItalic=FALSE,
                                                const BOOL bUnderline=FALSE);
#endif
        Header* SelectHeader(PrintContext* pc);
        DRIVER_ERROR VerifyPenInfo();
        virtual DRIVER_ERROR ParsePenInfo(PEN_TYPE& ePen, BOOL QueryPrinter=TRUE);
        BOOL TopCoverOpen(BYTE status_reg);
    DRIVER_ERROR CleanPen();
        virtual DISPLAY_STATUS ParseError(BYTE status_reg);

    void SetHelpType(const char* model) { help=dj400help; }

protected:

        virtual DRIVER_ERROR GetC32Status(BYTE *pStatusString, int *pLen);
        unsigned long last_C32_status;

};

class Mode400 : public PrintMode
{
public:
    Mode400();

};


#ifdef PROTO
class ProtoDeskJet400 : public DeskJet400
{
public:
        ProtoDeskJet400(ProtoServices* pSS);
        
    DRIVER_ERROR GetC32Status(BYTE *pStatusString, int *pLen);
};
#endif
#endif
