
// #pragma warning (disable: 4001)  /* nonstandard ext 'single line comment' */
//#pragma warning (disable: 4103)  /* used #pragma pack to change alignment */

#include "common.h"

/***************************************************************************
 *  FCKELVIN.C                                     Lexmark Confidential
 *
 * Function Name:    FCEjectPage
 *
 * Description:
 *    This function sends a page eject command to the printer.
 *    Note that no action is taken by the printer unless paper has
 *    been loaded.
 *
 * Inputs:  lpDataRec  Long pointer to print device structure.
 *
 * Outputs: Printer Command to printer port/file.
 *
 * Major Functions Called:  OUTPUT
 *
 * Original Author: J. Bates/K. Profitt
 * Date: 09/27/96
 *
 * Changes:
 *    Date        Name           Reason for Change
 *
 *************************************************************************/

unsigned short FCExtEjectPage(unsigned char *lpByteBuff, unsigned short wMaxBuffSize)
{

	if ((COMMAND_SIZE <= wMaxBuffSize) && (lpByteBuff != NULL))
	{
		*lpByteBuff++ = PAPER_EJECT_CMD;
		*lpByteBuff++ = DET_JAM_ENABLE;
		*lpByteBuff++ = 0x10;
		*lpByteBuff++ = 0xCC;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		return (COMMAND_SIZE);
	}
	else
		return (0);
}

/******************************************************************
 *  FCKELVIN.C                               Lexmark Confidential
 *
 * Function Name:    FCInstallCartridge
 *
 * Description:
 *    This function is called to send a command to the
 *    printer to send the carrier to the install position.
 *
 * Inputs:  lpByteBuff     Byte pointer to a buffer of size wByteBuffSize.
 *          lpByteBuffSize Contains data to send ot printer when lpD
 *          bCartridgeID   Type of cartridge installed.
 *
 * Outputs: lpByteBuff     Contains bytes to send to printer to perform function.
 *          unsigned short           Count of bytes to send to printer.
 *
 *
 * Original Author: K. Profitt
 * Date: 01/28/97
 *
 * Changes:
 *    Date        Name           Reason for Change
 *
 *****************************************************************/

unsigned short FCExtInstallCartridge(unsigned char *lpByteBuff, unsigned short wMaxBuffSize)
{

	if (((COMMAND_SIZE * 3) <= wMaxBuffSize) && (lpByteBuff != NULL))
	{
		/* Cap Command so will know where carrier is */
		*lpByteBuff++ = CAP_CMD;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;

		/* Uncap maintenance command */
		*lpByteBuff++ = MAINTENANCE_CMD;
		*lpByteBuff++ = MAINT_SPIT_POS;
		*lpByteBuff++ = UNCAP_SPIT_CNT / 2;
		*lpByteBuff++ = UNCAP_WIPE_CNT;
		*lpByteBuff++ = MAINT_COLOR;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;

#ifdef DVT

		/* Send to install position */
		*lpByteBuff++ = CARRIER_MOVE_CMD;
		*lpByteBuff++ = 0x1C;
		*lpByteBuff++ = 0x05;
		*lpByteBuff++ = 0x06;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
#else
		/* Send to install position */
		*lpByteBuff++ = CARRIER_MOVE_CMD;
		*lpByteBuff++ = 0x1C;
		*lpByteBuff++ = 0x05;
		*lpByteBuff++ = 0x24;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;

#endif
		return (COMMAND_SIZE * 3);

	}
	else
		return (0);
}

/******************************************************************
 *  FCKELVIN.C                               Lexmark Confidential
 *
 * Function Name:    FCSendCartridgeHome
 *
 * Description:
 *    This function is called to send a command to the
 *    printer to send the carrier to be capped at the
 *    maintenance station.  The carrier position
 *    kept by the driver is then updated to the
 *    maintenance cap position.
 *
 * Inputs:  lpByteBuff     Byte pointer to a buffer of size wByteBuffSize.
 *          lpByteBuffSize Contains data to send ot printer when lpD
 *          bCartridgeID   Type of cartridge installed.
 *
 * Outputs: lpByteBuff     Contains bytes to send to printer to perform function.
 *          unsigned short           Count of bytes to send to printer.
 *
 *
 * Major Functions Called: None
 *
 * Original Author: K. Profitt
 * Date: 01/28/97
 *
 * Changes:
 *    Date        Name           Reason for Change
 *
 *****************************************************************/

unsigned short FCExtSendCartridgeHome(unsigned char *lpByteBuff, unsigned short wMaxBuffSize,
		unsigned char bCartridgeID)
{

	if (((COMMAND_SIZE * 3) <= wMaxBuffSize) && (lpByteBuff != NULL))
	{

#ifdef DVT
		*lpByteBuff++ = CARRIER_MOVE_CMD;
		*lpByteBuff++ = 0x18;
		*lpByteBuff++ = 0x05;
		*lpByteBuff++ = 0x06;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
#else

		*lpByteBuff++ = CARRIER_MOVE_CMD;
		*lpByteBuff++ = 0x18;
		*lpByteBuff++ = 0x05;
		*lpByteBuff++ = 0x24;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
#endif

		/* Cap Command so will know where carrier is */
		*lpByteBuff++ = CAP_CMD;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;

		/* Uncap maintenance command */
		*lpByteBuff++ = MAINTENANCE_CMD;
		*lpByteBuff++ = MAINT_HOME_POS;
		*lpByteBuff++ = INSTALL_SPIT_CNT / 2;
		*lpByteBuff++ = INSTALL_WIPE_CNT;
		if (bCartridgeID == MONO_CARTRIDGE)
			*lpByteBuff++ = MAINT_MONO;
		else
			*lpByteBuff++ = MAINT_COLOR;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;
		*lpByteBuff++ = 0x00;

		return (COMMAND_SIZE * 3);
	}
	else
		return (0);
}
