
//#pragma warning (disable: 4001)  /* nonstandard ext 'single line comment' */
//#pragma warning (disable: 4103)  /* used #pragma pack to change alignment */

#include "fclocal.h"
#include <stdlib.h>

#ifndef DOS_BUILD
/*  Used to send debug messages from driver to dbwin window */
int FAR Dputs(LPSTR);
int _cdecl FAR Dprintf(LPSTR, ... );
#else

#define Dputs //
#define Dprintf //

#endif

static char fc_version[] = "ifprod.obj: "FC_VERSION;  /* set object module level ID */


/***************************************************************************
 *  FCKELVIN.C                                     Lexmark Confidential
 *
 * Function Name:    FCEjectPage
 *
 * Description:
 *    This function sends a page eject command to the printer.
 *    Note that no action is taken by the printer unless paper has
 *    been loaded.
 *
 * Inputs:  lpDataRec  Long pointer to print device structure.
 *
 * Outputs: Printer Command to printer port/file.
 *
 * Major Functions Called:  OUTPUT
 *
 * Original Author: J. Bates/K. Profitt
 * Date: 09/27/96
 *
 * Changes:
 *    Date        Name           Reason for Change
 *
 *************************************************************************/

static WORD FAR FCExtEjectPage(LPBYTE lpByteBuff, WORD wMaxBuffSize)
{

   if ( (COMMAND_SIZE <= wMaxBuffSize) && (lpByteBuff != NULL))
   {
      *lpByteBuff++ = PAPER_EJECT_CMD;
      *lpByteBuff++ = DET_JAM_ENABLE;
      *lpByteBuff++ = 0x2C;
      *lpByteBuff++ = 0x88;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      return (COMMAND_SIZE);
   }
   else
      return(0);
}

/******************************************************************
 *  FCKELVIN.C                               Lexmark Confidential
 *
 * Function Name:    FCInstallCartridge
 *
 * Description:
 *    This function is called to send a command to the
 *    printer to send the carrier to the install position.
 *
 * Inputs:  lpByteBuff     Byte pointer to a buffer of size wByteBuffSize.
 *          lpByteBuffSize Contains data to send ot printer when lpD
 *          bCartridgeID   Type of cartridge installed.
 *
 * Outputs: lpByteBuff     Contains bytes to send to printer to perform function.
 *          WORD           Count of bytes to send to printer.
 *
 *
 * Original Author: K. Profitt
 * Date: 01/28/97
 *
 * Changes:
 *    Date        Name           Reason for Change
 *
 *****************************************************************/

static WORD FAR FCExtInstallCartridge(LPBYTE lpByteBuff, WORD wMaxBuffSize)
{

   if ( ( (COMMAND_SIZE*3) <= wMaxBuffSize) && (lpByteBuff != NULL))
   {
      /* Cap Command so will know where carrier is */
      *lpByteBuff++ = CAP_CMD;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;

      /* Uncap maintenance command */
      *lpByteBuff++ = MAINTENANCE_CMD;
      *lpByteBuff++ = MAINT_SPIT_POS;
      *lpByteBuff++ = UNCAP_SPIT_CNT/2;
      *lpByteBuff++ = UNCAP_WIPE_CNT;
      *lpByteBuff++ = MAINT_COLOR;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;

      /* Send to install position */
      *lpByteBuff++ = CARRIER_MOVE_CMD;
      *lpByteBuff++ = 0x1C;
      *lpByteBuff++ = 0x05;
      *lpByteBuff++ = 0x06;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      return (COMMAND_SIZE * 3);

   }
   else
     return(0);
}

/******************************************************************
 *  FCKELVIN.C                               Lexmark Confidential
 *
 * Function Name:    FCSendCartridgeHome
 *
 * Description:
 *    This function is called to send a command to the
 *    printer to send the carrier to be capped at the
 *    maintenance station.  The carrier position
 *    kept by the driver is then updated to the
 *    maintenance cap position.
 *
 * Inputs:  lpByteBuff     Byte pointer to a buffer of size wByteBuffSize.
 *          lpByteBuffSize Contains data to send ot printer when lpD
 *          bCartridgeID   Type of cartridge installed.
 *
 * Outputs: lpByteBuff     Contains bytes to send to printer to perform function.
 *          WORD           Count of bytes to send to printer.
 *
 *
 * Major Functions Called: None
 *
 * Original Author: K. Profitt
 * Date: 01/28/97
 *
 * Changes:
 *    Date        Name           Reason for Change
 *
 *****************************************************************/

static WORD FAR FCExtSendCartridgeHome(LPBYTE lpByteBuff, WORD wMaxBuffSize, BYTE bCartridgeID)
{

   if ( ( (COMMAND_SIZE*3) <= wMaxBuffSize) && (lpByteBuff != NULL))
   {

      /* Cap Command */
      *lpByteBuff++ = CAP_CMD;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;


      /* Must send Uncap maintenance command twice to get 2 spits with */
      /* 2 wipes to correct firmware bug */

      *lpByteBuff++ = MAINTENANCE_CMD;
      *lpByteBuff++ = MAINT_HOME_POS;
      *lpByteBuff++ = INSTALL_SPIT_CNT/2;
      *lpByteBuff++ = 1;
      if (bCartridgeID == MONO_CARTRIDGE)
         *lpByteBuff++ = MAINT_MONO;
      else
         *lpByteBuff++ = MAINT_COLOR;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;


      /* Uncap maintenance command */
      *lpByteBuff++ = MAINTENANCE_CMD;
      *lpByteBuff++ = MAINT_HOME_POS;
      *lpByteBuff++ = INSTALL_SPIT_CNT/2;
      *lpByteBuff++ = 1;
      if (bCartridgeID == MONO_CARTRIDGE)
         *lpByteBuff++ = MAINT_MONO;
      else
         *lpByteBuff++ = MAINT_COLOR;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;
      *lpByteBuff++ = 0x00;

      return ( COMMAND_SIZE * 3 );
    }
    else
       return(0);
}
