/* lexsupport.c */

#include <stdlib.h>

#include "lexsupport.h"
#include "kelvswis.h"
#include "hbpxface.h"
#include "kernel.h"

_kernel_oserror *lexmark_claimworkspace(LPDVDATAREC *hDataRec)
{
	_kernel_swi_regs r;
	_kernel_oserror *err;

	if (err = _kernel_swi(Lexmark_ClaimWorkspace, &r, &r), err)
		return err;

	*hDataRec = (LPDVDATAREC) r.r[0];
	return NULL;
}

_kernel_oserror *lexmark_startdoc(LPDVDATAREC lpDataRec)
{
	_kernel_swi_regs r;

	r.r[0]		= (int) lpDataRec;

	return _kernel_swi(Lexmark_StartDoc, &r, &r);
}

_kernel_oserror *lexmark_startpage(LPDVDATAREC lpDataRec)
{
	_kernel_swi_regs r;

	r.r[0]		= (int) lpDataRec;

	return _kernel_swi(Lexmark_StartPage, &r, &r);
}

_kernel_oserror *lexmark_endpage(LPDVDATAREC lpDataRec)
{
	_kernel_swi_regs r;

	r.r[0]		= (int) lpDataRec;

	return _kernel_swi(Lexmark_EndPage, &r, &r);
}

_kernel_oserror *lexmark_ejectpage(LPDVDATAREC lpDataRec)
{
	_kernel_swi_regs r;

	r.r[0]		= (int) lpDataRec;

	return _kernel_swi(Lexmark_EjectPage, &r, &r);
}

_kernel_oserror *lexmark_enddoc(LPDVDATAREC lpDataRec)
{
	_kernel_swi_regs r;

	r.r[0]		= (int) lpDataRec;

	return _kernel_swi(Lexmark_EndDoc, &r, &r);
}

_kernel_oserror *lexmark_sendstrip(LPDVDATAREC lpDataRec, unsigned const char *data,
									unsigned rowNum, unsigned leftByte, unsigned rightByte)
{
	_kernel_swi_regs r;

	r.r[0]		= (int) lpDataRec;
	r.r[1]		= (int)	data;
	r.r[2]		= (int) rowNum;
	r.r[3]		= (int) leftByte;
	r.r[4]		= (int) rightByte;

	return _kernel_swi(Lexmark_SendStrip, &r, &r);
}

_kernel_oserror *lexmark_installcartridge(LPDVDATAREC lpDataRec)
{
	_kernel_swi_regs r;

	r.r[0]		= (int) lpDataRec;

	return _kernel_swi(Lexmark_InstallCartridge, &r, &r);
}

_kernel_oserror *lexmark_sendcartridgehome(LPDVDATAREC lpDataRec)
{
	_kernel_swi_regs r;

	r.r[0]		= (int) lpDataRec;

	return _kernel_swi(Lexmark_SendCartridgeHome, &r, &r);
}
