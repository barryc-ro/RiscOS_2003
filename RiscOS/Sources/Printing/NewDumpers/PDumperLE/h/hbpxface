#ifndef HBPXFACE_H
#define HBPXFACE_H

#if defined(KELVIN) || defined(VOLTA) || defined(SYDNEY)
# define BIDI_ALIGN
# define ELAPSED_MAINT
#endif

#if defined(FC_WIN_16) || defined(DOS_BUILD)
# include <windows.h>
#else
# include "riscos.h"
#endif

/* NOTE: This structure is defined in both hbpxface.h and lx_glbl.h,
   Any changes to the size of number of fields most be make in both places!!! */
typedef struct tagDVDATAREC
{
   WORD     hLXDevice;           /* handle to hbp internal structure */
   DWORD    lpLXDevice;          /* pointer to hbp internal structure */
   DWORD    lpLXGenericPtr;      /* pointer to driver specific print device */
#ifdef BIDI_ALIGN
   int      nRightBidiAlignColor;/* Bidrectional printing alignment */
   int      nLeftBidiAlignColor; /* Bidrectional printing alignment */
   int      nRightBidiAlignMono; /* Bidrectional printing alignment */
   int      nLeftBidiAlignMono;  /* Bidrectional printing alignment */
#endif
   BYTE     bCompress;           /* Compression? 0= no compress, 1= compress */
   BYTE     bInkSave;            /* are we in ink saver mode? */
   BYTE     bLeftCartridgeID;    /* id of installed left cartridge */
   BYTE     bRightCartridgeID;   /* id of installed right cartridge */
   BYTE     bHorizontalAdj;      /* horizontal adjustment between cartridges */
   BYTE     bVerticalAdj;        /* vertical adjustment between cartridges */
   BYTE     bBidiAlignColor;     /* Bidrectional printing alignment */
   BYTE     bBidiAlignMono;      /* Bidrectional printing alignment */
   BYTE     bColorPlanes;        /* Number of color planes, i.e. 1,3,4,6 */
   BYTE     bDocumentType;       /* */
   BYTE     bQuality;            /* Draft or Letter Quality */
   BYTE     bMediaType;          /* example PLAIN, GLOSSY, TRANSPARENCY, etc. */
   BYTE     bMediaSize;          /* predefined paper size, ie Letter, A4, etc. */
   BYTE     bMediaSource;        /* Manual or Auto feed */
   BYTE     bShingle;            /* shingle level */
   WORD     wTopMargin;          /* page top margin */
   WORD     wLeftMargin;         /* page left margin */
   DWORD    secondsSinceLastPrint;
#if defined(DOS_BUILD) || defined(FC_DOS_32)
   FILE     *flOutFile;
#else
	UINT	flOutFile;
#endif
} DVDATAREC;

#define LPDVDATAREC DVDATAREC *

#ifdef BIDI_ALIGN
/* When both cMonoUserInput and cColorUserInput are set to -1, the
   default values for bidirectional alignment are returned. For one
   printhead printers, a -1 indicates no user input, i.e. the other
   printhead is installed. */

typedef struct tagBidiAlign
{
   int   nMonoLeftBidiAlign;
   int   nMonoRightBidiAlign;
   int   nColorLeftBidiAlign;
   int   nColorRightBidiAlign;
   char  cMonoUserInput;      /* Range from 1-5. A -1 indicates no user input. */
   char  cColorUserInput;     /* Range from 1-5. A -1 indicates no user input. */
} BIDIALIGNNUM, FAR *LPBIDIALIGN;
#endif

/* This structure stores the ink counts in the order that the format code
   receives the color planes.  For example, for mono only printing, the
   ink count is returned in nInk1.  For CMY printing, the dot count for
   cyan is returned in nInk1, magenta is nInk2, and yellow is nInk3.
   ( assuming color planes passed to format code in CMY order ).
   For KCM, the CMY is same as above with diluted cyan in nInk4,
   diluted m in nInk5, and diluted k in nInk6 ( assuming color planes
   passed to format code in the following order : C, M, K, c, m, k).
*/

typedef struct tagDotCounts
{
   long int nInk1;
   long int nInk2;
   long int nInk3;
   long int nInk4;
   long int nInk5;
   long int nInk6;
} DOTCOUNTS, FAR *LPDOTCOUNTS;



/* HBP code is built assuming an 8" swath width */
#define SWATH_WIDTH 8

/* possible values for DVDATAREC.bShingle */
#define NO_SHINGLE      0
#define SHINGLE_50      1
#define SHINGLE_25      2
#define SHINGLE_33      3
#define SHINGLE_16      4

/* possible values for DVDATAREC.bQuality */
#define QUALITY_DRAFT         0
#define QUALITY_UNI_DRAFT     1
#define QUALITY_NORMAL        2
#define QUALITY_NOT_SO_HIGH   3
#define QUALITY_HIGH          4

/* possible values for DVDATAREC.bMediaType */
#define PLAIN_PAPER           0
#define COATED_PAPER          1
#define GLOSSY_PAPER          2
#define TRANSPARENCY          3
#define IRON_ON_TRANSFER      4
#define GREETING_CARD_STOCK   5

/* possible values for DVDATAREC.bMediaSize */
#define PAPER_LETTER          0
#define PAPER_LEGAL           1
#define PAPER_B5              2
#define PAPER_EXECUTIVE       3
#define PAPER_A5              4
#define PAPER_USER            5
#define PAPER_A4              6
#define PAPER_OHFHAGAKI       7
#define PAPER_HAGAKI          8
#define ENVELOPE_MONARCH      9
#define ENVELOPE_9            10
#define ENVELOPE_10           11
#define ENVELOPE_DL           12
#define ENVELOPE_C5           13
#define ENVELOPE_B5           14
#define ENVELOPE_C6           15
#define ENVELOPE_D5           16
#define ENVELOPE_75           17
#define CARD_3X5              18
#define CARD_4X6              19
#define PAPER_BANNER_A4       20
#define PAPER_BANNER_LETTER   21
#define CARD_A6               22
#define ENVELOPE_BARONIAL     23
#define ENVELOPE_6_3_4        24
#define JPNLONG3              25
#define JPNSQUARE4            26
#define JPNSQUARE5            27
#define JPNSQUARE6            28
#define ENVELOPE_CUSTOM       253
#define PAPER_CUSTOM_BANNER   254
#define PAPER_CUSTOM          255

/* possible values for DVDATAREC.bMediaSource */
#define MANUAL_FEED  0
#define AUTO_FEED    1

/* possible values for DVDATAREC.bLeftCartridgeID */
#define MONO_CARTRIDGE 1
#define KCM_CARTRIDGE  2
/* right cartridge id for two pen printers */
#define COL_CARTRIDGE  3

/* possible values for DVDATAREC.bDocumentType */
#define INTENT_BUSINESS  0
#define INTENT_GRAPHIC   1
#define INTENT_PHOTO     2

#endif   /* end of #ifndef HBPXFACE_H */
