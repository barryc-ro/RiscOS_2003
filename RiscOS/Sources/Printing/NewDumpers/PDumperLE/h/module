/* module.h */

#ifndef __module_h
#define __module_h

/* Globals */

typedef struct kelvin__memhdr kelvin__memhdr;
extern int kelvin__trackHandle;
extern kelvin__memhdr *kelvin_memhead, *kelvin_memtail;

extern _kernel_oserror kelvin_freealready;
extern _kernel_oserror kelvin_badblock;
extern _kernel_oserror kelvin_generic;
extern _kernel_oserror kelvin_badswi;
extern _kernel_oserror kelvin_exover;

/* Lightweight exception handling mechanism */

#define kelvin_EXMAX		5			/* levels of exception */
extern jmp_buf	kelvin_jb[kelvin_EXMAX];
extern int		kelvin_sp;

#define CATCH() \
	(kelvin_sp >= kelvin_EXMAX ? &kelvin_exover : (_kernel_oserror *) setjmp(kelvin_jb[kelvin_sp++]))

#ifdef MEMCHECK
void kelvin_throw(const char *file, int line, _kernel_oserror *err);
void kelvin_endcatch(const char *file, int line);
#define THROW(e)	kelvin_throw(__FILE__, __LINE__, e)
#define ENDCATCH()	kelvin_endcatch(__FILE__, __LINE__)
#else
void kelvin_throw(_kernel_oserror *err);
void kelvin_endcatch(void);
#define THROW(e)	kelvin_throw(e)
#define ENDCATCH()	kelvin_endcatch()
#endif

void kelvin_service(int nService, _kernel_swi_regs * regs, void *ws);
_kernel_oserror *kelvin_initialise(char *cmd, int pod, void *ws);
_kernel_oserror *kelvin_swi(int n, _kernel_swi_regs * r, void *ws);

#define ASSERT(x) do { if (!(x)) kelvin_assert(__FILE__, __LINE__); } while (0)
void kelvin_assert(const char *file, int line);

enum { kelvin_ALL = -1, kelvin_HBP, kelvin_TEXTPRINT };		// block types

#ifdef MEMCHECK
#define MEMCPY(d, s, l)		kelvin_memcpy(d, s, l)
#define MEMSET(d, b, l)		kelvin_memset(d, b, l)
void kelvin_memset(void *m, char byte, size_t len);
void kelvin_memcpy(void *dest, void *src, size_t len);
void kelvin_memcheck(void *m, size_t len);

#else
#define MEMCPY(d, s, l)		memcpy(d, s, l)
#define MEMSET(d, b, l)		memset(d, b, l)
#endif

#ifdef MEMTRACE
void *kelvin_malloc(const char *file, int line, size_t size, unsigned int type);
void kelvin_free(const char *file, int line, void *mem);

#define MALLOC(s)			kelvin_malloc(__FILE__, __LINE__, s, kelvin_HBP)
#define MALLOCT(s, t)		kelvin_malloc(__FILE__, __LINE__, s, t)
#define FREE(p)				kelvin_free(__FILE__, __LINE__, p)

#else
void *kelvin_malloc(size_t size, unsigned int type);
void kelvin_free(void *mem);

#define MALLOC(s)		kelvin_malloc(s, kelvin_HBP)
#define MALLOCT(s, t)	kelvin_malloc(s, t)
#define FREE(p)		kelvin_free(p)
#endif

void kelvin_freeall(unsigned int type);
void kelvin_memtrace(void);

#ifdef TRACE
void kelvin_traceout(const char *s);
int kelvin_trace(const char *s,...);
#define kelvin_trace0(s) kelvin_trace(s)
#define kelvin_trace1(s, a0) kelvin_trace(s, a0)
#define kelvin_trace2(s, a0, a1) kelvin_trace(s, a0, a1)
#define kelvin_trace3(s, a0, a1, a2) kelvin_trace(s, a0, a1, a2)
#define kelvin_trace4(s, a0, a1, a2, a3) kelvin_trace(s, a0, a1, a2, a3)
#define kelvin_trace5(s, a0, a1, a2, a3, a4) kelvin_trace(s, a0, a1, a2, a3, a4)
#define kelvin_trace6(s, a0, a1, a2, a3, a4, a5) kelvin_trace(s, a0, a1, a2, a3, a4, a5)
#define kelvin_trace7(s, a0, a1, a2, a3, a4, a5, a6) kelvin_trace(s, a0, a1, a2, a3, a4, a5, a6)
#define kelvin_trace8(s, a0, a1, a2, a3, a4, a5, a6, a7) kelvin_trace(s, a0, a1, a2, a3, a4, a5, a6, a7)
#define kelvin_trace9(s, a0, a1, a2, a3, a4, a5, a6, a7, a8) kelvin_trace(s, a0, a1, a2, a3, a4, a5, a6, a7, a8)
#define kelvin_trace10(s, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) kelvin_trace(s, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9)
#define kelvin_trace11(s, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) kelvin_trace(s, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10)
#define kelvin_trace12(s, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) kelvin_trace(s, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11)
#define kelvin_enter(r) \
   int ___ = kelvin_trace("Entered: %s\n", r)
#else
#define kelvin_traceout(s)	(void) 0
#define kelvin_trace0(s) (void) 0
#define kelvin_trace1(s, a0) (void) 0
#define kelvin_trace2(s, a0, a1) (void) 0
#define kelvin_trace3(s, a0, a1, a2) (void) 0
#define kelvin_trace4(s, a0, a1, a2, a3) (void) 0
#define kelvin_trace5(s, a0, a1, a2, a3, a4) (void) 0
#define kelvin_trace6(s, a0, a1, a2, a3, a4, a5) (void) 0
#define kelvin_trace7(s, a0, a1, a2, a3, a4, a5, a6) (void) 0
#define kelvin_trace8(s, a0, a1, a2, a3, a4, a5, a6, a7) (void) 0
#define kelvin_trace9(s, a0, a1, a2, a3, a4, a5, a6, a7, a8) (void) 0
#define kelvin_trace10(s, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) (void) 0
#define kelvin_trace11(s, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) (void) 0
#define kelvin_trace12(s, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) (void) 0
#define kelvin_enter(r) (void) 0
#endif

#endif
