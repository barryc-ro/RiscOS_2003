
// $Header:   //C63SRV1/DDKCODE/PVCSDOM/HBPCODE/fc/source/hbpfunc.h_v   1.2   11 Apr 1997 16:04:48
//  jbates  $

#ifndef HBPFUNC_H
#define HBPFUNC_H

/* Function definitions of HBP interface functions.  Please see HBPXFACE.H for the definition of
 * HBP interface structure LXDVDATAREC. */

/* FCStartDoc() MUST be the first HBP function called at the start of every print job.  Before the
 * first call FCStartDoc(), lpDataRec->lpLXDevice MUST be initialized to 0 before, and not changed
 * thereafter */
unsigned int FCStartDoc(LPDVDATAREC lpDataRec);

/* FCStartPage() MUST be called at the beginning of every new page in the print job.  */
unsigned int FCStartPage(LPDVDATAREC lpDataRec);

/* FCEndPage() should be called at the end of every page in the print job.  It flushes the HBP's
 * delay buffers, i.e. it sends the last raster lines to the printer.  If a page is aborted, then
 * do not call FCEndPage(). */
void FCEndPage(LPDVDATAREC lpDataRec);

/* FCEndDoc() MUST be called at the end of every print job.  FCEndDoc() frees dynamic memory
 * allocated by HBP. */
void FCEndDoc(LPDVDATAREC lpDataRec);

/* FCOutputStrip() is called for each raster line in a print job. */

// Third parameter is the line number. Fourth is byte number of the
// first nonzero byte in the raster line. Last is the byte number of
// the first zero byte in the trailing zero bytes.

unsigned int FCOutputStrip(LPDVDATAREC lpDataRec, unsigned char *lpRasterLine,
		long lStripStart, int nScanStart, int nScanEnd);

/* FCPageEject() is called to eject a page from the printer. This function should NOT be called
 * while print swath data is being sent to the printer. */
void FCEjectPage(LPDVDATAREC lpDataRec);

/* FCInstallCartridge() is called to move the print carrier to the install position. This function
 * should NOT be called while print swath data is being sent to the printer. */
void FCInstallCartridge(LPDVDATAREC lpDataRec);

/* FCSendCartridgeHome() is called to move the print carrier to the home position. This function
 * should NOT be called while print swath data is being sent to the printer. The cartridge ids
 * should be updated in lpDataRec prior to the call. */
void FCSendCartridgeHome(LPDVDATAREC lpDataRec);

extern void SendCommand(void *lpDevice, void *cmd_ptr, unsigned long size);

/* FCGetInkUsage returns the dot counts accumulated since the start of the job or since the last
 * FCGetInkUsage call.  This function should be called after FCStartDoc and before FCEndDoc. */
void FCGetInkUsage(LPDVDATAREC lpDataRec, LPDOTCOUNTS lpDotCounts);

#ifdef BIDI_ALIGN
/* FCCalcBidiAlign takes the current bidi alignment parameters and the user alignment selection and 
 * calculates new bidirectional alignment numbers.  The bidirectional alignment numbers are passed
 * to the print formatter code from the printer driver for each job.  This function is required
 * only for printers that do not perform bidirectional alignment in the printer firmware. If both
 * the color and mono user inputs are set to a -1, this function returns the default bidirectional
 * alignment values. */
void FCCalcBidiAlign(LPBIDIALIGN lpBidiAlign);

#endif

#endif // HBPFUNC_H not defined
