#
# SSLLeay/apps/Makefile
#
# RISC OS version.
#
.SUFFIXES: .c .o .aif

DIR=apps

AR=libfile
CC=cc
CP=copy
RM=remove
MKDIR=cdir
LINK=link
WIPE=wipe

SSLEAY = ssleay

APPS = aif.ciphers aif.s_http
# aif.crl aif.dh aif.req aif.s_client aif.s_server

CFLAGS=-throwback -Wpand -I${INCLUDES} ${DEFINES}
CPFLAGS=FR~C~V~S~N~T~L
WPFLAGS=FR~C~V

INCLUDES = SSL:,TCPIPLibs:,C:
DEFINES  = -DRISCOS -DNO_IDEA -DNO_DES

BASELIB_OBJ=o.s_cb o.s_socket o.apps
BASELIBS=o.libbase

LIBDIR = <Lib$Dir>.SSLeay

PROGS=s_server s_client
LIBS=${LIBDIR}.o.ssl ${LIBDIR}.o.libcrypto ${TCPIPLIBS} c:o.stubs
TCPIPLIBS=TCPIPLIBS:o.inetlib TCPIPLIBS:o.socklib

E_OBJ=	verify.o asn1pars.o req.o dgst.o dh.o enc.o gendh.o errstr.o ca.o \
	gendsa.o pkcs7.o crl2p7.o crl.o \
	rsa.o dsa.o dsaparam.o \
	x509.o genrsa.o s_server.o s_client.o s_http.o \
	s_time.o $(A_OBJ) $(S_OBJ) version.o sess_id.o \
	ciphers.o

S_OBJ=	s_cb.o s_socket.o

A_OBJ=  apps.o

export_hdrs:
       @|

export_libs: ${APPS} ${BASELIBS} ${E_OBJ}
       @copy aif.* $.Public.Private.Security.* fr~c~v~t~s~n
       @|

clean:
       ${WIPE} o.* ${WPFLAGS}

.c.o:; ${CC} ${CFLAGS} -c $*.c

.o.aif:; ${LINK} -o $@ $*.o ${BASELIBS} ${LIBS}
	@Access $@ WR/R


${BASELIBS}: ${BASELIB_OBJ}
  ${AR} -c -o $@ ${BASELIB_OBJ}

${SSLEAY}: progs.h ${E_OBJ} ${SSLEAY}.o ${CRYPTOLIBS}
       ${CC} ${CFLAGS} -o $@ ${SSLEAY}.o ${E_OBJ} ${CRYPTOLIBS}

