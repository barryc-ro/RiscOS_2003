/*--------------------------------------------------------------------------------------------*/
/* File:    h.rml_misc                                                                        */
/* Purpose: Miscellaneous library routines                                                    */
/* Author:  Richard Leggett                                                                   */
/*--------------------------------------------------------------------------------------------*/

/* A graphics bounding box */
typedef struct
{
   int x1;
   int y1;
   int x2;
   int y2;
} gbox;


/*--------------------------------------------------------------------------------------------*/
/* Memory munging routines                                                                    */
/*--------------------------------------------------------------------------------------------*/

void rml_misc_memset32bit(char* data, unsigned int c, int n);
void rml_misc_memset16bit(char* data, unsigned int c, int n);
void rml_misc_memset1bit(char *data, int c, int n, int startbit);
int  rml_misc_set_bit(int num, int bit);
int  rml_misc_unset_bit(int num, int bit);

/*--------------------------------------------------------------------------------------------*/
/* Graphics routines                                                                          */
/*--------------------------------------------------------------------------------------------*/

gbox read_graphics_window(void);

/*--------------------------------------------------------------------------------------------*/
/* Debugging routines                                                                         */
/*--------------------------------------------------------------------------------------------*/

#ifdef TRACE
void debug_start(void);
void debug_end(void);
void debug_print(char* s);
void debug_error(char* s);
void debug_value(char *s, int v);
void debug_numeric(int n);
void debugger_breakpoint(void);
void exit_error(char *string);
#else
#define debug_start()
#define debug_end()
#define debug_print(s)
#define debug_error(s)
#define debug_value(s, v)
#define debug_numeric(n)
#endif


/*--------------------------------------------------------------------------------------------*/
/* Reporting routines                                                                         */
/*--------------------------------------------------------------------------------------------*/

#ifdef TRACE
void report_string(char *s);
void report_value(char *s, int v);
void report_start(void);
#else
#define report_string(s)
#define report_value(s, v)
#define report_start()
#endif
