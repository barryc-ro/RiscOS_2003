; generated by Norcroft RISC OS ARM C vsn 5.06 (Acorn Computers Ltd) [May 25 1995]

        AREA |C$$code|, CODE, READONLY
|x$codeseg|

        DCB     &47,&49,&46,&38
        DCB     &37,&61,&00,&00

        DCB     &47,&49,&46,&38
        DCB     &39,&61,&00,&00

        DCB     &4e,&65,&77,&47
        DCB     &49,&46,&00,&00
        DCD     &ff000008

        IMPORT  __rt_stkovf_split_small
        IMPORT  malloc
        IMPORT  memset
        EXPORT  NewGIF
NewGIF
        MOV      ip,sp
        STMDB    sp!,{a1,v1-v3,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        MOV      a1,#&ac
        ADD      a1,a1,#&c400
        BL       malloc
        STR      a1,[v1,#&28]
        MOVS     v2,a1
        MVNEQ    a1,#0
        LDMEQDB  fp,{v1-v3,fp,sp,pc}^
        LDR      a1,[pc, #L0000b8-.-8]
        STR      a1,[v1,#0]
        LDR      a1,[pc, #L0000bc-.-8]
        STR      a1,[v1,#&c]
        LDR      a1,[pc, #L0000c0-.-8]
        STR      a1,[v1,#4]
        LDR      a1,[pc, #L0000c4-.-8]
        STR      a1,[v1,#&14]
        LDR      a1,[pc, #L0000c8-.-8]
        STR      a1,[v1,#8]
        LDR      a1,[pc, #L0000cc-.-8]
        MOV      v3,#0
        STR      a1,[v1,#&10]
        STR      v3,[v1,#&30]
        MOV      a1,v2
        MOV      a3,#&ac
        ADD      a3,a3,#&c400
        MOV      a2,#0
        STR      v3,[v1,#&2c]
        BL       memset
        MVN      a1,#0
        STR      a1,[v2,#&494]
        STR      v3,[v1,#&20]!
        STR      a1,[v2,#&490]!
        MOV      a1,#0
        LDMDB    fp,{v1-v3,fp,sp,pc}^
L0000b8
        ;MPORT  LoadGIF
        DCD     LoadGIF
L0000bc
        ;MPORT  SaveSprite
        DCD     SaveSprite
L0000c0
        ;MPORT  EndLoad
        DCD     EndLoad
L0000c4
        ;MPORT  Delete
        DCD     Delete
L0000c8
        ;MPORT  Render
        DCD     Render
L0000cc
        ;MPORT  ModeChange
        DCD     ModeChange

        DCB     &4c,&6f,&61,&64
        DCB     &47,&49,&46,&00
        DCD     &ff000008

        ;MPORT  LoadHeader
        ;MPORT  LoadColourMap
        ;MPORT  LoadBlock
        ;MPORT  LoadExtension
        ;MPORT  LoadImage
        ;MPORT  SkipBlocks
        ;MPORT  LoadGraphicExtension
        ;MPORT  ReadImage
LoadGIF
        MOV      ip,sp
        STMDB    sp!,{a1-v4,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        MOVS     v2,a4
        SUB      sp,sp,#&10
        MOV      v3,#0
        LDR      v4,[a1,#&28]
        STR      a2,[v4,#&74]
        ADD      a1,a2,a3
        STR      a1,[v4,#&78]
        BEQ      |L0001cc.J7.LoadGIF|
        MOV      a1,v2
        MOV      a3,#&10
        MOV      a2,#0
        BL       memset
        B        |L0001cc.J7.LoadGIF|
|L000128.J6.LoadGIF|
        LDR      a1,[v4,#&68]
        CMP      a1,#8
        ADDLS    pc,pc,a1,LSL #2
        B        |L0001cc.J7.LoadGIF|
        B        |L000160.J17.LoadGIF|
        B        |L00016c.J16.LoadGIF|
        B        |L000178.J15.LoadGIF|
        B        |L000184.J14.LoadGIF|
        B        |L000190.J13.LoadGIF|
        B        |L00019c.J12.LoadGIF|
        B        |L0001a8.J11.LoadGIF|
        B        |L0001b4.J10.LoadGIF|
        MOV      a1,#0
        B        |L0001e8.J29.LoadGIF|
|L000160.J17.LoadGIF|
        MOV      a1,v1
        BL       LoadHeader
        B        |L0001c8.J27.LoadGIF|
|L00016c.J16.LoadGIF|
        MOV      a1,v1
        BL       LoadColourMap
        B        |L0001c8.J27.LoadGIF|
|L000178.J15.LoadGIF|
        MOV      a1,v1
        BL       LoadBlock
        B        |L0001c8.J27.LoadGIF|
|L000184.J14.LoadGIF|
        MOV      a1,v1
        BL       LoadExtension
        B        |L0001c8.J27.LoadGIF|
|L000190.J13.LoadGIF|
        MOV      a1,v1
        BL       LoadImage
        B        |L0001c8.J27.LoadGIF|
|L00019c.J12.LoadGIF|
        MOV      a1,v1
        BL       SkipBlocks
        B        |L0001c8.J27.LoadGIF|
|L0001a8.J11.LoadGIF|
        MOV      a1,v1
        BL       LoadGraphicExtension
        B        |L0001c8.J27.LoadGIF|
|L0001b4.J10.LoadGIF|
        TEQ      v2,#0
        MOVEQ    a2,sp
        MOVNE    a2,v2
        MOV      a1,v1
        BL       ReadImage
|L0001c8.J27.LoadGIF|
        MOV      v3,a1
|L0001cc.J7.LoadGIF|
        ADD      a2,v4,#&74
        LDMIA    a2,{a1,a2}
        CMP      a1,a2
        BCS      |L0001e4.J21.LoadGIF|
        TEQ      v3,#0
        BEQ      |L000128.J6.LoadGIF|
|L0001e4.J21.LoadGIF|
        MOV      a1,v3
|L0001e8.J29.LoadGIF|
        LDMDB    fp,{v1-v4,fp,sp,pc}^

        DCB     &4c,&6f,&61,&64
        DCB     &48,&65,&61,&64
        DCB     &65,&72,&00,&00
        DCD     &ff00000c

        IMPORT  memcpy
        IMPORT  strncmp
        ;MPORT  gifError
LoadHeader
        MOV      ip,sp
        STMDB    sp!,{a1,v1-v5,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        LDR      v1,[a1,#&28]!
        LDR      a1,[v1,#&7c]
        RSB      a3,a1,#&d
        ADD      a4,v1,#&74
        LDMIA    a4,{a2,a4}
        SUB      a4,a4,a2
        CMP      a3,a4
        MOVGE    v2,a4
        MOVLT    v2,a3
        ADD      a1,v1,a1
        ADD      a1,a1,#&80
        MOV      a3,v2
        BL       memcpy
        LDR      a1,[v1,#&74]
        ADD      a1,a1,v2
        STR      a1,[v1,#&74]
        LDR      a1,[v1,#&7c]
        ADD      a1,a1,v2
        STR      a1,[v1,#&7c]
        TEQ      a1,#&d
        BNE      |L00031c.J7.LoadHeader|
        ADD      v2,v1,#&80
        LDR      v5,[pc, #L000324-.-8]
        MOV      a1,v2
        MOV      a3,#6
        LDR      a2,[v5,#0]
        BL       strncmp
        MOV      v4,#0
        MOV      v3,#1
        TEQ      a1,#0
        STREQ    v4,[v1,#&5c]
        BEQ      |L0002b4.J11.LoadHeader|
        MOV      a1,v2
        MOV      a3,#6
        LDR      a2,[v5,#4]!
        BL       strncmp
        TEQ      a1,#0
        ADDNE    a1,pc,#L000328-.-8
        LDMNEDB  fp,{v1-v5,fp,sp,lr}
        BNE      gifError
        STR      v3,[v1,#&5c]
|L0002b4.J11.LoadHeader|
        ADD      a2,v2,#&a
        LDRB     a1,[a2],#1
        TST      a1,#&80
        MOVEQ    a3,v4
        MOVNE    a3,v3
        AND      a1,a1,#7
        ADD      a1,a1,#1
        STR      a1,[v1,#&14]
        MOV      a1,v3,LSL a1
        STR      a1,[v1,#&18]
        SUB      a1,a1,#1
        STR      a1,[v1,#&50]
        STR      a3,[v1,#&64]
        LDRB     a1,[a2],#1
        STR      a1,[v1,#&1c]
        LDRB     a1,[a2,#0]
        STR      a1,[v1,#&70]
        TEQ      a1,#0
        BEQ      |L000314.J18.LoadHeader|
        LDR      a1,[v1,#&5c]
        TEQ      a1,#0
        ADDEQ    a1,pc,#L000338-.-8
        LDMEQDB  fp,{v1-v5,fp,sp,lr}
        BEQ      gifError
|L000314.J18.LoadHeader|
        STR      v3,[v1,#&68]!
        STR      v4,[v1,#&14]!
|L00031c.J7.LoadHeader|
        MOV      a1,#0
        LDMDB    fp,{v1-v5,fp,sp,pc}^
L000324
        DCD     |x$dataseg|
L000328
        DCB     &6e,&6f,&74,&20
        DCB     &61,&20,&47,&49
        DCB     &46,&20,&66,&69
        DCB     &6c,&65,&00,&00
L000338
        DCB     &63,&6f,&72,&72
        DCB     &75,&70,&74,&20
        DCB     &47,&49,&46,&20
        DCB     &66,&69,&6c,&65
        DCB     &20,&28,&73,&63
        DCB     &72,&65,&65,&6e
        DCB     &20,&64,&65,&73
        DCB     &63,&72,&69,&70
        DCB     &74,&6f,&72,&29
        DCB     &00,&00,&00,&00

        DCB     &4c,&6f,&61,&64
        DCB     &43,&6f,&6c,&6f
        DCB     &75,&72,&4d,&61
        DCB     &70,&00,&00,&00
        DCD     &ff000010

LoadColourMap
        MOV      ip,sp
        STMDB    sp!,{a1,v1-v3,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        LDR      v1,[a1,#&28]
        LDR      a2,[v1,#&18]
        ADD      a2,a2,a2,LSL #1
        LDR      a3,[v1,#&7c]
        SUB      ip,a2,a3
        ADD      a4,v1,#&74
        LDMIA    a4,{a2,a4}
        SUB      a4,a4,a2
        CMP      ip,a4
        MOVGE    v2,a4
        MOVLT    v2,ip
        MOV      v3,#2
        LDR      a4,[v1,#&64]
        TEQ      a4,#0
        BNE      |L000420.J7.LoadColourMap|
        MOV      a2,#0
        LDR      a3,[pc, #L00041c-.-8]
|L0003cc.J9.LoadColourMap|
        AND      a4,a2,#&f
        ADD      a4,a4,a4,LSL #1
        LDR      lr,[a3,a4,LSL #2]
        ADD      ip,a2,a2,LSL #1
        ADD      ip,ip,v1
        STRB     lr,[ip,#&180]
        ADD      a4,a3,a4,LSL #2
        LDR      lr,[a4,#4]
        STRB     lr,[ip,#&181]
        LDR      a4,[a4,#8]
        STRB     a4,[ip,#&182]
        ADD      a2,a2,#1
        CMP      a2,#&100
        BLT      |L0003cc.J9.LoadColourMap|
        LDR      a1,[a1,#&18]
        CMP      a1,#0
        STRLE    v3,[v1,#&68]!
        MOVGT    a1,#7
        STRGT    a1,[v1,#&68]!
        B        |L000460.J14.LoadColourMap|
L00041c
        DCD     |x$dataseg|+&8
|L000420.J7.LoadColourMap|
        ADD      a1,v1,a3
        ADD      a1,a1,#&180
        MOV      a3,v2
        BL       memcpy
        LDR      a1,[v1,#&74]
        ADD      a1,a1,v2
        STR      a1,[v1,#&74]
        LDR      a1,[v1,#&7c]
        ADD      a1,a1,v2
        STR      a1,[v1,#&7c]
        LDR      a2,[v1,#&18]
        ADD      a2,a2,a2,LSL #1
        TEQ      a2,a1
        MOVEQ    a1,#0
        STREQ    v3,[v1,#&68]!
        STREQ    a1,[v1,#&14]
|L000460.J14.LoadColourMap|
        MOV      a1,#0
        LDMDB    fp,{v1-v3,fp,sp,pc}^

LoadBlock
        LDR      a1,[a1,#&28]
        LDR      a3,[a1,#&74]
        LDRB     a2,[a3],#1
        TEQ      a2,#&21
        STR      a3,[a1,#&74]
        MOVEQ    a2,#3
        BEQ      |L0004a0.J14.LoadBlock|
        TEQ      a2,#&2c
        MOVEQ    a2,#4
        BEQ      |L0004a0.J14.LoadBlock|
        TEQ      a2,#&3b
        ADDNE    a1,pc,#L0004ac-.-8
        BNE      gifError
        MOV      a2,#7
|L0004a0.J14.LoadBlock|
        STR      a2,[a1,#&68]!
        MOV      a1,#0
        MOVS     pc,lr
L0004ac
        DCB     &55,&6e,&6b,&6e
        DCB     &6f,&77,&6e,&20
        DCB     &62,&6c,&6f,&63
        DCB     &6b,&20,&74,&79
        DCB     &70,&65,&00,&00

LoadExtension
        LDR      a1,[a1,#&28]
        MOV      a2,#0
        STR      a2,[a1,#&7c]
        LDR      a3,[a1,#&74]
        LDRB     a2,[a3],#1
        TEQ      a2,#&f9
        STR      a3,[a1,#&74]
        MOVEQ    a2,#6
        MOVNE    a2,#5
        STR      a2,[a1,#&68]!
        MOV      a1,#0
        MOVS     pc,lr

SkipBlocks
        LDR      a1,[a1,#&28]
        LDR      a2,[a1,#&7c]
        TEQ      a2,#0
        BNE      |L000524.J4.SkipBlocks|
        LDR      a3,[a1,#&74]
        LDRB     a2,[a3],#1
        STR      a2,[a1,#&7c]
        TEQ      a2,#0
        STR      a3,[a1,#&74]
        MOVEQ    a2,#2
        STREQ    a2,[a1,#&68]!
|L00051c.J6.SkipBlocks|
        MOV      a1,#0
        MOVS     pc,lr
|L000524.J4.SkipBlocks|
        ADD      a4,a1,#&74
        LDMIA    a4,{a3,a4}
        SUB      a4,a4,a3
        CMP      a4,a2
        MOVGT    a2,a4
        ADD      a3,a3,a2
        STR      a3,[a1,#&74]
        LDR      a3,[a1,#&7c]
        SUB      a2,a3,a2
        STR      a2,[a1,#&7c]!
        B        |L00051c.J6.SkipBlocks|

        DCB     &4c,&6f,&61,&64
        DCB     &47,&72,&61,&70
        DCB     &68,&69,&63,&45
        DCB     &78,&74,&65,&6e
        DCB     &73,&69,&6f,&6e
        DCB     &00,&00,&00,&00
        DCD     &ff000018

LoadGraphicExtension
        MOV      ip,sp
        STMDB    sp!,{a1,v1-v3,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        LDR      v2,[a1,#&28]
        LDR      a1,[v2,#&78]
        LDR      a2,[v2,#&74]
        SUB      a3,a1,a2
        LDR      a1,[v2,#&7c]
        RSB      a4,a1,#6
        CMP      a3,a4
        MOVGE    v3,a4
        MOVLT    v3,a3
        ADD      a1,v2,a1
        ADD      a1,a1,#&80
        MOV      a3,v3
        BL       memcpy
        LDR      a1,[v2,#&74]
        ADD      a1,a1,v3
        STR      a1,[v2,#&74]
        LDR      a1,[v2,#&7c]
        ADD      a1,a1,v3
        STR      a1,[v2,#&7c]
        TEQ      a1,#6
        BNE      |L000620.J7.LoadGraphicExtension|
        ADD      a2,v2,#&80
        LDRB     a1,[a2],#1
        TEQ      a1,#4
        ADDNE    a1,pc,#L000628-.-8
        LDMNEDB  fp,{v1-v3,fp,sp,lr}
        BNE      gifError
        LDRB     a1,[a2],#3
        TST      a1,#1
        MVNEQ    a1,#0
        LDRNEB   a1,[a2,#0]
        STR      a1,[v2,#&494]
        CMN      a1,#1
        MOVNE    a1,#1
        STRNE    a1,[v1,#&20]!
        MOV      a1,#2
        STR      a1,[v2,#&68]
        MOV      a1,#0
        STR      a1,[v2,#&7c]!
|L000620.J7.LoadGraphicExtension|
        MOV      a1,#0
        LDMDB    fp,{v1-v3,fp,sp,pc}^
L000628
        DCB     &4d,&61,&6c,&66
        DCB     &6f,&72,&6d,&65
        DCB     &64,&20,&47,&72
        DCB     &61,&70,&68,&69
        DCB     &63,&20,&45,&78
        DCB     &74,&65,&6e,&73
        DCB     &69,&6f,&6e,&20
        DCB     &62,&6c,&6f,&63
        DCB     &6b,&00,&00,&00

        DCB     &4c,&6f,&61,&64
        DCB     &49,&6d,&61,&67
        DCB     &65,&00,&00,&00
        DCD     &ff00000c

        ;MPORT  CreateSprite
LoadImage
        MOV      ip,sp
        STMDB    sp!,{a1,v1-v4,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        LDR      v2,[a1,#&28]
        LDR      a1,[v2,#&78]
        LDR      a2,[v2,#&74]
        SUB      a3,a1,a2
        LDR      a1,[v2,#&7c]
        RSB      a4,a1,#&a
        CMP      a3,a4
        MOVGE    v3,a4
        MOVLT    v3,a3
        MOV      v4,#0
        ADD      a1,v2,a1
        ADD      a1,a1,#&80
        MOV      a3,v3
        BL       memcpy
        LDR      a1,[v2,#&74]
        ADD      a1,a1,v3
        STR      a1,[v2,#&74]
        LDR      a1,[v2,#&7c]
        ADD      a1,a1,v3
        STR      a1,[v2,#&7c]
        TEQ      a1,#&a
        BNE      |L0007b8.J7.LoadImage|
        ADD      a2,v2,#&84
        LDRB     a1,[a2],#1
        STR      a1,[v1,#&18]
        LDRB     a3,[a2],#1
        ADD      a1,a1,a3,LSL #8
        STR      a1,[v1,#&18]
        MOV      a1,a2
        LDRB     a2,[a2,#0]
        STR      a2,[v1,#&1c]
        LDRB     a3,[a1,#1]!
        ADD      a2,a2,a3,LSL #8
        STR      a2,[v1,#&1c]
        LDRB     a2,[a1,#1]!
        ADD      a1,a1,#1
        STR      a2,[v2,#&58]
        MOV      a3,a2
        TST      a2,#&40
        MOV      ip,#0
        MOV      a4,#1
        MOVEQ    a2,ip
        MOVNE    a2,a4
        STR      a2,[v2,#&60]
        LDRB     a2,[a1,#0]
        MOV      a1,a4,LSL a2
        STR      a1,[v2,#&30]
        ADD      lr,a1,#1
        ADD      a1,a1,#2
        STR      a1,[v2,#&44]
        STR      lr,[v2,#&34]
        STR      a1,[v2,#&48]
        ADD      a1,a2,#1
        STR      a1,[v2,#&20]
        STR      a1,[v2,#&24]
        MOV      a1,a4,LSL a1
        STR      a1,[v2,#&2c]
        SUB      a1,a1,#1
        STR      a1,[v2,#&54]
        MOV      a1,ip
        STR      a1,[v2,#&484]
        ADD      lr,v1,#&18
        LDMIA    lr,{a2,lr}
        MUL      a2,lr,a2
        STR      a1,[v2,#&498]
        STR      a2,[v2,#&488]
        TST      a3,#&80
        STR      a1,[v2,#&49c]
        BEQ      |L0007a0.J12.LoadImage|
        AND      a2,a3,#7
        ADD      a2,a2,#1
        STR      a4,[v2,#&68]
        MOV      a2,a4,LSL a2
        STR      a2,[v2,#&18]
        B        |L0007a8.J14.LoadImage|
|L0007a0.J12.LoadImage|
        MOV      a2,#7
        STR      a2,[v2,#&68]
|L0007a8.J14.LoadImage|
        STR      a1,[v2,#&7c]!
        MOV      a1,v1
        BL       CreateSprite
        MOV      v4,a1
|L0007b8.J7.LoadImage|
        MOV      a1,v4
        LDMDB    fp,{v1-v4,fp,sp,pc}^

        DCB     &43,&72,&65,&61
        DCB     &74,&65,&53,&70
        DCB     &72,&69,&74,&65
        DCB     &00,&00,&00,&00
        DCD     &ff000010

        IMPORT  flex_alloc
        IMPORT  _swix
CreateSprite
        MOV      ip,sp
        STMDB    sp!,{a1,v1-v3,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        LDR      v2,[a1,#&28]
        LDR      a1,[a1,#&18]
        ADD      a1,a1,#3
        BIC      a1,a1,#3
        STR      a1,[v2,#&480]
        LDR      a1,[v2,#&480]
        LDR      a2,[v1,#&1c]
        MUL      a1,a2,a1
        LDR      a2,[v2,#&494]
        CMP      a2,#0
        MOVLT    a2,#0
        MOVGE    a2,#1
        ADD      a2,a2,#1
        MUL      a1,a2,a1
        ADD      v3,a1,#&3c
        ADD      v3,v3,#&800
        ADD      a1,v1,#&2c
        MOV      a2,v3
        BL       flex_alloc
        TEQ      a1,#0
        ADDEQ    a1,pc,#L0009bc-.-8
        LDMEQDB  fp,{v1-v3,fp,sp,lr}
        BEQ      gifError
        LDR      a1,[v1,#&2c]
        STR      v3,[a1,#0]
        MOV      a1,#&10
        LDR      a2,[v1,#&2c]
        STR      a1,[a2,#8]!
        MOV      a3,#9
        ADD      a3,a3,#&100
        MOV      a2,#3
        MOV      a1,#&2e
        LDR      a4,[v1,#&2c]
        BL       _swix
        TEQ      a1,#0
        LDMNEDB  fp,{v1-v3,fp,sp,pc}^
        MOV      a4,#&1c
        MOV      a1,#0
        ADD      a3,v1,#&18
        LDMIA    a3,{a2,a3}
        STMDB    sp!,{a1-a4}
        ADD      a4,pc,#L0009d0-.-8
        STMDB    sp!,{a4}
        MOV      a3,#&f
        ADD      a3,a3,#&100
        MOV      a2,#&7f
        MOV      a1,#&2e
        LDR      a4,[v1,#&2c]
        BL       _swix
        ADD      sp,sp,#&14
        TEQ      a1,#0
        LDMNEDB  fp,{v1-v3,fp,sp,pc}^
        LDR      a1,[v1,#&2c]
        LDR      a2,[a1,#&c]!
        ADD      a2,a2,#&800
        STR      a2,[a1,#0]
        LDR      a1,[v1,#&2c]
        LDR      a2,[a1,#&10]!
        ADD      a2,a2,#&800
        STR      a2,[a1,#0]
        LDR      a1,[v1,#&2c]
        LDR      a2,[a1,#&30]!
        ADD      a2,a2,#&800
        STR      a2,[a1,#0]
        LDR      a1,[v1,#&2c]
        LDR      a2,[a1,#&34]!
        ADD      a2,a2,#&800
        STR      a2,[a1,#0]
        LDR      a1,[v2,#&494]
        CMP      a1,#0
        BLT      |L000948.J13.CreateSprite|
        ADD      a4,pc,#L0009d0-.-8
        STMDB    sp!,{a4}
        MOV      a3,#&1d
        ADD      a3,a3,#&100
        MOV      a2,#7
        MOV      a1,#&2e
        LDR      a4,[v1,#&2c]
        BL       _swix
        ADD      sp,sp,#4
        TEQ      a1,#0
        LDMNEDB  fp,{v1-v3,fp,sp,pc}^
        LDR      a1,[v1,#&2c]
        ADD      a2,a1,#&30
        LDMIA    a2,{a1,a2}
        SUB      a1,a2,a1
        STR      a1,[v2,#&4a4]
|L000948.J13.CreateSprite|
        MOV      a1,#0
|L00094c.J17.CreateSprite|
        ADD      a2,a1,a1,LSL #1
        ADD      a2,a2,v2
        LDRB     a3,[a2,#&180]
        MOV      a4,a3,LSL #8
        LDRB     a3,[a2,#&181]
        ADD      a3,a4,a3,LSL #16
        LDRB     a2,[a2,#&182]
        ADD      a3,a3,a2,LSL #24
        LDR      a2,[v1,#&2c]
        ADD      a2,a2,a1,LSL #3
        STR      a3,[a2,#&40]!
        LDR      a2,[v1,#&2c]
        ADD      a2,a2,a1,LSL #3
        ADD      a1,a1,#1
        CMP      a1,#&100
        STR      a3,[a2,#&3c]!
        BLT      |L00094c.J17.CreateSprite|
        LDR      a2,[v2,#&480]
        LDR      a1,[v1,#&1c]
        MUL      a3,a1,a2
        LDR      a1,[v1,#&2c]!
        LDR      a2,[a1,#&30]
        ADD      a1,a2,a1
        ADD      a1,a1,#&10
        LDR      a2,[v2,#&1c]!
        BL       memset
        MOV      a1,#0
        LDMDB    fp,{v1-v3,fp,sp,pc}^
L0009bc
        DCB     &49,&6e,&73,&75
        DCB     &66,&66,&69,&63
        DCB     &69,&65,&6e,&74
        DCB     &20,&6d,&65,&6d
        DCB     &6f,&72,&79,&00
L0009d0
        DCB     &67,&69,&66,&00

        DCB     &52,&65,&61,&64
        DCB     &49,&6d,&61,&67
        DCB     &65,&00,&00,&00
        DCD     &ff00000c

        ;MPORT  ReadCode
        ;MPORT  DoInterlace
ReadImage
        MOV      ip,sp
        STMDB    sp!,{a1,a2,v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v2,a1
        MOV      v1,a2
        SUB      sp,sp,#&30
        LDR      v3,[a1,#&28]
        LDR      a1,[v3,#&30]
        STR      a1,[sp,#&2c]
        LDR      a1,[v3,#&34]
        STR      a1,[sp,#&28]
        LDR      a1,[v3,#&20]
        STR      a1,[sp,#&24]
        LDR      a1,[v3,#&2c]
        STR      a1,[sp,#&20]
        LDR      a1,[v3,#&54]
        STR      a1,[sp,#&1c]
        LDR      a1,[v3,#&48]
        STR      a1,[sp,#&18]
        LDR      a1,[v3,#&3c]
        STR      a1,[sp,#&14]
        LDR      a1,[v3,#&50]
        STR      a1,[sp,#&10]
        LDR      a1,[v3,#&484]
        STR      a1,[sp,#&c]
        LDR      a1,[v3,#&494]
        STR      a1,[sp,#4]
        LDR      a1,[v3,#&60]
        STR      a1,[sp,#0]
        LDR      a1,[v2,#&1c]
        MOV      a1,a1,LSL #1
        STR      a1,[v1,#4]
|L000a6c.J4.ReadImage|
        LDR      a1,[v3,#&7c]
        TEQ      a1,#0
        BNE      |L000a98.J5.ReadImage|
        LDR      a2,[v3,#&74]
        LDRB     a1,[a2],#1
        STR      a1,[v3,#&7c]
        TEQ      a1,#0
        STR      a2,[v3,#&74]
        MOVEQ    a1,#8
        STREQ    a1,[v3,#&68]!
        BEQ      |L000fa4.J97.ReadImage|
|L000a98.J5.ReadImage|
        LDR      a1,[v3,#&78]
        LDR      a2,[v3,#&74]
        SUB      a3,a1,a2
        LDR      a1,[v3,#&7c]
        CMP      a3,a1
        MOVGE    v4,a1
        MOVLT    v4,a3
        LDR      a1,[v3,#&49c]
        ADD      a1,v3,a1
        ADD      a1,a1,#&80
        MOV      a3,v4
        BL       memcpy
        LDR      a1,[v3,#&49c]
        ADD      a1,v4,a1
        STR      a1,[v3,#&4a0]
        LDR      a1,[v3,#&74]
        ADD      a1,a1,v4
        STR      a1,[v3,#&74]
        LDR      a1,[v3,#&7c]
        SUB      a1,a1,v4
        STR      a1,[v3,#&7c]
        LDR      a1,[v2,#&18]
        MOV      a1,a1,LSL #1
        STR      a1,[v1,#8]
        LDR      a1,[v2,#&1c]
        LDR      a2,[v3,#8]
        SUB      a2,a1,a2
        LDR      a1,[v1,#&c]
        CMP      a1,a2,LSL #1
        MOVLE    a1,a2,LSL #1
        STR      a1,[v1,#&c]
        LDR      a1,[v2,#&1c]
        LDR      a2,[v3,#8]
        SUB      a1,a1,a2
        MOV      a2,#2
        RSB      a2,a2,a1,LSL #1
        LDR      a1,[v1,#4]
        CMP      a2,a1
        MOVLE    a1,a2
        STR      a1,[v1,#4]
        LDR      a1,[v2,#&2c]
        LDR      a2,[a1,#&30]
        ADD      a2,a2,a1
        LDR      a1,[v3,#&480]
        LDR      a3,[v3,#8]
        MLA      a2,a1,a3,a2
        LDR      a1,[v3,#4]
        ADD      a1,a2,a1
        ADD      v4,a1,#&10
        LDR      a1,[v3,#&498]
        TEQ      a1,#1
        BEQ      |L000bbc.J23.ReadImage|
        TEQ      a1,#2
        BEQ      |L000f1c.J24.ReadImage|
        MOV      a1,v3
        LDR      a2,[sp,#&24]
        LDR      a3,[sp,#&1c]
        BL       ReadCode
        LDR      a2,[sp,#&28]
        TEQ      a1,a2
        BEQ      |L000f6c.J26.ReadImage|
|L000b8c.J25.ReadImage|
        LDR      a2,[sp,#&2c]
        TEQ      a1,a2
        BNE      |L000ca8.J28.ReadImage|
        LDR      a2,[v3,#&24]
        MOV      a1,#1
        STR      a2,[sp,#&24]
        MOV      a1,a1,LSL a2
        STR      a1,[sp,#&20]
        SUB      a1,a1,#1
        STR      a1,[sp,#&1c]
        LDR      a1,[v3,#&44]
        STR      a1,[sp,#&18]
|L000bbc.J23.ReadImage|
        MOV      a1,v3
        LDR      a2,[sp,#&24]
        LDR      a3,[sp,#&1c]
        BL       ReadCode
        CMN      a1,#1
        BNE      |L000bf0.J30.ReadImage|
        MOV      a1,#1
        STR      a1,[v3,#&498]
        ADD      a2,v3,#&74
        LDMIA    a2,{a1,a2}
        CMP      a1,a2
        BCC      |L000a6c.J4.ReadImage|
        B        |L000f74.J35.ReadImage|
|L000bf0.J30.ReadImage|
        STR      a1,[sp,#&14]
        LDR      a2,[sp,#&10]
        AND      v6,a1,a2
        LDR      a1,[sp,#0]
        TEQ      a1,#0
        BNE      |L000c84.J36.ReadImage|
        MOV      a1,v6
        STRB     a1,[v4],#1
        LDR      a1,[sp,#4]
        CMP      a1,#0
        BLT      |L000c38.J38.ReadImage|
        LDR      a1,[sp,#4]
        TEQ      v6,a1
        BEQ      |L000c38.J38.ReadImage|
        MOV      a2,#&ff
        LDR      a1,[v3,#&4a4]
        ADD      a1,v4,a1
        STRB     a2,[a1,#-1]
|L000c38.J38.ReadImage|
        LDR      a1,[v3,#4]
        ADD      a1,a1,#1
        STR      a1,[v3,#4]
        LDR      a2,[v2,#&18]
        TEQ      a1,a2
        BNE      |L000c98.J43.ReadImage|
        MOV      a1,#0
        STR      a1,[v3,#4]
        LDR      a1,[v3,#8]
        ADD      a1,a1,#1
        STR      a1,[v3,#8]
        LDR      a1,[v1,#4]
        SUB      a1,a1,#2
        STR      a1,[v1,#4]
        LDR      a1,[v3,#&480]
        LDR      a2,[v2,#&18]
        SUB      a1,a1,a2
        ADD      v4,a1,v4
        B        |L000c98.J43.ReadImage|
|L000c84.J36.ReadImage|
        MOV      a3,v1
        MOV      a2,v6
        MOV      a1,v2
        LDR      a4,[sp,#4]
        BL       DoInterlace
|L000c98.J43.ReadImage|
        LDR      a1,[sp,#&c]
        ADD      a1,a1,#1
        STR      a1,[sp,#&c]
        B        |L000f1c.J24.ReadImage|
|L000ca8.J28.ReadImage|
        LDR      a2,[sp,#&18]
        CMP      a2,#&1000
        ADDGE    a1,pc,#L000cf4-.-8
        BGE      |L000d74.J98.ReadImage|
        STR      a1,[sp,#8]
        LDR      a2,[sp,#&18]
        CMP      a1,a2
        BLT      |L000d1c.J47.ReadImage|
        LDR      a1,[sp,#&14]
        LDR      a2,[v3,#&10]
        CMP      a2,#&1000
        ADDLE    a3,a2,#1
        STRLE    a3,[v3,#&10]
        ADDLE    a2,v3,a2,LSL #2
        ADDLE    a2,a2,#&8000
        STRLE    v6,[a2,#&4a8]!
        BLE      |L000d1c.J47.ReadImage|
        ADD      a1,pc,#L000d08-.-8
        B        |L000d74.J98.ReadImage|
L000cf4
        DCB     &66,&72,&65,&65
        DCB     &63,&6f,&64,&65
        DCB     &20,&62,&6c,&65
        DCB     &77,&20,&75,&70
        DCB     &00,&00,&00,&00
L000d08
        DCB     &6f,&75,&74,&63
        DCB     &6f,&75,&6e,&74
        DCB     &31,&20,&62,&6c
        DCB     &65,&77,&20,&75
        DCB     &70,&00,&00,&00
|L000d1c.J47.ReadImage|
        LDR      a2,[sp,#&10]
        CMP      a1,a2
        BLE      |L000d64.J52.ReadImage|
|L000d28.J51.ReadImage|
        LDR      a2,[v3,#&10]
        CMP      a2,#&1000
        BGT      |L000d64.J52.ReadImage|
        ADD      a1,v3,a1,LSL #2
        ADD      a3,a1,#&4000
        LDR      a3,[a3,#&4a8]
        ADD      a4,a2,#1
        STR      a4,[v3,#&10]
        ADD      a2,v3,a2,LSL #2
        ADD      a2,a2,#&8000
        STR      a3,[a2,#&4a8]!
        LDR      a1,[a1,#&4a8]
        LDR      a2,[sp,#&10]
        CMP      a1,a2
        BGT      |L000d28.J51.ReadImage|
|L000d64.J52.ReadImage|
        LDR      a2,[v3,#&10]
        CMP      a2,#&1000
        BLE      |L000d90.J57.ReadImage|
        ADD      a1,pc,#L000d7c-.-8
|L000d74.J98.ReadImage|
        BL       gifError
        B        |L000fa8.J99.ReadImage|
L000d7c
        DCB     &6f,&75,&74,&63
        DCB     &6f,&75,&6e,&74
        DCB     &20,&62,&6c,&65
        DCB     &77,&20,&75,&70
        DCB     &00,&00,&00,&00
|L000d90.J57.ReadImage|
        LDR      a3,[sp,#&10]
        AND      v6,a1,a3
        ADD      a1,a2,#1
        STR      a1,[v3,#&10]
        ADD      a1,v3,a2,LSL #2
        ADD      a1,a1,#&8000
        STR      v6,[a1,#&4a8]!
        LDR      a2,[sp,#&c]
        LDR      a1,[v3,#&10]
        ADD      a2,a2,a1
        LDR      a1,[v3,#&488]
        CMP      a2,a1
        LDRGT    a2,[sp,#&c]
        SUBGT    a1,a1,a2
        STRGT    a1,[v3,#&10]
        LDR      a2,[sp,#&c]
        LDR      a1,[v3,#&10]
        ADD      a2,a2,a1
        STR      a2,[sp,#&c]
        LDR      a2,[sp,#0]
        TEQ      a2,#0
        SUB      v5,a1,#1
        BNE      |L000e7c.J61.ReadImage|
        CMP      v5,#0
        BLT      |L000ea8.J72.ReadImage|
        MOV      a3,#&ff
        MOV      a2,#0
|L000dfc.J63.ReadImage|
        ADD      a1,v3,v5,LSL #2
        ADD      a1,a1,#&8000
        LDR      a1,[a1,#&4a8]
        STRB     a1,[v4],#1
        LDR      a1,[sp,#4]
        CMP      a1,#0
        BLT      |L000e2c.J66.ReadImage|
        LDR      a1,[sp,#4]
        TEQ      v6,a1
        LDRNE    a1,[v3,#&4a4]
        ADDNE    a1,v4,a1
        STRNEB   a3,[a1,#-1]
|L000e2c.J66.ReadImage|
        LDR      a1,[v3,#4]
        ADD      a1,a1,#1
        STR      a1,[v3,#4]
        LDR      a4,[v2,#&18]
        TEQ      a1,a4
        BNE      |L000e70.J69.ReadImage|
        STR      a2,[v3,#4]
        LDR      a1,[v3,#8]
        ADD      a1,a1,#1
        STR      a1,[v3,#8]
        LDR      a1,[v1,#4]
        SUB      a1,a1,#2
        STR      a1,[v1,#4]
        LDR      a1,[v3,#&480]
        LDR      a4,[v2,#&18]
        SUB      a1,a1,a4
        ADD      v4,a1,v4
|L000e70.J69.ReadImage|
        SUBS     v5,v5,#1
        BPL      |L000dfc.J63.ReadImage|
        B        |L000ea8.J72.ReadImage|
|L000e7c.J61.ReadImage|
        CMP      v5,#0
        BLT      |L000ea8.J72.ReadImage|
|L000e84.J73.ReadImage|
        ADD      a1,v3,v5,LSL #2
        ADD      a1,a1,#&8000
        LDR      a2,[a1,#&4a8]!
        MOV      a3,v1
        MOV      a1,v2
        LDR      a4,[sp,#4]
        BL       DoInterlace
        SUBS     v5,v5,#1
        BPL      |L000e84.J73.ReadImage|
|L000ea8.J72.ReadImage|
        MOV      a1,#0
        STR      a1,[v3,#&10]
        LDR      a1,[sp,#&18]
        ADD      a1,v3,a1,LSL #2
        LDR      a2,[sp,#&14]
        STR      a2,[a1,#&4a8]!
        STR      sp,[a1,#0]
        LDR      a1,[sp,#8]
        STR      a1,[sp,#&14]
        LDR      a1,[sp,#&18]
        ADD      a2,a1,#1
        STR      a2,[sp,#&18]
        LDR      a1,[sp,#&20]
        CMP      a2,a1
        BLT      |L000f1c.J24.ReadImage|
        LDR      a1,[sp,#&24]
        CMP      a1,#&c
        BGE      |L000f1c.J24.ReadImage|
        LDR      a1,[sp,#&24]
        ADD      a1,a1,#1
        STR      a1,[sp,#&24]
        LDR      a1,[sp,#&20]
        MOV      a1,a1,LSL #1
        STR      a1,[sp,#&20]
        MOV      a1,#1
        LDR      a2,[sp,#&24]
        MOV      a1,a1,LSL a2
        SUB      a1,a1,#1
        STR      a1,[sp,#&1c]
|L000f1c.J24.ReadImage|
        MOV      a1,v3
        LDR      a2,[sp,#&24]
        LDR      a3,[sp,#&1c]
        BL       ReadCode
        CMN      a1,#1
        BNE      |L000f50.J81.ReadImage|
        MOV      a1,#2
        STR      a1,[v3,#&498]
        ADD      a2,v3,#&74
        LDMIA    a2,{a1,a2}
        CMP      a1,a2
        BCC      |L000a6c.J4.ReadImage|
        B        |L000f74.J35.ReadImage|
|L000f50.J81.ReadImage|
        LDR      a3,[sp,#&c]
        LDR      a2,[v3,#&488]
        CMP      a3,a2
        BGE      |L000f6c.J26.ReadImage|
        LDR      a2,[sp,#&28]
        TEQ      a1,a2
        BNE      |L000b8c.J25.ReadImage|
|L000f6c.J26.ReadImage|
        MOV      a1,#8
        STR      a1,[v3,#&68]
|L000f74.J35.ReadImage|
        LDR      a1,[sp,#&24]
        STR      a1,[v3,#&20]
        LDR      a1,[sp,#&20]
        STR      a1,[v3,#&2c]
        LDR      a1,[sp,#&1c]
        STR      a1,[v3,#&54]
        LDR      a1,[sp,#&18]
        STR      a1,[v3,#&48]
        LDR      a1,[sp,#&c]
        STR      a1,[v3,#&484]
        LDR      a1,[sp,#&14]
        STR      a1,[v3,#&3c]!
|L000fa4.J97.ReadImage|
        MOV      a1,#0
|L000fa8.J99.ReadImage|
        LDMDB    fp,{v1-v6,fp,sp,pc}^

        DCB     &52,&65,&61,&64
        DCB     &43,&6f,&64,&65
        DCB     &00,&00,&00,&00
        DCD     &ff00000c

ReadCode
        MOV      ip,sp
        STMDB    sp!,{a1-a3,v1,v2,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        LDR      v2,[a1,#0]
        MOVS     a1,v2
        ADDMI    v2,v2,#7
        MOV      v2,v2,ASR #3
        ADD      a4,a1,a2
        LDR      ip,[v1,#&4a0]
        CMP      a4,ip,LSL #3
        BLE      |L001028.J6.ReadCode|
        SUB      a3,ip,v2
        ADD      a1,v1,v2
        ADD      a2,a1,#&80
        ADD      a1,v1,#&80
        BL       memcpy
        LDR      a1,[v1,#0]
        SUB      a1,a1,v2,LSL #3
        STR      a1,[v1,#0]
        LDR      a1,[v1,#&4a0]
        SUB      a1,a1,v2
        STR      a1,[v1,#&49c]!
        MVN      a1,#0
        LDMDB    fp,{v1,v2,fp,sp,pc}^
|L001028.J6.ReadCode|
        ADD      ip,v1,v2
        MOV      lr,ip
        LDRB     v2,[ip,#&80]
        LDRB     ip,[ip,#&81]
        ADD      ip,v2,ip,LSL #8
        CMP      a2,#8
        LDRGEB   a2,[lr,#&82]
        ADDGE    ip,ip,a2,LSL #16
        CMP      a1,#0
        RSBLT    a1,a1,#0
        AND      a1,a1,#7
        RSBLT    a1,a1,#0
        AND      a1,a3,ip,ASR a1
        STR      a4,[v1,#0]
        LDMDB    fp,{v1,v2,fp,sp,pc}^

        DCB     &44,&6f,&49,&6e
        DCB     &74,&65,&72,&6c
        DCB     &61,&63,&65,&00
        DCD     &ff00000c

        IMPORT  __rt_stkovf_split_big
DoInterlace
        MOV      ip,sp
        STMDB    sp!,{a1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#4
        SUB      ip,sp,#&124
        CMP      ip,sl
        BLLT     __rt_stkovf_split_big
        MOV      v1,a1
        MOV      v2,a3
        MOV      v3,a4
        AND      a1,a2,#&ff
        LDR      v4,[v1,#&28]
        LDR      a2,[v4,#&490]
        LDR      a3,[v4,#8]
        TEQ      a2,a3
        BEQ      |L0010d4.J4.DoInterlace|
        LDR      a2,[v1,#&2c]
        LDR      a4,[a2,#&30]
        ADD      a2,a4,a2
        LDR      a4,[v4,#&480]
        MLA      a2,a4,a3,a2
        ADD      a2,a2,#&10
        STR      a2,[v4,#&48c]
        LDR      a2,[v4,#8]
        STR      a2,[v4,#&490]
|L0010d4.J4.DoInterlace|
        LDR      a3,[v4,#8]
        MOV      v6,#0
        LDR      a2,[v1,#&1c]
        CMP      a3,a2
        BGE      |L001114.J6.DoInterlace|
        LDR      a2,[v4,#&48c]
        STRB     a1,[a2],#1
        CMP      v3,#0
        STR      a2,[v4,#&48c]
        BLT      |L001114.J6.DoInterlace|
        TEQ      a1,v3
        MOVNE    a1,#&ff
        MOVEQ    a1,v6
        LDR      a3,[v4,#&4a4]
        ADD      a2,a2,a3
        STRB     a1,[a2,#-1]
|L001114.J6.DoInterlace|
        LDR      a1,[v4,#4]
        ADD      a1,a1,#1
        STR      a1,[v4,#4]
        LDR      a2,[v1,#&18]
        TEQ      a1,a2
        LDMNEDB  fp,{v1-v6,fp,sp,pc}^
        LDR      a2,[v4,#&c]
        TEQ      a2,#0
        MOVEQ    v5,#1
        BEQ      |L0011b4.J28.DoInterlace|
        TEQ      a2,#1
        MOVEQ    v5,#1
        BEQ      |L0012ac.J48.DoInterlace|
        TEQ      a2,#2
        BEQ      |L001380.J18.DoInterlace|
        TEQ      a2,#3
        BNE      |L001188.J15.DoInterlace|
        LDR      a1,[v1,#&1c]!
        LDR      a2,[v4,#8]
        SUB      a1,a1,a2
        MOV      a2,#2
        RSB      a2,a2,a1,LSL #1
        LDR      a1,[v2,#4]
        CMP      a2,a1
        MOVLE    a1,a2
        STR      a1,[v2,#4]!
        LDR      a1,[v4,#8]
        ADD      a1,a1,#2
        STR      a1,[v4,#8]
|L001188.J15.DoInterlace|
        STR      v6,[v4,#4]!
        LDMDB    fp,{v1-v6,fp,sp,pc}^
|L001190.J25.DoInterlace|
        LDR      a1,[v4,#4]
        LDR      a2,[v4,#&48c]
        SUB      a2,a2,a1
        LDR      a3,[v4,#&480]
        MLA      a1,a3,v5,a2
        BL       memcpy
        ADD      v5,v5,#1
        CMP      v5,#7
        BGT      |L0011c8.J27.DoInterlace|
|L0011b4.J28.DoInterlace|
        LDR      a1,[v4,#8]
        ADD      a1,a1,v5
        LDR      a2,[v1,#&1c]
        CMP      a1,a2
        BLT      |L001190.J25.DoInterlace|
|L0011c8.J27.DoInterlace|
        CMP      v3,#0
        MOVGE    v5,#1
        BGE      |L001208.J35.DoInterlace|
        B        |L00121c.J30.DoInterlace|
|L0011d8.J32.DoInterlace|
        LDR      a1,[v4,#4]
        LDR      a2,[v4,#&48c]
        SUB      a2,a2,a1
        LDR      a3,[v4,#&480]
        MLA      a1,a3,v5,a2
        LDR      a4,[v4,#&4a4]
        ADD      a1,a1,a4
        ADD      a2,a2,a4
        BL       memcpy
        ADD      v5,v5,#1
        CMP      v5,#7
        BGT      |L00121c.J30.DoInterlace|
|L001208.J35.DoInterlace|
        LDR      a1,[v4,#8]
        ADD      a2,a1,v5
        LDR      a1,[v1,#&1c]
        CMP      a2,a1
        BLT      |L0011d8.J32.DoInterlace|
|L00121c.J30.DoInterlace|
        LDR      a2,[v1,#&1c]
        LDR      a1,[v4,#8]
        SUB      a2,a2,a1
        MOV      a1,#&10
        RSB      a2,a1,a2,LSL #1
        LDR      a1,[v2,#4]
        CMP      a2,a1
        MOVLE    a1,a2
        STR      a1,[v2,#4]
        LDR      a1,[v4,#8]
        ADD      a1,a1,#8
        STR      a1,[v4,#8]
        LDR      a2,[v1,#&1c]
        CMP      a1,a2
        BLT      |L001188.J15.DoInterlace|
        LDR      a1,[v4,#&c]
        ADD      a1,a1,#1
        STR      a1,[v4,#&c]
        MOV      a1,#4
        STR      a1,[v4,#8]
        LDR      a1,[v1,#&1c]!
        SUB      a1,a1,#4
        LDR      a2,[v2,#&c]
        CMP      a2,a1,LSL #1
        MOVLE    a2,a1,LSL #1
        STR      a2,[v2,#&c]!
        B        |L001188.J15.DoInterlace|
|L001288.J45.DoInterlace|
        LDR      a1,[v4,#&48c]
        LDR      a2,[v4,#4]
        SUB      a2,a1,a2
        LDR      a3,[v4,#&480]
        MLA      a1,a3,v5,a2
        BL       memcpy
        ADD      v5,v5,#1
        CMP      v5,#3
        BGT      |L0012c0.J47.DoInterlace|
|L0012ac.J48.DoInterlace|
        LDR      a1,[v4,#8]
        ADD      a2,a1,v5
        LDR      a1,[v1,#&1c]
        CMP      a2,a1
        BLT      |L001288.J45.DoInterlace|
|L0012c0.J47.DoInterlace|
        CMP      v3,#0
        MOVGE    v5,#1
        BGE      |L001300.J55.DoInterlace|
        B        |L001314.J50.DoInterlace|
|L0012d0.J52.DoInterlace|
        LDR      a1,[v4,#4]
        LDR      a2,[v4,#&48c]
        SUB      a2,a2,a1
        LDR      a3,[v4,#&480]
        MLA      a1,a3,v5,a2
        LDR      a4,[v4,#&4a4]
        ADD      a1,a1,a4
        ADD      a2,a2,a4
        BL       memcpy
        ADD      v5,v5,#1
        CMP      v5,#3
        BGT      |L001314.J50.DoInterlace|
|L001300.J55.DoInterlace|
        LDR      a1,[v4,#8]
        ADD      a2,a1,v5
        LDR      a1,[v1,#&1c]
        CMP      a2,a1
        BLT      |L0012d0.J52.DoInterlace|
|L001314.J50.DoInterlace|
        LDR      a1,[v1,#&1c]
        LDR      a2,[v4,#8]
        SUB      a2,a1,a2
        MOV      a1,#8
        RSB      a1,a1,a2,LSL #1
        LDR      a2,[v2,#4]
        CMP      a1,a2
        MOVGT    a1,a2
        STR      a1,[v2,#4]
        LDR      a1,[v4,#8]
        ADD      a1,a1,#8
        STR      a1,[v4,#8]
        LDR      a2,[v1,#&1c]
        CMP      a1,a2
        BLT      |L001188.J15.DoInterlace|
        LDR      a1,[v4,#&c]
        ADD      a1,a1,#1
        STR      a1,[v4,#&c]
        MOV      a1,#2
        STR      a1,[v4,#8]
        LDR      a1,[v1,#&1c]!
        SUB      a2,a1,#2
        LDR      a1,[v2,#&c]
        CMP      a1,a2,LSL #1
        BGT      |L00144c.J76.DoInterlace|
|L001378.J63.DoInterlace|
        MOV      a1,a2,LSL #1
        B        |L00144c.J76.DoInterlace|
|L001380.J18.DoInterlace|
        LDR      a2,[v4,#8]
        ADD      a3,a2,#1
        LDR      a2,[v1,#&1c]
        CMP      a3,a2
        BGE      |L0013a8.J65.DoInterlace|
        LDR      a2,[v4,#&48c]
        SUB      a2,a2,a1
        LDR      a3,[v4,#&480]
        ADD      a1,a2,a3
        BL       memcpy
|L0013a8.J65.DoInterlace|
        CMP      v3,#0
        BLT      |L0013e8.J67.DoInterlace|
        LDR      a1,[v4,#8]
        ADD      a1,a1,#1
        LDR      a2,[v1,#&1c]
        CMP      a1,a2
        BGE      |L0013e8.J67.DoInterlace|
        LDR      a1,[v4,#4]
        LDR      a2,[v4,#&48c]
        SUB      a4,a2,a1
        LDR      a1,[v4,#&4a4]
        ADD      a2,a4,a1
        LDR      a3,[v4,#&480]
        ADD      a4,a4,a3
        ADD      a1,a4,a1
        BL       memcpy
|L0013e8.J67.DoInterlace|
        LDR      a1,[v1,#&1c]
        LDR      a2,[v4,#8]
        SUB      a1,a1,a2
        MOV      a2,#4
        RSB      a1,a2,a1,LSL #1
        LDR      a2,[v2,#4]
        CMP      a1,a2
        MOVGT    a1,a2
        STR      a1,[v2,#4]
        LDR      a1,[v4,#8]
        ADD      a1,a1,#4
        STR      a1,[v4,#8]
        LDR      a2,[v1,#&1c]
        CMP      a1,a2
        BLT      |L001188.J15.DoInterlace|
        LDR      a1,[v4,#&c]
        ADD      a1,a1,#1
        STR      a1,[v4,#&c]
        MOV      a1,#1
        STR      a1,[v4,#8]
        LDR      a1,[v1,#&1c]!
        SUB      a2,a1,#1
        LDR      a1,[v2,#&c]
        CMP      a1,a2,LSL #1
        BLE      |L001378.J63.DoInterlace|
|L00144c.J76.DoInterlace|
        STR      a1,[v2,#&c]!
        B        |L001188.J15.DoInterlace|

        DCB     &67,&69,&66,&45
        DCB     &72,&72,&6f,&72
        DCB     &00,&00,&00,&00
        DCD     &ff00000c

        IMPORT  strcpy
gifError
        MOV      ip,sp
        STMDB    sp!,{a1,v1,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      a2,a1
        MOV      a1,#0
        LDR      v1,[pc, #L001498-.-8]
        STR      a1,[v1,#0]
        ADD      a1,v1,#4
        BL       strcpy
        MOV      a1,v1
        LDMDB    fp,{v1,fp,sp,pc}^
L001498
        DCD     |x$bssseg|

        DCB     &53,&61,&76,&65
        DCB     &53,&70,&72,&69
        DCB     &74,&65,&00,&00
        DCD     &ff00000c

SaveSprite
        MOV      ip,sp
        STMDB    sp!,{a1,a2,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      a4,a2
        STMDB    sp!,{a4}
        MOV      a3,#&10c
        MOV      a2,#7
        LDR      a4,[a1,#&2c]!
        MOV      a1,#&2e
        BL       _swix
        LDMDB    fp,{fp,sp,pc}^

        DCB     &45,&6e,&64,&4c
        DCB     &6f,&61,&64,&00
        DCD     &ff000008

        IMPORT  free
EndLoad
        MOV      ip,sp
        STMDB    sp!,{a1,v1,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        LDR      a1,[a1,#&28]
        BL       free
        MOV      a1,#0
        STR      a1,[v1,#&28]!
        LDMDB    fp,{v1,fp,sp,pc}^

        DCB     &44,&65,&6c,&65
        DCB     &74,&65,&00,&00
        DCD     &ff000008

        IMPORT  flex_free
Delete
        MOV      ip,sp
        STMDB    sp!,{a1,v1,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        LDR      a1,[a1,#&28]
        BL       free
        LDR      a1,[v1,#&30]
        BL       free
        LDR      a1,[v1,#&2c]
        TEQ      a1,#0
        ADDNE    a1,v1,#&2c
        BLNE     flex_free
        MOV      a1,v1
        BL       free
        MOV      a1,#0
        LDMDB    fp,{v1,fp,sp,pc}^

        DCB     &4d,&6f,&64,&65
        DCB     &43,&68,&61,&6e
        DCB     &67,&65,&00,&00
        DCD     &ff00000c

ModeChange
        MOV      ip,sp
        STMDB    sp!,{a1,v1,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        SUB      sp,sp,#4
        MOV      a4,sp
        MOV      a3,#&10
        MOV      a2,#0
        MVN      a1,#0
        STMDB    sp!,{a1-a4}
        MVN      a4,#0
        STMDB    sp!,{a4}
        LDR      a3,[v1,#&2c]
        ADD      a4,pc,#L001670-.-8
        MOV      a2,#&8000003
        ADD      a2,a2,#&3c
        MOV      a1,#&740
        ADD      a1,a1,#&40000
        BL       _swix
        ADD      sp,sp,#&14
        TEQ      a1,#0
        BNE      |L001600.J4.ModeChange|
        LDR      a1,[v1,#&30]
        BL       free
        LDR      a1,[sp,#0]
        BL       malloc
        STR      a1,[v1,#&30]
        TEQ      a1,#0
        BNE      |L001608.J9.ModeChange|
        LDR      a1,[pc, #L001674-.-8]
        BL       gifError
|L001600.J4.ModeChange|
        TEQ      a1,#0
        BNE      |L001638.J8.ModeChange|
|L001608.J9.ModeChange|
        MOV      a4,#&10
        MVN      a2,#0
        MVN      a1,#0
        LDR      a3,[v1,#&30]
        STMDB    sp!,{a1-a4}
        LDR      a3,[v1,#&2c]
        ADD      a4,pc,#L001670-.-8
        MOV      a2,#&3f
        MOV      a1,#&740
        ADD      a1,a1,#&40000
        BL       _swix
        ADD      sp,sp,#&10
|L001638.J8.ModeChange|
        TEQ      a1,#0
        BNE      |L00166c.J14.ModeChange|
        MOV      a4,#0
        ADD      a3,v1,#&34
        ADD      a2,pc,#L001670-.-8
        STMDB    sp!,{a2-a4}
        MOV      a3,#&100
        MOV      a2,#&c7
        MOV      a1,#&ed
        ADD      a1,a1,#&40000
        LDR      a4,[v1,#&2c]!
        BL       _swix
        ADD      sp,sp,#&c
|L00166c.J14.ModeChange|
        LDMDB    fp,{v1,fp,sp,pc}^
L001670
        DCB     &67,&69,&66,&00
L001674
        DCD     |x$codeseg|+&9bc

        DCB     &52,&65,&6e,&64
        DCB     &65,&72,&00,&00
        DCD     &ff000008

Render
        MOV      ip,sp
        STMDB    sp!,{a1-v4,fp,ip,lr,pc}
        SUB      fp,ip,#4
        CMP      sp,sl
        BLLT     __rt_stkovf_split_small
        MOV      v1,a1
        MOV      v4,a2
        MOV      v3,a3
        MOV      v2,a4
        SUB      sp,sp,#&10
        MOV      a2,#0
        LDR      a3,[a1,#&30]
        TEQ      a3,#0
        BLEQ     ModeChange
        MOVEQ    a2,a1
        ADD      sp,sp,#&10
        ADD      a3,v1,#&44
        LDMDB    a3!,{a4,ip}
        STMDB    sp!,{a4,ip}
        LDMDB    a3!,{a4,ip}
        STMDB    sp!,{a4,ip}
        TEQ      v2,#&64
        BEQ      |L001720.J6.Render|
        LDR      a1,[sp,#0]
        MUL      a1,v2,a1
        STR      a1,[sp,#0]
        LDR      a1,[sp,#4]
        MUL      a1,v2,a1
        STR      a1,[sp,#4]
        LDR      a1,[sp,#8]
        ADD      ip,a1,a1,LSL #3
        ADD      a1,ip,a1,LSL #4
        MOV      a1,a1,LSL #2
        STR      a1,[sp,#8]
        LDR      a1,[sp,#&c]
        ADD      ip,a1,a1,LSL #3
        ADD      a1,ip,a1,LSL #4
        MOV      a1,a1,LSL #2
        STR      a1,[sp,#&c]
|L001720.J6.Render|
        TEQ      a2,#0
        BNE      |L001764.J8.Render|
        MOV      a3,sp
        MOV      a2,#8
        MOV      a1,v3
        LDR      a4,[v1,#&30]
        STMDB    sp!,{a1-a4}
        MOV      a4,v4
        SUB      a3,pc,#.+8-L001670
        STMDB    sp!,{a3,a4}
        MOV      a3,#&134
        MOV      a2,#&ff
        MOV      a1,#&2e
        LDR      a4,[v1,#&2c]!
        BL       _swix
        ADD      sp,sp,#&18
        MOV      a2,a1
|L001764.J8.Render|
        MOV      a1,a2
        LDMDB    fp,{v1-v4,fp,sp,pc}^

        AREA |C$$data|,DATA

|x$dataseg|

id87
        DCD     |x$codeseg|

id89
        DCD     |x$codeseg|+&8

EGApalette
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        DCD     &00000080
        DCD     &00000000
        DCD     &00000080
        DCD     &00000000
        DCD     &00000000
        DCD     &00000080
        DCD     &00000080
        DCD     &00000080
        DCD     &00000000
        DCD     &00000000
        DCD     &00000080
        DCD     &00000000
        DCD     &00000080
        DCD     &00000080
        DCD     &00000080
        DCD     &00000000
        DCD     &000000c8
        DCD     &000000c8
        DCD     &000000c8
        DCD     &00000064
        DCD     &00000064
        DCD     &00000064
        DCD     &00000064
        DCD     &00000064
        DCD     &000000ff
        DCD     &00000064
        DCD     &000000ff
        DCD     &00000064
        DCD     &00000064
        DCD     &000000ff
        DCD     &000000ff
        DCD     &000000ff
        DCD     &00000064
        DCD     &00000064
        DCD     &000000ff
        DCD     &00000064
        DCD     &000000ff
        DCD     &000000ff
        DCD     &000000ff
        DCD     &00000064
        DCD     &000000ff
        DCD     &000000ff
        DCD     &000000ff

        AREA |C$$zidata|,NOINIT
|x$bssseg|
        % 256

        END
