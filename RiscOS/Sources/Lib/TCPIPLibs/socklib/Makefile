# Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
#
# Makefile for socklib.a
#
# Makefile,v
# Revision 1.6  96/03/19  13:14:02  kbracey
# A major shake-up. All veneers are now in assembler. The assembler
# veneers are automatically generated by a C program mkveneers.
# _makecall is no longer used, but included in the library for
# compatibility. A new function _copyerror does much of the work
# of _makecall.
#
# Revision 1.5  95/08/17  18:39:36  kwelton
# The _makecall() routine has been rewritten in assembler to get round
# a race condition that previously existed in the "standard" (i.e.
# not -zM) version where the Internet module's internal error block could
# be modified between _makecall() discovering an error and copying out
# the error block into _inet_error.
#
# Revision 1.4  95/04/20  17:44:09  kwelton
# Function prototypes altered to match the genuine functionality, not
# whatever random argument types were used in the original library.
# Remade dependencies.
#
# Revision 1.3  95/04/20  13:44:32  kwelton
# All library functions are now prototyped in socklib.h.
#
# Revision 1.2  95/04/18  15:32:12  kwelton
# Files renamed to fit RISC OS 10-char filename limit
#
# Revision 1.1  95/03/08  11:38:13  kwelton
# Initial revision
#
#
LIBDIR = <Lib$Dir>

#
# Generic options:
#
MKDIR   = cdir
WIPE    = -wipe
RM      = -remove
CP      = copy
CC	= cc
AS	= objasm
LD	= link
LIB	= libfile
CMHG	= cmhg

WFLAGS  = ~c~v
CPFLAGS = ~cflnr~v

INCLUDES=	TCPIPLibs:,C:

CFLAGS=		-pcc -zps0 -I${INCLUDES} -fah -Fn -DINET
CFLAGSZM=	-pcc -zps1 -I${INCLUDES} -ffah -DINET -zM
ASFLAGSZM=	-predefine "module SETL {TRUE}"

CCZM=		${CC} ${CFLAGSZM}
ASZM=		${AS} ${ASFLAGSZM}

OFILES4=	accept.o bind.o connect.o copyerror.o getpeernam.o \
		getsocknam.o getsockopt.o getstabsiz.o listen.o makecall.o \
		recv.o recvfrom.o recvmsg.o select.o send.o sendmsg.o \
		sendto.o setsockopt.o shutdown.o sockclose.o socket.o \
		socketstat.o sockioctl.o sockread.o sockreadv.o sockwrite.o \
		sockwritev.o sendtosm.o sysctl.o naccept.o nrecvfrom.o \
		nrecvmsg.o nsendmsg.o ngetpeerna.o ngetsockna.o kvm_nlist.o \
		sockver.o _inet_err.o

ZFILES4=	z.accept z.bind z.connect z.copyerror z.getpeernam \
		z.getsocknam z.getsockopt z.getstabsiz z.listen z.makecall \
		z.recv z.recvfrom z.recvmsg z.select z.send z.sendmsg \
		z.sendto z.setsockopt z.shutdown z.sockclose z.socket \
		z.socketstat z.sockioctl z.sockread z.sockreadv z.sockwrite \
		z.sockwritev z.sendtosm z.sysctl z.naccept z.nrecvfrom \
		z.nrecvmsg z.nsendmsg z.ngetpeerna z.ngetsockna z.kvm_nlist \
		z.sockver z._inet_err

OFILES5=	accept5.o bind.o connect.o copyerror.o getpeerna5.o \
		getsockna5.o getsockopt.o getstabsiz.o listen.o makecall.o \
		recv5.o recvfrom5.o recvmsg5.o select.o send5.o sendmsg5.o \
		sendto.o setsockopt.o shutdown.o sockclose.o socket.o \
		socketstat.o sockioctl.o sockread.o sockreadv.o sockwrite.o \
		sockwritev.o sendtosm.o sysctl.o \
		oaccept.o ogetpeerna.o ogetsockna.o orecvmsg.o osendmsg.o \
		orecvfrom.o kvm_nlist.o sockver.o _inet_err.o

ZFILES5=	z.accept5 z.bind z.connect z.copyerror z.getpeerna5 \
		z.getsockna5 z.getsockopt z.getstabsiz z.listen z.makecall \
		z.recv5 z.recvfrom5 z.recvmsg5 z.select z.send5 z.sendmsg5 \
		z.sendto z.setsockopt z.shutdown z.sockclose z.socket \
		z.socketstat z.sockioctl z.sockread z.sockreadv z.sockwrite \
		z.sockwritev z.sendtosm z.sysctl \
		z.oaccept z.ogetpeerna z.ogetsockna z.orecvmsg z.osendmsg \
		z.orecvfrom z.kvm_nlist z.sockver z._inet_err


.SUFFIXES:	.z .o .s .sz .sn .c

.c.z:;		${CCZM} -c -o $@ $<
.c.o:;		${CC} ${CFLAGS} -c -o $@ $<
.s.z:;		${ASZM} $< $@
.sz.z:;		${ASZM} $< $@
.s.o:;		${AS} $< $@
.sn.o:;		${AS} $< $@

COMPONENT = socklib
LIBDIR = <Lib$Dir>

all:		veneers socklib socklibzm socklib5 socklib5zm

${OFILES4}:	veneers
${ZFILES4}:	veneers
${OFILES5}:	veneers
${ZFILES5}:	veneers

socklib:	${OFILES4} local_dirs
	${LIB} -c socklib ${OFILES4}
	${LIB} -o socklib

socklibzm:	${ZFILES4} local_dirs
	${LIB} -c socklibzm ${ZFILES4}
	${LIB} -o socklibzm

socklib5:	${OFILES5} local_dirs
	${LIB} -c socklib5 ${OFILES5}
	${LIB} -o socklib5

socklib5zm:	${ZFILES5} local_dirs
	${LIB} -c socklib5zm ${ZFILES5}
	${LIB} -o socklib5zm

veneers:	mkveneers Prototypes local_dirs
	mkveneers Prototypes
	Create veneers

mkveneers:	c.mkveneers local_dirs
	cc mkveneers -LC:o.Stubs

export: export_${PHASE}

export_hdrs:
	${CP} h.socklib	 TCPIPLibs:h.socklib	${CPFLAGS}
        @echo ${COMPONENT}: export complete (hdrs)

export_libs: socklib socklibzm socklib5 socklib5zm dirs
	${CP} socklib	 TCPIPLibs:o.socklib	${CPFLAGS}
	${CP} socklibzm	 TCPIPLibs:o.socklibzm	${CPFLAGS}
	${CP} socklib5	 TCPIPLibs:o.socklib5	${CPFLAGS}
	${CP} socklib5zm TCPIPLibs:o.socklib5zm	${CPFLAGS}

dirs:
	${MKDIR} $(LIBDIR)
	${MKDIR} $(LIBDIR).TCPIPLibs
	${MKDIR} $(LIBDIR).TCPIPLibs.o

local_dirs:
        ${MKDIR} o
        ${MKDIR} z
	${MKDIR} sn
	${MKDIR} sz
	Create   local_dirs
	
clean:
	${WIPE} o.* ${WFLAGS}
	${WIPE} z.* ${WFLAGS}
	${WIPE} sn.* ${WFLAGS}
	${WIPE} sz.* ${WFLAGS}
	${RM} mkveneers
	${RM} veneers
	${RM} local_dirs
	${RM} socklib
	${RM} socklibzm
	${RM} socklib5
	${RM} socklib5zm


