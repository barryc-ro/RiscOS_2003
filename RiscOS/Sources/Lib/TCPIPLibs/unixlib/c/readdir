/* -*-C-*-
 *
 * $Header$
 * $Source$
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.1  95/04/20  09:50:27  kwelton
 * Initial revision
 *
 */
#include "kernel.h"
#include "swis.h"

#include "unixlib.h"

/*
 * this is complete garbage - in no way, shape, or form, is it
 * a replacement/emulation of the UNIX readdir() function.  I
 * am *not* going to mess with it, however, 'cause the chance
 * is that something, somewhere, uses it in its current form.
 *
 * What I *cannot* understand is, if the function has been changed
 * so radically, why the bloody hell does it still have the same name?
 */
int readdir(const char *path, char *buf, int len, const char *name, int offset)
{
    _kernel_osgbpb_block osg;

    osg.dataptr  = buf;
    osg.nbytes   = 1;
    osg.fileptr  = offset;
    osg.buf_len  = len;
    osg.wild_fld = (char *) name;

   _kernel_osgbpb(9, (int) path, &osg);

    if( osg.nbytes != 1 )			/* number of objects read */
	return(-1);
    else
	return(osg.fileptr);			/* next item to read */
}

/* EOF readdir.c */
