/************************************************************************/
/* File:    Files.c                                                     */
/* Purpose: Test harness for NBLib.                                     */
/*                                                                      */
/* Author:  Neil Bingham <mailto:nbingham@acorn.com>                    */
/* History: 0.01  Sun 08th November 1998                                */
/*                Created.                                              */
/************************************************************************/

#include "Files.h"
#include "Main.h"
#include "Internal.h"


/************************************************************************/
/* nb_file_copy_TEST                                                    */
/*                                                                      */
/* Test of nb_file_copy                                                 */
/************************************************************************/
void nb_file_copy_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;

  display_title("nb_file_copy");

  bits = bits_to_set();

  printf("Enter source file: ");
  scanf("%s", &path_1);
  printf("Enter destination file: ");
  scanf("%s", &path_2);

  er = nb_file_copy(bits, path_1, path_2);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_delete_TEST                                                  */
/*                                                                      */
/* Test of nb_file_delete                                               */
/************************************************************************/
void nb_file_delete_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;

  display_title("nb_file_delete");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter filename: ");
  scanf("%s", &path_2);

  er = nb_file_delete(bits, path_1, path_2);

  oserror_dump(er);
}

/************************************************************************/
/* nb_file_exists_TEST                                                  */
/*                                                                      */
/* Test of nb_file_exists                                               */
/************************************************************************/
void nb_file_exists_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;
  int type;

  display_title("nb_file_exists");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter filename: ");
  scanf("%s", &path_2);
  printf("Enter filetype: ");
  scanf("%x", &type);

  er = nb_file_exists(bits, path_1, path_2, type);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_find_filetype_TEST                                           */
/*                                                                      */
/* Test of nb_file_find_filetype                                        */
/************************************************************************/
void nb_file_find_filetype_TEST(void)
{
  _kernel_oserror	*er = NULL;
  int type;

  display_title("nb_file_find_filetype");

  printf("No flags\n");

  printf("Enter directory: ");
  scanf("%s", &path_1);
  printf("Enter filetype: ");
  scanf("%x", &type);

  path_2[0] = '\0';

  er = nb_file_find_filetype(0, path_1, type, path_2, sizeof(path_2));

  printf("File found: %s\n", path_2);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_get_datestamp_TEST                                           */
/*                                                                      */
/* Test of nb_file_get_datestamp                                        */
/************************************************************************/
void nb_file_get_datestamp_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;

  display_title("nb_file_get_datestamp");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter file:     ");
  scanf("%s", &path_2);

  path_3[0] = '\0';
  er = nb_file_get_datestamp(bits, path_1, path_2, path_3, sizeof(path_3));

  printf("DateStamp: %s\n", path_3);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_get_leafname_TEST                                            */
/*                                                                      */
/* Test of nb_file_get_leafname                                         */
/************************************************************************/
void nb_file_get_leafname_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;

  display_title("nb_file_get_leafname");

  bits = bits_to_set();

  printf("Enter file: ");
  scanf("%s", &path_1);

  path_2[0] = '\0';
  er = nb_file_get_leafname(bits, path_1, path_2, sizeof(path_2));

  printf("Leafname: %s\n", path_2);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_get_lines_TEST                                               */
/*                                                                      */
/* Test of nb_file_get_lines                                            */
/************************************************************************/
void nb_file_get_lines_TEST(void)
{
  unsigned int bits;
  int lines = 0;

  display_title("nb_file_get_lines");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter file:     ");
  scanf("%s", &path_2);

  lines = nb_file_get_lines(bits, path_1, path_2);

  printf("Lines: %d\n", lines);
}


/************************************************************************/
/* nb_file_get_size_TEST                                                */
/*                                                                      */
/* Test of nb_file_get_size                                             */
/************************************************************************/
void nb_file_get_size_TEST(void)
{
  unsigned int bits;
  int size = 0;

  display_title("nb_file_get_size");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter file:     ");
  scanf("%s", &path_2);

  size = nb_file_get_size(bits, path_1, path_2);

  printf("Size: %d\n", size);
}


/************************************************************************/
/* nb_file_get_parent_dir_TEST                                          */
/*                                                                      */
/* Test of nb_file_get_parent_dir                                       */
/************************************************************************/
void nb_file_get_parent_dir_TEST(void)
{
  _kernel_oserror	*er = NULL;

  display_title("nb_file_get_parent_dir");

  printf("No Bits\n");

  printf("Enter file: ");
  scanf("%s", &path_1);

  path_2[0] = '\0';
  er = nb_file_get_parent_dir(0, path_1, path_2, sizeof(path_2));

  printf("Parent Dir: %s\n", path_2);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_get_filetype_TEST                                            */
/*                                                                      */
/* Test of nb_file_get_leafname                                         */
/************************************************************************/
void nb_file_get_filetype_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;
  int type;

  display_title("nb_file_get_filetype");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter file:     ");
  scanf("%s", &path_2);

  er = nb_file_get_filetype(bits, path_1, path_2, &type);

  printf("Type: %x\n", type);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_set_filetype_TEST                                            */
/*                                                                      */
/* Test of nb_file_get_leafname                                         */
/************************************************************************/
void nb_file_set_filetype_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;
  int type;

  display_title("nb_file_set_filetype");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter file:     ");
  scanf("%s", &path_2);
  printf("Enter type:     ");
  scanf("%x", &type);

  er = nb_file_set_filetype(bits, path_1, path_2, type);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_stamp_TEST                                                   */
/*                                                                      */
/* Test of nb_file_stamp                                                */
/************************************************************************/
void nb_file_stamp_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;

  display_title("nb_file_stamp");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter file:     ");
  scanf("%s", &path_2);

  er = nb_file_stamp(bits, path_1, path_2);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_lock_TEST                                                    */
/*                                                                      */
/* Test of nb_file_lock                                                 */
/************************************************************************/
void nb_file_lock_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;

  display_title("nb_file_lock");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter file:     ");
  scanf("%s", &path_2);

  er = nb_file_lock(bits, path_1, path_2);
  oserror_dump(er);
}


/************************************************************************/
/* nb_file_unlock_TEST                                                  */
/*                                                                      */
/* Test of nb_file_unlock                                               */
/************************************************************************/
void nb_file_unlock_TEST(void)
{
  _kernel_oserror	*er = NULL;
  unsigned int bits;

  display_title("nb_file_unlock");

  bits = bits_to_set();

  printf("Enter location: ");
  scanf("%s", &path_1);
  printf("Enter file:     ");
  scanf("%s", &path_2);

  er = nb_file_unlock(bits, path_1, path_2);
  oserror_dump(er);
}
