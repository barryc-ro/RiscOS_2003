/*ident	"@(#)ctrans:Patch/_main.c	1.4" */
/*******************************************************************************

C++ source for the C++ Language System, Release 3.0.  This product
is a new release of the original cfront developed in the computer
science research center of AT&T Bell Laboratories.

Copyright (c) 1991 AT&T and UNIX System Laboratories, Inc.
Copyright (c) 1984, 1989, 1990 AT&T.  All Rights Reserved.

THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE of AT&T and UNIX System
Laboratories, Inc.  The copyright notice above does not evidence
any actual or intended publication of such source code.

*******************************************************************************/
/* _main for the patch version of the C++ translator*/
/* See patch.c for details*/
struct __linkl {
	struct __linkl *next;
	char (*ctor)();
	char (*dtor)();
	};
extern struct __linkl *__head ;
struct __linkl *__head = (__linkl *)0;

extern "C" {
	void ______main();
	void atexit(void (*)(void));		/* ANSI-C conformat decl. */
};

/*
 * Modified following idea by Brian Knight of abc/eo to register
 * `__dtors' with the exit routine in the C library. This removes the
 * need for the C++ library to have its own exit routine, and thus
 * allows it to be linked with RISC iX shared libraries.
 */
extern void ______main()
{
    extern void __dtors(void);
    static int atexitdone = 0;
    struct __linkl *current = __head;
    struct __linkl *previous = 0;

    if (atexitdone != 0) return;	// once only: main can be recursive
    atexitdone = 1;
    atexit(__dtors); /* Arrange to call destructors on exit */

    while (current)
    {
	struct __linkl *next = current->next;

	if (current->ctor)
		(*(current->ctor))();

	current->next = previous;
	__head = previous = current;
	current = next;
    }
}
