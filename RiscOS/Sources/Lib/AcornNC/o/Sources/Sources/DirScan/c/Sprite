#include <string.h>

#include "swis.h"

#include "Desk.Filing.h"
#include "Desk.Error2.h"

#include "AcornNC.DirScan.h"



#define SpriteNameExists( name)	\
	( (0==_swix( Wimp_SpriteOp, _IN(0)|_IN(2), 40, (int) (name))) ? Desk_bool_TRUE : Desk_bool_FALSE)


static void	FillItemWithSpriteNameList(
	AcornNC_dirscan_spriteinfo*	info,
	char		**list,
	Desk_bool*	sm,
	void*		data
	)
	{
	int	i;
	
	for ( i=0; list[i][0]!=0; i++)	{
		
		#ifdef Desk_DEBUG
			{
			char	array[ 1024];
			sprintf( array, list[i], data);
			Desk_Debug_Printf( Desk_error_PLACE "checking sprite name '%s'\n", array);
			}
		#endif
		sprintf( info->name, list[i], data);
		/* Note that this can overwrite into info->plothalfsize if text is 12 characters, because of '\0' appended by sprintf	*/
		
		if ( SpriteNameExists( info->name))	{
			info->plothalfsize = sm[ i];
			return;
			}
		}
	
	Desk_Error2_HandleText( "Can't find spritename");
	}




/* These strings are for use with FilerPatch	*/
/*
static char	*fp_appname_sprites[]	= { "*!%s","sm!%s","sm%s","!%s","%s", "small_app","\0"	};
static BOOL	 fp_appname_sm[]	= {  FALSE, FALSE,  FALSE, TRUE, TRUE, FALSE		};

static char	*fp_dirname_sprites[]	= { "*#%s", "#%s", "small_dir", "\0"			};
static BOOL	 fp_dirname_sm[]	= {  FALSE,  TRUE,  FALSE				};

static char	*fp_imagename_sprites1[]= { "*#%s", "#%s", "\0"					};
static BOOL	 fp_imagename_sm1[]	= {  FALSE,  TRUE,					};
static char	*fp_imagename_sprites2[]= { "small_%s", "file_%s", "small_dir", "\0"		};
static BOOL	 fp_imagename_sm2[]	= {  FALSE,      TRUE,      FALSE			};

static char	*fp_filename_sprites[]	= { "small_%s", "file_%s", "small_xxx", "file_xxx", "\0"	};
static BOOL	 fp_filename_sm[]	= { FALSE,       TRUE,      FALSE,    TRUE		};
*/

/* These strings are for the standard filer...	*/
/* Not quite sure about the image files		*/
/*
static char	*appname_sprites[]	= { "sm%s", "%s", "small_app", "\0"			};
static BOOL	 appname_sm[]		= {  FALSE,   TRUE,  FALSE 				};

static char	*dirname_sprites[]	= { "small_dir", "\0"					};
static BOOL	 dirname_sm[]		= {  FALSE						};

static char	*imagename_sprites1[]	= { "\0"						};
static BOOL	 imagename_sm1[]	= { FALSE						};
static char	*imagename_sprites2[]	= { "small_%s", "file_%s", "small_dir", "\0"		};
static BOOL	 imagename_sm2[]	= {  FALSE,      TRUE,      FALSE			};
*/
static char*		smfile_sprites[]	= { "small_%03x",	"file_%03x",	"small_xxx",		"file_xxx", ""};
static Desk_bool	smfile_sm[]		= { Desk_bool_FALSE,	Desk_bool_TRUE,	Desk_bool_FALSE,	Desk_bool_TRUE		};

static char*		file_sprites[]		= { "file_%03x",	"file_xxx",	""};
#define			file_sm			all_big

static char*		smdir_sprites[]		= { "small_dir",	""	};
static Desk_bool	smdir_sm[]		= { Desk_bool_FALSE		};

static char*		dir_sprites[]		= { "directory",	""	};
static Desk_bool	dir_sm[]		= { Desk_bool_FALSE		};

static char*		smapp_sprites[]		= { "sm%s",		"%s",		"small_app",	""	};
static Desk_bool	smapp_sm[]		= {  Desk_bool_FALSE,   Desk_bool_TRUE,	Desk_bool_FALSE 	};

static char*		app_sprites[]		= { "%s",		"application", ""	};
#define			app_sm			all_big

static Desk_bool	all_big[]		= { Desk_bool_FALSE, Desk_bool_FALSE, Desk_bool_FALSE, Desk_bool_FALSE, Desk_bool_FALSE, Desk_bool_FALSE, Desk_bool_FALSE};




static void	Sand_MakeSpriteForFile( AcornNC_dirscan_spriteinfo* spriteinfo, int filetype, AcornNC_dirscan_spritesize size)
	{
	static int				cache_filetype			= -1;
	static char				cache_name[ Desk_wimp_MAXNAME]	= "";
	static AcornNC_dirscan_spritesize	cache_size			= AcornNC_dirscan_spritesize_NONE;
	static Desk_bool			cache_plothalfsize		= Desk_bool_FALSE;
	
	if ( filetype==cache_filetype && size==cache_size)	{
		strncpy( spriteinfo->name, cache_name, Desk_wimp_MAXNAME);
		spriteinfo->plothalfsize	= cache_plothalfsize;
		}
	
	else	{
		if ( size==AcornNC_dirscan_spritesize_LARGE)	FillItemWithSpriteNameList( spriteinfo, file_sprites, file_sm, (void*) filetype);
		else						FillItemWithSpriteNameList( spriteinfo, smfile_sprites, smfile_sm, (void*) filetype);
		
		strncpy( cache_name, spriteinfo->name, Desk_wimp_MAXNAME);
		cache_filetype		= filetype;
		cache_size		= size;
		cache_plothalfsize	= spriteinfo->plothalfsize;
		}
	}



void	AcornNC_DirScan_FindSprite( AcornNC_dirscan_spriteinfo* spriteinfo, Desk_filing_fulldirentry* object, AcornNC_dirscan_spritesize size)
	{
	int	filetype = ( object->loadaddr & 0xFFF00) >> 8;
	
	/* It's not clear exactly how this should be done. We could
	check for object->objtype==Desk_filing_IMAGEFILE.
	Checking for the filetype being 0x2000 catches applications
	whose names don't start with '!' - the Filer catches these.
	
	All in all, RISC OS file->spritename is a real mess.
	*/
	
	Desk_Debug_Printf( Desk_error_PLACE "filetype=%i=0x%x\n", filetype, filetype);
	
	if ( Desk_filing_DIRECTORY==object->objtype)	{		// directory
		if ( '!'==object->name[0])	{	// application
			if ( size==AcornNC_dirscan_spritesize_LARGE)	FillItemWithSpriteNameList( spriteinfo, app_sprites, app_sm, object->name);
			else						FillItemWithSpriteNameList( spriteinfo, smapp_sprites, smapp_sm, object->name);
			}
		else	{	// normal directory
			if ( size==AcornNC_dirscan_spritesize_LARGE)	FillItemWithSpriteNameList( spriteinfo, dir_sprites, dir_sm, "");
			else						FillItemWithSpriteNameList( spriteinfo, smdir_sprites, smdir_sm, "");
			}
		}
	else	{	// file or image directory
		Sand_MakeSpriteForFile( spriteinfo, filetype, size);
		// This caches the last file found, to avoid calling FillItemWithSpriteNameList
		}
	}
