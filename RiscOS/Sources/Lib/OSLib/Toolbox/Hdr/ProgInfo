;Assembler header file for ProgInfo
;written by DefMod (Jun 30 1995) on Mon Aug  7 11:17:55 1995
;Jonathan Coxhead, Acorn Computers Ltd

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET OS:Hdr.Types"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_Toolbox
        GBLS    Get_Toolbox
        ]
        [       :LNOT: :DEF: Toolbox_Hdr
Get_Toolbox                     SETS    "GET OS:Hdr.Toolbox"
        |
Get_Toolbox                     SETS    ""
        ]
        $Get_Toolbox

        [       :LNOT: :DEF: Get_Window
        GBLS    Get_Window
        ]
        [       :LNOT: :DEF: Window_Hdr
Get_Window                      SETS    "GET OS:Hdr.Window"
        |
Get_Window                      SETS    ""
        ]
        $Get_Window

        [       :LNOT: :DEF: ProgInfo_Hdr
        GBLS    ProgInfo_Hdr

;Symbols for constants
Class_ProgInfo                  *       &82B40
ProgInfo_GenerateAboutToBeShown *       &1
ProgInfo_GenerateDialogueCompleted *       &2
ProgInfo_IncludeLicenceType     *       &4
ProgInfo_Name                   *       &82B400
ProgInfo_Purpose                *       &82B401
ProgInfo_Author                 *       &82B402
ProgInfo_LicenceType            *       &82B403
ProgInfo_Version                *       &82B404
ProgInfo_NameLabel              *       &82B405
ProgInfo_PurposeLabel           *       &82B406
ProgInfo_AuthorLabel            *       &82B407
ProgInfo_LicenceLabel           *       &82B408
ProgInfo_VersionLabel           *       &82B409
ProgInfo_LicencePublicDomain    *       0
ProgInfo_LicenceSingleUser      *       1
ProgInfo_LicenceSingleMachine   *       2
ProgInfo_LicenceSite            *       3
ProgInfo_LicenceNetwork         *       4
ProgInfo_LicenceAuthority       *       5
Action_ProgInfoAboutToBeShown   *       &82B40
Action_ProgInfoDialogueCompleted *       &82B41
Error_ProgInfoTasksActive       *       &80B400
Error_ProgInfoAllocFailed       *       &80B401
Error_ProgInfoShortBuffer       *       &80B402
Error_ProgInfoNoSuchTask        *       &80B411
Error_ProgInfoNoSuchMethod      *       &80B412
Error_ProgInfoNoSuchMiscOpMethod *       &80B413

;Symbols for structure offsets and sizes
ProgInfo_Flags                  *       Bits

                                ^       0
ProgInfo_Object_flags           #       ProgInfo_Flags
ProgInfo_Object_title           #       Ptr
ProgInfo_Object_title_limit     #       Int
ProgInfo_Object_purpose         #       Ptr
ProgInfo_Object_author          #       Ptr
ProgInfo_Object_licence_type    #       Int
ProgInfo_Object_version         #       Ptr
ProgInfo_Object_alternative_window_name #       Ptr
ProgInfo_Object                 *       @

ProgInfo_Full                   *       Toolbox_Full

                                ^       0
ProgInfo_ActionAboutToBeShown_tag #       Toolbox_PositionTag
ProgInfo_ActionAboutToBeShown_position *       @
ProgInfo_ActionAboutToBeShown_position_full #       ProgInfo_Full
                                ^       ProgInfo_ActionAboutToBeShown_position
ProgInfo_ActionAboutToBeShown_position_top_left #       OS_Coord
ProgInfo_ActionAboutToBeShown   *       @


;Symbols for SWI's and SWI reason codes
XProgInfo_ClassSWI              *       &A2B40
ProgInfo_ClassSWI               *       &82B40

XProgInfo_PostFilter            *       &A2B41
ProgInfo_PostFilter             *       &82B41

XProgInfo_PreFilter             *       &A2B42
ProgInfo_PreFilter              *       &82B42

ProgInfo_GetWindowID            *       &0
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = prog_info (Toolbox_O)
   ;  R2 = &0
   ;Exit
   ;  R0 = window (Toolbox_O)

ProgInfo_SetVersion             *       &1
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = prog_info (Toolbox_O)
   ;  R2 = &1
   ;  R3 -> version (String)

ProgInfo_GetVersion             *       &2
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = prog_info (Toolbox_O)
   ;  R2 = &2
   ;  R3 = buffer (pointer to String)
   ;  R4 = size (Int)
   ;Exit
   ;  R4 = used (Int)

ProgInfo_SetLicenceType         *       &3
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = prog_info (Toolbox_O)
   ;  R2 = &3
   ;  R3 = licence_type (Int)

ProgInfo_GetLicenceType         *       &4
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = prog_info (Toolbox_O)
   ;  R2 = &4
   ;Exit
   ;  R0 = licence_type (Int)

ProgInfo_SetTitle               *       &5
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = prog_info (Toolbox_O)
   ;  R2 = &5
   ;  R3 -> title (String)

ProgInfo_GetTitle               *       &6
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = prog_info (Toolbox_O)
   ;  R2 = &6
   ;  R3 = buffer (pointer to String)
   ;  R4 = size (Int)
   ;Exit
   ;  R4 = used (Int)

        ]
        END
