TITLE WindowSupportExternal;

AUTHOR "Simon Middleton, Uniqueway Ltd; Jonathan Coxhead,
      jonathan@doves.demon.co.uk, 29 June 1995";

NEEDS OS, Toolbox, Window, Gadget;

CONST
   // reason codes (in r2) to the gadget hander swi
   WindowSupportExternal_HandlerAdd	    	= .Int: 1,
   WindowSupportExternal_HandlerRemove	    	= .Int: 2,
   WindowSupportExternal_HandlerFade	    	= .Int: 3,
   WindowSupportExternal_HandlerMethod	    	= .Int: 4,
   WindowSupportExternal_HandlerClick	    	= .Int: 6,
   WindowSupportExternal_HandlerPlot	    	= .Int: 9,
   WindowSupportExternal_HandlerSetFocus    	= .Int: 10,
   WindowSupportExternal_HandlerMove	    	= .Int: 11,
   WindowSupportExternal_HandlerPostAdd    	= .Int: 12;

SWI
   Window_SupportExternal = (NUMBER 0x82887 "Provides support for
         externally defined gadgets - see separate reason codes",
         ABSENT);

SWI WindowSupportExternal_CreateIcon =
  ( NUMBER 0x82887,
    ENTRY
    ( R0 = .Bits: flags,
      R1 # 0 "Creates an icon, handling window module plotting mode",
      R2 -> Wimp_IconCreate: icon
    ),
    EXIT
    ( R0! = Wimp_I: i
  ) ),

  WindowSupportExternal_CreateObject =
  ( NUMBER 0x82887,
    ENTRY
    ( R0 = Toolbox_CreateFlags: flags,
      R1 # 2 "Creates an object, handling window module plotting mode",
      R2 = Toolbox_Id: id
    ),
    EXIT
    ( R0! = Toolbox_O: obj
  ) ),

  WindowSupportExternal_CreateGadget =
  ( NUMBER 0x82887,
    ENTRY
    ( R0 = .Bits: flags,
      R1 # 3 "Creates a gadget",
      R2 = Toolbox_O: obj,
      R3 -> Gadget_Object: gadget,
      R4 = .Int: tag
    ),
    EXIT
    ( R0! = Toolbox_C: cmp
  ) ),

  WindowSupportExternal_Alloc =
  ( NUMBER 0x82887,
    ENTRY
    ( R0 = .Bits: flags,
      R1 # 4 "Allocates memory via window module",
      R2 = .Int: size
    ),
    EXIT
    ( R0! = .Ref Void: data
  ) ),

  WindowSupportExternal_Free =
  ( NUMBER 0x82887,
    ENTRY
    ( R0 = .Bits: flags,
      R1 # 5 "Frees memory via window module",
      R2 = .Ref Void: data
  ) ),

  WindowSupportExternal_Realloc =
  ( NUMBER 0x82887,
    ENTRY
    ( R0 = .Bits: flags,
      R1 # 6 "Extends memory allocated via window module",
      R2 = .Ref Void: data,
      R3 = .Int: size_increase
    ),
    EXIT
    ( R0! = .Ref Void: data_out
  ) )
