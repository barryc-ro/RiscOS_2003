TITLE TextArea;

AUTHOR "Tom Hughes, tom@compton.nu, 14 Mar 1999";

NEEDS OS;
NEEDS Toolbox;
NEEDS Gadget;

CONST
   Class_TextArea = Toolbox_Class: 0x4018;

TYPE
   TextArea_Gadget =
   .Struct
   (  .Int: type,
      .Int: event,
      .Ref .String: text,
      OS_Colour: foreground,
      OS_Colour: background
   ),
   TextArea_Object =
   .Struct: Gadget_Object
   (  .Int: type,
      .Int: event,
      .Ref .String: text,
      OS_Colour: foreground,
      OS_Colour: background
   );

TYPE
   TextArea_State = .Bits;

CONST
   TextArea_StateHasVerticalScrollbar   = TextArea_State: 0x1,
   TextArea_StateHasHorizontalScrollbar = TextArea_State: 0x2,
   TextArea_StateWordwrappingEnabled    = TextArea_State: 0x4;
// TV V6.20 Additional state flags by Rik Griffin
CONST
   TextArea_AllowSelection		= TextArea_State: 0x8,
   TextArea_AllowSave		        = TextArea_State: 0x10,
   TextArea_AllowLoad		        = TextArea_State: 0x20,
   TextArea_Clipboard		        = TextArea_State: 0x40,
   TextArea_AutoScroll		        = TextArea_State: 0x80;

TYPE
   TextArea_GetSelectionFlags = .Bits;

CONST
   TextArea_GetSelectionReturnText = TextArea_GetSelectionFlags: 0x1;

TYPE
   TextArea_SetColourFlags = .Bits;

CONST
   TextArea_SetColourDesktop = TextArea_SetColourFlags: 0x1;

TYPE
   TextArea_Colour =
   .Union
   (  OS_Colour: real,
      Wimp_Colour: desktop
   );

SWI
   TextArea_GetState =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
	 R1 = Toolbox_O: window,
	 R2 # 0x4018 "Reads the state of the TextArea",
	 R3 = Toolbox_C: text_area
      ),
      EXIT
      (  R0! = TextArea_State: state
   )  ),

   TextArea_SetState =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
	 R1 = Toolbox_O: window,
	 R2 # 0x4019 "Sets the state of the TextArea",
	 R3 = Toolbox_C: text_area,
         R4 = TextArea_State: state
   )  ),

   TextArea_SetText =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
	 R1 = Toolbox_O: window,
	 R2 # 0x401A "Sets the text displayed in the TextArea",
	 R3 = Toolbox_C: text_area,
         R4 -> .String: text
   )  ),

   TextArea_GetTextSize =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
	 R1 = Toolbox_O: window,
	 R2 # 0x401B "Reads size of text displayed in the TextArea",
	 R3 = Toolbox_C: text_area,
	 R4 # 0
      ),
      EXIT
      (  R5! = .Int: buffer_size
   )  ),

   TextArea_GetText =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
	 R1 = Toolbox_O: window,
	 R2 # 0x401B "Reads the text displayed in the TextArea",
	 R3 = Toolbox_C: text_area,
	 R4 = .Ref .String: buffer,
	 R5 = .Int: buffer_size
      ),
      EXIT
      (  R5! = .Int: length
   )  ),

   TextArea_InsertText =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
	 R1 = Toolbox_O: window,
	 R2 # 0x401C "Inserts text into the text displayed in the TextArea",
	 R3 = Toolbox_C: text_area,
	 R4 = .Int: insert_at,
         R5 -> .String: text
   )  ),

   TextArea_ReplaceText =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
	 R1 = Toolbox_O: window,
	 R2 # 0x401D "Replaces a portion of the text displayed in the TextArea",
	 R3 = Toolbox_C: text_area,
	 R4 = .Int: start,
	 R5 = .Int: end,
         R6 -> .String: text
   )  ),

   TextArea_GetSelection =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = TextArea_GetSelectionFlags: flags,
         R1 = Toolbox_O: window,
	 R2 # 0x401E "Gets the selection details for the TextArea",
	 R3 = Toolbox_C: text_area
      ),
      EXIT
      (  R4 = .Int: start,
         R5 = .Int: end
   )  ),

   TextArea_GetSelectionTextSize =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 # TextArea_GetSelectionReturnText,
	 R0 | TextArea_GetSelectionFlags: flags,
         R1 = Toolbox_O: window,
	 R2 # 0x401E "Gets the size of the selected text for the TextArea",
	 R3 = Toolbox_C: text_area,
	 R4 # 0
      ),
      EXIT
      (  R5! = .Int: buffer_size
   )  ),

   TextArea_GetSelectionText =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 # TextArea_GetSelectionReturnText,
	 R0 | TextArea_GetSelectionFlags: flags,
         R1 = Toolbox_O: window,
	 R2 # 0x401E "Gets the selected text for the TextArea",
	 R3 = Toolbox_C: text_area,
	 R4 = .Ref .String: buffer,
	 R5 = .Int: buffer_size
      ),
      EXIT
      (  R5! = .Int: length
   )  ),

   TextArea_SetSelection =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
	 R2 # 0x401F "Sets the selection details for the TextArea",
	 R3 = Toolbox_C: text_area,
         R4 = .Int: start,
	 R5 = .Int: end
   )  ),

   TextArea_SetFont =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 0x4020 "Sets the font details for the TextArea",
         R3 = Toolbox_C: text_area,
         R4 -> .String: font_name,
         R5 = .Int: width,
         R6 = .Int: height
   )  ),

   TextArea_SetColour =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = TextArea_SetColourFlags: flags,
         R1 = Toolbox_O: window,
         R2 # 0x4021 "Sets the foreground and background colours of the TextArea",
         R3 = Toolbox_C: text_area,
         R4 = TextArea_Colour: foreground,
         R5 = TextArea_Colour: background
   )  ),

   TextArea_GetColour =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
	 R1 = Toolbox_O: window,
	 R2 # 0x4022 "Gets the foreground and background colours of the TextArea",
	 R3 = Toolbox_C: text_area
      ),
      EXIT
      (  R0 = OS_Colour: foreground,
	 R1 = OS_Colour: background
   )  ),

   TextArea_SetTextBorder =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
	 R1 = Toolbox_O: window,
	 R2 # 0x4023 "Sets the border width of the TextArea",
	 R3 = Toolbox_C: text_area,
	 R4 = .Int: border_size
   )  )
