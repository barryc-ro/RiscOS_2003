TITLE FileInfo;

NEEDS Toolbox, Window;

CONST Class_FileInfo = Toolbox_Class: 0x82ac0;

CONST
   //errors
   Error_FileInfoTasksActive        = .Bits: 0x80B200,
   Error_FileInfoAllocFailed        = .Bits: 0x80B201,
   Error_FileInfoShortBuffer        = .Bits: 0x80B202,
   Error_FileInfoNoSuchTask         = .Bits: 0x80B211,
   Error_FileInfoNoSuchMethod       = .Bits: 0x80B212,
   Error_FileInfoNoSuchMiscOpMethod = .Bits: 0x80B213;

CONST
   //flags
   FileInfo_GenerateAboutToBeShown    = FileInfo_Flags: %1,
   FileInfo_GenerateDialogueCompleted = FileInfo_Flags: %10;

TYPE FileInfo_Flags = .Bits;

TYPE
   FileInfo_Object =
      .Struct
      (  FileInfo_Flags: flags,
         .Ref .String: title,
         .Int: title_limit,
         .Bool: modified,
         .Bits: file_type,
         .Ref .String: file_name,
         .Int: file_size,
         OS_DateAndTime: date_and_time,
         [3] .Byte: reserved,
         .Ref .String: alternative_window_name
      );

//Toolbox events
CONST
   Action_FileInfoAboutToBeShown    = .Bits: 0x82AC0,
   Action_FileInfoDialogueCompleted = .Bits: 0x82AC1;

TYPE
   FileInfo_Full = Toolbox_Full,
   FileInfo_ActionAboutToBeShown =
      .Struct
      (  Toolbox_PositionTag: tag,
         .Union
         (  FileInfo_Full: full,
            OS_Coord: top_left
         ): position
      );

//Components
CONST
   FileInfo_Date          = Toolbox_C: 0x82AC01,
   FileInfo_FileSize      = Toolbox_C: 0x82AC02,
   FileInfo_FileName      = Toolbox_C: 0x82AC03,
   FileInfo_FileType      = Toolbox_C: 0x82AC04,
   FileInfo_Modified      = Toolbox_C: 0x82AC05,
   FileInfo_FileIcon      = Toolbox_C: 0x82AC06,
   FileInfo_DateLabel     = Toolbox_C: 0x82AC07,
   FileInfo_FileSizeLabel = Toolbox_C: 0x82AC08,
   FileInfo_ModifiedLabel = Toolbox_C: 0x82AC09,
   FileInfo_FileTypeLabel = Toolbox_C: 0x82AC0A;

SWI
   FileInfo_ClassSWI =
   (  NUMBER 0x82AC0*,
      ENTRY
      (  R0 = .Int: rc
         //0 => create_object,
         // R1 = Object ID
         // R2 = 0  (will be internal handle for other SWIs
         // R3 = wimp task handle of caller (use to identify task descriptor)
         // R4 -> user regs R0-R9
         //      R0 = flags
         //           bit 0 set => create from memory
         //      R1 -> description block

         //1 => delete_object,
         // R1 = Object ID
         // R2 = internal handle returned when Object was created
         // R3 = wimp task handle of caller (use to identify task descriptor)
         // R4 -> user regs R0-R9
         //      R0 = flags
         //           bit 0 set => do not recursively delete the object
         //      R1 = Object ID

         //2 => copy_object,
         // R1 = Object ID
         // R2 = internal handle returned when "src" Object was created
         // R3 = wimp task handle of caller (use to identify task descriptor)
         // R4 -> user regs R0-R9:
         //      R0 = flags
         //           bit 0 set => do not recursively copy the Object
         //      R1 = source Object ID

         //3 => show_object,
         // R1 = Object ID
         // R2 = internal handle returned when Object was created
         // R3 = wimp task handle of caller (use to identify task descriptor)
         // R4 -> user regs R0-R9
         //      R0 =  flags
         //      R1 =  Object ID
         //      R2 =  "show type"
         //            0 => default place
         //            1 => R3 points to buffer with full data for showing
         //            2 => R3 points to buffer with coordinates
         //      R3 = 0
         //   OR R3 -> buffer giving Object-specific data for showing this
         //            Object
         //      R4 =  Parent Object ID
         //      R5 =  Parent Component ID

         //4 => hide_object,
         // R1 = Object ID
         // R2 = internal handle returned when Object was created
         // R3 = wimp task handle of caller (use to identify task descriptor)
         // R4 -> user regs R0-R9
         //      R0 =  flags
         //      R1 =  Object ID

         //5 => getstate_object,
         // R1 = Object ID
         // R2 = internal handle returned when Object was created
         // R3 = wimp task handle of caller (use to identify task descriptor)
         // R4 -> user regs R0-R9
         //      R0 =  flags
         //      R1 =  Object ID

         //6 => miscop_object
         // R1 = Object ID
         // R2 = internal handle returned when Object was created
         // R3 = wimp task handle of caller (use to identify task descriptor)
         // R4 -> user regs R0-R9
         //      R0 =  flags
         //      R1 =  Object ID
         //      R2 =  method code
         //      R3-R9 method-specific data
      ),
      ABSENT
   ),

   FileInfo_PostFilter =
   (  NUMBER 0x82AC1*,
      ENTRY
      (  R0 = .Bits: action,
         R1 -> Wimp_Block: block,
         R2 = Wimp_T: task,
         R3 = .Ref Void: workspace
      ),
      ABSENT
   ),

   FileInfo_PreFilter =
   (  NUMBER 0x82AC2*,
      ENTRY  
      (  R0 = .Bits: mask,
         R1 -> Wimp_Block: block,
         R2 = Wimp_T: task,
         R2 = .Ref Void: workspace
      ),
      ABSENT
   );

SWI
   FileInfo_GetWindowId =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 0 "Gets the underlying window object ID for the specified file info object"
      ),
      EXIT
      (  R0! = Toolbox_O: window
   )  ),

   FileInfo_SetModified =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 1 "Sets the modified flag for the specified file info object",
         R3 = .Bool: modified
   )  ),

   FileInfo_GetModified =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 2 "Gets the modified flag for the specified file info object"
      ),
      EXIT
      (  R0! = .Bool: modified
   )  ),

   FileInfo_SetFileType =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 3 "Sets the file type for the specified file info object",
         R3 = .Bits: file_type
   )  ),

   FileInfo_GetFileType =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 4 "Gets the file type for the specified file info object"
      ),
      EXIT
      (  R0! = .Bits: file_type
   )  ),

   FileInfo_SetFileName =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 5 "Sets the file name for the specified file info object",
         R3 -> .String: file_name
   )  ),

   FileInfo_GetFileName =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 6 "Gets the file name from the specified file info object",
         R3 = .Ref .String: buffer,
         R4 = .Int: size
      ),
      EXIT
      (  R4! = .Int: used
   )  ),

   FileInfo_SetFileSize =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 7 "Sets the file size for the specified file info object",
         R3 = .Int: file_size
   )  ),

   FileInfo_GetFileSize =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 8 "Gets the file size from the specified file info object"
      ),
      EXIT
      (  R0! = .Int: file_size
   )  ),

   FileInfo_SetDate =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 9 "Sets the date and time for the specified file info object",
         R3 -> OS_DateAndTime: date_and_time
   )  ),

   FileInfo_GetDate =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 10 "Gets the date and time for the specified file info object",
         R3 = .Ref OS_DateAndTime: date_and_time
   )  ),

   FileInfo_SetTitle =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 11 "Sets the title for the specified file info object",
         R3 -> .String: title
   )  ),

   FileInfo_GetTitle =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: file_info,
         R2 # 12 "Gets the title from the specified file info object",
         R3 = .Ref .String: buffer,
         R4 = .Int: size
      ),
      EXIT
      (  R4! = .Int: used
   )  )
