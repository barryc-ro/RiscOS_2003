TITLE ProgInfo;

NEEDS Toolbox, Window;

CONST Class_ProgInfo = Toolbox_Class: 0x82b40;

CONST
   ProgInfo_GenerateAboutToBeShown    = ProgInfo_Flags:  0x00000001,
   ProgInfo_GenerateDialogueCompleted = ProgInfo_Flags:  0x00000002,
   ProgInfo_IncludeLicenceType        = ProgInfo_Flags:  0x00000004;

TYPE ProgInfo_Flags = .Bits;

TYPE ProgInfo_Object = .Struct (ProgInfo_Flags: flags, .Ref .String: title,
      .Int: title_limit, .Ref .String: purpose, .Ref .String: author,
      .Int: licence_type, .Ref .String: version,
      .Ref .String: alternative_window_name);

CONST
   ProgInfo_Name         = Toolbox_C: 0x82B400,
   ProgInfo_Purpose      = Toolbox_C: 0x82B401,
   ProgInfo_Author       = Toolbox_C: 0x82B402,
   ProgInfo_LicenceType  = Toolbox_C: 0x82B403,
   ProgInfo_Version      = Toolbox_C: 0x82B404,
   ProgInfo_NameLabel    = Toolbox_C: 0x82B405,
   ProgInfo_PurposeLabel = Toolbox_C: 0x82B406,
   ProgInfo_AuthorLabel  = Toolbox_C: 0x82B407,
   ProgInfo_LicenceLabel = Toolbox_C: 0x82B408,
   ProgInfo_VersionLabel = Toolbox_C: 0x82B409;

CONST
   ProgInfo_LicencePublicDomain = .Int: 0,
   ProgInfo_LicenceSingleUser = .Int: 1,
   ProgInfo_LicenceSingleMachine = .Int: 2,
   ProgInfo_LicenceSite = .Int: 3,
   ProgInfo_LicenceNetwork = .Int: 4,
   ProgInfo_LicenceAuthority = .Int: 5;

CONST
   Action_ProgInfoAboutToBeShown = .Bits: 0x82b40,
   Action_ProgInfoDialogueCompleted = .Bits: 0x82b41;

TYPE
   ProgInfo_Full = Toolbox_Full,
   ProgInfo_ActionAboutToBeShown = .Struct
      (  Toolbox_PositionTag: tag,
         .Union
         (  ProgInfo_Full: full,
            OS_Coord: top_left
         ): position
      );

CONST
   Error_ProgInfoTasksActive        = .Bits: 0x0080B400,
   Error_ProgInfoAllocFailed        = .Bits: 0x0080B401,
   Error_ProgInfoShortBuffer        = .Bits: 0x0080B402,
   Error_ProgInfoNoSuchTask         = .Bits: 0x0080B411,
   Error_ProgInfoNoSuchMethod       = .Bits: 0x0080B412,
   Error_ProgInfoNoSuchMiscOpMethod = .Bits: 0x0080B413;

SWI
   ProgInfo_ClassSWI = (NUMBER 0x82B40*, ABSENT),
   ProgInfo_PostFilter = (NUMBER 0x82B41*, ABSENT),
   ProgInfo_PreFilter = (NUMBER 0x82B42*, ABSENT),

   ProgInfo_GetWindowID =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: prog_info,
         R2 # 0*
      ),
      EXIT
      (  R0! = Toolbox_O: window
   )  ),
   ProgInfo_SetVersion =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: prog_info,
         R2 # 1*,
         R3 -> .String: version
   )  ),
   ProgInfo_GetVersion =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: prog_info,
         R2 # 2*,
         R3 = .Ref .String: buffer,
         R4 = .Int: size
      ),
      EXIT
      (  R4! = .Int: used
   )  ),
   ProgInfo_SetLicenceType =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: prog_info,
         R2 # 3*,
         R3 = .Int: licence_type
   )  ),
   ProgInfo_GetLicenceType =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: prog_info,
         R2 # 4*
      ),
      EXIT
      (  R0! = .Int: licence_type
   )  ),
   ProgInfo_SetTitle =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: prog_info,
         R2 # 5*,
         R3 -> .String: title
   )  ),
   ProgInfo_GetTitle =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: prog_info,
         R2 # 6*,
         R3 = .Ref .String: buffer,
         R4 = .Int: size
      ),
      EXIT
      (  R4! = .Int: used
   )  )
