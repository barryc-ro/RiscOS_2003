TITLE StringSet;

NEEDS Toolbox, Gadget;

CONST StringSet_Class = Toolbox_Class: 896;

TYPE StringSet_Object = .Struct (.Ref .String: string_set,
      .Ref .String: title,
      .Ref .String: initial_selected_string,
      .Int: selected_string_limit, .Ref .String: allowable,
      .Int: allowable_limit, Toolbox_C: prev, Toolbox_C: next);

CONST
   StringSet_GenerateUserValueChanged = Gadget_Flags: 0x00000001,
   StringSet_GenerateSetValueChanged  = Gadget_Flags: 0x00000002,
   StringSet_Writable                 = Gadget_Flags: 0x00000004,
   StringSet_GenerateAboutToBeShown   = Gadget_Flags: 0x00000008,
   StringSet_NoDisplay                = Gadget_Flags: 0x00000010,
   StringSet_Justification            = Gadget_Flags: 0x00000060,
   StringSet_JustificationShift       = .Int: 5,
   StringSet_JustificationLeft        = .Bits: 0,
   StringSet_JustificationRight       = .Bits: 1,
   StringSet_JustificationCentred     = .Bits: 2;

CONST
   StringSet_GetAlphanumericField = .Bits: 0x00000001,
   StringSet_GetPopUpMenu = .Bits: 0x00000002;

CONST Action_StringSetValueChanged = .Bits: 0x8288E,
   Action_StringSetAboutToBeShown  = .Bits: 0x8288F;

TYPE
   StringSet_ActionValueChanged = .Struct ([216] .Char: value);

CONST StringSet_ValueTooLong = .Bits: 0x00000001;

SWI
   StringSet_SetAvailable =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 896*,
         R3 = Toolbox_C: string_set,
         R4 -> .String: set
   )  ),
// StringSet_GetAvailable =
// (  NUMBER 0x44EC6,
//    ENTRY
//    (  R0 = .Bits: flags,
//       R1 = Toolbox_O: window,
//       R2 # 897*,
//       R3 = Toolbox_C: string_set,
//       R4 = .Ref .String: buffer,
//       R5 = .Int: size
//    ),
//    EXIT
//    (  R5! = .Int: used
// )  ),
   StringSet_SetSelected = (NUMBER 0x44EC6, ENTRY (R2 # 898*), ABSENT),
   StringSetSetSelected_String =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 # 0*,
         R0 | .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 898,
         R3 = Toolbox_C: string_set,
         R4 -> .String: selection
   )  ),
   StringSetSetSelected_Index =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 # 1*,
         R0 | .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 898,
         R3 = Toolbox_C: string_set,
         R4 = .Int: index
   )  ),
   StringSet_GetSelected = (NUMBER 0x44EC6, ENTRY (R2 # 899*), ABSENT),
   StringSetGetSelected_String =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 # 0*,
         R0 | .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 899,
         R3 = Toolbox_C: string_set,
         R4 = .Ref .String: buffer,
         R5 = .Int: size
      ),
      EXIT
      (  R5! = .Int: used
   )  ),
   StringSetGetSelected_Index =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 # 1*,
         R0 | .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 899,
         R3 = Toolbox_C: string_set
      ),
      EXIT
      (  R0! = .Int: index
   )  ),
   StringSet_SetAllowable =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 900*,
         R3 = Toolbox_C: string_set,
         R4 -> .String: allowable
   )  ),
// StringSet_GetAllowable =
// (  NUMBER 0x44EC6,
//    ENTRY
//    (  R0 = .Bits: flags,
//       R1 = Toolbox_O: window,
//       R2 # 901*,
//       R3 = Toolbox_C: string_set,
//       R4 = .Ref .String: buffer,
//       R5 = .Int: size
//    ),
//    EXIT
//    (  R5! = .Int: used
// )  ),
   StringSet_GetComponents =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 902*,
         R3 = Toolbox_C: string_set
      ),
      EXIT
      (  R0 = Toolbox_C: alphanumeric_field,
         R1 = Toolbox_C: popup_menu
   )  )
