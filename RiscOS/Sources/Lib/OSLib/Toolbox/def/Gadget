TITLE Gadget;

NEEDS Toolbox;

TYPE Gadget_Flags = .Bits;

CONST
   Gadget_Faded  = Gadget_Flags: &80000000,
   Gadget_AtBack = Gadget_Flags: &40000000;

TYPE
   Gadget_Header = .Struct
      (  Gadget_Flags: flags,
         .Short: type,
         .Short: size,
         OS_Box: bbox,
         Toolbox_C: cmp,
         .Ref .String: help_message,
         .Int: help_limit
      );

TYPE
   Gadget_Object = .Struct
      (  Gadget_Flags: flags,
         .Short: type,
         .Short: size,
         OS_Box: bbox,
         Toolbox_C: cmp,
         .Ref .String: help_message,
         .Int: help_limit,
         .Byte: body ...
      );

CONST
  Gadget_NoHandler  	= .Bits: 0,
  Gadget_DefaultHandler = .Bits: 1,
  Gadget_PrivateHandler = .Bits: 2;
TYPE
  Gadget_Feature	= .Bits;
CONST
  Gadget_FeatureAddShift    	= .Int: 0,
  Gadget_FeatureAdd    	    	= Gadget_Feature: 0x03,
  Gadget_FeatureRemoveShift    	= .Int: 2,
  Gadget_FeatureRemove 	    	= Gadget_Feature: 0x0C,
  Gadget_FeaturePostAddShift   	= .Int: 4,
  Gadget_FeaturePostAdd	    	= Gadget_Feature: 0x30,
  Gadget_FeatureMethodShift 	= .Int: 6,
  Gadget_FeatureMethod	 	= Gadget_Feature: 0xC0,
  Gadget_FeatureClickShift  	= .Int: 10,
  Gadget_FeatureClick	  	= Gadget_Feature: 0x0C00,
  Gadget_FeaturePlotShift   	= .Int: 16,
  Gadget_FeaturePlot	   	= Gadget_Feature: 0x030000,
  Gadget_FeatureSetFocusShift	= .Int: 18,
  Gadget_FeatureSetFocus	= Gadget_Feature: 0x0C0000,
  Gadget_FeatureMoveShift   	= .Int: 20,
  Gadget_FeatureMove	   	= Gadget_Feature: 0x300000,
  Gadget_FeatureFadeShift   	= .Int: 22,
  Gadget_FeatureFade	   	= Gadget_Feature: 0xC00000;

TYPE Gadget_Extension = .Struct
   (  .Int: type,
      Gadget_Flags: valid_flags,
      Gadget_Feature: features
   );

TYPE Gadget_ExtensionList = .Struct (Gadget_Extension: gadget "List of
      gadgets, terminated by -1" ...);

SWI
   Gadget_GetFlags =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 0x40 "Gets the flags for a particular gadget",
         R3 = Toolbox_C: gadget
      ),
      EXIT
      (  R0! = Gadget_Flags: flags_out
   )  ),

   Gadget_SetFlags =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 0x41 "Sets the flags for a particular gadget",
         R3 = Toolbox_C: gadget,
         R4 = Gadget_Flags: flags_in
   )  ),

   Gadget_SetHelpMessage =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 0x42 "Sets the help message for a particular gadget",
         R3 = Toolbox_C: gadget,
         R4 -> .String: help_message
   )  ),

   Gadget_GetHelpMessage =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 0x43 "Gets the help message that is associated with a
               particular gadget",
         R3 = Toolbox_C: gadget,
         R4 = .Ref .String: help_message,
         R5 = .Int: size
      ),
      EXIT
      (  R5! = .Int: used
   )  ),

   Gadget_GetIconList =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 0x44 "Gets the list of icon handles that are associated with a
               gadget",
         R3 = Toolbox_C: gadget,
         R4 = .Ref Wimp_I: buffer,
         R5 = .Int: size
      ),
      EXIT
      (  R5! = .Int: used
   )  ),

   Gadget_SetFocus =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 0x45 "Sets the type for the specified gadget",
         R3 = Toolbox_C: gadget
   )  ),

   Gadget_GetType =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 0x46 "Gets the type for the specified gadget",
         R3 = Toolbox_C: gadget
      ),
      EXIT
      (  R0! = .Int: type
   )  ),

   Gadget_MoveGadget =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 0x47 "Moves an already created gadget in the specified
               window",
         R3 = Toolbox_C: gadget,
         R4 -> OS_Box: bbox
   )  ),

   Gadget_GetBBox =
   (  NUMBER 0x44EC6,
      ENTRY
      (  R0 = .Bits: flags,
         R1 = Toolbox_O: window,
         R2 # 72 "Gets the bounding box of a gadget",
         R3 = Toolbox_C: gadget,
         R4 = .Ref OS_Box: bbox
   )  )
