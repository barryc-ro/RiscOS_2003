TITLE MessageTrans;

NEEDS OS;

TYPE MessageTrans_ControlBlock = .Struct ([4] .Int: cb);

TYPE MessageTrans_FileFlags = .Bits;
CONST MessageTrans_DirectAccess = MessageTrans_FileFlags: 1;

CONST
   Error_MessageTransSyntax = .Bits: &AC0,
   Error_MessageTransFileOpen = .Bits: &AC1,
   Error_MessageTransTokenNotFound = .Bits: &AC2,
   Error_MessageTransRecurse = .Bits: &AC3;

SWI MessageTrans_FileInfo =
   (  NUMBER 0x41500 "Gives information about a message file",
      ENTRY (R1 -> .String: file_name),
      EXIT
      (  R0 = MessageTrans_FileFlags: flags,
         R2 = .Int: size
      )
   );

SWI MessageTrans_OpenFile =
   (  NUMBER 0x41501 "Opens a message file",
      ENTRY
      (  R0 = .Ref MessageTrans_ControlBlock: cb,
         R1 -> .String: file_name,
         R2 = .Ref .String: buffer
      )
   );

SWI
   MessageTrans_Lookup =
   (  NUMBER 0x41502 "Translates a message token into a string",
      ENTRY
      (  R0 -> MessageTrans_ControlBlock: cb,
         R1 -> .String: token,
         R2 = .Ref .String: buffer,
         R3 = .Int: size,
         R4 -> .String: arg0,
         R5 -> .String: arg1,
         R6 -> .String: arg2,
         R7 -> .String: arg3
      ),
      EXIT
      (  R2! -> .String: result,
         R3 = .Int: used
      )
   );

SWI
   MessageTrans_MakeMenus =
   (  NUMBER 0x41503 "Sets up a menu structure from a definition containing
            references to tokens",
      ENTRY
      (  R0 -> MessageTrans_ControlBlock: cb,
         R1 -> .Data: menus, //needs more work
         R2 = .Ref .String: buffer,
         R3 = .Int: size
      ),
      EXIT
      (  R3! = .Int: used
      )
   );

SWI MessageTrans_CloseFile = (NUMBER 0x41504 "Closes a message file",
      ENTRY (R0 -> MessageTrans_ControlBlock: cb));

SWI
   MessageTrans_EnumerateTokens =
   (  NUMBER 0x41505 "Enumerates tokens that match a wildcarded token",
      ENTRY
      (  R0 -> MessageTrans_ControlBlock: cb,
         R1 -> .String: token,
         R2 = .Ref .String: buffer,
         R3 = .Int: size,
         R4 = .Int: context
      ),
      EXIT
      (  R2! = .Bool: more,
         R3 = .Int: used,
         R4 = .Int: context_out 
      )
   );

SWI
   MessageTrans_ErrorLookup =
   (  NUMBER 0x41506 "Translates a message token within an error block",
      ENTRY
      (  R0 -> OS_Error: error,
         R1 -> MessageTrans_ControlBlock: cb,
         R2 = .Ref .String: buffer,
         R3 = .Int: size,
         R4 -> .String: arg0,
         R5 -> .String: arg1,
         R6 -> .String: arg2,
         R7 -> .String: arg3
      )
   );

SWI
   MessageTrans_GSLookup =
   (  NUMBER 0x41507 "Translates a message token into a string and calls
            OS_GSTrans",
      ENTRY
      (  R0 -> MessageTrans_ControlBlock: cb,
         R1 -> .String: token,
         R2 = .Ref .String: buffer,
         R3 = .Int: size,
         R4 -> .String: arg0,
         R5 -> .String: arg1,
         R6 -> .String: arg2,
         R7 -> .String: arg3
      ),
      EXIT
      (  R3! = .Int: used
      )
   );

SWI
   MessageTrans_CopyError =
   (  NUMBER 0x41508 "Copies an error into one of the MessageTrans internal
            buffers",
      ENTRY (R0 -> OS_Error: error),
      EXIT (R0! -> OS_Error: copy)
   );

SWI
   MessageTrans_Dictionary =
   (  NUMBER 0x41509 "Returns a pointer to MessageTrans's internal dictionary",
      EXIT (R0! -> .Data: dictionary)
   );

SWI Service_MessageFileClosed = (NUMBER 0x30, ENTRY (R1 # 0x5E "Message files
      have been closed", R0 -> MessageTrans_ControlBlock: cb))
