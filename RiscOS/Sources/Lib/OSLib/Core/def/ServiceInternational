TITLE ServiceInternational;

NEEDS OS;

CONST
   Error_UnknownAlphabet = .Bits: 0x640 "Unknown alphabet",
   Error_UnknownCountry  = .Bits: 0x641 "Unknown country",
   Error_UnknownKeyboard = .Bits: 0x642 "Unknown keyboard";

SWI
   Service_International = (NUMBER 0x30, ENTRY (R1 # 0x43 "International
         service -
      see individual reason codes"), ABSENT),
   ServiceInternational_CountryNameToCountryNumber =
      (NUMBER 0x30, ENTRY (R1 # 0x43, R2 # 0 "Converts country name to
      country number", R3 -> .String: country_name),
      EXIT (R1! = .Bool: unclaimed, R4 = .Int: country_no)),
   ServiceInternational_AlphabetNameToAlphabetNumber =
      (NUMBER 0x30, ENTRY (R1 # 0x43, R2 # 1 "Converts alphabet name to
      alphabet number", R3 -> .String: alphabet_name),
      EXIT (R1! = .Bool: unclaimed, R4 = .Int: alphabet_no)),
   ServiceInternational_CountryNumberToCountryName =
      (NUMBER 0x30, ENTRY (R1 # 0x43, R2 # 2 "Converts country number to
      country name", R3 = .Int: country_no,
      R4 = .Ref .String: buffer, R5 = .Int: size),
      EXIT (R1! = .Bool: unclaimed, R5 = .Int: used)),
   ServiceInternational_AlphabetNumberToAlphabetName =
      (NUMBER 0x30, ENTRY (R1 # 0x43, R2 # 3 "Converts alphabet number to
      alphabet name", R3 = .Int: alphabet_no,
      R4 = .Ref .String: buffer, R5 = .Int: size),
      EXIT (R1! = .Bool: unclaimed, R5 = .Int: used)),
   ServiceInternational_CountryNumberToAlphabetNumber =
      (NUMBER 0x30, ENTRY (R1 # 0x43, R2 # 4 "Converts country number to
      alphabet number", R3 = .Int: country_no),
      EXIT (R1! = .Bool: unclaimed, R4 = .Int: alphabet_no)),
   ServiceInternational_DefineChars =
      (NUMBER 0x30, ENTRY (R1 # 0x43, R2 # 5 "Defines a range of characters
      from a given alphabet number", R3 = .Int: alphabet_no,
      R4 = .Byte: first, R5 = .Byte: last), EXIT (R1! = .Bool: unclaimed)),
   ServiceInternational_NewKeyboard =
      (NUMBER 0x30, ENTRY (R1 # 0x43, R2 # 6 "Notification of a new
      keyboard selection", R3 = .Int: keyboard_no,
      R4 = .Int: alphabet_no))
