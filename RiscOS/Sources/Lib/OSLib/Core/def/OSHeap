TITLE OSHeap;
AUTHOR "Jonathan Coxhead, jonathan@doves.demon.co.uk, 12 June 1996";

NEEDS OS;

CONST
   //Heap errors
   Error_HeapBadReason = .Bits: &180,
   Error_HeapInit = .Bits: &181,
   Error_HeapBadDesc = .Bits: &182,
   Error_HeapBadLink = .Bits: &183,
   Error_HeapAlloc = .Bits: &184,
   Error_HeapNotABlock = .Bits: &185,
   Error_HeapBadExtend = .Bits: &186,
   Error_HeapExcessiveShrink = .Bits: &187,
   Error_HeapHeapLocked = .Bits: &188;

SWI OS_Heap = (NUMBER 0x1D "Performs various operations on a heap -
      see individual reason codes (PRM 1-368, 5a-41):
      	 0 - OSHeap_Initialise,
      	 1 - OSHeap_Describe,
      	 2 - OSHeap_Alloc,
      	 3 - OSHeap_Free,
      	 4 - OSHeap_Realloc,
      	 5 - OSHeap_Resize,
      	 6 - OSHeap_ReadSize",
      	       ABSENT);

SWI OSHeap_Initialise =
   (  NUMBER &1D,
      ENTRY
      (  R0 # 0 "Initialises a heap (PRM 1-370)",
         R1 = .Ref .Data: heap,
         R3 = .Int: size
      )
   );

SWI OSHeap_Describe =
   (  NUMBER &1D,
      ENTRY
      (  R0 # 1 "Describes a heap (PRM 1-371)",
         R1 -> .Data: heap
      ),
      EXIT
      (  R2 = .Int: max,
         R3! = .Int: free
      )
   );

SWI OSHeap_Alloc =
   (  NUMBER &1D,
      ENTRY
      (  R0 # 2 "Gets a heap block (PRM 1-372)",
         R1 = .Ref .Data: heap,
         R3 = .Int: size
      ),
      EXIT
      (  R2! = .Ref Void: blk
      )
   );

SWI OSHeap_Free =
   (  NUMBER &1D,
      ENTRY
      (  R0 # 3 "Frees a heap block (PRM 1-373)",
         R1 = .Ref .Data: heap,
         R2 = .Ref Void: blk
      )
   );

SWI OSHeap_Realloc =
   (  NUMBER &1D,
      ENTRY
      (  R0 # 4 "Extends or shrinks a heap block (PRM 1-374)",
         R1 = .Ref .Data: heap,
         R2 = .Ref Void: blk,
         R3 = .Int: size_increase
      ),
      EXIT
      (  R2! = .Ref Void: blk_out
      )
   );

SWI OSHeap_Resize =
   (  NUMBER &1D,
      ENTRY
      (  R0 # 5 "Extends or shrinks a heap (PRM 1-375)",
         R1 = .Ref .Data: heap,
         R3 = .Int: size_increase
      )
   );

SWI OSHeap_ReadSize =
   (  NUMBER &1D,
      ENTRY
      (  R0 # 6 "Reads a heap block size (PRM 1-376)",
         R1 -> .Data: heap,
         R2 = .Ref Void: blk
      ),
      EXIT
      (  R3! = .Int: size
      )
   )
