TITLE OSReadSysInfo;

NEEDS OS;

CONST
   OSReadSysInfo_SpecialFunction      = .Bits: 0xFF,
   OSReadSysInfo_SpecialFunctionShift = .Int: 0,
   OSReadSysInfo_SpecialFunctionNone  = .Bits: 0,
   OSReadSysInfo_SpecialFunctionIOEB  = .Bits: 1,
   OSReadSysInfo_IOControl            = .Bits: 0xFF00,
   OSReadSysInfo_IOControlShift       = .Int: 8,
   OSReadSysInfo_IOControlIOC         = .Bits: 0,
   OSReadSysInfo_IOControlIOMD        = .Bits: 1,
   OSReadSysInfo_MemoryControl        = .Bits: 0xFF0000,
   OSReadSysInfo_MemoryControlShift   = .Int: 16,
   OSReadSysInfo_MemoryControlMEMC1   = .Bits: 0,
   OSReadSysInfo_MemoryControlIOMD    = .Bits: 1,
   OSReadSysInfo_VideoControl         = .Bits: 0xFF000000,
   OSReadSysInfo_VideoControlShift    = .Int: 24,
   OSReadSysInfo_VideoControlVIDC1a   = .Bits: 0,
   OSReadSysInfo_VideoControlVIDC20   = .Bits: 1,

   OSReadSysInfo_IO                   = .Bits: 0xFF,
   OSReadSysInfo_IOShift              = .Int: 0,
   OSReadSysInfo_IONone               = .Bits: 0,
   OSReadSysInfo_IO82C710             = .Bits: 1,

   OSReadSysInfo_LCDControl           = .Bits: 0xFF,
   OSReadSysInfo_LCDControlShift      = .Int: 0,
   OSReadSysInfo_LCDControlNone       = .Bits: 0,
   OSReadSysInfo_LCDControlType1      = .Bits: 1;

SWI OS_ReadSysInfo = (NUMBER 0x58 "Reads system information", ABSENT);

SWI
   OSReadSysInfo_ScreenSize =
   (  NUMBER 0x58,
      ENTRY
      (  R0 # 0 "Reads the configured screen size"
      ), 
      EXIT
      (  R0! = .Int: screen_size
   )  ),

   OSReadSysInfo_Mode =
   (  NUMBER 0x58,
      ENTRY
      (  R0 # 1 "Reads the configured Mode/WimpMode, MonitorType and Sync"
      ), 
      EXIT
      (  R0! = .Int: mode,
         R1 = .Int: monitor_type,
         R2 = .Int: sync
   )  ),

   OSReadSysInfo_MachineId =
   (  NUMBER 0x58,
      ENTRY
      (  R0 # 2 "Reads the presence of various chips and unique machine id"
      ),
      EXIT
      (  R0 = .Bits: config0,
         R1 = .Bits: config1,
         R2 = .Bits: config2,
         R3 = .Bits: id_lo,
         R4 = .Bits: id_hi
   )  ),

   OSReadSysInfo_71XFeatures =
   (  NUMBER 0x58,
      ENTRY
      (  R0 # 3 "Reads features mask for 82C710 chip family"
      ), 
      EXIT
      (  R0 = .Bits: features,
         R1 = .Bits: features_extended0,
         R2 = .Bits: features_extended1,
         R3 = .Bits: features_extended2,
         R4 = .Bits: features_extended3
   )  )
