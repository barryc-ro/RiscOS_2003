TITLE NetPrint;

NEEDS OS;

CONST
   NetPrint_PSNameLimit = .Int: 256;

CONST
   NetPrint_StatusReady   = .Int: 0,
   NetPrint_StatusBusy    = .Int: 1,
   NetPrint_StatusJammed  = .Int: 2,
   NetPrint_StatusOffline = .Int: 6,
   NetPrint_StatusOpen    = .Int: 7;

CONST
   Error_NetPrintNameTooLong     = .Bits: 0x10C00, //Printer name too long
   Error_NetPrintSingleStream    = .Bits: 0x10C01, //Printer in use
   Error_NetPrintAllPrintersBusy = .Bits: 0x10C02, //No free printer of this type
   Error_NetPrintOffLine         = .Bits: 0x10C09, //Printer offline
   Error_NetPrintNotFound        = .Bits: 0x10C0a, //Printer server not found
   Error_NetPrintInternalError   = .Bits: 0x10C0b; //Fatal internal error

SWI NetPrint_ReadPSNumber =
   (  NUMBER 0x40200 "Returns the full station number of your current printer
            server",
      EXIT
      (  R0 = .Byte: station_no,
         R1 = .Byte: net_no
   )  );

SWI NetPrint_SetPSNumber =
   (  NUMBER 0x40201 "Sets the full station number used as the current
            printer server",
      ENTRY
      (  R0 = .Byte: station_no,
         R1 = .Byte: net_no
   )  );

SWI NetPrint_ReadPSName =
   (  NUMBER 0x40202 "Reads the name of your current printer server",
      ENTRY
      (  R1 = .Ref .String: buffer,
         R2 = .Int: size
      ),
      EXIT
      (  R0?,
         R1 -> .Char: end,
         R2?
   )  );

SWI NetPrint_SetPSName =
   (  NUMBER 0x40203 "Sets by name the printer server used as your current
            one",
      ENTRY
      (  R0 -> .String: ps_name
   )  );

SWI NetPrint_ReadPSTimeouts =
   (  NUMBER 0x40204 "Reads the current values for timeouts used by
            NetPrint",
      EXIT
      (  R0 = .Int: transmit_count,
         R1 = .Int: transmit_delay,
         R2 = .Int: peek_count,
         R3 = .Int: peek_delay,
         R4 = .Int: receive_delay,
         R5 = .Int: broadcast_delay
   )  );

SWI NetPrint_SetPSTimeouts =
   (  NUMBER 0x40205 "Sets the current values for timeouts used by NetPrint",
      ENTRY
      (  R0 = .Int: transmit_count,
         R1 = .Int: transmit_delay,
         R2 = .Int: peek_count,
         R3 = .Int: peek_delay,
         R4 = .Int: receive_delay,
         R5 = .Int: broadcast_delay
   )  );

SWI NetPrint_BindPSName =
   (  NUMBER 0x40206 "Converts a printer server's name to its address,
            providing it is free",
      ENTRY
      (  R0 -> .String: ps_name
      ),
      EXIT
      (  R0 = .Byte: station_no,
         R1 = .Byte: net_no
   )  );

CONST
   NetPrint_ListFormatBrief = .Int: 0,
   NetPrint_ListFormatNames = .Int: 1,
   NetPrint_ListFormatFull  = .Int: 2;

TYPE
   NetPrint_BriefEntry =
      .Struct (.Byte: station_no, .Byte: net_no,
      [NetPrint_PSNameLimit] .Char: ps_name),
   NetPrint_NameEntry =
      .Struct ([NetPrint_PSNameLimit] .Char: ps_name),
   NetPrint_FullEntry =
      .Struct (.Byte: station_no, .Byte: net_no,
            .Byte: status, .Byte: status_station_no, .Byte: status_net_no,
            [NetPrint_PSNameLimit] .Char: ps_name);

SWI NetPrint_ListServers = (NUMBER 0x40207 "Returns the names of all
      printer servers", ABSENT),
   NetPrintListServers_Brief =
   (  NUMBER 0x40207,
      ENTRY
      (  R0 # 0 "Returns the names and numbers of all printer servers",
         R1 = .Ref NetPrint_BriefEntry: entries,
         R2 = .Int: size,
         R3 = .Int: timeout
      ),
      EXIT
      (  R0 = .Int: entry_count,
         R3! = .Bool: no_more
   )  ),
   NetPrintListServers_Name =
   (  NUMBER 0x40207,
      ENTRY
      (  R0 # 1 "Returns the names of all printer servers, sorted, with
               duplicates removed",
         R1 = .Ref NetPrint_NameEntry: entries,
         R2 = .Int: size,
         R3 = .Int: timeout
      ),
      EXIT
      (  R0 = .Int: entry_count,
         R3! = .Bool: no_more
   )  ),
   NetPrintListServers_Full =
   (  NUMBER 0x40207,
      ENTRY
      (  R0 # 2 "Returns the names, numbers and status of all printer
               servers",
         R1 = .Ref NetPrint_FullEntry: entries,
         R2 = .Int: size,
         R3 = .Int: timeout
      ),
      EXIT
      (  R0 = .Int: entry_count,
         R3! = .Bool: no_more
   )  );

SWI NetPrint_ConvertStatusToString =
   (  NUMBER 0x40208 "Translates a status value returned by
            NetPrint_ListServers into the local language",
      ENTRY
      (  R0 -> .Bits: status_station_net,
         R1 = .Ref .String: buffer,
         R2 = .Int: size
      ),
      EXIT
      (  R0?,
         R1 -> .Char: end,
         R2?
   )  )
