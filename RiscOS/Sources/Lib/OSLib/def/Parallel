TITLE Parallel;

NEEDS OS;

SWI Parallel_HardwareAddress = (NUMBER 0x42EC0 "This call is for internal
      use only", ABSENT);

SWI Parallel_Op = (NUMBER 0x42EC1 "Provides low-level hardware operations",
      ABSENT);

SWI ParallelOp_Read =
   (  NUMBER 0x42EC1,
      ENTRY
      (  R0 # 0 "Reads the data and status registers"
      ),
      EXIT
      (  R1 = .Bits: data_register,
         R2 = .Bits: status_register
   )  );

SWI ParallelOp_WriteData =
   (  NUMBER 0x42EC1,
      ENTRY
      (  R0 # 1 "Writes the data register",
         R1 = .Bits: data
   )  );

SWI ParallelOp_WriteControl =
   (  NUMBER 0x42EC1,
      ENTRY
      (  R0 # 2 "Reads/writes the control register",
         R1 = .Bits: eor_mask,
         R2 = .Bits: and_mask
      ),
      EXIT
      (  R1! = .Bits: old_control,
         R2 = .Bits: new_control
   )  )
