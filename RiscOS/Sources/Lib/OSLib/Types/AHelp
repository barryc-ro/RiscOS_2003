%Int
Defined in:   Hdr:Types
Summary:      Size of an integer value in memory
Syntax:       <label> *       Int

%Bits
Defined in:   Hdr:Types
Summary:      Size of a bits value in memory
Syntax:       <label> *       Bits

%Bool
Defined in:   Hdr:Types
Summary:      Size of a boolean value in memory
Syntax:       <label> *       Bool

%Short
Defined in:   Hdr:Types
Summary:      Size of a short value in memory
Syntax:       <label> *       Short

%Char
Defined in:   Hdr:Types
Summary:      Size of a character in memory
Syntax:       <label> *       Char

%Byte
Defined in:   Hdr:Types
Summary:      Size of a byte value in memory
Syntax:       <label> *       Byte

%Ptr
Defined in:   Hdr:Types
Summary:      Size of a pointer value in memory
Syntax:       <label> *       Ptr

%Null
Defined in:   Hdr:Types
Summary:      May be used to represent a null pointer value
Syntax:       Null

%True
Defined in:   Hdr:Types
Summary:      May be used to represent a boolean value of truth
Syntax:       True

%False
Defined in:   Hdr:Types
Summary:      May be used to represent a boolean value of falsehood
Syntax:       False

%None
Defined in:   Hdr:Types
Summary:      May be used to represent a bits value of all-noughts
Syntax:       None

%All
Defined in:   Hdr:Types
Summary:      May be used to represent a bits value of all-ones
Syntax:       All

%Skip
Defined in:   Hdr:Types
Summary:      May be used as a "don't care" value
Syntax:       Skip

%C
Defined in:   Hdr:Types
Summary:      May be used to extract the C flag from a PSR bit mask
Syntax:       C

%Z
Defined in:   Hdr:Types
Summary:      May be used to extract the Z flag from a PSR bit mask
Syntax:       Z

%N
Defined in:   Hdr:Types
Summary:      May be used to extract the N flag from a PSR bit mask
Syntax:       N

%Error
Defined in:   Hdr:Types
Summary:      May be used as an error return in i/o functions
Syntax:       Error

%Inc
Defined in:   Hdr:Macros
Summary:      Macro to increment a register
Syntax:       <label> Inc     <reg>

%Dec
Defined in:   Hdr:Macros
Summary:      Macro to decrement a register
Syntax:       <label> Dec     <reg>

%Max
Defined in:   Hdr:Macros
Summary:      Macro to take the larger of two registers
Syntax:       <label> Max     <reg>, <reg>, <reg>

%Min
Defined in:   Hdr:Macros
Summary:      Macro to take the smaller of two registers
Syntax:       <label> Min     <reg>, <reg>, <reg>

%MaxAB
Defined in:   Hdr:Macros
Summary:      Macro to set a register to another if it is larger
Syntax:       <label> MaxAB   <reg>, <reg>

%MinAB
Defined in:   Hdr:Macros
Summary:      Macro to set a register to another if it is smaller
Syntax:       <label> Align   <reg>, <reg>

%Abs
Defined in:   Hdr:Macros
Summary:      Macro to take the absolute value of a register
Syntax:       <label> Abs     <reg>, <reg>

%Sgn
Defined in:   Hdr:Macros
Summary:      Macro to take the signum of a register
Syntax:       <label> Sgn     <reg>, <reg>

%Dim
Defined in:   Hdr:Macros
Summary:      Macro to take the positive difference of two registers
Syntax:       <label> Dim     <reg>, <reg>, <reg>

%Sqr
Defined in:   Hdr:Macros
Summary:      Macro to square a register
Syntax:       <label> Sqr     <reg>, <reg>

%Bool
Defined in:   Hdr:Macros
Summary:      Macro to set a register to True or False depending on whether
              another is not equal or equal to 0
Syntax:       <label> Bool    <reg>, <reg>

%Int
Defined in:   Hdr:Macros
Summary:      Macro to set a register to the value of a digit
Syntax:       <label> Int     <reg>, <reg>

%UChar
Defined in:   Hdr:Macros
Summary:      Macro to set a register to the digit corresponding to an integer
Syntax:       <label> UChar   <reg>, <reg>

%LChar
Defined in:   Hdr:Macros
Summary:      Macro to set a register to the digit corresponding to an integer
Syntax:       <label> LChar   <reg>, <reg>

%BinExp
Defined in:   Hdr:Macros
Summary:      Macro to raise 2 to the power of a register
Syntax:       <label> BinExp  <reg>, <reg>

%Align
Defined in:   Hdr:Macros
Summary:      Macro to round a value up to the next multiple of 4
Syntax:       <label> Align   <reg>, <reg>
