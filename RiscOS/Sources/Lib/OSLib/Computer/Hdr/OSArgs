;Assembler header file for OSArgs
;written by DefMod (Jun 30 1995) on Mon Aug  7 10:43:30 1995
;Jonathan Coxhead, Acorn Computers Ltd

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET OS:Hdr.Types"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_OS
        GBLS    Get_OS
        ]
        [       :LNOT: :DEF: OS_Hdr
Get_OS                          SETS    "GET OS:Hdr.OS"
        |
Get_OS                          SETS    ""
        ]
        $Get_OS

        [       :LNOT: :DEF: Get_FileSwitch
        GBLS    Get_FileSwitch
        ]
        [       :LNOT: :DEF: FileSwitch_Hdr
Get_FileSwitch                  SETS    "GET OS:Hdr.FileSwitch"
        |
Get_FileSwitch                  SETS    ""
        ]
        $Get_FileSwitch

        [       :LNOT: :DEF: OSArgs_Hdr
        GBLS    OSArgs_Hdr

;Symbols for constants
OSArgs_StreamInteractive        *       &8
OSArgs_StreamSupportsGBPB       *       &10
OSArgs_StreamDir                *       &20
OSArgs_StreamReadable           *       &40
OSArgs_StreamWritable           *       &80
OSArgs_StreamWritten            *       &100
OSArgs_StreamEOFErrorOnNextRead *       &200
OSArgs_StreamUnbuffered         *       &400
OSArgs_StreamUnallocated        *       &800
OSArgs_StreamCritical           *       &1000
OSArgs_StreamDataLost           *       &2000
OSArgs_StreamImageFileBusy      *       &4000

;Symbols for structure offsets and sizes
OSArgs_StreamStatus             *       Bits


;Symbols for SWI's and SWI reason codes
XOS_Args                        *       &20009
OS_Args                         *       &9

OSArgs_ReadPtr                  *       &0
   ;Entry
   ;  R0 = &0
   ;  R1 = file (OS_F)
   ;Exit
   ;  R2 = ptr (Int)

OSArgs_ReadTemporaryFS          *       &0
   ;Entry
   ;  R0 = &0
   ;  R1 = &0
   ;Exit
   ;  R0 = temp_fs_no (FileSwitch_FSNo)

OSArgs_SetPtr                   *       &1
   ;Entry
   ;  R0 = &1
   ;  R1 = file (OS_F)
   ;  R2 = ptr (Int)

OSArgs_ReadExt                  *       &2
   ;Entry
   ;  R0 = &2
   ;  R1 = file (OS_F)
   ;Exit
   ;  R2 = ext (Int)

OSArgs_SetExt                   *       &3
   ;Entry
   ;  R0 = &3
   ;  R1 = file (OS_F)
   ;  R2 = ext (Int)

OSArgs_ReadAllocation           *       &4
   ;Entry
   ;  R0 = &4
   ;  R1 = file (OS_F)
   ;Exit
   ;  R2 = allocation (Int)

OSArgs_ReadEOFStatus            *       &5
   ;Entry
   ;  R0 = &5
   ;  R1 = file (OS_F)
   ;Exit
   ;  R2 = eof_status (Bool)

OSArgs_SetAllocation            *       &6
   ;Entry
   ;  R0 = &6
   ;  R1 = file (OS_F)
   ;  R2 = allocation (Int)
   ;Exit
   ;  R2 = allocation_out (Int)

OSArgs_ReadPath                 *       &7
   ;Entry
   ;  R0 = &7
   ;  R1 = file (OS_F)
   ;  R2 = buffer (pointer to String)
   ;  R5 = size (Int)
   ;Exit
   ;  R5 = spare (Int)

OSArgs_ImageStamped             *       &8
   ;Entry
   ;  R0 = &8
   ;  R1 = file (OS_F)
   ;  R2 = image_stamp (Int)

OSArgs_ReadInfo                 *       &FE
   ;Entry
   ;  R0 = &FE
   ;  R1 = file (OS_F)
   ;Exit
   ;  R0 = stream_status (OSArgs_StreamStatus)
   ;  R2 = fs_info (FileSwitch_FSInfo)

OSArgs_Ensure                   *       &FF
   ;Entry
   ;  R0 = &FF
   ;  R1 = file (OS_F)

ArgsV                           *       &9

        ]
        END
