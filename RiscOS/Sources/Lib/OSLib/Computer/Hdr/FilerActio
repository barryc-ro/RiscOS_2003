;Assembler header file for FilerAction
;written by DefMod (Jun 30 1995) on Mon Aug  7 10:43:57 1995
;Jonathan Coxhead, Acorn Computers Ltd

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET OS:Hdr.Types"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_OS
        GBLS    Get_OS
        ]
        [       :LNOT: :DEF: OS_Hdr
Get_OS                          SETS    "GET OS:Hdr.OS"
        |
Get_OS                          SETS    ""
        ]
        $Get_OS

        [       :LNOT: :DEF: Get_WIMP
        GBLS    Get_WIMP
        ]
        [       :LNOT: :DEF: WIMP_Hdr
Get_WIMP                        SETS    "GET OS:Hdr.WIMP"
        |
Get_WIMP                        SETS    ""
        ]
        $Get_WIMP

        [       :LNOT: :DEF: FilerAction_Hdr
        GBLS    FilerAction_Hdr

;Symbols for constants
FilerAction_Verbose             *       &1
FilerAction_Confirm             *       &2
FilerAction_Force               *       &4
FilerAction_Newer               *       &8
FilerAction_Recurse             *       &10

;Symbols for structure offsets and sizes
FilerAction_Flags               *       Bits


;Symbols for SWI's and SWI reason codes
XFilerAction_SendSelectedDirectory *       &60F80
FilerAction_SendSelectedDirectory *       &40F80
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 -> name (String)

XFilerAction_SendSelectedFile   *       &60F81
FilerAction_SendSelectedFile    *       &40F81
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 -> leaf_name (String)

XFilerAction_SendStartOperation *       &60F82
FilerAction_SendStartOperation  *       &40F82

FilerActionSendStartOperation_Copy *       &0
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &0
   ;  R2 = flags (FilerAction_Flags)
   ;  R3 -> destination (String)
   ;  R4 = size (Int)

FilerActionSendStartOperation_MoveLocal *       &1
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &1
   ;  R2 = flags (FilerAction_Flags)
   ;  R3 -> destination (String)
   ;  R4 = size (Int)

FilerActionSendStartOperation_Delete *       &2
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &2
   ;  R2 = flags (FilerAction_Flags)
   ;  R4 = &0

FilerActionSendStartOperation_Access *       &3
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &3
   ;  R2 = flags (FilerAction_Flags)
   ;  R3 -> access (Int)
   ;  R4 = &4

FilerActionSendStartOperation_SetType *       &4
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &4
   ;  R2 = flags (FilerAction_Flags)
   ;  R3 -> file_type (Bits)
   ;  R4 = &4

FilerActionSendStartOperation_Count *       &5
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &5
   ;  R2 = flags (FilerAction_Flags)
   ;  R4 = &0

FilerActionSendStartOperation_Move *       &6
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &6
   ;  R2 = flags (FilerAction_Flags)
   ;  R3 -> destination (String)
   ;  R4 = size (Int)

FilerActionSendStartOperation_CopyLocal *       &7
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &7
   ;  R2 = flags (FilerAction_Flags)
   ;  R3 -> destination (String)
   ;  R4 = size (Int)

FilerActionSendStartOperation_Stamp *       &8
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &8
   ;  R2 = flags (FilerAction_Flags)
   ;  R4 = &0

FilerActionSendStartOperation_Find *       &9
   ;Entry
   ;  R0 = task (Wimp_T)
   ;  R1 = &9
   ;  R2 = flags (FilerAction_Flags)
   ;  R3 -> file_name (String)
   ;  R4 = size (Int)

        ]
        END
