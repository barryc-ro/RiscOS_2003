TITLE OSFind;

NEEDS OS, FileSwitch;

TYPE OSFind_Flags = .Bits;
CONST
   OSFind_Path          = OSFind_Flags: 1,
   OSFind_PathVar       = OSFind_Flags: 2,
   OSFind_NoPath        = OSFind_Flags: 3,
   OSFind_ErrorIfAbsent = OSFind_Flags: 0b1000,
   OSFind_ErrorIfDir    = OSFind_Flags: 0b100;

SWI OS_Find = (NUMBER 0xD "Opens and closes files -
      see individual reason codes", ABSENT);

SWI
   OSFind_Openin =
   (  NUMBER 13,
      ENTRY
      (  R0 # 0x40 "Opens an existing file with read access only",
         R0 | OSFind_Flags: flags,
         R1 -> .String: file_name,
         R2 -> .String: path
      ),
      EXIT (R0! = OS_F: file)
   ),

   OSFind_Openout =
   (  NUMBER 13,
      ENTRY
      (  R0 # 0x80 "Creates a new file with read/write access",
         R0 | OSFind_Flags: flags,
         R1 -> .String: file_name,
         R2 -> .String: path
      ),
      EXIT (R0! = OS_F: file)
   ),

   OSFind_Openup =
   (  NUMBER 13,
      ENTRY
      (  R0 # 0xC0 "Opens an existing file with read/write access",
         R0 | OSFind_Flags: flags,
         R1 -> .String: file_name,
         R2 -> .String: path
      ),
      EXIT (R0! = OS_F: file)
   ),

   OSFind_Close =
   (  NUMBER 13,
      ENTRY (R0 # 0 "Closes a file or files", R1 = OS_F: file)
   );

SWI FindV = (NUMBER 0x34, ENTRY (R9 # &0D "OS_Find vector - reason codes
      as OS_Find"), ABSENT);

SWI
   UpCallFind_CreateOpenup =
   (  NUMBER 0x33,
      ENTRY
      (  R0 # 3,
         R1 -> .String: file_name,
         R2 = OS_F: file,
         R6 -> .String: special,
         R8 = FileSwitch_FSInfo: fs_info,
         R9 # 257 "Warns your program that a file is being created and opened
               for update"
   )  ),
   UpCallFind_Openup =
   (  NUMBER 0x33,
      ENTRY
      (  R0 # 3,
         R1 -> .String: file_name,
         R2 = OS_F: file,
         R6 -> .String: special,
         R8 = FileSwitch_FSInfo: fs_info,
         R9 # 258 "Warns your program that a file is being opened for update"
   )  ),
   UpCallFind_Close =
   (  NUMBER 0x33,
      ENTRY
      (  R0 # 3,
         R1 = OS_F: file,
         R8 = FileSwitch_FSInfo: fs_info,
         R9 # 259 "Warns your program that a file is being closed"
   )  )
