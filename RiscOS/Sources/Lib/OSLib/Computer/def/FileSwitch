TITLE FileSwitch;

NEEDS OS;

CONST
   Error_FileSwitchNoClaim                    = .Bits: &400 "Unable to claim FileSwitch workspace",
   Error_BadFSControlReason                   = .Bits: &401 "Bad FSControl call",
   Error_BadOSFileReason                      = .Bits: &402 "Bad OSFile call",
   Error_BadOSArgsReason                      = .Bits: &403 "Bad OSArgs call",
   Error_BadOSGBPBReason                      = .Bits: &404 "Bad OSGBPB call",
   Error_BadModeForOSFind                     = .Bits: &405 "Bad mode for OSFind",
   Error_NoRoomForTransient                   = .Bits: &406 "No room to run transient",
   Error_ExecAddrNotInCode                    = .Bits: &407 "Execution address not within code",
   Error_ExecAddrTooLow                       = .Bits: &408 "Code runs too low",
   Error_UnknownActionType                    = .Bits: &409 "No run action for this file type",
   Error_TooManyLevels                        = .Bits: &40a "Too many levels",
   Error_NoSelectedFilingSystem               = .Bits: &40b "No selected filing system",
   Error_CantRemoveFSByNumber                 = .Bits: &40c "Can't remove filing system by number",
   Error_UnalignedFSEntry                     = .Bits: &40d "Unaligned filing system entry point",
   Error_UnsupportedFSEntry                   = .Bits: &40e "Filing system does not support this operation",
   Error_FSNotSpecial                         = .Bits: &40f "Filing system does not support special fields",
   Error_CoreNotReadable                      = .Bits: &410 "No readable memory at this address",
   Error_CoreNotWriteable                     = .Bits: &411 "No writable memory at this address",
   Error_BadBufferSizeForStream               = .Bits: &412 "Bad buffer size",
   Error_NotOpenForReading                    = .Bits: &413 "Not open for reading",
   Error_NotEnoughStackForFSEntry             = .Bits: &414 "Not enough stack to call filing system",
   Error_NothingToCopy                        = .Bits: &415 "Nothing to copy",
   Error_NothingToDelete                      = .Bits: &416 "Nothing to delete",
   Error_FileSwitchCantBeKilledWhilstThreaded = .Bits: &417 "FileSwitch can not be killed whilst it is threaded",
   Error_InvalidErrorBlock                    = .Bits: &418 "Invalid error block",
   Error_FSFileTooBig                         = .Bits: &419 "File too big , Clashed with ROMFS FileTooBig",
   Error_CantRMFasterFileSwitch               = .Bits: &41a "Can't RMFaster FileSwitch",
   Error_InconsistentHandleSet                = .Bits: &41b "Inconsistent handle set",
   Error_IsAFile                              = .Bits: &41c "Object is a file",
   Error_BadFileType                          = .Bits: &41d "Bad file type",
   Error_LibrarySomewhereElse                 = .Bits: &41e "The library is somewhere else",
   Error_PathIsSelfContradictory              = .Bits: &41f "Path is self contradictory",
   Error_WasntDollarAfterDisc                 = .Bits: &420 "Disc was specified, but absolute wasn't $",
   Error_NotEnoughMemoryForWildcardResolution = .Bits: &421 "Not enough memory for wildcard resolution",
   Error_NotEnoughStackForWildcardResolution  = .Bits: &422 "Not enough stack for wildcard resolution",
   Error_DirWantedFileFound                   = .Bits: &423 "Directory wanted, but file found",
   Error_NotFound                             = .Bits: &424 "Not found, &0100D6",
   Error_MultipartPathUsed                    = .Bits: &425 "Path variable had multiple entries and was used for a write operation",
   Error_RecursivePath                        = .Bits: &426 "One of the path variables used refers to itself",
   Error_MultiFSDoesNotSupportGBPB11          = .Bits: &427 "The OS_GBPB 11 call is not supported by image filing systems",
   Error_FileSwitchDataLost                   = .Bits: &428 "Data lost, &4AC , Consistent with ADFS",
   Error_TooManyErrorLookups                  = .Bits: &429 "Too many error lookups happening at once - recursion assumed",
   Error_MessageFileBusy                      = .Bits: &42a "FileSwitch message file busy",
   Error_PartitionBusy                        = .Bits: &42b "Partition not ready";

TYPE FileSwitch_FSNo = .Byte;
CONST
   FileSwitch_FSNumberNone        = FileSwitch_FSNo:  0,
   FileSwitch_FSNumberROMFS       = FileSwitch_FSNo:  3,
   FileSwitch_FSNumberNETFS       = FileSwitch_FSNo:  5,
   FileSwitch_FSNumberADFS        = FileSwitch_FSNo:  8,
   FileSwitch_FSNumberNETPRINT    = FileSwitch_FSNo: 12,
   FileSwitch_FSNumberNull        = FileSwitch_FSNo: 13,
   FileSwitch_FSNumberPrinter     = FileSwitch_FSNo: 14,
   FileSwitch_FSNumberSerial      = FileSwitch_FSNo: 15,
   FileSwitch_FSNumberVDU         = FileSwitch_FSNo: 17,
   FileSwitch_FSNumberRAWVDU      = FileSwitch_FSNo: 18,
   FileSwitch_FSNumberKBD         = FileSwitch_FSNo: 19,
   FileSwitch_FSNumberRAWKBD      = FileSwitch_FSNo: 20,
   FileSwitch_FSNumberDESKFS      = FileSwitch_FSNo: 21,
   FileSwitch_FSNumberRAMFS       = FileSwitch_FSNo: 23,
   FileSwitch_FSNumberRISCIXFS    = FileSwitch_FSNo: 24,
   FileSwitch_FSNumberStreamer    = FileSwitch_FSNo: 25,
   FileSwitch_FSNumberSCSIFS      = FileSwitch_FSNo: 26,
   FileSwitch_FSNumberDigitiser   = FileSwitch_FSNo: 27,
   FileSwitch_FSNumberScanner     = FileSwitch_FSNo: 28,
   FileSwitch_FSNumberMULTIFS     = FileSwitch_FSNo: 29,
   FileSwitch_FSNumberNFS         = FileSwitch_FSNo: 33,
   FileSwitch_FSNumberCDFS        = FileSwitch_FSNo: 37,
   FileSwitch_FSNumberDOSFS       = FileSwitch_FSNo: 43,
   FileSwitch_FSNumberRESOURCEFS  = FileSwitch_FSNo: 46,
   FileSwitch_FSNumberPIPEFS      = FileSwitch_FSNo: 47,
   FileSwitch_FSNumberDEVICEFS    = FileSwitch_FSNo: 53,
   FileSwitch_FSNumberParallel    = FileSwitch_FSNo: 54,
   FileSwitch_FSNumberPCCARDFS    = FileSwitch_FSNo: 89,
   FileSwitch_FSNumberSHAREFS     = FileSwitch_FSNo: 99;

TYPE FileSwitch_FSInfo = .Bits;
CONST
   //Bits for fs_info
   FileSwitch_FSNumber            = FileSwitch_FSInfo:                         %11111111,
   FileSwitch_FSOpenFileLimit     = FileSwitch_FSInfo:                 %1111111100000000,
   FileSwitch_FSReadOnly          = FileSwitch_FSInfo:                %10000000000000000,
   FileSwitch_HasExtraFlags       = FileSwitch_FSInfo:               %100000000000000000,
   FileSwitch_NoFileEntries       = FileSwitch_FSInfo:              %1000000000000000000,
   FileSwitch_NoSaveEntry         = FileSwitch_FSInfo:             %10000000000000000000,
   FileSwitch_NoLoadEntry         = FileSwitch_FSInfo:            %100000000000000000000,
   FileSwitch_ImplicitDirectories = FileSwitch_FSInfo:           %1000000000000000000000,
   FileSwitch_NeedsURDAndLib      = FileSwitch_FSInfo:          %10000000000000000000000,
   FileSwitch_SupportsImage       = FileSwitch_FSInfo:         %100000000000000000000000,
   FileSwitch_Reserved            = FileSwitch_FSInfo:        %1000000000000000000000000,
   FileSwitch_SupportsFileInfo    = FileSwitch_FSInfo:       %10000000000000000000000000,
   FileSwitch_SupportsStampNamed  = FileSwitch_FSInfo:      %100000000000000000000000000,
   FileSwitch_NeedsFlush          = FileSwitch_FSInfo:     %1000000000000000000000000000,
   FileSwitch_NeedsCreate         = FileSwitch_FSInfo:    %10000000000000000000000000000,
   FileSwitch_SupportsEmptyNames  = FileSwitch_FSInfo:   %100000000000000000000000000000,
   FileSwitch_Interactive         = FileSwitch_FSInfo:  %1000000000000000000000000000000,
   FileSwitch_SupportsSpecial     = FileSwitch_FSInfo: %10000000000000000000000000000000;

TYPE FileSwitch_FSExtraInfo = .Bits;
CONST
   FileSwitch_SupportsDirChange = FileSwitch_FSExtraInfo: %1,
   FileSwitch_NeedsCat          = FileSwitch_FSExtraInfo: %10,
   FileSwitch_NeedsEx           = FileSwitch_FSExtraInfo: %100;

TYPE FileSwitch_ObjectType = .Int;
CONST
   FileSwitch_NotFound = FileSwitch_ObjectType: 0,
   FileSwitch_IsFile   = FileSwitch_ObjectType: 1,
   FileSwitch_IsDir    = FileSwitch_ObjectType: 2,
   FileSwitch_IsImage  = FileSwitch_ObjectType: 3;

TYPE FileSwitch_Attr = .Bits;
CONST
   FileSwitch_AttrOwnerRead     = FileSwitch_Attr: 0b1,
   FileSwitch_AttrOwnerWrite    = FileSwitch_Attr: 0b10,
   FileSwitch_AttrOwnerSpecial  = FileSwitch_Attr: 0b100,
   FileSwitch_AttrOwnerLocked   = FileSwitch_Attr: 0b1000,
   FileSwitch_AttrWorldRead     = FileSwitch_Attr: 0b10000,
   FileSwitch_AttrWorldWrite    = FileSwitch_Attr: 0b100000,
   FileSwitch_AttrWorldSpecial  = FileSwitch_Attr: 0b1000000,
   FileSwitch_AttrWorldLocked   = FileSwitch_Attr: 0b10000000;

TYPE FileSwitch_InfoWords = .Union (.Struct (.Bits: exec_addr,
      .Bits: load_addr): addrs, OS_DateAndTime: date_and_time);

//The following errors are to be used by all filing systems, the bottom byte
//is the only significant part
CONST
    Error_NotSupported = .Bits: &f8 "Bad operation on ...:",
    Error_FSWriteOnly  = .Bits: &fa "...: is a write only filing system",
    Error_FSReadOnly   = .Bits: &fc "...: is a read only filing system";
//They should be used as 0x10000 + 0x100*FS_NO + error number

SWI OS_BGet =
   (  NUMBER 0xA "Reads a byte from an open file",
      ENTRY (R1 = OS_F: file),
      EXIT (R0 = .Char: c, FLAGS!)
   );

SWI
   BGetV =
   (  NUMBER 0x34,
      ENTRY (R1 = OS_F: file, R9 # &0A "OS_BGet vector"),
      EXIT (R0 = .Char: c, FLAGS!
   )  );

SWI OS_BPut =
   (  NUMBER 0xB "Writes a byte to an open file",
      ENTRY (R0 = .Char: c, R1 = OS_F: file)
   );

SWI
   BPutV =
   (  NUMBER 0x34,
      ENTRY (R0 = .Char: c, R1 = OS_F: file, R9 # &0B "OS_BPut vector")
   );

SWI
   Service_StartUpFS         = (NUMBER 0x30, ENTRY (R1 # 0x12 "Start up
         filing system (removed with RISC OS 3.5)", R2 = FileSwitch_FSNo: fs_no)),
   Service_FSRedeclare       = (NUMBER 0x30, ENTRY (R1 # 0x40 "Filing
         system reinitialise")),
   Service_CloseFile         = (NUMBER 0x30, ENTRY (R1 # 0x68 "Close an
         object, and any children of that object",
         R2 -> .String: file_name, R3 = .Int: count),
         EXIT (R3 = .Int: count_out))
