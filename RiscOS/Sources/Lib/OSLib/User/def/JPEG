TITLE JPEG;
AUTHOR "Jonathan Coxhead, jonathan@doves.demon.co.uk, 21 Aug 1995";

NEEDS OS;

TYPE JPEG_InfoFlags = .Bits;
CONST
   JPEG_InfoMonochrome = JPEG_InfoFlags: %1,
   JPEG_InfoNoTrfm     = JPEG_InfoFlags: %10,
   JPEG_InfoDPIUnknown = JPEG_InfoFlags: %100;

TYPE JPEG_ScaleFlags = .Bits;
CONST
   JPEG_ScaleDithered           = JPEG_ScaleFlags: %1,
   JPEG_ScaleErrorDiffused      = JPEG_ScaleFlags: %10;

TYPE JPEG_TransformFlags = .Bits;
CONST
   JPEG_DestinationCoords       = JPEG_TransformFlags: %1,
   JPEG_TransformDithered       = JPEG_TransformFlags: %10,
   JPEG_TransformErrorDiffused  = JPEG_TransformFlags: %100;

CONST
   JPEG_FileType = .Bits: 0xC85;

TYPE JPEG_Image = .Struct (.Byte: i ...);

SWI
   JPEG_Info = (NUMBER 0x49980 "Returns information about a JPEG image in memory -
      see individual reason codes", ABSENT),
   JPEGInfo_Dimensions =
   (  NUMBER 0x49980,
      ENTRY
      (  R0 # 1 "Returns the dimensions of a JPEG image in memory - RISC O S 3.6+",
         R1 -> JPEG_Image: image,
         R2 = .Int: size
      ),
      EXIT
      (  R0! = JPEG_InfoFlags: info_flags,
         R2 = .Int: width,
         R3 = .Int: height,
         R4 = .Int: xdpi,
         R5 = .Int: ydpi,
         R6 = .Int: workspace_size
   )  );

SWI
   JPEG_FileInfo = (NUMBER 0x49981 "Returns information about a JPEG image in a file -
      see individual reason codes", ABSENT),
   JPEGFileInfo_Dimensions =
   (  NUMBER 0x49981,
      ENTRY
      (  R0 # 1 "Returns the dimensions of a JPEG image in a file - RISC O S 3.6+",
         R1 -> .String: file_name
      ),
      EXIT
      (  R0! = JPEG_InfoFlags: info_flags,
         R2 = .Int: width,
         R3 = .Int: height,
         R4 = .Int: xdpi,
         R5 = .Int: ydpi,
         R6 = .Int: workspace_size
   )  );

SWI JPEG_PlotScaled =
   (  NUMBER 0x49982 "Plots a JPEG image from memory - RISC O S 3.6+",
      ENTRY
      (  R0 -> JPEG_Image: image,
         R1 = .Int: x,
         R2 = .Int: y,
         R3 -> OS_Factors: factors,
         R4 = .Int: size,
         R5 = JPEG_ScaleFlags: flags
   )  );

SWI JPEG_PlotFileScaled =
   (  NUMBER 0x49983 "Plots a JPEG image from a file - RISC O S 3.6+",
      ENTRY
      (  R0 -> .String: file_name,
         R1 = .Int: x,
         R2 = .Int: y,
         R3 -> OS_Factors: factors,
         R4 = JPEG_ScaleFlags: flags
   )  );

SWI JPEG_PlotTransformed =
   (  NUMBER 0x49984 "Plots a JPEG image from memory using a transformation matrix - RISC O S 3.6+",
      ENTRY
      (  R0 -> JPEG_Image: image,
         R1 = JPEG_TransformFlags: flags,
         R2 -> OS_Trfm: trfm_or_rect,
         R3 = .Int: size
   )  );

SWI JPEG_PlotFileTransformed =
   (  NUMBER 0x49985 "Plots a JPEG image from a file using a transformation matrix - RISC O S 3.6+",
      ENTRY
      (  R0 -> .String: file_name,
         R1 = JPEG_TransformFlags: flags,
         R2 -> OS_Trfm: trfm_or_rect
   )  );

TYPE JPEG_PrintFlags = .Bits;
CONST
   JPEG_PrintPlotting = JPEG_PrintFlags: 1,
   JPEG_PrintUsingTransTab = JPEG_PrintFlags: %10;
SWI JPEG_PDriverIntercept = (NUMBER 0x49986 "Requests that JPEG calls
      are passed to the printer drivers - for internal use only",
   ENTRY (R0 = JPEG_PrintFlags: flags),
   EXIT (R0! = JPEG_PrintFlags: flags_out))
