TITLE MimeMap;

AUTHOR "Tom Hughes, tom@compton.nu, 15 Feb 2000";

NEEDS OS;

TYPE
   MimeMap_Format = .Int;

CONST
   MimeMap_FormatFiletype     = MimeMap_Format: 0,
   MimeMap_FormatFiletypeName = MimeMap_Format: 1,
   MimeMap_FormatMIMEType     = MimeMap_Format: 2,
   MimeMap_FormatExtension    = MimeMap_Format: 3;

SWI
   MimeMap_Translate =
   (  NUMBER 0x50B00 "Translates between different file typing schemes -
            see individual reason codes",
      ABSENT
   ),

   MimeMapTranslate_FiletypeToFiletypeName =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatFiletype "Translate a numeric file type to a textual file type name",
         R1 = .Bits: file_type,
         R2 # MimeMap_FormatFiletypeName,
         R3 = .Ref .String: file_type_name
   )  ),

   MimeMapTranslate_FiletypeToMIMEType =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatFiletype "Translate a numeric file type to a MIME type",
         R1 = .Bits: file_type,
         R2 # MimeMap_FormatMIMEType,
         R3 = .Ref .String: mime_type
   )  ),

   MimeMapTranslate_FiletypeToExtension =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatFiletype "Translate a numeric file type to a file extension",
         R1 = .Bits: file_type,
         R2 # MimeMap_FormatExtension,
         R3 = .Ref .String: extension
   )  ),

   MimeMapTranslate_FiletypeNameToFiletype =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatFiletypeName "Translate a textual file type name to a numeric file type",
         R1 -> .String: file_type_name,
         R2 # MimeMap_FormatFiletype
      ),
      EXIT
      (  R3! = .Bits: file_type
   )  ),

   MimeMapTranslate_FiletypeNameToMIMEType =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatFiletypeName "Translate a textual file type name to a MIME type",
         R1 -> .String: file_type_name,
         R2 # MimeMap_FormatMIMEType,
         R3 = .Ref .String: mime_type
   )  ),

   MimeMapTranslate_FiletypeNameToExtension =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatFiletypeName "Translate a textual file type name to a file extension",
         R1 -> .String: file_type_name,
         R2 # MimeMap_FormatExtension,
         R3 = .Ref .String: extension
   )  ),

   MimeMapTranslate_MIMETypeToFiletype =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatMIMEType "Translate a MIME type to a numeric file type",
         R1 -> .String: mime_type,
         R2 # MimeMap_FormatFiletype
      ),
      EXIT
      (  R3! = .Bits: file_type
   )  ),

   MimeMapTranslate_MIMETypeToFiletypeName =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatMIMEType "Translate a MIME type to a textual file type name",
         R1 -> .String: mime_type,
         R2 # MimeMap_FormatFiletypename,
         R3 = .Ref .String: file_type_name
   )  ),

   MimeMapTranslate_MIMETypeToExtension =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatMIMEType "Translate a MIME type to a file extension",
         R1 -> .String: mime_type,
         R2 # MimeMap_FormatExtension,
         R3 = .Ref .String: extension
   )  ),

   MimeMapTranslate_ExtensionToFiletype =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatExtension "Translate a file extension to a numeric file type",
         R1 -> .String: extension,
         R2 # MimeMap_FormatFiletype
      ),
      EXIT
      (  R3! = .Bits: file_type
   )  ),

   MimeMapTranslate_ExtensionToFiletypeName =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatExtension "Translate a file extension to a textual file type name",
         R1 -> .String: extension,
         R2 # MimeMap_FormatFiletypename,
         R3 = .Ref .String: file_type_name
   )  ),

   MimeMapTranslate_ExtensionToMIMEType =
   (  NUMBER 0x50B00,
      ENTRY
      (  R0 # MimeMap_FormatExtension "Translate a file extension to a MIME type",
         R1 -> .String: extension,
         R2 # MimeMap_FormatMIMEType,
         R3 = .Ref .String: mime_type
   )  )
