;Assembler header file for TaskManager
;written by DefMod (Jun 30 1995) on Mon Aug  7 10:59:42 1995
;Jonathan Coxhead, Acorn Computers Ltd

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET OS:Hdr.Types"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_OS
        GBLS    Get_OS
        ]
        [       :LNOT: :DEF: OS_Hdr
Get_OS                          SETS    "GET OS:Hdr.OS"
        |
Get_OS                          SETS    ""
        ]
        $Get_OS

        [       :LNOT: :DEF: Get_Wimp
        GBLS    Get_Wimp
        ]
        [       :LNOT: :DEF: Wimp_Hdr
Get_Wimp                        SETS    "GET OS:Hdr.Wimp"
        |
Get_Wimp                        SETS    ""
        ]
        $Get_Wimp

        [       :LNOT: :DEF: TaskManager_Hdr
        GBLS    TaskManager_Hdr

;Symbols for constants
TaskManager_NameLimit           *       32
TaskManager_ModuleTask          *       &1
TaskManager_DraggableSlot       *       &2
TaskManager_ShutdownExitOnly    *       &1
TaskManager_ShutdownNoPreQuit   *       &2
TaskManager_ShutdownPortablePowerDown *       &4
TaskManager_ShutdownSendMessage *       &8
TaskManager_ShutdownIgnoreUpCalls *       &10

;Symbols for structure offsets and sizes
TaskManager_Flags               *       Bits

                                ^       0
TaskManager_Task_task           #       Wimp_T
TaskManager_Task_name           #       Ptr
TaskManager_Task_slot_size      #       Int
TaskManager_Task_flags          #       TaskManager_Flags
TaskManager_Task                *       @

TaskManager_ShutdownFlags       *       Bits


;Symbols for SWI's and SWI reason codes
XTaskManager_TaskNameFromHandle *       &62680
TaskManager_TaskNameFromHandle  *       &42680
   ;Entry
   ;  R0 = task (Wimp_T)
   ;Exit
   ;  R0 -> name (String)

XTaskManager_EnumerateTasks     *       &62681
TaskManager_EnumerateTasks      *       &42681
   ;Entry
   ;  R0 = context (Int)
   ;  R1 = task (pointer to TaskManager_Task)
   ;  R2 = size (Int)
   ;Exit
   ;  R0 = context_out (Int)
   ;  R1 -> end (Char)
   ;  R2 corrupted

XTaskManager_Shutdown           *       &62682
TaskManager_Shutdown            *       &42682
   ;Entry
   ;  R0 = flags (TaskManager_ShutdownFlags)

        ]
        END
