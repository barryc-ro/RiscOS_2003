
/************************************************************************/
/* File:    DebugLib.h                                                  */
/* Purpose: Header file for DebugLib API.                               */
/************************************************************************/

#ifndef __debuglib_h
#define __debuglib_h

#ifdef DEBUGLIB

    #define NULL_OUTPUT		0	/* No valid debugging mechanisms found */
    #define TRACKER_OUTPUT	1	/* !Tracker by Andy Armstrong Debugging Output Window. */
    #define PRINTF_OUTPUT	2	/* Standard printf statements with  a black background. */
    #define NOTUSED_OUTPUT    	3	/* Not used.                  */
    #define PDEBUG_OUTPUT	4	/* Parallel Port Debugging (JSmith). */
    #define SOCKET_OUTPUT	5	/* Debug to Network Socket (RBuckley). */
    #define DEBUGIT_OUTPUT	6	/* !List-Debug - Wimp based debug system (MChallis) */
    #define TML_OUTPUT		7	/* TML Debugging Podule. */
    #define FILE_OUTPUT		8	/* FILE output mode */
    #define SERIAL_OUTPUT	9	/* Serial Port output - dual serial interface only */

    #define no_devices		9	/* Number of debug devices available */

    #define DebugLib_Options_TasknamePrefix_Off        0u
    #define DebugLib_Options_TasknamePrefix_On         1u
    #define DebugLib_Options_SerialPortLF_Off        (0u<<1)
    #define DebugLib_Options_SerialPortLF_On         (1u<<1)
    #define DebugLib_Options_ScreenCornering_Off     (0u<<2)
    #define DebugLib_Options_ScreenCornering_On      (1u<<2)

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void debug_initialise (char *, char *, char *);
    extern void debug_terminate (void);
    extern void debug_output_device (int);
    extern void debug_beep (void);
    extern void debug_initialise_trace (int, char *);
    extern void debug_set_options (const unsigned int, const int, const int);

    /* Debug output functions that are masked by the macros. These declarations have to be in the
     * header file to avoid linking problems
     */
    #pragma -v1 /* hint to compiler to check f/s/printf format */
    extern void _dprintf(const char *, const char * /*format*/, ...);
    #pragma -v1 /* hint to compiler to check f/s/printf format */
    extern void _dfprintf(const char *, const int stream, const char * /*format*/, ...);


    #define dprintf(a)			_dprintf a
    #define dfprintf(a)			_dfprintf a
    #define debug_atexit()		atexit(debug_terminate)

    #ifdef __cplusplus
    }
    #endif

#else

    #define debug_initialise(a,b,c)
    #define debug_output_device(a)
    #define debug_terminate()
    #define debug_beep()
    #define debug_initialise_trace(a,b)
    #define debug_set_options(a,b,c)

    #define dprintf(a)
    #define dfprintf(a)
    #define debug_atexit()

#endif

#endif

/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ END +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
