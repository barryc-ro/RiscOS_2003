
/************************************************************************/
/* File:    DebugLib.h                                                  */
/* Purpose: Header file for DebugLib API.                               */
/************************************************************************/

/*
   Copyright 1997-1999 Acorn Computers Ltd

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.
*/

#ifndef __debuglib_h
#define __debuglib_h

#ifdef DEBUGLIB

    #include <stdio.h>
    #include <stdarg.h>
    #include <stdlib.h>

    #ifndef __kernel_h
      #include "kernel.h"
    #endif

    #ifndef BOOL_DEFINED
    #define BOOL_DEFINED
    #ifndef BOOL
    #define BOOL int
    #define TRUE 1
    #define FALSE 0
    #endif
    #endif

    typedef enum
    {
      NULL_OUTPUT = 0,    /* No valid debugging mechanisms found. */
      TRACKER_OUTPUT = 1, /* Output to !Tracker by Andy Armstrong. (Wimp window) */
      PRINTF_OUTPUT = 2,  /* Standard printf statements. */
      NOTUSED_OUTPUT = 3, /* Not currently used. */
      PDEBUG_OUTPUT = 4,  /* Parallel port debugging (JSmith). */
      SOCKET_OUTPUT = 5,  /* Debug to network socket (RBuckley). */
      DEBUGIT_OUTPUT = 6, /* Output to !List-Debug - Wimp based debug system (MChallis). */
      TML_OUTPUT = 7,     /* Output to TML debugging podule. */
      FILE_OUTPUT = 8,    /* Output to file. */
      SERIAL_OUTPUT = 9,  /* Output to serial port (dual serial interface only). */
      /* Put new devices in this space */
      UNSET_OUTPUT        /* Special case, not equivalent NULL_OUTPUT */
    }debug_device;

    #define DebugLib_Options_TasknamePrefix_Off   0u
    #define DebugLib_Options_TasknamePrefix_On    1u
    #define DebugLib_Options_SerialPortLF_Off     0u
    #define DebugLib_Options_SerialPortLF_On      (1u<<1)
    #define DebugLib_Options_ScreenCornering_Off  0
    #define DebugLib_Options_ScreenCornering_On   (1u<<2)
    #define DebugLib_Options_StampDebug_Off       0
    #define DebugLib_Options_StampDebug_On        (1u<<3)

    #define DebugLib_OutputBufferOff_Flag_UseCurrentDevice   1u

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void debug_initialise (const char *, const char *, const char *);
    extern void debug_initialise_trace (debug_device, const char *);
    extern void debug_terminate (void);
    extern void debug_output_device (debug_device);
    extern _kernel_oserror *debug_output_buffer_on (int, int);
    extern void debug_output_buffer_off (int flags, debug_device device);
    extern void debug_beep (void);
    extern const char *debug_version (void);
    #define debug_atexit() atexit(debug_terminate)

    /* Functions to set options */
    extern void debug_set_device (debug_device);
    extern void debug_set_raw_device (debug_device);
    extern void debug_set_trace_device (debug_device);
    extern void debug_set_taskname_prefix (BOOL);
    extern void debug_set_area_level_prefix (BOOL);
    extern void debug_set_stamp_debug (BOOL);
    extern void debug_set_screen_cornering (BOOL);
    extern void debug_set_unbuffered_files (BOOL);
    extern void debug_set_serial_lf (BOOL);
    extern void debug_set_serial_port_speed (int);
    extern void debug_set_serial_port_number (int);
    extern void debug_set_dump_width (size_t);

    /* Deprecated functions */
    #define debug_output_device(debug_device) debug_set_device(debug_device)
    extern void debug_set_options (unsigned int, int, int);

    /* Debug output functions that are masked by the macros. These declarations have to be in the
     * header file to avoid linking problems
     */
    #pragma -v1 /* hint to compiler to check f/s/printf format */
    extern void _dprintf(const char *, const char * /*format*/, ...);
    #pragma -v1 /* hint to compiler to check f/s/printf format */
    extern void _dprintf_raw(void *, const char * /*format*/, ...);
    #pragma -v1 /* hint to compiler to check f/s/printf format */
    extern void _dfprintf(const char *, debug_device stream, const char * /*format*/, ...);
    #pragma -v1 /* hint to compiler to check f/s/printf format */
    extern void _dvprintf(const char *area_level, const char *format, const va_list arg);
    #pragma -v0 /* back to the default */

    extern void ddumpbuf(const char *area_level, const void *buffer, size_t size, size_t offset);

    #define dprintf(a)			_dprintf a
    #define dprintf_raw(a)		_dprintf_raw a
    #define dvprintf(a)			_dvprintf a
    #define dfprintf(a)			_dfprintf a

    #ifdef __cplusplus
    }
    #endif

#else

    #define debug_initialise(a,b,c)
    #define debug_output_device(a)
    #define debug_output_buffer_on(a,b)
    #define debug_output_buffer_off(a,b)
    #define debug_terminate()
    #define debug_beep()
    #define debug_initialise_trace(a,b)
    #define debug_set_options(a,b,c)
    #define debug_set_device(a)
    #define debug_set_trace_device(a)
    #define debug_set_raw_device(a)
    #define debug_set_taskname_prefix(a)
    #define debug_set_area_level_prefix(a)
    #define debug_set_stamp_debug(a)
    #define debug_set_screen_cornering(a)
    #define debug_set_unbuffered_files(a)
    #define debug_set_serial_lf(a)
    #define debug_set_serial_port_speed(a)
    #define debug_set_serial_port_number(a)
    #define debug_set_dump_width(a)
    #define debug_atexit()
    #define debug_version()
    #define ddumpbuf(a,b,c,d)

    #define dprintf(a)
    #define dprintf_raw(a)
    #define dvprintf(a)
    #define dfprintf(a)

#endif

#endif

/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ END +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
