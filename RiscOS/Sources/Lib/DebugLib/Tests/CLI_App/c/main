#include <stdio.h>
#include <time.h>

#include "DebugLib/debuglib.h"
#ifdef MemCheck_MEMCHECK
  #include "MemCheck:MemCheck.h"
#endif

static void bogus3 (void)
{
  dprintf (("", "bogus3\n"));
}

static void bogus2 (void)
{
  dprintf (("", "bogus2\n"));
  bogus3 ();
}

static void bogus (void)
{
  dprintf (("", "bogus\n"));
  bogus2 ();
}

int main (void)
{
#ifdef MemCheck_MEMCHECK
  MemCheck_Init();
  MemCheck_InterceptSCLStringFunctions();
  MemCheck_SetStoreMallocFunctions(1);
  MemCheck_RedirectToFilename ("RAM::0.$.cli_memch");
  atexit (MemCheck_OutputBlocksInfo);
#endif

  debug_initialise ("CLI_App", "ram::0.$.cli_out", "");
  debug_atexit ();

  /* Try old-style monolithic set options call */
  debug_set_options (DebugLib_Options_StampDebug_On |
                     DebugLib_Options_TasknamePrefix_On, 1, 9600);
  /* And a new one */
  /* debug_set_stamp_debug (FALSE); */
  debug_set_area_level_prefix (TRUE);

#if 1
  debug_output_buffer_on (0, 1024);
#endif

  debug_set_device (DEBUGIT_OUTPUT);

  { clock_t t = clock() + (5 * CLOCKS_PER_SEC); while (clock() < t); }

  /* And try using same device for trace and debug output */
  debug_initialise_trace (DEBUGIT_OUTPUT, "");

  dprintf (("", "No level\n"));
  dprintf (("UILib_7", "UILib 7\n"));
  dprintf (("UILib", "UILib\n"));
  dprintf (("UILib_2", "UILib 2\n"));
  dprintf (("UILib_", "UILib\n"));


  dprintf (("h", "A little "));
  dprintf (("", "test\noh yes\n"));
  dprintf (("Error", "Is this gonna work?\n"));

  ddumpbuf("test", "012345678901234567", 17, 0);
  debug_set_dump_width(3);
  ddumpbuf("test", "012345678901234567", 17, 0);
  ddumpbuf("test", "012345678901234567", 17, 100);
  debug_set_dump_width(16);
  ddumpbuf("test", "012345678901234567", 16, 100);

  bogus ();

#if 1
  debug_output_buffer_off (1, NULL_OUTPUT);
#endif

  return 1;
}
