/************************************************************************/
/* File:    tml.c                                                       */
/* Purpose: Routines for the TML output method.                         */
/************************************************************************/


/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */
#include "include.h"
#include "misc.h"
#include "globals.h"
#include "tml.h"


/*******************/
/* Local functions */


/************************************************************************/
/* debug_tml_output_printtaskname                                       */
/*                                                                      */
/* Outputs "<Task name>: " for the tml output method                    */
/*                                                                      */
/* Parameters: none                                                     */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
static void debug_tml_output_printtaskname (void)
{
  int count;
  int len = strlen (debug_current_options.taskname);

  for (count = 0; count < len; count++)
  {
    _swix (HostFS_WriteC, _IN(0), (int) debug_current_options.taskname[count]);
  }

  _swix (HostFS_WriteC, _IN(0), (int) ':');
  _swix (HostFS_WriteC, _IN(0), (int) ' ');
}


/**********************/
/* Exported functions */


/************************************************************************/
/* debug_tml_init                                                       */
/*                                                                      */
/* Function to initialise TML Podule                                    */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    TRUE or FALSE.                                           */
/*                                                                      */
/************************************************************************/
BOOL debug_tml_init (void)
{
  if (sessions_available.tml == FALSE)
  {
    /* Device currently not initialised */
    if (misc_ensure_module ("TML_HostFS") == TRUE)
    {
      sessions_available.tml = TRUE;
      return TRUE;
    }
    else
    {
      return FALSE;
    }
  }
  else
  {
    sessions_available.tml = TRUE;
    return TRUE;
  }
}


/************************************************************************/
/* debug_tml_output                                                     */
/*                                                                      */
/* Function outputs the data from the library to the TML podule.        */
/*                                                                      */
/* Parameters: buffer - text to output.                                 */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void debug_tml_output (const char *buffer)
{
  static char start = 1;
  int len, count;

  if (start && debug_current_options.taskname_prefix == TRUE)
  {
    debug_tml_output_printtaskname ();
    start = 0;
  }

  len = strlen (buffer);
  for (count = 0; count < len; count++)
  {
    _swix (HostFS_WriteC, _IN(0), (int) buffer[count]);

    /* Check to see if \n has been passed.  If so, add a CR and (optionally
       the prefix the taskname) */
    if (buffer[count] == '\n')
    {
      _swix (HostFS_WriteC, _IN(0), '\r');
      if (count < len-1 && debug_current_options.taskname_prefix == TRUE)
        debug_tml_output_printtaskname ();
      else
        start = 1;
    }
  }
}


/************************************************************************/
/* debug_tml_quit                                                       */
/*                                                                      */
/* Function to terminate  TML Podule                                    */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void                                                     */
/*                                                                      */
/************************************************************************/
void debug_tml_quit (void)
{
  if (sessions_available.tml == TRUE)
  {
    /* Device currently initialised */
      sessions_available.tml = FALSE;
  }
}
