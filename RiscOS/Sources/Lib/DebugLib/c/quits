/************************************************************************/
/* File:    quits.c                                                     */
/* Purpose: Termination of debug output devices.                        */
/*                                                                      */
/* Author:  Neil Bingham (mailto:NBingham@acorn.co.uk)                  */
/* History: Tue 18th February 1997  ver 0.01 - Created.                 */
/************************************************************************/


/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */
#include "include.h"
#include "quits.h"
#include "globals.h"

/* ---------------------------------- PRE-PROCESSOR DIRECTIVES ---------------------------------- */


/* -------------------------------------- GLOBAL VARIABLES -------------------------------------- */
extern SessionsAvailable sessions_available;

/* ----------------------------------------- FUNCTIONS ------------------------------------------ */

/************************************************************************/
/* quit_debugit                                                         */
/*                                                                      */
/* Function to terminate  DebugIt                                       */
/*                                                                      */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void         .                                           */
/*                                                                      */
/************************************************************************/
void quit_debugit (void)
{
  if (sessions_available.debugit == TRUE)
  {
    /* Device currently initialised */
    sessions_available.debugit = FALSE;
  }
}


/************************************************************************/
/* quit_file                                                            */
/*                                                                      */
/* Function to terminate  File Debugging                                */
/*                                                                      */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void                                                     */
/*                                                                      */
/************************************************************************/
void quit_file (void)
{
  if (sessions_available.file == TRUE)
  {
    /* Device currently initialised */
    fclose (debug_file_pointer);
    debug_file_pointer = NULL;
    sessions_available.file = FALSE;
  }
}


/************************************************************************/
/* quit_pdebug                                                          */
/*                                                                      */
/* Function to terminate  Parallel Debugging.                           */
/*                                                                      */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void                                                     */
/*                                                                      */
/************************************************************************/
void quit_pdebug (void)
{
  if (sessions_available.pdebug == TRUE)
  {
    /* Device currently initialised */
    PDebug_XFinal ();
    sessions_available.pdebug = FALSE;
  }
}


/************************************************************************/
/* quit_socket                                                          */
/*                                                                      */
/* Function to terminate RemoteDB                                       */
/*                                                                      */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void         .                                           */
/*                                                                      */
/************************************************************************/
void quit_socket (void)
{
#ifndef NOSOCKETS
  if (sessions_available.remotedb == TRUE)
  {
    /* Device currently initialised */
    remote_debug_close (remotedb_info);
    sessions_available.remotedb = FALSE;
  }
#endif
}


/************************************************************************/
/* quit_tml                                                             */
/*                                                                      */
/* Function to terminate  TML Podule                                    */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void                                                     */
/*                                                                      */
/************************************************************************/
void quit_tml (void)
{
  if (sessions_available.tml == TRUE)
  {
    /* Device currently initialised */
      sessions_available.tml = FALSE;
  }
}


/************************************************************************/
/* quit_tracker                                                         */
/*                                                                      */
/* Function to terminate  Tracker                                       */
/*                                                                      */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void         .                                           */
/*                                                                      */
/************************************************************************/
void quit_tracker (void)
{
  if (sessions_available.tracker == TRUE)
  {
    /* Device currently initialised */
    sessions_available.tracker = FALSE;

    _swix (Tracker_Close, _IN(0), tracker_window_handle);
  }
}


/************************************************************************/
/* quit_serial                                                          */
/*                                                                      */
/* Function to terminate  Serial.                                       */
/*                                                                      */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void                                                     */
/*                                                                      */
/************************************************************************/
void quit_serial (void)
{
  if (sessions_available.serial == TRUE)
  {
    /* Device currently initialised */
    sessions_available.serial = FALSE;

    serial_close_stream(serial_handle);
  }
}


