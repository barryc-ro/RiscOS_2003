/************************************************************************/
/* File:    printf.c                                                    */
/* Purpose: Routines for the Printf output method.                      */
/************************************************************************/


/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */
#include "include.h"
#include "misc.h"
#include "globals.h"
#include "printf.h"


/*******************/
/* Local functions */


/************************************************************************/
/* debug_printf_output_printtaskname                                    */
/*                                                                      */
/* Outputs "<Task name>: " for the printf output method                 */
/*                                                                      */
/* Parameters: none                                                     */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
static void debug_printf_output_printtaskname (void)
{
  int count;
  int len = strlen (debug_current_options.taskname);

  for (count = 0; count < len; count++)
  {
    _swix (OS_WriteC, _IN(0), (int) debug_current_options.taskname[count]);
  }

  _swix (OS_WriteC, _IN(0), (int) ':');
  _swix (OS_WriteC, _IN(0), (int) ' ');
}


/**********************/
/* Exported functions */


/************************************************************************/
/* debug_printf_output                                                  */
/*                                                                      */
/* Function outputs the data from the library to stdout.                */
/*                                                                      */
/* Parameters: buffer - text to output.                                 */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void debug_printf_output (const char *buffer)
{
  static char start = 1;
  int len, count;

  /* If we want "Screen cornering (TM)", do it. */
  if (debug_current_options.screen_cornering == 1)
  {
    _swix (OS_WriteC, _IN(0), 4);
    _swix (OS_WriteC, _IN(0), 26);
  }

  if (start && debug_current_options.taskname_prefix == TRUE)
  {
    debug_printf_output_printtaskname ();
    start = 0;
  }

  len = strlen (buffer);
  for (count = 0; count < len; count++)
  {
    _swix (OS_WriteC, _IN(0), (int) buffer[count]);

    /* Check to see if \n has been passed.  If so, add a CR and (optionally
       the prefix the taskname) */
    if (buffer[count] == '\n')
    {
      _swix (OS_WriteC, _IN(0), '\r');
      if (count < len-1 && debug_current_options.taskname_prefix == TRUE)
        debug_printf_output_printtaskname ();
      else
        start = 1;
    }
  }
}
