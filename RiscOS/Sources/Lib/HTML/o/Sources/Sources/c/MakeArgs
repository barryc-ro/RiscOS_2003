#include <ctype.h>
#include <string.h>

#include "Desk.Debug.h"
#include "Desk.DeskMem.h"
#include "Desk.Error.h"

#include "HTML.Args.h"



int	HTML_Args_GetEscapedLength( const char* in)
	{
	int		numhex;
	const char*	c;
	
	for ( c=in, numhex=0; *c; c++)	if ( !isalnum( *c))	numhex++;
	
	return strlen( in) + 2*numhex;
	}


void	HTML_Args_GenerateEscapedText( char* buffer, int bufflen, const char* in)
	{
	const char*	c;
	char*		buffpos;
	char*		hex = "0123456789abcdef";
	
	Desk_UNUSED( bufflen);
	
	Desk_Debug_Assert( bufflen >= 1+HTML_Args_GetEscapedLength( in));
	
	for ( c=in, buffpos=buffer; *c; c++)	{
	
		if ( !isalnum( *c))	{
			buffpos[0] = '%';
			
			Desk_Debug_Assert( (*c)/16 < 16);
			Desk_Debug_Assert( (*c)%16 < 16);
			
			buffpos[1] = hex[ (*c)/16];
			buffpos[2] = hex[ (*c)%16];
			buffpos+=3;
			}
		
		else	{
			buffpos[0] = *c;
			buffpos+=1;
			}
		
		Desk_Debug_Assert( buffpos - buffer < bufflen);
		}
	
	*buffpos = 0;
	
	Desk_Debug3_Printf( Desk_error_PLACE "calculated len=%i, actual length=%i\n", HTML_Args_GetEscapedLength( in), strlen( buffer));
	Desk_Debug_Assert( strlen( buffer) == HTML_Args_GetEscapedLength( in));
	
	Desk_Debug3_Printf( Desk_error_PLACE "NCConfig_Args_GenerateEscapedText: '%s'->'%s'\n", in, buffer);
	}




char*	HTML_Args_GenerateEscapedTextAlloc( const char* in)
	{
	int	len	= 1 + HTML_Args_GetEscapedLength( in);
	char*	buffer	= Desk_DeskMem_Malloc( len);
	HTML_Args_GenerateEscapedText( buffer, len, in);
	return buffer;
	}
