/**************************************************************************/
/* File:    msghandle.c                                                   */
/* Purpose: This file contains various functions to use with MessageTrans.*/
/**************************************************************************/


/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */

/* ANSI Libraries */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* Toolbox Libraries */
#include "toolbox.h"
#include "wimp.h"
#include "wimplib.h"

/* CLib 5 Libraries */
#include "kernel.h"
#include "swis.h"

#include "MsgLib.h"

#include "VersionNum"

static const char msglib_version_string[] = Module_MajorVersion " " Module_MinorVersion;

/* ---------------------------------- PRE-PROCESSOR DIRECTIVES ---------------------------------- */

#define IGNORE(a) a=a

/* -------------------------------------- GLOBAL VARIABLES -------------------------------------- */

/* ----------------------------------------- FUNCTIONS ------------------------------------------ */


/************************************************************************/
/* msglib_lookup_token                                                  */
/*                                                                      */
/* Function looks up the tag specified in the Messages file and then    */
/* returns the token to the calling function.                           */
/*                                                                      */
/* Parameters: flags    - Flags word.  No flags used yet.Trans          */
/*             msgblock - Pointer to the Messages file descriptor, or   */
/*                        0 to use the global messages file.            */
/*             tag      - tag in Messages to lookup.                    */
/*                                                                      */
/* Returns:    Token which matches the tag in Messages.                 */
/*                                                                      */
/************************************************************************/
const char *msglib_lookup_token (unsigned int flags, MessagesFD *msgblock, char *tag)
{
  char *str;

  IGNORE (flags);

  if (!tag)
    return NULL;

  if (tag[0] == '\0')
    return NULL;

  if (_swix (MessageTrans_Lookup, _INR(0,2) | _OUT(2), msgblock, tag, 0, &str) != NULL)
    return NULL;
  else
    return str;
}


/************************************************************************/
/* msglib_lookup_token_params                                           */
/*                                                                      */
/* Function looks up the tag specified in the Messages file, substitutes*/
/* in the text of the parameters and returns the entire string.         */
/*                                                                      */
/* Parameters: flags    - Flags word.  Bit 0   Set, Do GSTrans          */
/*                                             Unset, Don't do GSTrans  */
/*             msgblock - Pointer to the Messages file descriptor, or   */
/*                        0 to use the global messages file.            */
/*             tag      - tag in Messages to lookup.                    */
/*             param_1  - Parameter 1.                                  */
/*             param_2  - Parameter 2.                                  */
/*             param_3  - Parameter 3.                                  */
/*             param_4  - Parameter 4.                                  */
/*             text     - Pointer to string area in which to place      */
/*                        substituted token, or if 0 necessary buffer   */
/*                        length is returned in "size"                  */
/*             buffer_size - Size of buffer "text"                      */
/*             nbytes   - number of bytes written into "text", or the   */
/*                        approximated size of the buffer needed        */
/*                                                                      */
/* Returns:    0 if MessageTrans lookup failed, 1 if OK.                */
/*                                                                      */
/************************************************************************/
int msglib_lookup_token_params (unsigned int flags, MessagesFD *msgblock, char *tag,
                                char *param_1, char *param_2, char *param_3, char *param_4,
                                char *text, int buffer_size, int *nbytes)
{
  int swi_num;
  int parsed_length;

  if (!tag)
  {
    *nbytes = 0;
    return 0;
  }

  if (tag[0] == '\0')
  {
    *nbytes = 0;
    return 0;
  }

  if (flags & 1)
    swi_num = MessageTrans_GSLookup;
  else
    swi_num = MessageTrans_Lookup;

  if (text == NULL)
  {
    /* Get size of non-substitued tag */
    if (_swix (swi_num, _INR(0,2) | _OUT(3), msgblock, tag, 0, &parsed_length) != NULL)
    {
      *nbytes = 0;
      return 0;
    }
    else
    {
      if (param_1)
        parsed_length += strlen (param_1);

      if (param_2)
        parsed_length += strlen (param_2);

      if (param_3)
        parsed_length += strlen (param_3);

      if (param_4)
        parsed_length += strlen (param_4);

      /* Plus a NULL terminator */
      parsed_length++;

      *nbytes = parsed_length;
    }
    return 1;
  }
  else
  {
    if (_swix (swi_num, _INR(0,7) | _OUT(3),
               msgblock,    /* R0 in */
               tag,         /* R1 in */
               text,        /* R2 in */
               buffer_size, /* R3 in */
               param_1,     /* R4 in */
               param_2,     /* R5 in */
               param_3,     /* R6 in */
               param_4,     /* R7 in */
               nbytes      /* R3 out */
              ) != NULL)
    {
      *nbytes = 0;
      return 0;
    }
    else
    {
      (*nbytes)++;
      return 1;
    }
  }
}


/************************************************************************/
/* msglib_version                                                       */
/*                                                                      */
/* Function returns version information.                                */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    version string.                                          */
/*                                                                      */
/************************************************************************/
const char *msglib_version (void)
{
  return msglib_version_string;
}


/************************************************************************/
/* msglib_wimp_error                                                    */
/*                                                                      */
/* Function looks up the tag specified in the Messages file and then    */
/* displays the tag in a standard OS message box.                       */
/*                                                                      */
/* Parameters: flags    - Flags word.  No flags used yet.               */
/*             msgblock - Pointer to the Messages file descriptor, or   */
/*                        0 to use the global messages file.            */
/*             tag      - Tag in Messages to lookup.                    */
/*                                                                      */
/* Returns:    Pointer to error block, or NULL if no error              */
/*                                                                      */
/************************************************************************/
_kernel_oserror *msglib_wimp_error (unsigned int flags, MessagesFD *msgblock, char *tag)
{
  _kernel_oserror created_er;

  IGNORE (flags);

  created_er.errnum = 0;
  strncpy (created_er.errmess, msglib_lookup_token (0u, msgblock, tag), 252);
  created_er.errmess[251] = '\0';

  return _swix (Wimp_ReportError, _INR(0,2),
                &created_er, 1, msglib_lookup_token (0u, msgblock, "_TaskName"));
}


/************************************************************************/
/* msglib_wimp_decide_error                                             */
/*                                                                      */
/* Function looks up the tag specified in the Messages file and then    */
/* displays the tag in a standard OS message box.                       */
/*                                                                      */
/* Parameters: flags    - Flags word.  No flags used yet.               */
/*             msgblock - Pointer to the Messages file descriptor, or   */
/*                        0 to use the global messages file.            */
/*             tag      - Tag in Messages to lookup.                    */
/*                                                                      */
/* Returns:    TRUE (OK clicked), or FALSE (Cancel clicked).            */
/*                                                                      */
/************************************************************************/
_kernel_oserror *msglib_wimp_decide_error (unsigned int flags, MessagesFD *msgblock, char *token,
                                           int *decision)
{
  _kernel_oserror created_er;
  _kernel_oserror *er;
  int which_button;

  IGNORE (flags);

  created_er.errnum = 0;
  strncpy (created_er.errmess, msglib_lookup_token (0u, msgblock, token), 252);
  created_er.errmess[251] = '\0';

  er = _swix (Wimp_ReportError, _INR(0,2) | _OUT(1),
              &created_er, 3, msglib_lookup_token (0u, msgblock, "_TaskName"), &which_button);

  if (er == NULL)
  {
    if (which_button == 1)
      *decision = TRUE;
    else
      *decision = FALSE;
  }

  return er;
}


/****************************/
/* Old DEPRECATED interface */


/************************************************************************/
/* lookup_message_token                                                 */
/*                                                                      */
/* Function looks up the tag specified in the Messages file and then    */
/* returns the token to the calling function.                           */
/*                                                                      */
/* Parameters: msgblock - Pointer to the Messages file descriptor, or   */
/*                        0 to use the global messages file.            */
/*             tag      - tag in Messages to lookup.                    */
/*                                                                      */
/* Returns:    Token which matches the tag in Messages.                 */
/*                                                                      */
/************************************************************************/
char *lookup_message_token (MessagesFD *msgblock, char *tag)
{
  return (char*)msglib_lookup_token (0u, msgblock, tag);
}


/************************************************************************/
/* lookup_message_token_params                                          */
/*                                                                      */
/* Function looks up the tag specified in the Messages file, substitutes*/
/* in the text of the parameters and returns the entire string.         */
/*                                                                      */
/* Parameters: msgblock - Pointer to the Messages file descriptor, or   */
/*                        0 to use the global messages file.            */
/*             tag      - tag in Messages to lookup.                    */
/*             param_1  - Parameter 1.                                  */
/*             param_2  - Parameter 2.                                  */
/*             param_3  - Parameter 3.                                  */
/*             param_4  - Parameter 4.                                  */
/*             text     - Pointer to string area in which to place      */
/*                        substituted token, or if 0 necessary buffer   */
/*                        length is returned in "size"                  */
/*             buffer_size - Size of buffer "text"                      */
/*             nbytes   - number of bytes written into "text", or the   */
/*                        approximated size of the buffer needed        */
/*                                                                      */
/* Returns:    0 if MessageTrans lookup failed, 1 if OK.                */
/*                                                                      */
/************************************************************************/
int lookup_message_token_params (MessagesFD *msgblock, char *tag, char *param_1, char *param_2,
                                 char *param_3, char *param_4, char *text, int buffer_size,
                                 int *nbytes)
{
  return msglib_lookup_token_params (0u, msgblock, tag, param_1, param_2, param_3, param_4, text,
                                     buffer_size, nbytes);
}


/************************************************************************/
/* wimp_message_error                                                   */
/*                                                                      */
/* Function looks up the tag specified in the Messages file and then    */
/* displays the tag in a standard OS message box.                       */
/*                                                                      */
/* Parameters: msgblock - Pointer to the Messages file descriptor, or   */
/*                        0 to use the global messages file.            */
/*             tag      - Tag in Messages to lookup.                    */
/*                                                                      */
/* Returns:    void                                                     */
/*                                                                      */
/************************************************************************/
void wimp_message_error (MessagesFD *msgblock, char *tag)
{
  msglib_wimp_error (0u, msgblock, tag);
}


/************************************************************************/
/* wimp_message_decide_error                                            */
/*                                                                      */
/* Function looks up the tag specified in the Messages file and then    */
/* displays the tag in a standard OS message box.                       */
/*                                                                      */
/* Parameters: msgblock - Pointer to the Messages file descriptor, or   */
/*                        0 to use the global messages file.            */
/*             tag      - Tag in Messages to lookup.                    */
/*                                                                      */
/* Returns:    TRUE (OK clicked), or FALSE (Cancel clicked).            */
/*                                                                      */
/************************************************************************/
int wimp_message_decide_error (MessagesFD *msgblock, char *token)
{
  int decision;

  msglib_wimp_decide_error (0u, msgblock, token, &decision);

  return decision;
}
