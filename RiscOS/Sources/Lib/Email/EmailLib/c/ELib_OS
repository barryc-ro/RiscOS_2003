/*	Project Post (769)
	Acorn Computers Ltd
	Copyright © 1997. All Rights Reserved.

	FILE:		ELib_OS.c
	AUTHOR:		Richard D. Warren
	VERSION:	0.02 for RISC OS

	OVERVIEW
	========
	Source file for implementation Post Email Library OS abstraction layer.

	HISTORY
	=======
	03/12/97	0.01	RDW	initial version
	19/02/98	0.02	RDW	#include DebugLib path added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
#include <stdlib.h>
#include <stdio.h>
#include "swis.h"
#include "kernel.h"
#include "DebugLib/DebugLib.h"


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "ELib.h"
#include "ELib_OS.h"


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Constants                                                                  */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Private Global variables to this file                                      */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes - Private to this file                                 */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Functions                                                                  */
/*                                                                            */
/* ************************************************************************** */

/* ************************************************************************** */
/*
   FUNCTION:       NFE_OS_get_timezone
   DESCRIPTION:    Function to call the OS and get timezone information of
   		   this host machine we are running on.
   DEPENDENCIES:   
   DEPENDED ON BY: 
   INPUT PARAMS:   BOOL                 *pos		address of a BOOL var.
   		   uint32               *hh             address of uint32 var.
   		   uint32               *mm             address of uint32 var.
   OUTPUT PARAMS:  BOOL                 *pos		Offset from UTC ahead or equal (TRUE), behind (FALSE)
   		   uint32               *hh             Hours offset from UTC
   		   uint32               *mm             Minutes offset from UTC
   RETURN VALUE:   NFE_rcode	 	NFE_COMPLETED	Success
   					NFE_FAILED	Call to OS failed
   CONSTANTS:      NONE
   VARIABLES:      see code below!
 */
/* ************************************************************************** */
extern NFE_rcode NFE_OS_get_timezone(BOOL *pos, uint32 *hh, uint32 *mm)
{
  NFE_rcode rc = NFE_COMPLETED;
  
  if ((pos) && (hh) && (mm))
  {
    _kernel_swi_regs  r;							/* register struct for SWI call                       */
    _kernel_oserror  *error;							/* error return from OS SWI call                      */
    int32             tz_offset;						/* timezone offset from UTC in centi-seconds (signed) */
    BOOL              positive;							/* timezone ahead of UTC? (or equal)                  */
    uint32            hours;							/* number of hours from UTC                           */
    uint32            minutes;							/* number of minutes from UTC                         */
    
    error = _kernel_swi(Territory_ReadCurrentTimeZone, &r, &r);			/* get timezone of host from OS                       */
    if (!error)
    {
      tz_offset = (int)r.r[1];							/* get timezone offset from UTC in centiseconds       */
    
      tz_offset = tz_offset / 100;						/* convert to seconds                                 */
      tz_offset = tz_offset / 60;						/* convert to minutes                                 */

      if (tz_offset >= 0)							/* set the positive flag depending on the sign of     */
        positive = TRUE;							/* tz_offset                                          */
      else
      {
        positive = FALSE;
        tz_offset = abs(tz_offset);
      }
      hours   = tz_offset / 60;							/* get number of hours ahead/behind                   */
      minutes = tz_offset - (hours * 60);					/* get number of minutes ahead/behind                 */
      
      *pos = positive;
      *hh = hours;
      *mm = minutes;
    }
    else
      rc = NFE_FAILED;								/* OS call failed                                     */      
  }
  else
    rc = NFE_NULLADDR;
  
  return rc;									/* return return code                                 */
}


