/*	Project Post (769)
	Acorn Computers Ltd
	Copyright © 1997. All Rights Reserved.

	FILE:		XNFphoneno.c++
	AUTHOR:		Richard D. Warren
	VERSION:	0.05D for RISC OS

	OVERVIEW
	========
	Source file for implementation of XNFphonenum object

	HISTORY
	=======
	17/09/97	0.01	RDW	initial version
	18/02/98	0.02	RDW	#include DebugLib path added
	23/04/98	0.03D	RDW	#ifdef DISPLAY round Display method added
	08/06/98	0.04D	RDW	Modified to use hdr_registry
					removed destructor and copyXNFphonenumobject method
	14/06/98	0.05D	RDW	Fixed operator= from header object to
					reset the type data member correctly.
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include <string.h>
  #include <ctype.h>
  #include "DebugLib/DebugLib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "XNFphoneno.h"
#include "header.h"
#include "822parser.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New types - Private to this file                                           */
/*                                                                            */
/* ************************************************************************** */
class xnf_phonenum_registry : public header_registry
{
  public:
    xnf_phonenum_registry();
    header* create_header(bool filebased, char *membase, uint32 offset,
                          uint32 length, bool owner);
    header* create_header(header& h);
};


/* ************************************************************************** */
/*                                                                            */
/* Globals to this file                                                       */
/*                                                                            */
/* ************************************************************************** */
const char            NFE_HDR_XNF_PHONENUM_STRING[] = "X-NetFax-Phone-Number";	// The header class' header fieldname
xnf_phonenum_registry xnfdpr;							// The registry object for this header class


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes - Private to this file                                 */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Object methods                                                             */
/*                                                                            */
/* ************************************************************************** */
xnf_phonenum_registry::xnf_phonenum_registry() : header_registry()
{
  reg_name = NFE_HDR_XNF_PHONENUM_STRING;
}


header* xnf_phonenum_registry::create_header(header& h)
{
  return new XNFphonenum(h);
}


header* xnf_phonenum_registry::create_header(bool filebased, char *membase,
                                           uint32 offset, uint32 length, bool owner)
{
  return new XNFphonenum(filebased, membase, offset, length, owner);
}


/* ************************************************************************** */
/*
   METHOD:         Constructor for a XNFphonenum object
   DESCRIPTION:
   DEPENDENCIES:
   DEPENDED ON BY:
   INPUT PARAMS:
   OUTPUT PARAMS:  NONE
   RETURN VALUE:   NONE
   CONSTANTS:      NONE
   VARIABLES:      NONE
 */
/* ************************************************************************** */
XNFphonenum::XNFphonenum(bool f, char *membase, uint32 offset, uint32 length,
                         bool owner)
            :XNFfaxnum(f, membase, offset, length, owner)
{
  type = xnfdpr.GetType();
  if ((owner) && (length==0))
  {
    SetName(NFE_HDR_XNF_PHONENUM_STRING);
  }
}


XNFphonenum::XNFphonenum(bool f, char *membase, uint32 offset, uint32 length,
                         char *org, bool owner)
            :XNFfaxnum(f, membase, offset, length, org, owner)

{
  type = xnfdpr.GetType();
  if ((owner) && (length==0))
  {
    SetName(NFE_HDR_XNF_PHONENUM_STRING);
  }
}


// copy constructor
XNFphonenum::XNFphonenum(const XNFphonenum &object) : XNFfaxnum(object)
{
  type = xnfdpr.GetType();
}


// copy constructor from header object
XNFphonenum::XNFphonenum(const header &object) : XNFfaxnum(object)
{
  type = xnfdpr.GetType();
}


XNFphonenum &XNFphonenum::operator=(const XNFphonenum &object)
{
  XNFfaxnum::operator=(object);

  return *this;
}


XNFphonenum &XNFphonenum::operator=(const header &object)
{
  XNFfaxnum::operator=(object);

  if (this != &object)
  {
    // do destructor things
    type = xnfdpr.GetType();
  }

  return *this;
}


#ifdef DISPLAY
void XNFphonenum::Display(void)
{
  printf("NFphonenum:\n");
  header::Display();
  printf("\n");
}
#endif
