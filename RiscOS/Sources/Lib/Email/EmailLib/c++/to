/*	Project Post (769)
	Acorn Computers Ltd
	Copyright © 1997. All Rights Reserved.

	FILE:		to.c++
	AUTHOR:		Richard D. Warren
	VERSION:	0.06 for RISC OS

	OVERVIEW
	========
	Source file for implementation of to object

	HISTORY
	=======
	20/08/97	0.01	RDW	initial version
	12/09/97	0.02	RDW	Merged file and memory constructors into one
	23/09/97	0.03	RDW	GetAddress and GetRealName methods added
	26/09/97	0.04	RDW	set parsed to TRUE in constructor when
					creating object	from scratch and also
					in parse method on success
	29/09/97	0.05	RDW	Changed to inherit from the from class so the
					commonality between replyto, to and from is
					in one class
	18/02/98	0.06	RDW	#include DebugLib path added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include <string.h>
  #include <ctype.h>
  #include "DebugLib/DebugLib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "to.h"
#include "header.h"
#include "822parser.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Globals to this file                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes - Private to this file                                 */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Object methods                                                             */
/*                                                                            */
/* ************************************************************************** */

/* ************************************************************************** */
/*
   METHOD:         Constructor for a to object (memory based)
   DESCRIPTION:    
   DEPENDENCIES:   
   DEPENDED ON BY: 
   INPUT PARAMS:   
   OUTPUT PARAMS:  NONE
   RETURN VALUE:   NONE
   CONSTANTS:      NONE
   VARIABLES:      NONE
 */
/* ************************************************************************** */
to::to(BOOL f, char *membase, uint32 offset, uint32 length, BOOL owner) : from(f, membase, offset, length, owner)
{
  if ((owner) && (length==0))
  {
    SetName("To");
  }
}


// copy constructor to header object
to::to(const header &object) : from(object)
{
  type = NFE_HDR_TO;
}


to &to::operator=(const header &object)
{
  from::operator=(object);
  if (this != &object)
  {
    type = NFE_HDR_TO;
  }
  return *this;
}


void to::Display(void)
{
  printf("TO header\n");
  from::Display();
}


