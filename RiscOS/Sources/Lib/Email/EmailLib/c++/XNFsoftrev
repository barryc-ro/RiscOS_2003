/*	Project Post (769)
	Acorn Computers Ltd
	Copyright © 1997. All Rights Reserved.

	FILE:		XNFsoftrev.c++
	AUTHOR:		Richard D. Warren
	VERSION:	0.02 for RISC OS

	OVERVIEW
	========
	Source file for implementation of XNFsoftrev object

	HISTORY
	=======
	17/09/97	0.01	RDW	initial version
	18/02/98	0.02	RDW	#include DebugLib path added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include <string.h>
  #include <ctype.h>
  #include "DebugLib/DebugLib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "XNFsoftrev.h"
#include "mimevers.h"
#include "822parser.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Globals to this file                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes - Private to this file                                 */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Object methods                                                             */
/*                                                                            */
/* ************************************************************************** */

/* ************************************************************************** */
/*
   METHOD:         Constructor for a XNFsoftrev object
   DESCRIPTION:    
   DEPENDENCIES:   
   DEPENDED ON BY: 
   INPUT PARAMS:   
   OUTPUT PARAMS:  NONE
   RETURN VALUE:   NONE
   CONSTANTS:      NONE
   VARIABLES:      NONE
 */
/* ************************************************************************** */
XNFsoftrev::XNFsoftrev(BOOL f, char *membase, uint32 offset, uint32 length, uint32 maj, uint32 min, BOOL owner) : mimevers(f, membase, offset, length, owner)
                                                                      
{
  if ((owner) && (length==0))
  {
    SetName("X-NetFax-Software-Rev");
    char buf[25];
    sprintf(buf, "%d.%02d", maj, min);
    SetBody(buf);
  }
  type = NFE_HDR_X_NF_SOFTWARE_REV;
}


// copy constructor
XNFsoftrev::XNFsoftrev(const XNFsoftrev &object) : mimevers(object)
{
  type = NFE_HDR_X_NF_SOFTWARE_REV;
  copyXNFsoftrevobject(object);
}


// copy constructor from header object
XNFsoftrev::XNFsoftrev(const header &object) : mimevers(object)
{
  type = NFE_HDR_X_NF_SOFTWARE_REV;
}


XNFsoftrev &XNFsoftrev::operator=(const XNFsoftrev &object)
{
  mimevers::operator=(object);
  if (this != &object)
  {
    // do destructor things
    copyXNFsoftrevobject(object);
  }
  return *this;
}


XNFsoftrev &XNFsoftrev::operator=(const header &object)
{
  mimevers::operator=(object);
  if (this != &object)
  {
    // do destructor things
    minor = 0;
    major = 0;
    type = NFE_HDR_X_NF_SOFTWARE_REV;
    parsed = FALSE;
  }
  return *this;
}


void XNFsoftrev::copyXNFsoftrevobject(const XNFsoftrev &object)
{
  major = object.major;
  minor = object.minor;
  parsed = object.parsed;
}


// Implementation of destructor for XNFsoftrev
XNFsoftrev::~XNFsoftrev()
{
  // nothing to do
}


void XNFsoftrev::Display(void)
{
  header::Display();
  printf("major: %d\n", major);
  printf("minor: %d\n", minor);
  printf("\n");
}

