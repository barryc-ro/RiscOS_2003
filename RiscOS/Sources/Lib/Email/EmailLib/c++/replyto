/*	Project Post (769)
	Acorn Computers Ltd
	Copyright © 1997. All Rights Reserved.

	FILE:		replyto.c++
	AUTHOR:		Richard D. Warren
	VERSION:	0.08D for RISC OS

	OVERVIEW
	========
	Source file for implementation of replyto object

	HISTORY
	=======
	20/08/97	0.01	RDW	initial version
	12/09/97	0.02	RDW	Merged file and memory constructors into one
	26/09/97	0.03	RDW	set parsed to true in constructor when
					creating object	from scratch and also
					in parse method on success
	29/09/97	0.04	RDW	Changed to inherit from the from class so the
					commonality between replyto, to and from is
					in one class
	18/02/98	0.05	RDW	#include DebugLib path added
	23/04/98	0.06D	RDW	#ifdef DISPLAY round Display method added
	08/06/98	0.07D	RDW	Modified to use hdr_registry
	14/06/98	0.08D	RDW	Fixed operator= from header object to
					reset the type data member correctly.
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include <string.h>
  #include <ctype.h>
  #include "DebugLib/DebugLib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "replyto.h"
#include "from.h"
#include "822parser.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New types - Private to this file                                           */
/*                                                                            */
/* ************************************************************************** */
class replyto_registry : public header_registry
{
  public:
    replyto_registry();
    header* create_header(bool filebased, char *membase, uint32 offset,
                          uint32 length, bool owner);
    header* create_header(header& h);
};


/* ************************************************************************** */
/*                                                                            */
/* Globals to this file                                                       */
/*                                                                            */
/* ************************************************************************** */
const char       NFE_HDR_REPLY_TO_STRING[] = "Reply-To";			// The header class' header fieldname
replyto_registry rr;								// The registry object for this header class


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes - Private to this file                                 */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Object methods                                                             */
/*                                                                            */
/* ************************************************************************** */
replyto_registry::replyto_registry() : header_registry()
{
  reg_name  = NFE_HDR_REPLY_TO_STRING;
}


header* replyto_registry::create_header(header& h)
{
  return new replyto(h);
}


header* replyto_registry::create_header(bool filebased, char *membase,
                                        uint32 offset, uint32 length, bool owner)
{
  return new replyto(filebased, membase, offset, length, owner);
}


/* ************************************************************************** */
/*
   METHOD:         Constructor for a replyto object (memory based)
   DESCRIPTION:
   DEPENDENCIES:
   DEPENDED ON BY:
   INPUT PARAMS:
   OUTPUT PARAMS:  NONE
   RETURN VALUE:   NONE
   CONSTANTS:      NONE
   VARIABLES:      NONE
 */
/* ************************************************************************** */
replyto::replyto(bool f, char *membase, uint32 offset, uint32 length, bool owner)
        :from(f, membase, offset, length, owner)
{
  type = rr.GetType();
  if ((owner) && (length==0))
  {
    SetName(NFE_HDR_REPLY_TO_STRING);
  }
}


// copy constructor replyto header object
replyto::replyto(const header &object) : from(object)
{
  type = rr.GetType();
}


replyto &replyto::operator=(const header &object)
{
  from::operator=(object);
  if (this != &object)
  {
    // do destructor things
    type = rr.GetType();
  }
  return *this;
}


#ifdef DISPLAY
void replyto::Display(void)
{
  printf("REPLY-TO header\n");
  header::Display();
}
#endif
