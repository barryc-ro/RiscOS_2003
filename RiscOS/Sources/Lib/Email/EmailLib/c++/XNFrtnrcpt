/*	Project Daytona-SW (757)
	Acorn Computers Ltd.
	Copyright © 1998. All Rights Reserved.

	FILE:		XNFrtnrcpt.c++
	AUTHOR:		Richard D. Warren
	VERSION:	0.03D for RISC OS

	OVERVIEW
	========
	Source file for implementation of XNFreturnreciptto object

	HISTORY
	=======
	20/02/98	0.01	RDW	initial version
	23/04/98	0.02D	RDW	#ifdef DISPLAY round Display method added
	09/06/98	0.03D	RDW	Modified to use hdr_registry
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include <string.h>
  #include <ctype.h>
  #include "DebugLib/DebugLib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "XNFrtnrcpt.h"
#include "header.h"
#include "822parser.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New types - Private to this file                                           */
/*                                                                            */
/* ************************************************************************** */
class xnf_rtnrcpt_registry : public header_registry
{
  public:
    xnf_rtnrcpt_registry();
    header* create_header(BOOL filebased, char *membase, uint32 offset,
                          uint32 length, BOOL owner);
    header* create_header(header& h);
};


/* ************************************************************************** */
/*                                                                            */
/* Globals to this file                                                       */
/*                                                                            */
/* ************************************************************************** */
const char           NFE_HDR_XNF_RTNRCPT_STRING[] = "X-NetFax-Return-Receipt-To";// The header class' header fieldname
xnf_rtnrcpt_registry xnfdrr;							// The registry object for this header class


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes - Private to this file                                 */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Object methods                                                             */
/*                                                                            */
/* ************************************************************************** */
xnf_rtnrcpt_registry::xnf_rtnrcpt_registry() : header_registry()
{
  reg_name = NFE_HDR_XNF_RTNRCPT_STRING;
}


header* xnf_rtnrcpt_registry::create_header(header& h)
{
  return new XNFreturnreceiptto(h);
}


header* xnf_rtnrcpt_registry::create_header(BOOL filebased, char *membase,
                                           uint32 offset, uint32 length, BOOL owner)
{
  return new XNFreturnreceiptto(filebased, membase, offset, length, owner);
}


/* ************************************************************************** */
/*
   METHOD:         Constructor for a XNFreturnreceiptto object
   DESCRIPTION:    
   DEPENDENCIES:   
   DEPENDED ON BY: 
   INPUT PARAMS:   
   OUTPUT PARAMS:  NONE
   RETURN VALUE:   NONE
   CONSTANTS:      NONE
   VARIABLES:      NONE
 */
/* ************************************************************************** */
XNFreturnreceiptto::XNFreturnreceiptto(BOOL f, char *membase, uint32 offset,
                                       uint32  length, BOOL owner)
                   :from(f, membase, offset, length, owner)
{
  type = xnfdrr.GetType();
  if ((owner) && (length==0))
  {
    SetName(NFE_HDR_XNF_RTNRCPT_STRING);
  }
}


// copy constructor to header object
XNFreturnreceiptto::XNFreturnreceiptto(const header &object) : from(object)
{
  type = xnfdrr.GetType();
}


XNFreturnreceiptto &XNFreturnreceiptto::operator=(const header &object)
{
  from::operator=(object);
  if (this != &object)
  {
    type = xnfdrr.GetType();
  }
  return *this;
}


#ifdef DISPLAY
void XNFreturnreceiptto::Display(void)
{
  printf("X-NetFax-Return-Receipt-To header\n");
  from::Display();
}
#endif

