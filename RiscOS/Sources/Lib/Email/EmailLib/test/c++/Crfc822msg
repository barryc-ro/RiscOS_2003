extern "C"
{
  #include <string.h>
  #include <stdio.h>
  #include "DebugLib.h"
}

#include "rfc822msg.h"
#include "to.h"
#include "from.h"
#include "body.h"

int main(int argc, char *argv[])
{
  rfc822msg *obj = 0;
  body *bobj = new body(TRUE, "1/msg", 0, 47, NFE_TE_7BIT, TRUE);
  obj = new rfc822msg(TRUE, 0, 0, 0, TRUE);

  if ((obj) && (bobj))
  {
    NFE_CONTEXT context;
    NFE_rcode rc = NFE_RUNNING;
    to tohdr(FALSE, 0, 0, 0, TRUE);
    from fromhdr(FALSE, 0, 0, 0, TRUE);
    
    bobj->ParseData(context, 50);
    bobj->Display();
    
    obj->ReplaceBody(bobj);
    
    obj->Display();
    
    rc = tohdr.SetAddress("rwarren@acorn.com");
    printf("SetAddress rc: %d\n", rc);
    rc = tohdr.SetRealName("Richard Warren");
    printf("SetRealName rc: %d\n", rc);
    
    rc = fromhdr.SetAddress("rwarren@acorn.com");
    printf("SetAddress rc: %d\n", rc);
    rc = fromhdr.SetRealName("Richard Warren");
    printf("SetRealName rc: %d\n", rc);
    
    rc = obj->SetTo(tohdr);
    printf("SetTo rc: %d\n", rc);
    rc = obj->SetFrom(fromhdr);
    printf("SetFrom rc: %d\n", rc);

    obj->Display();
    
    FILE *file = fopen("1out/msg", "wb");
      
    if (file)
    {
      rc = obj->WriteOut(context, 0, file);
      printf("WriteOut rc: %d\n", rc);
      fclose(file);
    }
    else
      printf("failed to open WriteOut file\n");
  }
  else
    printf("Malloc failed");
  
  if (obj)
    delete obj;
    
  return 0;
}
