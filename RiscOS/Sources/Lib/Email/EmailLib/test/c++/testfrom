extern "C"
{
  #include <string.h>
  #include <stdio.h>
  #include <stdlib.h>
  #include "DebugLib/DebugLib.h"
#ifdef MemCheck_MEMCHECK
  #include "MemCheck:MemCheck.h"
#endif
}

#include "Email/EmailLib/from.h"

int main(int argc, char *argv[])
{
#ifdef MemCheck_MEMCHECK
  MemCheck_InitNoDebug();
  MemCheck_RedirectToFilename("testfmc");
  MemCheck_SetStoreMallocFunctions(1);
  MemCheck_InterceptSCLStringFunctions();
  atexit(MemCheck_OutputBlocksInfo);
#endif
  char *test = "From: Richard D. Warren <rwarren@acorn.com>,, Wibble Person <me@home>, norealname@somewhere, , Broken Email address broken@home.org\r\n";

/*  char *test = "From: Andrew Hodgkinson <ahodgkinson@acorn.com>, Alan Glover <aglover@acorn.com>,\r\n\tAlan Wrigley <awrigley@acorn.com>, Ben Avison <bavison@acorn.com>,\r\n\tBen Laughton <blaughton@acorn.com>, David Cotton <dcotton@acorn.com>,\r\n\tJohn Beranek <jberanek@acorn.com>, Mark Moir <mmoir@acorn.com>,\r\n\tNeil Bingham <nbingham@acorn.com>, Nick Evans <ncevans@acorn.com>,\r\n\tRichard Legget <rleggett@acorn.com>, Richard Manby <rmanby@acorn.com>,\r\n\tRichard Warren <rwarren@acorn.com>, Simon Forrest <sforrest@acorn.com>,\r\n\tSteve Rose <srose@acorn.com>\r\n";*/
  char *temp = 0;
  uint32 length = strlen(test);
  uint32 templen = length;
  ELIB_CONTEXT context;
  ELib_rcode rc;

  debug_initialise("testfrom", "testfout", 0);
  debug_output_device(TML_OUTPUT);
  debug_atexit();

  from h1(false, test, 0, strlen(test));

  rc = h1.ParseData(context, 0);
  printf("ParseData rc: %d\n", rc);

  from h2(h1);		// Make copy of header for MemCheck - check for leaks, etc.

  temp = new char[templen];
  rc = h1.GetName(temp, templen);
  printf("GetName rc: %d\ntemplen: %d\ntemp: %s\n", rc, templen, temp);

  templen = length;
  rc = h1.GetRealBody(temp, templen);
  printf("GetRealBody rc: %d\ntemplen: %d\ntemp: %s\n", rc, templen, temp);

  templen = length;
  rc = h1.GetUnfoldedBody(temp, templen);
  printf("GetUnfoldedBody rc: %d\ntemplen: %d\ntemp: %s\n", rc, templen, temp);

  templen = length;
  rc = h1.GetUnfoldedNoCommentsBody(temp, templen);
  printf("GetUnfoldedNoCommentsBody rc: %d\ntemplen: %d\ntemp: %s\n", rc, templen, temp);

  printf("\nh1\n");
  h1.Display();
  printf("\nh2\n");
  h2.Display();
//  for (int i=0; i<templen; i++)
//    printf("%d %c %d\n", i, temp[i], temp[i]);

  delete[] temp;

  printf("\n");
  printf("Testing individual mailboxes\n");
  uint32 num = h1.GetNumMailboxes();
  printf("Num Mailboxes: %d\n", num);
  if (num > 0)
  {
    for (uint32 i=0;i<num;i++)
    {
      mailbox* m = h1.GetMailbox(i);
      if (m)
      {
        printf("\nMailbox num: %d\t", i);
        if (m->Parsed())
          printf("PARSED\n");
        else
          printf("NOT PARSED\n");
        m->Display();
      }
      else
        printf("Failed to get mailbox: %d\n", i);
    }
  }

  return 0;
}
