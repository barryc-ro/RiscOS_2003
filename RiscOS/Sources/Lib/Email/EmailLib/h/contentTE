#if !defined(__contentTE_h)              /* Sentry, use file only if it's not already included. */
#define __contentTE_h
/*	Project Post (769)
	Acorn Risc Technologies
	Copyright © 1997. All Rights Reserved.

	FILE:		contentTE.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.03 for RISC OS

	OVERVIEW
	========
	Class definition for a contentTE object.
	contentTE is a ContentTransferEncoding header object which inherits
	properties from it's header base class

	HISTORY
	=======
	31/08/97	0.01	RDW	initial version
	12/09/97	0.02	RDW	Merged file and memory constructors into one
	18/02/98	0.03	RDW	#include DebugLib path added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include <time.h>
  #include "DebugLib/DebugLib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "header.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Class definition                                                           */
/*                                                                            */
/* ************************************************************************** */
class contentTE : public header
{
  // Declaration of PUBLIC member functions
  public:
    // Constructor (memory version)
    contentTE(BOOL f,								// file (TRUE) or memory(FALSE)?
           char   *membase,							// set to start of memory block that contenttransferencoding header is in
           uint32  offset,							// number of characters from membase to start of contenttransferencoding header
           uint32  length,							// length of contenttransferencoding header in characters from it's start
           NFE_TE  enc = NFE_TE_UNKNOWN,
           BOOL    owner = FALSE);						// does the object 'own' this memory block? (TRUE = destroy membase on destruction)
    contentTE(const contentTE &object);						// copy constructor
    contentTE(const header &object);						// copy constructor from a header object.  A contentTE object can therefore be assigned the
    										// properties of a header object.  This is used where a header object which has parsed data in a
    										// file or memory has found to have a fieldname of "ContentTransferEncoding".  a contentTE object
    										// can then be created and assigned the information from the header object without having to
    										// parse it again.  The header object can then be destroyed.

    virtual ~contentTE(void);							// Destructor

    contentTE & operator=(const contentTE &object);				// assignment from contentTE to contentTE
    contentTE & operator=(const header &object);				// assignment from header to contentTE
    
    NFE_rcode GetTE(NFE_TE &enc);						// Get encoding type
    void Display(void);								// for debug/development work.  Can go in final version
    
    
  // Declaration of PRIVATE member functions
  private:
    NFE_rcode parse(NFE_CONTEXT &context, clock_t t_slice);			// parse the data from file or memory, called by ParseData method
    void copycontentTEobject(const contentTE &object);				// method to copy object.  Used by copy construtor and assignment opertor

    
  // Declaration of PUBLIC data members
  public:


  // Declaration of PRIVATE data members
  private:
    BOOL      parsed;								// has the  ContentTransferEncoding specific data been parsed?  ie the major and minor types
    NFE_TE    encoding;								// Encoding type
};

#endif  /* end of sentry #ifdef */

