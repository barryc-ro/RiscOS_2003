#if !defined(__header_registry_h)              /* Sentry, use file only if it's not already included. */
#define __header_registry_h
/*	Project Post (769)
	Acorn Risc Technologies
	Copyright © 1998. All Rights Reserved.

	FILE:		hdr_reg.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.01D for RISC OS

	OVERVIEW
	========
	Class definition for a hdr_registry object.
	The hdr_registry is a registry specialising in header objects.  The
	header class and all classes derived from it *must* register with this
	registry.

	HISTORY
	=======
	07/06/97	0.01D	RDW	initial version
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include "Elib.h"
}
#include "header.h"
#include "qautils/list.h"


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Class definition                                                           */
/*                                                                            */
/* ************************************************************************** */
class hdr_registry
{
  // Declaration of PUBLIC member functions
  public:
    static hdr_registry& Instance(void);					// Get the instance of the registry
#ifdef DISPLAY
    static void display_count(void);						// Display the registry counter
#endif
    NFE_HDR_TYPE GetType(const char *name);					// Get the unique registry ID for the given header field name from the registry

    header* create_specific_header(const char* name, bool filebased,
                                   char *membase, uint32 offset,
                                   uint32 length, bool owner);			// Create the specific header object for the given header field name
    header* create_specific_header(header& h);					// Create the specific header object from the given header field name in the given header object
    NFE_HDR_TYPE reg(header_registry *reg_object);				// Add the given registry object to the registry

  // Declaration of PRIVATE member functions
  protected:
    hdr_registry(void);								// Default constructor

  // Declaration of PRIVATE member functions
  private:
    static header_registry* GetRegistry(const char *name);			// Get the registry object for the given header field name
    static QAList& list(void);							// Ensure the list is created

  // Declaration of PUBLIC data members
  public:

  // Declaration of PROTECTED data members
  protected:

  // Declaration of PRIVATE data members
  private:
    static hdr_registry* _instance;						// The instance of the hdr_registry
    static QAList* _list;							// The list of registry objects
    static uint32 reg_count;							// The current number of registry objects
    static bool no_default;							// Flag to indicate if the base (header class) registry has been done yet
};

#endif  /* end of sentry #ifdef */

