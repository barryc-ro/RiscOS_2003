#if !defined(__elib_h)              /* Sentry, use file only if it's not already included. */
#define __elib_h
/*	Project Post (769)
	Acorn Computers Ltd
	Copyright © 1997. All Rights Reserved.

	FILE:		ELib.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.07 for RISC OS

	OVERVIEW
	========
	Header file for the Post Email library

	HISTORY
	=======
	21/07/97	0.01	RDW	initial version
	24/07/97	0.02	RDW	corrected overview and dates.  Added INVALIDCONTEXT, NOTENOUGHTIME to ELib_rcode
	xx/08/97	0.03	RDW	commented out the signed int typedefs as cfront can't do signed.  Replaced with
					implicit signed types
	10/10/97	0.04	RDW	#define and #ifndef check put round bool type definition
	19/01/98	0.05	RDW	ELIB_ENOTVALIDENTITY added to ELib_rcode
	21/01/98	0.06	RDW	ELIB_EINVALIDMULTIPART and ELIB_ENOTVALIDENTITY added to ELib_rcode
	31/08/98	0.07	RDW	bool replaced with include from Email/Common/bool.h
					int types replaced with include from Email/Common/types.h
					ELib_rcode removed - to be replaced with ELib_rcode from Email/Common/types.h
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
#include <stdio.h>


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "Email/Common/bool.h"
#include "Email/Common/types.h"


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */
typedef void* ELIB_CONTEXT;				// context ADT

typedef enum
{
  ELIB_TE_NONE = 0,					// Equals "7bit" and has had no encoding performed on it
  ELIB_TE_7BIT = 0,					// "7bit" and has had no encoding performed on it (DEFAULT)
  ELIB_TE_8BIT = 1,					// body is 8bit data which has had no encoding performed on it
  ELIB_TE_BINARY = 3,					// body is binary data which has had no encoding performed on it
  ELIB_TE_QUOTED_PRINTABLE = 4,				// quoted printable encoding has been applied
  ELIB_TE_BASE64 = 5,					// Base64 encoding has been applied
  ELIB_TE_UNKNOWN = 6					// unknown encoding
} ELIB_TE;						// Body transfer encodings

typedef enum
{
  ELIB_CT_APPLICATION,
  ELIB_CT_TEXT,
  ELIB_CT_MULTIPART,
  ELIB_CT_MESSAGE,
  ELIB_CT_IMAGE,
  ELIB_CT_AUDIO,
  ELIB_CT_VIDEO,
  ELIB_CT_MODEL,
  ELIB_CT_UNKNOWN
} ELIB_CT;						// MIME default must be first(0) - this is application for application/octet-stream

typedef enum
{
  ELIB_CT_TEXT_PLAIN,
  ELIB_CT_TEXT_RICHTEXT,
  ELIB_CT_TEXT_ENRICHED,
  ELIB_CT_TEXT_HTML,
  ELIB_CT_TEXT_SGML,
  ELIB_CT_TEXT_UNKNOWN
} ELIB_CT_TEXT_TYPE;					// MIME default must be 0, this is text for text/plain

typedef enum
{
  ELIB_CT_MULTIPART_MIXED,
  ELIB_CT_MULTIPART_ALTERNATIVE,
  ELIB_CT_MULTIPART_DIGEST,
  ELIB_CT_MULTIPART_PARALLEL,
  ELIB_CT_MULTIPART_ENCRYPTED,
  ELIB_CT_MULTIPART_UNKNOWN
} ELIB_CT_MULTIPART_TYPE;				// MIME default must be 0, this is mixed for multipart/mixed

typedef enum
{
  ELIB_CT_APPLICATION_OCTET_STREAM,
  ELIB_CT_APPLICATION_PGP_ENCRYPTED,
  ELIB_CT_APPLICATION_PGP_KEYS,
  ELIB_CT_APPLICATION_UNKNOWN
} ELIB_CT_APPLICATION_TYPE;				// MIME default must be 0, this is application for application/octet-stream

typedef enum
{
  ELIB_CT_IMAGE_TIFF,
  ELIB_CT_IMAGE_UNKNOWN
} ELIB_CT_IMAGE_TYPE;


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes                                                        */
/*                                                                            */
/* ************************************************************************** */
extern ELib_rcode new_context(ELIB_CONTEXT *context);
extern ELib_rcode destroy_context(ELIB_CONTEXT *context);


#endif  /* end of sentry #ifdef */
