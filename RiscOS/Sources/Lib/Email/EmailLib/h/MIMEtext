#if !defined(__MIMEtext_h)              /* Sentry, use file only if it's not already included. */
#define __MIMEtext_h
/*	Project Post (769)
	Acorn Risc Technologies
	Copyright © 1997. All Rights Reserved.

	FILE:		MIMEtext.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.02D for RISC OS

	OVERVIEW
	========
	Class definition for a MIMEtext object.
	MIMEtext is a class derived from the MIMEentity class adding specific
	data members for a MIME text object.  The assignement operators and
	copy constructors are probably not needed as the defaults would do.
	This needs to be checked and tidied up.

	HISTORY
	=======
	24/11/97	0.01	RDW	initial version
	12/05/98	0.01D	RDW	virtual copy constructor, clone(), added
	25/05/98	0.02D	RDW	#ifdef DISPLAY round Display method added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "MIMEentity.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Class definition                                                           */
/*                                                                            */
/* ************************************************************************** */
class MIMEtext : public MIMEentity
{
  // Declaration of PUBLIC member functions
  public:
    // Constructor
    MIMEtext(BOOL f,								// file (TRUE) or memory(FALSE)?
           char   *membase,							// set to start of memory block that MIMEtext is in
           uint32  offset,							// number of characters from membase to start of MIMEtext
           uint32  length,							// length of MIMEtext in characters from it's start
           NFE_CT_TEXT_TYPE t = NFE_CT_TEXT_UNKNOWN,				// MIME text type if known
           BOOL    owner = FALSE);						// does the object 'own' this memory block? (TRUE = destroy membase on destruction)
    MIMEtext(const MIMEtext &object);						// copy constructor
    MIMEtext(const MIMEentity &object);						// copy constructor
    virtual elibbase* clone(void) const { return new MIMEtext(*this); }		// Virtual Copy constructor
    
    MIMEtext& operator=(const MIMEtext &object);				// assignment operator
    MIMEtext& operator=(const MIMEentity &object);				// assignment operator
    virtual ~MIMEtext(void);							// Desctructor
        
#ifdef DISPLAY    
    virtual void Display(void);							// for debug/development work.  Can be removed in final version
#endif
    NFE_rcode parse(NFE_CONTEXT &context, clock_t t_slice);			// parse the data from file or memory

  // Declaration of PROTECTED member functions
  protected:
    
  // Declaration of PRIVATE member functions
  private:
    void copyMIMEtextobject(const MIMEtext &object);				// method to copy object.  Used by copy constructor and assignment operator

  // Declaration of PUBLIC data members
  public:
    
  // Declaration of PROTECTED data members
  protected:

  // Declaration of PRIVATE data members
  private:
    NFE_CT_TEXT_TYPE text_type;							// The MIME text type of this object (eg. TIFF, JPEG, etc.)
    BOOL             parsed;
};

#endif  /* end of sentry #ifdef */
