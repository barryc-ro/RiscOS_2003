#if !defined(__Xorganization_h)              /* Sentry, use file only if it's not already included. */
#define __Xorganization_h
/*	Project Post (769)
	Acorn Risc Technologies
	Copyright © 1997. All Rights Reserved.

	FILE:		Xorganization.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.01 for RISC OS

	OVERVIEW
	========
	Class definition for a Xorganization object.

	HISTORY
	=======
	18/09/97	0.01	RDW	initial version
	18/02/98	0.02	RDW	#include DebugLib path added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include <time.h>
  #include "DebugLib/DebugLib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "header.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Class definition                                                           */
/*                                                                            */
/* ************************************************************************** */
class Xorganization : public header
{
  // Declaration of PUBLIC member functions
  public:
    // Default Constructor - is memory version
    Xorganization(void);

    // Constructor
    Xorganization(bool f,							// file (true) or memory(false)?
           char   *membase,							// set to start of memory block that  Xorganization is in
           uint32  offset,							// number of characters from membase to start of  Xorganization
           uint32  length,							// length of  Xorganization in characters from it's start
           char   *org = 0,							// organisation name
           bool    owner = false);						// does the object 'own' this memory block? (true = destroy membase on destruction)

    Xorganization(const Xorganization &object);					// copy constructor
    Xorganization(const header &object);					// copy constructor from a header object

    Xorganization & operator=(const Xorganization &object);			// assignment operator
    Xorganization & operator=(const header &object);				// assignment operator from header

    void Display(void);								// for debug/development work.  Can go in final version

    virtual ~Xorganization(void);						// Destructor


  // Declaration of PRIVATE member functions
  private:
    void copyXorganizationobject(const Xorganization &object);				// method to copy object.  Used by copy constructor and assignment operator


  // Declaration of PUBLIC data members
  public:

  // Declaration of PROTECTED data members
  protected:

  // Declaration of PRIVATE data members
  private:
};

#endif  /* end of sentry #ifdef */

