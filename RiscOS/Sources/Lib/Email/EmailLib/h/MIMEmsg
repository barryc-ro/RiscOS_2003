#if !defined(__MIMEmessage_h)              /* Sentry, use file only if it's not already included. */
#define __MIMEmessage_h
/*	Project Post (769)
	Acorn Risc Technologies
	Copyright © 1998. All Rights Reserved.

	FILE:		MIMEmessage.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.01D for RISC OS

	OVERVIEW
	========
	Class definition for a MIMEmessage object.
	MIMEmessage is a class derived from the MIMEentity class adding specific
	data members for a MIME message object.  The assignement operators and
	copy constructors are probably not needed as the defaults would do.
	This needs to be checked and tidied up.

	HISTORY
	=======
	16/07/98	0.01D	RDW	initial version
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "MIMEentity.h"
#include "rfc822msg.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Class definition                                                           */
/*                                                                            */
/* ************************************************************************** */
class MIMEmessage : public MIMEentity
{
  // Declaration of PUBLIC member functions
  public:
    // Constructor
    MIMEmessage(bool f,								// file (true) or memory(false)?
                char   *membase,						// set to start of memory block that MIMEmessage is in
                uint32  offset,							// number of characters from membase to start of MIMEmessage
                uint32  length,							// length of MIMEmessage in characters from it's start
                NFE_CT_MESSAGE_TYPE t = NFE_CT_MESSAGE_UNKNOWN,			// MIME message type if known
                bool    owner = false);						// does the object 'own' this memory block? (true = destroy membase on destruction)
    MIMEmessage(const MIMEmessage &object);					// copy constructor
    MIMEmessage(const MIMEentity &object);					// copy constructor
    virtual elibbase* clone(void) const { return new MIMEmessage(*this); }	// Virtual Copy constructor

    MIMEmessage& operator=(const MIMEmessage &object);				// assignment operator
    MIMEmessage& operator=(const MIMEentity &object);				// assignment operator
    virtual ~MIMEmessage(void);							// Desctructor

#ifdef DISPLAY
    virtual void Display(void);							// for debug/development work.
#endif
    NFE_rcode parse(NFE_CONTEXT &context, clock_t t_slice);			// parse the data from file or memory

  // Declaration of PROTECTED member functions
  protected:

  // Declaration of PRIVATE member functions
  private:
    void copyMIMEmessageobject(const MIMEmessage &object);			// method to copy object.  Used by copy constructor and assignment operator

  // Declaration of PUBLIC data members
  public:

  // Declaration of PROTECTED data members
  protected:

  // Declaration of PRIVATE data members
  private:
    NFE_CT_MESSAGE_TYPE message_type;						// The MIME message type of this object (eg. rfc822)
    bool                parsed;
};

#endif  /* end of sentry #ifdef */
