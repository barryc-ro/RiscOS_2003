#ifndef EmailLib_quotedprintable_h
#define EmailLib_quotedprintable_h

/* File:    quotedprintable.h
   Purpose: Interface to Quoted-Printable encoding and decoding routines
   Author:  Ben Laughton

   Copyright 1998 Acorn Computers Ltd

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.

   History:

   1998-09-28: BAL
   Created.
 */




// =============================================================================
// Include header files

// CLib
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// C++Lib
#include <iostream.h>

// EMail
#include "Email/Common/types.h"
#include "Email/EmailLib/ELib.h"




// =============================================================================
// Declare classes

class  quotedprintable
{
    // Public member functions
    public:
                    quotedprintable (const char *const  source,
                                     const uint32       source_len,
                                     char **            dest,
                                     ELib_rcode &       rc);

                    quotedprintable (const char *const  source,
                                     const uint32       source_len,
                                     FILE *const        dest,
                                     ELib_rcode &       rc);

                    quotedprintable (FILE *const   source,
                                     const uint32  source_len,
                                     char **       dest,
                                     ELib_rcode &  rc);

                    quotedprintable (FILE *const   source,
                                     const uint32  source_len,
                                     FILE *const   dest,
                                     ELib_rcode &  rc);

                    ~quotedprintable ();


        ELib_rcode  decode (const clock_t  t_slice,
                            uint32 &       count,
                            const ELIB_TE  dest_encoding = ELIB_TE_NONE);

        ELib_rcode  encode (const clock_t  t_slice,
                            uint32 &       count,
                            const ELIB_TE  source_encoding = ELIB_TE_NONE);


    // Private member functions
    private:
        long int    get_file_size (FILE *const  fp);

    // Private data members
    private:
        // common stuff
        streambuf *   input_stream;
        streambuf *   output_stream;
        uint32        source_len;
        char **       dest;
        bool          first_call;
        uint32        input_count;

        // stuff for decoding
        int          last_non_space_offset;

        // stuff for encoding
        int          lp;
};

#endif
