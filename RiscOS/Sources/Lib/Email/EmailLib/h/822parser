#if !defined(__822parser_h)              /* Sentry, use file only if it's not already included. */
#define __822parser_h
/*	Project Post (769)
	Acorn Computers Ltd
	Copyright © 1997. All Rights Reserved.

	FILE:		822parser.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.02 for RISC OS

	OVERVIEW
	========
	Header file for 822parser processing.

	HISTORY
	=======
	27/07/97	0.01	RDW	initial version
	19/09/97	0.02	RDW	consume_number which returns a uint32
					and consume_hex_number which consumes
					a hexidecimal number added.
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "ELib.h"


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes                                                        */
/*                                                                            */
/* ************************************************************************** */

// consume all SPACE and TAB characters from data onwards upto length or run out of LWSP.
// data and length modified on return to point to next character.  returns TRUE if error occurs
BOOL consume_all_LWSP(char *&data, uint32 &length);

// consume a number from data upto length or run out of digits.  number must be of length
// min at least and max at most.  digit is the number read in.  returns TRUE if error occurs
// data and length modified on return to point to next character in data
BOOL consume_number(char *&data, uint32 &length, uint32 min, uint32 max, int32 &digit);

// consume a number from data upto length or run out of digits.  number must be of length
// min at least and max at most.  digit is the number read in.  returns TRUE if error occurs
// data and length modified on return to point to next character in data
BOOL consume_number(char *&data, uint32 &length, uint32 min, uint32 max, uint32 &digit);

// consume a string from data upto length or run out of characters.  string read in must be
// of length min at at least and max at most.  buffer is buffer to read string into.  returns
// TRUE if error occurs.  data and length modified on return to point to the next character
// in data and the remaining length of data left.
BOOL consume_string(char *&data, uint32 &length, uint32 min, uint32 max, char *buffer);

// consume a char from data upto length. c is character that must be read.   data and length
// modified on return.  TRUE returned if error occurs (eg. length = 0 or char at data is not
// c, the requested character)
BOOL consume_char(char *&data, uint32 &length, char c);

// consume a number from data upto length or run out of digits.  number must be of length
// min at least and max at most.  digit is the number read in.  returns TRUE if error occurs
// data and length modified on return to point to next character in data (HEX VERSION)
BOOL consume_hex_number(char *&data, uint32 &length, uint32 min, uint32 max, uint32 &digit);


#endif  /* end of sentry #ifdef */
