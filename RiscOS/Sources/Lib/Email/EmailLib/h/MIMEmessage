#if !defined(__MIMEmessage_h)              /* Sentry, use file only if it's not already included. */
#define __MIMEmessage_h
/*	Project Post (769)
	Acorn Computers Ltd.
	Copyright © 1998. All Rights Reserved.

	FILE:		MIMEmessage.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.01 for RISC OS

	OVERVIEW
	========
	Class definition for a MIMEmessage object.

	HISTORY
	=======
	29/10/98	0.01	RDW	initial version
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "MIMEentity.h"
#include "rfc822msg.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Class definition                                                           */
/*                                                                            */
/* ************************************************************************** */

class MIMEmessage : public MIMEentity
{
  private:
    typedef MIMEentity super;

  // Declaration of PUBLIC member functions
  public:
   // Constructor (memory)
    MIMEmessage(bool f,								// file (true) or memory(false)?
                char   *membase,						// set to start of memory block that MIMEmessage is in
                uint32  offset,							// number of characters from membase to start of MIMEmessage
                uint32  length,							// length of MIMEmessage in characters from it's start
                ELIB_CT_MESSAGE_TYPE t = ELIB_CT_MESSAGE_RFC822,		// sub type of message/
                bool    owner = false);						// does the object 'own' this memory block? (true = destroy membase on destruction)
    MIMEmessage(const MIMEmessage &object);					// copy constructor
    MIMEmessage(const MIMEentity &object);					// copy constructor from a MIMEentity object

    MIMEmessage& operator=(const MIMEmessage &object);				// assignment operator
    MIMEmessage& operator=(const MIMEentity &object);				// assignment operator
    virtual ~MIMEmessage(void);							// Destructor

    rfc822msg* GetMessage(void) const;						// Get the rfc822 object.  MIMEmessage still owns the rfc822 object
    ELib_rcode SetMessage(rfc822msg* msg, bool own = true);			// Set the rfc822 object to the one given.  if own set to false, then caller
    										// must ensure that lifetime of the msg exceeds the lifetime of this MIMEmessage
    										// Previous message in body is destroyed if MIMEmessage owns it

    virtual void Display(void);							// for debug/development work.  Can be removed in final version
    ELib_rcode parse(ELIB_CONTEXT &context, clock_t t_slice);			// parse the data from file or memory

  // Declaration of PROTECTED member functions
  protected:

  // Declaration of PRIVATE member functions
  private:
    void copyMIMEmessageobject(const MIMEmessage &object);			// method to copy object.  Used by copy constructor and assignment operator

  // Declaration of PUBLIC data members
  public:

  // Declaration of PROTECTED data members
  protected:

  // Declaration of PRIVATE data members
  private:
    bool bodyarfc822;
    ELIB_CT_MESSAGE_TYPE message_type;
};

#endif  /* end of sentry #ifdef */
