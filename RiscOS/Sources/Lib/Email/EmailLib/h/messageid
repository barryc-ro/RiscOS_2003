#if !defined(__messageid_h)              /* Sentry, use file only if it's not already included. */
#define __messageid_h
/*	Project Post (769)
	Acorn Risc Technologies
	Copyright © 1997. All Rights Reserved.

	FILE:		messageid.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.04 for RISC OS

	OVERVIEW
	========
	Class definition for a messageid object.
	message is a Message-ID header object which inherits properties from
	it's header base class

	HISTORY
	=======
	09/09/97	0.01	RDW	initial version
	12/09/97	0.02	RDW	Merged file and memory constructors into one
	21/09/97	0.03	RDW	Added SetDomain and SetLocalpart methods
	18/02/98	0.04	RDW	#include DebugLib path added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include "DebugLib/DebugLib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "header.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Class definition                                                           */
/*                                                                            */
/* ************************************************************************** */
class messageid : public header
{
  // Declaration of PUBLIC member functions
  public:
    // Constructor
    messageid(bool f,								// file (true) or memory(false)?
           char   *membase,							// set to start of memory block that messageid header is in
           uint32  offset,							// number of characters from membase to start of messageid header
           uint32  length,							// length of messageid header in characters from it's start
           bool    owner = false);						// does the object 'own' this memory block? (true = destroy membase on destruction)
    messageid(const messageid &object);						// copy constructor
    messageid(const header &object);						// copy constructor from a header object.  A messageid object can therefore be assigned the
    										// properties of a header object.  This is used where a header object which has parsed data in a
    										// file or memory has found to have a fieldname of "Message-ID".  a messageid object
    										// can then be created and assigned the information from the header object without having to
    										// parse it again.  The header object can then be destroyed.  The same applies with the
    										// assignment operator below

    virtual ~messageid(void);							// Destructor

    messageid & operator=(const messageid &object);				// assignment from messageid to messageid
    messageid & operator=(const header &object);				// assignment from header to messageid

    ELib_rcode GetLocalpart(char *n, uint32 &len) const;				// Get a copy of the localpart of the message id.
    ELib_rcode GetDomain(char *n, uint32 &len) const;				// Get a copy of the domain part of the messag id.
    char*     GetLocalpart(void) const;						// Get the localpart
    char*     GetDomain(void) const;						// Get the domain part

    ELib_rcode SetDomain(char *n);						// set the real name
    ELib_rcode SetLocalpart(char *n);						// set the email address

    void Display(void);								// for debug/development work.  Can go in final version

  // Declaration of PRIVATE member functions
  private:
    ELib_rcode parse(ELIB_CONTEXT &context, clock_t t_slice);			// parse the data from file or memory, called by ParseData method
    void copymessageidobject(const messageid &object);				// method to copy object.  Used by copy constructor and assignment operator
    ELib_rcode messageid::UpdateBody(void);

  // Declaration of PUBLIC data members
  public:


  // Declaration of PRIVATE data members
  private:
    char     *localpart;							// local part of a Message-ID header field contents
    char     *domain;								// domain of a Message-ID header field contents
    bool      parsed;								// is the value of localpart and domain ok?  ie. is there real data in there yet?
};

#endif  /* end of sentry #ifdef */

