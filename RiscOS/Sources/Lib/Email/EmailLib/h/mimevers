#if !defined(__mimevers_h)              /* Sentry, use file only if it's not already included. */
#define __mimevers_h
/*	Project Post (769)
	Acorn Risc Technologies
	Copyright © 1997. All Rights Reserved.

	FILE:		mimevers.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.04D for RISC OS

	OVERVIEW
	========
	Class definition for a mimevers object.
	mimevers is a MIME-Version header object which inherits properties
	from it's header base class]

	HISTORY
	=======
	20/08/97	0.01	RDW	initial version
	12/09/97	0.02	RDW	Merged file and memory constructors into one
	18/02/98	0.03	RDW	#include DebugLib path added
	12/05/98	0.03D	RDW	virtual copy constructor, clone(), added
	25/05/98	0.04D	RDW	#ifdef DISPLAY round Display method added
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include <time.h>
  #include "DebugLib/DebugLib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
#include "header.h"
extern "C"
{
  #include "ELib.h"
}


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* Class definition                                                           */
/*                                                                            */
/* ************************************************************************** */
class mimevers : public header
{
  // Declaration of PUBLIC member functions
  public:
    // Constructor
    mimevers(bool f,								// file (true) or memory(false)?
           char   *membase,
           uint32  offset,
           uint32  length,
           bool    owner = false);
    mimevers(const mimevers &object);						// copy constructor
    mimevers(const header &object);						// copy constructor from a header object
    virtual elibbase* clone(void) const { return new mimevers(*this); }		// Virtual Copy constructor
    virtual ~mimevers(void);							// Destructor

    mimevers & operator=(const mimevers &object);				// assignment from mimevers to mimevers
    mimevers & operator=(const header &object);					// assignment from header to mimevers

    NFE_rcode GetMajor(uint32 &m) const;					// Get the major version number (eg. XXX from XXX.YYY)
    NFE_rcode GetMinor(uint32 &m) const;					// Get the minor version number (eg. YYY from XXX.YYY)
#ifdef DISPLAY
    void Display(void);								// for debug/development work.  Can go in final version
#endif

  // Declaration of PRIVATE member functions
  private:
    NFE_rcode parse(NFE_CONTEXT &context, clock_t t_slice);			// parse the data from file or memory, called by ParseData method
    void copymimeversobject(const mimevers &object);				// method to copy object.  Used by copy constructor and assignment operator

  // Declaration of PUBLIC data members
  public:

  // Declaration of PROTECTED data members
  protected:
    bool     parsed;								// is the value of major and minor  ie. is there real data in there yet?
    int32    major;								// The major MIME version number
    int32    minor;								// The minor MIME version number

  // Declaration of PRIVATE data members
  private:
};

#endif  /* end of sentry #ifdef */

