/* File:    LocalMailbox.c++
   Purpose:
   Author:  Ben Laughton

   Copyright 1998 Acorn Computers Ltd

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.

   History:

   1998-08-10: BAL
   Created.
 */




// =============================================================================
// Include header files

// CLib
#include <string.h>

// General email
#include "Email/Common/bool.h"
#include "EMail/Common/list.h"
#include "Email/Common/types.h"

// Mailbox
#include "Mailbox.h"
#include "utils.h"

#include "MBoxOpCB/getnummsgs.h"

#include "Local/LocalMailbox.h"
#include "Local/LocalMessage.h"



// =============================================================================
// Define member functions

/* -----------------------------------------------------------------------------
 */

LocalMailbox::LocalMailbox ()
    : Mailbox ()
{
    // Do nothing
}




/* -----------------------------------------------------------------------------
 */

LocalMailbox::~LocalMailbox ()
{
    // Do nothing
}



ELib_rcode  LocalMailbox::GetNumberMessages (MBoxOpCB_getnummsgs *const  cb)
{
    if (cb)
    {
        cb->rc = ELIB_COMPLETED;
        cb->number_messages = _number_messages;
        cb->Callback ();
    }

    return  ELIB_COMPLETED;
}




/* -----------------------------------------------------------------------------
   LocalMailbox::Process

 */

ELib_rcode  LocalMailbox::Process (MBoxOpCB_process *const  cb)
{
    if (cb)
    {
        cb->rc = ELIB_COMPLETED;
        cb->Callback ();
    }

    return ELIB_COMPLETED;
}




ELib_rcode  LocalMailbox::Expunge (MBoxOpCB_expunge *const  cb)
{
    M_unused (cb);
    return ELIB_ENOTSUPPORTED;
}




ELib_rcode  LocalMailbox::UpdateIDs (MBoxOpCB_updateids *const  cb)
{
    M_unused (cb);
    return ELIB_ENOTSUPPORTED;
}




inline uint32  LocalMailbox::GetNumberMessages ()
{
    return _number_messages;
}
