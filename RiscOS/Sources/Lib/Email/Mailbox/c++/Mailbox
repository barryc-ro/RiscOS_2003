/* File:    Mailbox.c++
   Purpose:
   Author:  Richard Warren, Ben Laughton

   Copyright 1998 Acorn Computers Ltd

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.

   History:

   1998-07-24: RDW
     Created.
   1998-09-18: RDW
     Expunge implemented
     expunge_cb_handler implemented

   1998-10-22: BAL
   Optimised RemoveMessage.  Most of the time should now be O(1) instead of
   O(n) (will still be O(n) for the remainder of cases).
 */




// =============================================================================
// Include header files

// General email
#include "Email/Common/bool.h"
#include "Email/Common/types.h"
#include "Email/Common/list.h"

// Mailbox
#include "Mailbox.h"
#include "Message.h"
#include "Expunge.h"




// =============================================================================
// Define member functions

Mailbox::~Mailbox ()
{
    TRAVERSE (messages)
    {
        Message* msg = (Message*)messages.Current();
        if (msg)
        {
            delete msg;
        }
    }
}


void Mailbox::RemoveMessage (Message *  msg)
{
    if (msg)
    {
        Message *  current_msg = (Message *) messages.Current();

        // Most of the time we should already be at the right place in
        // the list.
        if (msg != current_msg)
        {
            // If not then search the list for the message we want
            // to remove.
            messages.Start ();

            while (current_msg = (Message *) messages.Current (),
                       current_msg && current_msg != msg)
            {
                messages.Next ();
            }
        }

        if (msg == current_msg)
        {
            messages.Delete();
            delete msg;
        }
    }
}



ELib_rcode  Mailbox::Expunge (MBoxOpCB_expunge *const  cb)
{
    ELib_rcode rc = ELIB_COMPLETED;

    MBox_expunge *  expunge =
        new MBox_expunge (
                 this,
                 (MBoxCBHandlerMethod) &Mailbox::expunge_cb_handler,
                 cb,
                 *this,
                 rc);

    if (expunge)
    {
        if (rc == ELIB_COMPLETED)
        {
            expunge->Execute ();
        }
        else
        {
            delete expunge;
        }
    }
    else
    {
        rc = ELIB_EMALLOCFAILED;
    }

    return rc;
}


/* -----------------------------------------------------------------------------
   Mailbox::expunge_cb_handler
 */
void  Mailbox::expunge_cb_handler (MBoxCB *const  cb)
{
    MBox_expunge *const  expunge = (MBox_expunge *) cb;

    MBoxOpCB_expunge *  mbox_cb = (MBoxOpCB_expunge *) expunge->mailbox_op;
    if (mbox_cb)
    {
        mbox_cb->mailbox_changed = expunge->mailbox_changed;
        mbox_cb->rc = expunge->rc;
        mbox_cb->Callback();
    }

    if (expunge->rc != ELIB_RUNNING)
        delete expunge;
}
