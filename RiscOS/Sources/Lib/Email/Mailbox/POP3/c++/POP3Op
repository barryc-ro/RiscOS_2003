/* File:    POP3Op.c++
   Purpose:
   Author:  Ben Laughton

   Copyright 1998 Acorn Computers Ltd

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.

   History:

   1998-08-09: BAL
     Created.
   1998-11-18: RDW
     ProcessWimpMessage() method modified to support flag bit 4 being set to
     indicate progress notification data and not termination of operation.
 */




// =============================================================================
// Include header files

// Miscellaneous
#include "AcornPOP3.h"

// General email
#include "Email/Common/types.h"

// Mailbox
#include "MBoxCB.h"

#include "MBoxOpCB/MBoxOpCB.h"

#include "POP3/POP3Op.h"




// =============================================================================
// Define member functions

POP3Op::POP3Op (MBoxCBHandlerObject *const  object,
                MBoxCBHandlerMethod         method,
                MBoxOpCB *const             mbox_op,
                POP3Imp *const              imp,
                const int                   swi,
                ELib_rcode &                rc,
                void *                      client_data)
    : ProtocolOp (object,
                  method,
                  mbox_op,
                  imp,
                  swi,
                  rc,
                  client_data)
{
    // Do nothing
}




POP3Op::~POP3Op ()
{
    // Do nothing
}




/* -----------------------------------------------------------------------------
   POP3Op::ProcessWimpMessage

   Do common processing of an AcornPOP3 Wimp message for all POP3 operations.

   Assumptions
   That operation is complete if bit 4 is not set in the flags.  If a
   particular operation has Wimp messages that e.g. report the progress of
   the operation then that operation needs to override this method.

   Inputs
   WimpMessage &  message: Wimp message from AcornPOP3

   Outputs
   bool &         completed: whether operation has completed
                             ignore if return value is false

   Returns bool
   true:  message relates to this operation
   false: message does not relate to this operation
 */

bool  POP3Op::ProcessWimpMessage (WimpMessage &  message,
                                  bool &         completed)
{
    bool processed = ProtocolOp::ProcessWimpMessage (message,
                                                     completed);
    if (processed)
    {
        completed = true;
        if (error)
        {
            rc = ((POP3Imp *) _session)->TranslateError (error);
        }
        else
        {
            // if AcornPOP3_PROGRESS_NOTIFICATION flag is set, then
            if ((flags & AcornPOP3_PROGRESS_NOTIFICATION)
                 == AcornPOP3_PROGRESS_NOTIFICATION)
            {
                rc = ELIB_RUNNING;
                completed = false;
            }
            else
              rc = ELIB_COMPLETED;
        }
    }

    return processed;
}




/* -----------------------------------------------------------------------------
   POP3Op::ReleaseData
 */

ELib_rcode  POP3Op::ReleaseData ()
{
    unsigned int       flags = 0;
    ELib_rcode         rc = ELIB_COMPLETED;
    _kernel_oserror *  e;

    e = _AcornPOP3_ReleaseData (&flags,
                                _session->GetPollwordAddr (),
                                swi_number,
                                uid);
    if (e)
    {
        rc = ((POP3Imp *) _session)->TranslateError (e);
    }

    return rc;
}
