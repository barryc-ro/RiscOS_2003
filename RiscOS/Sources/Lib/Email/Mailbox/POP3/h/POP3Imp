#ifndef Mailbox_POP3Imp_h
#define Mailbox_POP3Imp_h

// File:    POP3Imp.h
// Purpose:
// Authors: Richard Warren, Ben Laughton
//
// Copyright 1998 Acorn Computers Ltd
//
// This material is the confidential trade secret and proprietary information
// of Acorn Computers. It may not be reproduced, used sold, or transferred to
// any third party without the prior written consent of Acorn Computers.
// All rights reserved.
//
// History:
//
// 1998-06-23: RDW
// Created.
//
// 1998-08-09: BAL
// Extended.




// =============================================================================
// Forward declarations

class POP3Imp;


// =============================================================================
// Include header files

// CLib
#include "kernel.h"

// Toolbox / Wimp
#include "Wimp.h"

// General email
#include "Email/Common/bool.h"
#include "Email/Common/list.h"
#include "Email/Common/types.h"

// Mailbox
#include "ProtocolImp.h"

#include "POP3/POP3Op.h"




// =============================================================================
// Class declarations

class POP3Imp : public ProtocolImp
{
    // Declaration of PUBLIC member functions
    public:
                     POP3Imp (ELib_rcode &  rc);				// Constructor
        virtual     ~POP3Imp ();						// Destructor
        ELib_rcode   QueueOp (POP3Op *const  op);

        bool         ProcessWimpMessage (WimpMessage &  message);

        ELib_rcode   TranslateError (const _kernel_oserror *const  e) const;

        static  int  WimpMessageHandler (WimpMessage *  msg,
                                         void *         handle);

        int          ProcessOperations (WimpMessage *  msg);

    // Declaration of PRIVATE member functions
    private:
        ELib_rcode  Register ();
        ELib_rcode  DeRegister ();
        ELib_rcode  DeQueueOp ();
        bool        Busy ();
        void        execute_op ();

    // Declaration of PRIVATE data members
    private:
        bool               wimpmsg_registered;
        POP3Op *           executing;
        ELib_list          pending;
        static ELib_rcode  _error_table[];
};

#endif  /* end of sentry #ifdef */

