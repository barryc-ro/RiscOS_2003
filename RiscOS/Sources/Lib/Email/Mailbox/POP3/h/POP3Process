#ifndef Mailbox_POP3Process_h
#define Mailbox_POP3Process_h

/* File:    POP3Process.h
   Purpose:
   Author:  Ben Laughton

   Copyright 1998 Acorn Computers Ltd

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.

   History:

   1998-08-10: BAL
   Created.
 */




// =============================================================================
// Include header files

// Miscellaneous
#include "AcornPOP3.h"

// General email
#include "Email/Common/bool.h"
#include "Email/Common/list.h"
#include "Email/Common/types.h"

// Mailbox
#include "MBoxCB.h"
#include "Operation.h"

#include "MBoxOpCB/MBoxOpCB.h"

#include "POP3/POP3GetNumMsgs.h"
#include "POP3/POP3Imp.h"
#include "POP3/POP3ListMsgs.h"
#include "POP3/POP3ListUIDs.h"



// =============================================================================
// Declare classes

// !DANGER WILL ROBINSON!
//
// The order of inheritence appears to be important here.  Experiment shows that
// if it is changed then when a callback handler method of this class is
// invoked, the object associated with it is garbage (i.e. the invisible 'this'
// pointer, if you will, is wrong).
//
// I *think* this might be a bug in CFront, since this way of doing things is
// quite frequently referred to on the net (e.g. SGI's ViewKit library for
// OSF/Motif and CDE).  Admittedly I haven't yet found an example that uses
// multiple inheritence, but G++ appears to cope fine with it.

class POP3MBox_process : public MBoxCBHandlerObject, public Operation
{
    // Declaration of PUBLIC member functions
    public:
              POP3MBox_process (
                          MBoxCBHandlerObject *const  object,
                          MBoxCBHandlerMethod         method,
                          MBoxOpCB *const             mbox_op,
                          POP3Imp *const              imp,
                          ELib_rcode &                rc,
                          void *                      client_data = 0);		// Constructor

              ~POP3MBox_process ();
        void  Execute ();

    // Private methods
    private:
        void  get_num_msgs_cb_handler (MBoxCB *const  cb,
                                       void *         client_data);

        void  list_msgs_cb_handler (MBoxCB *const  cb,
                                    void *         client_data);

        void  list_uids_cb_handler (MBoxCB *const  cb,
                                    void *         client_data);

    // Public data members
    public:
        uint32          number_messages;
        MSG_LIST *      message_list;
        UID_MSG_LIST *  uid_list;

    // Private data members
    private:
        int             _message_list_area;
        int             _uid_list_area;
        POP3Imp *const  _session;

};

#endif  /* end of sentry #ifdef */

