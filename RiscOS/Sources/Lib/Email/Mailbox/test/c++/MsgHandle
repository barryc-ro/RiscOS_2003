/**************************************************************************************************/
/* File:    msghandle.c                                                                           */
/* Purpose: This file contains various functions to use with MessageTrans.                        */
/*          application by default.                                                               */
/* Author:  Neil Bingham (mailto:NBingham@acorn.co.uk)                                            */
/* History: Tue 18th February 1997  ver 0.01 - Created.                                           */
/**************************************************************************************************/


/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */
extern "C"
{
  #include "main.h"
  #include "functions.h"
}
#include "engine.h"

/* ---------------------------------- PRE-PROCESSOR DIRECTIVES ---------------------------------- */
/* -------------------------------------- GLOBAL VARIABLES -------------------------------------- */

/* ----------------------------------------- FUNCTIONS ------------------------------------------ */

/************************************************************************/
/* lookup_message_token                                                 */
/*                                                                      */
/* Function looks up the tag specified in the Messages file and then    */
/* returns the token to the calling function.                           */
/*                                                                      */
/* Parameters: tag - tag in Messages to lookup.                         */
/*                                                                      */
/* Returns:    Token which matches the tag in Messages.                 */
/*                                                                      */
/************************************************************************/
char * lookup_message_token(char *tag)
{
  _kernel_swi_regs  regs;
   
  regs.r[0] = (int) &(Engine::Instance()->message_block);
  regs.r[1] = (int) tag;
  regs.r[2] = 0;

  if (_kernel_swi(MessageTrans_Lookup,&regs,&regs))
  {
    return 0;
  }
  else
  {
    return (char *) regs.r[2];
  }
}


/************************************************************************/
/* wimp_message_error                                                   */
/*                                                                      */
/* Function looks up the tag specified in the Messages file and then    */
/* displays the tag in a standard OS message box.                       */
/*                                                                      */
/* Parameters: tag - Tag in Messages to lookup.                         */
/*                                                                      */
/* Returns:    void                                                     */
/*                                                                      */
/************************************************************************/
void wimp_message_error(char *tag)
{
  _kernel_oserror er;

  er.errnum = 0;
  strncpy(er.errmess, lookup_message_token(tag), 254);

  wimp_report_error(&er,0,lookup_message_token("_TaskName"),0,0,0);
}


/************************************************************************/
/* wimp_message_decide_error                                            */
/*                                                                      */
/* Function looks up the tag specified in the Messages file and then    */
/* displays the tag in a standard OS message box.  If the cancel int is */
/* set to TRUE then a Cancel button is added to the message box, and    */
/* the chose of the user (OK or Cancel) is returned.                    */
/*                                                                      */
/* Parameters: tag    - Tag in Messages to lookup.                      */
/*             cancel - Set to TRUE, then added Cancel button to box.   */
/*                                                                      */
/* Returns:    TRUE (OK clicked), or FALSE (Cancel clicked).            */
/*                                                                      */
/************************************************************************/
int wimp_message_decide_error(char *token, int cancel)
{
  _kernel_oserror   er;
  _kernel_oserror   *is_error;
  _kernel_swi_regs  regs;

  er.errnum = 0;
  strncpy(er.errmess, lookup_message_token(token), 254);

  /* Check to see if cancel is set, and set r1 accordingly */
  if (cancel == TRUE)
  {
    regs.r[1] = 3;
  }
  else
  {
    regs.r[1] = 1;
  }

  /* Setup rest of registers */
  regs.r[0] = (int) &er;
  regs.r[2] = (int) lookup_message_token("_TaskName");

  is_error = _kernel_swi(Wimp_ReportError, &regs, &regs);
  error_check(is_error);

  /* Check r1 to see what button was pressed by the user */
  if (regs.r[1] == 1)
  {
    /* OK Pressed */
    return(TRUE);
  }
  else
  {
    /* Cancel Pressed (if setup) */
    return(FALSE);
  }
}

