#ifndef Mailbox_Message_h
#define Mailbox_Message_h

/* File:    Message.h
   Purpose:
   Author:  Ben Laughton

   Copyright 1998 Acorn Computers Ltd

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.

   History:

   1998-08-08: BAL
   Created.
 */




// =============================================================================
// Include header files

// General email
#include "Email/Common/types.h"

// Mailbox
#include "MBoxCB.h"
#include "Mailbox.h"
#include "ProtocolImp.h"

#include "MBoxOpCB/gethdrs.h"
#include "MBoxOpCB/getlength.h"
#include "MBoxOpCB/getmsg.h"
#include "MBoxOpCB/getsize.h"
#include "MBoxOpCB/setflags.h"




// =============================================================================
// Declare classes

class Message : public MBoxCBHandlerObject
{
    // Public data types and constants
    public:
        // Message flags are not an enumerated *type* so that they can have bitwise
        // operations performed on them without the compiler complaining.
        typedef uint32  Flags;
        enum
        {
            Unset    = 0x00000000,
            Read     = 0x00000001,
            New      = 0x00000002,
            Answered = 0x00000004,
            Delete   = 0x00000008,
            Set      = 0xffffffff
        };

    // Public member funcions
    public:
        virtual             ~Message ();

        virtual ELib_rcode   GetLength (MBoxOpCB_getlength *const  cb) = 0;

        virtual ELib_rcode   GetSize (MBoxOpCB_getsize *const  cb) = 0;

        virtual ELib_rcode   GetHeaders (MBoxOpCB_gethdrs_file *const  cb) = 0;

        virtual ELib_rcode   GetMessage (MBoxOpCB_getmsg_file *const  cb) = 0;

        virtual ELib_rcode   SetFlags (
                                 MBoxOpCB_setflags *const  cb,
                                 const Flags                flags,
                                 const Flags                mask = Set) = 0;

    // Protected member functions
    protected:
                             Message (const Flags    default_flags,
                                      const uint32   len = 0);

    // Protected data members
    protected:
        Flags          _flags;
        uint32         _size;
        uint32         _length;
};

#endif
