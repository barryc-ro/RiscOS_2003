#ifndef Mailbox_Expunge_h
#define Mailbox_Expunge_h

/* File:    Expunge.h
   Purpose:
   Author:  Richard D. Warren

   Copyright 1998 Acorn Computers Ltd

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.

   History:

   1998-09-17: RDW
     Created.

   1998-10-22: BAL
   Private data member section was missing the private: tag, so they were
   in fact public.

   Added private data member to store current position in list.
 */




// =============================================================================
// Include header files

// General email
#include "Email/Common/bool.h"
#include "Email/Common/list.h"
#include "Email/Common/types.h"

// Mailbox
#include "MBoxCB.h"
#include "Operation.h"
#include "Mailbox.h"

#include "MBoxOpCB/MBoxOpCB.h"
#include "Message.h"


// =============================================================================
// Declare classes

// !DANGER WILL ROBINSON!
//
// The order of inheritence appears to be important here.  Experiment shows that
// if it is changed then when a callback handler method of this class is
// invoked, the object associated with it is garbage (i.e. the invisible 'this'
// pointer, if you will, is wrong).
//
// I *think* this might be a bug in CFront, since this way of doing things is
// quite frequently referred to on the net (e.g. SGI's ViewKit library for
// OSF/Motif and CDE).  Admittedly I haven't yet found an example that uses
// multiple inheritence, but G++ appears to cope fine with it.

class MBox_expunge : public MBoxCBHandlerObject, public Operation
{
    // Declaration of PUBLIC member functions
    public:
              MBox_expunge (
                          MBoxCBHandlerObject *const  object,
                          MBoxCBHandlerMethod         method,
                          MBoxOpCB *const             mbox_op,
                          Mailbox &                   mailbox,
                          ELib_rcode &                rc,
                          void *                      client_data = 0);		// Constructor

        void  Execute ();

    // Private methods
    private:
        void           deletemsg_cb_handler (MBoxCB *const  cb);
        Message*  get_next_message (void);

    // Public data members
    public:
        bool            mailbox_changed;

    // Private data members
    private:
        ELib_list&      _messages;
        Mailbox&        _mailbox;
        int             _list_pos;
};

#endif  /* end of sentry #ifdef */

