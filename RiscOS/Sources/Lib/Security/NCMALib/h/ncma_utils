// header file for NCMA_UTILS.H

/* Begin-Prologue */
#ifndef NCMA_UTILS_H
  #define NCMA_UTILS_H
  #undef DECLARE
  #undef INIT
  #ifdef PROTOTYPES_INTERNAL
    #define DECLARE
    #define INIT(x) =(x)
  #else
    #define DECLARE extern
    #define INIT(x)
  #endif
/* End-Prologue */

#define MAX_TAGNAME 128

#define UI_ENV_VAR "UI$Path"


DECLARE void dump_block(unsigned char *, int);
DECLARE int strterm(char *);
DECLARE void shutdown_nc(void);
DECLARE int caseless_strcmp(char *, char *);

DECLARE int ui_present(void);
DECLARE unsigned int read_big_word(char *);
DECLARE unsigned int read_big_short(char *);
DECLARE void write_big_word(char *, unsigned int);
DECLARE void write_big_short(char *, unsigned int);
DECLARE void write_little_word(char *, unsigned int);
DECLARE unsigned int read_little_word(char *);

DECLARE void ncma_hourglass_on(void);
DECLARE void ncma_hourglass_off(void);
DECLARE void ncma_isp_capture(void);

DECLARE char* get_nvram_tag_string(const char* const tag);

DECLARE int ip_ntos(char *, char *);

DECLARE char *expand_ctrls(char const *s);
DECLARE char *strccpy(char *dst, char const *src);
DECLARE char *collapse_quotes(char const *s);
DECLARE void set_base(char *buff, char const *param);
DECLARE void strip_disallowed_chars(char const *s, char *out, const char *allowed);
DECLARE int nquotes(char const *s);
DECLARE int validate_host(char const *host, unsigned int *ret);
DECLARE int validate_proxy(char const *proxy, unsigned int *ret);


/* Begin-Epilogue */
  #undef PROTOTYPES_INTERNAL
  #undef INIT
  #undef DECLARE
#endif
/* End_Epilogue */

