// header file for NCMA_UTILS.H

/* Begin-Prologue */
#ifndef NCMA_UTILS_H
  #define NCMA_UTILS_H
  #undef DECLARE
  #undef INIT
  #ifdef PROTOTYPES_INTERNAL
    #define DECLARE
    #define INIT(x) =(x)
  #else
    #define DECLARE extern
    #define INIT(x)
  #endif
/* End-Prologue */

#include <stdbool.h>

#define MAX_TAGNAME 128

#define UI_ENV_VAR "UI$Path"

#define Service_ConfigurationChanged    0xD4

void dump_block(unsigned char *, int);
int strterm(char *);
void shutdown_nc(void);
int caseless_strcmp(char *, char *);

int ui_present(void);
unsigned int read_big_word(char *);
unsigned int read_big_short(char *);
void write_big_word(char *, unsigned int);
void write_big_short(char *, unsigned int);
void write_little_word(char *, unsigned int);
unsigned int read_little_word(char *);

void ncma_hourglass_on(void);
void ncma_hourglass_off(void);
void ncma_isp_capture(void);

char* get_nvram_tag_string(const char* const tag);

int ip_ntos(char *, char *);

char *expand_ctrls(char const *s);
char *strccpy(char *dst, char const *src);
char *collapse_quotes(char const *s);
void set_base(char *buff, char const *param);
void strip_disallowed_chars(char const *s, char *out, const char *allowed);
int nquotes(char const *s);
int validate_host(char const *host, unsigned int *ret);
int validate_proxy(char const *proxy, unsigned int *ret);
void service_configurationchanged(int flags);
char *misc_getenv_malloc (const char *variable);
void misc_getenv (const char *variable, char *buffer, int buffer_size, int *nbytes);
char* get_line_buffer(const char* const memory_ptr, const char* const end_of_block);
void free_line_buffer(void);
bool convert_linefeeds(char* string);


/* Begin-Epilogue */
  #undef PROTOTYPES_INTERNAL
  #undef INIT
  #undef DECLARE
#endif
/* End_Epilogue */

