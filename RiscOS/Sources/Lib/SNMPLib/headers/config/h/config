/* config.h.  Generated automatically by configure.  */
/* config.h.in.  Generated automatically from configure.in by autoheader.  */
/* config.h:  a general config file */

/* don't change these values! */
#define SNMPV1      0xAAAA       /* readable by anyone */
#define SNMPV2ANY   0xA000       /* V2 Any type (includes NoAuth) */
#define SNMPV2AUTH  0x8000       /* V2 Authenticated requests only */

/* default list of mibs to load */

#define DEFAULT_MIBS "IP-MIB,IF-MIB,TCP-MIB,UDP-MIB,SNMPv2-MIB,RFC1213-MIB,UCD-SNMP-MIB,SNMPv2-PARTY-MIB,SNMPv2-M2M-MIB,SNMP-VIEW-BASED-ACM-MIB"

/* default location to look for mibs to load using the above tokens
   and/or those in the MIBS envrionment variable*/

#define DEFAULT_MIBDIRS "Inetdbase:MIB"

/* default mib files to load, specified by path. */

/* #undef DEFAULT_MIBFILES */

/* should we compile to use special opaque types: float, double,
   counter64, i64, ui64, union? */
#define OPAQUE_SPECIAL_TYPES 1

/* comment the next line if you are compiling with libsnmp.h
   and are not using the UC-Davis SNMP library. */
#define UCD_SNMP_LIBRARY 1

/* comment the next line if you do not want SNMPv2 party-based auth. */
#define USE_V2PARTY_PROTOCOL 1

/* add in recent CMU library extensions (not complete) */
/* #undef CMU_COMPATIBLE */

/* should "--" comments in mibs be a comment till the end of the line
   or also until another "--", the latter being the technically
   correct. */
/* #undef MIB_COMMENT_IS_EOL_TERMINATED */

/* debugging stuff */
/* #undef SNMP_NO_DEBUGGING */           /* if defined, we optimize the code
                                      to exclude all debugging calls. */
#define SNMP_ALWAYS_DEBUG 0        /* Always print debugging information and
                                      ignore the -D flag passed to the cmds */


/* Define if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _ALL_SOURCE
/* #undef _ALL_SOURCE */
#endif

/* Define if using alloca.c.  */
/* #undef C_ALLOCA */

/* Define to empty if the keyword does not work.  */
/* #undef const */

/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.
   This function is required for alloca.c support on those systems.  */
/* #undef CRAY_STACKSEG_END */

/* Define if you have alloca, as a function or macro.  */
/* #define HAVE_ALLOCA 1 */

/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */
/* #define HAVE_ALLOCA_H 1 */

/* Define if you have the getmntent function.  */
/* #define HAVE_GETMNTENT 1 */

/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */
/* #define HAVE_SYS_WAIT_H 1 */

/* Define to `long' if <sys/types.h> doesn't define.  */
/* #undef off_t */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef pid_t */

/* Define as the return type of signal handlers (int or void).  */
#define RETSIGTYPE void

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
 STACK_DIRECTION > 0 => grows toward higher addresses
 STACK_DIRECTION < 0 => grows toward lower addresses
 STACK_DIRECTION = 0 => direction of growth unknown
 */
/* #undef STACK_DIRECTION */

/* Define if you have the ANSI C header files.  */
#define STDC_HEADERS 1

/* Define if you can safely include both <sys/time.h> and <time.h>.  */
#define TIME_WITH_SYS_TIME 1

/* Define if your processor stores words with the most significant
   byte first (like Motorola and SPARC, unlike Intel and VAX).  */
#define WORDS_BIGENDIAN 0

/* define the system type include file here */
#define SYSTEM_INCLUDE_FILE "s/riscos.h"

/* define the machine (cpu) type include file here */
#define MACHINE_INCLUDE_FILE "m/generic.h"

#define SNMPLIBPATH "Inetdbase:SNMP"
#define SNMPSHAREPATH "Inetdbase:SNMP"

/* LOGFILE:  If defined it closes stdout/err/in and opens this in out/err's
   place.  (stdin is closed so that sh scripts won't wait for it) */

/*#define LOGFILE "/var/log/snmpd.log"*/

/* default system contact */
#define SYS_CONTACT "stewart@eh.org"

/* system location */
#define SYS_LOC "Cambridge, United Kingdom."

/* Use libwrap to handle allow/deny hosts? */
/* #undef USE_LIBWRAP */

/* location of UNIX kernel */
#define KERNEL_LOC "/dev/ksyms"

/* location of mount table list */
#define ETC_MNTTAB "/etc/mnttab"

/* location of swap device (ok if not found) */
/* #undef DMEM_LOC */

#define PSCMD "/usr/bin/ps -e"

/* Where is the uname command */
#define UNAMEPROG "/usr/bin/uname"

/* If you don't have root access don't exit upon kmem errors */
/* #undef NO_ROOT_ACCESS */

/* Define if statfs takes 2 args and the second argument has
   type struct fs_data. [Ultrix] */
/* #undef STAT_STATFS_FS_DATA */

/* Define if you have the bcopy function.  */
/* #define HAVE_BCOPY 1 */

/* Define if you have the getdtablesize function.  */
#define HAVE_GETDTABLESIZE 1

/* Define if you have the getfsstat function.  */
/* #undef HAVE_GETFSSTAT */

/* Define if you have the gethostbyname function.  */
#define HAVE_GETHOSTBYNAME 1

/* Define if you have the gethostname function.  */
#define HAVE_GETHOSTNAME 1

/* Define if you have the getloadavg function.  */
/* #undef HAVE_GETLOADAVG */

/* Define if you have the getservbyname function.  */
#define HAVE_GETSERVBYNAME 1

/* Define if you have the gettimeofday function.  */
#define HAVE_GETTIMEOFDAY 1

/* Define if you have the index function.  */
/* #define HAVE_INDEX 1 */

/* Define if you have the kvm_getprocs function.  */
/* #undef HAVE_KVM_GETPROCS */

/* Define if you have the kvm_openfiles function.  */
/* #undef HAVE_KVM_OPENFILES */

/* Define if you have the lrand48 function.  */
/* #define HAVE_LRAND48 1 */

/* Define if you have the memcpy function.  */
#define HAVE_MEMCPY 1

/* Define if you have the memmove function.  */
#define HAVE_MEMMOVE 1

/* Define if you have the nlist function.  */
/* #define HAVE_NLIST 1 */

/* Define if you have the rand function.  */
#define HAVE_RAND 1

/* Define if you have the random function.  */
/* #define HAVE_RANDOM 1 */

/* Define if you have the select function.  */
#define HAVE_SELECT 1

/* Define if you have the setenv function.  */
/* #undef HAVE_SETENV */

/* Define if you have the setlocale function.  */
#define HAVE_SETLOCALE 1

/* Define if you have the setmntent function.  */
/* #undef HAVE_SETMNTENT */

/* Define if you have the sigblock function.  */
/* #undef HAVE_SIGBLOCK */

/* Define if you have the sighold function.  */
/* #define HAVE_SIGHOLD 1 */

/* Define if you have the signal function.  */
#define HAVE_SIGNAL 1

/* Define if you have the sigset function.  */
/* #define HAVE_SIGSET 1 */

/* Define if you have the socket function.  */
#define HAVE_SOCKET 1

/* Define if you have the statfs function.  */
/* #define HAVE_STATFS 1 */

/* Define if you have the statvfs function.  */
/* #define HAVE_STATVFS 1 */

/* Define if you have the strchr function.  */
#define HAVE_STRCHR 1

/* Define if you have the strdup function.  */
/* #define HAVE_STRDUP 1 */

/* Define if you have the strerror function.  */
#define HAVE_STRERROR 1

/* Define if you have the strtol function.  */
#define HAVE_STRTOL 1

/* Define if you have the uname function.  */
/* #define HAVE_UNAME 1 */

/* Define if you have the usleep function.  */
/* #define HAVE_USLEEP 1 */

/* Define if you have the <arpa/inet.h> header file.  */
#define HAVE_ARPA_INET_H 1

/* Define if you have the <asm/page.h> header file.  */
/* #undef HAVE_ASM_PAGE_H */

/* Define if you have the <dirent.h> header file.  */
#define HAVE_DIRENT_H 1

/* Define if you have the <err.h> header file.  */
/* #undef HAVE_ERR_H */

/* Define if you have the <fcntl.h> header file.  */
#define HAVE_FCNTL_H 0

/* Define if you have the <fstab.h> header file.  */
/* #undef HAVE_FSTAB_H */

/* Define if you have the <getopt.h> header file.  */
/* #undef HAVE_GETOPT_H */

/* Define if you have the <inet/mib2.h> header file.  */
#define HAVE_INET_MIB2_H 0

/* Define if you have the <io.h> header file.  */
/* #undef HAVE_IO_H */

/* Define if you have the <ioctls.h> header file.  */
/* #undef HAVE_IOCTLS_H */

/* Define if you have the <kstat.h> header file.  */
#define HAVE_KSTAT_H 0

/* Define if you have the <kvm.h> header file.  */
/* #define HAVE_KVM_H 1 */

/* Define if you have the <limits.h> header file.  */
#define HAVE_LIMITS_H 1

/* Define if you have the <linux/hdreg.h> header file.  */
/* #undef HAVE_LINUX_HDREG_H */

/* Define if you have the <locale.h> header file.  */
#define HAVE_LOCALE_H 1

/* Define if you have the <machine/param.h> header file.  */
#define HAVE_MACHINE_PARAM_H 1

/* Define if you have the <machine/pte.h> header file.  */
/* #undef HAVE_MACHINE_PTE_H */

/* Define if you have the <machine/types.h> header file.  */
/* #undef HAVE_MACHINE_TYPES_H */

/* Define if you have the <malloc.h> header file.  */
/* #define HAVE_MALLOC_H 1 */

/* Define if you have the <mntent.h> header file.  */
/* #undef HAVE_MNTENT_H */

/* Define if you have the <mtab.h> header file.  */
/* #undef HAVE_MTAB_H */

/* Define if you have the <ndir.h> header file.  */
/* #undef HAVE_NDIR_H */

/* Define if you have the <net/if_dl.h> header file.  */
#define HAVE_NET_IF_DL_H 1

/* Define if you have the <net/if_mib.h> header file.  */
/* #undef HAVE_NET_IF_MIB_H */

/* Define if you have the <net/if_types.h> header file.  */
#define HAVE_NET_IF_TYPES_H 1

/* Define if you have the <net/if_var.h> header file.  */
#define HAVE_NET_IF_VAR_H 1

/* Define if you have the <net/route.h> header file.  */
#define HAVE_NET_ROUTE_H 1

/* Define if you have the <netinet/icmp_var.h> header file.  */
#define HAVE_NETINET_ICMP_VAR_H 1

/* Define if you have the <netinet/if_ether.h> header file.  */
#define HAVE_NETINET_IF_ETHER_H 1

/* Define if you have the <netinet/in.h> header file.  */
#define HAVE_NETINET_IN_H 1

/* Define if you have the <netinet/in_pcb.h> header file.  */
#define HAVE_NETINET_IN_PCB_H 1

/* Define if you have the <netinet/in_var.h> header file.  */
#define HAVE_NETINET_IN_VAR_H 1

/* Define if you have the <netinet/ip_var.h> header file.  */
#define HAVE_NETINET_IP_VAR_H 1

/* Define if you have the <netinet/tcp_fsm.h> header file.  */
#define HAVE_NETINET_TCP_FSM_H 1

/* Define if you have the <netinet/tcp_timer.h> header file.  */
#define HAVE_NETINET_TCP_TIMER_H 1

/* Define if you have the <netinet/tcp_var.h> header file.  */
#define HAVE_NETINET_TCP_VAR_H 1

/* Define if you have the <netinet/tcpip.h> header file.  */
#define HAVE_NETINET_TCPIP_H 1

/* Define if you have the <netinet/udp_var.h> header file.  */
#define HAVE_NETINET_UDP_VAR_H 1

/* Define if you have the <nlist.h> header file.  */
#define HAVE_NLIST_H 1

/* Define if you have the <osreldate.h> header file.  */
/* #undef HAVE_OSRELDATE_H */

/* Define if you have the <pkglocs.h> header file.  */
/* #define HAVE_PKGLOCS_H 1 */

/* Define if you have the <sgtty.h> header file.  */
/* #define HAVE_SGTTY_H 1 */

/* Define if you have the <stdlib.h> header file.  */
#define HAVE_STDLIB_H 1

/* Define if you have the <string.h> header file.  */
#define HAVE_STRING_H 1

/* Define if you have the <sys/cdefs.h> header file.  */
/* #undef HAVE_SYS_CDEFS_H */

/* Define if you have the <sys/conf.h> header file.  */
#define HAVE_SYS_CONF_H 0

/* Define if you have the <sys/dir.h> header file.  */
/* #undef HAVE_SYS_DIR_H */

/* Define if you have the <sys/diskio.h> header file.  */
/* #undef HAVE_SYS_DISKIO_H */

/* Define if you have the <sys/disklabel.h> header file.  */
/* #undef HAVE_SYS_DISKLABEL_H */

/* Define if you have the <sys/dkio.h> header file.  */
/* #define HAVE_SYS_DKIO_H 1 */

/* Define if you have the <sys/dmap.h> header file.  */
/* #undef HAVE_SYS_DMAP_H */

/* Define if you have the <sys/file.h> header file.  */
#define HAVE_SYS_FILE_H 0

/* Define if you have the <sys/filio.h> header file.  */
#define HAVE_SYS_FILIO_H 1

/* Define if you have the <sys/fixpoint.h> header file.  */
/* #undef HAVE_SYS_FIXPOINT_H */

/* Define if you have the <sys/fs.h> header file.  */
/* #undef HAVE_SYS_FS_H */

/* Define if you have the <sys/hashing.h> header file.  */
/* #undef HAVE_SYS_HASHING_H */

/* Define if you have the <sys/ioctl.h> header file.  */
#define HAVE_SYS_IOCTL_H 1

/* Define if you have the <sys/mbuf.h> header file.  */
#define HAVE_SYS_MBUF_H 1

/* Define if you have the <sys/mntent.h> header file.  */
/* #define HAVE_SYS_MNTENT_H 1 */

/* Define if you have the <sys/mnttab.h> header file.  */
/* #define HAVE_SYS_MNTTAB_H 1 */

/* Define if you have the <sys/mount.h> header file.  */
/* #define HAVE_SYS_MOUNT_H 1 */

/* Define if you have the <sys/ndir.h> header file.  */
/* #undef HAVE_SYS_NDIR_H */

/* Define if you have the <sys/param.h> header file.  */
#define HAVE_SYS_PARAM_H 1

/* Define if you have the <sys/proc.h> header file.  */
/* #define HAVE_SYS_PROC_H 1 */

/* Define if you have the <sys/protosw.h> header file.  */
#define HAVE_SYS_PROTOSW_H 1

/* Define if you have the <sys/pstat.h> header file.  */
/* #undef HAVE_SYS_PSTAT_H */

/* Define if you have the <sys/queue.h> header file.  */
#define HAVE_SYS_QUEUE_H 1

/* Define if you have the <sys/select.h> header file.  */
#define HAVE_SYS_SELECT_H 1

/* Define if you have the <sys/sockio.h> header file.  */
#define HAVE_SYS_SOCKIO_H 1

/* Define if you have the <sys/stat.h> header file.  */
#define HAVE_SYS_STAT_H 1

/* Define if you have the <sys/statfs.h> header file.  */
#define HAVE_SYS_STATFS_H 0

/* Define if you have the <sys/statvfs.h> header file.  */
#define HAVE_SYS_STATVFS_H 0

/* Define if you have the <sys/stream.h> header file.  */
#define HAVE_SYS_STREAM_H 0

/* Define if you have the <sys/swap.h> header file.  */
#define HAVE_SYS_SWAP_H 0

/* Define if you have the <sys/sysctl.h> header file.  */
#define HAVE_SYS_SYSCTL_H 0

/* Define if you have the <sys/sysmp.h> header file.  */
/* #undef HAVE_SYS_SYSMP_H */

/* Define if you have the <sys/tcpipstats.h> header file.  */
/* #undef HAVE_SYS_TCPIPSTATS_H */

/* Define if you have the <sys/time.h> header file.  */
#define HAVE_SYS_TIME_H 1

/* Define if you have the <sys/user.h> header file.  */
/* #define HAVE_SYS_USER_H 1 */

/* Define if you have the <sys/utsname.h> header file.  */
/* #define HAVE_SYS_UTSNAME_H 1 */

/* Define if you have the <sys/vfs.h> header file.  */
/* #define HAVE_SYS_VFS_H 1 */

/* Define if you have the <sys/vm.h> header file.  */
/* #define HAVE_SYS_VM_H 1 */

/* Define if you have the <sys/vmmac.h> header file.  */
/* #define HAVE_SYS_VMMAC_H 1 */

/* Define if you have the <sys/vmmeter.h> header file.  */
/* #define HAVE_SYS_VMMETER_H 1 */

/* Define if you have the <sys/vmparam.h> header file.  */
#define HAVE_SYS_VMPARAM_H 1

/* Define if you have the <sys/vmsystm.h> header file.  */
/* #define HAVE_SYS_VMSYSTM_H 1 */

/* Define if you have the <sys/vnode.h> header file.  */
/* #define HAVE_SYS_VNODE_H 1 */

/* Define if you have the <syslog.h> header file.  */
/* #define HAVE_SYSLOG_H 1 */

/* Define if you have the <ufs/ffs/fs.h> header file.  */
/* #undef HAVE_UFS_FFS_FS_H */

/* Define if you have the <ufs/fs.h> header file.  */
/* #undef HAVE_UFS_FS_H */

/* Define if you have the <ufs/ufs/dinode.h> header file.  */
/* #undef HAVE_UFS_UFS_DINODE_H */

/* Define if you have the <ufs/ufs/inode.h> header file.  */
/* #undef HAVE_UFS_UFS_INODE_H */

/* Define if you have the <ufs/ufs/quota.h> header file.  */
/* #undef HAVE_UFS_UFS_QUOTA_H */

/* Define if you have the <unistd.h> header file.  */
#define HAVE_UNISTD_H 0

/* Define if you have the <utsname.h> header file.  */
/* #undef HAVE_UTSNAME_H */

/* Define if you have the <vm/swap_pager.h> header file.  */
/* #undef HAVE_VM_SWAP_PAGER_H */

/* Define if you have the <vm/vm.h> header file.  */
/* #undef HAVE_VM_VM_H */

/* Define if you have the <winsock.h> header file.  */
#define HAVE_WINSOCK_H 0

/* Define if you have the <xti.h> header file.  */
/* #define HAVE_XTI_H 1 */

/* Define if you have the elf library (-lelf).  */
/* #define HAVE_LIBELF 1 */

/* Define if you have the kstat library (-lkstat).  */
/* #define HAVE_LIBKSTAT 1 */

/* Define if you have the kvm library (-lkvm).  */
/* #define HAVE_LIBKVM 1 */

/* Define if you have the m library (-lm).  */
/* #define HAVE_LIBM 1 */

/* Define if you have the mld library (-lmld).  */
/* #undef HAVE_LIBMLD */

/* Define if you have the nsl library (-lnsl).  */
/* #define HAVE_LIBNSL 1 */

/* Define if you have the socket library (-lsocket).  */
/* #define HAVE_LIBSOCKET 1 */

/* Define if you have the z library (-lz).  */
#define HAVE_LIBZ

/* define if you are using linux and /proc/net/dev has the compressed
   field, which exists in linux kernels 2.2 and greater. */
/* #undef PROC_NET_DEV_HAS_COMPRESSED */

/* define rtentry to ortentry on SYSV machines (alphas) */
#define RTENTRY struct rtentry

/* Use BSD 4.4 routing table entries? */
/* #undef RTENTRY_4_4 */

/* rtentry structure tests */
/* #undef RTENTRY_RT_NEXT */
#define STRUCT_RTENTRY_HAS_RT_DST 1
/* #undef STRUCT_RTENTRY_HAS_RT_UNIT */
#define STRUCT_RTENTRY_HAS_RT_USE 1
#define STRUCT_RTENTRY_HAS_RT_REFCNT 1
#define STRUCT_RTENTRY_HAS_RT_HASH 1

/* ifnet structure tests */
/* #undef STRUCT_IFNET_HAS_IF_BAUDRATE */
/* #undef STRUCT_IFNET_HAS_IF_SPEED */
/* #undef STRUCT_IFNET_HAS_IF_TYPE */
/* #undef STRUCT_IFNET_HAS_IF_IMCASTS */
/* #undef STRUCT_IFNET_HAS_IF_IQDROPS */
/* #undef STRUCT_IFNET_HAS_IF_LASTCHANGE_TV_SEC */
/* #undef STRUCT_IFNET_HAS_IF_NOPROTO */
/* #undef STRUCT_IFNET_HAS_IF_OMCASTS */
/* #undef STRUCT_IFNET_HAS_IF_XNAME */
/* #undef STRUCT_IFNET_HAS_IF_OBYTES */
/* #undef STRUCT_IFNET_HAS_IF_IBYTES */
#define STRUCT_IFNET_HAS_IF_ADDRLIST 1

/* tcpstat.tcps_rcvmemdrop */
/* #undef STRUCT_TCPSTAT_HAS_TCPS_RCVMEMDROP */

/* udpstat.udps_discard */
/* #undef STRUCT_UDPSTAT_HAS_UDPS_DISCARD */

/* arphd.at_next */
/* #undef STRUCT_ARPHD_HAS_AT_NEXT */

/* ifaddr.ifa_next */
#define STRUCT_IFADDR_HAS_IFA_NEXT 1

/* ifnet.if_mtu */
#define STRUCT_IFNET_HAS_IF_MTU 1

/* swdevt.sw_nblksenabled */
/* #undef STRUCT_SWDEVT_HAS_SW_NBLKSENABLED */

/* nlist.n_value */
#define STRUCT_NLIST_HAS_N_VALUE 1

/* vfsstat.f_frsize */
#define STRUCT_STATVFS_HAS_F_FRSIZE 1

/* ifnet needs to have _KERNEL defined */
/* #undef IFNET_NEEDS_KERNEL */

/* sysctl works to get boottime, etc... */
/* #undef CAN_USE_SYSCTL */

/* type check for in_addr_t */
/* #undef in_addr_t */

/* define if SIOCGIFADDR exists in sys/ioctl.h */
/* #undef SYS_IOCTL_H_HAS_SIOCGIFADDR */

/* define if your compiler (processor) defines __FUNCTION__ for you */
/* #define HAVE_CPP_UNDERBAR_FUNCTION_DEFINED 1 */

/* mib pointer to the top of the extensible tree.  This has been
 assigned to UCDavis by the iana group.  Optionally, point this to the
 location in the tree your company/organization has been allocated. */

/* location of the extensible mib tree */
#define EXTENSIBLEMIB 1,3,6,1,4,1,2265
/* location of the extensible mib tree */
#define EXTENSIBLEDOTMIB 1.3.6.1.4.1.2265
/* count the above numbers */
#define EXTENSIBLENUM 7

/* Mib-2 tree Info */
/* These are the system information variables. */

#define VERS_DESC   "unknown"             /* overridden at run time */
#define SYS_NAME    "unknown"             /* overridden at run time */

/* comment out the second define to turn off functionality for any of
   these: (See README for details) */

/*   proc PROCESSNAME [MAX] [MIN] */
/* #define PROCMIBNUM 2 */

/*   exec/shell NAME COMMAND      */
/* #define SHELLMIBNUM 8 */

/*   swap MIN                     */
/* #define MEMMIBNUM 4 */

/*   disk DISK MINSIZE            */
/* #define DISKMIBNUM 9 */

/*   load 1 5 15                  */
/* #define LOADAVEMIBNUM 10 */

/* which version are you using? This mibloc will tell you */
#define VERSIONMIBNUM 100

/* Reports errors the agent runs into */
/* (typically its "can't fork, no mem" problems) */
#define ERRORMIBNUM 101

/* The sub id of EXENSIBLEMIB returned to queries of
   .iso.org.dod.internet.mgmt.mib-2.system.sysObjectID.0 */
#define AGENTID 250

/* This ID is returned after the AGENTID above.  IE, the resulting
   value returned by a query to sysObjectID is
   EXTENSIBLEMIB.AGENTID.???, where ??? is defined below by OSTYPE */

#define HPUX9ID 1
#define SUNOS4ID 2
#define SOLARISID 3
#define OSFID 4
#define ULTRIXID 5
#define HPUX10ID 6
#define NETBSD1ID 7
#define FREEBSDID 8
#define IRIXID 9
#define LINUXID 10
#define BSDIID 11
#define OPENBSDID 12
#define UNKNOWNID 255

#ifdef hpux9
#define OSTYPE HPUX9ID
#endif
#ifdef hpux10
#define OSTYPE HPUX10ID
#endif
#ifdef sunos4
#define OSTYPE SUNOS4ID
#endif
#ifdef solaris2
#define OSTYPE SOLARISID
#endif
#if defined(osf3) || defined(osf4)
#define OSTYPE OSFID
#endif
#ifdef ultrix4
#define OSTYPE ULTRIXID
#endif
#ifdef netbsd1
#define OSTYPE NETBSD1ID
#endif
#if defined(freebsd2) || defined(freebsd3)
#define OSTYPE FREEBSDID
#endif
#if defined(irix6) || defined(irix5)
#define OSTYPE IRIXID
#endif
#ifdef linux
#define OSTYPE LINUXID
#endif
#if defined(bsdi2) || defined(bsdi3)
#define OSTYPE BSDIID
#endif
#ifdef openbsd2
#define OSTYPE OPENBSDID
#endif
/* unknown */
#ifndef OSTYPE
#define OSTYPE UNKNOWNID
#endif

/* how long to wait (seconds) for error querys before reseting the error trap.*/
#define ERRORTIMELENGTH 600

/* Exec command to fix PROC problems */
/* %s will be replaced by the process name in error */

#define PROCFIXCMD "/usr/local/bin/perl /local/scripts/fixproc %s"

/* Exec command to fix EXEC problems */
/* %s will be replaced by the exec/script name in error */

#define EXECFIXCMD "/usr/local/bin/perl /local/scripts/fixproc %s"

/* Should exec output Cashing be used (speeds up things greatly), and
   if so, After how many seconds should the cache re-newed?  Note:
   Don't define CASHETIME to disable cashing completely */

#define EXCACHETIME 30
#define CACHEFILE "/tmp/.snmp-exec-cache"
#define MAXCACHESIZE (200*80)   /* roughly 200 lines max */

#define MAXDISKS 50                      /* can't scan more than this number */

/* misc defaults */

/* default of 100 meg minimum if the minimum size is not specified in
   the config file */
#define DEFDISKMINIMUMSPACE 100000

#define DEFMAXLOADAVE 12.0      /* default maximum load average before error */

#define MAXREADCOUNT 20   /* max times to loop reading output from
                             execs.  Because of sleep(1)s, this will also
                             be time to wait (in seconds) for exec to finish */

#define SNMPBLOCK 1       /* Set to 1 if you want snmpgets to block and never
                             timeout.  Original CMU code had this
                             hardcoded into the code as = 1 */

#define RESTARTSLEEP 5    /* How long to wait after a snmpset to
                             EXTENSIBLEMIB.VERSIONMIBNUM.VERRESTARTAGENT
                             before restarting the agent.  This is
                             necessary to finish the snmpset reply
                             before restarting. */

/* Number of community strings to store */
#define NUM_COMMUNITIES	5

/* UNdefine to allow specifying zero-length community string */
/* #define NO_ZEROLENGTH_COMMUNITY 1 */

/* #define EXIT_ON_BAD_KLREAD  */
/* define to exit the agent on a bad kernel read */

#define LASTFIELD -1      /* internal define */

/* configure options specified */
#define CONFIGURE_OPTIONS " --prefix=/local"

#ifndef HAVE_STRCHR
#ifdef HAVE_INDEX
# define strchr index
# define strrchr rindex
#endif
#endif

#ifndef HAVE_INDEX
#ifdef HAVE_STRCHR
# define index strchr
# define rindex strrchr
#endif
#endif

#ifndef HAVE_MEMCPY
#ifdef HAVE_BCOPY
# define memcpy(d, s, n) bcopy ((s), (d), (n))
# define memmove(d, s, n) bcopy ((s), (d), (n))
# define memcmp bcmp
#endif
#endif

#ifndef HAVE_MEMMOVE
#ifdef HAVE_MEMCPY
# define memmove memcpy
#endif
#endif

#ifndef HAVE_BCOPY
#ifdef HAVE_MEMCPY
# define bcopy(s, d, n) memcpy ((d), (s), (n))
# define bzero(p,n) memset((p),(0),(n))
# define bcmp memcmp
#endif
#endif


/* define random functions */

#ifndef HAVE_RANDOM
#ifdef HAVE_LRAND48
#define random lrand48
#define srandom(s) srand48(s)
#else
#ifdef HAVE_RAND
#define random rand
#define srandom(s) srand(s)
#endif
#endif
#endif

/* define signal if DNE */

#ifndef HAVE_SIGNAL
#ifdef HAVE_SIGSET
#define signal(a,b) sigset(a,b)
#endif
#endif

/* define if you have librpm and libdb */
/* #undef HAVE_LIBRPM */

/* define if you have gethostbyname */
/* #undef HAVE_GETHOSTBYNAME */

/* define if you have getservbyname */
/* #undef HAVE_GETSERVBYNAME */

/* Not-to-be-compiled macros for use by configure only */
#define config_require(x)
#define config_arch_require(x,y)
#define config_load_mib(x,y,z)
#define config_parse_dot_conf(w,x,y,z)
#define config_add_mib(x)

#include <mib_module_config.h>

#ifdef WIN32
#define ENV_SEPARATOR ";"
#define ENV_SEPARATOR_CHAR ';'
#else
#ifdef __riscos
#define ENV_SEPARATOR ","
#define ENV_SEPARATOR_CHAR ','
#else
#define ENV_SEPARATOR ":"
#define ENV_SEPARATOR_CHAR ':'
#define _CRTIMP
#endif
#endif

#include SYSTEM_INCLUDE_FILE
#include MACHINE_INCLUDE_FILE

#if defined(HAVE_NLIST) && defined(STRUCT_NLIST_HAS_N_VALUE) && !defined(DONT_USE_NLIST)
#define CAN_USE_NLIST
#endif
