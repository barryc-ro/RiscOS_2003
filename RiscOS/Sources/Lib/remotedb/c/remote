/************************************************************************/
/*                  Copyright 1996 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/

#ifndef __debug_remote_h
#define __debug_remote_h

#include <stdarg.h>

#define REMOTE_DEBUG_VERSION "0.02"

#ifdef REMOTE_DEBUG

/*
 * structure to fold session data
 */
typedef struct
{
  int  sock;
  char *info;
  unsigned char priority;
} debug_session;

/*
 * Open a connection to host specified by Inet$DebugHost and send an initial
 * connection message. All future sends via this interface will be prefixed by
 * info. A copy of info is made internally. This call will return a pointer to
 * a session structure to be used in subsequent calls.
 */
void remote_debug_open(char *info, debug_session **sess);

/*
 * Send an printf formatted string upto a max of 256 characters to the debug
 * host. If string is prefixed by (n), this is treated as the debug priority
 * level.
 */
void debug_printf(debug_session *sess, char *format, ...);

/*
 * Close a previously open debug channel.
 */
void remote_debug_close(debug_session *sess);

#else

#define remote_debug_open(x,y)
#define debug_printf 1?0:printf
#define remote_debug_close(x)

#endif /* REMOTE_DEBUG */

#endif
