#ifndef __Desk_StdFile_h
#define __Desk_StdFile_h

#ifdef __cplusplus
	extern "C" {
#endif

#ifndef __Desk_Core_h
	#include "Desk/Core.h"
#endif

#ifndef __Desk_Error2_h
	#include "Desk/Error2.h"
#endif



extern Desk_bool Desk_StdFile_Exists( const char *filename);
/*
 *  This returns Desk_bool_TRUE if 'filename' is a file.
 *  If 'filename' doesn't exist or is an image or 
 *  directory, Desk_bool_FALSE is returned.
 *  Also see Desk_Filing_GetObjType().
 */


extern char*	Desk_StdFile_AllocLoad( const char* filename, int* lengthptr);
/*
This allocates space for the file, and loads it. The length of the file
is put into 'lengthptr', if it isn't NULL.

Returns a pointer to the loaded file, or NULL if an error occurred.
*/

extern char*	Desk_StdFile_AllocLoad0( const char *filename);
/*
This allocates space for the file, loads it, and appends a '\0'. The
intention is to allow text-files to be loaded and dealt with as strings.

Returns a pointer to the loaded file, or NULL if an error occurred.
*/

void	Desk_StdFile_SaveMemory2( const char* filename, void* buffer, int size);
/*
Saves memory to a filename, with a filetype.
Treat like:
void	Desk_File_SaveMemory( char *filename, void *buffer, Desk_size_t size, int filetype);
 */


#ifdef __cplusplus
}
#endif

#endif
