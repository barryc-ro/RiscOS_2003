/*
    ####             #    #     # #
    #   #            #    #       #          The FreeWare C library for 
    #   #  ##   ###  #  # #     # ###             RISC OS machines
    #   # #  # #     # #  #     # #  #   ___________________________________
    #   # ####  ###  ##   #     # #  #                                      
    #   # #        # # #  #     # #  #    Please refer to the accompanying
    ####   ### ####  #  # ##### # ###    documentation for conditions of use
    ________________________________________________________________________

    File:    Sprite.LoadFile.c
    Author:  Copyright © 1994 Tim Browse
    Version: 1.00 (02 Mar 1994)
    Purpose: Allocate a sprite area and load a file into it.
*/

#include <stdlib.h>

#include "Desk.Core.h"
#include "Desk.File.h"
#include "Desk.Sprite.h"
#include "Desk.DeskMem.h"
#include "Desk.JumpRaw.h"


extern Desk_sprite_area Desk_Sprite_LoadFile(const char *filename)
/*
 * This loads the given sprite file into a sprite area, and returns a pointer to
 * it.  The memory is automatically allocated with Desk_DeskMem_Malloc().
 */
{
  int          blksize;
  Desk_sprite_area  sprarea = NULL;

  /*
   * To load file, allocate and initialise sprite area block, and call SWI to 
   *  load in file.
   */

  /* Find out how big file is */
  blksize = Desk_File_Size(filename);

  /* Add a bit of room for extra header info & safety padding */
  blksize += 16;


  Desk_JumpAuto_Try	{
  /* Allocate memory for this block */
  sprarea = (Desk_sprite_area) Desk_DeskMem_Malloc(blksize);

  /* Initialise sprite area */
  sprarea->areasize    = blksize;
  sprarea->firstoffset = 16;

  Desk_Sprite_InitArea(sprarea);

  /* Try to load sprite file */
  Desk_Sprite_Load(sprarea, filename);
  }
  Desk_JumpAuto_Catch	{
    Desk_DeskMem_Free(sprarea);
    Desk_Error2_ReThrow();
  }
  Desk_JumpAuto_EndCatch

  return sprarea;
}

