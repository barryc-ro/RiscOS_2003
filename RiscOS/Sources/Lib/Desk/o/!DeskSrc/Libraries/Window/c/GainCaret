/*
    ####             #    #     # #
    #   #            #    #       #          The FreeWare C library for
    #   #  ##   ###  #  # #     # ###             RISC OS machines
    #   # #  # #     # #  #     # #  #   ___________________________________
    #   # ####  ###  ##   #     # #  #
    #   # #        # # #  #     # #  #    Please refer to the accompanying
    ####   ### ####  #  # ##### # ###    documentation for conditions of use
    ________________________________________________________________________

    File:    Window.GainCaret.c
    Author:  Copyright © 1995 Cy Booker
    Version: 1.01 (21 Jun 1995)
    Purpose: High-level window management functions
    Mods:    Julian Smith - Modified to cope with Desk_Icon_SetCaret
                            which doesn't return an (Desk_os_error *)
                            yet.
*/

#include <stdlib.h>     /* malloc */

#include "Desk.Window.h"
#include "Desk.Icon.h"
#include "Desk.WimpSWIs.h"
#include "Desk.DeskMem.h"
#include "Desk.JumpRaw.h"
#include "Desk.Error2.h"


extern void	Desk_Window_GainCaret(Desk_window_handle window) {
  Desk_caret_block   caretblock;
  Desk_window_info   windowinfo;

  if (!window) {	/* disown caret	*/
     caretblock.window = -1;
    caretblock.icon   = -1;
    caretblock.height = 0;
    caretblock.index  = -1;
    Desk_Wimp_SetCaretPosition(&caretblock);
  }
  Desk_Wimp_GetCaretPosition(&caretblock);
  if ((caretblock.window == window) && (caretblock.icon != -1)) return; /* already in the window, in an icon, so abort now	*/

  Desk_Window_GetInfo3(window, &windowinfo);
  
  if (windowinfo.block.numicons > 0) {
    Desk_icon_handle   *buffer = NULL;
    int               mask, settings;
    Desk_icon_handle       icon=-1;
	
	Desk_JumpAuto_Try	{
    buffer = Desk_DeskMem_Malloc((1+windowinfo.block.numicons)*sizeof(*buffer));
      mask = Desk_icon_TEXT |
             (Desk_icon_BUTTONTYPE * 0x0f) |
             Desk_icon_SHADED |
             Desk_icon_DELETED;
      settings = Desk_icon_TEXT |
                 (Desk_icon_BUTTONTYPE * Desk_iconbtype_WRITECLICKDRAG);  /* note! */
      Desk_Wimp_WhichIcon(window, buffer, mask, settings);
      icon = buffer[0];
        }
      Desk_JumpAuto_Catch	{
      	Desk_DeskMem_Free(buffer);
      	Desk_Error2_ReThrow();
       }
      Desk_JumpAuto_EndCatch
      
      Desk_DeskMem_Free(buffer);
      
      if (icon != -1) {
        Desk_Icon_SetCaret(window, icon);
        return;
      }
    } 
    
  caretblock.window   = window;
  caretblock.icon     = -1;
  caretblock.offset.x = 0;
  caretblock.offset.y = 0;
  caretblock.height   = 1 << 25;                /* caret is invisible */
  caretblock.index    = -1;
  Desk_Wimp_SetCaretPosition(&caretblock);
}
