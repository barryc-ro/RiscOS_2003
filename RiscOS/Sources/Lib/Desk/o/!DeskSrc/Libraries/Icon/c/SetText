/*
    ####             #    #     # #
    #   #            #    #       #          The FreeWare C library for 
    #   #  ##   ###  #  # #     # ###             RISC OS machines
    #   # #  # #     # #  #     # #  #   ___________________________________
    #   # ####  ###  ##   #     # #  #                                      
    #   # #        # # #  #     # #  #    Please refer to the accompanying
    ####   ### ####  #  # ##### # ###    documentation for conditions of use
    ________________________________________________________________________

    File:    Icon.SetText.c
    Author:  Copyright © 1992, 1993, 1994 Jason Williams
    Version: 1.01 (12 Mar 1994)
    Purpose: 'Print' a string into an icon's text buffer.
*/

#include <string.h>

#include "Desk.Wimp.h"
#include "Desk.WimpSWIs.h"
#include "Desk.Coord.h"
#include "Desk.Icon.h"



extern void Desk_Icon_SetText(Desk_window_handle w, Desk_icon_handle i, char *text)
/*
 * Copies the text string into the icon's indirected string buffer (and redraws)
 * If unable to set the text (incorrect icon type), it returns quietly
 * If text passed in is a NULL pointer, sets icon text to " "
 */
{
  Desk_icon_block  istate;
  char        temp[2] = " ";
  Desk_caret_block caret;
  int         len;

  if (text == NULL)
    text = temp;

  Desk_Wimp_GetIconState(w, i, &istate);
  if (istate.flags.value & (Desk_icon_TEXT | Desk_icon_INDIRECTED))
  {
    /* Indirected text icon, so set text field - ensure no buffer overflow */
    strncpy(istate.data.indirecttext.buffer, text,
              istate.data.indirecttext.bufflen - 1);
    istate.data.indirecttext.buffer[istate.data.indirecttext.bufflen-1] = 0;

    /* Ensure caret isn't beyond end of text */
    Desk_Wimp_GetCaretPosition( &caret );
    if ( caret.window == w && caret.icon == i )
    {
      len = strlen( istate.data.indirecttext.buffer );
      if ( caret.index > len )
      {
        caret.index = len;
        Desk_Wimp_SetCaretPosition( &caret );
      }
    }
    
    Desk_Wimp_SetIconState(w, i, 0, 0);
  }
}
