#include <stdlib.h>
#include <stdio.h>

#include "Desk/StdFile.h"
#include "Desk/DeskMem.h"
#include "Desk/Error2.h"




char*	Desk_StdFile_AllocLoad( const char* filename, int* lengthptr)
{
	int		increment	= 4096;
	char*		s		= NULL;
	char* volatile	volatile_s	= NULL;
	int		size		= 0;
	
	FILE*	f = fopen( filename, "r");
	if ( !f)	Desk_Error2_HandleTextf( "Couldn't load file '%s'", filename);
	
	Desk_Error2_Try
	{
		for(;;)
		{
			int	bytesread;
			
			size += increment;
			s = (char*) Desk_DeskMem_Realloc( s, size+1);	// One extra for Desk_StdFile_AllocLoad0
			volatile_s = (char* volatile) s;
			
			bytesread = fread( s+size-increment, 1, increment, f);
			// Should check for EOF here...
			
			if ( bytesread<increment)
			{
				int	finalsize = size-increment+bytesread;
				s[ finalsize] = 0;
				if ( lengthptr)	*lengthptr = finalsize;
				break;
			}
		}
	}
	Desk_Error2_Catch
	{
		Desk_DeskMem_Free( (void*) volatile_s);
		fclose( f);
		Desk_Error2_ReThrow();
	}
	Desk_Error2_EndCatch
	
	fclose( f);
	
	return s;
}

