#	Library-making makefile

CC		=	cc
LIBFILE		=	LibFile

CCFlags		=	-c -fahi -depend !Depend -I,C: -DDesk__making_Debug
LibFileFlags	=	-c -o

TargetDir	=	^.^.^.Debug

Common		= o.Debug	o.DumpRegs
Common_M	= o.Debug_M	o.DumpRegs
Common_4	= o4.Debug	o.DumpRegs


#VPATH = @ @.^



ALL:				\
	$(TargetDir).stderr	\
	$(TargetDir).Signal	\
	$(TargetDir).uniqfile	\
	$(TargetDir).uniqfile_m	\
	$(TargetDir).pipetype	\
	$(TargetDir).pipetype_m	\
	$(TargetDir).uniqpipe	\
	$(TargetDir).uniqpipe_m	\
	$(TargetDir).stderr_m	\
	$(TargetDir).pdebug	\
	$(TargetDir).pdebug_m	\
	$(TargetDir).debuglib	\
	$(TargetDir).debuglib_m	\

PDebug:	$(TargetDir).pdebug $(TargetDir).pdebug_m
	Echo




# If anyone knows how to automate these, please let me know!


$(TargetDir).Signal:	o.Signal
	$(LIBFILE) $(LibFileFlags) $@ o.Signal

$(TargetDir).pipetype:	o.pipetype o.Debug
	$(LIBFILE) $(LibFileFlags) $@ o.pipetype $(Common)

$(TargetDir).uniqpipe:	o.uniqpipe $(Common)
	$(LIBFILE) $(LibFileFlags) $@ o.uniqpipe $(Common)

$(TargetDir).stderr:	o.stderr $(Common)
	$(LIBFILE) $(LibFileFlags) $@ o.stderr $(Common)

$(TargetDir).heapgraph:	o.heapgraph $(Common)
	$(LIBFILE) $(LibFileFlags) $@ o.heapgraph $(Common)

$(TargetDir).uniqfile:	o.uniqfile $(Common)
	$(LIBFILE) $(LibFileFlags) $@ o.uniqfile $(Common)

$(TargetDir).uniqfile_m:	o.uniqfile_m $(Common_M)
	$(LIBFILE) $(LibFileFlags) $@ o.uniqfile_m $(Common_M)

$(TargetDir).pipetype_m:	o.pipetype_m $(Common_M)
	$(LIBFILE) $(LibFileFlags) $@ o.pipetype_m $(Common_M)

$(TargetDir).uniqpipe_m:	o.uniqpipe_m $(Common_M)
	$(LIBFILE) $(LibFileFlags) $@ o.uniqpipe_m $(Common_M)

$(TargetDir).stderr_m:	o.stderr_m $(Common_M)
	$(LIBFILE) $(LibFileFlags) $@ o.stderr_m $(Common_M)

$(TargetDir).uniqfile_4:	o4.uniqfile $(Common_4)
	$(LIBFILE) $(LibFileFlags) $@ o4.uniqfile $(Common_4)

$(TargetDir).pdebug:	o.pdebug $(Common)
	$(LIBFILE) $(LibFileFlags) $@ o.pdebug $(Common)

$(TargetDir).pdebug_m:	o.pdebug_m $(Common_M)
	$(LIBFILE) $(LibFileFlags) $@ o.pdebug_m $(Common_M)

$(TargetDir).debuglib:	o.debuglib $(Common)
	$(LIBFILE) $(LibFileFlags) $@ o.debuglib $(Common)

$(TargetDir).debuglib_m:	o.debuglib_m $(Common_M)
	$(LIBFILE) $(LibFileFlags) $@ o.debuglib_m $(Common_M)


o.stderr_m:	c.stderr
	$(CC) $(CCFlags) -Zm -DDesk__MODULE_CLIENT -o $@ c.stderr

o.uniqpipe_m:	c.uniqpipe
	$(CC) $(CCFlags) -Zm -DDesk__MODULE_CLIENT -o $@ c.uniqpipe

o.pipetype_m:	c.pipetype
	$(CC) $(CCFlags) -Zm -DDesk__MODULE_CLIENT -o $@ c.pipetype

o.uniqfile_m:	c.uniqfile
	$(CC) $(CCFlags) -Zm -DDesk__MODULE_CLIENT -o $@ c.uniqfile

o.Debug_m:	c.Debug
	$(CC) $(CCFlags) -Zm -DDesk__MODULE_CLIENT -o $@ c.Debug

o.pdebug_m:	c.pdebug
	$(CC) $(CCFlags) -Zm -DDesk__MODULE_CLIENT -o $@ c.pdebug

o.debuglib_m:	c.debuglib
	$(CC) $(CCFlags) -Zm -DDesk__MODULE_CLIENT -o $@ c.debuglib



.SUFFIXES:	.o .o4 .s .c
.c.o:
	$(CC) $(CCFlags) -o $@ $<

.s.o:
	objasm $(ASMFlags) -from $< -to $@

.c.o4:
	cc400 $(CCFlags) -o $@ $<



# Dynamic dependencies:
