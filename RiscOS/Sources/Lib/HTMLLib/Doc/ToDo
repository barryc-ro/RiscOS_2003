<BODY> and <HEAD> elements issue - autodetection of when you're in HEAD
and when you're in BODY is no longer working at all. This is frequently
catastrophic to a web page. We need to in the short term get this working,
and in the not-much-longer term review this entire philosophy. I'm
starting to think that the entire HEAD / BODY distinction is not needed,
and perhaps we should just have any tag that can appear in HEAD or BODY
using separate identification bits in the HStream structure so the actual
parsing context becomes irrelevant.

Missing out a TR appears fatal to HTMLLib (it generates garbage
structures) even when it is implied, e.g.

<TABLE>
  <TD></TD>
  <!-- and maybe several of... -->
  <TR><TD></TD></TR> <!-- etc. -->
</TABLE>

The stacking of style information going into and coming out of a table
cell seems to mess up with forms; e.g. all the radio icons in a group
will be marked as selected, though only one should be selected at a time.

FRAME tags are not passed to the browser if they have no content, i.e.
you just have <FRAME>. This is crucial to some page layouts though,
so such tags need to be sent with sensible defaults (e.g. the
URL to fetch in the 'src' field of the HStream would be NULL or point
to a null string).

Entities split across fetched chunks often fail to work, and reverse entity
scanning is required so &quotThis (for example) can be handled (priority
on this has been raised recently as Dataflex have been complaining...).

Inheritance of table attributes down to cell level - that is, the simplest
table definition follows a heirarchy:

<TABLE>
  <TR>
    <TD></TD>
    <TD></TD>
  </TR>
</TABLE>

Most table attributes can be put in TABLE, TR, or TD. TABLE influences all
cells, TR influences those in the row, and TD influences just that cell.
The browser should not have to worry about this - each TD should stand
alone with a correct set of attributes in the table_headdata structure.
This is not fully implemented at present.

The table system uses sensible defaults for various table attributes, but
these only work if the TABLE tag has at least one attribute already.
E.g. <TABLE WIDTH=50> will also set up, say, BORDER=1. So these defaults
should always happen, even if there are no attributes on TABLE; we also
need to review what those defaults are (e.g. should be BORDER=0, not
BORDER=1).

Vertical white space - needs sorting; find out what tokens can be
coagulated, which are not necessary, and get rid of the type 0x100 tags
which should never be generated at all.

Horizontal spacing:

There are various spacing rules for when white space should and should
not be ignored in HTML, dependent upon whether the spaces come before
or after starting or ending tags. However, I believe there should be a
special case for comments where white space is ignored. The effects of
not doing so can be seen for example at

http://www.fibblesnork.com/lego/guide/wildwest

The left hand 'List by...' frame has an 'Aspects' section, where the
'Set name' item is indented by a preceeding space. The HTML source
for this section is:

  <TR>
    <TD ALIGN="CENTER" BGCOLOR="#996633">
      <FONT FACE="Arial,Helvetica,Geneva"><B>Aspects</B></FONT>
    </TD>
  </TR>
  <TR>
    <TD ALIGN="LEFT"> <!-- BGCOLOR="#003366" -->
      <FONT SIZE="-1">
      <A TARGET="series" HREF="data/setname.html">Set&nbsp;Name</A><BR>
      <A TARGET="series" HREF="data/setnumber.html">Set&nbsp;Number</A><BR>
      <A TARGET="series" HREF="data/setsize.html">Number&nbsp;of&nbsp;Pieces</A><BR>
      </FONT>
    </TD>
  </TR>

The space between the '<TD ALIGN="LEFT">' and '<!--' comment start is,
I think, the one that's getting through to the browser. I strongly
suggest chatting to Kevin about this one as he wrote the new code that
handles spacing rules more intelligently and should be able to point
you to the section that needs altering.

This seems a valid thing to do as comments 'don't exist' as far as the
parser is supposed to be concerned, so they should certainly not interfere
with the spacing rules code.

Certain table attributes are not implemented yet. RFC 1942's stuff is, I
believe, but other commonly used extensions aren't. For example, the
ability to specify a border which just covers horizontal cell edges.

<CAPTION> is not supported?

<A NAME="a_name">...</A> around a table means that table gets underlined
as a link. Browser or HTMLLib problem...?

<META> - need to come to some implementation of this soon, to support
in particular client pull. This is commonly used to redirect a browser
from one page to another and failing to support it typically results
in lots of grey screens with a 'Ready' message and nothing else
obvious happening...!

JavaScript support specific to DataFlex, as discussed before. More
details available on request (basically, OnClick and OnLoad support in
<A> and <BODY> tags respectively).
