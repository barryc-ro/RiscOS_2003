/*
 * This file attempts to define the HTML2 DTD
 *
 * NOTE: Set terminal (display) width to about 192 chars!
 */

#ifndef __html2_h__
#define __html2_h__

#include "tags.h"
#include "rules.h"
#include "html2_ext.h"

static const Anchor A_Attributes[] = {
        { "ACCESSKEY",  ACCESSKEY, CDATA },
        { "CHARSET",    CHARSET,   CDATA },
        { "COORDS",     COORDS,    COORDS_RULE },
        { "HREF",       HREF,      URL_RULE },
        { "NAME",       NAME,      CDATA },
        { "REL",        REL,       CDATA },
        { "REV",        REV,       CDATA },
        { "SHAPE",      SHAPE,     SET, /*rect|*/"circle|poly|default" },
        { "TABINDEX",   TABINDEX,  NUMBER },
        { "TARGET",     TARGET,    CDATA },
        };
#define MAX_A_ATTRIBUTES (SizeOfArray(A_Attributes))

static const Anchor Img_Attributes[] = {
        { "ALIGN",              ALIGN,   SET, "top|middle|bottom|left|right|centre,center" },
        { "ALT",                ALT,     CDATA },
        { "BORDER",             BORDER,  PIXELS_RULE },
        { "HEIGHT",             HEIGHT,  PIXELS_RULE },
        { "HSPACE",             HSPACE,  PIXELS_RULE },
        { "ISMAP",              ISMAP,   EMPTY },
        { "SRC",                SRC,     URL_RULE },
        { "USEMAP",             USEMAP,  URL_RULE },
        { "VSPACE",             VSPACE,  PIXELS_RULE },
        { "WIDTH",              WIDTH,   PIXELS_RULE },
        };
#define MAX_IMG_ATTRIBUTES (SizeOfArray(Img_Attributes))


static const Anchor Object_Attributes[] = {
        { "ALIGN",             ALIGN,    SET, "top|middle|bottom|left|right|centre,center" },
        { "ARCHIVE",           ARCHIVE,  URL_RULE },
        { "BORDER",            BORDER,   LENGTH_RULE },
        { "CLASSID",           CLASSID,  URL_RULE },
        { "CODEBASE",          CODEBASE, URL_RULE },
        { "CODETYPE",          CODETYPE, CONTENTTYPE_RULE },
        { "DATA",              DATA,     URL_RULE },
        { "DECLARE",           DECLARE,  EMPTY },
        { "HEIGHT",            HEIGHT,   LENGTH_RULE },
        { "HSPACE",            HSPACE,   LENGTH_RULE },
        { "NAME",              NAME,     CDATA },
        { "SHAPES",            SHAPES,   EMPTY },
        { "STANDBY",           STANDBY,  CDATA },
        { "TABINDEX",          TABINDEX, NUMBER },
        { "TYPE",              TYPE,     CONTENTTYPE_RULE },
        { "USEMAP",            USEMAP,   URL_RULE },
        { "VSPACE",            VSPACE,   LENGTH_RULE },
        { "WIDTH",             WIDTH,    LENGTH_RULE },
        };
#define MAX_OBJECT_ATTRIBUTES (SizeOfArray(Object_Attributes))


static const Anchor Param_Attributes[] = {
        { "ID",                ID,       ID_RULE },
        { "NAME",              NAME,     CDATA },
        { "TYPE",              TYPE,     CDATA },
        { "VALUE",             VALUE,    CDATA },
        { "VALUETYPE",         VALUETYPE,SET, "data|ref|object" },
        };

#define MAX_PARAM_ATTRIBUTES (SizeOfArray(Param_Attributes))


static const Anchor Applet_Attributes[] = {
        { "ALIGN",             ALIGN,    SET, "top|middle|bottom|left|right|centre,center" },
        { "ALT",               ALT,      CDATA },
        { "ARCHIVE",           ARCHIVE,  CDATA },
        { "CODE",              CODEBASE, CDATA },
        { "CODEBASE",          CODEBASE, URL_RULE },
        { "HEIGHT",            HEIGHT,   PIXELS_RULE },
        { "HSPACE",            HSPACE,   PIXELS_RULE },
        { "NAME",              NAME,     CDATA },
        { "OBJECT",            OBJECT,   CDATA },
        { "VSPACE",            VSPACE,   PIXELS_RULE },
        { "WIDTH",             WIDTH,    PIXELS_RULE },
        };
#define MAX_APPLET_ATTRIBUTES (SizeOfArray(Applet_Attributes))


static const Anchor Link_Attributes[] = {
        { "HREF",               HREF,    URL_RULE },
        { "MEDIA",              MEDIA,   CDATA },
        { "REL",                REL,     CDATA },
        { "REV",                REV,     CDATA },
        { "TARGET",             TARGET,  CDATA },
        { "TYPE",               TYPE,    CONTENTTYPE_RULE },
        };
#define MAX_LINK_ATTRIBUTES (SizeOfArray(Link_Attributes))

static const Anchor Meta_Attributes[] = {
        { "CONTENT",            CONTENT,    CDATA },
        { "HTTP-EQUIV",         HTTP_EQUIV, NAME_RULE },
        { "NAME",               NAME,       NAME_RULE },
        { "SCHEME",             SCHEME,     CDATA },
        };
#define MAX_META_ATTRIBUTES (SizeOfArray(Meta_Attributes))

static const Anchor Body_Attributes[] = {
        { "ALINK",              ALINK,    COLOUR_RULE },
        { "BACKGROUND",         BACKGROUND, URL_RULE  },
        { "BGCOLOR",            BGCOL,    COLOUR_RULE },
        { "BGCOLOUR",           BGCOL,    COLOUR_RULE },
        { "LINK",               LINKCOL,  COLOUR_RULE },
        { "ONLOAD",             ONLOAD,   SCRIPT_RULE },
        { "ONUNLOAD",           ONUNLOAD, SCRIPT_RULE },
        { "TEXT",               FGCOL,    COLOUR_RULE },
        { "VLINK",              VLINK,    COLOUR_RULE },
        };
#define MAX_BODY_ATTRIBUTES (SizeOfArray(Body_Attributes))

static const Anchor H_Attributes[] = {
        { "ALIGN",              ALIGN,   SET, "left|centre,center,middle|right"/*|justify*/ },
        };
#define MAX_H_ATTRIBUTES (SizeOfArray(H_Attributes))

static const Anchor OL_Attributes[] = {
        { "COMPACT",          COMPACT,   EMPTY },
        { "START",            STARTattr, NUMBER },
        { "TYPE",             TYPE,      OLSTYLE_RULE },
        };
#define MAX_OL_ATTRIBUTES (SizeOfArray(OL_Attributes))

static const Anchor LI_Attributes[] = {
        { "TYPE",             TYPE,      OLSTYLE_RULE },
        { "VALUE",            VALUE,     NUMBER },
        };
#define MAX_LI_ATTRIBUTES (SizeOfArray(LI_Attributes))

static const Anchor HR_Attributes[] = {
        { "ALIGN",              ALIGN,   SET, "left|right|centre,center,middle" },
        { "NOSHADE",            NOSHADE, EMPTY       },
        { "SIZE",               SIZE,    PIXELS_RULE },
        { "WIDTH",              WIDTH,   LENGTH_RULE },
        };
#define MAX_HR_ATTRIBUTES (SizeOfArray(HR_Attributes))

static const Anchor P_Attributes[] = {
        { "ALIGN",              ALIGN,   SET, "left|centre,center,middle|right"/*|justify*/ },
        };
#define MAX_P_ATTRIBUTES (SizeOfArray(P_Attributes))

static const Anchor Base_Attributes[] = {
        { "HREF",               HREF,    URL_RULE },
        { "TARGET",             TARGET,  CDATA },
        };
#define MAX_BASE_ATTRIBUTES (SizeOfArray(Base_Attributes))

static const Anchor Form_Attributes[] = {
        { "ACCEPT-CHARSET",     ACCEPT_CHARSET, CDATA },
        { "ACTION",             ACTION,         URL_RULE },
        { "ENCTYPE",            ENCTYPE,        CONTENTTYPE_RULE },
        { "METHOD",             METHOD,         SET, /*get|*/"post" },
        { "ONRESET",            ONRESET,        SCRIPT_RULE },
        { "ONSUBMIT",           ONSUBMIT,       SCRIPT_RULE },
        { "TARGET",             TARGET,         CDATA },
        };
#define MAX_FORM_ATTRIBUTES (SizeOfArray(Form_Attributes))

static const Anchor Input_Attributes[] = {
        { "ACCEPT",             ACCEPT,    CDATA       },
        { "ALIGN",              ALIGN,     SET, "top|middle|bottom|left|right|centre,center"},
        { "ALT",                ALT,       CDATA       },
        { "CHECKED",            CHECKED,   EMPTY       },
        { "DISABLED",           DISABLED,  EMPTY       },
        { "MAXLENGTH",          MAXLENGTH, NUMBER      },
        { "NAME",               NAME,      CDATA       },
        { "ONBLUR",             ONBLUR,    SCRIPT_RULE },
        { "ONCHANGE",           ONCHANGE,  SCRIPT_RULE },
        { "ONFOCUS",            ONFOCUS,   SCRIPT_RULE },
        { "ONSELECT",           ONSELECT,  SCRIPT_RULE },
        { "READONLY",           READONLY,  EMPTY       },
        { "SIZE",               SIZE,      NUMBER /* HTML 4.0 says CDATA */ },
        { "SRC",                SRC,       URL_RULE    },
        { "TABINDEX",           TABINDEX,  NUMBER      },
        { "TYPE",               TYPE,      SET, /*text|*/"password|checkbox|radio|image|hidden|submit|reset"/*|file|button*/},
        { "USEMAP",             USEMAP,    URL_RULE    },
        { "VALUE",              VALUE,     CDATA       },
        };
#define MAX_INPUT_ATTRIBUTES (SizeOfArray(Input_Attributes))

static const Anchor Select_Attributes[] = {
        { "DISABLED",           DISABLED,  EMPTY },
        { "MULTIPLE",           MULTIPLE,  EMPTY },
        { "NAME",               NAME,      CDATA },
        { "ONBLUR",             ONBLUR,    SCRIPT_RULE },
        { "ONCHANGE",           ONCHANGE,  SCRIPT_RULE },
        { "ONFOCUS",            ONFOCUS,   SCRIPT_RULE },
        { "ONSELECT",           ONSELECT,  SCRIPT_RULE },
        { "SIZE",               SIZE,      NUMBER },
        { "TABINDEX",           TABINDEX,  NUMBER },
        };
#define MAX_SELECT_ATTRIBUTES (SizeOfArray(Select_Attributes))

static const Anchor Option_Attributes[] = {
        { "DISABLED",           DISABLED,  EMPTY },
        { "SELECTED",           SELECTED,  EMPTY },
        { "VALUE",              VALUE,     CDATA },
        };
#define MAX_OPTION_ATTRIBUTES (SizeOfArray(Option_Attributes))

static const Anchor Textarea_Attributes[] = {
        { "COLS",               COLS,     NUMBER      },
        { "DISABLED",           DISABLED, EMPTY       },
        { "NAME",               NAME,     CDATA       },
        { "ONBLUR",             ONBLUR,   SCRIPT_RULE },
        { "ONCHANGE",           ONCHANGE, SCRIPT_RULE },
        { "ONFOCUS",            ONFOCUS,  SCRIPT_RULE },
        { "ONSELECT",           ONSELECT, SCRIPT_RULE },
        { "READONLY",           READONLY, EMPTY       },
        { "ROWS",               ROWS,     NUMBER      },
        { "TABINDEX",           TABINDEX, NUMBER      },
        };
#define MAX_TEXTAREA_ATTRIBUTES (SizeOfArray(Textarea_Attributes))

static const Anchor Basefont_Attributes[] = {
        { "COLOR",              COLOUR,    COLOUR_RULE },
        { "COLOUR",             COLOUR,    COLOUR_RULE },
        { "FACE",               FACE,      CDATA       },
        { "SIZE",               FONTSIZE,  NUMBER      }, /* HTML 4.0 says CDATA */
        };
#define MAX_BASEFONT_ATTRIBUTES (SizeOfArray(Basefont_Attributes))

static const Anchor Font_Attributes[] = {
        { "COLOR",              COLOUR,    COLOUR_RULE },
        { "COLOUR",             COLOUR,    COLOUR_RULE },
        { "FACE",               FACE,      CDATA       },
        { "SIZE",               FONTSIZE,  CDATA       },
        };
#define MAX_FONT_ATTRIBUTES (SizeOfArray(Font_Attributes))

static const Anchor Table_Attributes[] = {
        { "ALIGN",              ALIGN,       SET, "left|centre,center,middle|right" },
        { "BGCOLOR",            BGCOL,       COLOUR_RULE },
        { "BGCOLOUR",           BGCOL,       COLOUR_RULE },
        { "BORDER",             BORDER,      NUMBER      }, /* HTML 4.0 says CDATA */
        { "CELLPADDING",        CELLPADDING, NUMBER      }, /* HTML 4.0 implies LENGTH_RULE, says CDATA */
        { "CELLSPACING",        CELLSPACING, NUMBER      }, /* HTML 4.0 implies LENGTH_RULE, says CDATA */
        { "COLS",               COLS,        NUMBER      },
        { "FRAME",              TABLEFRAME,  SET, "void|above|below|hsides|lhs|rhs|vsides|box|border" },
        { "RULES",              TABLERULES,  SET, "none|groups|rows|cols|all" },
        { "VALIGN",             VALIGN,      SET, "top|middle,center,centre|bottom|baseline" },
        { "WIDTH",              WIDTH,       LENGTH_RULE }, /* Not sure about this */
        };
#define MAX_TABLE_ATTRIBUTES (SizeOfArray(Table_Attributes))

static const Anchor Tr_Attributes[] = {
        { "ALIGN",              ALIGN,      SET, "left|centre,center,middle|right|justify|char" },
        { "BGCOLOR",            BGCOL,      COLOUR_RULE },
        { "BGCOLOUR",           BGCOL,      COLOUR_RULE },
        { "CHAR",               CHAR,       CDATA       },
        { "CHAROFF",            CHAROFF,    CDATA       },
        { "VALIGN",             VALIGN,     SET, "top|middle,center,centre|bottom|baseline" },
        };
#define MAX_TR_ATTRIBUTES (SizeOfArray(Tr_Attributes))

static const Anchor Cell_Attributes[] = {
        { "ALIGN",              ALIGN,      SET, "left|centre,center,middle|right|justify|char" },
        { "BACKGROUND",         BACKGROUND, URL_RULE     },
        { "BGCOLOR",            BGCOL,      COLOUR_RULE  },
        { "BGCOLOUR",           BGCOL,      COLOUR_RULE  },
        { "CHAR",               CHAR,       CDATA        },
        { "CHAROFF",            CHAROFF,    CDATA        },
        { "COLSPAN",            COLSPAN,    NUMBER       },
        { "HEIGHT",             HEIGHT,     LENGTH_RULE  }, /* Not HTML 4.0 */
        { "NOWRAP",             NOWRAP,     EMPTY        },
        { "ROWSPAN",            ROWSPAN,    NUMBER       },
        { "VALIGN",             VALIGN,     SET, "top|middle,center,centre|bottom|baseline" },
        { "WIDTH",              WIDTH,      LENGTH_RULE  }, /* Not HTML 4.0 */
        };
#define MAX_CELL_ATTRIBUTES (SizeOfArray(Cell_Attributes))

static const Anchor Frameset_Attributes[] = {
        { "BORDER",             FRAMEBORDER,      CDATA       }, /* Not HTML 4.0 */
        { "BORDERCOLOR",        BORDERCOLOUR,     COLOUR_RULE }, /* Not HTML 4.0 */
        { "BORDERCOLOUR",       BORDERCOLOUR,     COLOUR_RULE }, /* Not HTML 4.0 */
        { "COLS",               COLS,             CDATA /* Default 1 */ },
        { "FRAMEBORDER",        FRAMEBORDER,      CDATA       }, /* Not HTML 4.0 */
        { "FRAMESPACING",       FRAMEBORDER,      CDATA       }, /* Not HTML 4.0 */
        { "ONLOAD",             ONLOAD,           SCRIPT_RULE },
        { "ONUNLOAD",           ONUNLOAD,         SCRIPT_RULE },
        { "ROWS",               ROWS,             CDATA /* Default 1 */ },
};
#define MAX_FRAMESET_ATTRIBUTES (SizeOfArray (Frameset_Attributes))

static const Anchor Frame_Attributes[] = {
        { "BORDER",             FRAMEBORDER,      CDATA },
        { "BORDERCOLOR",        BORDERCOLOUR,     COLOUR_RULE }, /* Not HTML 4.0 */
        { "BORDERCOLOUR",       BORDERCOLOUR,     COLOUR_RULE }, /* Not HTML 4.0 */
        { "FRAMEBORDER",        FRAMEBORDER,      CDATA },
        { "MARGINHEIGHT",       MARGINHEIGHT,     PIXELS_RULE },
        { "MARGINWIDTH",        MARGINWIDTH,      PIXELS_RULE },
        { "NAME",               NAME,             CDATA },
        { "NORESIZE",           NORESIZE,         EMPTY },
        { "SCROLLING",          SCROLLING,        SET, /*auto|*/"yes|no"},
        { "SRC",                SRC,              URL_RULE },
};
#define MAX_FRAME_ATTRIBUTES (SizeOfArray (Frame_Attributes))

static const Anchor Map_Attributes[] = {
        { "NAME",               NAME,             CDATA },
};
#define MAX_MAP_ATTRIBUTES (SizeOfArray (Map_Attributes))

static const Anchor Area_Attributes[] = {
        { "ACCESSKEY",          ACCESSKEY,        CDATA },
        { "ALT",                ALT,              CDATA },
        { "COORDS",             COORDS,           COORDS_RULE },
        { "HREF",               HREF,             URL_RULE },
        { "NOHREF",             NOHREF,           EMPTY },
        { "SHAPE",              SHAPE,            SET, /*rect|*/"circle|poly|default" },
        { "TABINDEX",           TABINDEX,         NUMBER },
        { "TARGET",             TARGET,           CDATA },
};
#define MAX_AREA_ATTRIBUTES (SizeOfArray (Area_Attributes))

static const Anchor Div_Attributes[] = {
        { "ALIGN",              ALIGN,            SET, "left|centre,center,middle|right"/*|justify*/ },
};
#define MAX_DIV_ATTRIBUTES (SizeOfArray (Div_Attributes))

const Anchor Event_Attributes[] = {
        { "ONCLICK",            ONCLICK,          SCRIPT_RULE },
        { "ONDBLCLICK",         ONDBLCLICK,       SCRIPT_RULE },
        { "ONKEYDOWN",          ONKEYDOWN,        SCRIPT_RULE },
        { "ONKEYPRESS",         ONKEYPRESS,       SCRIPT_RULE },
        { "ONKEYUP",            ONKEYUP,          SCRIPT_RULE },
        { "ONMOUSEDOWN",        ONMOUSEDOWN,      SCRIPT_RULE },
        { "ONMOUSEMOVE",        ONMOUSEMOVE,      SCRIPT_RULE },
        { "ONMOUSEOUT",         ONMOUSEOUT,       SCRIPT_RULE },
        { "ONMOUSEOVER",        ONMOUSEOVER,      SCRIPT_RULE },
        { "ONMOUSEUP",          ONMOUSEUP,        SCRIPT_RULE },
};
const int MAX_EVENT_ATTRIBUTES=SizeOfArray(Event_Attributes);

const Anchor I18n_Attributes[] = {
        { "DIR" ,               DIRECTION,        SET, "ltr|rtl" },
        { "LANG",               LANG,             NAME_RULE },
};
const int MAX_I18N_ATTRIBUTES=SizeOfArray(I18n_Attributes);

const Anchor Core_Attributes[] = {
        { "CLASS",              CLASS,            CDATA },
        { "ID",                 ID,               ID_RULE },
        { "STYLE",              STYLEattr,        CDATA },
        { "TITLE",              TITLEattr,        CDATA }
};
const int MAX_CORE_ATTRIBUTES=SizeOfArray(Core_Attributes);

Tag Null_Tag;

Tag Tags[] = {

/*
 * The first field after the tag avoids number clashes
 * BAL: The anchor field in these data structures may no longer be initialised here.
 * They must be explicitly initialised in the funtion __html_rules_init in rules.c
 * Clients must call the new function HtmlInit before calling any other functions in
 * HTMLLib to ensure tht this initialisation happens.
 */

 /*                                                                                                has_events
                                                                                                has_i18n
                                                                                             has_coreattrs
                                                                                          block_tag
      start_tag     tag_no          tag           attributes  max_attributes           can_be_end     type */
    { "A",          TAG_A,          A,            0,          MAX_A_ATTRIBUTES,        1, 0, 1, 1, 1, TYPE_BODY },
    { "ADDRESS",    TAG_ADDRESS,    ADDRESS,      0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "APPLET",     TAG_APPLET,     0,            0,          MAX_APPLET_ATTRIBUTES,   1, 1, 1, 0, 0, TYPE_BODY },
    { "AREA",       TAG_AREA,       0,            0,          MAX_AREA_ATTRIBUTES,     0, 1, 1, 1, 1, TYPE_BODY },
    { "B",          TAG_BOLD,       BOLD,         0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "BASE",       TAG_BASE,       0,            0,          MAX_BASE_ATTRIBUTES,     0, 0, 0, 0, 0, TYPE_HEAD },
    { "BASEFONT",   TAG_BASEFONT,   FONT,         0,          MAX_BASEFONT_ATTRIBUTES, 0, 0, 0, 0, 0, TYPE_BODY },
    { "BLOCKQUOTE", TAG_BLOCKQUOTE, BLOCKQUOTE,   0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "BODY",       TAG_BODY,       BODY,         0,          MAX_BODY_ATTRIBUTES,     1, 1, 1, 1, 1, TYPE_HEAD },
    { "BR",         TAG_BR,         BR,           0,          0,                       0, 1, 1, 0, 0, TYPE_BODY },
    { "CENTER",     TAG_CENTER,     CENTER,       0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "CENTRE",     TAG_CENTER,     CENTER,       0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "CITE",       TAG_CITE,       CITE,         0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "CODE",       TAG_CODE,       CODE,         0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "DD",         TAG_DD,         DD,           0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "DIR",        TAG_DIR,        UL,           0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "DIV",        TAG_DIV,        0,            0,          MAX_DIV_ATTRIBUTES,      1, 1, 1, 1, 1, TYPE_BODY },
    { "DL",         TAG_DL,         DL,           0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "DT",         TAG_DT,         DT,           0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "EM",         TAG_EM,         EM,           0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "FONT",       TAG_FONT,       FONT,         0,          MAX_FONT_ATTRIBUTES,     1, 0, 0, 0, 0, TYPE_BODY },
    { "FORM",       TAG_FORM,       FORM,         0,          MAX_FORM_ATTRIBUTES,     1, 0, 1, 1, 1, TYPE_BODY },
    { "FRAME",      TAG_FRAME,      FRAME,        0,          MAX_FRAME_ATTRIBUTES,    0, 0, 0, 0, 0, TYPE_FRAMESET },
    { "FRAMESET",   TAG_FRAMESET,   TYPE_FRAMESET,0,          MAX_FRAMESET_ATTRIBUTES, 1, 1, 0, 0, 0, TYPE_FRAMESET },
    { "H1",         TAG_H1,         H1,           0,          MAX_H_ATTRIBUTES,        1, 1, 1, 1, 1, TYPE_BODY },
    { "H2",         TAG_H2,         H2,           0,          MAX_H_ATTRIBUTES,        1, 1, 1, 1, 1, TYPE_BODY },
    { "H3",         TAG_H3,         H3,           0,          MAX_H_ATTRIBUTES,        1, 1, 1, 1, 1, TYPE_BODY },
    { "H4",         TAG_H4,         H4,           0,          MAX_H_ATTRIBUTES,        1, 1, 1, 1, 1, TYPE_BODY },
    { "H5",         TAG_H5,         H5,           0,          MAX_H_ATTRIBUTES,        1, 1, 1, 1, 1, TYPE_BODY },
    { "H6",         TAG_H6,         H6,           0,          MAX_H_ATTRIBUTES,        1, 1, 1, 1, 1, TYPE_BODY },
    { "HEAD",       TAG_HEAD,       HEAD,         0,          0,                       1, 1, 0, 1, 0, TYPE_HEAD },
    { "HR",         TAG_HR,         HR,           0,          MAX_HR_ATTRIBUTES,       0, 1, 1, 0, 1, TYPE_BODY },
    { "I",          TAG_ITALIC,     ITALIC,       0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "IMG",        TAG_IMG,        IMG,          0,          MAX_IMG_ATTRIBUTES,      0, 0, 1, 1, 1, TYPE_BODY },
    { "INPUT",      TAG_INPUT,      0,            0,          MAX_INPUT_ATTRIBUTES,    0, 0, 1, 1, 1, TYPE_BODY },
    { "ISINDEX",    TAG_ISINDEX,    ISINDEX,      0,          0,                       0, 0, 1, 1, 0, TYPE_HEAD },
    { "KBD",        TAG_KBD,        KBD,          0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "LI",         TAG_LI,         LI,           0,          MAX_LI_ATTRIBUTES,       1, 1, 1, 1, 1, TYPE_BODY },
    { "LINK",       TAG_LINK,       LINK,         0,          MAX_LINK_ATTRIBUTES,     0, 0, 1, 1, 1, TYPE_HEAD },
    { "MAP",        TAG_MAP,        0,            0,          MAX_MAP_ATTRIBUTES,      1, 1, 1, 1, 1, TYPE_BODY },
    { "MENU",       TAG_MENU,       UL,           0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "META",       TAG_META,       META,         0,          MAX_META_ATTRIBUTES,     0, 0, 0, 1, 0, TYPE_HEAD },
    { "NOFRAMES",   TAG_NOFRAMES,   TYPE_NOFRAMES,0,          0,                       1, 1, 0, 0, 0, TYPE_NOFRAMES },
    { "OBJECT",     TAG_OBJECT,     0,            0,          MAX_OBJECT_ATTRIBUTES,   1, 1, 1, 1, 1, TYPE_BODY },
    { "OL",         TAG_OL,         OL,           0,          MAX_OL_ATTRIBUTES,       1, 1, 1, 1, 1, TYPE_BODY },
    { "OPTION",     TAG_OPTION,     0,            0,          MAX_OPTION_ATTRIBUTES,   1, 1, 1, 1, 1, TYPE_BODY },
    { "P",          TAG_P,          P,            0,          MAX_P_ATTRIBUTES,        1, 1, 1, 1, 1, TYPE_BODY },
    { "PARAM",      TAG_PARAM,      0,            0,          MAX_PARAM_ATTRIBUTES,    0, 1, 0, 0, 0, TYPE_BODY },
    { "PRE",        TAG_PRE,        PRE,          0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "Q",          TAG_Q,          0,            0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "SAMP",       TAG_SAMP,       SAMP,         0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "SCRIPT",     TAG_SCRIPT,     0,            0,          0,                       0, 1, 0, 0, 0, TYPE_HEAD }, /* Don't process end tags in the usual way, so can be end = 0 */
    { "SELECT",     TAG_SELECT,     0,            0,          MAX_SELECT_ATTRIBUTES,   1, 0, 1, 1, 1, TYPE_BODY },
    { "STRIKE",     TAG_STRIKE,     STRIKE,       0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "STRONG",     TAG_STRONG,     STRONG,       0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "STYLE",      TAG_STYLE,      0,            0,          0,                       0, 1, 0, 1, 0, TYPE_HEAD }, /* Don't process end tags in the usual way, so can be end = 0 */
    { "SUB",        TAG_SUB,        SUB,          0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "SUP",        TAG_SUP,        SUP,          0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "TABLE",      TAG_TABLE,      0,            0,          MAX_TABLE_ATTRIBUTES,    1, 1, 1, 1, 1, TYPE_BODY },
    { "TD",         TAG_TD,         0,            0,          MAX_CELL_ATTRIBUTES,     1, 1, 1, 1, 1, TYPE_BODY },
    { "TEXTAREA",   TAG_TEXTAREA,   0,            0,          MAX_TEXTAREA_ATTRIBUTES, 1, 0, 1, 1, 1, TYPE_BODY },
    { "TH",         TAG_TH,         0,            0,          MAX_CELL_ATTRIBUTES,     1, 0, 1, 1, 1, TYPE_BODY },
    { "TITLE",      TAG_TITLE,      0,            0,          0,                       1, 1, 0, 1, 0, TYPE_HEAD },
    { "TR",         TAG_TR,         0,            0,          MAX_TR_ATTRIBUTES,       1, 1, 1, 1, 1, TYPE_BODY },
    { "TT",         TAG_TT,         TT,           0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "U",          TAG_U,          UNDERLINE,    0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "UL",         TAG_UL,         UL,           0,          0,                       1, 1, 1, 1, 1, TYPE_BODY },
    { "VAR",        TAG_VAR,        VAR,          0,          0,                       1, 0, 1, 1, 1, TYPE_BODY },
    { "XMP",        TAG_XMP,        PRE,          0,          0,                       1, 1, 0, 0, 0, TYPE_BODY }, /* Not HTML 4.0 */
   };
const int MAX_TAGS=SizeOfArray(Tags);


#endif /* __html2_h__ */
