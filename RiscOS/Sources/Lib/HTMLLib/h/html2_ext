/* -*-C-*-
 *
 * $Version: networking $
 *
 * $Source$
 *
 * $Log$
 * Revision 1.2  1997/04/29 15:50:57  kbracey
 * Merged in ARTtmp_merge
 *
 * Revision 1.1.2.3  1997/04/28 14:20:25  kbracey
 * Added in Tony Cheal's table code. Various other bug fixes.
 *
 * Revision 1.1.2.2  1997/04/09 16:44:43  kbracey
 * Spacing rules drastically improved. Major error in memory context handling
 * fixed. Bug in __html_strip_lf fixed.
 *
 * Revision 1.1.2.1  1997/04/08 10:27:04  kbracey
 * Initial revision
 *
 * Revision 1.1  95/10/12  12:49:20  pwain
 * Initial revision
 *
 *
 * --- Original Log Info ---
 *
 * Copyright (C) Acorn Computers Ltd. 1995
 *
 * $Version: networking $
 *
 * $Source$
 *
 * $Log$
 * Revision 1.2  1997/04/29 15:50:57  kbracey
 * Merged in ARTtmp_merge
 *
 * Revision 1.1.2.3  1997/04/28 14:20:25  kbracey
 * Added in Tony Cheal's table code. Various other bug fixes.
 *
 * Revision 1.1.2.2  1997/04/09 16:44:43  kbracey
 * Spacing rules drastically improved. Major error in memory context handling
 * fixed. Bug in __html_strip_lf fixed.
 *
 * Revision 1.1.2.1  1997/04/08 10:27:04  kbracey
 * Initial revision
 *
 * Revision 1.1  95/10/12  12:49:20  pwain
 * Initial revision
 *
 * Revision 1.2  95/09/14  12:44:35  pwain
 * A few comments.
 *
 * Revision 1.1  95/09/08  10:06:15  pwain
 * Initial revision
 *
 *
 */

/*
 * This file supports html2.h - should be used for external def's etc.
 */

#ifndef __html2_ext_h__
#define __html2_ext_h__

/*
 * These structures are all used internally by the library, but they
 * are provided here since they are pointed to from with the HTML document
 * tree.
 */

/* Anchor elements */
typedef struct ANCHORS {
	char 		*anchor;
#ifdef FRAMESUPPORT
        enum _anchor_tags tag;
#else
	unsigned int	tag;
#endif
	unsigned int 	rule;
	} Anchor, *AnchorRef;

/* Tags */
typedef struct TAG {
	const char	*start_tag;
	unsigned int    tag_no;
	int             can_be_end;
	unsigned int	tag;
	unsigned int	rule;
	const Anchor	*anchors;
	unsigned int	max_anchors:8;
	unsigned int    implicit_lf_before:1;
	unsigned int    implicit_lf_after:1;
	unsigned int    type:3;
	} Tag, *TagRef;

typedef enum tag_no { 
  TAG_A,        TAG_ADDRESS,    TAG_BOLD,    TAG_BASE,     TAG_BASEFONT,   TAG_BLOCKQUOTE,    TAG_BR,       TAG_CENTER,
  TAG_CENTRE,   TAG_CITE,       TAG_CODE,    TAG_DD,       TAG_DIR,        TAG_DL,            TAG_DT,       TAG_EM, 
  TAG_FONT,     TAG_FORM,       TAG_H1,      TAG_H2,       TAG_H3,         TAG_H4,            TAG_H5,       TAG_H6,
  TAG_H7,       TAG_HR,         TAG_ITALIC,  TAG_IMG,      TAG_INPUT,      TAG_ISINDEX,       TAG_KBD,      TAG_LI,      
  TAG_LINK,     TAG_MENU,       TAG_META,    TAG_NEXTID,   TAG_OL,         TAG_OPTION,        TAG_P,        TAG_PRE,     
  TAG_SAMP,     TAG_SCRIPT,     TAG_SELECT,  TAG_STRONG,   TAG_STYLE,      TAG_TABLE,         TAG_TD,       TAG_TEXTAREA,   TAG_TITLE,    TAG_TH,         TAG_TR,      TAG_TT,       TAG_UL,         TAG_VAR,           TAG_XMP,      TAG_FRAME,      TAG_DOCTYPE1, TAG_HTML1,      TAG_BODY,    TAG_FRAMESET, TAG_HEAD,       TAG_HTML2,         TAG_NOFRAMES 
} tag_no;

/* The maximum number of head, body and document markup tags */
extern int MAX_HEAD_BODY_TAGS;
extern int MAX_FRAMESET_TAGS;
extern int MAX_DOC_TAGS;

extern const Tag Null_Tag;
extern const Tag Head_Body_Tags[];
extern const Tag Frameset_Tags[];
extern const Tag Document_Tags[];

#include "tablestruc.h"
extern table_stream   * __html_current_table;
extern table_row      * __html_current_row;
extern table_headdata * __html_current_headdata;

#define SizeOfArray(A) (sizeof (A)/sizeof(*(A)))

#endif /* __html2_ext_h__ */
