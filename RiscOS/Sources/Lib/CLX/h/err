/*
  Title:        Err - reports errors.
  Copyright:    (C) 1991, Advanced RISC Machines Ltd., Cambridge, England.
  $Revision$  LDS  13-Feb-91
*/

/*
 * Reports program errors and verbose messages. The messages are sent to
 * stderr with 'utilname: ' prepended, and '\n' appended to the message.
 *
 * WARNING: The RISC OS implementation cannot handle floating-point values.
 */

#ifndef __err_h
#define __err_h

extern void err_init(char *name);
/*
 * Initialise the module with the program's name (up to 31 chars).
 */

extern void err_lib_error(char *fmt, char *extra);
/*
 * called by the clx library to record an error, it is intended that e1 is a
 * fmt string to be used in a call to fprintf, and e2 is an extra string to
 * be used if required (both less than 160 chars).
 */

extern char *err_get_error_fmt(void);
/*
 * gets a pointer to the fmt string described in err_lib_error or NULL if no
 * error has occurred.
 */

extern char *err_get_error_extra(void);
/*
 * gets a pointer to the extra string described in err_lib_error.
 */

extern void err_report(char *fmt, ...);
/*
 * print a message on the stderr stream (as defined above).
 */

extern void err_fail(char *fmt, ...);
/*
 * As for err_report, additionally exit(EXIT_FAILURE) is called afterwards.
 */

#endif
