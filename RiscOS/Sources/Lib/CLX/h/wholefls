/*
  Title:        Operations on whole files
  Status:       C Library Extension
  Copyright:    (C) 1988, Advanced RISC Machines Ltd., Cambridge, England.
  $Revision$  LDS 13-Feb-91
*/

/*
 * This module is designed to provide efficient, portable operations on whole
 * files. The wf_filesize() function allows the caller to have control over
 * storage allocation, which is vital for application efficiency.
 */

#ifndef __wholefiles_h
#define __wholefiles_h

#ifndef int32
#  define  int32 long int
#endif

#ifndef VoidStar
#  ifdef __STDC__
#    define VoidStar  void /* fool topcc */ *
#  else
#    define VoidStar  char *
#  endif
#endif

int32 wf_filesize(char *name);
/*
 * Return the size of the named file (as a pre-cursor to loading it).
 * Implemented using stat() (Unix) or osfile(5,...) (Acorn).
 * Return -1 if error.
 */

int wf_load(char *name, VoidStar p, int32 size);
/*
 * Load the named file of size 'size' at address 'p'.
 * 'size' must match the size of the file exactly.
 * Return -1 if error; otherwise 0.
 * (Implemented using open(), read(), close() (Unix) or
 *  osfile(&0xff,...) (RISC OS)).
 */

int wf_save(char *name, VoidStar p, int32 size);
/*
 * Save a block of memory as a file.
 * Return -1 if error; otherwise 0.
 * (Implemented using open(), write(), close() (Unix) or
 *  osfile(&0x0a,...) (RISC OS)).
 */

int wf_truncate(char *name, int32 len);

int wf_copystatus(char *from_file, char *to_file);


#endif
