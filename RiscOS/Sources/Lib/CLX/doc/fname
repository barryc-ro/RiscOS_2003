File Name Manipulation
======================

    Lee Smith, 19-Jun-92 - 22-Jun-92.


The purpose of the fname module is:

 -  to make the implementation of file name manipulation host-independent;
 -  to support the use of dual file-naming conventions on one host.

The implementation of fname itself is, of course, host specific.

Supported host systems include Unix, DOS, RISC OS and Mac/MPW.

In each environment fname can parse:

 -  a native file name;
 -  a pseudo Unix file name;
 -  a Unix file name;

and can unparse it into any of the supported host formats.

A pseudo Unix file name is one in the format:

    <host-volume-name>:/rest-of-unix-file-name

It is intended to support network file names using, for example:

    H:/armlink/link.c           --DOS-->    H:\armlink.link.c
    thor:/armlink/link.c        --MAC-->    thor:armlink:link.c
    nfs:/thor/armlink/link.c  -RISCOS-->    nfs::thor.armlink.link/c

Determining how to parse a file name is done using the ordered heuristics:

 -  a name starting with <volume-name>:/ is a pseudo Unix name;
 -  under RISC OS, a name starting with one of ':$&' is a RISC OS name;
 -  a name containing a '/' is a Unix name.
 -  otherwise, a name is a host name.

Under RISC OS, both name.<extn> and <extn>.name are recognised if <extn> is
one of a set of user-specified extensions. Otherwise, X.Y is recognised as
<path>.<root> with no extension. The form <name>/<extn> is never recognised
on input, but is created on output when translating a pseudo Unix file name
to RISC OS form.

A file name starting <volume>:, a RISC OS name starting with :, $ or &, a
DOS name starting with \ and a Unix name starting with / are all considered
<rooted>. A name that isn't rooted must be interpreetd relative to the
current place in the filing system hierarchy.

For example:

    Name                    Rooted  Volume  Path            Root    Extn

    sun1:/bb/tool/link.c    Y       sun1:   bb/tool         link    c
    /bb/tool/link.c         Y               bb/tool         link    c
    tool/link.c             N               tool            link    c
    ../link.c               N               ..              link    c
    ./link.c                N               .               link    c
    link.c                  N                               link    c

    \tool\link.c            Y               tool            link    c
    D:\tool\link.c          Y       D:      tool            link    c
    D:tool\link.c           Y       D:      tool            link    c

    $.xdevt.tool.c.link     Y               xdevt.tool      link    c 
    tool.c.link             N               tool            link    c
    nfs::thor.tool.c.link   Y     nfs::thor tool            link    c
    nfs::thor.tool.link.c   Y     nfs::thor tool            link    c
    nfs::thor.tool.link/c   Y     nfs::thor tool            link/c
    :0.c.link               Y               :0              link    c
    &.tool.c.link           Y               tool            link    c

    VOL:tool:link.c         Y       VOL     tool            link    c
    :tool:link.c            N               tool            link    c
    :link.c                 N                               link    c
    link.c                  N                               link    c
    tool:link.c             Y       tool                    link    c
    ::link.c                N               :               link    c
    :::link.c               N               ::              link    c

A host representation is created by unparsing a file name's description.
Usually, the output format is:
                              
    {<volume> <pathsep>} {<translated-path> <pathsep>} <root> . <extn>

RISC OS unparsing also supports:

    {<volume> <pathsep>} {<translated-path> <pathsep>} <extn> . <root>

when <extn> is one of a set of specified extensions, and

    {<volume> <pathsep>} {<translated-path> <pathsep>} <root> / <extn>

when the input file name is a pseudo Unix name.

Indications of the current place (./, .\, @.) are removed from paths during
translation; parent indictators (../, ^., ::) are translated to output form,
as are path separators.
