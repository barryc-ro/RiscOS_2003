#include "toolbox.h"
#include "quit.h"


void
Quit::DispatchEvent( ToolboxEvent *event, IdBlock *idb )
{
    switch ( event->hdr.event_code )
    {
        case Quit_AboutToBeShown:
            OnAboutToBeShownEvent( (QuitAboutToBeShownEvent *)event, idb );
            break;

        case Quit_Quit:
            OnQuitEvent( (QuitQuitEvent *)event, idb );
            break;

        case Quit_DialogueCompleted:
            OnDialogueCompletedEvent( (QuitDialogueCompletedEvent *)event, idb );
            break;

        case Quit_Cancel:
            OnCancelEvent( (QuitCancelEvent *)event, idb );
            break;

        default:
            Object::DispatchEvent( event, idb );
            break;
    }
}

void
Quit::OnAboutToBeShownEvent( QuitAboutToBeShownEvent *about_to_be_shown, IdBlock *idb )
{
    about_to_be_shown = about_to_be_shown;
    idb = idb;
}

void
Quit::OnQuitEvent( QuitQuitEvent *quit, IdBlock *idb )
{
    quit = quit;
    idb = idb;
}

void
Quit::OnDialogueCompletedEvent( QuitDialogueCompletedEvent *dialogue_completed, IdBlock *idb )
{
    dialogue_completed = dialogue_completed;
    idb = idb;
}

void
Quit::OnCancelEvent( QuitCancelEvent *cancel, IdBlock *idb )
{
    cancel = cancel;
    idb = idb;
}
