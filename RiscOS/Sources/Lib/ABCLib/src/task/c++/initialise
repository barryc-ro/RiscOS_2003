#include <stddef.h>
#include "kernel.h"
#include "swis.h"

#include "wimp.h"
#include "task.h"
#include "stdio.h"

#ifdef DEBUGLIB
#include "<Lib$Dir>.DebugLib/DebugLib.h"
#endif


_kernel_oserror *
Task::Initialise( int wimp_version, char *task_name, int *wimp_messages )
{
    int current_wimp_version;

    // Call possibly overridden PreInitialise.
    //
    _kernel_oserror *err = PreInitialise();

    if ( err == NULL ) err = _swix( Wimp_Initialise, _IN(0)|_IN(1)|_IN(2)|_IN(3)|_OUT(0)|_OUT(1),
                                    wimp_version, 0x4B534154, task_name, wimp_messages,
                                    &current_wimp_version, &mTaskHandle );
#ifdef DEBUGLIB
    /*
    ** Set default output to PRINTF so that if output device
    ** is not overridden in the !Run file, it doesn't try to
    ** send output to a non-existent device (e.g. parallel port)
    ** and hang as a result.
    */
    debug_initialise(task_name, "" , "");
    debug_output_device( PRINTF_OUTPUT );
    debug_atexit();
#endif

    // Call possibly overridden PostInitialise.
    //
    if ( err == NULL ) err = PostInitialise( current_wimp_version, mTaskHandle );

    return err;
}
