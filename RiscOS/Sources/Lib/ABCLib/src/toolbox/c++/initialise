#include <stddef.h>
#include "kernel.h"
#include "swis.h"

#include "toolbox.h"

#ifdef DEBUGLIB
#include "<Lib$Dir>.DebugLib/DebugLib.h"
#include "signal.h"
#endif

_kernel_oserror *
ToolboxTask::Initialise( unsigned int flags, int wimp_version, int *wimp_messages,
                            int *toolbox_events, char *directory )
{
    int current_wimp_version;

    // Call possibly overridden PreInitialise.
    //
    _kernel_oserror *err = PreInitialise();

    if ( err == NULL ) err = _swix( Toolbox_Initialise, _IN(0)|_IN(1)|_IN(2)|_IN(3)|_IN(4)|_IN(5)|_IN(6)|_OUT(0)|_OUT(1)|_OUT(2),
                                    flags, wimp_version, wimp_messages, toolbox_events, directory, &mMFD, &mIDB,
                                    &current_wimp_version, &mTaskHandle, &mSpriteArea );

#ifdef DEBUGLIB
    int size = 0;
    char *task_name = NULL;

    if (!err)
    {
    	err = _swix(Toolbox_GetSysInfo, _INR(0,2)|_OUT(2), 0, task_name, size, &size);

	if (!err)
	{
    		task_name = new char[size + 1];

    		if (task_name)
        	{
    			err = _swix(Toolbox_GetSysInfo, _INR(0,2)|_OUT(2), 0, task_name, size, &size);
                }
                else
                {
			raise(5);
                }
	}
    }

    /*
    ** Set default output to PRINTF so that if output device
    ** is not overridden in the !Run file, it doesn't try to
    ** send output to a non-existent device (e.g. parallel port)
    ** and hang as a result.
    */
    if ((!err)&&(task_name))
    {
    	debug_initialise(task_name, "" , "");
    	debug_output_device( PRINTF_OUTPUT );
    	debug_atexit();
    }

    if (task_name)
    {
    	delete task_name;
    	task_name = NULL;
    }
#endif

    // Call possibly overridden PostInitialise.
    //
    if ( err == NULL ) err = PostInitialise( current_wimp_version, mTaskHandle );

    return err;
}
