// Acorn Base Class Library - fontdbox.h
//
//      Definition of the FontDbox class.
//


#ifndef __fontdbox_h
#define __fontdbox_h


#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif

#ifndef __window_h
#include "window.h"
#endif


// FontDbox Templates.
//

// Flags.
//
#define FontDbox_GenerateShowEvent    0x00000001
#define FontDbox_GenerateHideEvent    0x00000002
#define FontDbox_IncludeSystemFont    0x00000004


// Templates.
//
struct FontDboxTemplate
{
  int           flags;
  char          *title;
  int           max_title;
  char          *initial_font;
  int           initial_height;
  int           initial_aspect;
  char          *try_string;
  char          *window;
};


// FontDbox SWI Calls.
//
#define FontDbox_SWIChunkBase    0x82a00
#define FontDbox_ObjectClass     FontDbox_SWIChunkBase
#define FontDbox_ClassSWI        (FontDbox_SWIChunkBase + 0)
#define FontDbox_PostFilter      (FontDbox_SWIChunkBase + 1)
#define FontDbox_PreFilter       (FontDbox_SWIChunkBase + 2)


// FontDbox SWI Flags.
//
#define FontDbox_SetSize_Height   1
#define FontDbox_SetSize_Aspect   2


// FontDbox Methods.
//
#define FontDbox_GetWindowId           0
#define FontDbox_SetFont               1
#define FontDbox_GetFont               2
#define FontDbox_SetSize               3
#define FontDbox_GetSize               4
#define FontDbox_SetTryString          5
#define FontDbox_GetTryString          6
#define FontDbox_SetTitle              7
#define FontDbox_GetTitle              8


// FontDbox Toolbox Events.
//
#define FontDbox_AboutToBeShown     FontDbox_SWIChunkBase
#define FontDbox_DialogueCompleted  (FontDbox_SWIChunkBase + 1)
#define FontDbox_ApplyFont          (FontDbox_SWIChunkBase + 2)

struct FontDboxAboutToBeShownEvent
{
  ToolboxEventHeader hdr;
  int                show_type;
  union
  {
    TopLeft               pos;
    WindowShowObjectBlock full;
  } info;
};

struct FontDboxDialogueCompletedEvent
{
  ToolboxEventHeader hdr;
};

struct FontDboxApplyFontEvent
{
  ToolboxEventHeader hdr;
  unsigned int       height;
  unsigned int       aspect;
  char               font[208];
};


// Definition of the FontDbox class.
//
class FontDbox : public Object
{
public:

    FontDbox();
    FontDbox( unsigned int flags, void *name_or_template );
    FontDbox( ObjectId oid );
    ~FontDbox();

    // Toolbox methods.
    //
    _kernel_oserror *GetWindowId( unsigned int flags, ObjectId *window );
    _kernel_oserror *SetFont( unsigned int flags, char *font_id );
    _kernel_oserror *GetFont( unsigned int flags, char *buffer, int bufsz, int *nbytes );
    _kernel_oserror *SetSize( unsigned int flags, int height, int aspect_ratio );
    _kernel_oserror *GetSize( unsigned int flags, int *height, int *aspect_ratio );
    _kernel_oserror *SetTryString( unsigned int flags, char *try_string );
    _kernel_oserror *GetTryString( unsigned int flags, char *buffer, int bufsz, int *nbytes );
    _kernel_oserror *SetTitle( unsigned int flags, char *title );
    _kernel_oserror *GetTitle( unsigned int flags, char *buffer, int bufsz, int *nbytes );

    // Dispatch FontDbox events.
    //
    virtual void DispatchEvent( ToolboxEvent *event, IdBlock *idb );

    // Functions which can be overridden to handle events.
    //
    virtual void OnAboutToBeShownEvent( FontDboxAboutToBeShownEvent *about_to_be_shown, IdBlock *idb );
    virtual void OnDialogueCompletedEvent( FontDboxDialogueCompletedEvent *dialogue_completed, IdBlock *idb );
    virtual void OnApplyFontEvent( FontDboxApplyFontEvent *apply_font, IdBlock *idb );
};


#endif
