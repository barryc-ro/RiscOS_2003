// Acorn Base Class Library - iconbar.h
//
//      Class definition of the Iconbar object.
//


#ifndef __iconbar_h
#define __iconbar_h


#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif


// Iconbar templates.
//
struct IconbarTemplate
{
  unsigned int  flags;
  int           position;
  int           priority;
  char          *sprite_name;
  int           max_sprite;
  char          *text;
  int           max_text_len;
  char          *menu;
  int           select_event;
  int           adjust_event;
  char          *select_show;
  char          *adjust_show;
  char          *help_message;
  int           max_help;
};

#define Iconbar_GenerateSelectAboutToBeShown  0x00000001
#define Iconbar_GenerateAdjustAboutToBeShown  0x00000002
#define Iconbar_ShowSelectTransient           0x00000004
#define Iconbar_ShowAdjustTransient           0x00000008
#define Iconbar_GenerateSelectClickedEvent    0x00000020
#define Iconbar_GenerateAdjustClickedEvent    0x00000040

#define Iconbar_ValidFlags                    0x00000177


// Iconbar SWIs and Toolbox_MiscOp (methods) reason codes.
//
#define Iconbar_SWIChunkBase    0x82900
#define Iconbar_ObjectClass     Iconbar_SWIChunkBase
#define Iconbar_ClassSWI        (Iconbar_SWIChunkBase + 0)
#define Iconbar_PostFilter      (Iconbar_SWIChunkBase + 1)
#define Iconbar_PreFilter       (Iconbar_SWIChunkBase + 2)

#define Iconbar_GetIconHandle      0
#define Iconbar_SetMenu            1
#define Iconbar_GetMenu            2
#define Iconbar_SetEvent           3
#define Iconbar_GetEvent           4
#define Iconbar_SetShow            5
#define Iconbar_GetShow            6
#define Iconbar_SetHelpMessage     7
#define Iconbar_GetHelpMessage     8
#define Iconbar_SetText            9
#define Iconbar_GetText           10
#define Iconbar_SetSprite         11
#define Iconbar_GetSprite         12


// Flags for Iconbar_SetEvent.
//
#define Iconbar_SetEvent_Select   0x00000001
#define Iconbar_SetEvent_Adjust   0x00000002


// Flags for Iconbar_SetShow.
//
#define Iconbar_SetShow_Select    0x00000001
#define Iconbar_SetShow_Adjust    0x00000002


// Iconbar Toolbox events.
//
#define Iconbar_Clicked              (Iconbar_SWIChunkBase + 0)
#define Iconbar_SelectAboutToBeShown (Iconbar_SWIChunkBase + 1)
#define Iconbar_AdjustAboutToBeShown (Iconbar_SWIChunkBase + 2)


// Clicked event block.
//
#define Iconbar_Clicked_Adjust       0x00000001
#define Iconbar_Clicked_Select       0x00000004

struct IconbarClickedEvent
{
  ToolboxEventHeader hdr;
};


// Object about to be shown on SELECT/ADJUST click.
//
struct IconbarAboutToBeShownEvent
{
  ToolboxEventHeader hdr;
  ObjectId           id;
};


// Iconbar class definition.
//
class Iconbar : public Object
{
public:

    Iconbar();
    Iconbar( unsigned int flags, void *name_or_template );
    Iconbar( ObjectId oid );
    ~Iconbar();

    // Toolbox methods for the Iconbar class.
    //
    _kernel_oserror *GetIconHandle( unsigned int flags, int *icon_handle );
    _kernel_oserror *SetMenu( unsigned int flags, ObjectId menu_id );
    _kernel_oserror *GetMenu( unsigned int flags, ObjectId *menu_id );
    _kernel_oserror *SetEvent( unsigned int flags, int select_event, int adjust_event );
    _kernel_oserror *GetEvent( unsigned int flags, int *select_event, int *adjust_event );
    _kernel_oserror *SetShow( unsigned int flags, ObjectId select_id, ObjectId adjust_id );
    _kernel_oserror *GetShow( unsigned int flags, ObjectId *select_id, ObjectId *adjust_id );
    _kernel_oserror *SetHelpMessage( unsigned int flags, char *message );
    _kernel_oserror *GetHelpMessage( unsigned int flags, char *buffer, int bufsz, int *nbytes );
    _kernel_oserror *SetText( unsigned int flags, char *text );
    _kernel_oserror *GetText( unsigned int flags, char *buffer, int bufsz, int *nbytes );
    _kernel_oserror *SetSprite( unsigned int flags, char *sprite_name );
    _kernel_oserror *GetSprite( unsigned int flags, char *buffer, int bufsz, int *nbytes );

    // Dispatch Iconbar events.
    //
    virtual void DispatchEvent( ToolboxEvent *event, IdBlock *idb );

    // Functions which can be overridden to handle events.
    //
    virtual void OnClickedEvent( IconbarClickedEvent *clicked, IdBlock *idb );
    virtual void OnSelectAboutToBeShownEvent( IconbarAboutToBeShownEvent *about_to_be_shown, IdBlock *idb );
    virtual void OnAdjustAboutToBeShownEvent( IconbarAboutToBeShownEvent *about_to_be_shown, IdBlock *idb );
};


#endif
