// Acorn Base Class Library - scale.h
//
//      Definition of the Scale class.
//


#ifndef __scale_h
#define __scale_h


#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif

#ifndef __window_h
#include "window.h"
#endif


// Scale Templates.
//

// Flags.
//
#define Scale_GenerateShowEvent    0x00000001
#define Scale_GenerateHideEvent    0x00000002
#define Scale_IncludeScaleToFit    0x00000004


// Templates.
//
struct ScaleTemplate
{
  unsigned int   flags;
  int            max_value;
  int            min_value;
  int            step_size;
  char           *title;
  int            max_title;
  char           *window;
  int            std_value[4];
} ScaleTemplate;


// Scale SWI Calls.
//
#define Scale_SWIChunkBase    0x82c00
#define Scale_ObjectClass     Scale_SWIChunkBase
#define Scale_ClassSWI        (Scale_SWIChunkBase + 0)
#define Scale_PostFilter      (Scale_SWIChunkBase + 1)
#define Scale_PreFilter       (Scale_SWIChunkBase + 2)

// Scale SWI constants.
//
#define Scale_SetLowerBound             0x00000001
#define Scale_SetUpperBound             0x00000002
#define Scale_SetStepSize               0x00000004

// Scale Methods.
//
#define Scale_GetWindowId           0
#define Scale_SetValue              1
#define Scale_GetValue              2
#define Scale_SetBounds             3
#define Scale_GetBounds             4
#define Scale_SetTitle              5
#define Scale_GetTitle              6


// Scale Toolbox Events.
//
#define Scale_AboutToBeShown     Scale_SWIChunkBase
#define Scale_DialogueCompleted  (Scale_SWIChunkBase + 1)
#define Scale_ApplyFactor        (Scale_SWIChunkBase + 2)


struct ScaleAboutToBeShownEvent
{
  ToolboxEventHeader hdr;
  int                show_type;
  union
  {
    TopLeft               pos;
    WindowShowObjectBlock full;
  } info;
};


struct ScaleDialogueCompletedEvent
{
  ToolboxEventHeader hdr;
};


struct ScaleApplyFactorEvent
{
  ToolboxEventHeader hdr;
  unsigned int       factor;
};


// Definition of the Scale class.
//
class Scale : public Object
{
public:

    Scale();
    Scale( unsigned int flags, void *name_or_template );
    Scale( ObjectId oid );
    ~Scale();

    // Toolbox methods.
    //
    _kernel_oserror *GetWindowId( unsigned int flags, ObjectId *window );
    _kernel_oserror *SetValue( unsigned int flags, int value );
    _kernel_oserror *GetValue( unsigned int flags, int *value );
    _kernel_oserror *SetBounds( unsigned int flags, int lower, int upper, int step );
    _kernel_oserror *GetBounds( unsigned int flags, int *lower, int *upper, int *step );
    _kernel_oserror *SetTitle( unsigned int flags, char *title );
    _kernel_oserror *GetTitle( unsigned int flags, char *buffer, int bufsz, int *nbytes );

    // Dispatch Scale events.
    //
    virtual void DispatchEvent( ToolboxEvent *event, IdBlock *idb );

    // Functions which can be overridden to handle events.
    //
    virtual void OnAboutToBeShownEvent( ScaleAboutToBeShownEvent *about_to_be_shown, IdBlock *idb );
    virtual void OnDialogueCompletedEvent( ScaleDialogueCompletedEvent *dialogue_completed, IdBlock *idb );
    virtual void OnApplyFactorEvent( ScaleApplyFactorEvent *apply_factor, IdBlock *idb );
};


#endif
