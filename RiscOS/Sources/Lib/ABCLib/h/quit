// Acorn Base Class Library - quit.h
//
//      Definition of the Quit class.
//


#ifndef __quit_h
#define __quit_h


#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif

#ifndef __window_h
#include "window.h"
#endif


// Quit Templates.
//

// Template.
//
struct QuitTemplate
{
  unsigned int   flags;
  char           *title;
  int            max_title;
  char           *message;
  int            max_message;
  char           *window;
};

#define Quit_GenerateAboutToBeShown              0x00000001
#define Quit_GenerateDialogueCompleted           0x00000002


// Quit SWI Calls.
//
#define Quit_SWIChunkBase    0x82a90
#define Quit_ObjectClass     Quit_SWIChunkBase
#define Quit_ClassSWI        (Quit_SWIChunkBase + 0)
#define Quit_PostFilter      (Quit_SWIChunkBase + 1 - 0x10)
#define Quit_PreFilter       (Quit_SWIChunkBase + 2 - 0x10)


// Quit Methods.
//
#define Quit_GetWindowId         0
#define Quit_SetMessage          1
#define Quit_GetMessage          2
#define Quit_SetTitle            3
#define Quit_GetTitle            4



// Quit Toolbox Events.
//

// Event codes.
//
#define Quit_AboutToBeShown      (Quit_SWIChunkBase+0)
#define Quit_Quit                (Quit_SWIChunkBase+1)
#define Quit_DialogueCompleted   (Quit_SWIChunkBase+2)
#define Quit_Cancel              (Quit_SWIChunkBase+3)


struct QuitAboutToBeShownEvent
{
  ToolboxEventHeader hdr;
  int                show_type;
  union
  {
    TopLeft               pos;
    WindowShowObjectBlock full;
  } info;
};


struct QuitQuitEvent
{
  ToolboxEventHeader hdr;
};


struct QuitDialogueCompletedEvent
{
  ToolboxEventHeader hdr;
};

struct QuitCancelEvent
{
  ToolboxEventHeader hdr;
};


// Definition of the Quit class.
//
class Quit : public Object
{
public:

    Quit();
    Quit( unsigned int flags, void *name_or_template );
    Quit( ObjectId oid );
    ~Quit();

    // Toolbox methods.
    //
    _kernel_oserror *GetWindowId( unsigned int flags, ObjectId *window );
    _kernel_oserror *SetMessage( unsigned int flags, char *message );
    _kernel_oserror *GetMessage( unsigned int flags, char *buffer, int bufsz, int *nbytes );
    _kernel_oserror *SetTitle( unsigned int flags, char *title );
    _kernel_oserror *GetTitle( unsigned int flags, char *buffer, int bufsz, int *nbytes );

    // Dispatch Quit events.
    //
    virtual void DispatchEvent( ToolboxEvent *event, IdBlock *idb );

    // Functions which can be overridden to handle events.
    //
    virtual void OnAboutToBeShownEvent( QuitAboutToBeShownEvent *about_to_be_shown, IdBlock *idb );
    virtual void OnQuitEvent( QuitQuitEvent *quit, IdBlock *idb );
    virtual void OnDialogueCompletedEvent( QuitDialogueCompletedEvent *dialogue_completed, IdBlock *idb );
    virtual void OnCancelEvent( QuitCancelEvent *cancel, IdBlock *idb );
};


#endif
