// Acorn Base Class Library - fileinfo.h
//
//      Definition of the FileInfo class.
//


#ifndef __fileinfo_h
#define __fileinfo_h


#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif

#ifndef __window_h
#include "window.h"
#endif


// FileInfo Templates.
//

// Flags.
//
#define FileInfo_GenerateShowEvent    0x00000001
#define FileInfo_GenerateHideEvent    0x00000002


// Templates.
//
struct FileInfoTemplate
{
  int           flags;
  char          *title;
  int           max_title;
  int           modified;
  int           filetype;
  char          *filename;
  int           filesize;
  char          utc[5];
  char          *window;
};


// FileInfo SWI Calls.
//
#define FileInfo_SWIChunkBase    0x82ac0
#define FileInfo_ObjectClass     FileInfo_SWIChunkBase
#define FileInfo_ClassSWI        (FileInfo_SWIChunkBase + 0)
#define FileInfo_PostFilter      (FileInfo_SWIChunkBase + 1)
#define FileInfo_PreFilter       (FileInfo_SWIChunkBase + 2)

// FileInfo SWI constants.
//
#define FileInfo_Directory      0x1000
#define FileInfo_Application    0x2000

// FileInfo Methods.
//
#define FileInfo_GetWindowId        0
#define FileInfo_SetModified        1
#define FileInfo_GetModified        2
#define FileInfo_SetFileType        3
#define FileInfo_GetFileType        4
#define FileInfo_SetFileName        5
#define FileInfo_GetFileName        6
#define FileInfo_SetFileSize        7
#define FileInfo_GetFileSize        8
#define FileInfo_SetDate            9
#define FileInfo_GetDate           10
#define FileInfo_SetTitle          11
#define FileInfo_GetTitle          12


// FileInfo Toolbox Events.
//
#define FileInfo_AboutToBeShown     FileInfo_SWIChunkBase
#define FileInfo_DialogueCompleted  (FileInfo_SWIChunkBase + 1)

struct FileInfoAboutToBeShownEvent
{
  ToolboxEventHeader hdr;
  int                show_type;
  union
  {
    TopLeft               pos;
    WindowShowObjectBlock full;
  } info;
};


struct FileInfoDialogueCompletedEvent
{
  ToolboxEventHeader hdr;
};


// Definition of the FileInfo class.
//
class FileInfo : public Object
{
public:

    FileInfo();
    FileInfo( unsigned int flags, void *name_or_template );
    FileInfo( ObjectId oid );
    ~FileInfo();

    // Toolbox methods.
    //
    _kernel_oserror *GetWindowId( unsigned int flags, ObjectId *window );
    _kernel_oserror *SetModified( unsigned int flags, int modified );
    _kernel_oserror *GetModified( unsigned int flags, int *modified );
    _kernel_oserror *SetFileType( unsigned int flags, int file_type );
    _kernel_oserror *GetFileType( unsigned int flags, int *file_type );
    _kernel_oserror *SetFileName( unsigned int flags, char *file_name );
    _kernel_oserror *GetFileName( unsigned int flags, char *buffer, int bufsz, int *nbytes );
    _kernel_oserror *SetFileSize( unsigned int flags, int file_size );
    _kernel_oserror *GetFileSize( unsigned int flags, int *file_size );
    _kernel_oserror *SetDate( unsigned int flags, int *UTC );
    _kernel_oserror *GetDate( unsigned int flags, int *UTC );
    _kernel_oserror *SetTitle( unsigned int flags, char *title );
    _kernel_oserror *GetTitle( unsigned int flags, char *buffer, int bufsz, int *nbytes );

    // Dispatch FileInfo events.
    //
    virtual void DispatchEvent( ToolboxEvent *event, IdBlock *idb );

    // Functions which can be overridden to handle events.
    //
    virtual void OnAboutToBeShownEvent( FileInfoAboutToBeShownEvent *about_to_be_shown, IdBlock *idb );
    virtual void OnDialogueCompleted( FileInfoDialogueCompletedEvent *dialogue_completed, IdBlock *idb );
};


#endif
