//
#ifndef dci_dcimulti_h
#define dci_dcimulti_h

/* File:    dcimulti.h
   Purpose: Abstract classes for handling DCI-4 multicast stuff.
   Author:  Ben Laughton

   Copyright 1999 Pace Micro Techology plc.

   This material is the confidential trade secret and proprietary
   information of Pace Micro Techology plc.  It may not be reproduced,
   used sold, or transferred to any third party without the prior
   written consent of Pace Micro Techology plc. All rights reserved.

   History:

   1999-06-30: BAL
   Created.
 */




// =============================================================================
// Include header files

// Misc
#include "Email/Common/bool.h"




// =============================================================================
// Class declarations

class DCIFilterMulticast;

class DCIInterfaceMulticast
{
    // Public methods
    public:
        virtual DCIFilterMulticast *  CreateFilterMulticast () = 0;
        virtual void                  UpdateHardware () = 0;
        virtual void                  ConfigureHardware () = 0;
};

class DCIFilterMulticast
{
    // Public methods
    public:
        virtual int   Claim (const bool               specific_addr,
                             const unsigned char *    hw_addr,
                             const void *             logical_addr) = 0;

        virtual int   Release (const bool               specific_addr,
                               const unsigned char *    hw_addr,
                               const void *             logical_addr) = 0;

    // Protected methods
    protected:
        virtual void  RemoveAll () = 0;
};

#endif
