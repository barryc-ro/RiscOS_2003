#if !defined(__NFELib_create_ent_h)              /* Sentry, use file only if it's not already included. */
#define __NFELib_create_ent_h
/*	Project DaytonaSW (757) - Email library
	Acorn Computers Ltd.
	Copyright © 1997, 1998. All Rights Reserved.

	FILE:		create_ent.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.01 for RISC OS

	OVERVIEW
	========
	Header file defining create entity functions for
	NetFax Email library create methods

	HISTORY
	=======
	25/02/97	0.01	RDW	Initial version
*/


/* ************************************************************************** */
/*                                                                            */
/* Include header files - System                                              */
/*                                                                            */
/* ************************************************************************** */
#include <time.h>
#include "kernel.h"


/* ************************************************************************** */
/*                                                                            */
/* Include header files - Project defined                                     */
/*                                                                            */
/* ************************************************************************** */
extern "C"
{
  #include "Email/EmailLib/ELib.h"
  #include "Email/EmailLib/ELib_priv.h"
  #include "NFELib.h"
}
#include "Email/EmailLib/MIMEentity.h"


/* ************************************************************************** */
/*                                                                            */
/* Constants                                                                  */
/*                                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/*                                                                            */
/* New enumerated types                                                       */
/*                                                                            */
/* ************************************************************************** */
typedef enum
{
  CREATE_RFC822MSG_INIT,
  CREATE_RFC822MSG_WRITEOUT_INIT,
  CREATE_RFC822MSG_WRITEOUT,
  CREATE_RFC822MSG_ERROR,
  CREATE_RFC822MSG_FINISHED
} CREATE_RFC822MSG_STATES;							/* States of Create RFC822 message FSM, used in NFE_create_RFC822_msg() */

typedef struct
{
  NFE_CONTEXT_TYPE         type;						/* The type of the context data, all context structures in ELib have this */
  rfc822msg               *msg;							/* The email message object */
  NFE_rcode                retcode;						/* The return code to pass back, in context so we can pass it the ERROR state and then to the caller */
  NFE_header              *header;						/* The header information (device class, org. name, tele. phone noes, etc. */
  MIMEentity              *mimeentity;						/* The MIME entity to put in the message (eg. MIMEimage, MIMEtext, MIMEmultip */
  const char              *out_file;						/* The filename of the file to write the message into */
  CREATE_RFC822MSG_STATES  state;						/* The current state that the FSM is in */
  NFE_CONTEXT              msg_writeout_context;				/* The context handle for the WriteOut of the rfc822msg object */
  FILE                    *file;						/* The FILE ptr of the output file, passed to the WriteOut method of rfc822msg */
} create_rfc822msg_context;							/* FSM data context, used in NFE_create_RFC822_msg() */


/* ************************************************************************** */
/*                                                                            */
/* Function Prototypes                                                        */
/*                                                                            */
/* ************************************************************************** */

/* ************************************************************************** */
/*
   FUNCTION:       NFE_create_TEXT_entity
   DESCRIPTION:    FSM to create a text entity using the EmailLib, ready for
                   attachment to a message.  (really aught to merge this with
                   NFE_create_FAX_entity).
   DEPENDENCIES:   data type            NFE_CONTEXT     NFElib.h
                   data type            clock_t         <time.h>
                   data type            NFE_NF_msg_class NFElib.h
                   data type            uint32          Elib.h
                   data type            NFE_rcode       Elib.h
                   data type            MIMEentity      MIMEentity.h
                   data type            _kernel_oserror  "kernel.h"
   DEPENDED ON BY: function             NFE_create_MIME_entity  NFELib.c++
   INPUT PARAMS:   NFE_CONTEXT          context         context handle for the instance of this FSM
                   clock_t              t_slice         clock tick time to return by
                   const char *const    in_file         data file to use as input
                   const char *const    out_file        file to output MIME entity to
                   NFE_NF_msg_class     type            type of NetFax MIME entity to create
                   NFE_MIME            *obj             Created MIME entity
   OUTPUT PARAMS:  NFE_CONTEXT          context         context handle for the instance of this FSM
                   NFE_rcode *const     rc              NetFax Email Library return code
   RETURN VALUE:   _kernel_oserror*                     OS error
*/
/* ************************************************************************** */
_kernel_oserror *NFE_create_TEXT_entity(NFE_CONTEXT           *context,
                                        const clock_t          t_slice,
                                        const char *const      in_file,
                                        const char *const      out_file,
                                        NFE_NF_msg_class       type,
                                        MIMEentity*           &obj,	// reference to a pointer
                                        NFE_rcode *const       rc);

/* ************************************************************************** */
/*
   FUNCTION:       NFE_create_FAX_entity
   DESCRIPTION:    FSM to create a fax entity using the EmailLib, ready for
                   attachment to a message.  (really aught to merge this with
                   NFE_create_TEXT_entity).
   DEPENDENCIES:   data type            NFE_CONTEXT     NFElib.h
                   data type            clock_t         <time.h>
                   data type            uint32          Elib.h
                   data type            NFE_rcode       Elib.h
                   data type            MIMEentity      MIMEentity.h
                   data type            _kernel_oserror  "kernel.h"
   DEPENDED ON BY: 
   INPUT PARAMS:   NFE_CONTEXT         *context         create_FAX_entity current process context information
                   clock_t              t_slice         clock tick time to return by
                   const char *const    in_file         data file to use as input
                   const char *const    out_file        file to output MIME entity to
                   char[SERIAL_LEN]     serial_num      Device serial number
                   uint32               doc_num         Fax document number
                   uint32               page_num        Fax Page number
                   NFE_rcode *const     rc              NetFax Email Library return code.  Must point to a NFE_rcode
   OUTPUT PARAMS:  NFE_CONTEXT          context         context handle for the instance of this FSM
                   NFE_rcode *const     rc              NetFax Email Library return code
                   MIMEentity*         &obj             The created MIMEentity
   RETURN VALUE:   _kernel_oserror*                     OS error
*/
/* ************************************************************************** */
_kernel_oserror *NFE_create_FAX_entity(NFE_CONTEXT           *context,
                                       const clock_t          t_slice,
                                       const char *const      in_file,
                                       const char *const      out_file,
                                       const char             serial_num[],
                                       const uint32           doc_num,
                                       const uint32           page_num,
                                       MIMEentity*           &obj,	// reference to a pointer
                                       NFE_rcode *const       rc);

/* ************************************************************************** */
/*
   FUNCTION:       create_rfc822msg_init
   DESCRIPTION:    Function to do the CREATE_RFC822MSG_INIT state of the
                   create_rfc822msg FSM
                   Creates the header objects needed in the message using the
                   data given in the NFE_header struct(held in the context
                   instance).  Creates the rfc822msg, adds these headers to the
                   rfc822msg object then adds the NFE_LIST object (which is
                   really a MIMEentity to the message to give it a body.
                   rfc822msg then owns that MIMEentity.
   DEPENDENCIES:   data type            create_rfc822msg_context        NFELib.c++
   DEPENDED ON BY: function             NFE_create_RFC822_msg           NFELib.c++
   INPUT PARAMS:   NFE_CONTEXT          context         create_RFC822MSG_entity current process context information
   OUTPUT PARAMS:  NFE_CONTEXT          context         create_RFC822MSG_entity current process context information
   RETURN VALUE:   NONE
*/
/* ************************************************************************** */
void create_rfc822msg_init(create_rfc822msg_context &c);

#endif
