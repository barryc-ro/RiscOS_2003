; irqs.s
;
; The code from this source file has been taken from the ANC interrupt
; management code and from ART interrupt management code.
;
; See irqs.h for interface details
;
; NOTE 1:  Counter-intuitively, irqs_on matches restore_irqs and NOT
; ensure_irqs_on.
;
; NOTE 2:  This code prefers to use 32-bit code where possible.
;

        GET   Hdr:ListOpts
        GET   Hdr:Macros
        GET   Hdr:System
        GET   Hdr:APCS.<APCS>

        EXPORT  irqs_off
        EXPORT  irqs_on

        EXPORT  ensure_irqs_off
        EXPORT  ensure_irqs_on
        EXPORT  restore_irqs

        AREA    |AsmUtils$irqs$$Code|, CODE, READONLY, PIC

; ensure_irqs_off/ irqs_off:  Disable IRQs, returning a value
; suitable for passing to restore_irqs/irqs_on.
ensure_irqs_off
irqs_off
        [ No26bitCode :LOR: :LNOT: No32bitCode
        MRS     r0, CPSR
        ORR     r1, r0, #I32_bit        ; set IRQs
        TEQ     r0, r1                  ; any change?
        MSRNE   CPSR_c, r1              ; disable IRQs if enabled before
        AND     r0, r0, #I32_bit        ; return previous state of bit
        Return  ,LinkNotStacked
        |
        AND     r0, lr, # I_bit
        ORRS    pc, lr, # I_bit
        ]

; restore_irqs/irqs_on:  Re-enable IRQs if they were enabled prior to
; the earlier call to ensure_irqs_off/ensure_irqs_on/irqs_off
restore_irqs
irqs_on
        [ No26bitCode :LOR: :LNOT: No32bitCode
        MRS     r1, CPSR                ; obtain current PSR
        BIC     r2, r1, #I32_bit        ; clear IRQ bit
        ORR     r2, r2, r0              ; restore state from parameter
        TEQ     r1, r2                  ; changed?
        MSRNE   CPSR_c, r2              ; update PSR if it has changed
        Return  ,LinkNotStacked
        |
        BIC     lr, lr, # I_bit
        ORRS    pc, lr, r0
        ]

; ensure_irqs_on:  Enable IRQs, returning a value
; suitable for passing to restore_irqs/irqs_on
ensure_irqs_on
        [ No26bitCode :LOR: :LNOT: No32bitCode
        MRS     r0, CPSR
        BIC     r1, r0, #I32_bit        ; enable IRQs
        TEQ     r0, r1                  ; any change?
        MSRNE   CPSR_c, r1              ; enable IRQs if disabled before
        AND     r0, r0, #I32_bit        ; return previous state of bit
        Return  ,LinkNotStacked
        |
        AND     r0, lr, # I_bit
        BICS    pc, lr, # I_bit
        ]

        END

