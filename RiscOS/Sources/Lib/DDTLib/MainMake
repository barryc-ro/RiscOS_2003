# File:    Makefile
# Purpose: Makefile for DDTLib
# Author:  Ben Laughton
#
# History:
#
# 2000-04-10: BAL
# Created.




# ------------------------------------------------------------------------------
# Paths
#

EXP_DIR		= <Lib$Dir>.DDTLib
LIBDIR		= <Lib$Dir>




# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= mkdir -p
AS		= objasm
CC		= $(MemCheckCC) cc
C++		= c++
CMHG		= cmhg
CP		= copy
LD		= link
RM		= remove
WIPE		= -wipe
CD		= dir
CHMOD		= access
TOUCH		= create
DATA2AOF	= datatoaof
MODSQZ		= modsqz
LB		= libfile




# ------------------------------------------------------------------------------
# Flags
#

AFLAGS		= -depend !Depend $(THROWBACK) $(EXTRA_A_FLAGS) -stamp -quit
CCFLAGS		= -depend !Depend $(THROWBACK) $(INCLUDES) $(DFLAGS) -c -Wsp -ffah
LDFLAGS		= -aof
CPFLAGS		= ~cfr~v
WFLAGS		= ~c~vr
LBFLAGS		= -c
CHMODFLAGS	= RW/r

DFLAGS		= $(EXTRA_C_FLAGS)

INCLUDES	= -IC:,TCPIPLibs:




# ------------------------------------------------------------------------------
# Program specific options
#

COMPONENT	= DDTLib
TARGET		= l.DDTLib$(LIBSUFFIX)
EXPORTS		= $(EXP_C_H).$(COMPONENT)

OBJS =\
 $(EXT).AIFHeader\
 $(EXT).DDT\
 $(EXT).DDT2\
 $(EXT).GetProc\
 $(EXT).NrSymb\
 $(EXT).Print1\
 $(EXT).SectFile\
 $(EXT).SrcPos\
 $(EXT).ThrowBack

# ------------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES:	.o .z .od .odz .i .h .s .c
.c.i:;		$(CC)	$(CCFLAGS)	-C -E $< >> $@
.c.o:;		$(CC)	$(CCFLAGS)	-o $@ $<
.c.od:;		$(CC)	$(CCFLAGS)	-fn -g -o $@ $<
.c.z:;		$(CC)	$(CCFLAGS)	-DDesk__MODULE_CLIENT -zM -o $@ $<
.c.odz:;	$(CC)	$(CCFLAGS)	-DDesk__MODULE_CLIENT -zM -fn -g -o $@ $<
.s.i:;		@echo $@
.s.o:;		$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 0" $< $@
.s.z:;		$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 0" $< $@
.s.od:;		$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 1" $< $@
.s.odz:;	$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 1" $< $@




# ------------------------------------------------------------------------------
# Local build rules
#

all: $(TARGET)

debug: $(TARGET)

preprocess: $(TARGET)

$(TARGET): $(OBJS) $(LIBS) $(EXT).local_dirs
	$(MKDIR) l
	$(LB) $(LBFLAGS) -o $@ $(OBJS)




# ------------------------------------------------------------------------------
# Common build rules

$(EXT).local_dirs:
	@$(MKDIR) $(EXT)
	@$(TOUCH) $@

$(EXP_DIR).dirs:
	@$(MKDIR) $(EXP_DIR).h
	@$(MKDIR) $(EXP_DIR).o
	@$(TOUCH) $@



# ------------------------------------------------------------------------------
# RISC OS ROM build rules
#

export: export_$(PHASE)

export_hdrs: $(EXP_DIR).dirs
	@$(CP)	Export.h	$(EXP_DIR).*		$(CPFLAGS)
	@$(CP)	VersionNum	$(EXP_DIR).LibVersion	$(CPFLAGS)

export_libs: $(TARGET) $(EXP_DIR).dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).o.*	$(CPFLAGS)

clean:
	$(WIPE) $(EXT)			$(WFLAGS)




# ------------------------------------------------------------------------------
# Dynamic dependencies:
