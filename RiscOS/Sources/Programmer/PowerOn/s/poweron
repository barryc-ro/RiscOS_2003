

;--------------------------get global definitions--------------------------------
		    	GET		s.registers
			GET		s.header

;--------------------------------------------------------------------------------
WSPACE_SIZE		*		1024
CTRL_DOWN		*		1
ALT_DOWN		*		2
POWER_ON		*		4

;__debug__debug__debug__debug__debug__debug__debug__debug__debug__debug__debug__
			GBLL		RISCPC_DEBUG
RISCPC_DEBUG		SETL		{FALSE}  	; {TRUE}=riscpc, {FALSE}=nc
;__debug__debug__debug__debug__debug__debug__debug__debug__debug__debug__debug__


start
			STMDB		sp!, {r0-r12, lr}

			MOV		r2, #0
			STR		r2, [r12]  ; clear private word

			MOV		r0, #&13 ; KeyV
			ADR		r1, keyv_handler
			MOV		r2, r12		; ptr -> private word
			SWI		&2001f	; XOS_Claim

			LDMIA		sp!, {r0-r12, pc}

finish
			STMDB		sp!, {r0-r12, lr}
			MOV		r0, #&13 ; KeyV
			ADR		r1, keyv_handler
			MOV		r2, r12
			SWI		&20020 ; XOS_Release

			LDMIA		sp!, {r0-r12, pc}

keyv_handler
			STMDB		sp!, {r0-r12, lr}
			LDR		r3, [r12]	; get private word

			CMP		r0, #1		; key released?
			BEQ		key_released
			CMP		r0, #2		; key pressed?
			BNE		exit_keyv_handler
key_pressed
			CMP		r1, #&3b	; left CTRL
			CMPNE		r1, #&61	; right CTRL
			ORREQ		r3, r3, #CTRL_DOWN

			CMP		r1, #&5e	; left ALT
			CMPNE		r1, #&60	; right ALT
			ORREQ		r3, r3, #ALT_DOWN

			B		exit_keyv_handler

key_released
			CMP		r1, #&3b	; left CTRL
			CMPNE		r1, #&61	; right CTRL
			BICEQ		r3, r3, #CTRL_DOWN

			CMP		r1, #&5e	; left ALT
			CMPNE		r1, #&60	; right ALT
			BICEQ		r3, r3, #ALT_DOWN

			CMP		r1, #&34	; home DEL
			CMPNE		r1, #&66	; keypad DEL
			BNE		exit_keyv_handler

			AND		r4, r3, #CTRL_DOWN:OR:ALT_DOWN
			CMP		r4, #CTRL_DOWN:OR:ALT_DOWN
			BNE		exit_keyv_handler ; not a PowerOn

			; do wake up / sleep stuff
			TST		r3, #POWER_ON
			BICNE		r3, r3, #POWER_ON  ; NC is on
			ORREQ		r3, r3, #POWER_ON  ; NC is off

			; for NC, put box into standby
			MOVNE		r1, #0		; passed in r12


			; for NC, bring box out of standby
			MOVEQ		r1, #1		; passed in r12

			ADR		r0, callback_handler
			SWI		&20054		; XOS_AddCallBack


exit_keyv_handler
			STR		r3, [r12]	; stash private word
			LDMIA		sp!, {r0-r12, pc}

callback_handler
			STMDB		sp!, {r0-r12, lr}

			CMP		r12, #0		; 0=off, 1=on

 [ RISCPC_DEBUG
			MOVEQ		r0, #&44	; 'D'
                        MOVNE		r0, #&55	; 'U'
			SWI		&20000		; XOS_WriteC
 |
			MOVEQ		r0, #1		; force standby
			SWIEQ		&6c7c1          ; XStandby_Standby

			MOVNE		r0, #0
			SWINE		&6c7c2		; XStandby_Online
 ]
			LDMIA		sp!, {r0-r12, pc}

			END






			END


