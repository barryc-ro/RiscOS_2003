        SUBT    Definition of the machine

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************
;
; Date       Name          Description
; ----       ----          -----------
; 21-Apr-97  SMC           Now only one header file.

; Define Machine varible and set it by including appropriate header.
;

; Define boolean variables for each machine to avoid possibility of typos in strings.
;
                GBLL    Falcon
                GBLL    Morris
                GBLL    Omega
                GBLL    Peregrine
                GBLL    Boca
Falcon          SETL    Machine="Falcon"
Morris          SETL    Machine="Morris"
Omega           SETL    Machine="Omega"
Peregrine       SETL    Machine="Peregrine"
Boca            SETL    Machine="Boca"

                GBLS    SystemName
        [ Omega :LOR: Boca
SystemName      SETS    "NC OS"
        |
SystemName      SETS    "RISC OS"
        ]

; CPU type (processor model, excluding cache and memory management)
                GBLS    CPU_Type
CPU_Type        SETS    "ARM600"
                GBLS    GetCPU
GetCPU          SETS    ("GET Hdr:CPU." :CC: "$CPU_Type")

; IO type (non generic interrupt masks, some IO locations)
                GBLS    IO_Type
IO_Type         SETS    "IOMD"
                GBLS    GetIO
; GetIO           SETS    ("GET Hdr:IO." :CC: "$IO_Type")
GetIO           SETS    ("GET Hdr:IO.IOMDL")

; Video controller - does the sound too
                GBLS    VIDC_Type
VIDC_Type       SETS    "VIDC20"
                GBLS    GetVIDC
GetVIDC         SETS    "GET Hdr:VIDC." :CC: VIDC_Type

; Memory controller, excluding memory management stuff. This
; one deals with memory speeds and DMA
                GBLS    MEMC_Type
MEMC_Type       SETS    "IOMD"
                GBLS    GetMEMC
GetMEMC         SETS    "GET Hdr:IO." :CC: MEMC_Type

                GBLS    MEMM_Type
MEMM_Type       SETS    "ARM600"
                GBLS    GetMEMM
GetMEMM         SETS    "GET Hdr:MEMM.ARM600"

; floppy controller
                GBLS    FDC_Type
FDC_Type        SETS    "FDC711"
                GBLS    GetFDC
GetFDC          SETS    "GET Hdr:FDC." :CC: FDC_Type

                GBLL    NewClockChip
NewClockChip    SETL    {TRUE}

                GBLS    Keyboard_Type
Keyboard_Type   SETS    "PC"

                GBLL    MorrisSupport
MorrisSupport   SETL    {TRUE}

                GBLL    StorkPowerSave
StorkPowerSave  SETL    {TRUE}
        

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;		System build options added for STB/NCD
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; General flag for STB/NCD-type products
		GBLL	STB
STB		SETL	Falcon :LOR: Omega :LOR: Peregrine :LOR: Boca

; Support for battery manager hardware
		GBLL	BatManSupport
BatManSupport	SETL	{FALSE} :LAND: StorkPowerSave

; Podule type of hardware in podule 0 address space
; number taken from Hdr:PoduleReg, or 0 if podule0 slot is a real slot.
		GBLA	FakePodule0
        [ Falcon
FakePodule0	SETA	&10E
        |
         [ Peregrine
FakePodule0	SETA	&121
         |
FakePodule0	SETA	0
         ]
        ]

; Support for network 'podule' cards
		GBLL	NetPodSupport
NetPodSupport	SETL	{FALSE}

; Support for extension ROMs in 2nd bank
		GBLL	ExtROMSupport
ExtROMSupport	SETL	Falcon :LOR: Peregrine :LOR: ((Omega :LOR: Boca) :LAND: {FALSE})

; Support for OS images in 2nd ROM bank
		GBLL	ROMCardSupport
ROMCardSupport	SETL	Omega :LOR: Boca

; Support for being an OS image in 2nd ROM bank
		GBLL	CanLiveOnROMCard
CanLiveOnROMCard	SETL	ROMCardSupport :LAND: {TRUE}

; 2nd ROM bank is 16bit wide
		GBLL	ExtROMis16bit
ExtROMis16bit	SETL	Falcon :LOR: Peregrine

; E2ROM is supported at i2c addresses >= A8 in addition to normal CMOS RAM
		GBLL	E2ROMSupport
E2ROMSupport	SETL	Falcon :LOR: Omega :LOR: Peregrine :LOR: Boca

; Support for 82C710 and 82C711 combo chips in addition to 665
		GBLL	OldComboSupport
OldComboSupport	SETL	{FALSE}

; Whether combo chip should be configured for active high interrupts
		GBLL	ComboIRQsActiveHigh
ComboIRQsActiveHigh SETL Omega

; Address of NTSC/not PAL flag, if on MPEG podule rather than CLINES, else 0
		GBLA	MPEGPoduleNTSCNotPALAddress
        [ Falcon
MPEGPoduleNTSCNotPALAddress SETA	&88200000
        |
         [ Peregrine
MPEGPoduleNTSCNotPALAddress SETA	&88400000
         |
MPEGPoduleNTSCNotPALAddress SETA	0
         ]
        ]

; Bit mask for above (0 if not applicable)
		GBLA	MPEGPoduleNTSCNotPALMask
        [ Falcon
MPEGPoduleNTSCNotPALMask	SETA	1 :SHL: 7
        |
         [ Peregrine
MPEGPoduleNTSCNotPALMask	SETA	1 :SHL: 5
         |
MPEGPoduleNTSCNotPALMask	SETA	0
         ]
        ]

; VIDC Clock sources
		GBLS	VIDCClockSource
        [ Falcon :LOR: Morris :LOR: Omega :LOR: Peregrine
VIDCClockSource	SETS	"VCO"
        |
         [ Boca
VIDCClockSource	SETS	"HCLK"
         |
VIDCClockSource	SETS	"VCLK"
         ]
        ]

; TV modes are produced by Chrontel device
		GBLL	ChrontelSupport
ChrontelSupport	SETL	Boca

; ROM speed is normal, not divide by 2
                GBLL    ROMSpeedNormal
ROMSpeedNormal  SETL    Falcon :LOR: Morris :LOR: Boca

			GBLL	FECPUSpeedNormal
FECPUSpeedNormal	SETL	Boca

; Modems as found in STB Roadsters, NC (Model 1) and NC (Boca)
	[ Falcon :LOR: Peregrine :LOR: Omega :LOR: Boca
		GBLA	Modem_DefaultPodule
		GBLA	Modem_RegisterSetOffset		; offset within EASI
		GBLA	Modem_InterruptStatusOffset	; offset within EASI
 	 [ Falcon :LOR: Peregrine
Modem_DefaultPodule	SETA	1	; default podule is 1 on an STB
	 |
Modem_DefaultPodule	SETA	0	; have real podules on the rest
	 ]
	 [ Falcon :LOR: Peregrine :LOR: Omega
Modem_RegisterSetOffset		SETA	&803000		; CME modem card
Modem_InterruptStatusOffset	SETA	&802000 	; CME modem card
	 |
Modem_RegisterSetOffset		SETA	&000be0		; NC (Boca) modem
Modem_InterruptStatusOffset	SETA	&000bfc		; NC (Boca) modem
	 ]
	]

; Offset from start of ROM to word containing ROM size.
                GBLA    ROMSizeOffset
ROMSizeOffset   SETA    &60


; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;		Allocation of bits in 8bit I/O port at IOMD_CLINES
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; Onboard podule 0 MPEG bit, 0 if bit not present
		GBLA	IOMD_C_MPEGfitted
        [ Falcon :LOR: Morris :LOR: Peregrine
IOMD_C_MPEGfitted	SETA	(1<<0)
        |
IOMD_C_MPEGfitted	SETA	0
        ]

; MonitorTypeLatch, or 0 if latch not present
		GBLA	IOMD_C_MonitorType
        [ Omega :LOR: Boca
IOMD_C_MonitorType	SETA	(1<<0)
        |
IOMD_C_MonitorType	SETA	0
        ]

; Front panel Red LED Write bit, or 0 if bit not present
		GBLA	IOMD_C_FrontPanelRedLED
        [ Falcon :LOR: Morris :LOR: Peregrine
IOMD_C_FrontPanelRedLED	SETA	(1<<1)
        |
IOMD_C_FrontPanelRedLED	SETA	0
        ]

; Video power down for Chrontel, or 0 if bit not present
		GBLA	IOMD_C_VideoPowerDown
        [ Boca
IOMD_C_VideoPowerDown	SETA	(1<<1)
        |
IOMD_C_VideoPowerDown	SETA	0
        ]

; ROM Card Vpp control, or 0 if bit not present
		GBLA	IOMD_C_ROMCardVpp
        [ Omega
IOMD_C_ROMCardVpp	SETA	(1<<1)
        |
IOMD_C_ROMCardVpp	SETA	0
        ]

; Front panel Green LED Write bit, or 0 if bit not present
		GBLA	IOMD_C_FrontPanelGrnLED
        [ Falcon :LOR: Morris :LOR: Peregrine
IOMD_C_FrontPanelGrnLED	SETA	(1<<2)
        |
IOMD_C_FrontPanelGrnLED	SETA	0
        ]

; TVMode Write bit, or 0 if bit not present
		GBLA	IOMD_C_TVMode
        [ Omega
IOMD_C_TVMode		SETA	(1<<2)
        |
IOMD_C_TVMode		SETA	0
        ]

; Right LED bit, or 0 if bit not present
		GBLA	IOMD_C_FrontPanelRightLED
        [ Boca
IOMD_C_FrontPanelRightLED	SETA	(1<<3)
        |
IOMD_C_FrontPanelRightLED	SETA	0
        ]

; General IO bit
		GBLA	IOMD_C_GenIO
        [ Omega
IOMD_C_GenIO		SETA	(1<<3)
        |
IOMD_C_GenIO		SETA	0
        ]

; CD fitted bit. 0=fitted, or 0 if bit not present
		GBLA	IOMD_C_CDfitted
        [ Falcon :LOR: Morris :LOR: Peregrine
IOMD_C_CDfitted		SETA	(1<<4)
        |
IOMD_C_CDfitted		SETA	0
        ]

; PAL/NTSC bit, or 0 if bit not present
		GBLA	IOMD_C_PALNTSCType
        [ Omega
IOMD_C_PALNTSCType	SETA	(1<<4)
        |
IOMD_C_PALNTSCType	SETA	0
        ]

; Joystick type bits in IOMD, or 0 if bits not present
		GBLA	IOMD_C_JoystickDetectBits
        [ Falcon :LOR: Morris :LOR: Peregrine
IOMD_C_JoystickD4etectBits	SETA	(2_11<<5)
        |
IOMD_C_JoystickDetectBits	SETA	0
        ]

; Interlace phase bit in IOMD, or 0 if bit not present
		GBLA	IOMD_C_PhaseDetectBit
        [ Omega
IOMD_C_PhaseDetectBit	SETA	(1<<5)
        |
IOMD_C_PhaseDetectBit	SETA	0
        ]

; Front panel button (may not actually be on front panel), 0=pressed
		GBLA	IOMD_C_FrontPanelButton
        [ Omega :LOR: Boca
IOMD_C_FrontPanelButton	SETA	(1<<6)
        |
IOMD_C_FrontPanelButton	SETA	0
        ]

; Front panel Write bit. 1=red, 0=green
		GBLA	IOMD_C_FrontPanelLED
        [ Omega
IOMD_C_FrontPanelLED	SETA	(1<<7)
        |
IOMD_C_FrontPanelLED	SETA	0
        ]

; Left LED bit, or 0 if not present
		GBLA	IOMD_C_FrontPanelLeftLED
        [ Boca
IOMD_C_FrontPanelLeftLED	SETA	(1<<7)
        |
IOMD_C_FrontPanelLeftLED	SETA	0
        ]

; Watchdog Write bit.
		GBLA	IOMD_C_Watchdog
        [ Falcon :LOR: Morris :LOR: Peregrine
IOMD_C_Watchdog		SETA	(1<<7)
        |
IOMD_C_Watchdog		SETA	0
        ]


; Mask of all the readable bits
		GBLA	IOMD_C_ReadMask
IOMD_C_ReadMask	SETA	(IOMD_C_MPEGfitted :OR: IOMD_C_MonitorType :OR: IOMD_C_GenIO :OR: IOMD_C_CDfitted :OR: IOMD_C_PALNTSCType :OR: IOMD_C_PhaseDetectBit :OR: IOMD_C_JoystickDetectBits :OR: IOMD_C_FrontPanelButton)


        OPT     OldOpt
        END
