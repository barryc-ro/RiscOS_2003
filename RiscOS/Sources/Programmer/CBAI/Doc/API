                                              CBAI_RegisterPollWord
                                                       (SWI &52000)

Register a callback with the CBAI module

On entry
  R0 = pointer to pollword (contains the address of a callback routine or 0
    while the callback routine should not be called)
  R1 = priority (signed integer, -&800000 to +&7FFFFF)
  R2 = workspace pointer to pass to callback routine

On exit
  All registers are preserved

Interrupts
  Interrupts are disabled
  Fast interrupts are enabled

Processor Mode
  Processor is in SVC mode

Re-entrancy
  SWI is re-entrant

Use
  The CBAI module maintains a list of pollwords; this SWI is used to add a
  new pollword to that list. When RISC OS threads out of its IRQ handler,
  the CBAI module calls each of the callback routines in the currently-
  registered pollwords in decreasing order of priority. Where two pollwords
  have the same priority, the relative order of calling is undefined. Just
  before the callback routine is called, the contents of the pollword are
  zeroed by the CBAI module, and so the callback will not be called again
  until the pollword is filled in again.

  If an interrupt routine enables interrupts and is itself interrupted, then
  the pollword list will not be processed until control returns from the
  outermost interrupt routine.

  If an interrupt occurs while CBAI is still processing its list of
  pollwords, then the module will search for any pollwords of higher
  priority than the currently-executing callback, and if the pollword has a
  nonzero value (ie if it has been filled in with the address of a callback)
  then such callbacks will be processed before control is passed back to the
  interrupted callback. Thus callbacks of increasing priority can interrupt
  each other to an arbitrary depth.

  Each pollword may only be registered once; if you attempt to register a
  pollword a second time, even if with a different priority and/or workspace
  pointer, the earlier reference to the pollword will be removed.

  The callback routines are called as follows:

    On entry
      R0 = contents of the word after the pollword - useful for passing
        arguments to C functions (only applies to Pace versions of CBAI)
      R12 = value passed in R2 to CBAI_RegisterPollword
      Return address is on the stack (ie exit using LDR PC,[R13],#4)
      IRQ mode, interrupts enabled
    On exit
      R0-R3, R12 and the PSR flags may be corrupted
      Other registers must be preserved

  A list of the known used values of priority is as follows:

    SharedSound call back handlers:    &100000
    ARMovie Player sound copying code: &000004
    ARMovie Player decompression code: &000002
    ARMovie Player paint code:         &000000

Related SWIs
  CBAI_DeregisterPollword



                                            CBAI_DeregisterPollWord
                                                       (SWI &52001)

Remove a callback previously registered with the CBAI module

On entry
  R0 = pollword pointer to match

On exit
  All registers are preserved

Interrupts
  Interrupts are disabled
  Fast interrupts are enabled

Processor Mode
  Processor is in SVC mode

Re-entrancy
  SWI is re-entrant

Use
  This SWI can be used to remove a pollword from the list held by the CBAI
  module.

Related SWIs
  CBAI_RegisterPollword



                                                    CBAI_GetCounter
                                                       (SWI &52002)

Return number of times the IRQ vector has been called

On entry
  No conditions

On exit
  R0 = number of calls to the IRQ vector since module was initialised

Interrupts
  Interrupt status is not altered
  Fast interrupts are enabled

Processor Mode
  Processor is in SVC mode

Re-entrancy
  SWI is re-entrant

Use
  This SWI can be used to count the number of interrupts that occur between
  two points, but it is present in debug builds only.

Related SWIs
  None
