 GBLS ShortDate
ShortDate SETS "12 May 2000"

;Remember to change the Date!

 GET Hdr:ListOpts
 GET Hdr:Macros
 GET Hdr:System
 GET Hdr:ModHand
 GET Hdr:Services
 GET Hdr:Proc
 GET Hdr:FSNumbers
 GET Hdr:NewErrors
 GET Hdr:MsgTrans

 ^ &7F ;single byte tokens
TOTHER # 1
TAND # 1 ;expression binary operators
TDIV # 1
TEOR # 1
TMOD # 1
TOR # 1

TERROR # 1  ;miscellaneous words
TLINE # 1
TOFF # 1
TSTEP # 1
TSPC # 1
TTAB # 1
TELSE # 1
TTHEN # 1

TCONST # 1   ;(8D)

TOPENU # 1

TPTR # 1 ;polymorphics as functions
TPAGE # 1
TTIME # 1
TLOMEM # 1
THIMEM # 1
TABS # 1 ;expression class of unary operators
TACS # 1
TADC # 1
TASC # 1
TASN # 1
TATN # 1
TBGET # 1
TCOS # 1
TCOUNT # 1
TDEG # 1
TERL # 1
TERR # 1
TEVAL # 1
TEXP # 1
TEXT # 1
TFALSE # 1
TFN # 1
TGET # 1
TINKEY # 1
TINSTR # 1
TINT # 1
TLEN # 1
TLN # 1
TLOG # 1
TNOT # 1
TOPENI # 1
TOPENO # 1
TPI # 1
TPOINT # 1
TPOS # 1
TRAD # 1
TRND # 1
TSGN # 1
TSIN # 1
TSQR # 1
TTAN # 1
TTO # 1
TTRUE # 1
TUSR # 1
TVAL # 1
TVPOS # 1
TCHRD # 1  ;string expression class of unary operators
TGETD # 1
TINKED # 1
TLEFTD # 1
TMIDD # 1
TRIGHTD # 1
TSTRD # 1
TSTRND # 1
TEOF # 1

TESCFN # 1 ;Escape for Functions
TESCCOM # 1 ;Escape for Commands
TESCSTMT # 1 ;Escape for Statements

TWHEN # 1 ;statements
TOF # 1
TENDCA # 1
TELSE2 # 1
TENDIF # 1
TENDWH # 1

TPTR2 # 1 ;polymorphic again
TPAGE2 # 1
TTIME2 # 1
TLOMM2 # 1
THIMM2 # 1

TBEEP # 1
TBPUT # 1
TCALL # 1
TCHAIN # 1
TCLEAR # 1
TCLOSE # 1
TCLG # 1
TCLS # 1
TDATA # 1
TDEF # 1
TDIM # 1
TDRAW # 1
TEND # 1
TENDPR # 1
TENVEL # 1
TFOR # 1
TGOSUB # 1
TGOTO # 1
TGRAPH # 1
TIF # 1
TINPUT # 1
TLET # 1
TLOCAL # 1
TMODE # 1
TMOVE # 1
TNEXT # 1
TON # 1
TVDU # 1
TPLOT # 1
TPRINT # 1
TPROC # 1
TREAD # 1
TREM # 1
TREPEAT # 1
TREPORT # 1
TRESTORE # 1
TRETURN # 1
TRUN # 1
TSTOP # 1
TTEXT # 1
TTRACE # 1
TUNTIL # 1
TWIDTH # 1
TOSCL # 1 ;this must be <=&FF (!)

 ^ &8E ;Two byte function tokens
TSUM # 1
TBEAT # 1
TTWOFUNCLIMIT # 0

 ^ &8E ;Two byte Statement tokens
TCASE # 1
TCIRCLE # 1
TFILL # 1
TORGIN # 1
TPSET # 1
TRECT # 1
TSWAP # 1
TWHILE # 1
TWAIT # 1
TMOUSE # 1
TQUIT # 1
TSYS # 1
TINSTALLBAD # 1 ;a silly blunder
TLIBRARY # 1
TTINT # 1
TELLIPSE # 1
TBEATS # 1
TTEMPO # 1
TVOICES # 1
TVOICE # 1
TSTEREO # 1
TOVERLAY # 1
TTWOSTMTLIMIT # 0

 ^ &8E ;Two byte Command tokens
TAPPEND # 1
TAUTO # 1
TCRUNCH # 1
TDELET # 1
TEDIT # 1
THELP # 1
TLIST # 1
TLOAD # 1
TLVAR # 1
TNEW # 1
TOLD # 1
TRENUM # 1
TSAVE # 1
TTEXTLOAD # 1
TTEXTSAVE # 1
TTWIN # 1
TTWINO # 1
TINSTALL # 1
TTWOCOMMLIMIT # 0

 LEADR Module_LoadAddr

Module_BaseAddr * .

BASICTrans_ModuleStart DCD 0 ;no MAIN code
 DCD BASICTrans_Init-Module_BaseAddr
 DCD BASICTrans_Die-Module_BaseAddr
 DCD 0 ;BASICTrans_Services
 DCD BASICTrans_Title-Module_BaseAddr
 DCD BASICTrans_HelpStr-Module_BaseAddr
 DCD 0 ;BASICTrans_Commands
 DCD &42C80 ;BASICTrans
 DCD BASICTrans_SWI-Module_BaseAddr
 DCD BASICTrans_SWINameTable-Module_BaseAddr
 DCD 0 ;
 DCD 0 ; No messages file
 [ :LNOT:No32bitCode
 DCD BASICTrans_Flags-Module_BaseAddr
 ]

BASICTrans_Title
 DCB "BASICTrans",0
BASICTrans_HelpStr
 DCB "BASICTrans",9,"2.02"
 DCB " ($ShortDate) International",0
BASICTrans_SWINameTable
 DCB "BASICTrans",0
 DCB "HELP",0
 DCB "Error",0
 DCB "Message",0
 DCB 0

message_filename
        DCB     "Resources:$.Resources.BASIC.Messages", 0
        ALIGN

BASICTrans_Flags
        DCD     1       ; 32-bit compatible

BASICTrans_Init
        STMFD   sp!, {r1, r2, r3, lr}
        MOV     r0, #ModHandReason_Claim
        MOV     r3, #16
        SWI     XOS_Module
        LDMVSFD sp!, {r1, r2, r3, pc}
        STR     r2, [r12]
        MOV     r0, r2
        ADR     r1, message_filename
        MOV     r2, #0
        SWI     XMessageTrans_OpenFile
        LDMFD   sp!, {r1, r2, r3, pc}

BASICTrans_Die
        STMFD sp!, {r0, lr}
        LDR r0, [r12]
        CMP r0, #0
        SWINE XMessageTrans_CloseFile
        CLRV
        LDMFD sp!, {r0, pc}

BASICTrans_SWI
        STR     R14,[SP,#-4]!
        BL      BASICTrans_SWI_26
        LDR     R14,[SP],#4
      [ No32bitCode
        MOV     R10,#0
      ]
        mrs    ,R10,CPSR
        TST     R10,#&1C
        MOVNE   PC,R14
        MOVVCS  PC,R14
        ORRVSS  PC,R14,#V_bit

BASICTrans_SWI_26
 CMP R11,#3
 ADDCC PC,PC,R11, LSL #2
 B UnknownSWI
 B BASICTrans_HELP
 B BASICTrans_Error
 B BASICTrans_Message
UnknownSWI
 STMDB sp!, {r1, r2, lr}
 ADR R0,UnkSWI
 LDR r1, [r12]
 SWI XMessageTrans_ErrorLookup
 LDMIA sp!, {r1, r2, pc}
UnkSWI
 DCD &1e6
 DCB "BadOp",0
 ALIGN

BASICTrans_HELP
 CLRPSR I_bit,R11
 STMFD SP!,{R14}
 MOV R1,#0
 LDRB R10,[R0],#1
 CMP R10,#"."
 BEQ HELPALL1
 CMP R10,#"["
 BEQ HELPASS
 CMP R10,#"@"
 BEQ HELPAT
 BCC HELP1
 CMP R10,#"W"+1
 BCC HELPALLLIMITED
 CMP R10,#&7F
 BCS HELPTOKEN
HELP1 BL message_writes
 DCB "H0", 0
 MOV R1,#1
 B HELPEXIT
HELPALLLIMITED BL message_writes
 DCB "H1", 0
 ALIGN
HELPALL LDRB R0,[R2]
 CMP R0,R10
 BEQ HELPALL1
 BCS HELPALLEND
HELPALL01 LDRB R0,[R2],#1
 CMP R0,#&7F
 BCC HELPALL01
 ADD R2,R2,#1
 B HELPALL
HELPALL1 LDRB R0,[R2],#1
 CMP R0,#" "
 BEQ HELPALLEND
 CMP R10,#"."
 CMPNE R0,R10
 BNE HELPALLEND
 CMP R1,#70
 MOVCS R1,#0
 SWICS OS_NewLine
 BCS HELPALL12
 CMP R1,#0
 BEQ HELPALL12
HELPALL3 SWI OS_WriteI+" "
 ADD R1,R1,#1
 CMP R1,#10
 CMPNE R1,#20
 CMPNE R1,#30
 CMPNE R1,#40
 CMPNE R1,#50
 CMPNE R1,#60
 CMPNE R1,#70
 BNE HELPALL3
HELPALL12 SWI OS_WriteC
 ADD R1,R1,#1
 LDRB R0,[R2],#1
 CMP R0,#&7F
 BCC HELPALL12
 ADD R2,R2,#1
 B HELPALL1
HELPALLEND CMP R1,#0
 SWINE OS_NewLine
 B HELPEXITNO
HELPTOKENTABLE & HELPTOKENINFO-HELPTOKEN
 & HELPTWOFUNCTION-HELPTOKEN
 & HELPTWOSTATEMENT-HELPTOKEN
 & HELPTWOCOMMAND-HELPTOKEN
HELPTOKEN ADR R3,HELPTOKEN
 LDR R1,HELPTOKENTABLE
 CMP R10,#&7F
 ADDEQ R1,R1,R3
 BEQ HELPTOKENSAY
 TEQ R10,#TESCFN
 LDREQ R1,HELPTOKENTABLE+4
 LDREQB R10,[R0]
 TEQ R10,#TESCSTMT
 LDREQ R1,HELPTOKENTABLE+8
 LDREQB R10,[R0]
 TEQ R10,#TESCCOM
 LDREQ R1,HELPTOKENTABLE+12
 LDREQB R10,[R0]
 ADD R1,R1,R3
 CMP R10,#&7F
 BCC HELPTOKENNOSAY
HELPTOKENFIND LDRB R0,[R1],#1
 CMP R0,#127
 BEQ HELPTOKENNOSAY
 CMP R0,R10
 BEQ HELPTOKENSAY
HELPTOKENFIND1 LDRB r0, [r1], #1
 CMP r0, #0
 BNE HELPTOKENFIND1
 BEQ HELPTOKENFIND
HELPTOKENNOSAY
 ADRL r1, HELPTOKENNO
HELPTOKENSAY BL message_write1
 SWI OS_NewLine
 B   HELPEXITNO


HELPAT BL message_writes
 DCB "H@", 0
 B   HELPEXITNO
HELPASS BL message_writes
 DCB "HASM", 0
 ALIGN
HELPEXITNO MOV R1,#0 ;no help from BASIC
HELPEXIT
 CLRV
 LDMIA SP!,{pc}
HELPTOKENINFO = "HOTHERWISE",0
 = TAND,"HAND",0
 = TDIV,"HDIV",0
 = TEOR,"HEOR",0
 = TMOD,"HMOD",0
 = TOR,"HOR",0
 = TERROR,"HERROR",0
 = TLINE,"HLINE",0
 = TOFF,"HOFF",0
 = TSTEP,"HSTEP", 0
 = TSPC,"HSPC", 0
 = TTAB,"HTAB",0
 = TELSE,"HELSE",0
 = TTHEN,"HTHEN",0
 = TCONST,"HCONST",0
 = TOPENI,"HOPENUP",0
 = TABS,"HABS",0
 = TACS,"HACS",0
 = TADC,"HADVAL",0
 = TASC,"HASC",0
 = TASN,"HASN",0
 = TATN,"HATN",0
 = TBGET,"HBGET",0
 = TCOS,"HCOS",0
 = TCOUNT,"HCOUNT",0
 = TDEG,"HDEG",0
 = TERL,"HERL",0
 = TERR,"HERR",0
 = TEVAL,"HEVAL",0
 = TEXP,"HEXP",0
 = TEXT,"HEXT",0
 = TFALSE,"HFALSE",0
 = TFN,"HFN",0
 = TGET,"HGET",0
 = TINKEY,"HINKEY",0
 = TINSTR,"HINSTR",0
 = TINT,"HINT",0
 = TLEN,"HLEN",0
 = TLN,"HLN",0
 = TLOG,"HLOG",0
 = TNOT,"HNOT",0
 = TOPENU,"HOPENIN",0
 = TOPENO,"HOPENOUT",0
 = TPI,"HPI",0
 = TPOINT,"HPOINT",0
 = TPOS,"HPOS",0
 = TRAD,"HRAD",0
 = TRND,"HRND",0
 = TSGN,"HSGN",0
 = TSIN,"HSIN",0
 = TSQR,"HSQR",0
 = TTAN,"HTAN",0
 = TTO,"HTO",0
 = TTRUE,"HTRUE",0
 = TUSR,"HUSR",0
 = TVAL,"HVAL",0
 = TVPOS,"HVPOS",0
 = TCHRD,"HCHR$",0
 = TGETD,"HGET$",0
 = TINKED,"HINKEY$",0
 = TLEFTD,"HLEFT$",0
 = TMIDD,"HMID$",0
 = TRIGHTD,"HRIGHT$",0
 = TSTRD,"HSTR$",0
 = TSTRND,"HSTRING$",0
 = TEOF,"HEOF",0
 = TWHEN,"HWHEN",0
 = TOF,"HOF",0
 = TENDCA,"HENDCASE",0
 = TENDIF,"HENDIF",0
 = TENDWH,"HENDWHILE",0
 = TPTR2,"HPTR",0
 = TPAGE2,"HPAGE",0
 = TTIME2,"HTIME",0
 = TLOMM2,"HLOMEM",0
 = THIMM2,"HHIMEM",0
 = TBEEP,"HSOUND",0
 = TBPUT,"HBPUT",0
 = TCALL,"HCALL",0
 = TCHAIN,"HCHAIN",0
 = TCLEAR,"HCLEAR",0
 = TCLOSE,"HCLOSE",0
 = TCLG,"HCLG",0
 = TCLS,"HCLS",0
 = TDATA,"HDATA",0
 = TDEF,"HDEF",0
 = TDIM,"HDIM",0
 = TDRAW,"HDRAW",0
 = TEND,"HEND",0
 = TENDPR,"HENDPROC",0
 = TENVEL,"HENVELOPE",0
 = TFOR,"HFOR",0
 = TGOSUB,"HGOSUB",0
 = TGOTO,"HGOTO",0
 = TGRAPH, "HGCOL",0
 = TIF,"HIF",0
 = TINPUT,"HINPUT",0
 = TLET,"HLET",0
 = TLOCAL,"HLOCAL",0
 = TMODE,"HMODE",0
 = TMOVE,"HMOVE",0
 = TNEXT,"HNEXT",0
 = TON,"HON",0
 = TVDU,"HVDU",0
 = TPLOT,"HPLOT",0
 = TPRINT,"HPRINT",0
 = TPROC,"HPROC",0
 = TREAD,"HREAD",0
 = TREM,"HREM",0
 = TREPEAT,"HREPEAT",0
 = TREPORT,"HREPORT",0
 = TRESTORE,"HRESTORE",0
 = TRETURN,"HRETURN",0
 = TRUN,"HRUN",0
 = TSTOP,"HSTOP",0
 = TTEXT,"HCOLOUR",0
 = TTRACE,"HTRACE",0
 = TUNTIL,"HUNTIL",0
 = TWIDTH,"HWIDTH",0
 = TOSCL,"HOSCLI",0
 = TOSCL,127
HELPTWOSTATEMENT = TCASE,"HCASE",0
 = TCIRCLE,"HCIRCLE",0
 = TFILL,"HFILL",0
 = TORGIN,"HORIGIN",0
 = TPSET,"HPOINT",0
 = TRECT,"HRECTANGLE",0
 = TSWAP,"HSWAP",0
 = TWHILE,"HWHILE",0
 = TWAIT,"HWAIT",0
 = TMOUSE,"HMOUSE",0
 = TQUIT,"HQUIT",0
 = TSYS,"HSYS",0
;no help for INSTALLBAD
 = TLIBRARY,"HLIBRARY",0
 = TTINT,"HTINT",0
 = TELLIPSE,"HELLIPSE",0
 = TBEATS,"HBEATS",0
 = TTEMPO,"HTEMPO",0
 = TVOICES,"HVOICES",0
 = TVOICE,"HVOICE",0
 = TSTEREO,"HSTEREO",0
 = TOVERLAY,"HOVERLAY",0
 = TSYS,127
HELPTWOCOMMAND
 = TAPPEND,"HAPPEND",0
 = TAUTO,"HAUTO",0
 = TCRUNCH,"HCRUNCH",0
 = TDELET,"HDELETE",0
 = TEDIT,"HEDIT",0
 = THELP,"HHELP",0
 = TLIST,"HLIST",0
 = TLOAD,"HLOAD",0
 = TLVAR,"HLVAR",0
 = TNEW,"HNEW",0
 = TOLD,"HOLD",0
 = TRENUM,"HRENUMBER",0
 = TSAVE,"HSAVE",0
 = TTEXTLOAD,"HTEXTLOAD",0
 = TTEXTSAVE,"HTEXTSAVE",0
 = TTWIN,"HTWIN",0
 = TTWINO,"HTWINO",0
 = TINSTALL,"HINSTALL",0
 = TSAVE,127
HELPTWOFUNCTION
 = TSUM,"HSUM",0
 = TBEAT,"HBEAT",0
 = TSAVE,127
 ALIGN

BASICTrans_Error
 STMDB sp!, {lr}
 CLRPSR I_bit,R11
 MOV r2, r1
 ADR r1,ERRTABLE
 TST R0,#1
 BIC R0,R0,#1
 LDR R1,[R1,R0,LSL #1]
 MOVEQ R1,R1,LSL #16
 MOV R1,R1,LSR #16
 ADR R3,ERRBASE
 ADD R1,R1,R3
 LDR r0, [r12]
 MOV r3, #252
 SWI MessageTrans_Lookup
 CLRV
 LDMIA sp!, {pc}

ERRTABLE
 DCW EREXCEPT-ERRBASE
 DCW ERSILL-ERRBASE
 DCW ERNUMM-ERRBASE
 DCW ERNUMO-ERRBASE
 DCW ALLOCR-ERRBASE
 DCW ERLINELONG-ERRBASE
 DCW ERSTOP-ERRBASE
 DCW ERLISTO-ERRBASE
 DCW ERTWINO-ERRBASE
 DCW ERRQ1-ERRBASE
 DCW ONERRX-ERRBASE
 DCW BADIC-ERRBASE
 DCW USESLINENUMBERS-ERRBASE
 DCW HELPTOKENNO-ERRBASE
 DCW BADIPHEX-ERRBASE
 DCW INSTALLBAD-ERRBASE
 DCW ERASS1-ERRBASE
 DCW ERASS1EQU-ERRBASE
 DCW ERASS2-ERRBASE
 DCW ERASS2A-ERRBASE
 DCW ERASS2LIM-ERRBASE
 DCW ERASS2S-ERRBASE
 DCW ERASS3-ERRBASE
 DCW ERASSMUL-ERRBASE
 DCW MISSEQ-ERRBASE
 DCW MISSEQFOR-ERRBASE
 DCW MISTAK-ERRBASE
 DCW ERCOMM-ERRBASE
 DCW ERTYPEINT-ERRBASE
 DCW ERTYPENUM-ERRBASE
 DCW ERTYPENUMARRAY-ERRBASE
 DCW ERTYPESTR-ERRBASE
 DCW ERTYPESTRING-ERRBASE
 DCW ERTYPESTRINGARRAY-ERRBASE
 DCW ERTYPEARRAY-ERRBASE
 DCW ERTYPEARRAYB-ERRBASE
 DCW ERTYPEARRAYC-ERRBASE
 DCW ERSIZE-ERRBASE
 DCW ERTYPESWAP-ERRBASE
 DCW ERRFN-ERRBASE
 DCW ERDOLL-ERRBASE
 DCW ERMISQ-ERRBASE
 DCW ERDIMFN-ERRBASE
 DCW ERMATMULSPACE-ERRBASE
 DCW BADDIMSUB-ERRBASE
 DCW BADDIMLIST-ERRBASE
 DCW BADDIM-ERRBASE
 DCW BADDIMSIGN-ERRBASE
 DCW ERNDIM-ERRBASE
 DCW BADDIMSIZE-ERRBASE
 DCW DIMRAM-ERRBASE
 DCW ERREND-ERRBASE
 DCW ERRENDARRAYREF-ERRBASE
 DCW CANTLOAD-ERRBASE
 DCW ERRNLC-ERRBASE
 DCW ENDPRE-ERRBASE
 DCW ERARRW-ERRBASE
 DCW ERARRY-ERRBASE
 DCW ERARRYDIM-ERRBASE
 DCW ERARRZ-ERRBASE
 DCW ERRSUB-ERRBASE
 DCW ERRSB2-ERRBASE
 DCW ERSYNT-ERRBASE
 DCW ESCAPE-ERRBASE
 DCW ZDIVOR-ERRBASE
 DCW ERLONG-ERRBASE
 DCW FOVR-ERRBASE
 DCW FOVR1-ERRBASE
 DCW FSQRTN-ERRBASE
 DCW ERFLOG-ERRBASE
 DCW FRNGQQ-ERRBASE
 DCW ERFEXP-ERRBASE
 DCW FACERR-ERRBASE
 DCW ERVARAR-ERRBASE
 DCW ERBRA-ERRBASE
 DCW ERBRA1-ERRBASE
 DCW ERASSB1-ERRBASE
 DCW ERASSB2-ERRBASE
 DCW ERASSB3-ERRBASE
 DCW ERHEX-ERRBASE
 DCW ERHEX2-ERRBASE
 DCW ERBIN-ERRBASE
 DCW FNMISS-ERRBASE
 DCW FNCALL-ERRBASE
 DCW ARGMAT-ERRBASE
 DCW ARGMATRET-ERRBASE
 DCW ARGMATARR-ERRBASE
 DCW ERNEXT-ERRBASE
 DCW NEXTER-ERRBASE
 DCW FORCV-ERRBASE
 DCW FORSTEP-ERRBASE
 DCW FORTO-ERRBASE
 DCW ERDEEPPROC-ERRBASE
 DCW ERGOSB-ERRBASE
 DCW ONER-ERRBASE
 DCW ONRGER-ERRBASE
 DCW NOLINE-ERRBASE
 DCW DATAOT-ERRBASE
 DCW ERRDATASTACK-ERRBASE
 DCW ERREPT-ERRBASE
 DCW ERDEEPNEST-ERRBASE
 DCW CHANNE-ERRBASE
 DCW ERWHIL-ERRBASE
 DCW NOENDC-ERRBASE
 DCW ERCASE1-ERRBASE
 DCW ERCASE-ERRBASE
 DCW NOENDI-ERRBASE
 DCW ERMOUS-ERRBASE
 DCW ERSYSINPUTS-ERRBASE
 DCW ERSYSOUTPUTS-ERRBASE
 DCW ERINSTALL-ERRBASE
 DCW BADPRO1-ERRBASE
 DCW NOLIBROOM-ERRBASE
 DCW ERASS2C-ERRBASE
 DCW ERASSB4-ERRBASE
 DCW ERASSFP1-ERRBASE

ERRBASE
EREXCEPT = "EREXCEPT",0
ERSILL = "ERSILL",0
ERNUMM = "ERNUMM",0
ERNUMO = "ERNUMO",0
ALLOCR = "ALLOCR",0
ERLINELONG = "ERLINELONG",0
ERSTOP = "ERSTOP",0
ERLISTO = "ERLISTO",0
ERTWINO = "ERTWINO",0
ERRQ1 = "ERQ1",0
ONERRX = "ONERRX",0
BADIC = "BADIC",0
USESLINENUMBERS = "USESLINENUMBERS",0
HELPTOKENNO = "HELPTOKENNO",0
BADIPHEX = "BADIPHEX",0
INSTALLBAD = "INSTALLBAD",0
ERASS1 = "ERASS1",0
ERASS1EQU = "ERASS1EQU",0
ERASS2 = "ERASS2",0
ERASS2A = "ERASS2A",0
ERASS2LIM = "ERASS2LIM",0
ERASS2S = "ERASS2S",0
ERASS3 = "ERASS3",0
ERASSMUL = "ERASSMUL",0
MISSEQ = "MISSEQ",0
MISSEQFOR = "MISSEQFOR",0
MISTAK = "MISTAK",0
ERCOMM = "ERCOMM",0
ERTYPEINT = "ERTYPEINT",0
ERTYPENUM = "ERTYPENUM",0
ERTYPENUMARRAY = "ERTYPENUMARRAY",0
ERTYPESTR = "ERTYPESTR",0
ERTYPESTRING = "ERTYPESTRING",0
ERTYPESTRINGARRAY = "ERTYPESTRINGARRAY",0
ERTYPEARRAY = "ERTYPEARRAY",0
ERTYPEARRAYB = "ERTYPEARRAYB",0
ERTYPEARRAYC = "ERTYPEARRAYC",0
ERSIZE = "ERSIZE",0
ERTYPESWAP = "ERTYPESWAP",0
ERRFN = "ERRFN",0
ERDOLL = "ERDOLL",0
ERMISQ = "ERMISQ",0
ERDIMFN = "ERDIMFN",0
ERMATMULSPACE = "ERMATMULSPACE",0
BADDIMSUB = "BADDIMSUB",0
BADDIMLIST = "BADDIMLIST",0
BADDIM = "BADDIM",0
BADDIMSIGN = "BADDIMSIGN",0
ERNDIM = "ERNDIM",0
BADDIMSIZE = "BADDIMSIZE",0
DIMRAM = "DIMRAM",0
ERREND = "ERREND",0
ERRENDARRAYREF = "ERRENDARRAYREF",0
CANTLOAD = "CANTLOAD",0
ERRNLC = "ERRNLC",0
ENDPRE = "ENDPRE",0
ERARRW = "ERARRW",0
ERARRY = "ERARRY",0
ERARRYDIM = "ERARRYDIM",0
ERARRZ = "ERARRZ",0
ERRSUB = "ERRSUB",0
ERRSB2 = "ERRSB2",0
ERSYNT = "ERSYNT",0
ESCAPE = "ESCAPE",0
ZDIVOR = "ZDIVOR",0
ERLONG = "ERLONG",0
FOVR = "FOVR",0
FOVR1 = "FOVR1",0
FSQRTN = "FSQRTN",0
ERFLOG = "ERFLOG",0
FRNGQQ = "FRNGQQ",0
ERFEXP = "ERFEXP",0
FACERR = "FACERR",0
ERVARAR = "ERVARAR",0
ERBRA = "ERBRA",0
ERBRA1 = "ERBRA1",0
ERASSB1 = "ERASSB1",0
ERASSB2 = "ERASSB2",0
ERASSB3 = "ERASSB3",0
ERHEX = "ERHEX",0
ERHEX2 = "ERHEX2",0
ERBIN = "ERBIN",0
FNMISS = "FNMISS",0
FNCALL = "FNCALL",0
ARGMAT = "ARGMAT",0
ARGMATRET = "ARGMATRET",0
ARGMATARR = "ARGMATARR",0
ERNEXT = "ERNEXT",0
NEXTER = "NEXTER",0
FORCV = "FORCV",0
FORSTEP = "FORSTEP",0
FORTO = "FORTO",0
ERDEEPPROC = "ERDEEPPROC",0
ERGOSB = "ERGOSB",0
ONER = "ONER",0
ONRGER = "ONRGER",0
NOLINE = "NOLINE",0
DATAOT = "DATAOT",0
ERRDATASTACK = "ERRDATASTACK",0
ERREPT = "ERREPT",0
ERDEEPNEST = "ERDEEPNEST",0
CHANNE = "CHANNE",0
ERWHIL = "ERWHIL",0
NOENDC = "NOENDC",0
ERCASE1 = "ERCASE1",0
ERCASE = "ERCASE",0
NOENDI = "NOENDI",0
ERMOUS = "ERMOUS",0
ERSYSINPUTS = "ERSYSINPUTS",0
ERSYSOUTPUTS = "ERSYSOUTPUTS",0
ERINSTALL = "ERINSTALL",0
BADPRO1 = "BADPRO1",0
NOLIBROOM = "NOLIBROOM",0
ERASS2C = "ERASS2C", 0
ERASSB4 = "ERASSB4", 0
ERASSFP1 = "ERASSFP1", 0

BASICTrans_Message
 CLRPSR I_bit,R11
 CMP r0, #26
 BCS UnknownSWI

 STMFD sp!,{r1, r2, r4, r5, r6, r7, lr}

 SUBS r7, r0, #24
 CMPEQ r1, #0
 BNE BASICTrans_Message1 ; Don't trust things on WRCHV to preserve Z

 SWI OS_NewLine          ; Message 24 and Line no (r1) = 0 =>
 MOV r0, r2              ; just print <CR><Message><CR>
 SWI OS_Write0
 SWI OS_NewLine
 CLRV
 LDMIA sp!, {r1, r2, r4, r5, r6, r7, pc}

BASICTrans_Message1
 SUB sp, sp, #4 + 3 * 12

 ADD r1, sp, #0
 MOV r14, #'M'
 STRB r14, [r1], #1
 MOV r2, #4 + 3 * 12    ; Space for ALL OS_ConvertCardinals!
 SWI OS_ConvertCardinal2

 LDR r0, [sp, #4 + 3 * 12]
 ADD r1, sp, #4
 SWI OS_ConvertCardinal4
 MOV r4, r0

 CMP r7, #0                     ; Message 25?
 LDR r0, [sp, #4 + 3 * 12 + 1 * 4]
 ADDNE r1, sp, #4 + 12          ; R2 is a string pointer
 SWINE OS_ConvertCardinal4      ; so don't convert
 MOV r5, r0

 MOV r0, r3
 ADD r1, sp, #4 + 2 * 12
 SWI OS_ConvertCardinal4
 MOV r6, r0

 ADD r1, sp, #0
 BL  message_write1

 ADD sp, sp, #4 + 3 * 12

 CMP r7, #10 - 24
 CMPNE r7, #11 - 24
 CMPNE r7, #16 - 24
 SWINE OS_NewLine

 CLRV
 LDMIA sp!, {r1, r2, r4, r5, r6, r7, pc}

message_writes
        STMDB   sp!, {r0, r1, r2, r3, lr}
        BIC     r1, lr, #&fc000003
        MOV     r2, r1
10      LDRB    r0, [r2], #1
        CMP     r0, #0
        BNE     %B10
        SUB     r2, r2, r1
        ADD     r2, r2, #3
        BIC     r2, r2, #3
        ADD     lr, lr, r2
        STR     lr, [sp, #4 * 4]
        B       message_write1_tail

message_write1
        STMDB   sp!, {r0, r1, r2, r3, lr}
message_write1_tail
        LDR     r0, [r12]
        SUB     sp, sp, #2048
        MOV     r2, sp
        MOV     r3, #2048
        SWI     MessageTrans_Lookup     ; Does dictionary substitution
        MOV     r0, r2
        SWI     OS_PrettyPrint          ; Substitute CR with CR/LF
        ADDS    sp, sp, #2048           ; clear V (just in case)
        LDMIA   sp!, {r0, r1, r2, r3, pc}

 END
