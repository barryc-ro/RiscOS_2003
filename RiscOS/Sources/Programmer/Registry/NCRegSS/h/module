// header file for MODULE.H
/* Begin-Prologue */
#ifndef MODULE_H
#define MODULE_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#define INIT_ERR(x,y) ={(x),(y)}
#else
#define DECLARE extern
#define INIT(x)
#define INIT_ERR(x,y)
#endif
/* End-Prologue */

#define QUIET if(!quiet)
#define DEBUG if(debug)
#define FLAG(x) (x?"yes":"no")

#define MAX_FILEPATH  20
#define FRESCO_SC_FILENAME "/4955/20"   /* smartcard filename for fresco data file */
#define REGISTRY_SUPPORT_VERSION "0.01"

DECLARE _kernel_oserror f INIT_ERR(0x42424282, "NC Registry not present or refused service");
DECLARE _kernel_oserror g INIT_ERR(0x42424283, "NC Registry support deregister failed");
DECLARE _kernel_oserror h INIT_ERR(0x42424284, "NC Registry support handle corrupt");
DECLARE _kernel_oserror i INIT_ERR(0x42424285, "NC Registry support couldn't claim workspace");

DECLARE _kernel_oserror *registryss_init(char *, int, void *);
DECLARE _kernel_oserror *registryss_cmd_handler(char *, int, int, void *);
DECLARE _kernel_oserror *registryss_swi_handler(int, _kernel_swi_regs *, void *);
DECLARE _kernel_oserror *registryss_final(void);

DECLARE void *module_wsp;

DECLARE int debug INIT(0);
DECLARE int quiet INIT(1);

#define MAX_SCRIPT_ENTRIES 40
#define MAX_SCRIPT_ARG 8192
#define SPECIAL_TAG_SIZE         256


#define TinySupport_Init        0x82c40
#define TinySupport_Die         0x82c41
#define TinySupport_Init2       0x82c42
#define TinySupport_Share       0x82c43

DECLARE SCRIPT_LIST *script_base, *script_ptr;
DECLARE char *script_arg_base, *script_arg_ptr;

DECLARE int sc_ppp, sc_slip, sc_static, sc_dynamic INIT(0);
DECLARE char *domain_ptr, *fetch_ptr, *mount_ptr;
DECLARE char *net_domain_ptr, *net_fetch_ptr, *net_mount_ptr;
DECLARE unsigned char *fresco_data_ptr;
DECLARE int fresco_data_comp INIT(0);
DECLARE int fresco_data_decomp INIT(0);
DECLARE int fresco_stat_size INIT(0);
/* LZW related globals */
DECLARE unsigned char *explicit, *lzw_out;
DECLARE int *posn, *lengths;

DECLARE unsigned int registry_handle INIT(0);


/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef INIT_ERR
#undef DECLARE
#endif
/* End_Epilogue */
