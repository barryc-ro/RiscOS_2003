// header file for MODULE.H
/* Begin-Prologue */
#ifndef MODULE_H
#define MODULE_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#define INIT_ERR(x,y) ={(x),(y)}
#else
#define DECLARE extern
#define INIT(x)
#define INIT_ERR(x,y)
#endif
/* End-Prologue */

#define QUIET if(!quiet)
#define DEBUG if(debug)
#define FLAG(x) (x?"yes":"no")

#define MAX_FILEPATH   20
#define TinySupport_Init        0x82c40
#define TinySupport_Die         0x82c41
#define TinySupport_Init2       0x82c42
#define TinySupport_Share       0x82c43


DECLARE _kernel_oserror f INIT_ERR(0x0080fd00, "NCRegistry: couldn't enumerate network drivers");
DECLARE _kernel_oserror g INIT_ERR(0x0080fd01, "NCRegistry: couldn't claim workspace");
DECLARE _kernel_oserror cmd_err_1 INIT_ERR(0x0080fd02, "NCRegistry: smartcard locked against server update");
DECLARE _kernel_oserror cmd_err_2 INIT_ERR(0x0080fd03, "NCRegistry: smartcard file not found");
DECLARE _kernel_oserror cmd_err_3 INIT_ERR(0x0080fd04, "NCRegistry: smartcard busy");

#define REGISTRY_FTYPE 0xf94

DECLARE _kernel_oserror *registry_init(char *, int, void *);
DECLARE _kernel_oserror *registry_cmd_handler(char *, int, int, void *);
DECLARE void module_sc_handler(int, _kernel_swi_regs *, void *pw);
DECLARE _kernel_oserror *registry_swi_handler(int, _kernel_swi_regs *, void *);
DECLARE _kernel_oserror *registry_final(int, int, void *);
DECLARE _kernel_oserror *setcallback(void);
DECLARE _kernel_oserror *cancelcallback(void);


DECLARE void *module_wsp;
DECLARE char *fresco_buffer;
DECLARE int fresco_stat_size INIT(0);
DECLARE int bootblock_stat_size INIT(0);

DECLARE int debug INIT(0);
DECLARE int quiet INIT(1);

/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef INIT_ERR
#undef DECLARE
#endif
/* End_Epilogue */
