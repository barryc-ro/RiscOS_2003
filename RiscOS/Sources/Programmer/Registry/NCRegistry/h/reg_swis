// header file for REG_SWIS.H

/* Begin-Prologue */
#ifndef REG_SWIS_H
#define REG_SWIS_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */



#define MAXSWI 18

struct swient {
        int (*swi_call)();      /* swi handler */
};


DECLARE int registry_nullswi(_kernel_swi_regs *);
DECLARE int registry_enumerate_network_drivers(_kernel_swi_regs *);
DECLARE int registry_enumerate_smartcard_blocks(_kernel_swi_regs *);
DECLARE int registry_enquiry(_kernel_swi_regs *);
DECLARE int registry_load_scbb(_kernel_swi_regs *);
DECLARE int registry_status(_kernel_swi_regs *);
DECLARE int registry_write(_kernel_swi_regs *);
DECLARE int registry_authenticate(_kernel_swi_regs *);
DECLARE int registry_supportinit(_kernel_swi_regs *);
DECLARE int registry_supportexit(_kernel_swi_regs *);
DECLARE int registry_changechv(_kernel_swi_regs *);
DECLARE int registry_proxy(_kernel_swi_regs *);

#ifdef PROTOTYPES_INTERNAL
struct swient registry_ent[MAXSWI + 1] = {
    registry_enumerate_network_drivers,
    registry_enumerate_smartcard_blocks,
    registry_enquiry,
    registry_load_scbb,
    registry_status,
    registry_write,
    registry_authenticate,
    registry_supportinit,
    registry_supportexit,
    registry_changechv,
    registry_proxy,
    registry_nullswi,
    registry_nullswi,
    registry_nullswi,
    registry_nullswi,
    registry_nullswi,
    registry_nullswi,
    registry_nullswi,
    0,
};
#else
extern struct swient registry_ent[MAXSWI+1];
#endif


/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */






