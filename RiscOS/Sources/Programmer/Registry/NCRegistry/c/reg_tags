/* reg_tags.c - code to manage registry tags */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#include "s_card.h"
#include "reg_scbb.h"
#define PROTOTYPES_INTERNAL
#include "reg_tags.h"

int caseless_strcmp(char *a, char *b)
{
  int n;

  for(n=0; n<MAX_TAGNAME; n++, a++, b++) {
    if(toupper(*a) != toupper(*b)) return(1);
    if(iscntrl(*a) || iscntrl(*b)) break;
  }

  if(n>0) return(0);
  else return(1);
}

REG_TAGS *locate_tag(char *s)
{
  REG_TAGS *rt;

  for(rt = reg_tags; *(rt->tagname) != 0; rt++) {
    // printf("Comparing: %s with %s\n", rt->tagname, s);
    if(caseless_strcmp(s, rt->tagname) == 0) return(rt);
  }

  return((REG_TAGS *)NULL);
}

int isblanktag(SC_BOOT_BLOCK *bb, REG_TAGS *rt)
{
  int n;
  char *s;

  n = rt->length;
  s = (char *)bb + rt->offset;
  while(n--)
    if(*s++ != 0) return(0);
  return(1);
}

int reduce_tag(SC_BOOT_BLOCK *bb, REG_TAGS *rt)
{
  int n;

  n = *(int *)((char *)bb + rt->offset);
  n &= rt->mask;
  n >>= rt->shift;
  return(n);
}




