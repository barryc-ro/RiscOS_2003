
Informal notes about the changes from BASIC 1.23 to 1.24...

* ALIGN will now force any unused bytes to zero when assembling at
  both P% and O%. This is better than leaving possibly uninitialised
  memory behind (makes diffs very difficult).

* The assembler now correctly recognises the new 'LR' special variable
  when the L is lower-case.

* The assembler also has the 'SP' (13) special variable defined.

* TRACE PROC (and the identical TRACE FN) now flushes the VCACHE when
  it is encountered. This is important, because procedure and function
  calls are normally cached to avoid looking-up the name and searching
  for the location of the DEF.

  When tracing is active, we don't add any procedure or function calls
  to the cache, because we can't output the name to the trace output
  (without parsing it - hence slowing-down cache behaviour).

  So, we now flush the VCACHE at the start of PROC/FN tracing so that
  all calls are reported (before, the cached ones would not appear in
  the trace output).

* TRACE ENDPROC has been implemented to allow the output of 'ENDPROC'
  and 'ENDFN' in the trace output whenever a procedure or function is
  exited. This complements the TRACE PROC/FN functionality.

* QUIT <expression> has been added to allow a return code to be passed
  back to the called when BASIC exits. This is the /only/ sensible way
  for a BASIC program to set Sys$ReturnCode on exit (others get trashed
  when BASIC removes it's environment handlers).

-- SAR, 16th Mar 2001
