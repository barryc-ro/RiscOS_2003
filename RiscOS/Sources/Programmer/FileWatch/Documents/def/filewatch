TITLE FileWatch;

AUTHOR "Simon Middleton";

NEEDS OS;

// ----------------------------------------------------------------------------

CONST
  Error_FileWatchBase          = .Bits: 0x80fb00 "256 errors",
  Error_FileWatchNoMem         = .Bits: 0x80fb00 "Not enough memory for some allocation",
  Error_FileWatchBadHandle     = .Bits: 0x80fb01 "Bad FileWatch handle passed to SWI",
  Error_FileWatchWhatFS        = .Bits: 0x80fb02 "Can't decode filing system";

// ----------------------------------------------------------------------------

TYPE FileWatch_H;

// ----------------------------------------------------------------------------

TYPE
  FileWatch_RegisterInterestFlags = .Bits;

CONST
  FileWatch_RegisterInterestFileHandle = FileWatch_RegisterInterestFlags: 0x1;

SWI FileWatch_RegisterInterest =
  (  NUMBER 0x4d240 "Register an interest in some files changing",
     ENTRY
     (
        R0 = FileWatch_RegisterInterestFlags: flags,
        R1 -> .Int: reasons,
        R2 -> .String: file_prefix
     ),
     EXIT
     (
        R0! = FileWatch_H: handle
  )  );

TYPE FileWatch_RegisterInterestArgs = .Union
  (
     .Struct
     (
        FileWatch_RegisterInterestFlags: flags,
        .Ref .Int: reasons,
        .Union
        (
          .Ref .String: file_prefix,
          OS_F: file_handle
        ): match
     ): in,
     .Struct
     (  FileWatch_H: handle
     ): out
  );

// ----------------------------------------------------------------------------

TYPE
  FileWatch_DeRegisterInterestFlags = .Bits;

SWI FileWatch_DeRegisterInterest =
  (  NUMBER 0x4d241 "Deregister an interest",
     ENTRY
     (
        R0 = FileWatch_DeRegisterInterestFlags: flags,
        R1 = FileWatch_H: handle
     )
  );

TYPE FileWatch_DeRegisterInterestArgs = .Union
  (
    .Struct
    (
      FileWatch_DeRegisterInterestFlags: flags,
      FileWatch_H: handle
    ): in
  );

// ----------------------------------------------------------------------------

TYPE
  FileWatch_PollFlags = .Bits;

SWI FileWatch_Poll =
  (  NUMBER 0x4d242 "Poll for changes",
     ENTRY
     (
        R0 = FileWatch_PollFlags: flags,
        R1 = FileWatch_H: handle,
        R2 = .Ref .Data: buffer,
        R3 = .Int: buffer_size
     ),
     EXIT
     (
        R2 = .Ref .Data: updated_buffer,
        R3 = .Int: updated_buffer_size,
        R4 = .Int: file_count
     )
  );

TYPE FileWatch_PollArgs = .Union
  (
    .Struct
     (
        FileWatch_PollFlags: flags,
        FileWatch_H: handle,
        .Ref .Data: buffer,
        .Int: buffer_size
     ): in,
     .Struct
     (
        [2] .Int: reserved,
        .Ref .Data: updated_buffer,
        .Int: updated_buffer_size,
        .Int: file_count
     ): out
  )

// ----------------------------------------------------------------------------
