/*->h.fs */


typedef struct
{
  int  object;
  int  length;
  int  load;
  int  exec;
  int  acc;
  int  type;
} fstat;



extern int    filetype(int load);
extern int    cstrcmp(char * first,char * second);
extern char * xstrcpy(char *s1, const char *s2);
extern char * xstrcat(char *s1, const char *s2);



extern _kernel_oserror * fs_open(char * name,int mode,int * fh);
extern _kernel_oserror * fs_close(int fh,_kernel_oserror * err);
extern _kernel_oserror * fs_read(int fh,void * b,int n);
extern _kernel_oserror * fs_write(int fh,void * b,int n);
extern _kernel_oserror * fs_seek(int fh,int posn);
extern _kernel_oserror * fs_tell(int fh,int * posn);
extern _kernel_oserror * fs_skip(int fh,int delta);
extern _kernel_oserror * fs_cdir(char * name);
extern _kernel_oserror * fs_wipe(char * name);
extern _kernel_oserror * fs_delete(char * name);
extern _kernel_oserror * fs_getpath(char * buffer,int len,int fh);
extern _kernel_oserror * fs_stat(char * name,fstat * f);
extern _kernel_oserror * fs_canonicalpath(char * path,char * buffer,int len,
                                       char * pathvar,char * pathstring);
extern _kernel_oserror * oscli(char * string);
extern _kernel_oserror * fs_getdeftime(fstat * stat,int type);
extern _kernel_oserror * fs_settype(char * name,int type);
extern _kernel_oserror * fs_extent(int fh,int * ex);
extern _kernel_oserror * fs_stamp(char * name,fstat * f);
extern _kernel_oserror * fs_codesync(int load,int length);


