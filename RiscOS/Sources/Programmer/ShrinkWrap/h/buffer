/*->h.buffer */

#define DEFPACKSIZE   0x4000
#define DEFUNPACKSIZE 0x4000


#define BCRC    0x1
#define BCODE   0x2


typedef struct buffer 
{
 char * data;     /* pointer to start of buffer        */
 char * p;        /* pointer into data                 */
 char * f;        /* another pointer into data         */
 char * end;      /* pointer to end of data !          */
 int    buffsize; /* length of buffer                  */
 int    datasize; /* amount of data to read            */
 int    left;     /* amount of data left to read       */
 int    fh;       /* file handle to refill buffer from */
 int    flags;    /* control CRC and codec             */
 int    crc;
} buffer;


#define COPYCRC    0x1
#define COPYCODE   0x2
#define COPYDECODE 0x4


extern void initbuff(buffer * b,char * data,int datasize,int buffsize,int fh);
extern _kernel_oserror * initsrcbuffer(buffer * src);
extern _kernel_oserror * fillsrcbuffer(buffer * src);
extern _kernel_oserror * dumpdestbuffer(buffer * dest);
extern _kernel_oserror * copyfile(int source,int dest,int length,int flags);
extern _kernel_oserror * writeblock(char * source,int dest,int length,
                                                                 int flags);
extern _kernel_oserror * readblock(char * dest,int source,int length,
                                                                 int flags);
extern _kernel_oserror * getfirstbyte(int fh,char * b,int at);

extern int copylen;
extern int copycrc;

extern void setcode(void);
extern void closecode(void);
extern void clearcode(buffer * dest);

extern _kernel_oserror * buff_alloc(flex_ptr b,int size,int * bsize);
extern _kernel_oserror * dumpblock(buffer * dest,char * p,int len);


