;->s.runcode
;
;


R0 RN 0
R1 RN 1
R2 RN 2
R3 RN 3
R4 RN 4
R5 RN 5
R6 RN 6
R7 RN 7
R8 RN 8
R9 RN 9
R10 RN 10
R11 RN 11
R12 RN 12
R13 RN 13
R14 RN 14
R15 RN 15
PC  RN 15


a1 RN 0
a2 RN 1
a3 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lk RN 14
lr RN 14
pc RN 15

f0 FN 0
f1 FN 1
f2 FN 2
f3 FN 3
f4 FN 4
f5 FN 5
f6 FN 6
f7 FN 7





 AREA  SRASM, CODE



OS_Exit                 * &000011
OS_FSControl            * &000029
OS_EnterOS              * &000016


XOS_MASK   * &00020000 ; mask to make a swi a RISC OS V-error SWI

XOS_FSControl * OS_FSControl :OR: XOS_MASK
XOS_EnterOS   * OS_EnterOS   :OR: XOS_MASK



; ****************************************************************************


 EXPORT runcode


; _kernel_oserror * runcode(int exec,char * commandtail,char * commandname);

runcode

 MOV   ip,sp
 STMFD sp!,{v1-v6,fp,ip,lk,pc}
 SUB   fp,ip,#4

 MOV   r3,r2

 MOV   r2,r0
 BIC   r2,r2,#&FC000003

 MOV   r0,#2

 SWI   XOS_FSControl
 BVS   runerror

 LDR   r13,InitSVCStack

 TEQP  pc,#0
 MOV   r0,r0
 MOV   r12,#&80000000
 MOV   r13,#&80000000
 MOV   r14,pc
 MOV   pc,r2
 MOV   r0,r0
 SWI   OS_Exit


runerror
 LDMEA fp,{v1-v6,fp,sp,pc}^


InitSVCStack
 DCD   &01C02000



 EXPORT runtrans


; _kernel_oserror * runtrans(int exec,int codesize,
;                            char * commandtail,char * commandname);

runtrans

 MOV     ip,sp
 STMFD   sp!,{v1-v6,fp,ip,lk,pc}
 SUB     fp,ip,#4

 STMDB   sp!,{sl,fp,ip}
 TEQP    pc,#0 
 MOV     a1,a1

 MOV     ip,a1
 ADD     ip,ip,a2
 ADD     sp,ip,#&400

 MOV     v1,a1

 MOV     a1,a4
 MOV     a2,a3

 ADR     lk,transreturn
 MOV     pc,v1


transreturn

 MOVVC   a1,#0
 MOV     a2,pc
 SWI     XOS_EnterOS
 LDMIA   sp!,{sl,fp,ip}

 LDMEA   fp,{v1-v6,fp,sp,pc}^


 END



