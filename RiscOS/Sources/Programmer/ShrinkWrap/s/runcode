; s.runcode

        GET   Hdr:ListOpts
        GET   Hdr:Macros
        GET   Hdr:System
        GET   Hdr:Machine.<Machine>
        GET   Hdr:HighFSI
        GET   Hdr:PublicWS
        GET   Hdr:APCS.<APCS>

        AREA  SRASM, CODE, READONLY, PIC

; _kernel_oserror * runcode(int exec,char * commandtail,char * commandname);
        EXPORT runcode
runcode
        FunctionEntry "v1-v6",MakeFrame

        SUBS    r3,r2,#0   ; MOV R3,R2, setting carry for TEQ
        TEQ     pc,pc      ; set Z if in a 32-bit mode
        BICNE   r2,r0,#&FC000003
        MOV     r0,#FSControl_StartApplication
        SWI     XOS_FSControl
        Return  "v1-v6", fpbased, VS

        ; Find the top of the SVC stack
        MOV     r0, #6
        MOV     r1, #0
        MOV     r2, #16
        SWI     XOS_ReadSysInfo         ; politely read SVCSTK from Kernel
        MOVVSS  r2, #0
        TEQVC   r2, #0
        MOVNE   r13, r2
        LDREQ   r13,=SVCSTK             ; brute force read if polite failed

        WritePSRc USR_mode,r0
        MOV     r0, r0
        MOV     r12, #&80000000
        MOV     r13, #&80000000
        MOV     r14, pc
        MOV     pc, r2
        SWI     OS_Exit
        ; Does not return

; _kernel_oserror * runtrans(int exec,int codesize,
;                            char * commandtail,char * commandname);

        EXPORT runtrans
runtrans
        FunctionEntry "v1-v6", MakeFrame
        STMDB   sp!,{sl,fp,ip}

        WritePSRc USR_mode, ip
        MOV     r0, r0
        ADD     ip, a1, a2      ; R12 = base of 1K workspace
        ADD     sp, ip, #&400   ; R13 = top of workspace (stach)
        MOV     v1, a1          ; execution address parked in R4 temporarily
        MOV     a1, a4          ; set up command name in R0
        MOV     a2, a3          ; set up command tail in R1
        MOV     lr, pc          ; set up return address
        MOV     pc, v1          ; go go go
        MOVVC   a1, #0          ; no error, set return value to zero
        MOV     a2, pc          ; save flags in R1 for no apparent reason
        SWI     XOS_EnterOS     ; return to SVC mode

        LDMIA   sp!,{sl,fp,ip}  ; restore from SVC stack
        Return "v1-v6", fpbased ; exit APCS function

        END
