/*
 * TestApp - test for RMVersion application code
 *
 * Copyright (C) Acorn Computers Ltd. 1998
 *
 */
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "kernel.h"
#include "rmversion.h"

static const char *leaf(const char *arg)
{
        char *end = strrchr(arg, '.');
        if (end) return end + 1;
        end = strrchr(arg, ':');
        if (end) return end + 1;
        return arg;
}

int main(int argc, char *argv[])
{
        unsigned int version;
        _kernel_oserror *e;
        const char *module = argv[1];

        if (argc < 2) {
                fprintf(stderr, "Syntax: %s <module or filename>\n", leaf(argv[0]));
                exit(EXIT_FAILURE);
        }

        e = rmversion(rmversion_ROM, module, &version);
        printf("ROM %x.%02x %s\n", version>>16, (version&0xFF00) >> 8, e?e->errmess:"");
        e = rmversion(rmversion_RAM, module, &version);
        printf("RAM %x.%02x %s\n", version>>16, (version&0xFF00) >> 8, e?e->errmess:"");
        e = rmversion(rmversion_FILE, module, &version);
        printf("Sys %x.%02x %s\n", version>>16, (version&0xFF00) >> 8, e?e->errmess:"");

	return EXIT_SUCCESS;
}
