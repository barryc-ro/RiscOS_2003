/*
 * elfstructs.h
 *
 * Copyright (C) Pace Micro Technology plc. 2000
 */

#ifndef elfstructs_h_included
#define elfstructs_h_included

#ifndef __elf_h
#  include "elf.h"
#endif

typedef struct {
  int fd;
  _kernel_oserror *e;
  Elf32_Addr entry;
  void *static_base;
  Elf32_Phdr *ph;
  Elf32_Ehdr eh;
  char *filename;
  char *arg_string;
  unsigned char *in_memory;
  Elf32_Addr ram_limit;
} elf_program;

extern elf_program *elf_allocate_dynamic_structure(void);

extern _kernel_oserror *elf_open(elf_program *ep, const char *filename);
extern _kernel_oserror *elf_open_memory(elf_program *ep, void *, const char *);
extern void elf_close(elf_program *);
extern _kernel_oserror *elf_load(elf_program *);
extern _kernel_oserror *elf_go(elf_program *);
/* does not return if successful */

/* And in the assembler ... */
extern _kernel_oserror *elf_go_app(Elf32_Addr entry, unsigned long svcstksize);

#endif
