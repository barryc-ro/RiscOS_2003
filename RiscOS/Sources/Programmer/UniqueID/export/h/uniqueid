/* > uniqueid.h
 *
 *      UniqueID header.
 */

#ifndef __uniqueid_h
#define __uniqueid_h

#define UNIQUEID_SWI_BASE

#undef UniqueID_Read
#define UniqueID_Read	(UNIQUEID_SWI_BASE+0)
#undef UniqueID_Set
#define UniqueID_Set	(UNIQUEID_SWI_BASE+1)

#define UNIQUEID_BIOSPATCH_REASON	0
#define UNIQUEID_BIOSPORT_REASON	1
#define UNIQUEID_NCOSPATCH_REASON	2
#define UNIQUEID_NCOSPORT_REASON	3


/* The following structure defines a unique ID header. It is common	*/
/* for all versuons of unique ID structure.				*/

typedef struct _uniqueid_header
{
	unsigned char version;				/* Version of structure.		*/
	unsigned char otp_version;			/* Version of OTP block			*/
}
uniqueid_header;


/* The following structure defines the version 1 unique ID block.	*/
/* Note that it is defined byte by byte as the byte order within words	*/
/* is big-endian.							*/

#define UNIQUEID_OTP_MAX		16

typedef struct _uniqueid_1
{
	unsigned char version;				/* Version of structure (this is v.1)	*/
	unsigned char otp_version;			/* Version of OTP block (this is v.3)	*/
	unsigned char manid_high;			/* Manufacturer ID (NCI assigned)	*/
	unsigned char manid_low;
	unsigned char model_high;			/* Model number (manufacturer assigned)	*/
	unsigned char model_low;
	unsigned char bios_major;			/* BIOS version				*/
	unsigned char bios_minor;
	unsigned char bios_patch;
	unsigned char bios_port;
	unsigned char ncos_major;			/* NC OS version			*/
	unsigned char ncos_minor;
	unsigned char ncos_patch;
	unsigned char ncos_port;
	unsigned char otp_len;				/* Length of otp data			*/
	unsigned char otp_raw[UNIQUEID_OTP_MAX];	/* OTP info unsigned chars.		*/
}
uniqueid_1;


/* The following structures define the current (version 2) unique ID block.	*/

/* OTP block version 4 (version for uniqueid_1 was 3). */

typedef struct _otp_4
{
	unsigned char checksum;				/* Checksum such that OTP bytes 0-15 sum to 0 (mod 256).	*/
	unsigned char reserved1;
	unsigned char reserved2;
	unsigned char reserved3;
	unsigned int reserved4;
	unsigned char ethernetid[6];			/* Ethernet ID stored in little-ending format.			*/
	unsigned char reserved5;
	unsigned char reserved6;
}
otp_4;

typedef struct _uniqueid_2
{
	unsigned char version;				/* Version of structure (this is v.2)	*/
	unsigned char otp_version;			/* Version of OTP block (this is v.4)	*/
	unsigned char ncos_major;			/* NC OS version			*/
	unsigned char ncos_minor;
	unsigned char ncos_patch;
	unsigned char ncos_port;
	unsigned char reserved1;
	unsigned char otp_len;				/* Length of otp data			*/
	union
	{
		unsigned char raw[UNIQUEID_OTP_MAX];
		otp_4 otp4;
	} otp;
}
uniqueid_2;

#endif
