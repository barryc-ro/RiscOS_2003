/* Title:   global.h
 * Purpose: global definitions
 * Author:  IDJ
 * History: 20-Apr-90: IDJ: created
 *          11-May-01: ADH: added application flags for control code handling
 *                          and an icon flag for quoted_string
 *
 */

#ifndef __global_h
#define __global_h

#ifndef __wimp_h
#include "wimp.h"
#endif

#ifndef __wimpt_h
#include "wimpt.h"
#endif

#ifndef __bbc_h
#include "bbc.h"
#endif

#define IGNORE(x)  (x=x)

#define VARIABLE_LENGTH_TOKENS 1

/* distinguishing menus and icons */
#define  IS_MENU   0
#define  IS_ICON   1
#define  IS_STRING 2
#define  IS_OUTPUT 3

/* application flags */
#define  AF_HAS_OUTPUT_WINDOW      0x00000001   /* application has a text output window */
#define  AF_HAS_SUMMARY_WINDOW     0x00000002   /*     "        "  " summary       "    */
#define  AF_DFT_SUMMARY            0x00000004   /* default display is a summary window  */
#define  AF_HAS_AUTORUN            0x00000008   /* app. can run when file dragged on    */
#define  AF_HAS_AUTOSAVE           0x00000010   /* app. can save without asking where   */
#define  AF_AUTORUN                0x00000020   /* auto-run picked as default opn.      */
#define  AF_AUTOSAVE               0x00000040   /* auto-save "      "   "      "        */
#define  AF_MAKE                   0x00000080   /* invoked by msg. from !Make           */
#define  AF_NO_OUTPUT              0x00000100   /* produce no saveas dbox               */
#define  AF_LEAFNAME               0x00000200   /* leafname is used in output name      */
#define  AF_EXTENDED_CMDLINE       0x00000400   /* uses extended cmdline                */
#define  AF_DFT_PRODUCES_OUTPUT    0x00000800   /* produces output by default?          */
#define  AF_ESCAPE_CTRL_CHARS      0x00001000   /* escape control chars when redrawing? */
#define  AF_HIDE_CTRL_CHARS        0x00002000   /* hide control chars when redrawing?   */
#define  AF_I_AM_ACTIVE            0x00004000   /* set if the application is running    */


/* icon flags */
#define  ANY_ICON                  (-1)
#define  ICONBAR_ICON              (-2)
#define  IF_STRING                 0x00000001   /* icon contents are string             */
#define  IF_NUMBER                 0x00000002   /*  "     "      "   integer            */
#define  IF_ARROWUP                0x00000004   /* icon increases another icon          */
#define  IF_ARROWDOWN              0x00000008   /*   "  decreases   "      "            */
#define  IF_EXTENDS                0x00000010   /*   "  icon extends the dbox           */
#define  IF_SPACES                 0x00000020   /* option is followed by spaces         */
#define  IF_FOLLOWSPACES           0x00000040   /* spaces before any extra icons        */
#define  IF_FOLLOW                 0x00000080   /* icon follows some other in cmdline   */
#define  IF_PRODUCES_OUTPUT        0x00000100   /* when selected, produces output       */
#define  IF_PRODUCES_NO_OUTPUT     0x00000200   /* when selected, produce no output     */
#define  IF_SELECTED               0x00000400   /* icon is selected                     */
#define  IF_FADED                  0x00000800   /* icon is faded (non-selectable)       */
#define  IF_MAKE_EXCLUDES          0x00001000   /* icon is excluded if called from make */
#define  IF_NOT_SAVED              0x00002000   /* option state not saved               */
#define  IF_QUOTED_STRING          0x00004000   /* icon contents = string to be quoted  */
#define  IF_DEFAULT_GIVEN          0x00008000   /* a default value was explicitly given */
#define  IF_FOLLOWSPACES_OFF       0x00010000   /* as IF_FOLLOWSPACES but for OFF items */


/* task flags */
#define  TF_Running        0x00000001
#define  TF_Aborted        0x00000002
#define  TF_Paused         0x00000004
#define  TF_Completed      0x00000008
#define  TF_Dead           0x00000010           /* task has been killed off by closing
                                                   its output window, but data structure
                                                   still around, til we get a morio msg
                                                 */
#define  TF_Unsaved_Output 0x00000020           /* output has been produced but not yet
                                                   saved
                                                 */


/* useful macros */
#define is_writeable_indirecttext(wi)  ((wi->flags & wimp_INDIRECT) && (wi->flags & wimp_ITEXT) \
                                         && ((wi->flags & (15 * wimp_IBTYPE)) == wimp_BWRITABLE * wimp_IBTYPE))
#define is_click(wi)                   ((wi->flags & (15 * wimp_IBTYPE)) == wimp_BCLICKDEBOUNCE * wimp_IBTYPE)
#define is_autorepeat(wi)              ((wi->flags & (15 * wimp_IBTYPE)) == wimp_BCLICKAUTO * wimp_IBTYPE)
#define is_menu(wi)                    ((wi->flags & (15 * wimp_IBTYPE)) == wimp_BSELNOTIFY * wimp_IBTYPE)
#define sysfont_height                 (wimpt_dy() * bbc_vduvar(bbc_GCharSpaceY))
#define sysfont_width                  (wimpt_dx() * bbc_vduvar(bbc_GCharSpaceX))
#define min(a,b)                       ((a<b)?a:b)
#ifdef TEST_RELEASE
#define assert(c,m)  FEinterr_assert(c,m,__FILE__,__LINE__);
#else
#define assert(c,m)
#endif

/* global constants */
#define MAXFILENAME   256
#define MAXCMDLINE  256       /* this is the RISCOS imposed CLI limit (sod it) */

#endif


