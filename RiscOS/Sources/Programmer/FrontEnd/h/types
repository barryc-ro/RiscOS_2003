/* Title:   types.h
 * Purpose: generalised front end module
 * Author:  IDJ
 * History: 06-Apr-90: IDJ: created
 *          18-Apr-90: IDJ: defined what an app DS is
 *          23-May-90: IDJ: icons can now exclude menus and vice versa
 *
 */

#ifndef __types_h
#define __types_h

#ifndef __menu_h
#include "menu.h"
#endif

#ifndef __wimp_h
#include "wimp.h"
#endif

#ifndef __template_h
#include "template.h"
#endif

#ifndef __dbox_h
#include "dbox.h"
#endif

/* ------ deselection/exclusion/dragging/following/ordering -------- */

typedef struct Frontend_insert
{
   struct Frontend_insert *next;
   int insert;
} Frontend_insert;

typedef struct Frontend_exclusion
{
   struct Frontend_exclusion *next;
   short menu_or_icon;
   short exclude;
} Frontend_exclusion;

typedef struct Frontend_deselection
{
   struct Frontend_deselection *next;
   short menu_or_icon;
   short deselect;
} Frontend_deselection;

typedef struct Frontend_dragto
{
   struct Frontend_dragto *next;
   int                     drag;
   struct Frontend_insert *inserts;
   char                    separator;
} Frontend_dragto;

typedef struct Frontend_follow
{
   struct Frontend_follow *next;
   int                     follow;
   int                     flags;
   char                   *string;
   int                     min_val, max_val;
} Frontend_follow;

typedef struct Frontend_orderentry
{
   struct Frontend_orderentry *next;
   int type;
   union {char *string; int number;} data;
} Frontend_orderentry;



/* ------------------ setup menu entries ----------------- */
typedef struct Frontend_menuentry
{
   struct Frontend_menuentry *next;
   int                        number;
   int                        flags;
   char                      *text;
   char                      *subtext;
   char                      *maps_to;
   int                        make_dft_value;
   char                      *make_dft_buffer;
   char                      *buffer;
   char                      *save_buffer;
   int                        save_flags;
   char                      *prefix_by;
   int                        bufsize;
   Frontend_exclusion        *exclusions;
   Frontend_deselection      *deselections;
} Frontend_menuentry;

typedef struct
{
   Frontend_menuentry *entries;
} Frontend_menu;


/* --------------- the setup dialogue box -------------- */
typedef struct Frontend_icon
{
   struct Frontend_icon  *next;
   int                    number;
   int                    flags;
   int                    save_flags;
   int                    min_val, max_val;
   int                    incdec, by;
   char                  *save_buffer;
   char                  *maps_to;
   struct
   {
       char *string;
       int   integer;
   }                      dft_value;
   struct
   {
       char *string;
       int   integer;
   }                      make_dft_value;
   char                   separator;
   char                  *insert;
   char                  *prefix_by;
   Frontend_follow       *followed_by;
   Frontend_exclusion    *exclusions;
   Frontend_deselection  *deselections;
} Frontend_icon;

typedef struct
{
   dbox             d;
   char            *output_option;
   char            *wild_card;
   int              extends, extends_from, extends_to;
   int              save_from, num_hats;
   char            *save_prefix, *save_suffix;
   Frontend_icon   *icons;
   Frontend_menu    menu;
   Frontend_dragto *drags;
} Frontend_dbox;


/* ----------------- an output window ------------------ */
typedef struct Frontend_outputwin
{
   struct Frontend_outputwin *next;
   int                       flags;
   template                 *text_t;
   wimp_w                    text_w;
   dbox                      summary_d;
   char                     *buffer;
   int                      *line_offsets;
   int                       bufsize;
   int                       nlines;
   int                       initlines, yextent;
   int                       last_char;
   char                     *time_run;
} Frontend_outputwin;


/* ----------------- temporary file for datasave ------- */
typedef struct Frontend_tmpfilename
{
   struct Frontend_tmpfilename *next;
   char *name;
} Frontend_tmpfilename;

/* -------------------- task state --------------------- */

typedef struct state
{
   struct state         *next;
   wimp_t                child;       /* The taskid of the child */
   Frontend_outputwin   *output;      /* The associated text/summary object */
   dbox                  saveas;      /* The dbox used for saving file output */
   char                 *tmpfile;     /* temporary file used for output */
   char                 *outfile;     /* real output filename */
   char                 *cmdline;     /* which was used to run tool */
   char                 *extcmdline;  /* possible extended cmdline used */
   Frontend_tmpfilename *tmplist;     /* list of temporaries created due to datasave */
   int                   flags;       /* suspended/aborted etc */
   struct
   {
       int              ty;
       int              size;
   } result;                         /* output file details */
} Frontend_task;

/* ------------------- an application ------------------ */
typedef struct
{
   char                *name;
   char                *command;
   char                *version;
   int                  filetype;  /* input file type */
   int                  wimpslot;
   char                *dft_output_name;
   int                  flags;
   Frontend_dbox       *setup;
   Frontend_orderentry *ordering, *make_ordering;
} Frontend_application;

/* -------------------------- wimp msg formats -------------------- */

typedef struct
{
   wimp_msghdr hdr;
   int         handle;
   char        application_name[12];
   char        cmdline[220];
} Frontend_msg_cmdline;

#endif

