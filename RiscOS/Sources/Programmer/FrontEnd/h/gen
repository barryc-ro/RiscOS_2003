/* Title:    gen.h
 * Purpose:  To generate a data structure describing an application
 * Author:   IDJ
 * History:  9-Apr-90: IDJ: Created
 *           19-Mar-91: IDJ: added "prefix_by" to icons and menu entries
 *           11-May-01: ADH: added gen_ctrlchars and gen_tabwidth
 *
 */

#ifndef __gen_h
#define __gen_h

#ifndef __lexer_h
#include "lexer.h"
#endif

#ifndef __bool_h
#include "bool.h"
#endif

extern void gen_appname(lexer_token *token);
extern void gen_appcommand(lexer_token *token);
extern void gen_version(lexer_token *token);
extern void gen_filetype(lexer_token *token);
extern void gen_wimpslot(lexer_token *token);
extern void gen_extended_cmdline(void);
extern void gen_autorun(void);
extern void gen_autosave(void);
extern void gen_setautorun(lexer_token *token);
extern void gen_setautosave(lexer_token *token);
extern void gen_leafname(void);
extern void gen_numhats(int n);
extern void gen_saveprefix(lexer_token *token);
extern void gen_savesuffix(lexer_token *token);
extern void gen_savefrom(lexer_token *token);
extern void gen_outname(lexer_token *token);
extern void gen_produces_output_dft(lexer_token *token);
extern void gen_outputwindow(void);
extern void gen_summarywindow(void);
extern void gen_displaydft(lexer_token *token);
extern void gen_ctrlchars(lexer_token *token);
extern void gen_tabwidth(lexer_token *token);
extern void gen_dbox(void);
extern void gen_outputoption(lexer_token *token);
extern void gen_icon(lexer_token *token);
extern void gen_mapstring(lexer_token *token);
extern void gen_mapstring_off(lexer_token *token);
extern void gen_conversion(lexer_token *token);
extern void gen_minval(lexer_token *token);
extern void gen_maxval(lexer_token *token);
extern void gen_followiconspaces(void);
extern void gen_followiconspaces_off(void);
extern void gen_followicon(lexer_token *token, BOOL off);
extern void gen_separator(lexer_token *token);
extern void gen_separator_off(lexer_token *token);
extern void gen_icon_prefix(lexer_token *token);
extern void gen_iconproducesnooutput(void);
extern void gen_iconproducesoutput(void);
extern void gen_iconnotsaved(void);
extern void gen_changesicon(lexer_token *token, int updown);
extern void gen_extends(int icon);
extern void gen_extendsfrom(lexer_token *token);
extern void gen_extendsto(lexer_token *token);
extern void gen_by(lexer_token *token);
extern void gen_insertliteral(lexer_token *token);
extern void gen_icondefaults(lexer_token *token, int icn);
extern void gen_make_icondefaults(lexer_token *token, int icn);

typedef void (*gen_icon_dsei_ptr) (int value, int menu_or_icon);

extern void gen_icon_setdsei(int value);
extern void gen_icon_deselects(int value, int menu_or_icon);
extern void gen_icon_deselects_off(int value, int menu_or_icon);
extern void gen_icon_selects(int value, int menu_or_icon);
extern void gen_icon_selects_off(int value, int menu_or_icon);
extern void gen_icon_excludes(int value, int menu_or_icon);
extern void gen_icon_excludes_off(int value, int menu_or_icon);

#ifdef INCLUDES_AS_INCLUDES
   extern void gen_icon_includes(int value, int menu_or_icon);
   extern void gen_icon_includes_off(int value, int menu_or_icon);
#endif

extern void gen_menu_setdsei(int value);
extern void gen_menu_deselects(int value, int menu_or_icon);
extern void gen_menu_deselects_off(int value, int menu_or_icon);
extern void gen_menu_selects(int value, int menu_or_icon);
extern void gen_menu_selects_off(int value, int menu_or_icon);
extern void gen_menu_excludes(int value, int menu_or_icon);
extern void gen_menu_excludes_off(int value, int menu_or_icon);

#ifdef INCLUDES_AS_INCLUDES
   extern void gen_menu_includes(int value, int menu_or_icon);
   extern void gen_menu_includes_off(int value, int menu_or_icon);
#endif

extern void gen_make_excludes(lexer_token *token, int menu_or_icon);

extern void gen_wildcard(lexer_token *token);
extern void gen_dragto(lexer_token *token);
extern void gen_insert(lexer_token *token);
extern void gen_dragseparator(lexer_token *token);
extern void gen_menuentry(void);
extern void gen_addmenutext(lexer_token *token);
extern void gen_menumapsto(lexer_token *token);
extern void gen_menumapsto_off(lexer_token *token);
extern void gen_subtext(lexer_token *token);
extern void gen_menubufsize(lexer_token *token);
extern void gen_menu_prefix(lexer_token *token);
extern void gen_menuproducesnooutput(void);
extern void gen_menuproducesoutput(void);
extern void gen_menunotsaved(void);
extern void gen_menudefaults(lexer_token *token, int m);
extern void gen_make_menudefaults(lexer_token *token, int m);
extern void gen_sub_menudefaults(lexer_token *token, int m);
extern void gen_make_sub_menudefaults(lexer_token *token, int m);
extern void gen_orderis(lexer_token *token, int menu_or_icn, BOOL make_order);
#endif
