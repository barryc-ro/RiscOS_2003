/* Title:     FEsaveas.c
 * Purpose:   saving output file from dbox
 * Author:    IDJ
 * History:   01-Jun-90: IDJ: created
 *            12-Jun-90: IDJ: made saveas static
 *            06-Nov-90: IDJ: added interactive help
 *            14-Jan-90: IDJ: allow closing of output window when file is saved
 *            26-Feb-91: IDJ: revert to using FEfileicon
 *            05-Mar-91: IDJ: use msgs.h
 *
 */

#include <string.h>

#include "werr.h"
#include "saveas.h"
#include "dbox.h"
#include "typdat.h"
#include "os.h"
#include "xfersend.h"
#include "msgs.h"
#include "win.h"
#include "help.h"

#include "global.h"
#include "types.h"
#include "FrontEnd.h"
#include "FEtask.h"
#include "utils.h"
#include "FEinterr.h"
#include "FEfileicon.h"

#include "FEsaveas.h"


#define FEsaveas_IOK       0
#define FEsaveas_IFilename 2
#define FEsaveas_IIcon     3


/* Memo: 12-Jun-90: IDJ: we use xfersend_close_on_xfer to ensure(?) that the
 *                       static dbox gets closed after successful file saving
 *
 */


static BOOL FEsaveas__saveproc(char *filename, void *handle)
{
   BOOL ok = FALSE;
   Frontend_task *s = (Frontend_task *)handle;

   if (!xfersend_file_is_safe())   /* we have done a drag to another app */
   {
      /* --- check not directory, so we don't put a directory into <wimp$scrap> !! --- */
      if (s->result.ty == 0x1000 || s->result.ty == 0x2000)
      {
          werr(FALSE, msgs_lookup("FEsaveas1:Directories can only be saved to a filer viewer"));
          return FALSE;
      }
   }

   /* --- first try renaming the object --- */
   if ((ok = rename_object(s->tmpfile, filename)) == FALSE)
      /* --- ... then try copy-with-delete the temporary file (or directory!) --- */
      ok = copy_object_with_delete(s->tmpfile, filename);  

   /* --- if no output windows then dispose of this task totally ---*/
   if (ok && s->output == 0) FEtask_dispose(s);

   /* --- now we allow closing of output window without warning --- */
   if (ok) s->flags &= ~TF_Unsaved_Output;

   return ok;
}


static void FEsaveas__events(dbox d, void *handle)
{
   Frontend_task *s = (Frontend_task *)handle;
   char filename[MAXFILENAME];

   switch(dbox_get(d))
   {
      case FEsaveas_IOK:
         dbox_getfield(d, FEsaveas_IFilename, filename, MAXFILENAME);
         {
            int i = 0;
            BOOL dot = FALSE;
            while ((! dot) && filename[i] != 0) dot = filename[i++] == '.';
            if (! dot)
            {
               werr(FALSE, msgs_lookup("FEsaveas2:To save, drag the icon to a directory viewer."));
               break;
            };
         }

         xfersend_set_fileissafe(TRUE);

         if (FEsaveas__saveproc(filename, handle))
         {
             xfersend_close_on_xfer(FALSE, 0);
             dbox_hide(d);
             dbox_dispose(&d);
             s->saveas = 0;     /* so that closing task doesn't try to close dbox */
         };

         break;

      case dbox_CLOSE:
         xfersend_close_on_xfer(FALSE, 0);
         dbox_hide(d);
         dbox_dispose(&d);
         if (s->tmpfile) delete_object(s->tmpfile);  /* so as not to leave tmpfile around */
         s->saveas = 0;       /* so that closing task doesn't try to close dbox */
         s->flags &= ~TF_Unsaved_Output;
         break;

      default:
         break;
   }
}


static BOOL FEsaveas__rawevents(dbox d, void *ev, void *handle) 
{
   wimp_eventstr *e = (wimp_eventstr*) ev;
   Frontend_task *s = (Frontend_task *)handle;
   char filename[MAXFILENAME];

   switch (e->e) 
   {
      case wimp_EBUT:
         if (e->data.but.m.bbits == wimp_BDRAGLEFT) 
         {
            /* --- start file transfer --- */
            dbox_getfield(d, FEsaveas_IFilename, filename, MAXFILENAME);
            xfersend_close_on_xfer(TRUE, dbox_syshandle(d));
            xfersend(s->result.ty, filename, s->result.size, FEsaveas__saveproc, 0, 0, e, handle);
            return TRUE;
         }
         return FALSE;

      default: return help_dboxrawevents(d, ev, "SAVE");
   }
   return FALSE;
}


extern void FEsaveas_dbox(Frontend_task *s, os_filestr *f)
{
   int ty = ((0xfff & (f->loadaddr >> 20)) == 0xfff)?(f->loadaddr >> 8) & 0xfff : -1;

   /* NOTE according to JRoach a file is typed if top 12 bits set in load addr AND
           loadaddr != execaddr (this is what fileswitch uses)
           edit disagrees, just looking at top 12 bits
           we follow edit for the moment
    */

   /* --- check if directory or application (from bastard apps like libfile/link) --- */
   if (f->action == 2)
   {
         ty = 0x1000;
   }
 
   /* --- save size/type for event handler use --- */
   s->result.ty = ty;
   s->result.size = f->start;

   /* --- create the saveas dbox with appropriate file icon and name --- */
   s->saveas = dbox_new("save");
   FEfileicon((wimp_w) dbox_syshandle(s->saveas), FEsaveas_IIcon, ty);
   if (s->outfile) dbox_setfield(s->saveas, FEsaveas_IFilename, s->outfile);

   /* --- register event handlers --- */
   dbox_raw_eventhandler(s->saveas, FEsaveas__rawevents, s);
   dbox_eventhandler(s->saveas, FEsaveas__events, s);

   /* --- ... and show the dbox statically --- */
   dbox_showstatic(s->saveas);

   /* --- caret at end of writeable icon --- */
   set_caret(dbox_syshandle(s->saveas), FEsaveas_IFilename);
   
}
