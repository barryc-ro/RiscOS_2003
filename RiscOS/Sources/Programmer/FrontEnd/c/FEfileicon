/* Title: c.FEfileicon
 * Purpose: general display of a file icon in a dialog box.
 * Author: IDJ
 * History:
 *         19-Oct-90: IDJ: stolen from RISC_OSLib
 *         18-Dec-90: IDJ: fixed stupidity in checking whether app or directory
 */

#define BOOL int
#define TRUE 1
#define FALSE 0

#include <stdio.h>

#include "os.h"
#include "wimp.h"
#include "wimpt.h"
#include "sprite.h"
#include "trace.h"
#include "werr.h"

#include "FEfileicon.h"

extern void FEfileicon(wimp_w w, wimp_i ii, int filetype) 
{
   wimp_icreate i;
   wimp_i iii;

   i.w = w;
   wimpt_complain(wimp_get_icon_info(i.w, ii, &i.i));
   wimpt_complain(wimp_delete_icon(w, ii));
   i.i.flags &= ~wimp_ITEXT;        /* set not text */
   i.i.flags |= wimp_ISPRITE + wimp_INDIRECT;       /* set sprite */

   /* --- special cases for directory and application (IDJ, 19-Oct-90) --- */
   if (filetype == 0x1000)
       sprintf(i.i.data.indirectsprite.name, "directory");
   else
       sprintf(i.i.data.indirectsprite.name, "file_%03x", filetype);

   /* now to check if the sprite exists. */
   /* do a sprite_select on the Wimp sprite pool */

   if (wimp_spriteop(24,i.i.data.indirectsprite.name) != 0)
   {
      /* the sprite does not exist: print general don't-know icon. */
      sprintf(i.i.data.indirectsprite.name, "file_xxx");
   };

   i.i.data.indirectsprite.spritearea = (void*) 1;
   tracef1("sprite name is %s.\n", (int) i.i.data.indirectsprite.name);
   wimp_create_icon(&i, &iii); /* will recreate with same number. */
}

/* end */
