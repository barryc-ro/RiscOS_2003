#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#include "kernel.h"

#include "ModHdr.h"
#include "Module.h"
#include "Vector.h"

static bool Active = false;
char *TaskName = 0;

_kernel_oserror *Module_Commands(const char *arg_string, int argc, int cmd_no, void *pw)
{
  argc = argc;
  cmd_no = cmd_no;
  pw = pw;
  
  if (Active)
  {
    free(TaskName);
  }
  TaskName = malloc(strlen(arg_string)+1);
  if (TaskName == NULL)
  {
    Active = false;
  }
  else
  {
    strcpy(TaskName, arg_string);
    if (!Active)
    {
      Vector_Init();
    }
    Active = true;
  }
  return 0;
}

_kernel_oserror *Module_Final(int fatal, int podule, void *pw)
{
  fatal = fatal;
  podule = podule;
  pw = pw;
  
  if (Active)
  {
    Vector_Final();
    free(TaskName);
  }
  return 0;
}
