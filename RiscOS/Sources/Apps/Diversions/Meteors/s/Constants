; > Sources.Constants

;;---------------------------------------------------------------------------
;; Wimp constants
;;---------------------------------------------------------------------------

                ^       0
u_handle        #       4
u_ow0           #       0
u_wax0          #       4
u_way0          #       4
u_wax1          #       4
u_way1          #       4
u_scx           #       4
u_scy           #       4
u_ow1           #       0
u_bhandle       #       4
u_wflags        #       4
u_windowstate   #       0

                ^       u_ow1
u_gwx0          #       4
u_gwy0          #       4
u_gwx1          #       4
u_gwy1          #       4


Redraw_Window_Request           *       1
Open_Window_Request             *       2
Close_Window_Request            *       3
Pointer_Leaving_Window          *       4
Pointer_Entering_Window         *       5
Mouse_Button_Change             *       6
User_Dragbox                    *       7

null_bit          *     2_00000001
redraw_bit        *     2_00000010
open_bit          *     2_00000100
close_bit         *     2_00001000
ptrchange_bit     *     2_00010000
buttonchange_bit  *     2_00100000
userdrag_bit      *     2_01000000

button_left     *       4
button_middle   *       2
button_right    *       1


; offsets of window fields 

                ^       0
w_wax0          #       4               ; x,y coordinates of work area
w_way0          #       4               ; (ie. corners)
w_wax1          #       4               ;
w_way1          #       4
w_scx           #       4               ; x,y scroll positions
w_scy           #       4               ; (between wex0/y0 and wex1/y1)
w_bhandle       #       4               ; handle of window above this one

w_ow1           #       0       ; end of Open_Window section

w_flags         #       4               ; status of window (open/closed etc.)

w_st1           #       0       ; end of 'status' section

w_tfcol         #       1               ; title foreground colour
w_tbcol         #       1               ; title background colour
w_wfcol         #       1               ; work area foreground colour
w_wbcol         #       1               ; work area background colour
w_scouter       #       1               ; scroll bar outer portion
w_scinner       #       1               ; scroll bar inner portion
w_tbcol2        #       1               ; colour if window has input focus
                #       1               ; reserved
w_wex0          #       4               ; work area extent
w_wey0          #       4               ; (x0,y0,x1,y1)
w_wex1          #       4
w_wey1          #       4
w_titleflags    #       4
w_workflags     #       4               ; icon flags for 'work area'
w_areaCBptr     #       4               ; sprite area CB ptr (<=0 ==> system)
                #       4               ; reserved
w_title         #       12              ; title (max 11 chars, then <cr>)
w_nicons        #       4               ; no. of icons following
w_icons         #       0


ws_open         *       2_00000000000000010000000000000000
ws_top          *       2_00000000000000100000000000000000
ws_toggled      *       2_00000000000001000000000000000000
ws_toggling     *       2_00000000000010000000000000000000
ws_hasfocus     *       2_00000000000100000000000000000000
ws_status       *       2_00000000000000110000000000000000


; offsets into icon definitions

                ^       0
i_bbx0          #       4               ; bounding box (x0,y0,x1,y1)
i_bby0          #       4
i_bbx1          #       4               ; if sprite, get size instead
i_bby1          #       4
i_flags         #       4
i_data          #       12      ; up to 12 bytes of text/sprite name etc.
i_size          #       0       ; size of icon data
i_shift         *       5
             ASSERT     (i_size = 1:SHL:i_shift)


; bit masks for flags

if_text         *       2_00000000000000000000000000000001
if_sprite       *       2_00000000000000000000000000000010
if_border       *       2_00000000000000000000000000000100
if_hcentred     *       2_00000000000000000000000000001000
if_vcentred     *       2_00000000000000000000000000010000
if_filled       *       2_00000000000000000000000000100000
if_fancyfont    *       2_00000000000000000000000001000000
if_funnyicon    *       2_00000000000000000000000010000000
if_indirected   *       2_00000000000000000000000100000000
if_rjustify     *       2_00000000000000000000001000000000
if_canadjust    *       2_00000000000000000000010000000000

if_buttontype   *       2_00000000000000001111000000000000
if_esg          *       2_00000000000111110000000000000000
if_esg2         *       2_00000000000011110000000000000000   ; all but top bit

; bit masks for status

is_inverted     *       2_00000000001000000000000000000000
is_shaded       *       2_00000000010000000000000000000000
is_deleted      *       2_00000000100000000000000000000000

; foreground and background colours

if_fcol         *       2_00001111000000000000000000000000
if_bcol         *       2_11110000000000000000000000000000

; bit positions of various fields

ib_buttontype   *       12
ib_esg          *       16
ib_fcol         *       24
ib_bcol         *       28
ib_fontno       *       24              ; overlaid

caret_invisible *       1 :SHL: 25

bignum          *       &0FFFFFFF
nullptr         *       -1

        END
