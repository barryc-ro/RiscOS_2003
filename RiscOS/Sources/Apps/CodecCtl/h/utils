/* > utils.h
 *
 */

#ifndef __utils_h
# define __utils_h

#ifndef __kernel_h
#include "kernel.h"
#endif

/* --------------------------------------------------------------------------------------------- */

#ifndef BOOL
# define BOOL
#endif

#ifndef TRUE
# define TRUE 1
#endif

#ifndef FALSE
# define FALSE 0
#endif

#define NOT_USED(x)	(x = x)

#define ALIGN(a)	((a) + 3 & ~3)

extern _kernel_oserror Error_No_Mem;

/* --------------------------------------------------------------------------------------------- */

extern void utils_init(void *message_ptr);

/* --------------------------------------------------------------------------------------------- */

#define _ ,

#ifndef DEBUG
#define DEBUG 0
#endif

#if DEBUG >= 1
#define TRACE1(x) dbg (__FILE__, __LINE__, x)
#else
#define TRACE1(x) ((void) 0)
#endif

#if DEBUG >= 2
#define TRACE2(x) dbg (__FILE__, __LINE__, x)
#else
#define TRACE2(x) ((void) 0)
#endif

#if DEBUG >= 3
#define TRACE3(x) dbg (__FILE__, __LINE__, x)
#else
#define TRACE3(x) ((void) 0)
#endif

#if DEBUG >= 4
#define TRACE4(x) dbg (__FILE__, __LINE__, x)
#else
#define TRACE4(x) ((void) 0)
#endif

extern void dbg(char const *file, int line, const char *fmt, ...);

/* --------------------------------------------------------------------------------------------- */

extern char *utils_msgs_lookup(char *tag);

extern _kernel_oserror *utils_last_oserror (void);

#if DEBUG

#define err_fatal(e) err_fatal_(e, __FILE__, __LINE__)
extern void err_fatal_(_kernel_oserror *e, const char *file, int line);

#define err_report(e) err_report_(e, __FILE__, __LINE__)
extern _kernel_oserror *err_report_(_kernel_oserror *e, const char *file, int line);

#define msg_report(e) msg_report_(e, __FILE__, __LINE__)
extern void msg_report_(char *s, const char *file, int line);

extern const char *strsafe(const char *s);

#else

extern void err_fatal(_kernel_oserror *e);
extern _kernel_oserror *err_report(_kernel_oserror *e);
extern void msg_report(char *s);

#endif

extern int strcasecomp (const char *a, const char *b);
extern char *strdup(const char *s);

extern void *rma_alloc(int size);
extern void rma_free(void *ptr);

/* --------------------------------------------------------------------------------------------- */
extern int get_file_type(const char *file_name);

extern void set_system_variable(char *var_name, char *value);

#endif

/* eof utils.h */
