/* > client.h
 */

#ifndef __client_h
# define __client_h

#ifndef __plugclient_h
# include "plugclient.h"
#endif

#ifndef __toolbox_h
# include "toolbox.h"
#endif

#ifndef __util_h
# include "utils.h"
#endif

typedef void *client_ptr;

/* pluginclient itself - a list of function pointers for possible operations
 * along with a list of supported file types. Function pointers can be NULL
 * if not used */

typedef struct
{
   /* module initialisation */
   _kernel_oserror *(*client_init)           (int argc, char *argv []);
   _kernel_oserror *(*client_shutdown)       (void);
                                           
   /* instance initialisation */
   _kernel_oserror *(*client_open)           (pluginclient_instance *plugin, client_ptr *client_data,
                                                   int *opening_flags);
   _kernel_oserror *(*client_close)          (client_ptr *cp);
   _kernel_oserror *(*client_set_window)     (client_ptr cp, ObjectId window_handle, BBox *bbox,
                                                   BOOL subwindow);

   /* misc instance event handlers */
   _kernel_oserror *(*client_key)            (client_ptr cp, const WimpKeyPressedEvent *click);
   _kernel_oserror *(*client_click)          (client_ptr cp, const WimpMouseClickEvent *click);
   _kernel_oserror *(*client_help)           (client_ptr cp, const WimpHelpRequestMessage *request,
                                                   WimpHelpReplyMessage *reply, BOOL *helped);
   _kernel_oserror *(*client_action)         (client_ptr cp, int reason);
   _kernel_oserror *(*client_idle)           (client_ptr cp);

   /* instance event handlers for screen events */
   _kernel_oserror *(*client_gain_caret)     (client_ptr cp);
   _kernel_oserror *(*client_lose_caret)     (client_ptr cp);
   _kernel_oserror *(*client_redraw_setup)   (client_ptr cp,
                                                   WimpRedrawWindowBlock *r,
                                                   int local);
   _kernel_oserror *(*client_redraw)         (client_ptr cp, WimpRedrawWindowBlock *r, int local);
   _kernel_oserror *(*client_play_file)      (const char *file_name, int filetype,
                                                   ObjectId window_oid,
                                                   pluginclient_instance *plugin, client_ptr *cp);

   /* stream handlers */
   _kernel_oserror *(*client_stream_new)     (client_ptr cp, const char *mime_type,
                                                   plugin_stream *stream, int seekable,
                                                   int *stream_type);
   _kernel_oserror *(*client_stream_as_file) (client_ptr cp, plugin_stream *stream,
                                                   const char *cache_file);
   _kernel_oserror *(*client_stream_destroy) (client_ptr cp, plugin_stream *stream,
                                                   int reason);

   /* list of supported file types */
   int *file_type_list;
} pluginclient;

/* special error code returned from _open to say don't open but don't
   return an error */
#define ERROR_ABORT_OPEN ((_kernel_oserror *)-99)

/* --------------------------------------------------------------------------------------------- */

/* Declare the external clients here */

extern pluginclient pluginclient_replay;
extern pluginclient pluginclient_midi;

#endif

/* eof client.h */
