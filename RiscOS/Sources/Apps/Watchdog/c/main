#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <time.h>

#include "defs.h"
#include "inlines.h"
#include "screen.h"
#include "SmartCard.h"
#include "wimp.h"

#include "VersionNum"

#define __VERSION__ Module_MajorVersion " (RCA) Compiled " __TIME__ " " __DATE__ " " Module_MinorVersion

#define _BROWSER_ "NCFresco"

extern void kill_task(void);

static int this_task;
static int web_handle = 0;
static int paranoia   = 0;

char *version = __VERSION__;

static int badtypes[] =
{
  0xFEA,
  0xFEB,
  0xFF8,
  0xFFA,
  0xFFB,
  0xFFC,
  0xFFE,
  NULL
};

static int wimp_messages[] =
{
  4,       /* Message_DataLoadAck */
  5,       /* Message_DataOpen */
  0x400C1, /* Message_ModeChange */
  0x400C2, /* Message_TaskInitialise */
  0x400C3, /* Message_TaskCloseDown */
  0x4AF80, /* Message_URL */
  NULL
};

char cprefix[80];
char taskname[80];

carddata card;

BOOL tv = TRUE;

BOOL card_in = FALSE;

BOOL debug_status = FALSE;
BOOL debug_allow  = FALSE;

int matrix[6] = {1 << 16, 0, 0, 1 << 16, 0, 0};

int *windowdata = NULL;

extern int *mainwindowdata, mainwindowlen;

extern wimp_point screen_eig;

static void run_something(char *what, BOOL message)
{
  message_block msg;

  memset(&msg, '\0', sizeof(message_block));
  msg.header.size   = 256;

  if (debug_status)
  {
    vdu4();
    printf("> %s\n", what);
  }

  if (message)
  {
    msg.header.action = 0x4AF80;  /* Message_URL */
    strcpy(msg.data.bytes, what);
  }
  else
  {
    msg.header.action = 5;  /* Message_DataOpen */
    msg.data.dataload.window   = 0;
    msg.data.dataload.filetype = 0xFAF;
    strcpy(msg.data.dataload.filename, what);
  }
  _swix(Wimp_SendMessage, _INR(0, 2), 18, &msg, web_handle);
}

static void WimpStop(void)
{
  wimp_deletewindow(0, windowdata);
  wimp_closedown(this_task, 0x4B534154);
}

static void Icon_BarIcon(void)
{
  int  icreate[10];

  icreate[0] = -1;
  icreate[5] = 0x17003019;
  strcpy((char *) &icreate[6], _APPNAME_);

  icreate[1] = icreate[2] = 0;
  icreate[3] = icreate[4] = 68;

  _swix(Wimp_CreateIcon, _INR(0, 1), 0x60000000, icreate);
}

static void WimpStart(void)
{
  _swix(Wimp_Initialise, _INR(0, 3) | _OUT(1),
        350, 0x4B534154, _APPNAME_, wimp_messages, &this_task);
  Icon_BarIcon();
  windowdata = malloc(mainwindowlen);
  memcpy(windowdata, &mainwindowdata[10], mainwindowlen);
  if (getenv(_APPNAME_ "$ShowBorder"))
    ((char *) windowdata)[36] = 7;
  windowdata[0] = wimp_createwindow(0, &windowdata[1]);
  windowdata[7] = -2; /* SJM: 27Oct98: ensure opened at back */
  wimp_openwindow(0, windowdata);

  atexit(WimpStop);
}

static void null_action(void)
{
  paranoia = 0;
  kill_task();
  if (getenv("Watchdog$Newpage") && strlen(getenv("Watchdog$Newpage")))
  {
    run_something(getenv("Watchdog$Newpage"), TRUE);

    oscli("Unset Watchdog$Newpage");
  }
}

static void key_action(int c)
{
  unsigned int reason, scstatus;

#ifdef REAL_SYSTEM  
  _swix(NCBootblock_Status, _OUT(0), &scstatus);
  if ((scstatus & 0x04) != 0) /* Card inserted and valid */
  {
    _swix(NCAccessManager_Enquiry, _INR(0, 2), "SYSTEM_FLAGS3", &reason, 4);
    debug_allow |= ((reason & (1U << 31)) != 0);
  }
#endif

  switch(c)
  {
  case KEY_GUIDE0:
  case KEY_GUIDE1:
    if (getenv("GUIDE$Action"))
      wimp_starttask(getenv("GUIDE$Action"));
    break;
    
  case KEY_MAIL0:
  case KEY_MAIL1:
    if (getenv("MAIL$Action"))
      wimp_starttask(getenv("MAIL$Action"));
    break;
    
  case KEY_WHO0:
  case KEY_WHO1:
    if (getenv("WHO$Action"))
      wimp_starttask(getenv("WHO$Action"));
    break;

  case 'd':
  case 'D':
    if (debug_allow && paranoia == 'd')
    {
      char buffer[20];

      _swix(NCDialUI_Silent, _IN(0), debug_status);
      sprintf(buffer, "CDN_Silent %d", debug_status);
      oscli(buffer);
      debug_status = !debug_status;
    }
    else if (debug_allow)
    {
      paranoia = 'd';
    }
    else
    {
      wimp_processkey(c);
    }
    break;

  case 's':
  case 'S':
    if (debug_allow && paranoia == 's')
    {
      vdu4();
      oscli("PPPLog");
    }
    else if (debug_allow)
    {
      paranoia = 's';
    }
    else
    {
      wimp_processkey(c);
    }
    break;

  case 'l':
  case 'L':
    if (debug_allow && paranoia == 'l')
    {
      vdu4();
      _swix(NCDialUI_Debug, _IN(0), 1);
    }
    else if (debug_allow)
    {
      paranoia = 'l';
    }
    else
    {
      wimp_processkey(c);
    }
    break;
#if FALSE
  case 'x':
  case 'X':
    if (debug_allow && paranoia == 'x')
    {
      message_block msg;
      
      memset(&msg, '\0', sizeof(message_block));
      msg.header.size   = 20;
      msg.header.action = 0;  /* Message_Quit */
      _swix(Wimp_SendMessage, _INR(0, 2), 17, &msg, web_handle);
      exit(0);
    }
    else if (debug_allow)
    {
      paranoia = 'x';
    }
    else
    {
      wimp_processkey(c);
    }
    break;
#endif
  default:
    wimp_processkey(c);
    break;
  }
}

static void message_action(int *block)
{
  switch(block[4])
  {
  case 0:
    exit(0);
    break;

  case 5:
    {
      int loop = 0;

      while (badtypes[loop])
      {
        if (block[10] == badtypes[loop])
        {
          block[4] = 4;
          block[3] = block[2];
          _swix(Wimp_SendMessage, _INR(0, 2), 17, block, block[1]);
          break;
        }
        loop++;
      }
    }
    break;

  case 0x400C1:
    Screen_CacheModeInfo(matrix);
    break;

  case 0x400C2:
    if (strcmp(((char *) &block[7]), _BROWSER_) == 0
     || strcmp(((char *) &block[7]), "NCBrowser") == 0)
    {
      web_handle = block[1];
    }
    break;

  case 0x400C3:
    if (block[1] == web_handle)
    {
      wimp_starttask(taskname);
    }
    break;

  case 0x4AF80:
    if (debug_status)
    {
      char *ptr = NULL, *targ = NULL;
      
      message_block *msg = (message_block *) block;

      vdu4();
      if (msg->data.words[0] != 0)
      {
        ptr = msg->data.bytes;
      }
      else
      {
        if (msg->data.words[1] > 0 && msg->data.words[1] < 236)
        {
          ptr = &msg->data.bytes[msg->data.words[1]];
        }
        else if (msg->data.words[1] > 0x01800000)
        {
          ptr = (char *) msg->data.words[1];
        }
        if (msg->data.words[4] > 0 && msg->data.words[4] < 236)
        {
          targ = &msg->data.bytes[msg->data.words[4]];
        }
        else if (msg->data.words[4] > 0x01800000)
        {
          targ = (char *) msg->data.words[4];
        }
      }
      printf("* %s %s\n", ptr ? ptr : "", targ ? targ : "");
      _swix(NCDialUI_Debug, _INR(0, 1), 0, ptr);
    }
    break;
  }
}

int main (int argc, char **argv)
{
  int pollblock[64];
  unsigned int reason, scstatus;

  WimpStart();
  Screen_CacheModeInfo(matrix);
  _swix(Wimp_SetCaretPosition, _INR(0, 5), windowdata[0], -1, 0, 0, -1, 0);

  oscli("nfs:packetsize 1");
  oscli("nfs:timeout 60 20");

  if (getenv("Watchdog$Newpage"))
  {
    char buffer[256];
    
    sprintf(buffer, "Set " _BROWSER_ "$Welcome -url %s", getenv("Watchdog$Newpage"));
    oscli(buffer);
    oscli("Unset Watchdog$Newpage");
  }
#ifdef REAL_SYSTEM
  _swix(NCBootblock_Status, _OUT(0), &scstatus);
  if ((scstatus & 0x04) != 0) /* Card inserted and valid */
  {
    _swix(NCAccessManager_Enquiry, _INR(0, 2), "SYSTEM_FLAGS3", &reason, 4);
    debug_allow |= ((reason & (1U << 31)) != 0);
  }
#else
  debug_allow = TRUE;
#endif  

  if (argc > 1)
    strcpy(taskname, argv[1]);
  else
    strcpy(taskname, "" _BROWSER_ ":!Run");

  wimp_starttask(taskname);

  for (;;)
  {
    reason = wimp_pollidle(0x00003830, pollblock, monotonic_time() + 100);

    switch (reason)
    {
    case 0:
      null_action();
      break;

    case 2:
      wimp_openwindow(0, pollblock);
      break;

    case 8:
      key_action(pollblock[6]);
      break;

    case 17:
    case 18:
      message_action(pollblock);
      break;

    case 19:
      {
        char runit[300];
  
        sprintf(runit, "%s %s", cprefix, (char *) &pollblock[11]);
        wimp_starttask(runit);
      }
      break;
    }
  }
  exit(0);
}
