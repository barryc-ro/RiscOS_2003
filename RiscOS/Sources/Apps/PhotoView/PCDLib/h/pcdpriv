/*
 *   Photo CD Access Developer Toolkit
 *
 *   h.pcdpriv
 *   Private declarations and tools for C library
 *
 *   © Copyright Eastman Kodak Company, 1991.
 *   All rights reserved.
 *
 *   Acorn RISC-OS version
 *   © Acorn Computers Ltd, 1993
 *
 *   Developed on behalf of Acorn by 4Mation
 *  
 */


/*
 *   History:
 *
 *   13-Aug-93   PRL     Created
 *
 */


/*--- external version code ---*/
/* this is the version number of the Windows toolkit
   that this RISC-OS version was based on.
   Potentially, the RISC-OS version numbers may
   increment independently from the versions for
   other machines (?) */
#define PCD_MAJOR_RELEASE   1
#define PCD_MINOR_RELEASE   40



/*----------------------------------------------------------------------------*/
/*      Some macro definitions                                                */
/*----------------------------------------------------------------------------*/


#define badphoto(X) ((X)->magic != PCD_PHOTO_MAGIC)
#define badoview(X) ((X)->magic != PCD_OVIEW_MAGIC)
#define mkphoto(X)  ((X)->magic = PCD_PHOTO_MAGIC)
#define mkoview(X)  ((X)->magic = PCD_OVIEW_MAGIC)

#define validFormat(format) \
                ((format) == PCD_SINGLE || \
                 (format) == PCD_RGB || \
                 (format) == PCD_YCC || \
                 (format) == PCD_PALETTE)

#define validTransform(op) \
                ((op) == PCD_ROTATE_0 || \
                 (op) == PCD_ROTATE_90 || \
                 (op) == PCD_ROTATE_180 || \
                 (op) == PCD_ROTATE_270 || \
                 (op) == PCD_MIRROR_0 || \
                 (op) == PCD_MIRROR_90 || \
                 (op) == PCD_MIRROR_180 || \
                 (op) == PCD_MIRROR_270)



/*--- flags for SWI call PhotoCD_Open ---*/

#define  FOPEN_USEOPENFILE  1

#define  FCLOSE_USEOPENFILE  1


/*--- flags defines for Bitmap Data Block ---*/

#define  FBDB_UPDATECOORDS  1
#define  FBDB_ERRDIFF       2
#define  FBDB_YCCPALETTE    4




/*----------------------------------------------------------------------------*/
/*      Structure and typedef declarations                                    */
/*----------------------------------------------------------------------------*/


typedef struct 
{
   unsigned long       magic;

   unsigned int        internalhdl;    /* handle as passed to PhotoCD module */

   /*--- Current GetBlock parameter states ---*/
   PCDresolution       step;           /* currently selected resolution */
   PCDformat           format;         /* currently selected format */
   long                planebytes;     /* byte offset between planes */
   int                 columnbytes;    /* byte offset between columns */
   PCDtransform        transform;      /* output transform */


   /*--- Palette ---*/
   PCDpaletteHdl       paletteh;       /* palette handle */

   /*--- Callbacks ---*/
   PCDprogressproc     progressfn;     /* progress check function */
   long                progressdata;   /* associated data */
   int                 numerator;      /* cumulative progress numerator */
   int                 denominator;    /* cumulative progress denominator */
   PCDabortproc        abortfn;        /* abort check function */
   long                abortdata;      /* associated data */

   /*--- Read-ahead buffer ---*/
   unsigned char      *rabuf;
   int                 rabufsize;


   PCDpacInfoHdl       pacInfo;        /* image pac information */

} PCDphotoRec, *PCDphotoPtr;




typedef struct 
{
   unsigned int        magic;

   unsigned int        internalhdl;    /* handle as passed to PhotoCD module */

   /*--- Current GetBlock parameter states ---*/
   int                 imgno;          /* currently selected thumbnail number */
   PCDresolution       step;           /* currently selected resolution */
   PCDformat           format;         /* currently selected format */
   long                planebytes;     /* byte offset between planes */
   int                 columnbytes;    /* byte offset between columns */
   PCDtransform        transform;      /* output transform */


   /*--- Palette ---*/
   PCDpaletteHdl       paletteh;       /* palette handle */

   /*--- Read-ahead buffer ---*/
   unsigned char      *rabuf;
   int                 rabufsize;

} PCDoviewRec, *PCDoviewPtr;




typedef union
{
   struct
   {
      char reserved;
      char red;
      char green;
      char blue;
   } bytes;
   int word;

} PCDpaletteword;




typedef struct 
{
   int                 numpal;         /* number of entries in palette */
   PCDpaletteword      palette[256];   /* palette table */
   BOOL                rgbpal;         /* palette values are RGB values, else YCC */
   BOOL                errdiff;        /* error diffusion on/off flag */

   int                 usage;          /* when reaches 0, the palette can be freed */

} PCDpalette, *PCDpalettePtr;




typedef struct
{
   PCDrect       box;
   unsigned int  flags;
   PCDformat     format;
   long          planebytes;
   int           columnbytes;

   int              numpal;
   PCDpaletteword  *palette;

} PCDbdb, *PCDbdbPtr;


