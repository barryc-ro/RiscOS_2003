#ifndef psprite_H
#define psprite_H

/* > h.PSprite */
/*
 *  Type declarations for the sprite handling in the Paint program
 *
 * Name changed to avoid conflict with RISCOSlib
 */

typedef struct psprite_info
{ int width;
  int height;
  int mask;
  int mode;
  int palette;
  int size;
  char name[13];
  int truepalette;
} psprite_info;    /* N.B. starts with sprite_info */

extern int *psprite_std_palettes [2] [4];

extern int psprite_first (sprite_area **);

extern int psprite_next (sprite_area **, int);

extern main_sprite *psprite_new (int offset, int, main_file *);

extern void psprite_delete (main_sprite *);

extern os_error *psprite_set_plot_info (main_file *);

extern os_error *psprite_set_colour_info (main_file *);

extern os_error *psprite_set_colour (main_sprite *);

extern os_error *psprite_set_default_translations (void);

extern os_error *psprite_plot_scaled (int x, int y, main_sprite *,
    main_scaling_block *, int);

extern os_error *psprite_plot_scaled_centred (int x, int y,
    main_sprite *, main_scaling_block *, int, int);

extern int psprite_read_size (main_sprite *, sprite_info *);

extern void psprite_recalculate_offsets (main_file *);

extern sprite_palflag psprite_haspal (main_sprite *);

extern BOOL psprite_hastruecolpal (main_sprite *);

extern int  psprite_palsize (main_sprite *);

extern BOOL psprite_hasmask (main_sprite *);

extern int psprite_size (int width, int height, int mode, BOOL mask,
    int palette);

extern void psprite_read_full_info (main_sprite *, psprite_info *);

extern sprite_header *psprite_address (main_sprite *);

extern void psprite_set_icon_scale (main_sprite *);

extern os_error *psprite_free_brush_blocks (void);

extern os_error *psprite_set_brush_colour_translations (void);

extern os_error *psprite_set_brush_translations (main_file *);

extern os_error *psprite_set_brush_translation (main_sprite *);

extern void psprite_ecf (int);

extern void psprite_setup_ecf (main_sprite *, int, main_sprite *);

extern main_sprite *psprite_find (char *, char *);

extern void psprite_set_ecf (main_sprite *, int, int);

extern os_error *psprite_plot_ecf_sprite (main_sprite *, int, int, int);

extern BOOL psprite_merge_area (main_file *, sprite_area **);

extern void psprite_rotate (main_sprite *, int);

extern os_error *psprite_build_palette (main_sprite *, int **);

extern main_ttab *psprite_ttab_for_sprite (main_sprite *sprite,
    int dmode, int *dpal);

extern main_ttab *psprite_ttab_new (main_sprite *sprite,
    int dmode, int *dpal);

extern void psprite_drop_translation (main_ttab **);

extern void psprite_ttab_delete (main_ttab *);

extern void psprite_scale (main_sprite *, double, double);

extern void psprite_shear (main_sprite *, double);

extern void psprite_create_show (main_window *, BOOL, char *);

extern BOOL psprite_close_createbox (wimp_w);

#endif
