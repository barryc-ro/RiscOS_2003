/***************************************************/
/* File   : Protocols.h                            */
/*                                                 */
/* Purpose: Handle some common protocol stuff,     */
/*          such as inter-application data         */
/*          transfer.                              */
/*                                                 */
/*          Function naming convention is as usual */
/*          a source leafname derived prefix, then */
/*          a code based on the protocol being     */
/*          dealt with:                            */
/*                                                 */
/*          _atat_  App To App Transfer            */
/*          _pp_    Printer Protocol               */
/*          _auh_   Acorn URI Handler              */
/*          _ih_    Interactive Help               */
/*                                                 */
/*          This is followed by the direction, so  */
/*          to speak - i.e. '_got_' for got a      */
/*          message, '_send_' for sending a        */
/*          message. Alternatively, a prefix       */
/*          '_bounced' is used for messages which  */
/*          return as a UserMessage_Acknowledge    */
/*          event. Functions for a given set of    */
/*          messages in a protocol appear in the   */
/*          the order _send_, _got_, _bounced.     */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 29-Aug-97: Created.                    */
/***************************************************/

/* Function prototypes */

_kernel_oserror * protocols_send_data_open          (int filetype, char * pathname);
_kernel_oserror * protocols_atat_got_data_save      (WimpMessage * m);
_kernel_oserror * protocols_atat_got_data_load      (WimpMessage * m);
_kernel_oserror * protocols_atat_got_data_open      (WimpMessage * m);
_kernel_oserror * protocols_atat_got_ram_transmit   (WimpMessage * m);
_kernel_oserror * protocols_atat_data_open_bounced  (WimpMessage * m);
_kernel_oserror * protocols_atat_ram_fetch_bounced  (WimpMessage * m);

_kernel_oserror * protocols_pp_got_print_error      (WimpMessage * m);
_kernel_oserror * protocols_pp_got_print_type_odd   (WimpMessage * m);
_kernel_oserror * protocols_pp_got_data_save_ack    (WimpMessage * m);
_kernel_oserror * protocols_pp_print_save_bounced   (WimpMessage * m);

_kernel_oserror * protocols_auh_got_process         (WimpMessage * m);
_kernel_oserror * protocols_auh_got_return_result   (WimpMessage * m);
_kernel_oserror * protocols_auh_got_dying           (WimpMessage * m);

int               protocols_ih_send_help_request    (int eventcode, WimpPollBlock * block, IdBlock * idb, void * handle);
_kernel_oserror * protocols_ih_got_help_reply       (WimpMessage * m);
_kernel_oserror * protocols_ih_help_request_bounced (WimpMessage * m);
