/**************************************************************/
/* File:    Handlers.h                                        */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Event handlers.                                   */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 07-Feb-1997 (ADH): Created.                       */
/*          10-Apr-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#ifndef Browser_Handlers__
  #define Browser_Handlers__

  #include <tboxlibs/wimp.h>
  #include <tboxlibs/toolbox.h>

  #include "Global.h"

  /* Function prototypes */

  int  handle_messages            (WimpMessage * m, void * handle);
  int  handle_ack                 (int eventcode, WimpPollBlock * block, IdBlock * idb, void * handle);

  int  handle_keys                (int eventcode, WimpPollBlock * b, IdBlock * idb, void * handle);
  int  handle_keys_from_browser   (int eventcode, WimpPollBlock * block, IdBlock * idb, browser_data * handle);
  int  handle_menus               (int eventcode, WimpPollBlock * block, IdBlock * idb, void * handle);
  int  handle_scroll_requests     (int eventcode, WimpPollBlock * b, IdBlock * idb, browser_data * handle);
  int  handle_clicks              (int eventcode, WimpPollBlock * b, IdBlock * idb, browser_data * handle);
  int  handle_link_clicks         (int eventcode, WimpPollBlock * b, IdBlock * idb, browser_data * handle);
  int  handle_drags               (int eventcode, WimpPollBlock * b, IdBlock * idb, browser_data * handle);

  int  handle_close_browser       (int eventcode, WimpPollBlock * b, IdBlock * idb, browser_data * handle);

  int  handle_home                (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_back                (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_forwards            (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_stop                (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_reload              (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_view_hotlist        (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_add_hotlist         (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_view_resources      (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_load_images         (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_view_source         (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_go_to               (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_go                  (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_cancel              (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_bistate             (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_tristate            (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_save_source         (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_print               (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_save_as_text        (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_save_as_draw        (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);

  int  handle_may_scroll          (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);

  int  handle_set_marker          (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_jump_to_marker      (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_clear_marker        (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);

  int  handle_clear_url           (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_show_history_menu   (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);

  int  handle_show_info           (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int  handle_quit                (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);

  int  handle_lose_caret          (int eventcode, WimpPollBlock * block, IdBlock * idb, void * handle);

  int  handle_dialler_display     (int eventcode, WimpPollBlock * b, IdBlock * idb, browser_data * handle);
  int  handle_dialler_service     (WimpMessage * m, void * handle);

  int  handle_miscellaneous_event (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);

#endif /* Browser_Handlers__ */
