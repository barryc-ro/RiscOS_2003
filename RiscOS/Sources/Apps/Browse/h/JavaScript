/***************************************************/
/* File   : JavaScript.h                           */
/*                                                 */
/* Purpose: JavaScript support.                    */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 24-Jul-97: Created.                    */
/***************************************************/

/* The JavaScript system frequently references 'uint' */

#include "sys/types.h"

/* Useful definitions, types and enumerations */

#define JavaScript_URL_Alternative1  "javascript:"
#define JavaScript_URL_Alternative2  "mocha:"

#define JavaScript_Context_StackSize 8192

typedef enum javascript_source
{
  JavaScript_Source_Unknown,
  JavaScript_Source_URLWritable,
  JavaScript_Source_LinkInPage,
  JavaScript_Source_ScriptFile,
  JavaScript_Source_ScriptInPage

} javascript_source;

/* Function prototypes */

_kernel_oserror   * javascript_body_onload           (browser_data * b);
_kernel_oserror   * javascript_href_onclick          (browser_data * b, HStream * t, int * ignore);

_kernel_oserror   * javascript_window_open           (browser_data * b, int must_find, int record, char * url, char * target);

#ifdef JAVASCRIPT

  /* Interfaces to JavaScript interpreter */

  int               javascript_url                   (const char * url);

  _kernel_oserror * javascript_configure_environment (void);

  _kernel_oserror * javascript_gain_context          (browser_data * b, browser_data * parent);
  _kernel_oserror * javascript_lose_context          (browser_data * b);
  _kernel_oserror * javascript_define_window         (browser_data * b);
  _kernel_oserror * javascript_destroy_window        (browser_data * b);

  void              javascript_set_source            (javascript_source s);
  _kernel_oserror * javascript_process_script        (browser_data * b, const char * script);
  char            * javascript_script_callback       (void * stream, HStream * script_element, void * handle);

  void              javascript_set_doc_write_used    (void);
  int               javascript_fetch_should_proceed  (void);

  _kernel_oserror * javascript_reread_window_details (browser_data * b);

#endif
