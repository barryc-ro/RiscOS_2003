/**************************************************************/
/* File:    TBevents.h                                        */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Miscellaneous component IDs and event codes as    */
/*          used in the Res file.                             */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 13-Nov-1996 (ADH): Created.                       */
/*          25-Aug-1997 (ADH): Importance greatly reduced; to */
/*                             avoid everything recompiling   */
/*                             for every change, any specific */
/*                             definitions have been split    */
/*                             out to more relevant headers   */
/*                             (Find.h, Toolbars.h, etc.).    */
/*          09-Sep-1997 (ADH): ...But that means you can't    */
/*                             see what event codes are free. */
/*                             We Want Named Events! So, see  */
/*                             the big comment block below    */
/*                             for details of what this       */
/*                             source file has become.        */
/*          07-Apr-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

/***************************************************************************************/
/*                                                                                     */
/* Application component ID and event code definitions                                 */
/* ===================================================                                 */
/*                                                                                     */
/* Because there needs to be quite a lot of flexibility in the browser UI, there is    */
/* the requirement for a lot of odd component IDs and events which may not be used in, */
/* or generated by all user interface designs. Nonetheless the codes must be kept      */
/* unique, so it is necessary to impose numberspace conventions. These get quite       */
/* complex due to the complexity of what is being achieved.                            */
/*                                                                                     */
/* Toolbars:      Event codes and IDs start at 0x00001                                 */
/* Dialogues:     Event codes and IDs start at 0x01000                                 */
/* Menus:         Event codes and IDs start at 0x10000                                 */
/* Miscellaneous: Event codes start at 0x20000                                         */
/* Debug builds:  Event codes start at 0x30000                                         */
/*                                                                                     */
/* Blocks of 0x00200 wide should be used within each group. So for example, the button */
/* bar starts at 0x00001 and may use up to 0x001ff; the URL bar starts at 0x00200, and */
/* may use up to 0x003ff.                                                              */
/*                                                                                     */
/* Where components are tied to particularly relevant events - e.g. an OK button in a  */
/* dialogue that raises a custom 'OK' event - the event code number should be the same */
/* as the component ID. Event codes which do not match up with any particular gadget   */
/* should start with numbers at the top of that particular number space range and move */
/* downwards.                                                                          */
/*                                                                                     */
/* Example: The URL bar numberspace is 0x00200 to 0x003ff. The history popup gadget    */
/*          0x201 is related to the 'toggle history' event, so that event has event    */
/*          number 0x201. The 'clear URL' event is not related to any particular       */
/*          gadget - it generally is raised by a keyboard shortcut - so it takes       */
/*          the highest available number, 0x3ff.                                       */
/*                                                                                     */
/* Whilst not every component will be needed in the code, they should all have an      */
/* entry here. This minimises strife from entering in a component number and then      */
/* finding some random component somewhere already uses it. The exception is for menu  */
/* structures which are fixed within themselves - e.g. the Hotlist window menu tree    */
/* cannot have components migrate into the Document menu tree, and the contents of     */
/* the Encoding submenu stay within that menu too.                                     */
/*                                                                                     */
/* *All* custom (i.e. non-default Toolbox) events *must* be entered in here, without   */
/* question, though. You don't get ResEd telling you if event codes clash...           */
/*                                                                                     */
/*                                                                                     */
/* Why is this all #includes and no code?                                              */
/* ======================================                                              */
/*                                                                                     */
/* The trouble with bunging everything in one file is that each time you add even one  */
/* new component, almost every source file ends up being recompiled. But if you split  */
/* the definitions into more sensible places, there's no way to see at a glance what   */
/* number spaces are used or free.                                                     */
/*                                                                                     */
/* So, I've split the file into several smaller ones, and all this file does is        */
/* include them. The order of inclusion, within each commented major grouping as       */
/* listed above, is in order of increasing number. So for something completely new,    */
/* just load the last header file of a group and see what numbers is uses; add 0x200,  */
/* and you're away.                                                                    */
/*                                                                                     */
/*                                                                                     */
/* Do I include this header file?                                                      */
/* ==============================                                                      */
/*                                                                                     */
/* It is preferable to include only those individual headers that you actually need.   */
/*                                                                                     */
/* Main.c includes this file simply so that someone, somewhere uses it, and Main does  */
/* need a lot of the definitions. But basically, this is a weird little source file    */
/* because no-one actually *needs* to include it now (aah, poor thing, etc.).          */
/*                                                                                     */
/***************************************************************************************/

/* Toolbars (0x00001 to 0x00fff) */

#include "Toolbars.h"

/* Dialogues (0x01000 to 0x0ffff) */

#include "Authorise.h"
#include "SaveFile.h"
#include "SaveObject.h"
#include "Find.h"
#include "OpenURL.h"
#include "Printing.h"
#include "PrintStyle.h"
#include "Hotlist.h"
#include "Choices.h"
#include "ItemInfo.h"
#include "Multiuser.h"
#include "SetPBoxes.h"
#include "Cookies.h"
#include "List.h"

/* Menus (0x10000 to 0x1ffff) */

#include "Menus.h"

/* Miscellaneous events (0x20000 to 0x2ffff) */

#include "MiscEvents.h"

/* Trace build events (0x30000 to 0x3ffff) */

#ifdef TRACE
  #include "Trace.h"
#endif
