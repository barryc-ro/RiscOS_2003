/***************************************************/
/* File   : URIfile.h                              */
/*                                                 */
/* Purpose: Deal with URI files.                   */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 09-Apr-99: Created.                    */
/***************************************************/

/* Various definitions                                */
/*                                                    */
/* An enumeration listing the known URI file commands */

typedef enum
{
  urifile_none = 0,
  urifile_open,
  urifile_run

} urifile_commands;

/* The urifile_command structure is used to hold details  */
/* of an individual command, and may be in a list of many */
/* commands for a single URI file.                        */

typedef struct urifile_command
{
  struct
  {
    /* Usual header stuff */

    struct urifile_command * previous;
    struct urifile_command * next;

    urifile_commands         type;       /* So you know which part of the union to look at.     */

  } hdr;

  /* Command data*/

  union
  {
    /* No command - simple file with a URL and title string */

    struct
    {
      char     * url;                /* URL to fetch in a malloc allocated buffer.          */
      char     * title;              /* Title of the URL in a malloc allocated buffer.      */
    }
    none;

    /* The urifile_open command - open a URL with display setting flags */

    struct
    {
      char     * url;                /* URL to fetch in a malloc allocated buffer.          */
      unsigned   show_foreground :1; /* 1: Delay image loading, 0: Load them immediately.   */
      unsigned   show_background :1; /* 1: Display background images, 0: don't.             */
      unsigned   use_source_cols :1; /* 1: Use document specified colours, 0: use defaults. */
    }
    open;

    /* The urifile_run command - run a specified file */

    struct
    {
      char     * filename;           /* Filename of file to run in malloc allocated buffer. */
    }
    run;

  } data;

} urifile_command;

/* Function prototypes */

_kernel_oserror * urifile_parse_uri_file       (const char * filename, urifile_command ** rethead);

_kernel_oserror * urifile_execute_command_item (urifile_command * item, int discard_after);
_kernel_oserror * urifile_execute_command_list (urifile_command * list, int discard_after);

void              urifile_free_command_item    (urifile_command * item);
void              urifile_free_command_list    (urifile_command * list);
