/**************************************************************/
/* File:    Tables.h                                          */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Table handling functions.                         */
/*                                                            */
/* Author:  Tony Cheal, adapted by A.D.Hodgkinson.            */
/*                                                            */
/* History: 18-Mar-1997 (ADH): Code received from T.Cheal.    */
/*          17-Apr-1997 (ADH): Split up; HTMLLib specific     */
/*                             bits are now an exported       */
/*                             header file (tablestruc.h) for */
/*                             HTMLLib, browser bits are      */
/*                             included here.                 */
/*          07-Apr-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#ifndef Browser_Tables__
  #define Browser_Tables__

  #include <HTMLLib/HTMLLib.h>

  #include "Global.h"


  /* Table-related definitions */

  #define TABLES_DEFAULT_CELLPADDING 0

  /* Function prototypes */

  void tables_count_table    (browser_data * b, table_stream * p);
  void tables_position_table (browser_data * b, table_stream * p);

  void tables_init_table     (browser_data * b, table_stream * table, reformat_cell * cellarray);

  int  tables_width_table    (int toplevel, browser_data * b, table_stream * p, int ColWidth, reformat_cell * cellarray, unsigned int flags);
  int  tables_width_cell     (int toplevel, browser_data * b, HStream * streambase, table_stream * table, reformat_cell * cellarray, int ColWidth, int Row, int Column);
  int  tables_height_table   (int toplevel, browser_data * b, table_stream * p, reformat_cell * cellarray);
  int  tables_height_cell    (int toplevel, browser_data * b, HStream * streambase, table_stream * table, reformat_cell * cellarray, int ColWidth, int Row, int Column);

  void tables_fix_table      (browser_data * b, table_stream * p, reformat_cell * cellarray);
  void tables_fix_cell       (browser_data * b, HStream * streambase, table_stream * table, reformat_cell * cellarray, int x, int y, int Width, int Height, int Row, int Column);

  void tables_free_memory    (int toplevel, browser_data * b, reformat_cell * cell, int line);

#endif /* Browser_Tables__ */
