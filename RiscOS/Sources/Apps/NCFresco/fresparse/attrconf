# attrconf - HTML definitions to map onto SGML parser interface
#	Comments start with a # in the first column
#
#    (C) ANT Limited 1996, 1997. All rights reserved.
#
#    Author: borris@ant.co.uk
#
#    This file defines the HTML that we handle. Elements, attributes
#    and values are all specified here, along with intra-element
#    relationnships and other flags. The attrgen.py python program
#    is used to transform this file into C source and header files.
#
#	**** DO NOT CHANGE THIS FILE LIGHTLY - THE REST OF FRESCO ****
#	**** RELIES UPON SOME OF THE BEHAVIOUR ENFORCED BY RULES! ****
#
#	Two outer sections are used. The first one specifies a set
#	of attributes, and the second a set of elements using these
#	attributes. Ordering within the two sets is not important -
#	attrgen.py will alpha sort when appropriate before emitting.
#
#	An attribute is defined with:
#
#	( internal name, textual name, enumeration list, parse method )
#
#	internal name is the name used in the element definitions.
#	textual name is the attribute name found in HTML.
#	emumeration list is a list of the possible choices when an
#	enumerating parser is used. See sgmlparser.h for a list of
#	the parsing methods supported.
#	There are times when a textual name will be shared by more than
#	one attribute - the internal name must be unique if this
#	happens.
#
#	An element is defined with:
#
#	(  name, group, flags list, attributes list, requisites list )
#
#	name is the name used in the HTML.
#	group is the group name, currently defined in sgmlparser.h
#	flags list is a list of flag values to OR together
#	attributes list is a list of previously defined attributes
#	that this element understands.
#	requisites list is a list of (action, element) tuples that
#	are "executed" in the defined order whenever the element is
#	about to be opened. They permit implied markup to be inserted.
#
#	This particular file is based upon HTML 3.2, as of 18th May 1996.
#	Where possible, list requisites in the same order, so they can
#	share a common definition (less data, greater cache hit rate, etc).
#
# Alignment style name versus items in the enumeration
# Notes:
#   IMG center is the same as middle (nasty but common)
#
#		clear img halign valign lcralign jalign	captionalign
#		|     |	  |	 |	|	 |	|
# left		X	  X		X	 X	X
# center	      X   X		X	 X
# right		X	  X		X	 X	X
#		|     |	  |	 |	|	 |	|
# char			  X
# justify		  X	  		 X
# top		      X		 X		 	X
#		|     |	  |	 |	|	 |	|
# middle			 X
# bottom	      X		 X		 	X
# baseline	      X		 X
#		|     |	  |	 |	|	 |	|
# texttop	      X
# absbottom	      X
# absmiddle	      X
#
#
# Which type of alignment each element uses
#
# BR		clear
# TABLE		lcralign
# CAPTION	captionalign
# COLGROUP	halign, valign
# COL		halign, valign
# THEAD		halign, valign
# TFOOT		halign, valign
# TBODY		halign, valign
# TR		halign, valign
# TD		halign, valign
# TH		halign, valign
# IMG
#


ATTRIBUTES
(
# First, those attributes associated with alignment

	(  jalign    , ALIGN, ( CENTER, CENTRE, JUSTIFY, LEFT, RIGHT ), parse enum	 ),
	(  lcralign  , ALIGN, ( CENTER, CENTRE, LEFT, RIGHT ), parse enum	 ),
	(  imgalign,   ALIGN, ( TOP, TEXTTOP, BOTTOM, BASELINE, ABSBOTTOM, ABSMIDDLE, MIDDLE, LEFT, RIGHT, CENTER, CENTRE  ), parse enum ),
	(  captionalign , ALIGN, ( BOTTOM, LEFT, RIGHT, TOP), parse enum	  ),
	(  halign  , ALIGN, (CENTER, CENTRE, CHAR, LEFT, JUSTIFY, RIGHT), parse enum	  ),
	(  valign ,  VALIGN, (TOP, MIDDLE, BOTTOM), parse enum	  ),
	(  clearalign,	CLEAR, ( LEFT, RIGHT, ALL ), parse enum void ),
	(  char ,  CHAR, (), parse string	),
	(  charoff ,  CHAROFF, (), parse string ),


# Remaining attributes, alphabetical on textual name

	(  acceptcharset ,  ACCEPT-CHARSET, (), parse string	),
	(  action ,  ACTION, (), parse string	),
# Both spellings of center - that's 4 items in your switch statement.
	(  alink ,  ALINK, (AQUA, BLACK, BLUE, FUCHSIA,
				GRAY, GREEN, LIME, MAROON,
				NAVY, OLIVE, PURPLE, RED,
				SILVER, TEAL, WHITE, YELLOW), parse enum tuple	 ),
	(  alt ,  ALT, (), parse string ),
	(  archive, ARCHIVE, (), parse string ),
#	(  attribute ,	ATTRIBUTE, (), parse void	),
	(  autostart ,	AUTOSTART, ( ), parse string	),
	(  autoplay ,	AUTOPLAY, ( ), parse string	),
	(  axes ,  AXES, (), parse string	),
	(  axis ,  AXIS, (), parse string	),
	(  background ,	 BACKGROUND, (), parse string   ),
	(  bgcolor ,  BGCOLOR, (), parse colour ),
	(  border ,  BORDER, (), parse stdunit void	),
	(  bordertable ,  BORDER, (), parse integer void	),
	(  bordercolor ,  BORDERCOLOR, (), parse colour ),
	(  bordercolour ,  BORDERCOLOUR, (), parse colour ),
	(  borderimage ,  BORDERIMAGE, (), parse string	),
# Used by UL and LI elements
#	(  bullettype, TYPE, (), parse enum),
	(  cellpadding ,  CELLPADDING, (), parse integer ),
	(  cellspacing ,  CELLSPACING, (), parse integer ),
	(  checked ,  CHECKED, (), parse void	),
	(  class ,  CLASS, (), parse string	),
	(  classid ,  CLASSID, (), parse string	),
	(  code ,  CODE, (), parse string	  ),
	(  codebase ,  CODEBASE, (), parse string	  ),
	(  codetype, CODETYPE, (), parse string ),
	(  color ,  COLOR, (), parse colour ),
	(  colour ,  COLOUR, (), parse colour ),
 	(  colsint ,  COLS, (), parse integer	),
	(  colslist ,  COLS, (), parse stdunit list ),
	(  colspan ,  COLSPAN, (), parse integer ),
	(  compact ,  COMPACT, (), parse void	),
	(  content ,  CONTENT, (), parse string ),
# List of stdunits - yuch
	(  coords ,  COORDS, (), parse stdunit list ),
	(  cursor ,  CURSOR, (), parse colour ),
	(  data,	DATA, (), parse string ),
	(  declare,	DECLARE, (), parse void ),
	(  dir ,  DIR, ( LTR, RTL), parse enum ),
	(  disabled ,  DISABLED, (), parse void ),
#	(  effect ,  EFFECT, (), parse string	),
	(  enctype ,  ENCTYPE, (), parse string ),
	(  error ,  ERROR, (), parse string	),
	(  face ,  FACE, (), parse string	),
	(  for ,  FOR, (), parse string	),
#	(  forms ,  FORMS, (), parse enum	),
	(  frame ,  FRAME, (VOID, ABOVE, BELOW, HSIDES, LHS, RHS, VSIDES, BOX, BORDER), parse enum ),
#	(  frames ,  FRAMES, (), parse string	),
	(  frameborder ,  FRAMEBORDER, (  ), parse bool ),
	(  framespacing ,  FRAMESPACING, (  ), parse integer ),
	(  height ,  HEIGHT, (), parse stdunit	 ),
	(  hidden , HIDDEN, ( ), parse string	),
	(  href ,  HREF, (), parse string	),
	(  hspace, HSPACE, (), parse integer ),
# Stretching things a bit to call this an enumeration!
#	(  http_equiv ,	 HTTP-EQUIV, ( REFRESH, WINDOW-TARGET ), parse enum string ),
	(  http_equiv ,	 HTTP-EQUIV, ( ), parse string	),
	(  id ,	 ID, (), parse string	),
	(  idref ,  IDREF, (), parse string	),
#	 (  imagealign	, ALIGN, (TOP, MIDDLE, BOTTOM), parse enum	  ),
	(  imgborder ,  BORDER, (), parse integer	),
# everyone now uses the stdunit version so removed these
#	(  imgheight, HEIGHT, (), parse integer	),
#	(  imgwidth, WIDTH, (), parse integer	),
	(  index ,  INDEX, (), parse string	),
#	 (  internal ,	INTERNAL, (), parse string	 ),
	(  ismap ,  ISMAP, (), parse void	),
	(  lang ,  LANG, (), parse string	),
	(  language ,  LANGUAGE, (), parse string	),
	(  leftmargin , LEFTMARGIN, (), parse integer	),
	(  link ,  LINK, (), parse colour ),
	(  loop , LOOP, ( ), parse string	),
	(  marginheight ,  MARGINHEIGHT, (), parse integer	 ),
	(  marginwidth ,  MARGINWIDTH, (), parse integer ),
#	(  max ,  MAX, (), parse void	),
	(  maxlength ,	MAXLENGTH, (), parse integer	),
	(  mediafile ,	MEDIAFILE, ( ), parse string	),
	(  mdsfile ,	MDSFILE, ( ), parse string	),
	(  method ,  METHOD, (GET, POST), parse enum		),
	(  methods ,  METHODS, (), parse string),
#	(  min ,  MIN, (), parse void	),
	(  multiple ,  MULTIPLE, (), parse void ),
	(  n ,	N, (), parse string	),
	(  name ,  NAME, (), parse string	),
	(  nocursor  , NOCURSOR, (), parse void	),
	(  nohref  , NOHREF, (), parse void	),
	(  nopopup  , NOPOPUP, (), parse void	),
	(  noresize  , NORESIZE, (  ), parse void		  ),
	(  numbers  , NUMBERS, ( NUMBERS, PBX ), parse enum void	),
#	(  noscrolling ,  NOSCROLLING, (), parse enum	),
# used by HR
	(  noshade, NOSHADE, (), parse void ),
	(  notation, NOTATION, (), parse string ),
	(  nowrap ,  NOWRAP, (), parse void	),
#	(  oltype, TYPE, (1,A,a,I,i), parse enum case ),
	(  oltype, TYPE, (), parse string ),
	(  palette, PALETTE, (), parse string ),
	(  plain,  PLAIN, (), parse void	),
	(  playfrom,  PLAYFROM, (), parse string	),
	(  playto,  PLAYTO, (), parse string	),
#	(  print ,  PRINT, (), parse string	),
	(  prompt, PROMPT, (), parse string ),
	(  rel ,  REL, (), parse string ),
	(  rev ,  REV, (), parse string ),
	(  rowsint ,  ROWS, (), parse integer	),
	(  rowslist ,  ROWS, (), parse stdunit list ),
	(  rowspan ,  ROWSPAN, (), parse integer ),
	(  rules ,  RULES, (NONE, GROUPS, ROWS, COLS, ALL), parse enum),
	(  selcolor ,  SELCOLOR, (), parse colour ),
	(  selected ,  SELECTED, (), parse void ),
	(  selimage ,  SELIMAGE, (), parse string	),
	(  scrolling ,	SCROLLING, (YES, NO, AUTO), parse enum		 ),
	(  server ,	SERVER, ( ), parse string	),
#	(  shape ,  SHAPE, (), parse string	),
# microsoft "define" the paramters as having a four character abbreviation!
# default is RECT
	(  areashape, SHAPE, (RECT, RECTANGLE, CIRC, CIRCLE,
			      POLY, POLYGON, DEFAULT, DEF, POINT), parse enum ),
	(  shapes, SHAPES, (), parse void ),
	(  size ,  SIZE, (), parse integer	),
# SIZE=3 SIZE=-3 SIZE=+3 are all different.
	(  fontsize ,  SIZE, (), parse string	),
	(  span ,  SPAN, (), parse integer	),
	(  src ,  SRC, (), parse string ),
	(  standby,	STANDBY, (), parse string ),
# Used by OL
	(  start ,  START, (), parse integer	   ),
	(  style ,  STYLE, (), parse string	),
	(  tabindex, TABINDEX, (), parse integer ),
	(  target ,  TARGET, (), parse string	),
	(  text ,  TEXT, (), parse colour ),
	(  textfocus, TEXTFOCUS, ( ), parse string ),
	(  title ,  TITLE, (), parse string	),
	(  topmargin , TOPMARGIN, (), parse integer	),
	(  type ,  TYPE, (TEXT, PASSWORD, CHECKBOX, RADIO, IMAGE, HIDDEN, SUBMIT, RESET, BUTTON), parse enum	),
	(  typestring ,  TYPE, (), parse string	),
	(  mediatype, TYPE, (), parse string ),
	(  urn ,  URN, (), parse string ),
	(  usemap, USEMAP, (), parse string ),
	(  value ,  VALUE, (), parse string void ),
	(  valuetype,	VALUETYPE, (DATA, REF, OBJECT), parse enum ),
	(  livalue ,  VALUE, (), parse integer	   ),
	(  ultype, TYPE, (CIRCLE, DISC, PLAIN, SQUARE), parse enum string ),
	(  version ,  VERSION, (), parse string void ),
	(  vlink ,  VLINK, (), parse colour ),
	(  vspace, VSPACE, (), parse integer ),
	(  width ,  WIDTH, (), parse stdunit	 ),
	(  wrap ,  WRAP, ( HARD, SOFT ), parse enum void )
)

ELEMENTS
(

# An artificial element used to wrapper SGML delivery onto element delivery.

	(
		SGML,
		none,
		(
			flag artificial,
# Say no close so doesn't get stacked
			flag no close
		),
# No attributes
		(),
# No rules
		()
	),


# Block level elements cause paragraph breaks
# eg <H1>, <P>, <LI>, <HR>

# Text level elements do not cause paragraph breaks
# eg <EM>, <I>, <B>, <FONT>, <A>, <IMG>, <APPLET>, <BR>

# List items can contain block and text level items, although
# headings and address elements are excluded.
# DT elements can only act as containers for text level elements, while
# DD elements can hold block level elements as well, excluding
# headings and address elements.

#	First, the basic structuring elements - special.c
#	<HTML> <HEAD> <BODY>

	(
		HTML,
		html,
		(
			flag container ,
# NOFRAMES can enclose HTML
#			flag only once ,
			flag no text,
			flag close optional
		),
		(
			lang
		),
		( )
	),

	(
		HEAD,
		head,
		(
			flag only once ,
	 		flag container ,
			flag no text
		),
		(),
		(
			(enclosed within,  html)
#			, (should contain,  title)
		)
	),

# DAF: 970627: Re having flag only once on body: permitting this
# multiply also means examples such as tabtests/missing9.html get
# really confused. In an attempt to satisfy the examples that cause
# the flag to be removed and not have missing9.html go boom, we don't
# stack BODY. However, we have also had to change a lot of (enclosed
# within, body) rules into (enclosed within, artbody). It is
# *essentail* that startbody is prepared to be called many times now!

	(
		BODY,
		none,
		(
			flag no close,
# DAF: 970628: Ideally, don't want/need this, but <html><html> leads
# to us wanting it.
			flag text
		),
		(
			alink,
			background,
			bgcolor,
			link,
			text,
			vlink,
			leftmargin,
			topmargin
#,			ondispose
		),
		(
# Ensure we still trigger the old behaviour!
			(enclosed within, artbody)
		)
	),

# The artificial variant that rules reference but the user can never
# invoke and hence can never get miss-nested!
	(
		ARTBODY,
		body,
		(
			flag artificial,
			flag container,
			flag only once,
			flag text,
			flag close optional
		),
		(
# All attributes done on the type the user specifies and can repeat.
		),
		(
			(enclosed within,  html),
			(preceeded by,  head),
			(close any open,  head)
		)
	),


#	Then those elements that appear in the head - head.c
#	<TITLE> <ISINDEX> <BASE> <STYLE> <SCRIPT> <META> <LINK>

	(
		TITLE,
		head,
		(
# Permit multiply to cater for naff HTML
#			flag only once,
			flag end tag
# many occurrences outside the header
#			, flag head
		),
		(),
		(
# many occurrences outside the header
# but should be within <HTML>..</HTML>
			(enclosed within,  html)
		)
	),

# This used to be a BODY element with a different meaning, apparently.
	(
		ISINDEX,
		head,
		(
			flag only once,
			flag no close,
			flag head
		),
		(
			href,
			prompt
		),
		(
			(enclosed within,  head)
		)
	),

	(
		BASE,
		head,
		(
# Hack for Netvirus compatibility
#			flag only once,
			flag no close
# Hack for Netvirus compatibility
#			,flag head
		),
		(
			href,
			target
		),
		(
# Hack for Netvirus compatibility
			(enclosed within,  html)
#			(enclosed within,  head)
		)
	),

	(
		BASEFONT,
	 	head,
		(
#			flag only once,
			flag no close
#			,flag head

		),
		(
			size
		),
		(
			(enclosed within,  html)
#			(enclosed within,  head)
		)
	),

# This is now a mixture of correct definition (my mistakes being
# fixed) and deliberate distortion of the spec to cope with common
# author mistakes. <STYLE> operates in str mode to collect the
# string. Comment removal should work
	(
		STYLE,
#		head,
		none,
		(
			flag close optional,
# Can't remember if this is going to nest correctly. Author's
# could abuse this if they tried (what's new!)
			flag text,
# ????			flag only once
#			flag end tag,
# Borris, 96/07/04: added "flag no text" to make contents not displayed.
# This might need to be a container if uncommented: see unexpected
# character delivery in delivery.c. 23/8/96, Borris.
#			flag no text,
			flag auto close
#,			flag head
		),
		(
			notation,
			mediatype
		),
		(
#			(enclosed within, head)
			(enclosed within, html)
		)
	),

	(
		SCRIPT,
		head,
		(
			flag end tag ,
			flag head
		),
		(
			language
		),
		(
			(enclosed within,  html)
		)
	),

	(
		META,
		head,
		(
			flag no close,
			flag head
		),
		(
			content,
# CAUTION: Can't have #define HTTP-EQUIV but do have <META HTTP-EQUIV..>
			http_equiv,
			name
		),
		(
			(enclosed within,  head)
		)
	),

	(
		LINK,
		head,
		(
			flag no close,
			flag head
		),
		(
			href,
			idref,
			methods,
			name,
			title,
			rel,
			rev,
			urn
		),
		(
			(enclosed within,  head)
		)
	),

#	This should also appear in the head section
	(
		NEXTID,
		head,
		(
			flag antiquated ,
			flag no close,
			flag head,
			flag only once
		),
		(
			n
		),
		(
			(enclosed within,  head)
		)
	),

# Block level elements cause paragraph breaks
# eg <H1>, <P>, <LI>, <HR>

# Text level elements do not cause paragraph breaks
# eg <EM>, <I>, <B>, <FONT>, <A>, <IMG>, <APPLET>, <BR>

# List items can contain block and text level items, although
# headings and address elements are excluded.
# DT elements can only act as containers for text level elements, while
# DD elements can hold block level elements as well, excluding
# headings and address elements.

# Headings: <H1>..<H6> and <H7> just in case - block.c
# These now take an alignment value.
# H1 through H7 must have the same attributes list
	(
		H1,
		none,
		(
			flag heading,
			flag pre break,
			flag strip space
		),
		(
			jalign
		),
		(
			(enclosed within, artbody),
			(close any open,  p),
			(close any open,  h1),
			(close any open,  h2),
			(close any open,  h3),
			(close any open,  h4),
			(close any open,  h5),
			(close any open,  h6),
			(close any open,  h7)
		)
	),
	(
		H2,
		none,
		(
			flag heading,
			flag pre break,
			flag strip space
		),
		(
			jalign
		),
		(
			(enclosed within, artbody),
			(close any open,  p),
			(close any open,  h1),
			(close any open,  h2),
			(close any open,  h3),
			(close any open,  h4),
			(close any open,  h5),
			(close any open,  h6),
			(close any open,  h7)
		)
	),
	(
		H3,
		none,
		(
			flag heading,
			flag pre break,
			flag strip space
		),
		(
			jalign
		),
		(
			(enclosed within, artbody),
			(close any open,  p),
			(close any open,  h1),
			(close any open,  h2),
			(close any open,  h3),
			(close any open,  h4),
			(close any open,  h5),
			(close any open,  h6),
			(close any open,  h7)
		)
	),
	(
		H4,
		none,
		(
			flag heading,
			flag pre break,
			flag strip space
		),
		(
			jalign
		),
		(
			(enclosed within, artbody),
			(close any open,  p),
			(close any open,  h1),
			(close any open,  h2),
			(close any open,  h3),
			(close any open,  h4),
			(close any open,  h5),
			(close any open,  h6),
			(close any open,  h7)
		)
	),
	(
		H5,
		none,
		(
			flag heading,
			flag pre break,
			flag strip space
		),
		(
			jalign
		),
		(
			(enclosed within, artbody),
			(close any open,  p),
			(close any open,  h1),
			(close any open,  h2),
			(close any open,  h3),
			(close any open,  h4),
			(close any open,  h5),
			(close any open,  h6),
			(close any open,  h7)
		)
	),
	(
		H6,
		none,
		(
			flag heading,
			flag pre break,
			flag strip space
		),
		(
			jalign
		),
		(
			(enclosed within, artbody),
			(close any open,  p),
			(close any open,  h1),
			(close any open,  h2),
			(close any open,  h3),
			(close any open,  h4),
			(close any open,  h5),
			(close any open,  h6),
			(close any open,  h7)
		)
	),
	(
		H7,
		none,
		(
			flag heading,
			flag pre break,
			flag strip space
		),
		(
			jalign
		),
		(
			(enclosed within, artbody),
			(close any open,  p),
			(close any open,  h1),
			(close any open,  h2),
			(close any open,  h3),
			(close any open,  h4),
			(close any open,  h5),
			(close any open,  h6),
			(close any open,  h7)
		)
	),


# Should this be a one-off thing?
	(
		ADDRESS,
		none,
		(
			flag block
		),
		(
			id,
			lang,
			class,
			clearalign,
			nowrap
		),
		(
			(enclosed within,  html),
			(close any open,  address)
		)
	),

# BLOCK ELEMENTS - block.c
#
# <P> <UL> <OL> <DL> <PRE> <DIV> <CENTER>
# <BLOCKQUOTE> <FORM> <<<ISINDEX>>> <HR> <TABLE>

# P now also supports alignment. Special treament is needed
# to make sense of old documents though :-(

	(
		P,
		none,
		(
			flag close optional,
			flag block
		),
		(
			jalign
		),
		(
			(enclosed within, artbody),
			(quietly close any open,  p)
		)
	),

	(
		UL,
		list,
		(
			flag container,
			flag block,
            flag dont force close
		),
		(
			compact,
			ultype,
			plain
		),
		(
			(enclosed within, artbody)
		)
	),

	(
		OL,
		list,
		(
			flag container,
			flag block,
            flag dont force close
		),
		(
			compact,
			oltype,
			start
		),
		(
			(enclosed within, artbody)
		)
	),

	(
		DL,
		list,
		(
			flag container,
			flag block,
            flag dont force close
		),
		(
			compact
#			,start
		),
		(
			(enclosed within, artbody)
		)
	),

# <DIR> and <MENU> are old fashioned these days
# <DIR> is equivalent to <UL PLAIN WRAP=HORIZ>
# <MENU> is equivalent to <UL PLAIN>
	(
		DIR,
	 	list,
		(
			flag antiquated,
			flag container,
			flag block
#			flag no block elements
		),
		(
			compact
		),
		(
			(enclosed within, artbody)
		)
	),
	(
		MENU,
		list,
		(
			flag antiquated,
			flag container,
			flag block
		),
		(
			compact
		),
		(
			(enclosed within, artbody )
		)
	),

# Takes us into a restricted markup mode and changes the chopper.
	(
		PRE,
		none,
		(

			flag block
		),
		(
			lang,
			width
		),
		(
			(enclosed within, artbody),
			(close any open,  pre)
		)
	),

# This serves as a document divider, permitting alignment
# to be attached to regions, for example. I think they nest.

	(
		DIV,
		none,
		(
			flag block
		),
		(
			id,
			lang,
			class,
			nowrap,
			clearalign,
			jalign
		),
		(
			(enclosed within, artbody),
			(close any open, div)
		)
	),

	(
		CENTER,
		none,
		(
			flag out of order close,
			flag dont force close,
			flag block
		),
		(),
		(
			(enclosed within, artbody)
# allow centre to nest...
#			(close any open, center),
#			(close any open, centre)
		)
	),

# Handle the alternative spelling as well
	(
		CENTRE,
		none,
		(
			flag out of order close,
			flag dont force close,
			flag block
		),
		(),
		(
			(enclosed within, artbody)
# allow centre to nest...
#			(close any open, center),
#			(close any open, centre)
		)
	),

	(
		BLOCKQUOTE,
		none,
		(
			flag block
		),
		(),
		(
			(enclosed within, artbody),
			(close any open,  blockquote)
		)
	),

	(
		FORM,
		form,
		(
			flag container ,
#			flag block ,
			flag dont force close,
            flag out of order close,
			flag full unwind
		),
		(
			acceptcharset,
			action,
			enctype,
			id,
			index,
			lang,
			method,
			target
		),
		(
			(enclosed within, artbody),
			(close any open,  form)
		)
	),

# More attributes
	(
		HR,
		none,
		(
			flag no close,
			flag block
		),
		(
			lcralign,
			noshade,
			size,
			width
		),
		(
			(enclosed within, artbody)
		)
	),

	(
		TABLE,
		table,
		(
			flag container ,
			flag block,
# DAF: 970319
#			flag no text,
			flag manual break,
            flag dont force close
		),
		(
#			  tablealign,
			lcralign,
			bgcolor,
			bordertable,
			cellpadding,
			cellspacing,
			char,
			charoff,
			class,
			colsint,
			dir,
			frame,
			height,
			id,
			lang,
			rules,
			style,
			width
		),
		(
			(enclosed within, artbody),
# If you go <TABLE><TABLE> then this does <TABLE>..<TD><TABLE>
			(container enclosed within, td),
			(should contain, tbody),
			(post clear seen flag,  colgroupsection),
			(post clear seen flag,  thead),
			(post clear seen flag,  tfoot)
		)
	),


# Elements associated with lists - lists.c
# <LI> <DT> <DD>
	(
		LI,
		list,
		(
			flag content ,
			flag close optional ,
			flag no headings or address,
			flag pre break,
			flag strip space
		),
		(
			id,
			lang,
			index,
			src,
			ultype,
			livalue
		),
		(
                        (replace with,          badli),
 			(one of enclosing,	ol),
			(one of enclosing,	dl),
			(one of enclosing,	dir),
			(one of enclosing,	menu),
			(last one of enclosing,  ul),
			(enclosed within, artbody),
			(close any open,  li)
		)
	),
	(
		BADLI,
		list,
		(
			flag content ,
			flag close optional ,
			flag no headings or address,
			flag pre break,
			flag strip space
		),
		(
			id,
			lang,
			index,
			src,
			ultype,
			livalue
		),
		(
                        (replaces bad, li),
			(close any open,  badli)
		)
	),

	(
		DT,
		list,
		(
			flag content ,
			flag close optional ,
			flag no headings or address,
        		flag breaks,
			flag strip space
		),
		(),
		(
                        (replace with, baddt),
			(one of enclosing, ul),
			(last one of enclosing, dl),
#			(enclosed within,  dl),
			(close any open,  dt),
			(close any open,  dd)
		)
	),
	(
		BADDT,
		list,
		(
			flag content ,
			flag close optional ,
			flag no headings or address,
			flag breaks,
			flag strip space
		),
		(),
		(
                        (replaces bad, dt),
			(close any open,  baddt),
			(close any open,  baddd)
		)
	),

	(
		DD,
		list,
		(
			flag content ,
			flag close optional ,
			flag no headings or address,
			flag breaks,
			flag strip space
		),
		(),
		(
                        (replace with, baddd),
			(one of enclosing, ul),
			(last one of enclosing, dl),
#			(enclosed within,  dl),
			(close any open,  dd),
			(close any open,  dt)
		)
	),
	(
		BADDD,
		list,
		(
			flag content ,
			flag close optional ,
			flag no headings or address,
			flag breaks,
			flag strip space
		),
		(),
		(
                        (replaces bad, dd),
			(close any open,  baddd),
			(close any open,  baddt)
		)
	),

# Elements associated with forms - forms.c
# <INPUT> <SELECT> <TEXTAREA> <OPTION> <MENU>

	(
		INPUT,
		form,
		(
			flag content ,
			flag no close,
#			flag breaks,
			flag strip space
		),
		(
			maxlength,
			checked,
			disabled,
			error,
			imgalign,
#			max,
#			min,
			name,
			size,
			src,
			type,
			value,
			id,
			nocursor,
			bgcolor,
			cursor,
			numbers,
			selcolor,
			borderimage,
			selimage,
			width,
			height,
			tabindex,
			border
		),
		(
			(enclosed within,  form),
			(close any open,  select),
			(close any open,  textarea),
			(close any open,  a)
		)
	),

	(
		TEXTAREA,
		form,
		(
			flag content,
#			flag breaks,
			flag strip space
		),
		(
			colsint,
			name,
			rowsint,
			id,
			bgcolor,
			selcolor,
			cursor,
			tabindex,
			wrap
		),
		(
			(enclosed within,  form),
			(close any open,  select),
			(close any open,  textarea),
			(close any open,  a)
		)
	),

	(
		SELECT,
		select,
		(
			flag content ,
			flag container,
#			flag breaks,
			flag strip space,
			flag no text
		),
		(
			multiple,
			name,
			size,
			id,
			bgcolor,
			selcolor,
			nopopup,
			lang
		),
		(
			(enclosed within,  form),
			(close any open,  select),
			(close any open,  textarea),
			(close any open,  a)
		)
	),

# This is defined as not having a close, but we wish
# to capture the text following it, so we have it
# marked as publically not accepting a close, but
# internally it stacks and the parser ensures a
# close for us automatically.
	(
		OPTION,
		select,
		(
			flag content,
			flag close internal,
			flag no close,
			flag text
		),
		(
			disabled,
			selected,
			value,
			lang
		),
		(
                        (replace with, badoption),
			(enclosed within,  select),
			(close any open,  option)
		)
	),
	(
		BADOPTION,
		select,
		(
			flag content,
			flag close internal,
			flag no close,
			flag text
		),
		(
			disabled,
			selected,
			value
		),
		(
			(replaces bad, option),
			(close any open,  badoption)
		)
	),


# This is an IBM proposed element that will allow NCFresco to do the form
# improvements necessary for RCA.
	(
		LABEL,
		form,
		(
			flag content
		),
		(
			id,
			for
		),
		(
			(enclosed within,  form),
			(close any open,  label),
			(close any open,  a)
		)
	),



#############################################################################

# Elements associated with tables - tables.c
# <CAPTION> <COLGROUP> <COL> <THEAD> <TFOOT> <TBODY> <TR> <TD> <TH>
# Don't put FLAG_BREAKS on these, as different sides of the elements
# are in different text streams. The tables code is responsible for
# layout of tables. Space stripping is good though.

	(
		CAPTION,
		table,
		(
			flag content,
			flag only once,
			flag strip space,
			flag text
		),
		(
			 caption align,
			 class,
			 dir,
			 id,
			 lang,
			 style
		),
		(
                        (replace with, badcaption),
			(enclosed within,  table)
		)
	),
	(
		BADCAPTION,
		table,
		(
			flag content,
			flag only once,
			flag strip space,
			flag text
		),
		(
			 caption align,
			 class,
			 dir,
			 id,
			 lang,
			 style
		),
		(
                        (replaces bad, caption)
		)
	),
	(
		COL,
		colgroup,
		(
			flag content ,
			flag no close
		),
		(
			halign,
			bgcolor,
			char,
			charoff,
			class,
			dir,
			id,
			lang,
			span,
			style,
			valign,
			width
		),
		(
                        (replace with, badcol),
                        (invent only within, table),
			(enclosed within,  colgroup)
		)
	),
	(
		BADCOL,
		colgroup,
		(
			flag content ,
			flag no close
		),
		(
			halign,
			bgcolor,
			char,
			charoff,
			class,
			dir,
			id,
			lang,
			span,
			style,
			valign,
			width
		),
		(
                        (replaces bad, col)
		)
	),

	(
		COLGROUP,
		colgroup,
		(
			flag content ,
			flag close optional
		),
		(
			 halign,
			bgcolor,
			 char,
			 charoff,
			 class,
			 dir,
			 id,
			 lang,
			 span,
			 style,
			 valign,
			 width
		),
		(
                        (replace with, badcolgroup),
                        (invent only within, table),
			(enclosed within,  colgroupsection),
			(close any open,  colgroup)
		)
	),
	(
		BADCOLGROUP,
		colgroup,
		(
			flag content ,
			flag close optional
		),
		(
			 halign,
			bgcolor,
			 char,
			 charoff,
			 class,
			 dir,
			 id,
			 lang,
			 span,
			 style,
			 valign,
			 width
		),
		(
                        (replaces bad, colgroup),
			(close any open,  badcolgroup)
		)
	),

# THEAD, TFOOT and TBODY must have the same attributes list.

	(
		TBODY,
		table,
		(
			flag content
		),
		(
			 halign,
			bgcolor,
			 char,
			 charoff,
			 class,
			 dir,
			 id,
			 lang,
			 style,
			 valign
		),
		(
			(preceeded by,    tfoot),
			(close any open,  tfoot),
			(close any open,  tbody)
		)
	),

	(
		TFOOT,
		table,
		(
			flag content,
			flag only once
		),
		(
			 halign,
			bgcolor,
			 char,
			 charoff,
			 class,
			 dir,
			 id,
			 lang,
			 style,
			 valign
		),
		(
			(preceeded by,    thead),
			(close any open,  thead)
		)
	),

	(
		THEAD,
		table,
		(
			flag content,
			flag only once
		),
		(
			 halign,
			bgcolor,
			 char,
			 charoff,
			 class,
			 dir,
			 id,
			 lang,
			 style,
			 valign
		),
		(
			(preceeded by,  colgroupsection),
			(close any open,  colgroupsection)
		)
	),

# TD and TH must have the same attributes
# 25/6/96: Borris: added WIDTH and HEIGHT to TD and TH
	(
		TD,
		table,
		(
			flag content,
			flag strip space
# DAF: 970319
#			,flag text
		),
		(
			 halign,
			 axes,
			 axis,
# 20/9/96: Borris: let's have different table background colours!
			bgcolor,
			 char,
			 charoff,
			 class,
			 colspan,
			 dir,
			 height,
			 id,
			 lang,
			 nowrap,
			 rowspan,
			 style,
			 valign,
			 width
		),
		(
                        (replace with, badtd),
                        (invent only within, table),
			(enclosed within,  tr),
# 23/4/97: pdh: @@@@ this ought to be done properly instead
			(close any open,  a),
# 97/06/10: DAF, at PDH's request
			(close any open, ol),
			(close any open, ul),
			(close any open, dl),

			(close any open,  th),
			(close any open,  td)
		)
	),
	(
		BADTD,
		table,
		(
			flag content,
			flag strip space
# DAF: 970319
#			,flag text
		),
		(
			 halign,
			 axes,
			 axis,
# 20/9/96: Borris: let's have different table background colours!
			bgcolor,
			 char,
			 charoff,
			 class,
			 colspan,
			 dir,
			 height,
			 id,
			 lang,
			 nowrap,
			 rowspan,
			 style,
			 valign,
			 width
		),
		(
                        (replaces bad, td),
			(close any open,  badth),
			(close any open,  badtd)
		)
	),

	(
		TH,
		table,
		(
			flag content,
			flag strip space
# DAF: 970319
#			,flag text
		),
		(
			halign,
			axes,
			axis,
# 20/9/96: Borris: let's have different table background colours!
			bgcolor,
			char,
			charoff,
			class,
			colspan,
			dir,
			height,
			id,
			lang,
			nowrap,
			rowspan,
			style,
			valign,
			width
		),
		(
                        (replace with, badtd),
                        (invent only within, table),
			(enclosed within,  tr),
			(close any open, a),
# 97/06/10: DAF, at PDH's request
			(close any open, ol),
			(close any open, ul),
			(close any open, dl),
			(close any open,  td),
			(close any open,  th)
		)
	),
	(
		BADTH,
		table,
		(
			flag content,
			flag strip space
# DAF: 970319
#			,flag text
		),
		(
			halign,
			axes,
			axis,
# 20/9/96: Borris: let's have different table background colours!
			bgcolor,
			char,
			charoff,
			class,
			colspan,
			dir,
			height,
			id,
			lang,
			nowrap,
			rowspan,
			style,
			valign,
			width
		),
		(
                        (replaces bad, th),
			(close any open,  badtd),
			(close any open,  badth)
		)
	),

	(
		TR,
		table,
		(
			flag content
		),
		(
			 halign,
			bgcolor,
			 char,
			 charoff,
			 class,
			 dir,
			 id,
			 lang,
			 style,
			 valign
		),
		(
                        (replace with, badtr),
                        (invent only within, table),
			(one of enclosing,	thead),
			(one of enclosing,	tfoot),
			(last one of enclosing,  tbody),
			(close any open,  tr)
		)
	),
	(
		BADTR,
		table,
		(
			flag content
		),
		(
			 halign,
			bgcolor,
			 char,
			 charoff,
			 class,
			 dir,
			 id,
			 lang,
			 style,
			 valign
		),
		(
                        (replaces bad, tr),
			(close any open,  badtr)
		)
	),

# We also have an artificial element to assist with structuring

	(
		COLGROUPSECTION,
		colgroup,
		(
			flag container,
			flag content ,
			flag only once ,
			flag artificial
		),
		(),
		(
			(enclosed within,  table),
			(preceeded by,  caption),
			(close any open, caption)
## Arrange that there is always a <COLGROUP>
#			(should contain, colgroup)
		)
	),

#############################################################################

# Text level elements

# Font style elements - fonts.c
# <TT> <I> <B> <S> <STRIKE> <U> <BIG> <SMALL> <SUB> <SUP>
	(
	TT,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  tt)
	),
	(
	I,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  i)
	),
	(
	B,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  b)
	),
	(
	S,
	 none,
	(flag out of order close),
	(),
	(  (enclosed within, artbody) )
#		(close any open,  s),
#		(close any open,  strike)
	),
	(
	STRIKE,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  s),
#		(close any open,  strike)
	),
	(
	U,
	 none,
	(flag out of order close),
	(),
	(  (enclosed within, artbody) )
#		(close any open,  u)
	),
	(
	BIG,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  big)
	),
	(
	SMALL,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open, small)
	),
	(
	SUB,
	 none,
	(flag out of order close),
	(),
	(  (enclosed within, artbody) )
	),
	(
	SUP,
	 none,
	(flag out of order close),
	(),
	(  (enclosed within, artbody) )
	),

# Phrase elements - phrase.c
# <EM> <STRONG> <DFN> <CODE> <SAMP> <KBD> <VAR> <CITE>
	(
	EM,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  em) )
	),
	(
	STRONG,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  strong) )
	),
	(
	DFN,
	 none,
	(flag out of order close),
	(),
	(  (enclosed within, artbody) )
	),
	(
	CODE,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  code) )
	),
	(
	SAMP,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  samp) )
	),
	(
	KBD,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  kbd) )
	),
	(
	VAR,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  var) )
	),
	(
	CITE,
	 none,
	(flag out of order close),
	(),
	(   (enclosed within, artbody) )
#		(close any open,  cite) )
	),

# Special text level elements - special.c
# <A> <IMG> <APPLET> <FONT> <BR> <MAP>
	(
	A,
	 none,
#	(flag out of order close, flag dont force close),
	(flag out of order close),
	(
		 coords,
#		 effect,
		 href,
		 methods,
		 name,
#		 print,
		 rel,
		 rev,
# must use areashape, same as AREA
		 areashape,
		 target,
		 title,
		 urn,
		 id
	),
	(
		(enclosed within, artbody),
		(close any open,  a),
		(close any open,  label)
	)
	),
	(
	IMG,
	 none,
	(flag no close),
	(
		alt,
		imgborder,
		height,
		hspace,
		imgalign,
		ismap,
		src,
		usemap,
		vspace,
		width
# Two old attributes
#		  imagealign,
#		  internal
	),
	(  (enclosed within, artbody) )
	),
# Implement APPLET as none nesting.
	(
		APPLET,
		none,
		(
#        	    flag dont force close
		),
		(
			archive,
			code,
			codebase,
			name,
			alt,
			lcralign,
			width,
			height,
			hspace,
			vspace,
			id
		),
		(
			(enclosed within, artbody)
		)
	),

	(
		FONT,
		none,
		(flag out of order close),
		(
			fontsize,
			colour,
			color,
			face,
			lang
		),
		(  (enclosed within,  html) )
		),

	(
		BR,
		none,
# Might not be correct wrt strip and <PRE>
		(
			flag no close,
			flag strip space
		),
		(
			clearalign
		),
		(
			(enclosed within, artbody)
		)
	),

	(
		NOBR,
		none,
		(),
		(),
		(
			(enclosed within, artbody),
			(close any open,  nobr)
		)
	),

	(
		WBR,
		none,
		(
			flag no close
		),
		(),
		(
# this is allowed to be on its own now.
#                       (replace with, badwbr),
#			(enclosed within, nobr)
		)
	),
#	(
#		BADWBR,
#		none,
#		(
#			flag no close
#		),
#		(),
#		(
#                        (replaces bad, wbr)
#		)
#	),

	(
		MAP,
	 	none,
		(
                    flag dont force close, flag out of order close
		),
		(
			name
		),
		(
			(enclosed within, artbody)
		)
	),

	(
		AREA,
		 none,
		(
			flag no close
		),
		(
		 coords,
		 href,
		 nohref,
# must use areashape, same as A
		 areashape,
		 alt,
		 target
		),
		(
			(enclosed within,  map)
		)
	),

# Frames - frames.c
# <FRAME> <FRAMESET> <NOFRAME> <NOFRAMES>
	(
		FRAME,
		none,
		( flag no close),
		(
	        	bordercolor,
		        bordercolour,
		        frameborder,
			marginwidth,
			marginheight,
			name,
			noresize,
			scrolling,
			src
		),
		(
			(enclosed within,  frameset)
		)
	),
# Should be logic to permit only once at the outer level
# but to permit more than one when nested. FIXME:
	(
		FRAMESET,
		none,
		(),
		(
	        	bordercolor,
	        	bordercolour,
	       		border,
			colslist,
	       		frameborder,
			framespacing,
			rowslist
		),
		(
			(enclosed within,  html)
		)
	),

# NOFRAME and NOFRAMES are treated identically - NOFRAME
# is a mis-spelling on NOFRAMES, but Netvirus use it themselves.
# Might suggest how they do tag matching!
	(
		NOFRAME,
		none,
		( flag full unwind),
		(),
		(
			( enclosed within, html )
		)
	),
	(
		NOFRAMES,
		none,
		( flag full unwind ),
		(),
		(
			( enclosed within, html )
		)
	),

#############################################################################

# OBJECT, APPLET, EMBED, PARAM
# objparse.c

	(
		OBJECT,
		body,
		(
#        	    flag dont force close
		),
		(
			id,
			class,
			style,
			lang,
			dir,
			declare,
			classid,
			codebase,
			data,
			mediatype,
			codetype,
			standby,
			imgalign,
			height,
			width,
			border,
			hspace,
			vspace,
			usemap,
			shapes,
			name
		),
		(
			( enclosed within, html )
		)
	),
	(
		PARAM,
		body,
		(
			flag no close
		),
		(
			name,
			value,
			valuetype,
			mediatype
		),
		(
                        ( replace with, badparam ),
			( one of enclosing, applet ),
			( last one of enclosing, object )
		)
	),
	(
		BADPARAM,
		body,
		(
			flag no close
		),
		(
			name,
			value,
			valuetype,
			mediatype
		),
		(
                        ( replaces bad, param )
		)
	),
	(
		BODYTEXT,
		body,
		(
			flag no close
		),
		(
		),
		(
			( enclosed within, object )
		)
	),
	(
		EMBED,
		body,
		(
# Is this really an empty element?, yep!
			flag no close
		),
		(
			src,
			width,
			height,
# these two are used by shockwave
			palette,
			textfocus,
# liveaudio
			autostart,
			autoplay,
			loop,
			hidden,
			playfrom,
			playto,
# these are used by oracle video server
			mdsfile,
			server,
			mediafile,
			typestring,
			id
		),
		(
			( enclosed within, artbody )
		)
	),
	(
		NOEMBED,
		body,
		(
		),
		(
		),
		(
			( enclosed within, artbody )
		)
	),
	(
		BGSOUND,
		body,
		(
			flag no close
		),
		(
			loop,
			src
		),
		(
			( enclosed within, artbody )
		)
	),


#############################################################################

# HTML 3 elements which may or may not be kept
# misc.c

	(
	ABBREV,
	 none,
	(
	),
		( ),
		(
			(enclosed within, artbody)
		)
	),
	(
		ACRONYM,
		none,
		(
		),
		( ),
		(
			(enclosed within, artbody)
		)
	),
	(
	FIG,
	 none,
	(),
	(
		lcralign,
		id,
		index,
		ismap,
		lang,
		src
	),
	(  (enclosed within, artbody) )
	),
	(
	FOOTNOTE,
	 none,
	(),
	(),
	(  (enclosed within, artbody) )
	),
	(
	MATH,
	 none,
	(),
	(),
	(  (enclosed within, artbody) )
	),
	(
	NOTE,
	 none,
	(),
	(),
	(  (enclosed within, artbody) )
	),
	(
	PERSON,
	 none,
	(),
	(),
	(  (enclosed within, artbody) )
	),
	(
	Q,
	 none,
	(),
	(),
	(  (enclosed within, artbody) )
	),


#############################################################################

#
# Deprecated tags
# New HTML should not be using any of these.
#
# misc.c
#
	(
	LISTING,
	 none,
	(flag end tag , flag antiquated, flag block),
	(),
	(  (enclosed within, artbody),
		(close any open, listing)
	) ),
	(
	PLAINTEXT,
	 none,
	(flag antiquated , flag close optional , flag end tag, flag block),
	(),
	(  (enclosed within, artbody),
		(close any open, plaintext)
	) ),
	(
	XMP,
	 none,
	(flag end tag , flag antiquated, flag block ),
	(),
	(  
		(enclosed within, artbody) ,
		(close any open, xmp)
	)
	))

#############################################################################

# The following elements are dummies introduced to handle incomplete markup
# such as TD on its own.

#############################################################################

#
# Elements that we've picked up along the way.
# New HTML should not be using any of these.
#
#
#	(
#	ABSTRACT,
#	 none,
#	(flag antiquated),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	ADDED,
#	 none,
#	(flag antiquated),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	ARG,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	BOX,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	BYLINE,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	CHANGED,
#	 none,
#	(),
#	(
#		id,
#		idref
#	),
#	(  (enclosed within, artbody) )
#	),
#	(
#	CMD,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	COMMENT,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	HTMLPLUS,
#	 none,
#	(),
#	(
#		forms,
#		version
#	),
#	(  (enclosed within, artbody) )
#	),
#	(
#	IMAGE,
#	 none,
#	(flag antiquated),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	L,
#	 none,
#	(),
#	(
#		lcralign,
#		id,
#		lang,
#		index
#	),
#	(  (enclosed within, artbody) )
#	),
#	(
#	LIT,
#	 none,
#	(),
#	(
#		compact,
#		id,
#		index,
#		lang,
## Taken over by OL
##		start,
#		type
#	),
#	(  (enclosed within, artbody) )
#	),
#	(
#	MARGIN,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	OVER,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	QUOTE,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	REMOVED,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	RENDER,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	),
#	(
#	TAB,
#	 none,
#	(),
#	(),
#	(  (enclosed within, artbody) )
#	))


# eof

