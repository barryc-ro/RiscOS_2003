/* -*-c-*- */

THIS FILE IS OBSOLETE - YOU SHOULD BE USING htmlparser.h INSTEAD

/* Generate my RISC OS internal format from an HTML stream */

#ifndef HTMLRISCOS_H
#define HTMLRISCOS_H
/*
#include "HTUtils.h"
#include "HTMLPDTD.h"

#define DTD HTMLP_dtd

#include "HTStream.h"
*/
#ifndef __rid_h
#include "rid.h"
#endif

#ifndef __sgmlparser_h
#include "sgmlparser.h"
#endif

/*****************************************************************************

These bits used to be private to htmlriscos.c - they have been moved
here as a result of creating a seperate tables.c file to keep the
size of htmlriscos.c sensible (3k+ lines is a cumbersome file).

*/

#ifndef PARSE_DEBUG
#define PARSE_DEBUG 0
#endif


#define CAREFUL 1
#define STRICT_SPACE 0

#define BUFFER_SIZE     1024    /* No item should be this big */
#define MAX_TITLE_LEN   128     /* The HTML spec says 80 is about right */


#define FORCE_BREAK     0x01    /* After commands that break the line */
#define STRIP_SPACE     0x02    /* After commands that swallow white space */
#define HARD_BREAK      0x04    /* After the end of a preformatted line of text */

#define STK_STATE_PRE   0x01    /* Use 'PRE' rules for space striping */
#define STK_STATE_LINES 0x02    /* Take text as lines rather than words */


/* How we are handling spaces */
#define HTMLMODE_FMT        0  /* Space and EOL are just seperators */
#define HTMLMODE_PRE        1  /* Space and EOL count one for one */
#define HTMLMODE_STR        2  /* Accumulate into the inhand string */
#define NUM_HTMLMODES       3

typedef struct
{
    /* The context we are operating within */
    SGMLCTX *                   sgmlctx;
    rid_header *                rh;
    rid_map_item *              map;
    rid_aref_item *		aref;		/* The current anchor, or NULL if we don't have one */
    rid_form_item *		form;		/* The current form the we are in, or NULL */
    rid_table_item *            table;          /* The current table we are in, or NULL */

    int                         mode;

    STRING                      inhand_string;
    int                         inhand_reason;

    rid_frame *                 frameset_stack[MAX_NESTING];  /* current frameset stack */
    int                         frameset;
    int                         noframe;

} HTMLCTX;

typedef HTStructered HTMLCTX;

#define htmlctxof(x) ((HTMLCTX*)(x)->clictx)

typedef struct { char *str; int tag; } strtag;

/*****************************************************************************/

/* The major routines corresponding to top level tags */


/*****************************************************************************/

extern void parse_frames(int yes);

#endif
