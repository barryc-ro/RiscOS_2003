
import james, os, sys

from stat import *

separator = '/'
verbose = 1

opj = os.path.join

def copynewer(f, t):
    if verbose: print 'Copy ', f, ' to ', t

    ssf = os.stat(f)
    try:
        sst = os.stat(t)
        exists = 1
    except:
        exists = 0

    if (not exists or (ssf[ST_MTIME] > sst[ST_MTIME])):
        if (os.name == 'riscos'):
            os.system('copy ' + f + ' ' + t + ' ~c~vf~r~q')
        else:
            sys.stderr.write("Can't copy on this platform " + os.name)
            sys.exit(1)

# given blah/c return c.blah
# given blah/c~ return c.blah~

def ixroname(thisname):
    n, e = os.path.splitext(thisname)
    if not e or len(e) < 2 or not separator in e:
        return thisname,None

    t = '~'
    e = e[1:]
    if e[-1] == t:
        e = e[:-1]
    else:
        t = ''

#    if len(e) != 1:
#        return None,None

    return opj(e, n + t), e


# given c, blah return blah/c
# given c, blah~ return blah/c~

def roixname(dir, file):
    if file[-1] == '~':
        t = file[:-1] + separator + dir + '~'
    else:
        t = file + separator + dir
    return t

# Copy newer a riscos directory dirro, containing files and extension
# directories to unix dir dirix swapping extensions.

def copytoix(dirro, dirix):
    if verbose: print 'Copy riscos: '+dirro+' to unix: '+dirix

    os.mkdir(dirix, 0)

    files,dirs,o = james.list_fdo(dirro)

    for thisfile in files:
        if thisfile[-1] <> '~':
            fullfile_ro = opj(dirro, thisfile)
            fullfile_ix = opj(dirix, thisfile)
            copynewer(fullfile_ro, fullfile_ix)

    for thisdir in dirs:
        ffiles,fdirs,fo = james.list_fdo(opj(dirro, thisdir))
        for thisfile in ffiles:
            fullfile_ro = opj(dirro, opj(thisdir, thisfile))
            fullfile_ix = opj(dirix, roixname(thisdir, thisfile))
            copynewer(fullfile_ro, fullfile_ix)

# Copy newer a riscix directory dirix, containing files
# riscos dir dirro creating extension directories

def copytoro(dirix, dirro):

    if verbose: print 'Copy unix: '+dirix+' to riscos: '+dirro

    os.mkdir(dirro, 0)

    files,dirs,o = james.list_fdo(dirix)
    for thisfile in files:
        if thisfile[-1] <> '~':
		fullfile_ro, ext_dir = ixroname(thisfile)
		if ext_dir: os.mkdir(opj(dirro, ext_dir), 0)
        	fullfile_ro = opj(dirro, fullfile_ro)
	        fullfile_ix = opj(dirix, thisfile)
        	copynewer(fullfile_ix, fullfile_ro)

def usage():
    print 'Usage: ixrocopy "ixro"|"roix" <from> <to>'
    print __doc__
    sys.exit(1)

def main(argv):
    if len(argv) != 4:
        usage()

    if argv[1] == 'ixro':
        copytoro(argv[2], argv[3])
    elif argv[1] == 'roix':
        copytoix(argv[2], argv[3])
    else:
        usage()

if __name__ == '__main__':
	main(sys.argv)
