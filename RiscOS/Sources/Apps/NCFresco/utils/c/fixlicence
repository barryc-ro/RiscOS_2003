/* -*-c-*- */

/* fixlicence.c */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#include "Serial.h"

#define MAX_SIZE	(512*1024)

static char *key_string = "MARK twain STNG c   0   4   8   c   0   4   8   ";

int main(int argc, char **argv)
{
    FILE *fh;
    int size;
    char *buffer;
    int mark;
    int i;
    int lnum;
    char *le;

    if (argc < 3 || argc > 4)
    {
	fprintf(stderr, "Usage: Fixlicence <runimage> <number> [<license name>]\n");
	exit(1);
    }

    lnum = atoi(argv[2]);
    if (argc == 4)
	le = argv[3];
    else
	le = "ANT Ltd. internal use only.";

    fh = fopen(argv[1], "rb+");

    if (fh == NULL)
    {
	fprintf(stderr, "Usage: Fixlicence <runimage>\n");
	exit(1);
    }

    buffer = malloc(MAX_SIZE);
    if (buffer == NULL)
    {
	fprintf(stderr, "Not enough memory\n");
	exit(1);
    }

    size = fread(buffer, 1, MAX_SIZE, fh);

    printf("File is %d bytes long\n", size);

    mark = *((int*) key_string);

    for(i=0; i < size; i += sizeof(int))
    {
	if ((*((int*) (buffer+i)) == mark) && strcmp(key_string, buffer+i) == 0)
	{
            char outbuf[64];

	    printf("Found key string at offset %d (0x%x)\n", i, i);

	    strncpy(buffer+i, le, 30);
	    buffer[i+30] = 0;

	    serial_encode(buffer+i, lnum, outbuf);

            printf("embed string is '%.48s'\n", outbuf);
            printf("embed string is '%.48s'\n", outbuf+31);
	    break;
	}
    }

    if (i >= size)
	printf("Key string not found\n");
    else
    {
	rewind(fh);
	fwrite(buffer, 1, size, fh);
    }

    fclose(fh);

    return 0;
}
