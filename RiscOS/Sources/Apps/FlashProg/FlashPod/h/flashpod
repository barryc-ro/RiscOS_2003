/*  Acorn podule card flash ROM programmer.
 *
 *  04-Sep-1997 jfarrell - Created.
 *  24-Jun-1999 jfarrell - Increase MAX_SECTORS to 32 for SST39SF010
 */

#ifndef _FLASHPOD_H
#define _FLASHPOD_H

#ifndef TRUE
#define TRUE 1
#endif

#ifndef FALSE
#define FALSE 0
#endif

/*  Podule slot addressing
 */
#define PODULE_SLOT		0
#define PODULE_SPACE(slot)	(unsigned int *)(0x88000000+((slot)<<24))
#define PODULE_SIZE		0x1000000

#define MEG		(1024*1024)
#define MEGBIT		(1024*1024/8)

/* Flash memory manufacturer and device id's
 */
#define MAN_INTEL	0x0089
#define MAN_SHARP	0x00B0
#define MAN_AMD		0x0001
#define MAN_FUJITSU	0x0004
#define MAN_SST		0x00BF
#define MAN_ATMEL       0x001F

#define	DEV_28F016Su	0x6688
#define	DEV_28F016Sx	0x66A0
#define DEV_29F040	0x00A4
#define DEV_29F010	0x0020
#define DEV_39SF010	0x00B5
#define DEV_49F001T     0x0004
#define DEV_49F001      0x0005
#define DEV_49F040T	0x0012
#define DEV_49F040	0x0013

/*  Flash device flags
 */
#define FLG_TIMEOUT	(1u << 0)	/* Device has its own timeout function */

/*  Forward declaration to make incomplete type.
 */
struct flash;

/* Typedefs for flash device virtual function pointers.
 */
typedef int		(*ReadFP) (
    const struct flash *device,
    size_t size,
    unsigned char *buff
);

typedef int		(*EraseSectorFP) (
    const struct flash *device,
    unsigned sector
);

typedef int		(*EraseFP) (
    const struct flash *device
);

typedef int		(*WriteFP) (
    const struct flash *device,
    size_t size,
    const unsigned char *buff
);

/*  The address space of a flash device is typically divided into 'sectors'
 *  which may be independently erased.
 *  This is the max number of sectors for any supported device.
 */
#define MAX_SECTORS	32

/*  Structure representing an instance of a podule flash device.
 */
struct flash
{
    /*  The first two fields are read from the device and used to look up
     *  the other information in a table.
     */
    int 		man;			/* manufacturer code */
    int			dev;			/* device type code */

    int			size;    		/* size in bytes of device */
    char		name[128];		/* Human-friendly device description */

    unsigned int	flags;			/* device property flags */
    int			nsectors;		/* number of sectors in this device */
    unsigned		sectors[MAX_SECTORS];	/* sector starting addresses */


    unsigned int	*baseaddr;		/* base address at which device
    						   is memory-mapped in podule space */

    /*  Virtual function pointer table.
     *  This is filled in by the device xxx_create routine with pointer to the
     *  functions for that type of device.
     */
    ReadFP		read;
    EraseSectorFP	erase_sector;
    EraseFP		erase;
    WriteFP		write;
};

/*  Virtual method dispatch macros.
 */

#define flash_read(_d, _s, _b) 		(*(_d)->read) (_d, _s, _b)
#define flash_erase_sector(_d, _s) 	(*(_d)->erase_sector) (_d, _s)
#define flash_erase(_d) 		(*(_d)->erase) (_d)
#define flash_write(_d, _s, _b)		(*(_d)->write) (_d, _s, _b)

#endif /* _FLASHPOD_H */
