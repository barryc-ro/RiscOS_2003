/*
 * AddrFile.c - Create exported address records
 *              Decode imported address records
 *
 * R C Manby
 *
 * Started 06 November 1997
 */

/* ANSI Libraries */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "StdTypes.h"

#include "functions.h"
#include "SetupIF.h"
#include "numconvert.h"
#include "AddrFile.h"

#include "FileOps.h"


/*>>>where should these live???*/
#define DEVICE_NAME "Daytona"
#define DEVICE_CLASS 1




static BOOL core_details(FILE *fp);
static BOOL file_details(FILE *fp, int text_files, int tiff_files, BOOL tiff_streaming);

/*
 * Create a static Address and Capabilities record
 * to be retreived by an incoming call.
 *
 * (We might use this to create a file holding address details
 *  decoded from an incoming email)
 *
 * Returns TRUE/FALSE for success/fail
 */


extern BOOL Create_Recipient_AddressRecord(const char *directory, const char *leafname)
{
    FILE *fp;
    BOOL ok = FALSE;	/* presume failure */
    char fullname[200];

	strcpy(fullname, directory);
	strcat(fullname, ".");
	strcat(fullname, leafname);
	
    if ((fp = fopen(fullname, "rb")) == NULL)
        return(FALSE);	/* file won't open */

    ok = core_details(fp);

    fclose(fp);

    if (ok)
        set_filetype(fullname, FILETYPE_TEXT);
    else
        remove_fileDL(directory, leafname);

    return(ok);	/* TRUE/FALSE for pass/fail indication */
}



/*
 * Create an Address, Capabilities and Command/filelist file
 * to be sent to a Daytona when we originate a call
 *
 * Returns TRUE/FALSE for success/fail
 */

extern BOOL Create_Originator_File(const char *directory, const char *leafname, int text_files, int tiff_files, BOOL tiff_streaming)
{
    FILE *fp;
    BOOL ok = FALSE;	/* presume failure */
    char fullname[200];

	strcpy(fullname, directory);
	strcat(fullname, ".");
	strcat(fullname, leafname);

    if ((fp = fopen(fullname, "rb")) == NULL)
        return(FALSE);	/* file won't open */

    ok = core_details(fp);

    if (ok)
        ok = file_details(fp, text_files, tiff_files, tiff_streaming);

    fclose(fp);

    if (ok)
        set_filetype(fullname, FILETYPE_TEXT);
    else
        remove_fileDL(directory, leafname);

    return(ok);	/* TRUE/FALSE for pass/fail indication */
}


/*
 * Write user details and device capabilities - common to both originator and recipient files
 *
 * In fp - a file open for writing
 *
 * Returns TRUE/FALSE for success/fail
 */
static BOOL core_details(FILE *fp)
{
    char fax_num[64];
    char phone_num[64];

    numconvert_usernum_to_email(setup_fax_number        , /*out*/fax_num  , setup_fax_country_code, setup_fax_area_code);
    numconvert_usernum_to_email(setup_voice_country_code, /*out*/phone_num, setup_voice_area_code , setup_voice_number);


    fprintf(fp, "Serial: %d\n"      , eeprom_serial_number);
    fprintf(fp, "Contact: %s\n"     , setup_contact_name);
    fprintf(fp, "Organization: %s\n", setup_company_name);
    fprintf(fp, "Device: %s\n"      , DEVICE_NAME);
    fprintf(fp, "Device-Class: %d\n", DEVICE_CLASS);
    fprintf(fp, "Email: %s\n"       , setup_from_mailaddress);
    fprintf(fp, "Fax-Number: %s\n"  , fax_num);
    fprintf(fp, "Phone-Number: %s\n", phone_num);

	return(TRUE);	/*>>>look for file errors*/
}


static BOOL file_details(FILE *fp, int text_files, int tiff_files, BOOL tiff_streaming)
{
    if (text_files > 0)
        fprintf(fp, "TEXT %d\n", text_files);

	if ((tiff_files > 0) || (tiff_streaming))
	{
	    if (tiff_streaming)
            fprintf(fp, "TIFF_2DMMR, %d+", tiff_files);	/* a plus after number implies still scanning other pages */
        else
            fprintf(fp, "TIFF_2DMMR, %d", tiff_files);
    }

	return(TRUE);	/*>>>look for file errors*/
}


/* end of AddrFile.c */
