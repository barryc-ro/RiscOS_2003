/************************************************************************/
/* File:    runes.c                                                     */
/* Purpose: File contains code to deal with the Soft and Hard keys on   */
/*          Daytona.  Contains state tables for what to do in each      */
/*          circumstance.                                               */
/*                                                                      */
/* Author:  Neil Bingham (mailto:NBingham@acorn.co.uk)                  */
/* History: Thu 31st July 1997    - ver 0.01 - Created.                 */
/************************************************************************/


/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */
#include "BuildFlags.h"
#include "StdTypes.h"
#include "main.h"
#include "functions.h"

# if KLUDGE_NAN
extern int global_forceNAN;
#endif
#if KLUDGE_ROUTING
extern int global_routing;
#endif

/* ---------------------------------- PRE-PROCESSOR DIRECTIVES ---------------------------------- */


/* -------------------------------------- GLOBAL VARIABLES -------------------------------------- */


/* ----------------------------------------- FUNCTIONS ------------------------------------------ */

/************************************************************************/
/* sk_1_pressed                                                         */
/*                                                                      */
/* Function does something when softkey 1 is pressed depending on which */
/* window is open.                                                      */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void sk_1_pressed(void)
{
  /* Should open address book */
  if (ui_currently_open_win == Home_WindowHandle)
  {
    debug_beep();

    /* open main address book screen */
    ui_open_other_program_window(Open_DayAdd_Main, /*flags*/0);
    /* close our Main_Window, using ui_close_display(), when Open_DayAdd_Main_Ack arrives */
  }
}


/************************************************************************/
/* sk_2_pressed                                                         */
/*                                                                      */
/* Function does something when softkey 3 is pressed.                   */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void sk_2_pressed(void)
{
  /* Should open enote editor */
  if (ui_currently_open_win == Home_WindowHandle)
  {
    debug_beep();

    /* open Enote editor screen */
    ui_open_other_program_window(Open_DayNote_Choice, /*flags*/0);
    /* close our Main_Window, using ui_close_display(), when Open_DayNote_Choice_Ack arrives */
  }
}


/************************************************************************/
/* sk_3_pressed                                                         */
/*                                                                      */
/* Function does something when softkey 3 is pressed.                   */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void sk_3_pressed(void)
{
  if (ui_currently_open_win == Home_WindowHandle)
  {
    debug_beep();

    /* open Options screen - call !SetUp */
    ui_open_other_program_window(Open_DaytSetup_Main, /*flags*/0);
    /* close our Main_Window, using ui_close_display(), when Open_DaytSetup_Main_Ack arrives */
  }
}


/************************************************************************/
/* sk_4_pressed                                                         */
/*                                                                      */
/* Function does something when softkey 4 is pressed.                   */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void sk_4_pressed(void)
{
/* If the animation slideshow option is set then put Daytona under the spotlight! */
#if ANIMATION_SLIDESHOW
  if (ui_currently_open_win == Home_WindowHandle)
  {
    slideshow();
  }
#endif
}


/************************************************************************/
/* help_pressed                                                         */
/*                                                                      */
/* Function does something when Help key is pressed.                    */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    TRUE or FALSE.                                           */
/*                                                                      */
/************************************************************************/
void help_pressed(void)
{
#if 0
  _kernel_oserror	*er;

  /* Toggle the state of BubbleHelp */
  er = ui_bubblehelp(2);
  error_check(er);
#endif
}


/************************************************************************/
/* back_pressed                                                         */
/*                                                                      */
/* Function opens the next window up in the chain.                      */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void back_pressed(void)
{
  debug_beep();
}


/************************************************************************/
/* email_pressed                                                        */
/*                                                                      */
/* Function requests sending of queued emails then retreival of mail    */
/* waiting at the ISP.                                                  */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void email_pressed(void)
{
  if (ui_currently_open_win == Home_WindowHandle)
  {
#if KLUDGE_ROUTING  
    global_routing = ((global_routing + 1) & 1);

    if (global_routing == 0)
      ui_home_set_status(2, "FaxMode", NULL, NULL);
    else
      ui_home_set_status(2, "DataMode", NULL, NULL);
#endif
#if SUPPORT_EMAIL
	isp_dialup_user_request = TRUE;
#endif
    debug_beep();
  }
}

/************************************************************************/
/* cancelfax_pressed                                                    */
/*                                                                      */
/* Function requests the cancelation of the current fax scan and send.  */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern BOOL user_request_cancel_fax; /*>>>temporary*/
void cancelfax_pressed(void)
{
#if KLUDGE_NAN
  if (ui_currently_open_win == Home_WindowHandle)
  {
    global_forceNAN = ((global_forceNAN + 1) & 1);

    if (global_forceNAN == 0)
      ui_home_set_status(1, NULL, NULL, NULL);
    else
      ui_home_set_status(1, "ForceNAN", NULL, NULL);
      
    debug_beep();
  }
#endif
  user_request_cancel_fax = TRUE;  
}


/************************************************************************/
/* home_pressed                                                         */
/*                                                                      */
/* Function opens Home_WindowHandle when Home is pressed.               */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void home_pressed(void)
{
#if 0
  /* shouldn't need to do anything as we only have one screen */	
  ui_open_window(1,Home_WindowHandle,"Home_Title","Home_SK1","Home_SK2","Home_SK3", "Home_SK4", -1);
#endif
}






