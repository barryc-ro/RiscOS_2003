/*
 * zFakeScan.c
 *
 */


#include "StdTypes.h"

#include <stdio.h>
#include <stdlib.h>
#include <stddef.h>
#include "kernel.h"
#include "swis.h"

#include "toolbox.h"

#include "PageList.h"
#include "StateKicker.h"
#include "LocXfer.h"
#include "RemXfer.h"
#include "LocModem.h"

#include "DaytonaHW.h"
#include "wimp.h"
#include "wimplib.h"
#include "Serial.h"
#include "FaxIF.h"
#include "AddrBookIF.h"

static void OffHook(void);
static void OnHook(void);
static void DialNumber(void);
static void RxPageStart(int page);
static void RxPageEnd(int page);
static void RxComplete(int page);


/************************************************************************/
/* menu_f2_clicked                                                      */
/*                                                                      */
/* Function does something                                              */
/*                                                                      */
/* Parameters: Toolbox event parameters                                 */
/*                                                                      */
/* Returns:    TRUE or FALSE                                            */
/*                                                                      */
/************************************************************************/
int menu_f2_clicked(int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  static int page = 0;

  switch(id_block->self_component)
  {
    case(0x20):
    {
    	test_emailsend();
		break;
    }
    case(0x21):
    {
/*      StateKicker_SendMessage(RemXfer_StateMachine, SQ_RX_DIAL_ISP_rx, NULL);*/
      break;
    }
  }

	/* deliver the queued messages */
    while (StateKicker_Deliver() > 1)
    	/* null statement */;

  return(TRUE);
}


static void OffHook(void)
{
	WimpMessage message;

    message.hdr.size = sizeof(WimpMessage);
	message.hdr.your_ref = 0;	/* originate message */
	message.hdr.action_code = Wimp_MDaytonaHW_LocalFaxReceiver;
	message.data.words[0] = DaytonaHW_LocalFaxReceiver_OffHook;
	(void)wimp_send_message(Wimp_EUserMessage, (WimpMessage*)&message, 0, 0, 0);
}

static void OnHook(void)
{
	WimpMessage message;

    message.hdr.size = sizeof(WimpMessage);
	message.hdr.your_ref = 0;	/* originate message */
	message.hdr.action_code = Wimp_MDaytonaHW_LocalFaxReceiver;
	message.data.words[0] = DaytonaHW_LocalFaxReceiver_OnHook;
	(void)wimp_send_message(Wimp_EUserMessage, (WimpMessage*)&message, 0, 0, 0);
}

static void DialNumber(void)
{
	WimpMessage message;

    message.hdr.size = sizeof(WimpMessage);
	message.hdr.your_ref = 0;	/* originate message */
	message.hdr.action_code = Wimp_MDaytonaHW_FakeExchange;
    message.data.words[0] = DaytonaHW_MFakeExchange_CapturedNumber;
    strcpy(&message.data.bytes[4], "100");
	(void)wimp_send_message(Wimp_EUserMessage, (WimpMessage*)&message, 0, 0, 0);
}

static void RxPageStart(int page)
{
#if 0
	FaxRCMessage faxrcmessage;

	faxrcmessage.hdr.size = sizeof(FaxRCMessage);
	faxrcmessage.hdr.your_ref = 0;	/* originate message */
	faxrcmessage.hdr.action_code = Wimp_FaxRC;
	faxrcmessage.data.port = Modem[LOCMODEM].PortNumber;
	faxrcmessage.data.rc   = Info_Receiving_Page;

	(void)wimp_send_message(Wimp_EUserMessage, (WimpMessage*)&faxrcmessage, 0, 0, 0);
#endif
}


static void RxPageEnd(int page)
{
#if 0
	FaxRCMessage faxrcmessage;

	faxrcmessage.hdr.size = sizeof(FaxRCMessage);
	faxrcmessage.hdr.your_ref = 0;	/* originate message */
	faxrcmessage.hdr.action_code = Wimp_FaxRC;
	faxrcmessage.data.port = Modem[LOCMODEM].PortNumber;
	faxrcmessage.data.rc   = Info_Received_Page;
	faxrcmessage.data.lastpage = page;

	(void)wimp_send_message(Wimp_EUserMessage, (WimpMessage*)&faxrcmessage, 0, 0, 0);
#endif
}


static void RxComplete(int page)
{
#if 0
	FaxRCMessage faxrcmessage;

	faxrcmessage.hdr.size = sizeof(FaxRCMessage);
	faxrcmessage.hdr.your_ref = 0;	/* originate message */
	faxrcmessage.hdr.action_code = Wimp_FaxRC;
	faxrcmessage.data.port = Modem[LOCMODEM].PortNumber;
	faxrcmessage.data.rc   = Info_Normal_Termination;
	faxrcmessage.data.lastpage = page;

	(void)wimp_send_message(Wimp_EUserMessage, (WimpMessage*)&faxrcmessage, 0, 0, 0);
#endif
}


/* zFakeScan.c */

