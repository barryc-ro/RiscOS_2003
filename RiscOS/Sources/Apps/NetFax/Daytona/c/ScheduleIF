/*
 * ScheduleIF.c - Interface to update via email
 *
 * R C Manby
 *
 * Started 22 December 1997
 */


#include "StdTypes.h"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "kernel.h"

#include "PageList.h"
#include "StateKicker.h"
#include "SendQ.h"
#include "ScheduleIF.h"

#include "functions.h"
#include "wimp.h"
#include "wimplib.h"


/*
 * Process wimp messages from ISP dialup scheduler
 */

extern int ScheduleIF_WimpMessageHandler(WimpMessage *message, void *handle)
{
	switch (message->hdr.action_code)
    {
    	case Dayt_Schedule_Message:
	    	{
				Dayt_SchedBlock *send = (Dayt_SchedBlock *)message;
				Dayt_SchedBlock  reply;

                isp_dialup_timer_request = TRUE;    /* request a dialup */

                /* The ISP dialup scheduler sends a message when its requires a dialup.  */
                /* It repeats the message at regular intervals until it is acknowledged. */

                /* Arguably we should only send the acknowledge after a sucessful connection */
                /* to the ISP, but since we retry regularly once isp_dialup_timer_request is */
                /* set its probably OK to acknowledge immediately.                           */

                reply.Hdr.size        = sizeof(Dayt_SchedBlock);
				reply.Hdr.your_ref    = send->Hdr.my_ref;	/* replying to senders message      */
				reply.Hdr.action_code = Dayt_Sched_Ack;     /* saying we received it            */
	            reply.data            = send->data;
	                        
				/* reply directly to task that sent the message */
				(void)wimp_send_message(Wimp_EUserMessage, (WimpMessage*)&reply, send->Hdr.sender, 0, 0);
				/* we don't care about errors */
			}
			break;
	}

	return(1);	/* processed */
}


/* end of ScheduleIF.c */
