/*
 * EnoteIF.c - Interface to !Enote
 *
 * R C Manby
 *
 * Started 19 November 1997
 */


#include "StdTypes.h"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "kernel.h"
#include "FileOps.h"

#include "PageList.h"
#include "StateKicker.h"
#include "SendQ.h"
#include "PrintQ.h"

#include "wimp.h"
#include "wimplib.h"

#include "AddrBookIF.h"
#include "EnoteIF.h"
#include "DataArea.h"
#include "SetupIF.h"


static void DataRelease(int task_id, int data_area_id);


/*
 * Process wimp messages from !Enote
 */

extern int EnoteIF_WimpMessageHandler(WimpMessage *message, void *handle)
{
    static unsigned int stash_SendQ_pid = 0;	/* pid of document in SendQ */
    static unsigned int stash_PrintQ_pid = 0;	/* pid of document in PrintQ */

    switch (message->hdr.action_code)
    {
        case DayNote_Send:
            {
                DayNote_Send_Message *send = (DayNote_Send_Message *)message;
                DayNote_Path      reply;
          
                /* DayNote_SendMail messages are paired, the first specifies whether the Enote is to  */
                /* be emailed, printed or both. We create one document in the SendQ or PrintQ or both */
                /* telling !Enote the directory name(s). The second message arrives when !Enote       */
                /* has written the file(s) to the directory(s) and marks the document(s) as complete. */
          
          /*>>>RCM says this doesn't matter as spec calls for print out AFTER enote is sent, which we request as a parameter to SendQ_ExtIF_NewDocument() */
          
                if (send->data.action_flags & ActionFlags_FormSend)
                {
                    /* form send */
                }
                else
                {
                    /* enote send */
          
                    if (send->data.action_flags & ActionFlags_Initiate)
                    {
                        /* intitate */
                        /* user may want a hardcopy of the note and/or an acknowledgment of receipt */
                        if ((stash_SendQ_pid = SendQ_ExtIF_NewDocument(reply.data.path_data, "" /*email_address*/, configured_enote_hardcopy_required, configured_request_receipt)) != 0)
                        {
                            AddressRec *pAddressRecord;
            
                            if ((pAddressRecord = SendQ_AddressRecord_from_pid(stash_SendQ_pid)) != NULL)
                            {
                                if (send->data.action_flags & ActionFlags_OneShotData)
             	                {
             	                    strcpy(pAddressRecord->EmailAddress, send->data.data_area->oneshot_email_address);
                                    /*>>>pAddressRecord->DeviceClass do we care?*/
             	                    /* we've only got an email address, so must RouteISP */
                                    pAddressRecord->LocalRouting = RouteISP;
                                }
                                else
                                {
                                    strcpy(pAddressRecord->ContactName, send->data.data_area->contact_name);
                                    strcpy(pAddressRecord->EmailAddress, send->data.data_area->email_address);
                                    strcpy(pAddressRecord->DirectPhoneNumber, send->data.data_area->fax_number);
                                    pAddressRecord->DeviceClass = send->data.data_area->device_class;
                                    /*>>>should this be RouteISP always??? check EmailAddress valid???*/
                                    pAddressRecord->LocalRouting = RouteISP;
            
                                }
                                DataRelease(send->Hdr.sender, send->data.data_area_id);
                            }
            
                            reply.Hdr.size        = sizeof(DayNote_Path);
                            reply.Hdr.your_ref    = send->Hdr.my_ref;	/* replying to senders message      */
                            reply.Hdr.action_code = DayNote_PathReply;	/* supplying a directory to...      */
                            /* ...put the file to be emailed in */
                            reply.data.action_flags     = ActionFlags_EnoteSend;
            
                            /* reply directly to task that sent the message */
                            (void)wimp_send_message(Wimp_EUserMessage, (WimpMessage*)&reply, send->Hdr.sender, 0, 0);
                            /* we don't care about errors */
                        }
                    }
                    else
                    {
                        /* !Enote is telling us that the files to send and/or print have been created */
          
                        if (stash_SendQ_pid != 0)
                        {
                            SendQ_ExtIF_Subject(stash_SendQ_pid, send->data.subject);
	                	    SendQ_ExtIF_FileComplete(stash_SendQ_pid, "Enote", PageClass_Text, PageType_Text_ENote, FILETYPE_TEXT);	/* count 1 file - restricted text email */
                            SendQ_ExtIF_DocumentComplete(stash_SendQ_pid);	/* ready to send */
                        }
          
                        if (stash_PrintQ_pid != 0)
                        {
	                	    PrintQ_ExtIF_FileComplete(stash_PrintQ_pid, "Enote", PageClass_Text, PageType_Text_ENote, FILETYPE_TEXT);	/* count 1 text-file */
                            PrintQ_ExtIF_DocumentComplete(stash_PrintQ_pid);  /* ready to print */
                        }
                    }
                }
            }
            break;
    }

  return(1);	/* processed */
}


static void DataRelease(int task_id, int data_area_id)
{
	Daytona_DataRelease_Message reply;

	reply.hdr.size = sizeof(Daytona_DataRelease_Message);
	reply.hdr.your_ref    = 0;		 /* original message */
	reply.hdr.action_code = Daytona_DataRelease_MessageNum;

    reply.application_code = DataRelease_AppCode_DayNote;
	reply.data_area_id = data_area_id;

	/* reply directly to task that sent the message */
	(void)wimp_send_message(Wimp_EUserMessage, (WimpMessage*)&reply, task_id, 0, 0);
    /* we don't care about errors */
}

/* end of EnoteIF.c */
