/* File:    emailrx.h
 * Purpose: Daytona email receive
 * Author:  Ben Laughton
 * History:
 *
 * 1997-10-22: BAL
 * Created.
 */

#ifndef daytona_emailrx_h
#define daytona_emailrx_h

#ifdef __cplusplus
extern "C" {
#endif

/* =============================================================================
 * Include header files
 */

/* NetFax specific libraries */
#include "NetFax/NFELib/NFELib.h"

/* Daytona */
#include "list.h"




/* =============================================================================
 * Define constants
 */

#define MessageFlags_Download        0x00000001
#define MessageFlags_Downloaded      0x00000002
#define MessageFlags_Printing        0x00000004
#define MessageFlags_Printed         0x00000008
#define MessageFlags_JustPrinted     0x00000010
#define MessageFlags_Partial         0x00000020

enum
{
    EmailSupport_None,
    EmailSupport_Partial,
    EmailSupport_Full
};




/* =============================================================================
 * Define types
 */

typedef void *  document_handle;

typedef struct
{
    list_item_handle  item_handle;

    unsigned int      size;
    char *            unique_id;
    NFE_message_id    nf_message_id;

    union
    {
        struct
        {
            unsigned int  download     : 1;
            unsigned int  downloaded   : 1;
            unsigned int  printing     : 1;
            unsigned int  printed      : 1;
            unsigned int  just_printed : 1;
            unsigned int  partial      : 1;
        } bits;

        unsigned int  value;
    } flags;

    unsigned int      lines;    /* number of lines of message to download */
} message_t;




/* =============================================================================
 * Declare function prototypes
 */

extern int emailrx_initialise (void);

extern void emailrx_finalise (void);

extern int emailrx_new_message (const unsigned int        size,
                                const NFE_header *const   header,
                                const char *const         unique_id,
                                int *const                delete_message);

extern int  emailrx_decide_download (unsigned int  free_space);

extern int emailrx_need_missing_page_report (const document_handle    document);

extern char *  emailrx_generate_missing_page_report (
                   const document_handle    document,
                   char *const              remote_report_filename,
                   const NFE_header *const  header);

extern int  emailrx_need_printed_page_report (
                const document_handle    document);

extern int emailrx_printed_page_report (
               const document_handle    document,
               const char *const        filename,
               const NFE_header *const  header);

extern int emailrx_cover_sheet (const document_handle    document_info,
                                char *const              report,
                                size_t                   report_size,
                                const NFE_header *const  header);

extern void emailrx_display_doc (document_handle document_info);

extern list_handle emailrx_get_doc_list (void);

extern list_handle emailrx_get_doc_msg_list (
                       const document_handle document_info);

extern int emailrx_check_supported (const NFE_msg_class     message_class,
                                    const NFE_NF_msg_class  nf_message_class);

extern char *emailrx_construct_full_address (
                 const NFE_address *const  address,
                 const int                 gs_trans);

extern char *emailrx_generate_report_from_message (char *  message_token,
                                                   char *  param0,
                                                   char *  param1,
                                                   char *  param2,
                                                   char *  param3);

extern void  emailrx_message_downloaded (message_t *const  message);

extern void  emailrx_message_printed (message_t  *const  message);

extern void emailrx_tidy (void);

extern int  emailrx_document_requires_printing (document_handle  document);


extern int  emailrx_is_document_new (document_handle  document);

extern int  emailrx_get_number_messages (document_handle     document,
                                         const unsigned int  flags_mask,
                                         const unsigned int  flags_match);

#ifdef TEST
extern void  emailrx_dump_doc_list_to_file (const list_handle  list,
                                            const char *const  filename);
#endif

#ifdef __cplusplus
}
#endif

#endif
