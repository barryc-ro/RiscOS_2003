/* File:    DiallerBIF.h
 * Purpose: Give Daytona a straightforward interface to the DiallerB module
 * Author:  Ben Laughton
 *
 * Copyright 1998 Acorn Computers Ltd
 *
 * This material is the confidential trade secret and proprietary information
 * of Acorn Computers. It may not be reproduced, used sold, or transferred to
 * any third party without the prior written consent of Acorn Computers.
 * All rights reserved.
 *
 * History:
 *
 * 1998-03-13: BAL
 * Created.
 *
 * 1998-06-04: BAL
 * Changed interface of monitor routines and added aesthetically pleasing
 * definitions for the values they return.
 */

#ifndef Daytona_DiallerBIF_h
#define Daytona_DiallerBIF_h

/* =============================================================================
 * Include header files
 */

/* CLib */
#include "kernel.h"




/* =============================================================================
 * Define constants
 */

enum
{
    DiallerBIF_ScriptCompleted,
    DiallerBIF_ScriptFailed,
    DiallerBIF_ScriptExecuting
};




/* =============================================================================
 * Declare function prototypes
 */

/* -----------------------------------------------------------------------------
   diallerb_status

   Read DiallerB's status word.

   Outputs
   dialler_status: DiallerB's status word

   Returns
   success: NULL
   failure: pointer to error block
 */

extern _kernel_oserror *  diallerb_status (unsigned int *const  dialler_status);




/* -----------------------------------------------------------------------------
   diallerb_start_dial_script

   Get DiallerB to start executing a dial script.

   Inputs
   force_reset:   non-zero to force DiallerB to reset modem before starting
   dial_script:   pointer to script to use to dial this connection
   hangup_script: pointer to script to use to hangup this connection
   serial_in:     serial input stream handle
   serial_out:    serial output stream handle

   Returns
   success:  NULL
   failure: pointer to error block
 */

extern _kernel_oserror *  diallerb_start_dial_script (
                              const int          force_reset,
                              const char *const  dial_script,
                              const char *const  hangup_script,
                              const int          serial_in,
                              const int          serial_out);




/* -----------------------------------------------------------------------------
   diallerb_monitor_dial_script

   Monitor the progress of a dial script and inform the caller if the script
   has reached a terminal state.

   Inputs
   dialler_status:  new dialler status word to check

   Returns
   DiallerBIF_ScriptCompleted: script completed successfully
   DiallerBIF_ScriptFailed:    script failed
   DiallerBIF_ScriptExecuting: script still executing
 */

extern int  diallerb_monitor_dial_script (const unsigned int  dialler_status);




/* -----------------------------------------------------------------------------
   diallerb_start_answer_script

   Get DiallerB to start executing an answer script.

   Inputs
   force_reset:   non-zero to force DiallerB to reset modem before starting
   answer_script: pointer to answer script to use
   hangup_script: pointer to hangup script to use
   serial_in:     serial input stream handle
   serial_out:    serial output stream handle

   Returns
   success: NULL
   failure: pointer to error block
 */

extern _kernel_oserror *  diallerb_start_answer_script (
                              const int          force_reset,
                              const char *const  answer_script,
                              const char *const  hangup_script,
                              const int          serial_in,
                              const int          serial_out);




/* -----------------------------------------------------------------------------
   diallerb_monitor_answer_script

   Monitor the progress of a dial script and inform the caller if the script
   has reached a terminal state.

   Inputs
   dialler_status:  new dialler status word to check

   Returns
   DiallerBIF_ScriptCompleted: script completed successfully
   DiallerBIF_ScriptFailed:    script failed
   DiallerBIF_ScriptExecuting: script still executing
 */

extern int  diallerb_monitor_answer_script (const unsigned int  dialler_status);




/* -----------------------------------------------------------------------------
   diallerb_start_hangup_script

   Get DiallerB to start executing a hangup script.

   Returns
   success:  NULL
   failure: pointer to error block
 */

extern _kernel_oserror *  diallerb_start_hangup_script (void);




/* -----------------------------------------------------------------------------
   diallerb_monitor_hangup_script

   Monitor the progress of a hangup script and inform the caller if the script
   has reached a terminal state.

   Inputs
   dialler_status:  new dialler status word to check

   Returns
   DiallerBIF_ScriptCompleted: script completed successfully
   DiallerBIF_ScriptFailed:    script failed
   DiallerBIF_ScriptExecuting: script still executing
 */

extern int  diallerb_monitor_hangup_script (const unsigned int  dialler_status);

#endif
