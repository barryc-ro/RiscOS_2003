/************************************************************************/
/* File:    menuevents.c                                                */
/* Purpose: deal with menu events for testing UI.                       */
/*                                                                      */
/* Author:  Neil Bingham (mailto:NBingham@acorn.co.uk)                  */
/* History: Tue 18th February 1997  ver 0.01 - Created.                 */
/************************************************************************/


#include "include.h"
#include "tbox.h"
#include "error.h"
#include "menuevents.h"
#include "addrbookIF.h"
#include "runes.h"
#include "globals.h"


int menuevents_close_display (int event_code, ToolboxEvent *event, IdBlock *id_block, 
                              void *handle)
{
  IGNORE (event_code); IGNORE (event); IGNORE (id_block); IGNORE (handle);
  
  dprintf (("", "Closing display.\n"));
  ui_close_display ();

  return 1;
}

/************************************************************************/
/* menuevents_quit_program                                              */
/*                                                                      */
/* Function is called when quit is selected from the TaskWindow, or the */
/* user selects quit from the iconbar menu                              */
/*                                                                      */
/* Parameters: ToolboxEventHandler parameters.                          */
/*                                                                      */
/* Returns:    TRUE or FALSE.                                           */
/*                                                                      */
/************************************************************************/
int menuevents_quit_program (int event_code, ToolboxEvent *event, IdBlock *id_block, 
                             void *handle)
{
  IGNORE (event_code); IGNORE (event); IGNORE (id_block); IGNORE (handle);
  
  runes_quit ();
  return 1;
}


int menuevents_open_enotewindow (int event_code, ToolboxEvent *event, 
                                 IdBlock *id_block, void *handle)
{
  IGNORE (event_code); IGNORE (event); IGNORE (id_block); IGNORE (handle);
  
  ui_open_window (Open_SK_Required | Open_SK_Narrow, Choice_WindowHandle,
                  "Choice_Title", "Choice_SK1", "Choice_SK2", "Choice_SK3",
                  "Choice_SK4", -1);
                  
  return 1;
}
