
#include "include.h"
#include "tbox.h"
#include "error.h"
#include "miscwimp.h"
#include "addrbookIF.h"
#include "globals.h"

void miscwimp_free_data_area (int area_id, int task_id, int app_code)
{
  Daytona_DataRelease_Message rel_message;

  dprintf (("", "enote editor sending area_free(0x%x)\n",
            area_id));

  rel_message.hdr.size = sizeof (Daytona_DataRelease_Message);
  rel_message.hdr.your_ref = 0;
  rel_message.hdr.action_code = Daytona_DataRelease_MessageNum;
  rel_message.data_area_id = area_id;
  rel_message.application_code = app_code;

  wimp_send_message (Wimp_EUserMessage, (WimpMessage*) &rel_message,
                     task_id, 0, 0);
}

/* Auxiliary function to fade/unfade a Button */
void miscwimp_fade_gadget (ObjectId object, ComponentId button,
                           Fade_Action action)
{
  unsigned int flags;
  _kernel_oserror *er;

  er = gadget_get_flags (0, object, button, &flags);
  error_check_error (er);

  if (action == Fade)
    flags |= Gadget_Faded;
  else
    flags &= !(Gadget_Faded);

  er = gadget_set_flags (0, object, button, flags);
  error_check_error (er);
}


/* Returns a pointer to a malloced block of memory containing the character
 * string from a writable field */
char *miscwimp_get_writable_value (ObjectId id, ComponentId gadget)
{
  char *buffer = NULL;
  int size;
  _kernel_oserror *er;

  er = writablefield_get_value (0, id, gadget, 0, 0, &size);
  error_check_error (er);

  size++;
  buffer = (char *) malloc (size);
  if (!buffer)
    return NULL;

  er = writablefield_get_value (0, id, gadget, buffer, size, &size);
  error_check_error (er);

  return buffer;
}

