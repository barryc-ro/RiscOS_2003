/*
 * DaytonaIF.h
 *
 */

#ifndef __daytonaIF_h
#define __daytonaIF_h

/*----------------------------------------------------------------------*/

/* Wimp message numbers */
#define DayNote_Send                    0x50FD0
#define	DayNote_PathReply		0x50FD1

/* Leafnames for enote/form output files */
#define Leafname_Enote "Enote"
#define Leafname_Form  "Form"

/* Entry block for sending to !Daytona */
typedef struct DayNote_Send_Message
{
  struct
  {
    int size;
    int sender;
    int my_ref;
    int your_ref;
    int action_code;
  } Hdr;

  struct daynote_cleardata
  {
    int action_flags;  /* Bit 0 unset = enote send,
                                  set = form send.
                          Bit 1 unset = address book data,
                                  set = oneshot data.
                          Bit 2 unset = Finish,
                                  set = initiate. */
    AddressArea *data_area;
    int data_area_id;

    char subject[224];

  } data;
} DayNote_Send_Message;

#define ActionFlags_EnoteSend       0
#define ActionFlags_FormSend        1

#define ActionFlags_AddressData     0
#define ActionFlags_OneShotData (1<<1)

#define ActionFlags_Finished        0
#define ActionFlags_Initiate    (1<<2)

typedef struct daynote_path
{
  struct
  {
    int size;
    int sender;
    int my_ref;
    int your_ref;
    int action_code;
  } Hdr;

  struct daynote_pathdata
  {
    int  action_flags;
    char path_data[232];
  } data;
} DayNote_Path;


extern void DaytonaIF_SendEnote (char, char *, char *);
extern void DaytonaIF_SendForm (char, char *, char *, char *);

extern int DaytonaIF_WimpMessageHandler (WimpMessage *, void *);

#endif

/* end of DaytonaIF.h */
