/************************************************************************/
/* File:    save.c                                                      */
/* Purpose: Handles data saving to Flash                                */
/*                                                                      */
/* Author:  Neil Bingham (mailto:NBingham@acorn.co.uk)                  */
/* History: Wed 27th August 1997    ver 0.01 - Created.                 */
/*          Thu 18th December 1997  ver 0.09 - Done loads to it by now! */
/************************************************************************/

#include <string.h>

/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */
#include "main.h"
#include "functions.h"
#include "messhandle.h"
#include "misc.h"

//int save_routing_lookup (char *);


/*
 * Name       : save_record_to_flash
 * Parameters : pointer to end address of area, pointer to the area id
 * Description:
 */
void save_record_to_flash(char *, char[], char *, char *);

/*
 * Name        : save_swi_call
 * Parameters  : tag string, result buffer, sizeof(buffer)
 * Description : Uses the SFConfigMan calls to save a takenised value to flash
 * Returns     : Appropriate error code
 */
int save_swi_call(char *, char *, int);

_kernel_oserror *save_create_dir(char *);

_kernel_oserror *save_delete_file(char *);

int save_encode_number(char *, char *, int);

int save_pause_convert(int);

/*
 * Name        : save_create_inet
 * Parameters  : input string, length of string
 * Description : Takes the DNS string entered in setup and converts this into upto 3 words
 *		 containing this information
 * Returns     : Nothing
 */
void save_create_inet(char *, int);

/*
 * Name        : save_cis
 * Parameters  : input string, output string
 * Description : Slave function for save_create_inet
 * Returns     : Nothing
 */
void save_cis(char *, char *);

void save_create_login_ext(int, char *, char *, char *);

/*
 * Name        : save_create_login
 * Parameters  : None
 * Description : Compacts a pair of login/response strings into an encoded form
 * Returns     : boolean int
 */
int save_create_login(void);

/*
 * Name        : save_user_settings
 * Parameters  : None
 * Description : Saves the settings from the user window
 * Returns     : boolean int
 */
void save_user_settings(void);

/*
 * Name        : save_datetime_settings
 * Parameters  : None
 * Description : Saves the settings from the date/time window
 * Returns     : Nothing
 */
void save_datetime_settings(void);

/*
 * Name        : save_isp1_settings
 * Parameters  : None
 * Description : Saves the settings from the ISP window
 * Returns     : Nothing
 */
void save_isp1_settings(void);

/*
 * Name        : save_isp2_settings
 * Parameters  : None
 * Description : Saves the settings from the ISP window
 * Returns     : Validity of the login/response strings
 */
int save_isp2_settings(void);

/*
 * Name        : save_misc_settings
 * Parameters  : None
 * Description : Saves the settings from the misc window
 * Returns     : Nothing
 */
void save_misc_settings(void);

/*
 * Name        : save_log_settings
 * Parameters  : None
 * Description : Saves the settings from the log settings window
 * Returns     : Nothing
 */
void save_log_settings(void);


/*
 * Name        : save_sched_settings
 * Parameters  : None
 * Description : Saves the settings from the scheduler window
 * Returns     : Nothing
 */
void save_sched_settings(void);

/*
 * Name        : save_split_scheduler
 * Parameters  : day integer, encoded string
 * Description : Takes the string and produces the idle and peak times for the day specified
 * Returns     : Nothing
 */
void save_split_scheduler(int, char *);

