/************************************************************************/
/* File:    cancel.h                                                    */
/* Purpose: Handles data saving to Flash                                */
/*                                                                      */
/* Author:  Hed Simons (created by Neil Bingham)                        */
/* History: Mon 09th March 1998     ver 0.01 - Created                  */
/************************************************************************/


/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */

#include <string.h>
#include <stdlib.h>

#include "load.h"
#include "misc.h"

/* ----------------------------------------- FUNCTIONS ------------------------------------------ */

/************************************************************************************************
 * Name        : cancel_decode_login                                                            *
 * Parameters  : combined login/response string, login store string, response store string,     *
 *               current index into the combined string                                         *
 * Description : Takes the combined string and splits it into a login and response string using *
 *               the index as the current position into the combined string. It updates the     *
 *               index value as it carrys out the operation.                                    *
 * Returns     : Nothing                                                                        *
 ************************************************************************************************/
void cancel_decode_login(char *, char *, char *, int *);

/************************************************************************************************
 * Name        : cancel_compare_writable                                                        *
 * Parameters  : configman tag, writable window, writable component, string to test against     *
 * Description : If the test_string is NULL, loads the contents pointed to by the configman tag *
 *               and then compares the string with the string contained in the referenced       *
 *               writable. Else, if the test_string is non-NULL, then it matches the test string*
 *               to the string contained in the writable. If the strings match in either case   *
 *               FALSE is returned, else TRUE is returned.                                      *
 * Returns     : Boolean                                                                        *
 ************************************************************************************************/
int cancel_compare_writable(char *sf_label, ObjectId window, ComponentId writable, char *);

/************************************************************************************************
 * Name        : cancel_compare_button                                                          *
 * Parameters  : configman tag, messages tag, button window, button component, adder value      *
 * Description : Loads the value stored in sfconfigman and then uses the messages tag to turn   *
 *               this value into the relevant string. The adder value is used to increase or    *
 *               decrease the loaded value for correct matching for numeric messages tags.      *
 *               The resultant string is then compared to the string in the button field.       *
 *               If the strings match, FALSE is returned, else TRUE is returned.                *
 * Returns     : Boolean                                                                        *
 ************************************************************************************************/
int cancel_compare_button(char *sf_label, char *tag_id, ObjectId window, ComponentId button, int);

/************************************************************************************************
 * Name        : cancel_compare_button_value                                                    *
 * Parameters  : configman tag, button window, button component, button multiplier              *
 * Description : Loads the value stored in sfconfigman using the tag, and then compares this    *
 *               value to the value stored in the button component. If it matches, the function *
 *               returns FALSE else it returns TRUE.                                            *
 * Returns     : Boolean                                                                        *
 ************************************************************************************************/
int cancel_compare_button_value(char *sf_label, ObjectId window, ComponentId button, int);

/************************************************************************************************
 * Name        : cancel_user                                                                    *
 * Parameters  : None                                                                           *
 * Description : Tests to see if any of the components in the User window have been altered.    *
 * Returns     : Integer                                                                        *
 ************************************************************************************************/
int cancel_user(void);

/************************************************************************************************
 * Name        : cancel_isp_main                                                                *
 * Parameters  : None                                                                           *
 * Description : Tests to see if any of the components in the Main ISP window have been altered.*
 * Returns     : Integer                                                                        *
 ************************************************************************************************/
int cancel_isp_main(void);

/************************************************************************************************
 * Name        : cancel_isp_additional                                                          *
 * Parameters  : None                                                                           *
 * Description : Tests to see if any of the components in the Additional ISP window have been   *
 *               altered.                                                                       *
 * Returns     : Integer                                                                        *
 ************************************************************************************************/
int cancel_isp_additional(void);

/************************************************************************************************
 * Name        : cancel_datetime                                                                *
 * Parameters  : struct tm pointer                                                              *
 * Description : Tests to see if any of the components in the DateTime window have been altered *
 *               and uses the time structure which was created when the window was opened.      *
 * Returns     : Integer                                                                        *
 ************************************************************************************************/
int cancel_datetime(struct tm *);

/************************************************************************************************
 * Name        : cancel_misc                                                                    *
 * Parameters  : None                                                                           *
 * Description : Tests to see if any of the components in the Misc window have been altered.    *
 * Returns     : Integer                                                                        *
 ************************************************************************************************/
int cancel_misc(void);

/************************************************************************************************
 * Name        : cancel_log                                                                     *
 * Parameters  : None                                                                           *
 * Description : Tests to see if any of the components in the Log window have been altered.     *
 * Returns     : None                                                                           *
 ************************************************************************************************/
int cancel_log(void);

/************************************************************************************************
 * Name        : cancel_schedule                                                                *
 * Parameters  : None                                                                           *
 * Description : Tests to see if any of the components in the Schedule window have been altered.*
 * Returns     : Integer                                                                        *
 ************************************************************************************************/
int cancel_schedule(void);
