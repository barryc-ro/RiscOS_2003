*******************************************************************************
Detailed changes from v0.46 to v0.47 (August/September 1998)
*******************************************************************************

10-08-98  Correct minor coding errors

c.load:      load_process_sched (..)
             Digit string is now properly terminated before calling atoi(..).

c.save:      save_split_scheduler (..)
             Local string temp_string needs 17 elements, not 10.


10-08-98  Force reload of configuration variables after CAS message

c.main:      message_control (..)
             Add code to call load_all_settings(..) upon receipt of a Dayt_Setup_Message
             with code General_Hello which is not self-sent; this causes Setup to reload
             all of its writables, and to recalculate some internal status variables. It
             also seems to be necessary to set load_cycle = FALSE afterwards - since
             without this, the scheduler doesn't restart.


10-08-98  Move source files that are no longer needed to a subdirectory called "old".


11-08-98  Expand tabs in all source files!


11-08-98  Fix CAS bug where Monday's schedule times appear in Tuesday

c.load:      load_sched_settings (..)
             Sunday maps to 0, Saturday to 6 (Monday mapped to 0).

c.save:      save_sched_settings (..)
             Sunday to 0, instead of Monday to 0.


12-08-98  Remove redundant code

c.load:      load_isp1_settings (..)
             Code at the end of this routine creates a file in RAM
             containing userid and password. save_isp1_settings() -
             which is called immediately after this code section - 
             contains identical code!


12-08-98  Force reschedule when configuration is changed by CAS

c.main:      message_control (..)
             The code which is executed when a message arrives from CAS
             to say that the configuration has changed now calls each of
             the load/save routines as necessary - and includes an explicit
             request to re-schedule if the scheduler is on.


13-08-98  Fix problems with DST and timezones

c.load:      load_datetime_settings (..)
             Add code to configure CMOS according to the value of DST
             held in flash, and to set the date/time DST button accordingly.
             Remove (inexplicable) code that sets the clock from the
             writeables - instead, set the writeables from the clock.

c.save:      save_datetime_settings (..)
             Add code to update both the CMOS and flash view of DST
             from the button in the date/time window.

c.main:      message_control (..)
             The code which is executed when a message arrives from CAS
             to say that the configuration has changed now includes a
             call to load_datetime_settings() to update date/time window
             writables and CMOS configuration.


18-08-98  MaxEmailSize is now stored in kilobytes, not bytes

c.load:      load_isp2_settings (..)
             Comment out division by 1024.

c.save:      save_isp2_settings (..)
             Comment out multiplication by 1024.

c.cancel:    cancel_isp_additional (..)
             Last argument to cancel_compare_button_value (..) for MaxEmailSize is now
             1 instead of 1024.


18-08-98  TimeZone generalisation

Messages:    There are now entries for all 25 possible time zone settings.


19-08-98  Encoding and decoding of DNSServer strings

             The code here is a little confused. Experiment shows that when a "DNSServer"
             value is stored in flash, 4 bytes are always preserved - and these are
             returned when the value is reloaded; this is true regardless of whether
             any of these bytes is a zero (or all of them are zero), and the returned
             "string" is not itself zero terminated - so it's really just an array of
             four byte values. With this in mind ...

c.load:      load_decode_ipa (..)
             Recoded sensibly.

c.save:      save_create_inet (..)
             Now allows multiple spaces between (and before) DNS addresses in the
             DNS Server writable in the Main Internet Settings window.
             Code to save empty "DNSServer" variables corrected.

             save_cis (..)
             Code corrected, and now will not overwrite if there are too many dot
             separators in the input string.


19-08-98  Encoding and decoding of login response strings

             The code in this area also has a few holes - hopefully, most have now been filled
             in ...

h.main:      Add new manifest MAXLOGSTR (value 50) to specify the maximum length of any one of
             the ten components in a login/response string.

c.load:      load_decode_login (..)
             Array declarations now refer to MAXLOGSTR.
             Login and Response strings are initialised to empty, so the special case of an
             empty input string (at the end of the code) can now be commented out (it didn't
             reset the corresponding environment variables anyway).
             Any individual items that exceed MAXLOGSTR are now truncated.
             Any excess items (more than 10) are now ignored.

c.save:      save_create_login (..)
             Array declarations now refer to MAXLOGSTR.

Res:         All ten prompt and response writables in optisp2_win now have length 51 (ie equal
             to MAXLOGSTR+1).


19-08-98  Remove ConnectionHoldUpTime

             Following a decision at the telephone conference with NetFax on 13th August 1998,
             I am removing ConnectionHoldUpTime from both Setup and CAS applications.

Res:         All display, button and click fields moved from optisp2_win.

c.load:      load_isp2_settings (..)
             Comment out code to read variable from flash.

c.save:      save_isp2_settings (..)
             Comment out code to store variable in flash.

c.cancel:    cancel_isp_additonal (..)
             Comment out code to compare gadget value with flash value.

c.UI:        optisp2_optionfields (..)
             Comment out code associated with user click on this gadget.

h.main:      Comment out component ids for the associated gadgets.

Messages:    Comment out OptISP2_Connection_First/Last message tags.


20-08-98  Ensure POP3Password is held in environment variable

             This makes the unencrypted form of the password available to the Daytona
             application without the need to provide a central decryption facility.

c.save:      save_isp1_settings (..)
             Add call to _kernel_setenv (..).


24-08-98  Update to conform with revised validation requirements

Messages:    Update tag values to reflect new numeric ranges.

Res:         Update writable sizes and validation strings to reflect new constraints.


24-08-98  Encrypting passwords  (code originally tested on 18-08-98)

c.main:      Add declaration of codestr - with a suitable initial value. This is
h.main:      the encoding string.

c.load:      Add new function: load_decode_password (..).
h.load:
             load_decode_login (..)
             load_isp1_settings (..)
             Add calls to decode password after reading "PassWord" or "POP3PassWord"
             from flash.

c.save:      Add new function: save_encode_password (..).
h.save:
             save_create_login_ext (..)
             Add call to decode password after reading "PassWord" from flash.

             save_isp1_settings (..)
             Add calls to encode password before writing "PassWord" or "POP3PassWord"
             to flash.

c.cancel:    cancel_isp_main (..)
             Comparisons between the values of the flash variables "PassWord" and
             "POP3PassWord" and the corresponding writables now decode the flash
             values first!


24-08-98  MaxEmailSize and MaxFileSize counters no longer count in single units

c.UI:        ui_numeric_optionfield_update (..)
h.UI:        New function, modelled on the library function ui_optionfield_update;
             in an ideal world, the library function would have been extended ...

             optlog_optionfields (..)
             Calls the new function to update the maximum file size field.

             optisp2_optionfields (..)
             Calls the new function to update the maximum email size field.

Messages:    New tags OptISP2_MaxEmail_Incr and OptLog_LogSize_Incr.

c.load:      load_testalign_valid (..)
h.load:      New function.

             load_log_settings (..)
             load_isp2_settings (..)
             Call the new function to check and - if necessary - correct the values
             found in flash for MaxEmailSize and MaximumFileSize.


25-08-98  Tidy up consequences of bad phone number

c.load:      load_decode_number (..)
             Result string is initialised to the empty string, so that some previous value is
             no longer returned when there has been an error in telephone number conversion!


26-08-98  Update version number

Messages:    Update "Version" tag text.
