/*
 * search.h
 */

#ifndef __search_h
#define __search_h

#ifndef __searchchain_types
#define __searchchain_types

#define BufferSize 20

typedef struct search_chain_record
{
  char *search_term;
  int *result_list;
  struct search_chain_record *next, *previous;
}search_chain_record;

typedef struct interactive_search_state
{
  /* globals */
  int search_mode;

  /* new stuff */
  int working;

  /* flag for names search, specifying notes/forms search,
     0 = notes, 1 = forms */
  char names_search_type;

  /* results returning stuff */
  int your_ref, sender_taskid;

  /* main search engine stuff */
  int current_result_selection;
  int search_result;
  search_chain_record *search_chain_top;
  search_chain_record *search_chain_current;

  /* home/oneshot handling flag */
  char search_halted;

  /* add_char stuff */
  int addchar_result_list[2000];

  /* resync stuff */
  struct resync_state
  {
    int result_counter;
    int count;
    char *partial_field;
  }resync_state;

  /* interactive_search stuff */
  struct intsearch_state
  {
    int count, result_counter;
    int operation;
  }intsearch_state;

  /* All state to do with the searchfield */
  struct searchfield_state
  {
    /* State to do with the searchfield buffer */
    struct buffer_state
    {
      char buffer[BufferSize];
      unsigned int index_in, index_out;
      char full;
    }buffer_state;

    int old_len, new_len;
    char *old_field, *new_field;
    WimpCaret caret_position;
  }searchfield_state;
}
interactive_search_state;

#endif  /* of __searchchain_types */

/* Toolbox event handlers */
int search_searchfield_changed (int, ToolboxEvent *, IdBlock *, void *);
int search_window_show (int, ToolboxEvent *, IdBlock *, void *);
int search_window_keypress (int, WimpPollBlock *, IdBlock *, void *);
int search_null_handler (int, WimpPollBlock *, IdBlock *, void *);
int search_faxsearch_start (int, ToolboxEvent *, IdBlock *, void *);
void search_noninteractive_searchstart (char *, int, void *, int, int);
void search_decideaction_cancelnanfax (int, int);
void search_decideaction_canceloneshotfax (int, int);
void search_decideaction_cancelnames (int, int);
void search_open_oneshot (void);
void search_open_intsearch (void);
void search_open_nansearch (int, int, int);
void search_open_namessearch (int, int, int);
void search_sk1_pressed (void);
void search_sk2_pressed (void);
void search_back_pressed (void);
void search_oneshot (void);
void search_oneshot_back (void);

/*
void search_calculate_index_entry (AddressRecord *rec, int first_page);
*/

/* Initialisation function */
void search_initialise (void);

void search_update_searchstart (AddressRecord *, unsigned int);

#endif

/* end of search.h */
