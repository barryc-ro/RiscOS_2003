/************************************************************************/
/* File:    menuevents.c                                                */
/* Purpose: deal with menu events for testing UI.                       */
/*                                                                      */
/* Author:  Neil Bingham (mailto:NBingham@acorn.co.uk)                  */
/* History: Tue 18th February 1997  ver 0.01 - Created.                 */
/************************************************************************/


#include "include.h"
#include "tbox.h"
#include "error.h"
#include "menuevents.h"
#include "runes.h"
#include "addrbookIF.h"
#include "globals.h"


int menuevents_close_display (int event_code, ToolboxEvent *event, IdBlock *id_block,
                              void *handle)
{
  IGNORE (event_code); IGNORE (event); IGNORE (id_block); IGNORE (handle);

  if (intsearch_state_current)
    intsearch_state_current->search_mode = SearchMode_NoSearch;

  dprintf (("", "Closing display.\n"));
  ui_close_display ();

  return 1;
}

int menuevents_fake_daytona (int event_code, ToolboxEvent *event, IdBlock *id_block,
                             void *handle)
{
  _kernel_oserror *er;
  Dayt_NonInteractiveSearch_Message nonint_message;

  IGNORE (event_code); IGNORE (event); IGNORE (id_block); IGNORE (handle);

  switch (event_code)
  {
    case menu_fakenan_event:
      dprintf (("", "Sending fake daytona message, DayAdd_NANSearch\n"));

      er = ui_open_other_program_window (Open_DayAdd_NANSearch, Field_ContactName |
                                         Field_EmailAddress | Field_FaxNumber);
      error_check_error (er);
      break;

    case menu_fakemain_event:
      dprintf (("", "Sending fake daytona message, DayAdd_Main\n"));
      ui_open_other_program_window (Open_DayAdd_Main, 0);
      break;

    case menu_fakenonint_event:
      dprintf (("", "Sending fake nonint search message\n"));
      nonint_message.hdr.size = sizeof (Dayt_NonInteractiveSearch_Message);
      nonint_message.hdr.your_ref = 0;	 /* original message */
      nonint_message.hdr.action_code = Dayt_NonInteractiveSearch_MessageNum;
      nonint_message.data.handle = (void*)1;
      nonint_message.data.fields_to_search = Field_ContactName | Field_EmailAddress |
                                             Field_FaxNumber;
      strcpy (nonint_message.data.search_string, ",9,725211");

      /* Send Message */
      er = wimp_send_message (Wimp_EUserMessage, (WimpMessage*)&nonint_message,
                              0, 0, 0);
      error_check_error (er);

      break;
    case menu_fakeupdate_event:
/*      search_update_start (); */
      break;
  }

  return 1;
}

/************************************************************************/
/* menuevents_quit_program                                              */
/*                                                                      */
/* Function is called when quit is selected from the TaskWindow, or the */
/* user selects quit from the iconbar menu                              */
/*                                                                      */
/* Parameters: ToolboxEventHandler parameters.                          */
/*                                                                      */
/* Returns:    TRUE or FALSE.                                           */
/*                                                                      */
/************************************************************************/
int menuevents_quit_program (int event_code, ToolboxEvent *event, IdBlock *id_block,
                             void *handle)
{
  IGNORE (event_code); IGNORE (event); IGNORE (id_block); IGNORE (handle);

  quit = 1;
  return 1;
}


int menuevents_open_mainwindow (int event_code, ToolboxEvent *event, IdBlock *id_block,
                                void *handle)
{
  IGNORE (event_code); IGNORE (event); IGNORE (id_block); IGNORE (handle);

  runes_open_mainwindow ();
  return 1;
}
