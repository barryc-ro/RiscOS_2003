/* addrbookIF.c */

#include "include.h"
#include "tbox.h"
#include "strings.h"
#include "addrbookIF.h"
#include "search.h"
#include "globals.h"

int addrbookIF_message_handler (WimpMessage *message, void *handler)
{
  Daytona_DataRelease_Message rel_message;
  Daytona_AddressModify_Message *modify_message;
  AddressRecord rec;
  AddressArea *area;

  IGNORE (handler);

  dprintf (("", "Got a message from Daytona\n"));

  modify_message = (Daytona_AddressModify_Message *) message;

  /* Copy the record out of daytona's dynamic area */
  area = modify_message->data.data_area;

  memcpy (rec.machine_id, area->machine_id,
          sizeof (rec.machine_id));
  strcpy (rec.fax_number, area->fax_number);
  strcpy (rec.voice_number, area->voice_number);
  strcpy (rec.software_revision, area->software_revision);
  rec.device_class = area->device_class;
  rec.encryption_method = area->encryption_method;
  rec.encryption_revision = area->encryption_revision;
  rec.pgp_key_length = area->pgp_key_length;
  rec.company_name = area->company_name;
  rec.contact_name = area->contact_name;
  rec.email_address = area->email_address;
  rec.pgp_key = area->pgp_key;

  /* Start the update search */
  search_update_searchstart (&rec, modify_message->data.action_code);

  /* Send message to daytona telling it to free its dynamic area */
  rel_message.hdr.size = sizeof (Daytona_DataRelease_Message);
  rel_message.hdr.your_ref = 0;
  rel_message.hdr.action_code = Daytona_DataRelease_MessageNum;
  rel_message.data_area_id = modify_message->data.data_area_id;
  rel_message.application_code = DataRelease_AppCode_Daytona;

  wimp_send_message (Wimp_EUserMessage, (WimpMessage*) &message, 0, 0, 0);

  return 1;
}
