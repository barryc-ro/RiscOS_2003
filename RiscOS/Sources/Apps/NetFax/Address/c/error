#include "include.h"
#include "tbox.h"
#include "miscwimp.h"
#include "runes.h"
#include "error.h"
#include "globals.h"

void error_check_error (_kernel_oserror *er)
{
  char err_num[25];
  char *err_str;
  int ret, nbytes;

  /* If no error has occurred, return */
  if (!er)
    return;

  /* If we're in the search window */
  if (ui_currently_open_win == ABSearch_WindowHandle)
  {
    if (intsearch_state_current)
    {
      switch (intsearch_state_current->search_mode)
      {
        case SearchMode_Names:
          action_after_confirm.code = ConfirmAction_OpenNamesSearch;
          break;
        case SearchMode_NAN:
          action_after_confirm.code = ConfirmAction_OpenNANSearch;
          break;
        default:
          action_after_confirm.code = ConfirmAction_OpenSearch;
          break;
      }
    }
    else
      action_after_confirm.code = ConfirmAction_OpenAdd;
  }

  else if (ui_currently_open_win == ABAdd_WindowHandle)
    action_after_confirm.code = ConfirmAction_OpenAdd;

  else if (ui_currently_open_win == ABEdit_WindowHandle)
    action_after_confirm.code = ConfirmAction_OpenEdit;

  else if (ui_currently_open_win == ABShot_WindowHandle)
    action_after_confirm.code = ConfirmAction_OpenOneShot;

  else
    action_after_confirm.code = ConfirmAction_OpenMain;

  action_after_confirm.gadget_to_highlight = -1;

  /* Turn the error number into a string */
  sprintf (err_num, "%d", er->errnum);

  /* Report the error */
  ui_confirm_window ("Error", "Error_Text", err_num, er->errmess,
                     "confirm_1", runes_confirm_finished);

  ret  = lookup_message_token_params (&message_block, "Error_Text", err_num,
                                      er->errmess, NULL, NULL, NULL, 0,
                                      &nbytes);

  err_str = malloc (nbytes);

  ret  = lookup_message_token_params (&message_block, "Error_Text", err_num,
                                      er->errmess, NULL, NULL, err_str,
                                      nbytes, &nbytes);

  /* Print it out to the debug device */
  dprintf (("", "%s\n", err_str));

  /* And put it in a system variable */
  _kernel_setenv ("DayAdd$Error", err_str);

  if (err_str)
    free (err_str);
}
