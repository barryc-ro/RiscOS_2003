/* confmanIF.c */

#include "include.h"
#include "tbox.h"
#include "strings.h"
#include "addrbookIF.h"
#include "search.h"
#include "confmanIF.h"
#include "globals.h"

int confmanIF_message_handler (WimpMessage *message, void *handler)
{
  DayAdd_NewAddr *conf_message;
  AddressRecord rec;
  AddressArea *area;

  IGNORE (handler);

  dprintf (("", "Got a message from AdminUpdate\n"));

  conf_message = (DayAdd_NewAddr *) message;

  if (memcmp (conf_message->tag, "ADDR", 4) == 0)
  {
    if (memcmp (conf_message->cmd, "WIPE", 4) == 0)
    {
      /* Purge address book */
    }
    else if (memcmp (conf_message->cmd, "SAVE", 4) == 0)
    {
      /* Save address book */
    }
    else if (memcmp (conf_message->cmd, "NEW", 3) == 0)
    {
      /* Add / Update an address book entry */

      dprintf (("", "Message was ADDR-NEW\n"));

      /* Copy the record out of the dynamic area */
      area = (AddressArea *) conf_message->addrdata;

      strcpy (rec.machine_id, area->machine_id);
      strcpy (rec.fax_number, area->fax_number);
      strcpy (rec.voice_number, area->voice_number);
      strcpy (rec.software_revision, area->software_revision);
      rec.device_class = area->device_class;
      rec.encryption_method = area->encryption_method;
      rec.encryption_revision = area->encryption_revision;
      rec.pgp_key_length = area->pgp_key_length;
      rec.company_name = area->company_name;
      rec.contact_name = area->contact_name;
      rec.email_address = area->email_address;
      rec.pgp_key = area->pgp_key;

      /* Start the update search */
      search_update_searchstart (&rec, AddressModify_ActionCode_Update);

      /* Tell SFConfigMan to free its dynamic area */
      _swix (SFConfigMan_Free, _IN(0), area);
    }
  }

  return 1;
}
