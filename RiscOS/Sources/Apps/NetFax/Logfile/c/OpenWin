/************************************************************************/
/* File:    openwin.c                                                   */
/* Purpose: File deals with any special circumstances that occur when   */
/*          specific windows are opened.                                */
/*                                                                      */
/* Author:  Neil Bingham (mailto:NBingham@acorn.co.uk)                  */
/* History: Tue 18th February 1997  ver 0.01 - Created.                 */
/* 	    Thu 23rd October  1997  ver 0.02 - Don't use some of the    */
/*				    functions now, just those that are  */
/*				    efficient				*/
/************************************************************************/


/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */
#include "main.h"
#include "functions.h"
#include "openwin.h"

/* ---------------------------------- PRE-PROCESSOR DIRECTIVES ---------------------------------- */
void open_optdate_win(void);


/* -------------------------------------- GLOBAL VARIABLES -------------------------------------- */


/* ----------------------------------------- FUNCTIONS ------------------------------------------ */

/************************************************************************/
/* which_window                                                         */
/*                                                                      */
/* Function returns a constant unique to the ObjectId of the window     */
/* passed to it.  This is to allow the use of switch statements in the  */
/* softkey statemachines.                                               */
/*                                                                      */
/* Parameters: win       - ObjectId of the window to return.            */
/*                                                                      */
/* Returns:    int       - #defined value for the ObjectId of win.      */
/*                                                                      */
/************************************************************************/
int which_window(ObjectId win)
{
  if (win == OptMain_WindowHandle)
  {
    return(OptMain_Window);
  }
  else if (win == OptUser_WindowHandle)
  {
    return(OptUser_Window);
  }
  else if (win == OptSys_WindowHandle)
  {
    return(OptSystem_Window);
  }
  else if (win == OptLog_WindowHandle)
  {
    return(OptLog_Window);
  }
  else if (win == OptDate_WindowHandle)
  {
    return(OptDate_Window);
  }
  else if (win == OptSchedule_WindowHandle)
  {
    return(OptSchedule_Window);
  }
  else if (win == OptEmail_WindowHandle)
  {
    return(OptEmail_Window);
  }
  else if (win == OptISP1_WindowHandle)
  {
    return(OptISP1_Window);
  }
  else if (win == OptISP2_WindowHandle)
  {
    return(OptISP2_Window);
  }
  else if (win == OptMisc_WindowHandle)
  {
    return(OptMisc_Window);
  }
  else
  {
    return(0);
  }
}


/************************************************************************/
/* window_being_opened                                                  */
/*                                                                      */
/* Function is called when a window with Window_AboutToBeShown flag.    */
/* set is going to be opened.  This allows specific actions to be taken */
/* on this window without us having to worry about putting this code    */
/* everywhere this window is opened in the project.                     */
/*                                                                      */
/* Parameters: ToolboxEventHandler parameters.                          */
/*                                                                      */
/* Returns:    TRUE or FALSE.                                           */
/*                                                                      */
/************************************************************************/

int window_being_opened(int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  dprintf(("", "window_being_opened entered\n"));

  /* Let's get rid of compiler warnings */
  handle = handle;
  event = event;
  event_code = event_code;

  if (id_block->self_id == OptDate_WindowHandle)
  {
    open_optdate_win();
  }
  return(TRUE);
}



/************************************************************************/
/* open_optdate_win                                                     */
/*                                                                      */
/* Function carries out special instructions for the OptDate window when*/
/* it is about to be opened.  This includes setting the Clock to what   */
/* the internal clock is currently at.                                  */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void open_optdate_win(void)
{
  /* Set the Time & Date fields to match what the internal clock reads */
  //optdate_set_datetime();
}



/************************************************************************/
/* open_window_message_rx                                               */
/*                                                                      */
/* Function called when we receive a message telling us to open a window*/
/* Under !DaytSetup's control.                                          */
/*                                                                      */
/* Parameters: which_win   - Window we are to open.                     */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void open_window_message_rx(int which_win)
{
  switch(which_win)
  {
    case(Open_Daytona_Home_Ack):
    {
      ui_close_display();
      break;
    }

    case(Open_DayLog_Main_Ack):
    {
      ui_close_display();
      break;
    }

    case(Open_DaytSetup_Main):
    {
      /* Open OptMain */
      ui_open_window(Open_SK_Required,OptMain_WindowHandle,"OptMain_Title","OptMain_SK1","OptMain_SK2",
                      "OptMain_SK3", "OptMain_SK4", -1);

      /* Acknowledge that my window is open */
      ui_open_other_program_window(Open_DaytSetup_Main_Ack, 0);
      break;
    }
  }
}

