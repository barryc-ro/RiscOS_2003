/************************************************************************/
/* File:    runes.h                                                     */
/* Purpose: Handles all softkey and key handling                        */
/*                                                                      */
/* Author:  Neil Bingham (mailto:NBingham@acorn.co.uk)                  */
/* History: Tue 18th February 1997    ver 0.01 - Created.               */
/*          Wednesday 17th September  ver 0.02 - Updated for !DayLog    */
/*	    Wednesday 19th November   ver 0.03 - Log now handles email  */
/*					and printing facilities		*/
/*	    Monday 2nd February 1998  ver 0.04 - Now handles up and down*/
/*				        arrows, page up and page down   */
/*				  	intelligently places the icon   */
/*					and all in all a nicer version  */
/************************************************************************/

#ifndef __runes_h
#define __runes_h

/* Standard runes routines adapted to fit the log file */
/************************************************************************/
/* sk_1_pressed                                                         */
/*                                                                      */
/* Function does something when softkey 1 is pressed.                   */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void sk_1_pressed(void);

/************************************************************************/
/* sk_2_pressed                                                         */
/*                                                                      */
/* Function does something when softkey 1 is pressed.                   */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void sk_2_pressed(void);

/************************************************************************/
/* sk_3_pressed                                                         */
/*                                                                      */
/* Function does something when softkey 1 is pressed.                   */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void sk_3_pressed(void);

/************************************************************************/
/* sk_4_pressed                                                         */
/*                                                                      */
/* Function does something when softkey 4 is pressed.                   */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void sk_4_pressed(void);

/************************************************************************/
/* help_pressed                                                         */
/*                                                                      */
/* Function does something when Help key is pressed.                    */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void help_pressed(void);

/************************************************************************/
/* home_pressed                                                         */
/*                                                                      */
/* Function opens Home_WindowHandle when Home is pressed.               */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void home_pressed(void);

/************************************************************************/
/* back_pressed                                                         */
/*                                                                      */
/* Function opens the next window up in the chain.                      */
/*                                                                      */
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void back_pressed(void);

/************************************************************************/
/* left_pressed                                                         */
/*                                                                      */
/* Function traps the left hand cursor key and updates the icon the     */
/* iconhigh gadget is currently over                                    */
/*									*/
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void left_pressed(void);

/************************************************************************/
/* right_pressed                                                        */
/*                                                                      */
/* Function traps the left hand cursor key and updates the icon the     */
/* iconhigh gadget is currently over                                    */
/*									*/
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void right_pressed(void);

/************************************************************************/
/* page_up_pressed                                                      */
/*                                                                      */
/* Function traps the page up key and updates log list by scrolling     */
/* the entries down until at the top of the log                         */
/*									*/
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void page_up_pressed(void);

/************************************************************************/
/* page_down_pressed                                                    */
/*                                                                      */
/* Function traps the page down key and updates log list by scrolling   */
/* the entries up until at the bottom of the log                        */
/*									*/
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void page_down_pressed(void);

/************************************************************************/
/* up_arrow_pressed                                                     */
/*                                                                      */
/* Function traps the up arrow key and updates log list by scrolling    */
/* the entries up until at the top of the log                           */
/*									*/
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern  void up_arrow_pressed(void);

/************************************************************************/
/* down_arrow_pressed                                                   */
/*                                                                      */
/* Function traps the down arrow key and updates log list by scrolling  */
/* the entries up until at the bottom of the log                        */
/*									*/
/* Parameters: Toolbox Event Handler Parameters.                        */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern  void down_arrow_pressed(void);

/************************************************************************/
/* runes_confirm_clear                                                  */
/*                                                                      */
/* This function is called when the user asks for a clear operation on  */
/* the log to be performed                                              */
/*									*/
/* Parameters: Action code                                              */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern  void runes_confirm_clear(int);

/************************************************************************/
/* runes_confirm_print_yes                                              */
/*                                                                      */
/* This function is called when the user asks for a print operation on  */
/* the log to be performed, and the log contains entries                */
/*									*/
/* Parameters: Action code                                              */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern  void runes_confirm_print_yes(int);

/************************************************************************/
/* runes_confirm_print_no                                               */
/*                                                                      */
/* This function is called when the user asks for a print operation on  */
/* the log to be performed, and the log contains no entries             */
/*									*/
/* Parameters: Action code                                              */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern  void runes_confirm_print_no(int);

/************************************************************************/
/* runes_decision                                                       */
/*                                                                      */
/* This function is called when the user asks to clear the log.         */
/* The decision window appears asking for confirmation of the operation.*/
/*									*/
/* Parameters: Action code, decision code                               */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
extern	void runes_decision(int, int);

/************************************************************************/
/* runes_open_main_window                                               */
/*                                                                      */
/* Function open the main window for this particular application, in    */
/* this case the log display                                            */
/*									*/
/* Parameters: Not an electronic sausage                                */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void runes_open_mainwindow (void);

#endif

