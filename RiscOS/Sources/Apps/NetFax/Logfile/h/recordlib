/************************************************************************/
/* File:    recordlib.h                                                 */
/* Purpose: Declares the functions used to create and update all the    */
/*          record entries used for the log.                            */
/* Author:  Hed Simons (mailto:hsimons@acorn.com)                       */
/* History: Mon 22nd September 1997  ver 0.01 - Created.                */
/*          Mon 17th November  1997  ver 0.29 - Major changes/additions */
/*                                    mainly due to an alteration of how*/
/*                                    records work and how stored (HKS) */
/*	    Thu 27th November  1997  ver 0.33 - Printing now correctly  */
/*					prints a decoded version of the */
/*					log to the printer 		*/
/************************************************************************/

#ifndef __recordlib_h
#define __recordlib_h

/*----------------------------------------------------------------------*/

/*******************************************************************************
 * Name	       : record_open_log                                               *
 * Parameters  : none                                                          *
 * Description : Opens the log file in RAM ready for storing log entries.      *
 * Returns     : Nothing                                                       *
 *******************************************************************************/
void record_open_log(void);

/*******************************************************************************
 * Name	       : record_read_next_record                                       *
 * Parameter   : none                                                          *
 * Description : Reads the next (upto) 5 records into the record structure     *
 *               ready for display                                             *
 * Returns     ; Nothing                                                       *
 *******************************************************************************/
void record_read_next_records(void);

/*******************************************************************************
 * Name	       : record_new_add                                                *
 * Parameter   : char *                                                        *
 * Description : Takes a string and creates a record out of it. This is        *
 *	         achieved by also grabbing the current time when the record    *
 *	         is created. If this is the first record, then set the         *
 *	         head pointer to this record                                   *
 * Returns     : Nothing                                                       *
 *******************************************************************************/
void record_new_add(char *);

/*******************************************************************************
 * Name	       : record_destroyall                                             *
 * Parameter   : none                                                          *
 * Description : Destroys all of the log records currently held.               *
 *	         This is achieved by freeing each record in the log and        *
 *	         then setting the head pointer 'decrec_head' to NULL           *
 * Returns     : Nothing                                                       *
 *******************************************************************************/
void record_destroyall(void);

/*******************************************************************************
 * Name	       : record_prep_log                                               *
 * Parameter   : char *                                                        *
 * Description : Takes the pathname of a directory to put the log into         *
 *	         which then prepares it for mailing/printing by Daytona        *
 *	         The integer value is either 1 for email path or 2 for print   *
 *               path                                                          *
 * Returns     : Nothing                                                       *
 *******************************************************************************/
void record_prep_log(char *, int);

/*******************************************************************************
 * Name	       : record_delete_complete                                        *
 * Parameter   : void                                                          *
 * Description : Carries out the completion of the log deletion and preping    *
 * Returns     : Nothing                                                       *
 *******************************************************************************/
void record_delete_complete(void);

/*******************************************************************************
 * Name	       : record_copy_email                                             *
 * Parameter   : char *                                                        *
 * Description : Copies the log file into a destination specified by Daytona to*
 * 	         email to the CAS administrator                                *
 * Returns     : Nothing                                                       *
 *******************************************************************************/
void record_copy_email(char *);

/*******************************************************************************
 * Name	       : record_decode_print                                           *
 * Parameter   : char *                                                        *
 * Description : Copies the log file into a destination specified by Daytona to*
 * 	         print to the local printer                                    *
 * Returns     : Nothing                                                       *
 *******************************************************************************/
void record_decode_print(char *);

/*******************************************************************************
 * Name	       : record_total_dump                                             *
 * Parameter   : void                                                          *
 * Description : Dumps the contents of the linked list into the debug window   *
 * Returns     : Nothing                                                       *
 *******************************************************************************/
void record_total_dump(void);

#endif
