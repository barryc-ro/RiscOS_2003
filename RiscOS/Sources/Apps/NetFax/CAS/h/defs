#ifndef __DEFS_H__

#define __DEFS_H__

#include <time.h>

#include "kernel.h"

#define _APPNAME_   "AdminUpdate"
#define FILENAMELEN (256)
#define MAXARG      (256)

#ifndef SFConfigMan_Read
#define SFConfigMan_Read                0x050a40
#define SFConfigMan_Write               0x050a41
#define SFConfigMan_FlashPage           0x050a42
#define SFConfigMan_Alloc               0x050a43
#define SFConfigMan_Free                0x050a44
#endif

#define Message_DayCas_OfferFile  0x50FE0
#define Message_DayCas_SendMail   0x50FE1
#define Message_DayCas_PathReply  0x50FE2
#define Message_DayCas_Export     0x50FE3

#define Message_Dayt_Setup        0x50FC0
#define Message_DayLog_SendEntry  0x50FC1


/* Bit set */
#define Email_Bit (1 << 0)
#define Print_Bit (1 << 1)

typedef enum
{
  Admin_State_Idle = 0,
  Admin_State_Scanning,
  Admin_State_Valid,
  Admin_State_Section
} process_state;

typedef enum
{
  AUFType_Nul = 0,
  AUFType_Sct,
  AUFType_Str,
  AUFType_Int,
  AUFType_Phn,
  AUFType_IPA,
  AUFType_IPN,
  AUFType_Tim,
  AUFType_Flg,
  AUFType_Spc,
  AUFType_Act
} field_type;

typedef enum
{
  Section_None = -1,
  Section_AddressBook,
  Section_Binaries,
  Section_Clock,
  Section_Forms,
  Section_Identity,
  Section_Internet,
  Section_Logging,
  Section_Phone,
  Section_Polling,
  Section_Process,
  Section_SetAdmin
} mail_section;

typedef struct
{
  char *name;
  unsigned int type;
  int maxlen;
  int minval;
  int maxval;
  int minparam;
  int maxparam;
} field;

typedef struct
{
  char *name;
  field *fields;
} section;

extern field biglist[];

typedef struct
{
  int x, y;
} wimp_point;

typedef struct
{
  wimp_point min;
  wimp_point max;
} wimp_box;

#define TaskModule_SendMessage              0x4D300                      
#define TaskModule_StartTask                0x4D301                      
#define TaskModule_RegisterService          0x4D302                      
#define TaskModule_DeRegisterService        0x4D303                      

typedef unsigned int BOOL;

#ifndef FALSE
#define FALSE 0
#define TRUE (!(FALSE))
#endif

typedef _kernel_oserror ErrorRec, *ErrorPtr;
extern ErrorPtr err;

#define ER(stmt) {err = (stmt); if (err) return err;}
#define EG(stmt) {err = (stmt); if (err) goto fail;}
#define EX(stmt) {err = (stmt); if (err) check_error (err);}

extern void check_error (ErrorPtr err);

#endif
