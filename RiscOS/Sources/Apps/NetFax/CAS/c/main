/************************************************************************/
/*                  Copyright 1997 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/

#include <ctype.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#include "defs.h"
#include "inlines.h"
#include "wimp.h"

#define __VERSION__ "0.04 Compiled " __TIME__ " " __DATE__

static int this_task;

process_state update_status = Admin_State_Idle;
section *update_section     = NULL;

char *version = __VERSION__;

static int wimp_messages[] =
{
  Message_DayCas_OfferFile,
  Message_DayCas_SendMail,
  Message_DayCas_PathReply,
  Message_DayCas_Export,
  NULL
};

field biglist[] =
{
  {"[Identity]",                 AUFType_Sct,   0,   0,   0, 0, 0},
  {"CompanyName",                AUFType_Str, 255,   0,   0, 1, 1},
  {"ContactName",                AUFType_Str, 255,   0,   0, 1, 1},

  {"[Clock]",                    AUFType_Sct,   0,   0,   0, 0, 0},
  {"TimeZone",                   AUFType_Int,   0, -12,  12, 1, 1},
  {"DaylightSavings",            AUFType_Int,   0,   0,   2, 1, 1},

  {"[Internet]",                 AUFType_Sct,   0,   0,   0, 0, 0},
  {"PrimaryPhone",               AUFType_Phn,  28,   0,   0, 1, 1},
  {"PrimaryRedial",              AUFType_Int,   0,   0, 255, 1, 1},
  {"SecondaryPhone",             AUFType_Phn,  28,   0,   0, 1, 1},
  {"SecondaryRedial",            AUFType_Int,   0,   0, 255, 1, 1},
  {"UserId",                     AUFType_Str,  20,   0,   0, 1, 1},
  {"Password",                   AUFType_Str,  20,   0,   0, 1, 1},
  {"ResponseString",             AUFType_Str,  31,   0,   0, 1, 1},
  {"SMTPHost",                   AUFType_IPA,  65,   0,   0, 1, 1},
  {"POP3Host",                   AUFType_IPA,  65,   0,   0, 1, 1},
  {"POP3mailbox",                AUFType_IPA, 130,   0,   0, 1, 1},
  {"POP3UserId",                 AUFType_Str,  20,   0,   0, 1, 1},
  {"POP3Password",               AUFType_Str,  20,   0,   0, 1, 1},
  {"Shared",                     AUFType_Flg,   0,   0,   0, 1, 1},
  {"DNSServer1",                 AUFType_IPN,   0,   0,   0, 1, 1},
  {"DNSServer2",                 AUFType_IPN,   0,   0,   0, 1, 1},
  {"DNSServer3",                 AUFType_IPN,   0,   0,   0, 1, 1},
  {"FaxEncoding",                AUFType_Int,   0,   0,   3, 1, 1},
  {"MissingPageConnectionCount", AUFType_Int,   0,   0,   2, 1, 1},
  {"ConnectionHoldUpTime",       AUFType_Int,   0,   0, 300, 1, 1},
  {"PagesPerEmail",              AUFType_Int,   0,   1, 255, 1, 1},
  {"MaxEmailSize",               AUFType_Int,   0,   1, INT_MAX, 1, 1},
 
  {"[Polling]",                  AUFType_Sct,   0,   0,   0, 0, 0},
  {"Sunday",                     AUFType_Tim,   0,   0,   0, 4, 4},
  {"Monday",                     AUFType_Tim,   0,   0,   0, 4, 4},
  {"Tuesday",                    AUFType_Tim,   0,   0,   0, 4, 4},
  {"Wednesday",                  AUFType_Tim,   0,   0,   0, 4, 4},
  {"Thursday",                   AUFType_Tim,   0,   0,   0, 4, 4},
  {"Friday",                     AUFType_Tim,   0,   0,   0, 4, 4},
  {"Saturday",                   AUFType_Tim,   0,   0,   0, 4, 4},
  {"PeakDialUps",                AUFType_Int,   0,   0, 255, 1, 1},
  {"OffPeakDialUps",             AUFType_Int,   0,   0, 255, 1, 1},
  {"Scheduler",                  AUFType_Flg,   0,   0,   0, 1, 1},
 
  {"[Logging]",                  AUFType_Sct,   0,   0,   0, 0, 0},
  {"MaximumFileSize",            AUFType_Int,   0,   0, INT_MAX, 1, 1},
  {"PurgePeriod",                AUFType_Int,   0,   0,   3, 1, 1},
  {"PurgeTime",                  AUFType_Tim,   0,   0,   0, 1, 1},
  {"PurgeDay",                   AUFType_Int,   0,   1,   7, 1, 1},
  {"PrintBeforePurge",           AUFType_Flg,   1,   0,   0, 1, 1},
  {"EmailBeforePurge",           AUFType_Flg,   1,   0,   0, 1, 1},
  {"Destination",                AUFType_IPA, 130,   0,   0, 1, 1},
 
  {"[SetAdmin]",                 AUFType_Sct,   0,   0,   0, 0, 0},
  {"UpdateFlash",                AUFType_Flg,   0,   0,   0, 1, 1},
  {"UpdateOS",                   AUFType_Flg,   0,   0,   0, 1, 1},
  {"UpdateAppsConfig",           AUFType_Flg,   0,   0,   0, 1, 1},
  {"UpdateDialUp",               AUFType_Flg,   0,   0,   0, 1, 1},
  {"UpdateAdmin",                AUFType_Flg,   0,   0,   0, 1, 1},
  {"UpdateAddressBook",          AUFType_Flg,   0,   0,   0, 1, 1},
  {"UpdateForms",                AUFType_Flg,   0,   0,   0, 1, 1},
  {"Backup",                     AUFType_Flg,   0,   0,   0, 1, 1},
  {"EmailConfirmSends",          AUFType_Flg,   0,   0,   0, 1, 1},
  {"PrintAfterDispatch",         AUFType_Flg,   0,   0,   0, 1, 1},
  {"NotificationOfReconfig",     AUFType_IPA, 130,   0,   0, 1, 1},
  {"Confirmation",               AUFType_IPA, 130,   0,   0, 1, 1},
 
  {"[Process]",                  AUFType_Sct,   0,   0,   0, 0, 0},
  {"SendWaterMark",              AUFType_Int,   0,   0, 100, 1, 1},
  {"ReceiveWaterMark",           AUFType_Int,   0,   0, 100, 1, 1},

  {"[Phone]",                    AUFType_Sct,   0,   0,   0, 0, 0},
  {"ToneDial",                   AUFType_Flg,   0,   0,   0, 1, 1},
  {"OutsideLineCode",            AUFType_Phn,   8,   0,   0, 1, 1},
  {"PostPrefixPause",            AUFType_Phn,   4,   0,   0, 1, 1},
  {"InternationalAccessCode",    AUFType_Phn,  12,   0,   0, 1, 1},
  {"PostInternationalPause",     AUFType_Phn,   4,   0,   0, 1, 1},
  {"NationalAccessCode",         AUFType_Phn,   4,   0,   0, 1, 1},
  {"FaxCountryCode",             AUFType_Phn,   4,   0,   0, 1, 1},
  {"FaxAreaCode",                AUFType_Phn,   8,   0,   0, 1, 1},
  {"FaxNumber",                  AUFType_Phn,  10,   0,   0, 1, 1},
  {"VoiceCountryCode",           AUFType_Phn,   4,   0,   0, 1, 1},
  {"VoiceAreaCode",              AUFType_Phn,   8,   0,   0, 1, 1},
  {"VoiceNumber",                AUFType_Phn,  10,   0,   0, 1, 1},
  {"RedialCount",                AUFType_Int,   0,   0, 255, 1, 1},
  {"NANtoken",                   AUFType_Phn,  10,   0,   0, 1, 1},
  {"DefaultRoute",               AUFType_Flg,   0,   0,   0, 1, 1},
  {"AddressExport",              AUFType_Flg,   0,   0,   0, 1, 1},

/* Below here are actions, and commands, and stuff I'm leaving till later.
   Much later...!  */
  {"[Actions]",                  AUFType_Sct,   0,   0,   0, 0, 0},
  {"BackUp",                     AUFType_Act,   0,   0,   0, 0, 0},
  {"UpdateOS",                   AUFType_Nul,   0,   0,   0, 0, 0},
  {"UpdateSerial",               AUFType_Nul,   0,   0,   0, 0, 0},
  {"UpdateFlash",                AUFType_Nul,   0,   0,   0, 0, 0},
  {"PurgeAddressBook",           AUFType_Nul,   0,   0,   0, 0, 0},
  {"ResetConfig",                AUFType_Nul,   0,   0,   0, 0, 0},
  {"PurgeOSUpdates",             AUFType_Nul,   0,   0,   0, 0, 0},
  {"PurgeApplicationUpdates",    AUFType_Nul,   0,   0,   0, 0, 0},
  {"SendConfig",                 AUFType_Act,   0,   0,   0, 0, 0},
  {"SendAddressBook",            AUFType_Nul,   0,   0,   0, 0, 0},
  {"SendOSImage",                AUFType_Nul,   0,   0,   0, 0, 0},
  {"SendAppImage",               AUFType_Nul,   0,   0,   0, 0, 0},
  {"SendLogs",                   AUFType_Act,   0,   0,   0, 0, 0},
  {"PurgeLogs",                  AUFType_Nul,   0,   0,   0, 0, 0},
  {"Poll",                       AUFType_Nul,   0,   0,   0, 0, 0},
  {"SendSchedule",               AUFType_Nul,   0,   0,   0, 0, 0},

  {"[AddressBook]",              AUFType_Sct,   0,   0,   0, 0, 0},
  {"Add",                        AUFType_Act,   0,   0,   0, 11, 14},
  {"Delete",                     AUFType_Nul,   0,   0,   0, 0, 0},
  {"Dump",                       AUFType_Act,   0,   0,   0, 0, 0},
  {"PurgeBook",                  AUFType_Act,   0,   0,   0, 0, 0},
  {"QueryText",                  AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryMachineId",             AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryFaxNumber",             AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryVoiceNumber",           AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryDeviceClass",           AUFType_Nul,   0,   0,   0, 0, 0},
  {"QuerySoftwareRev",           AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryEncryption",            AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryRouting",               AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryCompanyName",           AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryContactName",           AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryEmail",                 AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryPGPKeyLength",          AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryPGPKey",                AUFType_Nul,   0,   0,   0, 0, 0},

  {"[Forms]",                    AUFType_Sct,   0,   0,   0, 0, 0},
  {"Add",                        AUFType_Act,   0,   0,   0, 7, 255},
  {"Delete",                     AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryFormID",                AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryFormTitle",             AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryFormTemplate",          AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryFormsRev",              AUFType_Nul,   0,   0,   0, 0, 0},
  {"QueryFormsSoftwareRev",      AUFType_Nul,   0,   0,   0, 0, 0},
  {"PurgeForms",                 AUFType_Nul,   0,   0,   0, 0, 0},

  {NULL, AUFType_Sct, 0, 0, 0, 0, 0}
};

section sections[] =
{
  "[Actions]",     NULL,
  "[AddressBook]", NULL,
  "[Binaries]",    NULL,
  "[Clock]",       NULL,
  "[Forms]",       NULL,
  "[Identity]",    NULL,
  "[Internet]",    NULL,
  "[Logging]",     NULL,
  "[Phone]",       NULL,
  "[Polling]",     NULL,
  "[Process]",     NULL,
  "[SetAdmin]",    NULL,
  NULL,            NULL
};

static void WimpStop(void)
{
  wimp_closedown(this_task, 0x4B534154);
}

static void WimpStart(void)
{
  _swix(Wimp_Initialise, _INR(0, 3) | _OUT(1),
        350, 0x4B534154, _APPNAME_, wimp_messages, &this_task);

  atexit(WimpStop);
}

static void null_action(void)
{
#if FALSE
  static BOOL done = FALSE;
#else  
  static BOOL done = TRUE;
#endif
  
  if (!done)
  {
    ProcessMail("ADFS::Devon.$.Daytona.MailUpdate.modulewrap.Test.Test1");
    done = TRUE;
    _swix(0x107, 0);
  }
}

static void key_action(int c)
{
  switch(c)
  {
  case 'X':
  case 'x':
    ProcessMail("ADFS::Devon.$.Daytona.MailUpdate.modulewrap.Test.Test1");
    break;

  default:
    wimp_processkey(c);
    break;
  }
}

static void message_action(int *block)
{
  static char inbound[255];
  
  switch(block[4])
  {
  case 0:
    exit(0);
    break;

  case Message_DayCas_OfferFile:
    if ((((message_block *) block)->data.offerfile.messageclass) & 32)
    {
      int len;
      message_block msg;

      strcpy(inbound, ((message_block *) block)->data.offerfile.filename);

      memset(&msg, '\0', sizeof(message_block));
      msg.header.size   = 256;
      msg.header.action = Message_DayCas_SendMail;
      msg.data.sendnote.send_methods = Email_Bit;
      _swix(SFConfigMan_Read, _INR(0, 2) | _OUT(0), "NotificationOfReconfig",
            msg.data.sendnote.email_address, 232, &len);
      msg.data.sendnote.email_address[len] = '\0';
      _swix(Wimp_SendMessage, _INR(0, 5), 18, &msg, 0, 0, 0, 0);
    }
    break;

  case Message_DayCas_SendMail:
    break;

  case Message_DayCas_PathReply:
    {
      char outbound[255];
      
    strcpy(outbound, ((message_block *) block)->data.pathreply.path_data);
    strcat(outbound, ".1");
    ProcessMail(inbound, outbound);
    }
    break;
  }
}

int main (int argc, char **argv)
{
  field *list = biglist;
  section *which;
  int pollblock[64];
  unsigned int reason;

  WimpStart();

  do           /* Load up the sections/fields table */
  {
    if (list->type == AUFType_Sct)
    {
      for (which = sections; which->name != NULL; which++)
      {
        if (strcmp(list->name, which->name) == 0)
        {
          which->fields = ++list;
          break;
        }
      }
    }
    list++;
  } while (list->name != NULL);

  update_status  = Admin_State_Idle;
  update_section = NULL;

  for (;;)
  {
    reason = wimp_pollidle(0x00003830, pollblock, monotonic_time() + 200);

    switch (reason)
    {
    case 0:
      null_action();
      break;

    case 8:
      key_action(pollblock[6]);
      break;

    case 17:
    case 18:
      message_action(pollblock);
      break;

    case 19:
      break;
    }
  }
  exit(0);
}
