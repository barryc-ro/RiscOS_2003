     1   
     3   
     4   
     5   
     6   
     7   
     8   
     9   
    10   
    11  
    12  
    19  
    23  
    24  
    25  static int this_task;
    26  
    27  process_state update_status = Admin_State_Idle;
    28  section *update_section     =  0 ;
    29  
    30  char *version =  "0.01 Compiled "  "11:42:21"  " "  "Jan  9 1998"  ;
    31  
    32  static int wimp_messages[] =
    33  {
    34    0x50D07,     
    35     0x50D08 ,
    36     0x50D09 ,
    37     0 
    38  };
    39  
    40  field biglist[] =
    41  {
    42    {"[Identity]",                 AUFType_Sct,   0,   0,   0, 0, 0},
    43    {"CompanyName",                AUFType_Str, 432,   0,   0, 1, 1},
    44    {"ContactName",                AUFType_Str, 432,   0,   0, 1, 1},
    45  
    46    {"[Clock]",                    AUFType_Sct,   0,   0,   0, 0, 0},
    47    {"TimeZone",                   AUFType_Int,   0, -12,  12, 1, 1},
    48    {"DaylightSavings",            AUFType_Int,   0,   0,   2, 1, 1},
    49  
    50    {"[Internet]",                 AUFType_Sct,   0,   0,   0, 0, 0},
    51    {"PrimaryPhone",               AUFType_Phn,  28,   0,   0, 1, 1},
    52    {"PrimaryRedial",              AUFType_Int,   0,   0, 255, 1, 1},
    53    {"SecondaryPhone",             AUFType_Phn,  28,   0,   0, 1, 1},
    54    {"SecondaryRedial",            AUFType_Int,   0,   0, 255, 1, 1},
    55    {"UserId",                     AUFType_Str,  20,   0,   0, 1, 1},
    56    {"Password",                   AUFType_Str,  20,   0,   0, 1, 1},
    57    {"ResponseString",             AUFType_Str,  31,   0,   0, 1, 1},
    58    {"SMTPHost",                   AUFType_IPA,  65,   0,   0, 1, 1},
    59    {"POP3Host",                   AUFType_IPA,  65,   0,   0, 1, 1},
    60    {"POP3mailbox",                AUFType_IPA, 130,   0,   0, 1, 1},
    61    {"POP3UserId",                 AUFType_Str,  20,   0,   0, 1, 1},
    62    {"POP3Password",               AUFType_Str,  20,   0,   0, 1, 1},
    63    {"Shared",                     AUFType_Flg,   0,   0,   0, 1, 1},
    64    {"DNSServer1",                 AUFType_IPN,   0,   0,   0, 1, 1},
    65    {"DNSServer2",                 AUFType_IPN,   0,   0,   0, 1, 1},
    66    {"DNSServer3",                 AUFType_IPN,   0,   0,   0, 1, 1},
    67    {"FaxEncoding",                AUFType_Int,   0,   0,   3, 1, 1},
    68    {"MissingPageConnectionCount", AUFType_Int,   0,   0,   2, 1, 1},
    69    {"ConnectionHoldUpTime",       AUFType_Int,   0,   0, 300, 1, 1},
    70    {"PagesPerEmail",              AUFType_Int,   0,   1, 255, 1, 1},
    71    {"MaxEmailSize",               AUFType_Int,   0,   1,  0x7fffffff , 1, 1},
    72   
    73    {"[Polling]",                  AUFType_Sct,   0,   0,   0, 0, 0},
    74    {"Sunday",                     AUFType_Tim,   0,   0,   0, 4, 4},
    75    {"Monday",                     AUFType_Tim,   0,   0,   0, 4, 4},
    76    {"Tuesday",                    AUFType_Tim,   0,   0,   0, 4, 4},
    77    {"Wednesday",                  AUFType_Tim,   0,   0,   0, 4, 4},
    78    {"Thursday",                   AUFType_Tim,   0,   0,   0, 4, 4},
    79    {"Friday",                     AUFType_Tim,   0,   0,   0, 4, 4},
    80    {"Saturday",                   AUFType_Tim,   0,   0,   0, 4, 4},
    81    {"PeakDialUps",                AUFType_Int,   0,   0, 255, 1, 1},
    82    {"OffPeakDialUps",             AUFType_Int,   0,   0, 255, 1, 1},
    83    {"Scheduler",                  AUFType_Flg,   0,   0,   0, 1, 1},
    84   
    85    {"[Logging]",                  AUFType_Sct,   0,   0,   0, 0, 0},
    86    {"MaximumFileSize",            AUFType_Int,   0,   0,  0x7fffffff , 1, 1},
    87    {"PurgePeriod",                AUFType_Int,   0,   0,   3, 1, 1},
    88    {"PurgeTime",                  AUFType_Tim,   0,   0,   0, 1, 1},
    89    {"PurgeDay",                   AUFType_Int,   0,   1,   7, 1, 1},
    90    {"PrintBeforePurge",           AUFType_Flg,   1,   0,   0, 1, 1},
    91    {"EmailBeforePurge",           AUFType_Flg,   1,   0,   0, 1, 1},
    92    {"Destination",                AUFType_IPA, 130,   0,   0, 1, 1},
    93   
    94    {"[SetAdmin]",                 AUFType_Sct,   0,   0,   0, 0, 0},
    95    {"UpdateFlash",                AUFType_Flg,   0,   0,   0, 1, 1},
    96    {"UpdateOS",                   AUFType_Flg,   0,   0,   0, 1, 1},
    97    {"UpdateAppsConfig",           AUFType_Flg,   0,   0,   0, 1, 1},
    98    {"UpdateDialUp",               AUFType_Flg,   0,   0,   0, 1, 1},
    99    {"UpdateAdmin",                AUFType_Flg,   0,   0,   0, 1, 1},
   100    {"UpdateAddressBook",          AUFType_Flg,   0,   0,   0, 1, 1},
   101    {"UpdateForms",                AUFType_Flg,   0,   0,   0, 1, 1},
   102    {"Backup",                     AUFType_Flg,   0,   0,   0, 1, 1},
   103    {"EmailConfirmSends",          AUFType_Flg,   0,   0,   0, 1, 1},
   104    {"PrintAfterDispatch",         AUFType_Flg,   0,   0,   0, 1, 1},
   105    {"NotificationOfReconfig",     AUFType_IPA, 130,   0,   0, 1, 1},
   106    {"Confirmation",               AUFType_IPA, 130,   0,   0, 1, 1},
   107   
   108    {"[Process]",                  AUFType_Sct,   0,   0,   0, 0, 0},
   109    {"SendWaterMark",              AUFType_Int,   0,   0, 100, 1, 1},
   110    {"ReceiveWaterMark",           AUFType_Int,   0,   0, 100, 1, 1},
   111  
   112    {"[Phone]",                    AUFType_Sct,   0,   0,   0, 0, 0},
   113    {"ToneDial",                   AUFType_Flg,   0,   0,   0, 1, 1},
   114    {"OutsideLineCode",            AUFType_Phn,   8,   0,   0, 1, 1},
   115    {"PostPrefixPause",            AUFType_Phn,   4,   0,   0, 1, 1},
   116    {"InternationalAccessCode",    AUFType_Phn,  12,   0,   0, 1, 1},
   117    {"PostInternationalPause",     AUFType_Phn,   4,   0,   0, 1, 1},
   118    {"NationalAccessCode",         AUFType_Phn,   4,   0,   0, 1, 1},
   119    {"FaxCountryCode",             AUFType_Phn,   4,   0,   0, 1, 1},
   120    {"FaxAreaCode",                AUFType_Phn,   8,   0,   0, 1, 1},
   121    {"FaxNumber",                  AUFType_Phn,  10,   0,   0, 1, 1},
   122    {"VoiceCountryCode",           AUFType_Phn,   4,   0,   0, 1, 1},
   123    {"VoiceAreaCode",              AUFType_Phn,   8,   0,   0, 1, 1},
   124    {"VoiceNumber",                AUFType_Phn,  10,   0,   0, 1, 1},
   125    {"RedialCount",                AUFType_Int,   0,   0, 255, 1, 1},
   126    {"NANtoken",                   AUFType_Phn,  10,   0,   0, 1, 1},
   127    {"DefaultRoute",               AUFType_Flg,   0,   0,   0, 1, 1},
   128    {"AddressExport",              AUFType_Flg,   0,   0,   0, 1, 1},
   129  
   130   
   131  
   132    {"[Actions]",                  AUFType_Sct,   0,   0,   0, 0, 0},
   133    {"BackUp",                     AUFType_Nul,   0,   0,   0, 0, 0},
   134    {"UpdateOS",                   AUFType_Nul,   0,   0,   0, 0, 0},
   135    {"UpdateSerial",               AUFType_Nul,   0,   0,   0, 0, 0},
   136    {"UpdateFlash",                AUFType_Nul,   0,   0,   0, 0, 0},
   137    {"PurgeAddressBook",           AUFType_Nul,   0,   0,   0, 0, 0},
   138    {"ResetConfig",                AUFType_Nul,   0,   0,   0, 0, 0},
   139    {"PurgeOSUpdates",             AUFType_Nul,   0,   0,   0, 0, 0},
   140    {"PurgeApplicationUpdates",    AUFType_Nul,   0,   0,   0, 0, 0},
   141    {"SendConfig",                 AUFType_Nul,   0,   0,   0, 0, 0},
   142    {"SendAddressBook",            AUFType_Nul,   0,   0,   0, 0, 0},
   143    {"SendOSImage",                AUFType_Nul,   0,   0,   0, 0, 0},
   144    {"SendAppImage",               AUFType_Nul,   0,   0,   0, 0, 0},
   145    {"SendLogs",                   AUFType_Nul,   0,   0,   0, 0, 0},
   146    {"PurgeLogs",                  AUFType_Nul,   0,   0,   0, 0, 0},
   147    {"Poll",                       AUFType_Nul,   0,   0,   0, 0, 0},
   148    {"SendSchedule",               AUFType_Nul,   0,   0,   0, 0, 0},
   149  
   150    {"[AddressBook]",              AUFType_Sct,   0,   0,   0, 0, 0},
   151    {"Add",                        AUFType_Nul,   0,   0,   0, 11, 14},
   152    {"Delete",                     AUFType_Nul,   0,   0,   0, 0, 0},
   153    {"PurgeBook",                  AUFType_Nul,   0,   0,   0, 0, 0},
   154    {"QueryText",                  AUFType_Nul,   0,   0,   0, 0, 0},
   155    {"QueryMachineId",             AUFType_Nul,   0,   0,   0, 0, 0},
   156    {"QueryFaxNumber",             AUFType_Nul,   0,   0,   0, 0, 0},
   157    {"QueryVoiceNumber",           AUFType_Nul,   0,   0,   0, 0, 0},
   158    {"QueryDeviceClass",           AUFType_Nul,   0,   0,   0, 0, 0},
   159    {"QuerySoftwareRev",           AUFType_Nul,   0,   0,   0, 0, 0},
   160    {"QueryEncryption",            AUFType_Nul,   0,   0,   0, 0, 0},
   161    {"QueryRouting",               AUFType_Nul,   0,   0,   0, 0, 0},
   162    {"QueryCompanyName",           AUFType_Nul,   0,   0,   0, 0, 0},
   163    {"QueryContactName",           AUFType_Nul,   0,   0,   0, 0, 0},
   164    {"QueryEmail",                 AUFType_Nul,   0,   0,   0, 0, 0},
   165    {"QueryPGPKeyLength",          AUFType_Nul,   0,   0,   0, 0, 0},
   166    {"QueryPGPKey",                AUFType_Nul,   0,   0,   0, 0, 0},
   167  
   168    {"[Forms]",                    AUFType_Sct,   0,   0,   0, 0, 0},
   169    {"Add",                        AUFType_Nul,   0,   0,   0, 0, 0},
   170    {"Delete",                     AUFType_Nul,   0,   0,   0, 0, 0},
   171    {"QueryFormID",                AUFType_Nul,   0,   0,   0, 0, 0},
   172    {"QueryFormTitle",             AUFType_Nul,   0,   0,   0, 0, 0},
   173    {"QueryFormTemplate",          AUFType_Nul,   0,   0,   0, 0, 0},
   174    {"QueryFormsRev",              AUFType_Nul,   0,   0,   0, 0, 0},
   175    {"QueryFormsSoftwareRev",      AUFType_Nul,   0,   0,   0, 0, 0},
   176    {"PurgeForms",                 AUFType_Nul,   0,   0,   0, 0, 0},
   177  
   178    { 0 , AUFType_Sct, 0, 0, 0, 0, 0}
   179  };
   180  
   181  section sections[] =
   182  {
   183    "[Actions]",      0 ,
   184    "[AddressBook]",  0 ,
   185    "[Binaries]",     0 ,
   186    "[Clock]",        0 ,
   187    "[Forms]",        0 ,
   188    "[Identity]",     0 ,
   189    "[Internet]",     0 ,
   190    "[Logging]",      0 ,
   191    "[Phone]",        0 ,
   192    "[Polling]",      0 ,
   193    "[Process]",      0 ,
   194    "[SetAdmin]",     0 ,
   195     0 ,             0 
   196  };
   197  
   198  static void WimpStop(void)
   199  {
   200    wimp_closedown(this_task, 0x4B534154);
   201  }
   202  
   203  static void WimpStart(void)
   204  {
   205    _swix( 0x000400C0 ,  (~0 << ( 0 ) ^ ~0 << ( 3 ) + 1)  |  (( 1 ) !=  0x10 ? 1U << 31 - ( 1 ): 1U << 21) ,
   206          350, 0x4B534154,  "AdminUpdate" , wimp_messages, &this_task);
   207  
   208    atexit(WimpStop);
   209  }
   210  
   211  static void null_action(void)
   212  {
   213   0 
   214  
   214  
   215  
   216    static BOOL done =  (!( 0 )) ;
   217  
   218    
   219    if (!done)
   220    {
   221      ProcessMail("ADFS::Devon.$.Daytona.MailUpdate.modulewrap.Test.Test1");
+++ Warning: inventing 'extern int ProcessMail();'
   222      done =  (!( 0 )) ;
   223      _swix(0x107, 0);
   224    }
   225  }
   226  
   227  static void key_action(int c)
   228  {
   229    switch(c)
   230    {
   231    case 'X':
   232    case 'x':
   233      ProcessMail("ADFS::Devon.$.Daytona.MailUpdate.modulewrap.Test.Test1");
   234      break;
   235  
   236    default:
   237      wimp_processkey(c);
   238      break;
   239    }
   240  }
   241  
   242  static void message_action(int *block)
   243  {
   244    static char inbound[255];
   245    
   246    switch(block[4])
   247    {
   248    case 0:
   249      exit(0);
   250      break;
   251  
   252    case 0x50D07:
   253      if (((message_block *) block)->data.offerfile.messageclass & 32)
   254      {
   255        int len;
   256        message_block msg;
   257  
   258        strcpy(inbound, ((message_block *) block)->data.offerfile.filename);
   259  
   260        memset(&msg, '\0', sizeof(message_block));
   261        msg.header.size   = 256;
   262        msg.header.action =  0x50D08 ;
   263        msg.data.sendnote.send_methods =  (1 << 0) ;
   264        _swix( 0x050a40 ,  (~0 << ( 0 ) ^ ~0 << ( 2 ) + 1)  |  (( 0 ) !=  0x10 ? 1U << 31 - ( 0 ): 1U << 21) , "NotificationOfReconfig",
   265              msg.data.sendnote.email_address, 232, &len);
   266        msg.data.sendnote.email_address[len] = '\0';
   267        _swix( 0x000400E7 ,  (~0 << ( 0 ) ^ ~0 << ( 5 ) + 1) , 18, &msg, 0, 0, 0, 0);
   268      }
   269      break;
   270  
   271    case  0x50D08 :
   272      break;
   273  
   274    case  0x50D09 :
   275      {
   276        char outbound[255];
   277        
   278      strcpy(outbound, ((message_block *) block)->data.pathreply.path_data);
   279      strcat(outbound, ".1");
   280      ProcessMail(inbound, outbound);
   281      }
   282      break;
   283    }
   284  }
   285  
   286  int main (int argc, char **argv)
   287  {
   288    field *list = biglist;
   289    section *which;
   290    int pollblock[64];
   291    unsigned int reason;
   292  
   293    WimpStart();
   294  
   295    do            
   296    {
   297      if (list->type == AUFType_Sct)
   298      {
   299        for (which = sections; which->name !=  0 ; which++)
   300        {
   301          if (strcmp(list->name, which->name) == 0)
   302          {
   303            which->fields = ++list;
   304            break;
   305          }
   306        }
   307      }
   308      list++;
   309    } while (list->name !=  0 );
   310  
   311    update_status  = Admin_State_Idle;
   312    update_section =  0 ;
   313  
   314    for (;;)
   315    {
   316      reason = wimp_pollidle(0x00003830, pollblock, monotonic_time() + 200);
   317  
   318      switch (reason)
   319      {
   320      case 0:
   321        null_action();
   322        break;
   323  
   324      case 8:
   325        key_action(pollblock[6]);
   326        break;
   327  
   328      case 17:
   329      case 18:
   330        message_action(pollblock);
   331        break;
   332  
   333      case 19:
   334        break;
   335      }
   336    }
   337    exit(0);
   338  }
   339  
