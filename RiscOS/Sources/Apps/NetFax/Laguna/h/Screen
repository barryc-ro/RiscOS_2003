/*
 * Screen.h - Screen state machine
 *
 * R C Manby
 *
 * Started 06 August 1997
 *
 */


/* Messages from LocModem to Screen */
/*  (scanning documents into the SendQ) */
#define LM_SC_OFFHOOK                   (LM_SC_MESSAGE_BASE + 0)
#define LM_SC_ONHOOK                    (LM_SC_MESSAGE_BASE + 1)
#define LM_SC_NUMBERCAPTURED            (LM_SC_MESSAGE_BASE + 2)	/*>>>is this used?*/
/*  (printing documents from the PrintQ) */
/*#define LM_SC_PRINTing                     (LM_SC_MESSAGE_BASE + 3)*/
#define LM_SC_PRINT_COMPLETE            (LM_SC_MESSAGE_BASE + 4)


/* Messages from SendQ to Screen */
/*  (scanning documents into the SendQ) */
#define SQ_SC_NEW_DOCUMENT              (SQ_SC_MESSAGE_BASE + 0)
#define SQ_SC_NEW_PAGE                  (SQ_SC_MESSAGE_BASE + 1)
#define SQ_SC_PAGE_COMPLETE             (SQ_SC_MESSAGE_BASE + 2)
#define SQ_SC_DOCUMENT_COMPLETE         (SQ_SC_MESSAGE_BASE + 3)
/*  (recipient name and route - can arrive anytime between scan start and transmission start) */
#define SQ_SC_CONTACTNAME               (SQ_SC_MESSAGE_BASE + 4)
#define SQ_SC_DISPLAYNUMBER             (SQ_SC_MESSAGE_BASE + 5)
#define SQ_SC_DISPLAYEMAIL              (SQ_SC_MESSAGE_BASE + 6)

/*  (transmitting documents from the SendQ) */
#define SQ_SC_CONTEXT_DIRECT            (SQ_SC_MESSAGE_BASE + 7)
#define SQ_SC_CONTEXT_ISP               (SQ_SC_MESSAGE_BASE + 8)
#define SQ_SC_SENDING_DOCUMENT          (SQ_SC_MESSAGE_BASE + 9)
#define SQ_SC_SENDING_FAX               (SQ_SC_MESSAGE_BASE + 10)
#define SQ_SC_PAGE_SENT                 (SQ_SC_MESSAGE_BASE + 11)
#define SQ_SC_SENDING_EMAIL             (SQ_SC_MESSAGE_BASE + 12)
#define SQ_SC_DOCUMENT_SENT             (SQ_SC_MESSAGE_BASE + 13)
#define SQ_SC_CONTEXT_LAN               (SQ_SC_MESSAGE_BASE + 14)

/* Messages from Screen to SendQ */
#define SC_SQ_ROUTING                   (SC_SQ_MESSAGE_BASE + 0)
#define SC_SQ_CANCEL_CONFIRMED          (SC_SQ_MESSAGE_BASE + 1)
#define SC_SQ_CANCEL_REVOKED            (SC_SQ_MESSAGE_BASE + 2)


/* Messages from PrintQ to Screen */
/*  (receiving documents into the PrintQ) */
#define PQ_SC_NEW_DOCUMENT              (PQ_SC_MESSAGE_BASE + 0)
#define PQ_SC_DOCUMENT_DETAILS          (PQ_SC_MESSAGE_BASE + 1)
#define PQ_SC_NEW_PAGE                  (PQ_SC_MESSAGE_BASE + 2)
#define PQ_SC_PAGE_COMPLETE             (PQ_SC_MESSAGE_BASE + 3)
#define PQ_SC_DOCUMENT_COMPLETE         (PQ_SC_MESSAGE_BASE + 4)
/*  (printing documents from the PrintQ) */
#define PQ_SC_CONTEXT                   (PQ_SC_MESSAGE_BASE + 5)
#define PQ_SC_PRINTING_FAX              (PQ_SC_MESSAGE_BASE + 6)
#define PQ_SC_PAGE_SENT                 (PQ_SC_MESSAGE_BASE + 7)
#define PQ_SC_PRINTING_COMPLETE         (PQ_SC_MESSAGE_BASE + 8)


/* Messages from RemModem to Screen */
/*  (transmitting documents from the SendQ) */
#define RM_SC_DIALLING                  (RM_SC_MESSAGE_BASE + 0)
#define RM_SC_RINGING                   (RM_SC_MESSAGE_BASE + 1)
#define RM_SC_CONNECTED                 (RM_SC_MESSAGE_BASE + 2)
#define RM_SC_CANNOTCONNECT             (RM_SC_MESSAGE_BASE + 3)
#define RM_SC_DIAL_COMPLETE             (RM_SC_MESSAGE_BASE + 4)
/*  (printing documents from the PrintQ) */
#define RM_SC_INCOMING                  (RM_SC_MESSAGE_BASE + 5)
#define RM_SC_INCOMING_COMPLETE         (RM_SC_MESSAGE_BASE + 6)


#define RX_SC_POP3_MESSAGE_COUNT        (RX_SC_MESSAGE_BASE + 0)
#define RX_SC_POP3_DOWNLOAD_START       (RX_SC_MESSAGE_BASE + 1)
#define RX_SC_POP3_DOWNLOAD_COMPLETE    (RX_SC_MESSAGE_BASE + 2)
#define RX_SC_LAN_START                 (RX_SC_MESSAGE_BASE + 3)
#define RX_SC_LAN_END                   (RX_SC_MESSAGE_BASE + 4)


extern void Screen_StateMachine(int messageNumber, messageDataBlock *messageData);
extern void Screen_ReportError(char *Title_Tag, messageDataBlock *messageData);
extern void Screen_QuerryRoute(unsigned int ProcessId, const char *ContactName);
extern void Screen_QuerryCancel(unsigned int ProcessId);
extern void Screen_LocalFax_NotConnected(void);

extern void ErrorLight_On(void);
extern void Buzzer_On(int time);

//TFax stuff 
#if SUPPORT_UI
extern void Screen_ReportError(char *Title_Tag, messageDataBlock *messageData);
#else
extern void Fax_ReportError(int Local_error,char *Title_Tag, messageDataBlock *messageData,char *directory,int SendCount);
#define LOCAL_ERROR 1
#define REMOTE_ERROR 0
#endif
/* end of Screen.h */



