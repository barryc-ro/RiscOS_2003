/* Code to load image into cache via WebFTP */

#include <stdio.h>
#include <stdlib.h>

#include "kernel.h"
#include "swis.h"

#include "fetcher.h"





// Load the Rom Image into memory buffer assigned
volatile unsigned int *fetch_image(char *filename)
{
  volatile unsigned int *start_of_buffer;


  if (filing_system == MEMORY)  start_of_buffer = get_memory_ptr(filename);

  if (filing_system == ZIPFS)  start_of_buffer  = fetch_image_from_zip(filename);


  return(start_of_buffer);

}



volatile unsigned int *fetch_image_from_zip(char *filename)
{
  _kernel_swi_regs regs;
  _kernel_oserror *err;

  volatile unsigned int *start_of_buffer;

  // read in the size of the file from the OS
  regs.r[0] = 5;
  regs.r[1] = (int)filename;


  _kernel_swi(OS_File, &regs, &regs);

  // if file not found
  if (regs.r[0] == 0)
  {
    printf("File not found\n");
    exit(0);
  }

  // get the size of file
  image_length = regs.r[4];


  // allocate memory for image file in RAM
  start_of_buffer = malloc(image_length);


  // load file into RAM
  printf("Loading image file....\n");

  regs.r[0] = 16;
  regs.r[1] = (int)filename;
  regs.r[2] = (int)start_of_buffer;
  regs.r[3] = 0;

  if ((err = _kernel_swi(OS_File, &regs, &regs)))
  {
    printf("Couldn't open input file\n");
    exit(0);
  }

  return(start_of_buffer);


}


volatile unsigned int *get_memory_ptr(char *filename)
{

  volatile unsigned int *start_of_buffer;



  if (image_length == 0)
  {
    printf("No image length supplied\n");
    return(0);
  }

  // get the address of the image from the command line
   start_of_buffer = (volatile unsigned int*)atoi(filename);

  return(start_of_buffer);
}

