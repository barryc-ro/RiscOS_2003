/**************************************************************/
/* File:    Global.c                                          */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Holds all of the application's globals.           */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 04-Apr-2000 (ADH): Adapted from Browse source.    */
/*          16-Oct-2000 (ADH): Imported from PlugPlay.        */
/*          18-Oct-2000 (ADH): Trace level stuff is now all   */
/*                             handled by DebugLib.           */
/*          30-Apr-2001 (ADH): Imported from DDT2.            */
/**************************************************************/

#include <setjmp.h>

#include <kernel.h>

#include <tboxlibs/toolbox.h>
#include <tboxlibs/wimp.h>

#include "Limit.h"

#include "Global.h"

jmp_buf           env;                                         /* Used for error handler, so it can jump back to poll look if  */
                                                               /* the user selects OK rather than Cancel                       */


int               sprite_block;
MessagesFD        meb;                                         /* MessageTrans Messages file control block                     */
char              tokens                    [Limits_Message];  /* lookup_token/choice puts looked up data in here              */
char              lasttokn                  [Limits_Token];    /* The last token looked up is stored here for future reference */
int               messages_list             [] = {0};
int               event_code_list           [] = {0};
IdBlock           idb;                                         /* For all Toolbox-registered event handlers                    */
WimpPollBlock     b;                                           /* For Toolbox-registered Wimp event handlers                   */

int               printing;                                    /* For OS unit to millipoint stuff                              */
int               null_counter;                                /* When zero, null events will be disabled, else enabled. For   */
                                                               /* each time something wants to claim nulls, it increments this */
                                                               /* and decrements it when finished                              */
_kernel_oserror   erb;                                         /* Global error block for custom errors                         */
