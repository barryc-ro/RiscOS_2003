/**************************************************************/
/* File:    Global.h                                          */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Holds all of the application's globals.           */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 04-Apr-2000 (ADH): Adapted from Browse source.    */
/*          16-Oct-2000 (ADH): Imported from PlugPlay.        */
/*          18-Oct-2000 (ADH): Trace level stuff is now all   */
/*                             handled by DebugLib.           */
/*          30-Apr-2001 (ADH): Imported from DDT2.            */
/**************************************************************/

#ifndef UpgFetch_Global__
  #define UpgFetch_Global__

  #include <setjmp.h>
  #include <kernel.h>
  #include <tboxlibs/toolbox.h>
  #include <tboxlibs/wimp.h>

  #include "Limit.h"

  #ifdef TRACE
    #define DEBUGLIB
  #endif
  #include <debuglib/debuglib.h>

  /* Some code in UpgFetch has a long history back to Browse and */
  /* still uses tne type browser_data for a handle. Rather   */
  /* than waste time changing that, just convert the type to */
  /* something more appropriate.                             */

  typedef struct project browser_data;

  /* For comments on what these actually are, see Global.c */

  /* Fundamental application stuff */

  extern jmp_buf          env;

//  extern int              modechanged;

//  extern int              wimp_version;
//  extern int              nested_wimp;
//  extern int              task_handle;
  extern int              sprite_block;

//  extern int              taskmodule_ds_registered;
//  extern int              uri_module_present;
  extern int              printing;

  extern MessagesFD       meb;
  extern char             tokens          [Limits_Message];
  extern char             lasttokn        [Limits_Token];

//  extern char             program_name    [Limits_TaskName];
//  extern char           * task_dir;

  extern int              messages_list   [];
  extern int              event_code_list [];
  extern IdBlock          idb;
  extern WimpPollBlock    b;

  extern int              null_counter;

  /* Global error block to allow functions to hand back filled in */
  /* custom error blocks, when necessary.                         */

  extern _kernel_oserror  erb;

#endif /* UpgFetch_Global__ */
