/**************************************************************/
/* File:    config.h                                          */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Conifiguration related tasks.                     */
/*                                                            */
/* Author:  Nick Evans, Andrew Hodgkinson.                    */
/*                                                            */
/* History: 03-Oct-2000 (NE):  Created.                       */
/*          10-May-2001 (ADH): Restructuring, some fixes.     */
/**************************************************************/

#ifndef UpgCreate_config__
  #define UpgCreate_config__

  /* Public types */

  /* Image types; note the names array at the top of main.c */
  /* for display aesthetics must be kept in step with this. */

  typedef enum image_type
  {
    image_type_os = 0,
    image_type_font,
    image_type_exec,
    image_type_transient,
    image_type_resident,
    image_type_permanent,

    image_type_unknown = -1

  } image_type;

  /* Tag types */

  typedef enum
  {
    TLV_TAG_TYPE_FILE_SIZE,
    TLV_TAG_TYPE_DISPLAY_STRING,
    TLV_TAG_TYPE_BUILD_LIST,
    TLV_TAG_TYPE_LOCALE_LIST,
    TLV_TAG_TYPE_IMAGE_TYPE,
    TLV_TAG_TYPE_IMAGE_LENGTH,
    TLV_TAG_TYPE_IMAGE_DATA,
    TLV_TAG_TYPE_FILE_CRC,
    TLV_TAG_TYPE_RANDOM_DATA,
    TLV_TAG_TYPE_BANK,
    TLV_TAG_TYPE_UID,

    TLV_TAG_TYPE_UNRECOGNISED

  } TLV_TAG_TYPES;

  typedef struct config
  {
    char         image_path     [256]; /* Input name                            */
    char         out_path       [256]; /* Output name                           */
    char         extract_to     [256]; /* Optional extraction path for checking */

    char         display_string [100]; /* String to display when fetching image */
    char         build          [100]; /* List of compatible builds             */
    char         locale         [100]; /* Locale list                           */

    int          uid;                  /* Optional UID value                    */
    int          have_uid;             /* Flag that a UID is to be used         */
    int          randomise;            /* EOR UID with time() and rand()?       */

    int          bank;                 /* ROM bank                              */
    image_type   type;                 /* Type of upgrade file                  */

  } config;

  /* Function prototypes */

  int config_read_args (config * setup, int argc, char * argv[]);

#endif /* UpgCreate_config__ */
