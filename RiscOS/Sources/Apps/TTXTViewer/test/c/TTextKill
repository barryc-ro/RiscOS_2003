#include "swis.h"
#include "wimplib.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

int cmp(char *a, char *b)
{
   while (*a == *b && *a >= ' ' && *b >= ' ')
      a++, b++;

   return *a < ' ' && *b < ' ';
}

int main(void)
{
   _kernel_oserror *err = NULL;

   int taskHandle = 0;

   static int wimpMessages[] =
   { /* wimp messages that are used */
      0
   };

   err = wimp_initialise(310,
                         "TTextKill",
                         wimpMessages,
                         NULL,
                         &taskHandle);

   if (!err)
   {
      int next = 0;
      struct
      {
         int taskHandle;
         char *taskName;
         int slotSize;
         int flags;
      } block;

      while (!err && next >= 0)
      {
         int notUsed = 0;
         err = _swix(TaskManager_EnumerateTasks,_INR(0,2)|_OUT(0)|_OUT(2),
                     next,&block,sizeof(block),
                     &next,&notUsed);

         if (!err && notUsed == 0 && cmp(block.taskName,"Teletext Viewer"))
         {
            WimpMessage mes;
            next = -1;
            mes.hdr.size = 20;
            mes.hdr.my_ref = 0;
            mes.hdr.your_ref = 0;
            mes.hdr.action_code = 0;
            err = wimp_send_message(Wimp_EUserMessageRecorded,&mes,block.taskHandle,0,NULL);
         }
      }
   }

   if (err)
      wimp_report_error(err,
                        Wimp_ReportError_Cancel,
                        "TTextTest");

   if (taskHandle != 0)
      wimp_close_down(taskHandle);

   return EXIT_SUCCESS;
}
