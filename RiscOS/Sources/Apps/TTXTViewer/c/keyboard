#include "keyboard.h"

#include "swis.h"
#include <stdlib.h>
#include <stdio.h>
#include "stdbool.h"

/*#define DEBUG*/

#ifdef DEBUG
static _kernel_oserror *DEBUG_Err = NULL;

#define DEBUG_ECHECK(a) \
do\
{\
   DEBUG_Err = (a);\
   if (DEBUG_Err)\
   {\
      fprintf(stderr,"Error returned from %s:%d: %s\n",__FILE__,__LINE__,#a);\
      fprintf(stderr,"&%8.8X: %s\n",DEBUG_Err->errnum,DEBUG_Err->errmess);\
   }\
} while(false);
#else
#define DEBUG_ECHECK(a) (a)
#endif

static bool KeyboardInitialised = false;
static char OldKeyboardState[11] = {0};

static char osbyte(char r0, char r1, char r2)
{
   int out;
   DEBUG_ECHECK(_swix(OS_Byte,_INR(0,2)|_OUT(1),r0,r1,r2,&out));
   return (char)out;
}

/* Initialise the keyboard to return keycodes in the same way as the Wimp */
_kernel_oserror *keyboard_init(void)
{
   OldKeyboardState[0] = osbyte(4,2,0);      /* cursor keys act as function keys */
   OldKeyboardState[1] = osbyte(219,0x8A,0); /* tab key returns 0x8A */
   OldKeyboardState[2] = osbyte(221,2,0);
   OldKeyboardState[3] = osbyte(222,2,0);
   OldKeyboardState[4] = osbyte(223,2,0);
   OldKeyboardState[5] = osbyte(224,2,0);
   OldKeyboardState[6] = osbyte(225,2,0);
   OldKeyboardState[7] = osbyte(226,2,0);
   OldKeyboardState[8] = osbyte(227,2,0);
   OldKeyboardState[9] = osbyte(228,2,0);
   OldKeyboardState[10] = osbyte(229,1,0);   /* escape returns 27 */
   osbyte(124,0,0); /* clear escape condition */

   KeyboardInitialised = true;

   return NULL; /* technically the OS_Bytes could return errors but the machine is probably already
                   dead if they do */
}

void keyboard_restore(void)
{
   if (KeyboardInitialised)
   {
      osbyte(4,OldKeyboardState[0],0);
      osbyte(219,OldKeyboardState[1],0);
      osbyte(221,OldKeyboardState[2],0);
      osbyte(222,OldKeyboardState[3],0);
      osbyte(223,OldKeyboardState[4],0);
      osbyte(224,OldKeyboardState[5],0);
      osbyte(225,OldKeyboardState[6],0);
      osbyte(226,OldKeyboardState[7],0);
      osbyte(227,OldKeyboardState[8],0);
      osbyte(228,OldKeyboardState[9],0);
      osbyte(229,OldKeyboardState[10],0);
      KeyboardInitialised = false;
   }
}

static int get_key(void)
{
   int keycode,state;

   if (_swix(OS_Byte,_INR(0,2)|_OUTR(1,2),129,0,0,&keycode,&state) != NULL ||
       state != 0)
   {
      keycode = -1;
   }

   return keycode;
}

int keyboard_get_key(void)
{
   int key = get_key();

   if (key == 0)
   {
      key = get_key();

      if (key < 1) /* we either got a NUL followed by nothing or two NULs */
         key = -1; /* both of which are wrong so return no key */
      else
         key += 0x100;
   }

   return key;
}
