// FILE: fmtids.h
//=============================================================================
//
// Author: Bill Smith
// Date:   1/23/98
//
// Copyright 1998, Citrix Systems Inc
//
// Desc: 
//
//
//=============================================================================


/****
*
* $Author$
* $Log$
*  
*     Rev 1.0   Mar 30 1998 14:38:28   bills
*  Initial revision.
*
****/


#ifndef _AUDCVT_FMT_IDS_H
#define _AUDCVT_FMT_IDS_H


// Include files:
//===============

#include <citrix/vdcam.h>

// Forward References:
//====================


// Const/Define:
//==============

// used for quick comparisons
// these are sorted in highest quality to lowest
#define		PCM_44K_16B_STER { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_44KHZ | SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_STEREO }
#define FLG_PCM_44K_16B_STER 0x8000

#define		PCM_44K_16B_MONO { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_44KHZ | SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_MONO }
#define FLG_PCM_44K_16B_MONO 0x4000

#define		PCM_44K_8B_STER  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_44KHZ | SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_STEREO }
#define FLG_PCM_44K_8B_STER  0x2000

#define		PCM_44K_8B_MONO  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_44KHZ | SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_MONO }
#define FLG_PCM_44K_8B_MONO  0x1000

#define		PCM_22K_16B_STER { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_22KHZ | SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_STEREO }
#define FLG_PCM_22K_16B_STER 0x0800

#define		PCM_22K_16B_MONO { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_22KHZ | SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_MONO }
#define FLG_PCM_22K_16B_MONO 0x0400

#define		PCM_22K_8B_STER  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_22KHZ | SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_STEREO }
#define FLG_PCM_22K_8B_STER  0x0200

#define		PCM_22K_8B_MONO  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_22KHZ | SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_MONO }
#define FLG_PCM_22K_8B_MONO  0x0100

#define		PCM_11K_16B_STER { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_11KHZ | SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_STEREO }
#define FLG_PCM_11K_16B_STER 0x0080

#define		PCM_11K_16B_MONO { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_11KHZ | SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_MONO }
#define FLG_PCM_11K_16B_MONO 0x0040

#define		PCM_11K_8B_STER  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_11KHZ | SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_STEREO }
#define FLG_PCM_11K_8B_STER  0x0020

#define		PCM_11K_8B_MONO  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_11KHZ | SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_MONO }
#define FLG_PCM_11K_8B_MONO  0x0010

#define		PCM_8K_16B_STER  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_8KHZ  | SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_STEREO }
#define FLG_PCM_8K_16B_STER  0x0008

#define		PCM_8K_16B_MONO  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_8KHZ  | SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_MONO }
#define FLG_PCM_8K_16B_MONO  0x0004

#define		PCM_8K_8B_STER   { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_8KHZ  | SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_STEREO }
#define FLG_PCM_8K_8B_STER   0x0002

#define		PCM_8K_8B_MONO   { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_8KHZ  | SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_MONO }
#define FLG_PCM_8K_8B_MONO   0x0001

// all converter modules must support at least 1 of these formats as well as thier specialized one
#define PCM_XK_8B_MONO   { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_MONO }
#define PCM_XK_8B_STER   { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_8BIT  | SUBFMT_LINEAR_PCM_STEREO }
#define PCM_XK_16B_MONO  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_MONO }
#define PCM_XK_16B_STER  { FORMAT_LINEAR_PCM,  SUBFMT_LINEAR_PCM_16BIT | SUBFMT_LINEAR_PCM_STEREO }


// now to make things easier in the long run combile the flags
// these flags will tell us if given pcm format x, what can convert to, now converting up in sound quality there is a 2x size limit
#define FLG_8K_8B_MONO_CVT_TO                              FLG_PCM_8K_8B_MONO  | FLG_PCM_8K_16B_MONO | FLG_PCM_8K_8B_STER | FLG_PCM_11K_8B_MONO 
#define FLG_8K_16B_MONO_CVT_TO	 FLG_8K_8B_MONO_CVT_TO	 | FLG_PCM_11K_8B_STER | FLG_PCM_11K_16B_MONO
#define FLG_8K_8B_STER_CVT_TO	 FLG_8K_16B_MONO_CVT_TO  | FLG_PCM_11K_8B_STER 
#define FLG_8K_16B_STER_CVT_TO	 FLG_8K_8B_STER_CVT_TO   | FLG_PCM_11K_16B_STER

#define FLG_11K_8B_MONO_CVT_TO	 FLG_8K_16B_STER_CVT_TO	 | FLG_PCM_22K_8B_MONO
#define FLG_11K_16B_MONO_CVT_TO	 FLG_11K_8B_MONO_CVT_TO	 | FLG_PCM_22K_8B_STER | FLG_PCM_22K_16B_MONO
#define FLG_11K_8B_STER_CVT_TO	 FLG_11K_16B_MONO_CVT_TO
#define FLG_11K_16B_STER_CVT_TO	 FLG_11K_8B_STER_CVT_TO  | FLG_PCM_22K_16B_STER

#define FLG_22K_8B_MONO_CVT_TO	 FLG_11K_8B_STER_CVT_TO  | FLG_PCM_44K_8B_MONO
#define FLG_22K_16B_MONO_CVT_TO	 FLG_22K_8B_MONO_CVT_TO	 | FLG_PCM_44K_16B_MONO | FLG_PCM_44K_8B_STER
#define FLG_22K_8B_STER_CVT_TO	 FLG_22K_16B_MONO_CVT_TO  
#define FLG_22K_16B_STER_CVT_TO	 FLG_22K_8B_STER_CVT_TO  | FLG_PCM_44K_16B_STER

#define FLG_44K_8B_MONO_CVT_TO   FLG_22K_16B_STER_CVT_TO
#define FLG_44K_16B_MONO_CVT_TO	 FLG_44K_8B_MONO_CVT_TO		 
#define FLG_44K_8B_STER_CVT_TO	 FLG_44K_16B_MONO_CVT_TO
#pragma TODO(after release of pICAsso 1.0 we need to come back and allow 44s16 to 11m16 conversions)
#define FLG_44K_16B_STER_CVT_TO	 FLG_44K_8B_STER_CVT_TO  & ~FLG_PCM_11K_16B_MONO

// Classes/Structs:
//=================


// Function Prototypes:
//=====================


#endif

// end

