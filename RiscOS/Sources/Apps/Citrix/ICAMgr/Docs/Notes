On loading the ICAMgr app the first thing it does is to load and parse the two
INI files - AppSvr and WFClient.

Both files are read into the same structure and the relevant sections are
extracted from the whole.

The first stage of parsing is to read the INI file line by line.

================================================================================
Reading an INI file:

All lines have white space stripped from the beginning of the line before
further processing.

Empty lines and lines beginning with a semicolon (comments) are ignored.

Lines beginning with an opening square bracket '[' and with a ']' further along
the line are treated as beginnings to sections.  All characters between the
opening and closing braces are the section name, characters following the
closing bracket are ignored.  If the section hasn't been encountered before it
a new section structure is created and all following entries are added to this
section.  If the a section with the same name has been encountered the
previously created section structure is used as the target for all following
entries.

An entry is a line with a tag and a value separated by the equals symbol '='.
all entries are read into the last selected section.  An entry line has white
space stripped between the tag and '=' symbol and '=' and value.  It also has
the white space at the end of the line stripped.

Lines which cannot be recognised as either a comment, blank line, section or
entry will throw an error.

If an entry is encountered before a section has been started an error will be
thrown.

Section and entry tags are treated case insensitively.

================================================================================

Identifying connection sections:

The section named 'ApplicationServers' should contain a collection of entries
with tag but no value.  The names for each of these entries should correspond
to connections within the INI file.  Each of these sections is a server.

================================================================================

Turning connection sections into something more useful:

For each connection section a connection structure is created.  The entries in
the connection INI section are detached from the main INI file structure and
are attached to the connection structure, the section structure is deleted from
the list.  Any entries which correspond to elements of the connection structure
have their data transferred to the structure and are deleted from the list of
entries.  Unrecognised entries are kept linked to the connection structure.
Recognised entries which occur more than once in the section have the last
occurance taken as the valid one.  Unrecognised entries which occur more than
once are preserved.  Any sections of the connection structure which are not held
within the server section are assigned sensible defaults.

If any connection sections are missing they are ignored.

Once all connection sections have been converted to connection structures the
section 'ApplicationServers' and all its entries are deleted.

Connection structure:

typedef struct ica_connection
{
  /* Also needs UI data */

  char                  * description;
  char                  * server;
  
  char                  * application;
  char                  * working_dir;
  char                  * username;
  char                  * password;
  char                  * domain;
  int                     screen_width;
  int                     screen_height;
  int                     screen_colours;
  int                     use_disc_cache : 1;

  ini_entry             * ini_entries;
  
  struct ica_connection * previous;
  struct ica_connection * next;
} ica_server;

================================================================================

Dealing with the rest of the INI file:

All of the remaining sections are scanned sequentially searching for recognised
tags.  All recognised tags have their values read into 'settings' structure and
are removed from INI structure.  Any items in the settings structure which do
not occur in the INI structure are given sensible default values.

All sections which no longer have any entries within them are removed.

The ICAMgr application will also contain a list of tags and which section they
belong in an will move them into the correct section and, if the section doesn't
exist, create that section.

Settings structure:

typedef struct ica_settings
{
  int             screen_width;
  int             screen_height;
  int             screen_colours;
  char          * cache_directory;
  int             cache_diskuse;
  int             cache_smallest;
  
  ini_section   * ini_sections;
} ica_settings;

================================================================================

Saving the AppSvr INI file:

Saving the AppSvr file is a case of simply writing the information about all
connections to the file along with associated information.

1) Write a comment to the beginning of the file:

;**********************************************************************
;**
;** APPSVR - Application Server Configuration File.
;** 
;** This file contains user settings which define application servers.
;**
;**********************************************************************

2) Write the ApplicationServers section - lists all servers in the file:

[ApplicationServers]
Server1=
Server2=
Another Server=

3) Write the Servers - the server information is constructed from the
   information held within the server structures and the INI file information
   from previously unrecognised sections:

[Server1]
InitialProgram=(initial application)
WorkDirectory=(working directory)
Address=(server address)
PersistentCacheEnabled=(On/Off)
Username=(username)
Domain=(domain)
Password=(encrypted password)
DesiredHRes=(hres or -1 to use default)
DesiredVRes=(vres or -1 to use default)
DesiredColor=(1 = 16/2 = 256 or -1 to use default)
...
UnrecognisedTag1=
UnrecognisedTag2=
...

4) Write a closing comment:

; Created : Mon Jul 27 10:01:07 1998

================================================================================

Writing the WFClient INI file:

1) Write a comment to the beginning of the file:

;**********************************************************************
;**
;** WFCLIENT.INI - WinFrame Client Configuration File.
;**
;** This file contains initialization information for the
;** WinFrame Client program.
;**
;**********************************************************************

2) Write all the sections taking information from the global settings
   structure where appropriate:

[WFClient]
PersistentCachePath=(Cache path)
PersistentCacheMinBitmap=(Minimum bitmap size to cache in bytes)
PersistentCacheSize=(Disc cache size in bytes)
**Other unrecognised entries in this section**

[Thinwire3.0]
DesiredHRES=(default hres or -1 to use current mode)
DesiredVRes=(default vres or -1 to use current mode)
DesiredColor=(1 = 16/2 = 256)
**Other unrecognised entries in this section**

**Other unrecognised sections**

4) Write a closing comment:

; Created : Mon Jul 27 10:01:07 1998

================================================================================
Structure of ICAMgr data:

ICAMgr
+-User interface relevant data
+-Servers
| +-Server data
| +-INI entries (Linked list)
+-Global settings
  +-Settings data
  +-INI sections (Linked list)
    +-INI entries (Linked list)
