/***************************************************/
/* File   : main.c                                 */
/*                                                 */
/* Purpose: ICAMgr main program.                   */
/*                                                 */
/* Author : D.T.A.Brown                            */
/*                                                 */
/* History: 23-Jul-98: Created.                    */
/***************************************************/

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>

#include "kernel.h"

#include "VersionNum"

#include "toolbox.h"
#include "event.h"

#include "INI.h"
#include "ICAMgr.h"
#include "list.h"
#include "ica.h"
#include "misc.h"
#include "connection.h"
#include "globals.h"
#include "TBEvents.h"
#include "manager.h"
#include "proginfo.h"

#define APP_VERSION Module_MajorVersion " (" Module_Date ") " Module_MinorVersion

ObjectId iconbar_id;

/* Toolbox events the application is interested in */
static int toolbox_events[] = {ProgInfo_AboutToBeShown,

                               IconMenuQuit,
                               RemAppShowing,
                               RemAppHiding,
                               IconClick,
                               MainMenuShowing,
                               SelectAll,
                               SelectClear,
                               ToolbarNew,
                               ToolbarDelete,
                               ToolbarEdit,
                               ConnectOk,
                               ConnectCancel,
                               0};

/* Wimp messages the application is interested in */
static int wimp_messages[] = {0};

/*************************************************/
/* main_tbquit_handler()                         */
/*                                               */
/* Tells the application to quit.                */
/*************************************************/

int main_quit_handler(void)
{
  quit = 1;
  return 1;
}

/*************************************************/
/* main_tbquit_handler()                         */
/*                                               */
/* Calls main_quit_handler when a quit menu      */
/* click is recieved.                            */
/*************************************************/

int main_tbquit_handler(int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  return main_quit_handler();
}

/*************************************************/
/* main_iconclick_handler()                      */
/*                                               */
/* Shows the ica_manager window on the iconbar   */
/* icon being clicked.                           */
/*************************************************/

int main_iconclick_handler(int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  manager_show((ica_manager*)handle);
  return 1;
}

/*************************************************/
/* main_iconclick_handler()                      */
/*                                               */
/* Sets the version info in a proginfo box when  */
/* it is shown.                                  */
/*************************************************/

int main_proginfo_show_handler(int event_code, ToolboxEvent * event, IdBlock * id_block, void *handle)
{
  proginfo_set_version(0, id_block->self_id, APP_VERSION);

  return 0;
}

/*************************************************/
/* main()                                        */
/*                                               */
/* Runs before everything else.                  */
/*************************************************/

int main(int argc, char *argv[])
{
  WimpPollBlock     b;
  MessagesFD        mfd;
  IdBlock           idb;
  int               eventcode;


  /* Set up toolbox task */

  show_error_die(toolbox_initialise(0,
                                    387,
                                    wimp_messages,
                                    toolbox_events,
                                    "<ICAMgr$Dir>",
                                    &mfd,
                                    &idb,
                                    NULL,
                                    NULL,
                                    NULL));

  show_error_die(event_initialise(&idb));

  /* Create the manager structure */
  if ((manager = ica_manager_create()) == NULL)
  {
    show_error_die(misc_error("Insufficient memory"));
    return 1;
  }

  ica_manager_init();
  ica_connection_init();

  if (argc > 1 && !strcmp(argv[1], "-plugin"))
  {
    manager->is_plugin = 1;
    manager_show(manager);
    show_error_die(event_register_toolbox_handler(manager->mainwindow_id, RemAppHiding, main_tbquit_handler, manager));
  }
  else
  {
    manager->is_plugin = 0;
    show_error_die(toolbox_create_object(0, "Iconbar", &iconbar_id));
    show_error_die(toolbox_show_object(0, iconbar_id, 0, NULL, NULL_ObjectId, NULL_ComponentId));
  }

  event_register_toolbox_handler(NULL_ComponentId, IconMenuQuit, main_tbquit_handler, manager);
  event_register_toolbox_handler(NULL_ComponentId, IconClick,    main_iconclick_handler, manager);
  event_register_toolbox_handler(-1, ProgInfo_AboutToBeShown,    main_proginfo_show_handler ,NULL);

  /* Load INI files */

  show_error_ret(ini_load_file("ICAClientINI:WFClient", &manager->ini_head, &manager->ini_tail));
  show_error_ret(ini_load_file("ICAClientINI:AppSrv",   &manager->ini_head, &manager->ini_tail));
  show_error_die(ica_create_connections(manager));
  show_error_die(ica_manager_get_settings(manager));

  /* Main program goes here */

//  {
//    FILE *tempfile;
//    tempfile = fopen("$.APPSVRout", "w");
//    if (tempfile)
//    {
//      ica_manager_write_APPSVR(manager, tempfile);
//      fclose(tempfile);
//    }
//    tempfile = fopen("$.WFCLIENTou", "w");
//    if (tempfile)
//    {
//      ica_manager_write_WFCLIENT(manager, tempfile);
//      fclose(tempfile);
//    }
//  }

  while(!quit)
  {
    event_poll_idle(&eventcode,
                    &b,
                    1,
                    NULL);
  }

  ica_manager_destroy(manager);
  return 0;
}
