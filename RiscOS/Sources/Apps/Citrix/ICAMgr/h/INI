/***************************************************/
/* File   : INI.h                                  */
/*                                                 */
/* Purpose: INI structure management.              */
/*                                                 */
/* Author : D.T.A.Brown                            */
/*                                                 */
/* History: 23-Jul-98: Created.                    */
/***************************************************/

#ifndef _INI_H
#define _INI_H

#include "list.h"

typedef struct ini_entry
{
  char             * tag;
  char             * value;

  struct ini_entry * previous;
  struct ini_entry * next;
} ini_entry;

typedef struct ini_section
{
  char               * name;

  ini_entry          * entry_head;
  ini_entry          * entry_tail;

  struct ini_section * previous;
  struct ini_section * next;
} ini_section;

/* Mapping entries should be in ascending alphabetical order by tag */
typedef struct
{
  char * tag;
  char * section;
} ini_section_mapping_entry;

typedef struct
{
  ini_section_mapping_entry * entries;
  size_t                      noentries;
} ini_section_mapping;

typedef void(ini_callback)(ini_section *section, FILE *outfile, void *function_param);

ini_section *ini_section_create(char * name);
void ini_section_destroy(ini_section *section);
void ini_section_link(ini_section  * item,
                      ini_section ** head,
                      ini_section ** tail,
                      ini_section  * target,
                      list_whence    where);
void ini_section_unlink(ini_section  * item,
                        ini_section ** head,
                        ini_section ** tail);
ini_section *ini_section_find(ini_section *section, char * name);
void ini_write_sections(ini_section  *section,
                        FILE         *outfile,
                        ini_callback *function,
                        void         *function_param);

ini_entry *ini_entry_create(char * tag, char * value);
void ini_entry_destroy(ini_entry *entry);
void  ini_entry_link ( ini_entry     * item,
                    ini_entry    ** head,
                    ini_entry    ** tail,
                    ini_entry     * target,
                   list_whence    where);
void ini_entry_unlink(ini_entry  * item,
                      ini_entry ** head,
                      ini_entry ** tail);
ini_entry *ini_entry_find(ini_entry *entry, char * tag);
void ini_write_entries(ini_entry *entry, FILE *outfile);

_kernel_oserror *ini_load_file(char *filename, ini_section **head, ini_section **tail);

_kernel_oserror *ini_reposition_entries(ini_section_mapping *mappings, ini_section **head, ini_section **tail);

#endif
