#include "kernel.h"

#include "Desk.Debug.h"
#include "Desk.Error2.h"
#include "Desk.Jump.h"
#include "Desk.Error.h"
#include "Desk.Error2.h"
#include "Desk.BackTrace.h"

#include "TinyStubs.TinyStubs.h"

#include "MemCheck.MemCheck.h"

#include "MsgTrans.h"
#include "Module.h"
#include "App.FilerPages.RemakeOpen.h"





Desk_os_error*	NCFiler_ModuleInitialise( char *cmd_tail, int podule_base, void *pw)
	{
	#ifdef NCFiler_ROMBUILD
		TinyStubs_Initialise( pw);
	#endif
	
	Desk_Error2_Try	{
		MemCheck_InitNoDebug();
		MemCheck_SetChecking( 0, 0);
		MemCheck_SetStoreMallocFunctions( 1);
		MemCheck_RedirectToFilename( tmpnam( NULL));
		
		Desk_Error2_Init_JumpSig();
		
		Desk_Debug_Initialise();
		#ifndef Desk__MODULE_CLIENT
			Desk_Debug_SetNestingIndentation( "  ");
		#endif
		
		Desk_Debug_Printf( Desk_error_PLACE "NFiler_ModuleInitialise called. pw=0x%p\n", pw);
		Desk_Debug_Printf( Desk_error_PLACE "Desk_error2__handlerfn = 0x%p\n", Desk_error2__handlerfn);
		
		_kernel_setenv( "Alias$URLOpenCLI_NCFiler_Filer", "NCFiler_Filer %*0");
		
		NCFiler_MessageTrans_Open();
		}
	Desk_Error2_Catch	{
		NCFiler_MessageTrans_Close();
		Desk_Error2_ConvertToOS( &Desk_error_global, &Desk_Error2_globalblock);
		return &Desk_error_global;
		}
	Desk_Error2_EndCatch
	
	return NULL;
	Desk_UNUSED( cmd_tail);
	Desk_UNUSED( podule_base);
	Desk_UNUSED( pw);
	}


Desk_os_error*	NCFiler_ModuleFinalise( int fatal, int podule, void* pw)
	{
	Desk_Error2_TryCatch( NCFiler_MessageTrans_Close(); , )
	Desk_Error2_TryCatch( NCFiler_Update_SetLastOpenDir( NULL, pw); , )
	
	#ifdef NCFiler_ROMBUILD
		TinyStubs_Finalise( pw);
	#endif
	return NULL;
	
	Desk_UNUSED( fatal);
	Desk_UNUSED( podule);
	}
