#include "Desk.Error2.h"
#include "Desk.Str.h"

#include "MsgTrans.h"

#include "App.Messages.h"
#include "App.DirScan.h"

#include "^.Empty.h"



Desk_bool	NCFiler_DirEmpty( const char* directory)
	{
	/*
	Find whether files other than default are in directory. This is really
	clumsy - gets full directory listing.
	 */
	Desk_bool			empty	= Desk_bool_TRUE;
	NCFiler_files_sort		sorts[]	= { NCFiler_files_sort_NONE };
	NCFiler_files_allfiles_block	allfiles;
	NCFiler_files_fileblock*	file;
	volatile Desk_deskmem_buffer	defaultfile;
	
	Desk_DeskMem_BufferInit( (Desk_deskmem_buffer*) &defaultfile, 16);
	
	Desk_Error2_Try	{
		
		NCFiler_MessageTrans_LookupIntoBuffer( (Desk_deskmem_buffer*) &defaultfile, "CreateDefault", directory, NULL, NULL, NULL);
		NCFiler_Files_FindAll( directory, &allfiles, sorts);
		
		for ( file = Desk_LinkList_FirstItem( &allfiles.files); file; file = Desk_LinkList_NextItem( &file->header))	{
			char	filename[ 256];
			sprintf( filename, "%s.%s", directory, file->info.name);
			if ( 0!=Desk_stricmp( Desk_DeskMem_BufferGetString( &defaultfile), filename))	{
				empty = Desk_bool_FALSE;
				break;
				}
			}
		}
	Desk_Error2_Catch{
		Desk_DeskMem_BufferFree( (Desk_deskmem_buffer*) &defaultfile);
		NCFiler_Files_FreeAll( &allfiles);
		Desk_Error2_ReThrow();
		}
	Desk_Error2_EndCatch
	
	Desk_DeskMem_BufferFree( (Desk_deskmem_buffer*) &defaultfile);
	NCFiler_Files_FreeAll( &allfiles);
	
	return empty;
	}
