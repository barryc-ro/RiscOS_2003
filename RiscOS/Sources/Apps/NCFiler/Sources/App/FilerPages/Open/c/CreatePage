#include <string.h>

#include "Desk.Filing.h"
#include "Desk.Jump.h"
#include "Desk.Error2.h"
#include "Desk.Str.h"
#include "Desk.LinkList.h"
#include "Desk.File.h"

#include "App.DirScan.h"
#include "App.Messages.h"

#include "HTML.Args.h"

#include "AcornNC.HTMLParams.h"
#include "AcornNC.NC.h"

#include "MsgTrans.h"
#include "^.Open.h"
#include "^.FileList.h"
#include "^.RemakeOpen.h"





void	NCFiler_Open_CreatePage( Desk_deskmem_buffer* buffer, const char* directory, void* pw)
	{
	NCFiler_files_allfiles_block	allfiles;
	NCFiler_files_fileblock*	file;
	int				lastfiletype	= -1;
	char* volatile			username	= NULL;
	char* volatile			escapedfilename	= NULL;
	NCFiler_files_sort		sorts[] = { NCFiler_files_sort_OBJTYPE, NCFiler_files_sort_TYPE, NCFiler_files_sort_DATE, NCFiler_files_sort_NONE };
	Desk_deskmem_buffer		defaultfile;
	
	Desk_DeskMem_BufferInit( &defaultfile, 32);
	NCFiler_Files_FindAll( directory, &allfiles, sorts);
	
	NCFiler_MessageTrans_LookupIntoBuffer( &defaultfile, "CreateDefault", directory, NULL, NULL, NULL);
	
	NCFiler_MessageTrans_LookupIntoBuffer( buffer, "OpenHeader", NULL, NULL, NULL, NULL);
	
	if ( Desk_File_Exists( Desk_DeskMem_BufferGetString( &defaultfile)))	{
		NCFiler_MessageTrans_LookupIntoBufferCat( buffer, "OpenNew", directory, NULL, NULL, NULL);
		}
		
	
	Desk_Error2_Try	{
		
		
		for ( file = Desk_LinkList_FirstItem( &allfiles.files); file; file = Desk_LinkList_NextItem( &file->header))	{
			char	filename[ 256];
			int	filetype;
			
			strcpy( filename, directory);
			strcat( filename, ".");
			strcat( filename, file->info.name);
			
			Desk_Debug_Printf( Desk_error_PLACE "Filename is '%s'\n", filename);
			
			if ( 0==Desk_stricmp( Desk_DeskMem_BufferGetString( &defaultfile), filename))	{
				Desk_Debug_Printf( Desk_error_PLACE "Omitting file deafult file '%s'\n", filename);
				continue;
				}
			
			if ( file->info.objtype != Desk_filing_FILE)					continue;
			
			filetype = NCFiler_Files_GetType( file);
			
			if ( filetype != lastfiletype)	{
				if ( lastfiletype != -1)
					NCFiler_MessageTrans_LookupIntoBufferCat(
						buffer, "OpenTypeFooter", NULL, NULL, NULL, NULL
						);
				
				NCFiler_MessageTrans_LookupIntoBufferCat(
					buffer, "OpenTypeHeader", NCFiler_Files_GetTypeName( filetype), NULL, NULL, NULL
					);
				
				lastfiletype = filetype;
				}
			
			
			Desk_Debug_Printf( Desk_error_PLACE "Filename is '%s'\n", filename);
			escapedfilename	= HTML_Args_GenerateEscapedTextAlloc( filename);
			Desk_Debug_Printf( Desk_error_PLACE "Filename is '%s', escapedfilename='%s'\n", filename, escapedfilename);
			username	= AcornNC_MakeUserLeafname( filename);
			Desk_Debug_Printf( Desk_error_PLACE "Filename is '%s', username='%s'\n", filename, username);
				
			NCFiler_MessageTrans_LookupIntoBufferCat(
					buffer, "OpenItem", escapedfilename, username, NULL, NULL
					);
				
			Desk_DeskMem_Free( username);		username	= NULL;
			Desk_DeskMem_Free( escapedfilename);	escapedfilename	= NULL;
			}
		
		if ( lastfiletype != -1)
			NCFiler_MessageTrans_LookupIntoBufferCat( buffer, "OpenTypeFooter", NULL, NULL, NULL, NULL);
		
		NCFiler_MessageTrans_LookupIntoBufferCat( buffer, "OpenFooter", NULL, NULL, NULL, NULL);
		
		NCFiler_Update_SetLastOpenDir( directory, pw);
		}
	
	Desk_Error2_Catch	{
		Desk_DeskMem_Free( username);
		Desk_DeskMem_Free( escapedfilename);
		NCFiler_Files_FreeAll( &allfiles);
		Desk_DeskMem_BufferFree( &defaultfile);
		Desk_Error2_ReThrow();
		}
	Desk_Error2_EndCatch
	
	Desk_DeskMem_Free( username);
	Desk_DeskMem_Free( escapedfilename);
	NCFiler_Files_FreeAll( &allfiles);
	Desk_DeskMem_BufferFree( &defaultfile);
	}
