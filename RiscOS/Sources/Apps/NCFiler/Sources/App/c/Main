#ifdef NCFiler_APPTEST

#include <stdlib.h>
#include <ctype.h>

#include "kernel.h"

#include "Desk.Error2.h"
#include "Desk.Jump.h"
#include "Desk.BackTrace.h"

#include "MsgTrans.h"

#include "Command.h"

#include "MemCheck.MemCheck.h"





int 	main( int argc, char* argv[])
	{
	MemCheck_Init();
	
	MemCheck_InterceptSCLStringFunctions();
	MemCheck_SetStoreMallocFunctions( 1);
	MemCheck_SetQuitting( 0, 0);
	
	MemCheck_RedirectToFilename( tmpnam( NULL));
	
	#ifdef MemCheck_MEMCHECK
		atexit( MemCheck_OutputBlocksInfo);
	#endif
	
	Desk_Error2_Init_JumpSig();
	
	Desk_Debug_Initialise();
	Desk_Debug_SetNestingIndentation( "  ");
	
	Desk_Error2_Init_JumpSig();
	
	#ifdef MemCheck_MEMCHECK
		if (*(int*)0x8000)	Desk_Debug_Printf( "kk\n");
	#endif
	
	NCFiler_MessageTrans_Open();
	
	Desk_Error2_Try	{
		char*	commandstring = _kernel_command_string();
		while ( !isspace( *commandstring) && *commandstring)	commandstring++;
		while ( isspace( *commandstring))			commandstring++;
		
		Desk_Error2_CheckOS( NCFiler_CommandHandler( commandstring, argc-1, NCFiler_command_NCFILER_FILER, NULL));
		}
	Desk_Error2_Catch	{
		}
	Desk_Error2_EndCatch
	
	
	NCFiler_MessageTrans_Close();
	
	Desk_Debug_Printf( Desk_error_PLACE "Returning...\n");
	return 0;
	
	Desk_UNUSED( argc);
	Desk_UNUSED( argv);
	}


#else
	#include "Main.h"
	int	__main_c_dummy;
#endif	/* #ifdef NCFiler_TEST */
