#include <string.h>

#include "Desk.MsgTrans.h"
#include "Desk.Module.h"
#include "Desk.Error2.h"
#include "Desk.MsgTrans.h"

#include "MsgTrans.h"
#include "Global.h"


/*
typedef struct	{
	char*			filename;
	Desk_msgtrans_filedesc*	desc;
	}
	Desk_msgtrans_rmafiledesc;


static void	Desk_MessageTrans__FreeRMABlock( Desk_msgtrans_rmafiledesc* filedesc)
	{
	if ( filedesc->desc)		Desk_Module_Free( filedesc->desc);
	filedesc->desc	= NULL;
	
	if ( filedesc->filename)	Desk_Module_Free( filedesc->filename);
	filedesc->filename	= NULL;
	}


static void	Desk_MessageTrans_OpenFileRMA( Desk_msgtrans_rmafiledesc* filedesc, const char* filename)
	{
	filedesc->filename	= NULL;
	filedesc->desc	= NULL;
	
	Desk_Error2_Try	{
		Desk_Module_Claim( 16, (void**) &filedesc->desc);
		Desk_Module_Claim( 1 + strlen( filename), (void**) &filedesc->filename);
		strcpy( filedesc->filename, filename);
		Desk_MessageTrans_OpenFile( filedesc->desc, filedesc->filename, NULL);
		}
	Desk_Error2_Catch	{
		Desk_MessageTrans__FreeRMABlock( filedesc);
		Desk_Error2_ReThrow();
		}
	Desk_Error2_EndCatch
	}


static void	Desk_MessageTrans_CloseFileRMA( Desk_msgtrans_rmafiledesc* filedesc)
	{
	Desk_error2_block*	e = NULL;
	if ( NULL == filedesc)	return;
	
	Desk_Error2_TryCatch(
		Desk_MessageTrans_CloseFile( filedesc->desc);
		,
		e = &Desk_Error2_globalblock;
		)
		
	Desk_MessageTrans__FreeRMABlock( filedesc);
	
	if ( e)	Desk_Error2_Handle( e);
	}

*/


/*Desk_msgtrans_rmafiledesc	messagefile = { NULL, NULL};*/
NCFiler_globalblock	NCFiler_global = { { NULL, NULL}};


void	NCFiler_MessageTrans_Open( void)
	{
	Desk_MessageTrans_OpenFileRMA( &NCFiler_global.messages, "Resources:$.Resources.NCFiler.Messages");
	}

void	NCFiler_MessageTrans_Close( void)
	{
	Desk_MessageTrans_CloseFileRMA( &NCFiler_global.messages);
	}



void	NCFiler_MessageTrans_LookupIntoBuffer( Desk_deskmem_buffer* buffer, const char* tag, const char* a1, const char* a2, const char* a3, const char* a4)
	{
	/*Desk_MessageTrans_OpenLookupCloseIntoBuffer( buffer, "Resources:$.Resources.NCFiler.Messages", tag, a1, a2, a3, a4);*/
	Desk_MessageTrans_LookupIntoBuffer( buffer, NCFiler_global.messages.desc, tag, a1, a2, a3, a4);
	}

void	NCFiler_MessageTrans_LookupIntoBufferCat( 
		Desk_deskmem_buffer* buffer, const char* tag, const char* a1, const char* a2, const char* a3, const char* a4
		)
	{
	/*Desk_MessageTrans_OpenLookupCloseIntoBufferCat( buffer, "Resources:$.Resources.NCFiler.Messages", tag, a1, a2, a3, a4);*/
	Desk_MessageTrans_LookupIntoBufferCat( buffer, NCFiler_global.messages.desc, tag, a1, a2, a3, a4);
	}

