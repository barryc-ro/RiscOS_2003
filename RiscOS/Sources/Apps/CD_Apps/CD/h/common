/*=====================================================================================*/
/*                                                                                     */
/*  FILE: !cd.h.common                                                                 */
/*  DESCRIPTION:   Contains objects which are common to all or most of !cd.            */
/*  AUTHOR: srose@omi.co.uk                                                            */
/*  MODIFICATION HISTORY:                                                              */
/*    Date         Name                Description                                     */
/*    ----         ----                -----------                                     */
/*                                                                                     */
/*=====================================================================================*/

#include "stdlib.h"

/*-------------------------------------------------------------------------------------*/
/*                                 MACRO DEFINITIONS                                   */
/*-------------------------------------------------------------------------------------*/

#define ACTIVE 1        /* Reflects whether or not another cd task besides !cd is      */
#define NOT_ACTIVE 2    /* active or not.                                              */

#define HIDDEN 1        /* Used to indicate whether or not the splash (PleaseInsertCd) */
#define FALSE 0         /* screen is displayed.                                        */

#define WARNING 0       /* Severity of error.  FATAL results in !cd shut down after    */
#define FATAL 1         /* which a hardware reset is advised.                          */

#define CDSupport_Enable  0x4b680
#define CDSupport_Disable 0x4b681
#define CDSupport_Standby 0x4b683

#define COMPACT_DISC_IS_FAULTY 8401940

#define FAULTY_CD  -99
#define UNKNOWN_CD -98
#define PLEASE_WAIT 3

#define TRUE 1
#define FALSE 0

/* The following should all be undefined upon final release.                           */
#undef DEVELOPMENT      /* Defining DEVELOPMENT turns on error reporting.              */
#undef FN_TRACE         /* Defining FN_TRACE turns on function tracing.                */
#undef SCREEN_DUMP      /* Defining SCREEN_DUMP results in screen dumps to file at     */
                        /* various stages of execution.                                */
#undef MEMORY_TRACE       /* Defining MEMORY_TRACE turns on memory diagnostics.        */
#undef FORCE_FATAL_ERROR  /* Defining FORCE_FATAL_ERROR allows you to check the        */
                          /* handling of fatal errors.                                 */

/*-------------------------------------------------------------------------------------*/
/*                                   FUNCTION PROTOTYPES                               */
/*-------------------------------------------------------------------------------------*/

extern void SignalCatcher(int code);

/*
   !cd should catch all errors.  SignalCatcher() traps those errors described on p.
   4-302 of the PRM (e.g. division by zero, bad memory access, and so on).
   PREREQUISITES:  A call to init.c's Signals() to specify which signals we wish to
                   trap.  Currently all "known" signals are caught, "known" being those
                   described on p. 4-302 of the PRM.
*/

extern void ErrorHandler(char *app,int ln,char *fn, int errnum, char *mess, int level);

/*
   Error handler common to all files within !cd.  A fatal error will shut down !cd.  A
   warning error will not.
   REQUIRES:  - 'file', which is the name of the source file from which the error
                 originates.
              - 'fn', which is the name of the function from which the error originates.
              - 'errnum', which is the error number.  Refer PRM p.1-42 for more info.
              - 'mess', which is the error message string.
              - 'level', which is the level of error.  This can be FATAL, resulting
                 in a complete shut down of !cd and most probably requiring a
                 subsequent hardware reset, or WARNING, in which case !cd carries on
                 running.
*/

/*-------------------------------------------------------------------------------------*/
/*                        GLOBAL VARIABLE DECLARATIONS                                 */
/*-------------------------------------------------------------------------------------*/

#ifdef GLOBALS
 int cd_task_handle; /* Used for starting up and closing down !cd.  As !cd is supposed */
                     /* to run forever, only a fatal error will result in a close      */
                     /* down.                                                          */

 char *cd_blk;   /* Used for setting up a CDFS control block, which is necessary for   */
 int cd_blk_id;  /* being able to access the cd drive using any of the CDFS Driver     */
                 /* SWI's.  The block is created as a dynamic memory area, thus        */
                 /* allowing any task launched by !cd access to the CDFS Driver SWI's  */
                 /* using the same block of memory.                                    */

 int *poll_blk;  /* Primarily used for receiving messages from a task previously       */
                  /* launched by !cd.  The message will let !cd know whether the task  */
                  /* has just started up successfully, or is about to die.  !cd uses   */
                  /* this information to decide whether or not it should display the   */
                  /* splash (idle) screen, which tells the user to insert a disc.      */

 int other_task = NOT_ACTIVE;  /* When !cd launches a task, that task must let !cd know*/
                               /* that it has started up successfully, and must inform */
                  /* !cd of when it is about to die, so that !cd knows when it should  */
                  /* and shouldn't display the splash (idle) screen.  'other_task'     */
                  /* indicates whether or not a cd task other than !cd is running.     */

 int splash_screen = HIDDEN;  /* The splash screen is displayed when there is no other */
                              /* cd task running.  It tells the user to insert a cd.   */

 int wait_for_ack = FALSE;  /* If TRUE, don't attempt to launch an application or      */
                            /* display the splash screen until an I am about to die or */
                  /* an I am alive (just started up) message has been received from the*/
                  /* other task / application.                                         */

 int hBackgroundWindow = NULL;  /* Background window handle used for displaying the    */
                                /* splash screen in a window, that window having no    */
                                /* scroll bars and occupying the whole screen.         */

 int poll_word_address;         /* David DeVorchik's UpCallV stuff.                    */

 int waiting_to_issue_cdsupport_standby = FALSE;  /* As above.  Used in connection with*/
                                                  /* the STB being put into standby    */
                                                  /* mode.                             */

 #ifdef SCREEN_DUMP
   int screen_num = 0;
   char dump_file[100];
 #endif

#endif

/*-------------------------------------------------------------------------------------*/

