#ifndef __fax__tiffconv_h
#define __fax__tiffconv_h


#include "tiff.h"
#include "fax/global.h"
#include "fax/RCcodes.h"
#include <stdio.h>


///////////////////////////////////////////////////////////////////////////////
//
// C_Typedefs

// A structure containing all the state of a TIFF conversion in progress
typedef struct tiffconvstate {
   uint handlein;                      // Input TIFF file RISC OS file handle
   uint decword;                       // Streaming input data
   int decinuse;                       // Streaming input data position
   FILE *streamout;                    // Output TIFF file stream handle
   long int tiffifdptr;                // Output TIFF file IFD offset
   int encword;                        // Streaming output data
   TIFFInfo tin;                       // Input TIFF file IFD
   TIFFInfo tout;                      // Output TIFF file IFD
   short int *refline;                 // Pointer to reference raw line
   short int *currline;                // Pointer to current raw line
   short int rawline1[TIFFMaxRawSize]; // Decoded (raw) scan line
   short int rawline2[TIFFMaxRawSize]; // Decoded (raw) scan line
   byte encline[TIFFMaxEncodedSize];   // Encoded scan line
} TIFFConvState;

///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
//
// C_Enumerations

// TIFF converter errors
// Are all be non-positive, so that !Fax Error_TIFF_* errors can be returned too
typedef enum TIFFConvError {
   TIFFConvError_None = 0,             // No error!
   TIFFConvError_Bad_Encoding = -1,    // Bad output encoding
   TIFFConvError_Read_Error = -2,      // Input TIFF file read error
   TIFFConvError_Write_Error = -3,     // Output TIFF file write error
   TIFFConvError_Busy = -4             // Converter already processing a request
} TIFFConvError;

// TIFF converter suberrors
enum TIFFConvSubError {
   TIFFConvSubError_Open_Read_Failed = 0x10,
   TIFFConvSubError_ReadIFD_Failed = 0x11,
   TIFFConvSubError_Reopen_Failed = 0x12,
   TIFFConvSubError_Open_Write_Failed = 0x20,
   TIFFConvSubError_IFD_Create_Failed = 0x21,
   TIFFConvSubError_Close_Write_Failed = 0x22,
   TIFFConvSubError_Eeek = 0x666
};

///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
//
// tiffconv_open
//
// Initiates a TIFF encoding conversion.
//
// Opens an input TIFF file and reads in the IFD.
// The file pointer is left pointing at the input image data.
// Opens an output TIFF file and makes space for an IFD.
// The file pointer is left pointing at the desired location for output data.
//
// On error, any opened input stream is closed, and any opened output file is
// closed and deleted.
//
// Inputs:  tcs         (TIFF converter state)
//          pathnamein  (pathname of input TIFF file)
//          pathnameout (pathname of output TIFF file)
//          encoding    (desired output encoding -- 0 for internal)
//
// Outputs: tcs         (TIFF converter state)
//          word1       (suberror word, if an error occurred, else zero)
//          word2       (suberror word, if an error occurred, else zero)
//
// Assumes: nothing
//
// Returns: !TIFFConv return code (zero if no error)
//
///////////////////////////////////////////////////////////////////////////////

extern TIFFConvError tiffconv_open (TIFFConvState *const tcs
                                   , const char *const pathnamein
                                   , const char *const pathnameout
                                   , int encoding, int *const word1, int *const word2);


///////////////////////////////////////////////////////////////////////////////
//
// tiffconv_sanitycheck_ifd
//
// Makes sure IFD contains valid information.
//
// Inputs:  t           (IFD contents)
//
// Outputs: word1       (suberror word, if an error occurred)
//          word2       (suberror word, if an error occurred)
//
// Assumes: nothing
//
// Returns: !Fax return code (zero if no error)
//
///////////////////////////////////////////////////////////////////////////////

extern ReturnCode tiffconv_sanitycheck_ifd (const TIFFInfo *const t
                                           , int *const word1, int *const word2);


///////////////////////////////////////////////////////////////////////////////
//
// tiffconv_convert_line
//
// Converts one line of the input TIFF file to the output TIFF file encoding.
//
// Currently only T6 and CCITT encodings are supported.
//
// Inputs:  tcs         (TIFF converter state)
//
// Outputs: tcs         (TIFF converter state)
//
// Assumes: nothing
//
// Returns: non-zero if conversion has terminated for any reason
//             (EOF, decode error, etc.)
//
///////////////////////////////////////////////////////////////////////////////

extern int tiffconv_convert_line (TIFFConvState *const tcs);


#endif
