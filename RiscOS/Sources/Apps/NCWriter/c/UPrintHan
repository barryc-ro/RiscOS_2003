/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#include "Support.h"

// ------------------------------------------------------------------------
_TPrintHandler::_TPrintHandler(TView itsView) : ( NULL )
{
  fView = itsView;
}

// ------------------------------------------------------------------------
bool _TPrintHandler::Print(char *filename)
{
  DECLARE(this);
  DECLARE(filename);
  return TRUE;
}


// ------------------------------------------------------------------------
int _TPrintHandler::MaxPageNumber()
{
  return MinMaxPageNumber(MAXLONGINT);
}


// ------------------------------------------------------------------------
int _TPrintHandler::MinMaxPageNumber(int testVal)
{
  DECLARE(this);
  return 1;
}


// ------------------------------------------------------------------------
void _TPrintHandler::ScrollToInterior(TScroller scroller, int page)
{
  DECLARE(this);
  scroller->ScrollTo(0, 0);
}


#ifdef TRACE
// ------------------------------------------------------------------------
// void _TPrintHandler::LocatePageInterior(int pageNumber, Point &loc)
// {
//   DECLARE(this);
//   DECLARE(pageNumber);
//   DECLARE(loc.v);
// }


// ------------------------------------------------------------------------
//void _TPrintHandler::SetPageOffset(VPoint &coord)
//{
//  DECLARE(this);
//  DECLARE(coord.v);
//}


// ------------------------------------------------------------------------
void _TPrintHandler::GetInterior(int page, VRect &pageInterior)
{
  DECLARE(this);
  DECLARE(page);
  DECLARE(pageInterior.top);
}

// ------------------------------------------------------------------------
void _TPrintHandler::CalcPageStrips(Point &pageStrips)
{
  DECLARE(this);
  DECLARE(pageStrips.v);
}


// ------------------------------------------------------------------------
void _TPrintHandler::CalcViewPerPage(VPoint &amtPerPage)
{
  DECLARE(this);
  DECLARE(amtPerPage.v);
}


// ------------------------------------------------------------------------
void _TPrintHandler::RedoPageBreaks()
{
  DECLARE(this);
}


// ------------------------------------------------------------------------
void _TPrintHandler::CheckPrinter(bool unused)
{
  DECLARE(this);
  DECLARE(unused);
}


// ------------------------------------------------------------------------
void _TPrintHandler::DrawPrintFeedback(Rect &area)
{
  DECLARE(this);
  DECLARE(area.left);
}


// ------------------------------------------------------------------------
void _TPrintHandler::PrinterChanged()
{
  DECLARE(this);
}


// ------------------------------------------------------------------------
int _TPrintHandler::GetPrintFileType()
{
  DECLARE(this);
  return 0;
}

// ------------------------------------------------------------------------
THPrint _TPrintHandler::GetPrintRec()
{
  DECLARE(this);
  return NULL;
}
#endif

// -------------------------------------------------------------------------
// 02/06/94 new - needs to be called to see when wimp_MPrintChange msg is lying
#define Info          0x00080140
#define PageSize      0x00080143
char *GetPrinterDetails(THPrint hPrint, int *features)
{
  // sets up the print record basic info from the print driver (if any)
  wr_os_regset r;
  char *GetPrinterDetails_r;

  if (wr_os_swix(Info, &r) == NULL)
  {
    // memcpy(hPrint, r.r, 16);    // 06/12/93 now only do wds 0 & 3, 1 & 2 are page numbers
    hPrint->iDev = r.r[0];
    *features = /* THPrint(hPrint)->features = */ r.r[3];     // 25/06/92
               // 20/06/95 [26024] leave hPrint->features used for x & y pamphlet printing

    GetPrinterDetails_r = (char *) r.r[4];
    if (wr_os_swix(PageSize, &r) == NULL)  // 19/04/91 Cannons may fail
    {
      SetRect(hPrint->rPage, 0, 0, r.r[5] - r.r[3], r.r[6] - r.r[4]);
      SetRect(hPrint->rPaper,
                 -r.r[3], r.r[6] - r.r[2], r.r[1] - r.r[3], r.r[6]);
      return GetPrinterDetails_r;
    }
  }
  return NULL;
}
