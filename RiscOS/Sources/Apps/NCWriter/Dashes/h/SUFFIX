/*************************************************
*    Hyphenation Package DashesÂ                 *
*    Copyright 1984,85,86,87,88,89               *
*    Circle Noetic Services                      *
*    All Rights Reserved                         *
*************************************************/

/* definition of a suffix structure */

u_char *SuSearch();

#define	LENGTH		0x0f
#define	STRESS		0x70
#define	DECLNTNL	0x80

#define	HIERARCHY	0x1f
#define	MONO		0x60
#define	E_SUFF		0x80

#define	MUTABILITY	0x7f
#define	HASHYPH		0x80

#define	STRLEN		0x0f
#define	LATIN		0x10
#define	LEGALR		0x20
#define	ISLPEND		0x40
#define	HVYSTOP		0x80

#define	SU_LENGTH(s)		((s)[0] & LENGTH)
#define	SU_STRESS(s)		(((s)[0] & STRESS) >> 4)
#define	SU_DECLENTIONAL(s)	((s)[0] & DECLNTNL)

#define	SU_HIERARCHY(s)		((s)[1] & HIERARCHY)
#define	SU_MONO(s)			(((s)[1] & MONO) >> 5)
#define	SU_E_SUFF(s)		((s)[1] & E_SUFF)

#define	SU_MUTABILITY(s)	((s)[2] & 0x7f)
#define	SU_HASHYPH(s)		((s)[2] & 0x80)

#define	SU_STRLEN(s)		((s)[3] & STRLEN)
#define	SU_LATIN(s)			((s)[3] & LATIN)
#define	SU_LEGALR(s)		((s)[3] & LEGALR)
#define	SU_ISLPEND(s)		((s)[3] & ISLPEND)
#define	SU_HVYSTOP(s)		((s)[3] & HVYSTOP)

#define	SU_SUFFIX(s)		((s)+4)
#define	NEXT_SUFFIX(s)		(SU_SUFFIX(s)+SU_STRLEN(s))

#define	MagicE		0
#define	NoMagicE	1
#define	EReplace	2
#define	E_ES_ED		3

#define	EHierarchy	31
#define	Verb0Hier	0
#define	GreekHier	1
#define	Lvl0Hier	3

#define	ProtoMute	1	/* prototypical mutability class */

struct SuIndexType {
	short maxCode;
	short maxHier;
	short list;
	short compTable;
	short index[1];
};
