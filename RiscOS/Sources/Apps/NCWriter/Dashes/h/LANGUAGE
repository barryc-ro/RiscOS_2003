/*************************************************
*    Hyphenation Package DashesÂ                 *
*    Copyright 1984,85,86,87,88,89               *
*    Circle Noetic Services                      *
*    All Rights Reserved                         *
*************************************************/

#include    "except.h"
#include    "suffix.h"
#include    "prefix.h"
#include    "muttbl.h"
#include    "root.h"
#include    "rules.h"
#include    "letters.h"

u_char *PrRepair();

#define	MAXHIER		32
#define HYPH_SIZE	40      /* maximum number of hyphens */
#define LOWCASE(c)	((c)+'a'-1)
#define MAX(a,b)	(((a)>(b))?(a):(b))
#define MIN(a,b)	(((a)<(b))?(a):(b))

#ifndef TRUE
#define TRUE		(-1)
#endif
#define FALSE		0
#define NO_MATCH	FALSE
#define GOOD_MATCH	TRUE

/* HyphFlags related defines */
#define	MutSuffix	0x01
#define	NoHvyStop	0x02
#define	DidOperA	0x04
#define	MutMatch	0x08
#define	Lvl0Mute	0x10

/* Suffix hierarchy control related defines */
#define	DbleMut		0x1
#define	VowelMut	0x2
#define	SConsMut	0x4
#define	MConsMut	0x8

/* language data structure */

#ifdef MAC
typedef u_char				**ExIndexType;
typedef struct PrIndexType	**PrIndexType;
typedef struct SuIndexType	**SuIndexType;
typedef struct MuIndexType	**MuIndexType;
#else
#ifdef IBM
typedef u_char far			*ExIndexType;
#else
typedef u_char				*ExIndexType;
#endif
typedef struct PrIndexType	*PrIndexType;
typedef struct SuIndexType	*SuIndexType;
typedef struct MuIndexType	*MuIndexType;
#endif

struct LangType {
	RuleType			*FeatureTable;
	void				*UserData;	/* any language specific data user wants to keep */
	ExIndexType			ExceIndex;
	PrIndexType			PrefIndex;
	SuIndexType			SuffIndex;
	MuIndexType			MuteIndex;
	RuleType			*PosRootRules;
	RuleType			*NegRootRules;
	RuleType			*PosOnsets;
	RuleType			*NegOnsets;
	RuleType			*PosRhymes;
	RuleType			*NegRhymes;
	u_char				*(*SuRepair)();
	void				(*Specific)();
};

#define FEATURES(c)		lang->FeatureTable[(c)]
#define PROOT_RULES		lang->PosRootRules
#define NROOT_RULES		lang->NegRootRules
#define PONSET_RULES	lang->PosOnsets
#define NONSET_RULES	lang->NegOnsets
#define PRHYME_RULES	lang->PosRhymes
#define NRHYME_RULES	lang->NegRhymes
#define	PREFIX_INDEX	lang->PrefIndex
#define	SUFFIX_INDEX	lang->SuffIndex
#define	MUTE_INDEX		lang->MuteIndex
#define	EXCE_INDEX		lang->ExceIndex
#define	SUFFIX_REPAIR	(*(lang->SuRepair))
#define	LANG_SPECIFIC	(*(lang->Specific))
#define	PREFIX_REPAIR	PrRepair

#define	check_onset(s,e)	match_list(s,e,PONSET_RULES,NONSET_RULES)
#define	check_rhyme(s,e)	match_list(s,e,PRHYME_RULES,NRHYME_RULES)

#ifdef MAC
#ifdef MPW
#include <resources.h>
#else
#include <resource.h>
#endif
#endif
