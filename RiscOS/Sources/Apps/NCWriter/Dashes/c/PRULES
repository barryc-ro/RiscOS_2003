/*************************************************
*    Hyphenation Package DashesÂ                 *
*    Copyright 1984,85,86,87,88,89               *
*    Circle Noetic Services                      *
*    All Rights Reserved                         *
*************************************************/

#include    <stdio.h>
#include    "hyph.h"
#include    "language.h"

static struct LangListType *info;
struct LangListType *check_lang();

pascal void	MacsBug() = 0xa9ff;

extern short langid;
extern struct LangType *lang;

#define	arg0	argv[0]

main(argc,argv)
register char *argv[];
{
	if(argc != 2 || (info = check_lang(argv[1])) == NULL) {
		eprintf("Usage: %s lang\n", arg0);
		return(1);
	}
	langid = info->id;
	if(InitHyph(langid) != 0) {
		eprintf("%s: Can not initialize for this language\n",arg0);
		return(2);
	}
	print_rrules(PROOT_RULES,NROOT_RULES);
	print_list(PONSET_RULES,NONSET_RULES,"onsets");
	print_list(PRHYME_RULES,NRHYME_RULES,"rhymes");
	return(0);
}

print_rrules(PosRules,NegRules)
RuleType *PosRules,*NegRules;
{
	eprintf("********* Positive root rules\n");
	print_it2(PosRules);

	eprintf("********* Negative root rules\n");
	print_it2(NegRules);
}

print_it2(rules)
register RuleType *rules;
{
	register RuleCtlType RuleCtl;

	RuleCtl = *rules++;
	for(; RuleCtl != 0; rules += RULE_LENGTH(RuleCtl), RuleCtl = *rules++) {
		rules++;
		print_rule(rules,RULE_LENGTH(RuleCtl));
	}
	eputchar('\n');
}

print_list(PosRules,NegRules,what)
RuleType *PosRules,*NegRules;
char *what;
{
	eprintf("********* Positive %s\n",what);
	print_it1(PosRules);

	eprintf("********* Negative %s\n",what);
	print_it1(NegRules);
}

print_it1(rules)
register RuleType *rules;
{
	register RuleCtlType RuleCtl;

	RuleCtl = *rules++;
	for(; RuleCtl != 0; rules += RULE_LENGTH(RuleCtl), RuleCtl = *rules++)
		print_rule(rules, RULE_LENGTH(RuleCtl));
	eputchar('\n');
}
