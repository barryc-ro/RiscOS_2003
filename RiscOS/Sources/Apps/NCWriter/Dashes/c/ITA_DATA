/*************************************************
*    Hyphenation Package DashesÂ                 *
*    Copyright 1984,85,86,87,88,89               *
*    Circle Noetic Services                      *
*    All Rights Reserved                         *
*************************************************/
#include    "hyph.h"
#include    "language.h"

#ifndef MAC
#include    "ita_pref.c"

extern ExceData ItaExIndex[];
#endif

extern RuleType NullRule[];

extern RuleType SpaFeTable[];
#define	ItaFeTable	SpaFeTable

extern RuleType SpaPRootRules[];
#define	ItaPRootRules	SpaPRootRules

extern u_char *___dummy();
#define	ItaSuRepair	___dummy

extern void SortHyphens();
#define	ItaSpecific	SortHyphens
 
static RuleType ItaPOnsets[] = { 
    0x0102|MTCHALL|NOOPT,
    CONS,CONS,			/* C */

    0x0202|MTCHALL|NOOPT,
    MATCH|RomG,			/* gn */
    MATCH|RomN,

    0x0205|MTCHALL,
    ZTO1M|RomS,			/* (s)[C,+stop][C,+liquid] */
    STOP|CONS,CONS|STOP,
    LIQ|CONS,CONS|LIQ,

    0x0204|MTCHALL|NOOPT,
    CONS,CONS|SON|LET_HJQXY,	/* [C,-hjqxy,-son][l,r,h] */
    CONS|LRHCAT,CONS|LRHCAT,
    0
};

#ifndef	DA
static struct LangType ItaData = {
	ItaFeTable - RomA,
	0,
#ifdef MAC
	0,
	0,
	0,
	0,
#else
	ItaExIndex,
	(struct PrIndexType *)&ItaPrIndex,
	0,		/* SuffIndex */
	0,		/* MuteIndex */
#endif
	ItaPRootRules,
	NullRule,	/* Negative Root Rules */
	ItaPOnsets,	/* PosOnsets */
	NullRule,	/* NegOnsets */
	NullRule,	/* PosRhymes */
	NullRule,	/* NegRhymes */
#ifndef MAC
	ItaSuRepair,	/* SuffixRepair */
	ItaSpecific		/* Specific */
#else
	0,
	0
#endif
};
#else
struct LangType ItaData = { 0 };
#endif

ItaInit()
{
    extern u_short LangMask;
    extern struct LangType *lang;

#ifdef DA
	ItaData.FeatureTable = ItaFeTable - RomA;
	ItaData.PosRootRules = ItaPRootRules;
	ItaData.NegRootRules = NullRule;
	ItaData.PosOnsets = ItaPOnsets;
	ItaData.NegOnsets = NullRule;
	ItaData.PosRhymes = NullRule;
	ItaData.NegRhymes = NullRule;
#endif
#ifdef MAC
    ItaData.SuRepair = ItaSuRepair;
    ItaData.Specific = ItaSpecific;
	ItaData.PrefIndex = (struct PrIndexType **)GetResource('CNSP',256 + Italian);
	ItaData.ExceIndex = (u_char **)GetResource('CNSE',256 + Italian);
	if(ItaData.PrefIndex == NULL)
		return(-1);
#endif
    lang = &ItaData;
    LangMask = ITALIAN;
	return(0);
}
