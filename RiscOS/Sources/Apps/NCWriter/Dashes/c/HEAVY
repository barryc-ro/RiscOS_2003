/*************************************************
*    Hyphenation Package DashesÂ                 *
*    Copyright 1984,85,86,87,88,89               *
*    Circle Noetic Services                      *
*    All Rights Reserved                         *
*************************************************/

#include    "hyph.h"
#include    "language.h"

extern struct LangType *lang;
extern HyphenType hyphens[HYPH_SIZE];
extern u_char HyphFlags;
extern u_short hyph_index;
extern u_short nu_matched;
extern u_char *word_start;
extern u_char *word_end;
extern u_char *last_suffix;
extern u_char *StressSuffix;
extern u_char *SuffixBoundary;
extern u_char *PrefixBoundary;
extern u_char *SuffExce;
extern u_char *Lvl0Bnd;

u_char *advance();

heavy(q,RootEnd)
HyphenType *q;
u_char *RootEnd;
{
	register u_char *SyllEnd, *SyllStart;
	register short hier;

	SyllEnd = word_start + q->offset;
	SyllStart = word_start;
	if(q > &hyphens[0])
		SyllStart += q[-1].offset + 1;
	if((HyphFlags & MutSuffix) == 0 && SyllEnd < word_end && SyllEnd == RootEnd)
		if((hier = SU_HIERARCHY(last_suffix)) != GreekHier &&
			   hier != EHierarchy &&
			   (FEATURES(SyllEnd[0])&CONS) != VOWEL &&
			   (FEATURES(SyllEnd[1])&CONS) == VOWEL &&
			   (FEATURES(SyllEnd[-1])&CONS) == VOWEL)
			return(0);
	/* syllable is heavy if it has a vowel that */
	/* is not the last letter of the syllable   */
	if(advance(SyllStart, SyllEnd) < SyllEnd)
		return(1);
	return(0);
}
