/*************************************************
*    Hyphenation Package DashesÂ                 *
*    Copyright 1984,85,86,87,88,89               *
*    Circle Noetic Services                      *
*    All Rights Reserved                         *
*************************************************/
#include    "hyph.h"
#include    "language.h"

extern RuleType NullRule[];

extern u_char *___dummy();
#define	MisSuRepair	___dummy

extern void SortHyphens();
#define	MisSpecific	SortHyphens

RuleType MisFeTable[] = {
	VOWEL,				/* a */
	CONS|VCD|STOP,		/* b */
	CONS|STOP,			/* c */
	CONS|VCD|DNTL|STOP,	/* d */
	VOWEL,				/* e */
	CONS,				/* f */
	CONS|VCD|STOP,		/* g */
	CONS,				/* h */
	VOWEL,				/* i */
	CONS|VCD|DNTL,		/* j */
	CONS|STOP,			/* k */
	CONS|VCD|LIQ|DNTL,	/* l */
	CONS|VCD,			/* m */
	CONS|VCD|DNTL,		/* n */
	VOWEL,				/* o */
	CONS|STOP,			/* p */
	CONS,				/* q */
	CONS|VCD|LIQ|DNTL,	/* r */
	CONS|DNTL,			/* s */
	CONS|STOP|DNTL,		/* t */
	VOWEL,				/* u */
	CONS|VCD,			/* v */
	CONS|VCD,			/* w */
	CONS,				/* x */
	CONS,				/* y */
	CONS|VCD|DNTL,		/* z */
	VOWEL,				/* a' */
	VOWEL,				/* a^ */
	VOWEL,				/* a: */
	VOWEL,				/* a` */
	VOWEL,				/* Ao */
	VOWEL,				/* a~ */
	CONS|STOP,			/* c, */
	VOWEL,				/* e' */
	VOWEL,				/* e^ */
	VOWEL,				/* e: */
	VOWEL,				/* e` */
	VOWEL,				/* i' */
	VOWEL,				/* i^ */
	VOWEL,				/* i: */
	VOWEL,				/* i` */
	CONS|VCD|DNTL,		/* n~ */
	VOWEL,				/* o' */
	VOWEL,				/* o^ */
	VOWEL,				/* o: */
	VOWEL,				/* o` */
	VOWEL,				/* o~ */
	CONS|DNTL,			/* Sv */
	VOWEL,				/* u' */
	VOWEL,				/* u^ */
	VOWEL,				/* u: */
	VOWEL,				/* u` */
	CONS,				/* y: */
	CONS|VCD|DNTL		/* Zv */
};

#undef	ALL
#define	ALL	CLASS1

static RuleType MisPRootRules[] = {
	ALL|STAHYP|CNXTR|MONOCHK|0x0002,
	0,
	ZOOM|CONS,CONS,		/* all -- C* */

	ALL|CNXTR|0x0002,
	0,
	ZOOM|VOWEL,CONS,		/* all -- V* */

	ALL|0x0205,
	2,
	ZTO1M|0x00|HYPHEN,		/* all -- -CV */
	CONS,CONS,
	VOWEL,CONS,

	ALL|0x0305,
	2,
	CONS|DNTL|HYPHEN,CONS|DNTL,	/* [C,+dental]-lV */
	MATCH|RomL,
	VOWEL,CONS,

	ALL|0x0307,
	2,
	ZTO1M|0x00|HYPHEN,		/* -[C,+stop][C,+liquid]V */
	CONS|STOP,CONS|STOP,
	CONS|LIQ,CONS|LIQ,
	VOWEL,CONS,

	ALL|0x0304,
	2,
	DOUBLE|CONS|HYPHEN,CONS,	/* all -- C-CV */
	VOWEL,CONS,

	ALL|0x0409,
	2,
	CONS|HYPHEN,CONS,		/* C-s[+stop,-vcd]([+liquid])V */
	MATCH|RomS,
	CONS|STOP,CONS|STOP|VCD,
	ZTO1|CONS|LIQ,CONS|LIQ,
	VOWEL,CONS,

	ALL|0x0307,
	2,
	ZTON|CONS,CONS,		/* C*[C,+dental]-lV */
	CONS|DNTL|HYPHEN,CONS|DNTL,
	MATCH|RomL,
	VOWEL,CONS,

	ALL|0x0308,
	2,
	ZTON|CONS|HYPHEN,CONS,	/* C*-[C,+stop][C,+liquid]V */
	CONS|STOP,CONS|STOP,
	CONS|LIQ,CONS|LIQ,
	VOWEL,CONS,

	ALL|0x0206,
	2,
	ZTON|CONS|HYPHEN,CONS,	/* all -- C*-CV */
	CONS,CONS,
	VOWEL,CONS,
	0
};

#ifndef	DA
static struct LangType MisData = {
	MisFeTable - RomA,
	0,
	0,
	0,
	0,
	0,
	MisPRootRules,
	NullRule,	/* Negative Root Rules */
	NullRule,	/* PosOnsets */
	NullRule,	/* NegOnsets */
	NullRule,	/* PosRhymes */
	NullRule,	/* NegRhymes */
#ifndef MAC
	MisSuRepair,/* SuffixRepair */
	MisSpecific	/* Specific */
#else
	0,
	0
#endif
};
#else
struct LangType MisData = { 0 };
#endif

MisInit()
{
	extern u_short LangMask;
	extern struct LangType *lang;

#ifdef DA
	MisData.FeatureTable = MisFeTable - RomA;
	MisData.PosRootRules = MisPRootRules;
	MisData.NegRootRules = NullRule;
	MisData.PosOnsets = NullRule;
	MisData.NegOnsets = NullRule;
	MisData.PosRhymes = NullRule;
	MisData.NegRhymes = NullRule;
#endif
#ifdef MAC
	MisData.SuRepair = MisSuRepair;
	MisData.Specific = MisSpecific;
	MisData.ExceIndex = (u_char **)GetResource('CNSE',256 + Miscellaneous);
#endif
	lang = &MisData;
	LangMask = ALL;
	return(0);
}
