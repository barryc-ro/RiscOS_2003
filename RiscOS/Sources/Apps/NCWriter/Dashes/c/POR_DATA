/*************************************************
*    Hyphenation Package DashesÂ                 *
*    Copyright 1984,85,86,87,88,89               *
*    Circle Noetic Services                      *
*    All Rights Reserved                         *
*************************************************/
#include    "hyph.h"
#include    "language.h"

extern RuleType NullRule[];

#ifndef MAC
extern ExceData PorExIndex[];
#endif

extern RuleType SpaFeTable[];
#define	PorFeTable	SpaFeTable

extern RuleType SpaPRootRules[];
#define	PorPRootRules	SpaPRootRules

extern u_char *___dummy();
#define	PorSuRepair	___dummy

extern void SortHyphens();
#define	PorSpecific	SortHyphens

#ifndef	DA
static struct LangType PorData = {
	PorFeTable - RomA,
	0,
#ifdef MAC
	0,
	0,
	0,
	0,
#else
	PorExIndex,
	0,
	0,
	0,
#endif
	PorPRootRules,
	NullRule,	/* Negative Root Rules */
	NullRule,	/* PosOnsets */
	NullRule,	/* NegOnsets */
	NullRule,	/* PosRhymes */
	NullRule,	/* NegRhymes */
#ifndef MAC
	PorSuRepair,	/* SuffixRepair */
	PorSpecific	/* Specific */
#else
	0,
	0
#endif
};
#else
struct LangType PorData = { 0 };
#endif

PorInit()
{
	extern u_short LangMask;
	extern struct LangType *lang;

#ifdef DA
	PorData.FeatureTable = PorFeTable - RomA;
	PorData.PosRootRules = PorPRootRules;
	PorData.NegRootRules = NullRule;
	PorData.PosOnsets = NullRule;
	PorData.NegOnsets = NullRule;
	PorData.PosRhymes = NullRule;
	PorData.NegRhymes = NullRule;
#endif
#ifdef MAC
	PorData.SuRepair = PorSuRepair;
	PorData.Specific = PorSpecific;
	PorData.ExceIndex = (u_char **)GetResource('CNSE',256 + Portuguese);
#endif
	lang = &PorData;
	LangMask = PORTUGUESE;
	return(0);
}
