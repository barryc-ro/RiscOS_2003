CLIBS=dashes.o ^.Password.o.eprintf ^.Password.o.format C:o.stubs
CFLAGS=-ff -pcc -Ospace
CFLAGS1=-ff -pcc -Ospace
ASFLAGS=-q
LFLAGS=-V -map
#CC=cc -IC: -throwback
CC=cc -IC:
AS=objasm
INCS=hyph.i86 language.i86 letters.i86 rules.i86 suffix.i86
INCLUDES=except.h hyph.h language.h prefix.h rules.h \
	 suffix.h hyphtype.h letters.h

KEROBJ=do_hyph.o search.o compound.o rosearch.o hyph_dat.o \
	match.o prefix_r.o rt_rules.o surepair.o utils.o \
	excesrch.o ver.o exstubs.o
# debug.o pr_rule.o
ENGOBJ=eng_data.o CheckExc.o eng_exce.o heavy.o
POROBJ=por_data.o
SPAOBJ=spa_data.o spa_exce.o spa_rule.o
FREOBJ=fre_data.o fre_exce.o
ITAOBJ=ita_data.o ita_exce.o
GEROBJ=ger_data.o ger_rule.o ger_exce.o
DUTOBJ=dut_data.o dut_exce.o
NOROBJ=nor_data.o nor_rule.o nor_exce.o
SWEOBJ=swe_data.o swe_exce.o
DANOBJ=dan_data.o dan_exce.o
ICEOBJ=ice_data.o
GREOBJ=gre_data.o
TUROBJ=
#tur_data.o
RUSOBJ=
#rus_data.o rus_exce.o
CROOBJ=
#cro_data.o cro_exce.o
FINOBJ=fin_data.o
MISOBJ=mis_data.o
OBJECTS=$(KEROBJ) $(ENGOBJ) $(POROBJ) $(SPAOBJ) $(FREOBJ) $(ITAOBJ) \
	$(GEROBJ) $(DUTOBJ) $(NOROBJ) $(SWEOBJ) $(DANOBJ) $(ICEOBJ) \
	$(GREOBJ) $(TUROBJ) $(RUSOBJ) $(CROOBJ) $(MISOBJ) $(FINOBJ)

all:    dashes.o

dashes.o : $(OBJECTS) dashes-cmd
	libfile -c -o o.dashes -v dashes-cmd

test : test.o inithyph.o getch.o $(CLIBS)
	link $(LFLAGS) -o test test.o inithyph.o getch.o $(CLIBS)
	squeeze test

finnish.o : $(FINOBJ)
	libfile -c -o o.finnish $(FINOBJ)

test.o : test.c $(INCLUDES)
	$(CC) $(CFLAGS1) -c test

getch.o : getch.c hyph.h letters.h
	$(CC) $(CFLAGS1) -c getch

inithyph.o : inithyph.c
	$(CC) $(CFLAGS) -c inithyph

exstubs.o : exstubs.s
	$(AS) $(ASFLAGS) -f s.exstubs -t o.exstubs

time : inithyph.o $(CLIBS)
	$(CC) $(CFLAGS1) -DTIME -c test
	link $(LFLAGS) -o ttest test.o inithyph.o $(CLIBS)
	squeeze link

clean :
        -wipe o.* ~cf~v

pr_rule.o : pr_rule.c $(INCLUDES)
	$(CC) $(CFLAGS) -DDEBUG -c pr_rule

debug.o : debug.c $(INCLUDES)
	$(CC) $(CFLAGS) -DDEBUG -c debug.c

hyph_dat.o : hyph_dat.c $(INCLUDES)
	$(CC) $(CFLAGS) -c hyph_dat

do_hyph.o : do_hyph.c $(INCLUDES)
	$(CC) $(CFLAGS) -c do_hyph

match.o : match.c $(INCLUDES)
	$(CC) $(CFLAGS) -c match

#match.o : match.a86 $(INCS)
#	$(AS) $(ASFLAGS) $*.a86;

prefix_r.o : prefix_r.c $(INCLUDES)
	$(CC) $(CFLAGS) -c prefix_r

#rt_rules.o : rt_rules.a86 $(INCS)
#	$(AS) $(ASFLAGS) rt_rules.a86;

rt_rules.o : rt_rules.c $(INCLUDES)
	$(CC) $(CFLAGS) -c rt_rules

#search.o : search.a86 $(INCS)
#	$(AS) $(ASFLAGS) search.a86;

search.o : search.c $(INCLUDES)
	$(CC) $(CFLAGS) -c search

#utils.o : utils.a86 $(INCS)
#	$(AS) $(ASFLAGS) utils.a86;

utils.o : utils.c $(INCLUDES)
	$(CC) $(CFLAGS) -c utils

surepair.o : surepair.c $(INCLUDES)
	$(CC) $(CFLAGS) -c surepair

compound.o : compound.c $(INCLUDES)
	$(CC) $(CFLAGS) -c compound

rosearch.o : rosearch.c $(INCLUDES)
	$(CC) $(CFLAGS) -c rosearch

excesrch.o : excesrch.c $(INCLUDES)
	$(CC) $(CFLAGS) -c excesrch

#excesrch.o : excesrch.a86 $(INCS)
#	$(AS) $(ASFLAGS) excesrch.a86;

ver.o : ver.c $(INCLUDES)
	$(CC) $(CFLAGS) -c ver

eng_exce.o : eng_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDENG_EXCE -c eng_exce

CheckExc.o : CheckExc.c $(INCLUDES)
	$(CC) $(CFLAGS) -c CheckExc

#CheckExc.o : CheckExc.a86 $(INCS)
#	$(AS) $(ASFLAGS) CheckExc.a86;

heavy.o : heavy.c $(INCLUDES)
	$(CC) $(CFLAGS) -c heavy

#heavy.o : heavy.a86 $(INCS)
#	$(AS) $(ASFLAGS) heavy.a86;

eng_data.o : eng_data.c eng_rule.c eng_pref.c eng_suff.c \
			eng_mute.c stress_r.c suffix_r.c $(INCLUDES)
	$(CC) $(CFLAGS) -c eng_data

por_data.o : por_data.c $(INCLUDES)
	$(CC) $(CFLAGS) -c por_data

spa_exce.o : spa_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDSPA_EXCE -c spa_exce

spa_data.o : spa_data.c spa_pref.c $(INCLUDES)
	$(CC) $(CFLAGS) -c spa_data

spa_rule.o : spa_rule.c $(INCLUDES)
	$(CC) $(CFLAGS) -c spa_rule

fre_exce.o : fre_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDFRE_EXCE -c fre_exce

fre_data.o : fre_data.c fre_pref.c fre_suff.c $(INCLUDES)
	$(CC) $(CFLAGS) -c fre_data

ita_exce.o : ita_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDITA_EXCE -c ita_exce

ita_data.o : ita_data.c ita_pref.c $(INCLUDES)
	$(CC) $(CFLAGS) -c ita_data

ger_exce.o : ger_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDGER_EXCE -c ger_exce

ger_rule.o : ger_rule.c $(INCLUDES)
	$(CC) $(CFLAGS) -c ger_rule

ger_data.o : ger_data.c ger_pref.c ger_suff.c $(INCLUDES)
	$(CC) $(CFLAGS) -c ger_data

dut_data.o : dut_data.c dut_pref.c dut_suff.c $(INCLUDES)
	$(CC) $(CFLAGS) -c dut_data

dut_exce.o : dut_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDDUT_EXCE -c dut_exce

nor_exce.o : nor_exce.c
	$(CC) $(CFLAGS1) -NDNOR_EXCE -c nor_exce

nor_rule.o : nor_rule.c $(INCLUDES)
	$(CC) $(CFLAGS) -c nor_rule

nor_data.o : nor_data.c nor_pref.c nor_suff.c $(INCLUDES)
	$(CC) $(CFLAGS) -c nor_data

swe_data.o : swe_data.c swe_pref.c swe_suff.c $(INCLUDES)
	$(CC) $(CFLAGS) -c swe_data

swe_exce.o : swe_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDSWE_EXCE -c swe_exce

dan_data.o : dan_data.c dan_pref.c dan_suff.c $(INCLUDES)
	$(CC) $(CFLAGS) -c dan_data

dan_exce.o : dan_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDDAN_EXCE -c dan_exce

ice_data.o : ice_data.c ice_pref.c $(INCLUDES)
	$(CC) $(CFLAGS) -c ice_data

gre_data.o : gre_data.c $(INCLUDES)
	$(CC) $(CFLAGS) -c gre_data

tur_data.o : tur_data.c $(INCLUDES)
	$(CC) $(CFLAGS) -c tur_data

rus_data.o : rus_data.c rus_pref.c $(INCLUDES)
	$(CC) $(CFLAGS) -c rus_data

rus_exce.o : rus_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDRUS_EXCE -c rus_exce

cro_data.o : cro_data.c $(INCLUDES)
	$(CC) $(CFLAGS) -c cro_data

cro_exce.o : cro_exce.c $(INCLUDES)
	$(CC) $(CFLAGS1) -NDCRO_EXCE -c cro_exce

fin_data.o : fin_data.c fin_pref.c fin_suff.c fin_root.c $(INCLUDES)
	$(CC) $(CFLAGS) -c fin_data

mis_data.o : mis_data.c $(INCLUDES)
	$(CC) $(CFLAGS) -c mis_data
