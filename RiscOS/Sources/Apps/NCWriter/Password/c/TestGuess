/*************************************************
*    Spelling Checker PassWord                   *
*    Copyright 1986,87,88,89                     *
*    Circle Noetic Services                      *
*    All Rights Reserved                         *
*************************************************/

#ifdef RISCOS
#include <stdlib.h>
#else
#include <types.h>
#include <event.h>
#include <osutil.h>
#include <syserr.h>
#include <memory.h>
#endif
#include <stdio.h>
#include "Password.h"

short debugFlag;
extern long (*UserFreeSpace)();
extern long PWDPurge();

/*main-------------------------------------------------------*/
main(argc,argv)
register char *argv[];
{
  register struct PWDDictType **dict;
  register u_char **guesses;
  register long poolSize;

    if(argc < 4) {
    fprintf(stderr,"Usage: %s size dictionary word [word ...]\n",argv[0]);
    return(1);
    }
  eprintf("Copyright 1984-89 Circle Noetic Services.\n\tAll rights reserved\n");
  poolSize = (long)atoi(argv[1])*1024;
#ifdef RISCOS
  if(InitMemPool(malloc(poolSize),poolSize)) {
#else
  if(InitMemPool(NewPtr(poolSize),poolSize)) {
#endif
    eprintf("%s: InitMemPool() failed\n",argv[0]);
    return(2);
  }
  UserFreeSpace = PWDPurge;
  if((dict = PWDInitSpell(argv[2])) == NULL) {
    fprintf(stderr,"%s: PWDInitSpell() failed\n",argv[0]);
    return(2);
  }
  argv += 2;
  while(argv[1] != NULL) {
    argv++;
    guesses = Guess(dict,*argv,*argv + strlen(*argv) - 1,1);
    fprintf(stderr,"%s:\n",*argv);
    WriteGuesses(guesses);
    CNSDisposHandle(guesses);
  }
  PWDKillSpell(dict);
  return(0);
}
/*-------------------------------------------------------main*/

/*WriteGuesses-----------------------------------------------*/
WriteGuesses(guesses)
u_char **guesses;
{
    register u_char *start,*end;

  if(guesses == NULL)
    fprintf(stderr,"No guesses found\n");
  else {
    CNSLock(guesses);
    start = *guesses;
    end = start + CNSGetHandleSize(guesses);
    for(; start < end; start += strlen(start) + 1)
      fprintf(stdout,"%d %s\n",*start,start+1);
    CNSUnlock(guesses);
  }
}
/*-----------------------------------------------WriteGuesses*/

/*IOCheck----------------------------------------------------*/
IOCheck(err)
{
  if(err != 0)
    fprintf(stderr,"IO error %d\n",err);
  return(err);
}
/*----------------------------------------------------IOCheck*/
