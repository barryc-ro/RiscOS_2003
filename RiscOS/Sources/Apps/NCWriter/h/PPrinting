/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/


#define mAbandon 201
#define mContinue 202
#define mSkip 203

// ========================== TPrintJob ===================================

typedef class _TPrintJob *TPrintJob;
typedef class _TPrintStatusWindow *TPrintStatusWindow;

class _TPrintJob : public _THandler
{
public:

  TStdPrintHandler fPrintHandler;
  CmdNumber        fCmdNumber;
  int              fStartPage;
  int              fEndPage;
  int              fCopiesPerPage;
  bool             fPause;
  int              fIncrement;
  int              fJobsLeft;
  int              fCurrentPage;
  int              fTotalCopies;
  int              fPageDefined;
  int              fJobHandle;
  int              fPreviousJob;
  TPrintStatusWindow fStatusWindow;
  TWindow          fSavedWindow;
  bool             fJobStarted;
  bool             fJobPaused;
  // 15/05/92 two new for mail merge
  bool             fDoMerge;
  bool             fMoreMerge;
  int              fMergeState;  /* -1 in middle, 0 continuation, 1 at start */
  bool             fPreview;

             _TPrintJob(TStdPrintHandler handler, CmdNumber itsCmdNumber,
                   int startPage, int endPage, int copies,
                   int copiesPerPage, bool pause, int increment, bool doMerge,
                   bool preview);
        void Free();
        void InstallIdle(bool installing);
        bool DoIdle(IdlePhase phase);
        void InitialisePrint();
};

// ======================== TPrintCommand =================================
struct _TPrintCommand: _TCommand
{
  TStdPrintHandler fStdPrintHandler;

_TPrintCommand(CmdNumber, TStdPrintHandler);
void DoIt(void);
};

// =========================== TPrintStatusWindow =========================
class _TPrintStatusWindow : public _TWindow
{
bool _TPrintStatusWindow::TestButton(TView theSubView, int ch);

public:

  TPrintJob fPrintJob;
  int       fButtonType;
  TControl  fAbandonBtn;
  TControl  fContinueBtn;
  TControl  fSkipBtn;

            _TPrintStatusWindow(TDocument itsDocument, TView itsSuperView,
                          char * &params);
  void      Free();
  void      Open();
  void      UpdateStatus(TPrintJob printJob);
  void      DoChoice(TView origView, int message);
  TCommand  DoCommandKey(int ch, EventInfo &info);
  TCommand  DoKeyCommand(int ch, EventInfo &info);
};
