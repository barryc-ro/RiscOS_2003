/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __Handler_h
#define __Handler_h

#ifndef __Support_h
#include "Support.h"
#endif

#ifndef __wr_wimp_h
#include "wimp.h"
#endif

typedef enum TPasteCommandType {
kPasteCommand, kInsertFile, kF2Insert, kSynonymReturned,
             kMoveCommand, kCopyCommand } TPasteCommandType;

class _THandler : public _TObject
{
public:

// object fields
   THandler fNextHandler;
   long fIdleFreq;
   long fLastIdle;

// object methods
                 _THandler(THandler itsNextHandler);
        void     Free();
virtual TCommand ReadFromDialog(TView theDialogView, CmdNumber aCmd,
                                                            IDType icnId);
virtual void     WriteToDialog(TView theDialogView, CmdNumber aCmd);
// virtual bool     HandlesPrintingCommands();
virtual bool     SetupDynamicMenu(CmdNumber aCmdNumber, int menuNum, bool create);
virtual void     DoSetupMenus();
virtual TCommand DoMenuCommand(EventInfo &info, CmdNumber aCmdNumber);
virtual TCommand DoCommandKey(int ch, EventInfo &info);
virtual TCommand DoKeyCommand(int ch, EventInfo &info);
virtual bool     DoIdle(IdlePhase phase);
virtual void     DoChoice(TView origView, int itsChoice);
#ifdef TRACE
        void     SetIdleFreq(long newFreq);
#else
inline  void     SetIdleFreq(long newFreq) { fIdleFreq = newFreq; };
#endif
};

#endif
