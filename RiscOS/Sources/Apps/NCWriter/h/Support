/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __Support_h
#define __Support_h

#ifndef __Utilities_h
#include "Utilities.h"
#endif

#ifndef __ViewCoords_h
#include "UViewCoor.h"
#endif

#ifndef __Failure_h
#include "UFailure.h"
#endif

#ifndef __Memory_h
#include "UMemory.h"
#endif

#ifndef __MenuSetup_h
#include "UMenuSetu.h"
#endif

#ifndef __List_h
#include "UList.h"
#endif

#if SIDEBAR == 1
#define FILMS 1
#endif

/*******************************************************/
/*                Menu Numbers                         */
/*******************************************************/

#define cmMain            1
#define cmIconbar         2
#define cmDocuments       12
#define cmUndo            22
#define cmColour          61

/*******************************************************/
/*              Command Numbers                        */
/*******************************************************/

#define cNoCommand        0
#define cCantUndo         (-1)
#define cAboutApp         1
#define cNew              2
#define cNewLast          3
#define cDocumentList     4
#define cDummy            5
#define cClose            6
#define cRevert           7
#define cQuit             8
#define cShowClipboard    9
#define cSave             10
#define cSaveText         11
#define cSaveStationery   12
#define cSaveWord         13
#define cSavePostscript   14
#define cSaveContents     15
#define cSaveDraw         16
#define cSaveIndex        17
#define cSaveTeX          18
#define cSaveLast         19
#define cSaveClip          181
#define cSaveSelection     572
#define cSaveTextSelection 576
#define cSaveWordSelection 584
#define cSaveTeXSelection  604
#define cSaveLastSelection 608
// #define cSaveStyles    ??
#define IsFileCommand(n) ((unsigned int)(n - cSave) <= (cSaveLast - cSave))
#define cUndo             20
#define cUndoDescription  21
#define cMove             22
#define cCut              23
#define cCopy             24
#define cPaste            25
#define cClear            26
#define cTyping           28
#define cMouseCommand     29
#define cPrFileBase       32
#define cPageSetup        32
#define cPrintOne         33
#define cPrint            34
#define cPrintToFile      35
#define cPrintSpoolFile   37
#define cPrFileMax        38
#define cShowBorders      41
#define cSaveFileImmediately 68  /* from 19 23/02/95 */
#define cOpen             69
#define cOpenLast         79
#define cSmartQuotes      99
#define cTrackingControl  237
#define cFinderNew        252
#define cFinderPrint      253
#define cFinderOpen       254
#define cSaveFileShutdown 448

/*******************************************************/
/*                  Alerts                             */
/*******************************************************/

#define msgFieldFailed  (msgLookup << 16) | 2
#define msgReformFailed (msgLookup << 16) | 3
#define msgInitFailed   (msgLookup << 16) | 4
#define msgSaveFailed   (msgLookup << 16) | 5
#define msgRevertFailed (msgLookup << 16) | 6
#define msgPrintFailed  (msgLookup << 16) | 7
#define msgNewFailed    (msgLookup << 16) | 8
#define msgOpenFailed   (msgLookup << 16) | 9
#define msgPlainMsg     (msgPlain << 16) | 0xffff

#define kNotOurFileType 25
#define errSpooling     200
#define errRevertFNF    201
#define errFileChanged  202
#define errSaveAgain    203
#define errFTypeChanged 204
#define errNoPrintDrvr  205
#define errNotMyType    206

typedef enum {
  phSpaceIsLow = 1,              // Report (info)        OK
// phUnrecognisedOption = 2,     // Report (error)       OK
  phRevert = 3,                  // dbox   -1            Revert
// phPurgeOld = 4,
  phSaveChanges = 5,             // dbox   -2            Save & template
  phUnsavedFile = 6,             // dbox   -1            Quit
  phUnsavedFiles = 7,            // dbox   -1            Quit
  phOldPrintRecord = 8,          // Report (error)       OK & Cancel
                              // or dbox   -3            Continue, Cancel, Reformat
  phMarginsChanged = 9,          // Report (error)       OK
                              // or dbox   -3            Continue, Cancel, Reset
  phRevertToEmpty = 10,          // dbox   -1            Revert
  phMissingFontMsg = 11,         // Report (error)       OK & Cancel
  phNoDefaultFontMsg = 12,       // Report (error)       OK
// phTableWontFit = 13,
  phHeaderMarginsTooSmall = 17,  //
  phFooterMarginsTooSmall = 18,  //
  phShouldOverwrite = 19,        // dbox   -1            Overwrite
  phNewerDocument = 20,          // Report (error)       OK
  phShouldSubFonts = 21,         // Report (error)       OK & Cancel
  phNoDemoSave = 22,             // Report (error)       OK
  phPrintPause = 23,             // Report (info)        OK & Cancel
  phTableInTable = 24,           // Report (error)       OK
  phFindFromStart = 25,          // Report (info)        OK & Cancel
  phFindFromEnd = 26,            // Report (info)        OK & Cancel
  phMissingTeXChars = 27         // Report (info)        OK
} TAlertCodes;

// button codes returned 30/06/95: Cancel & No (i.e. 3rd button) switched
#define kYesButton  1
#define kCancelDlog 2
#define kNoButton   3

#define bzUndo 5
#define bzRedo 6
#define bzCantUndo 11

#define HLOff 1
#define HLDim 2
#define HLOn 4
#define HLOffDim HLOff + HLDim
#define HLDimOff HLOffDim
#define HLDimOn HLDim + HLOn
#define HLOnDim HLDimOn
#define HLOffOn HLOff + HLOn
#define HLOnOff HLOffOn

/*******************************************************/
/*              Choice Numbers                         */
/*******************************************************/

#define mOKHit 1
#define mCancelHit 2
#define mButtonHit 3
#define mCheckBoxHit 4
#define mClusterHit 5
#define mEditTextHit 6
#define mIconHit 7
#define mListItemHit 8
#define mListScrollBarHit 9
#define mPictureHit 10
#define mPopupHit 11
#define mRadioHit 12
#define mStaticTextHit 13
#define mHScrollBarHit 14
#define mVScrollBarHit 15
#define mEditTabKey 16
#define mEditReturnKey 17
#define mEditEnterKey 18
#define mSliderHit 19
#define mControlHit 20
#define mCancelKey 21
#define mDefaultKey 22
#define mUpArrowHit 23
#define mDownArrowHit 24

#define kLowSpaceInterval (2 * 60 * 60)
#define kFixedSize TRUE
#define kPrintInfoSize 120
#define kViewRsrcExpandAmt 0x400
#define kWantHScrollBar TRUE
#define kWantVScrollBar TRUE
#define kAskForFilename TRUE
#define kLeftPalette h
#define kTopPalette v
#define kShowUndo TRUE
#define kShowRedo FALSE
#define kShowCantUndo kShowUndo
#define kUsesDataFork TRUE
#define kUsesRsrcFork TRUE
#define kDataOpen TRUE
#define kKeepingOpen TRUE
#define kReadingFile TRUE
#define kVisible TRUE
#define kInvisible FALSE
#define kRedraw TRUE
#define kDontRedraw FALSE
#define kInvalidate TRUE
#define kDontInvalidate FALSE
#define kSuspendOrResume 0x01
#define kMaxSignatures 32
const kMaxIdleTime = 0x7fffffff;    // MaxLongInt

#define kTWScrapType (-4)

/*******************************************************/
/*              RISC_OS3 Messages                      */
/*******************************************************/

#define Message_Shutdown     14
#define Message_MenusDeleted 0x400c9
#define Message_WindowInf    0x400cc

/*******************************************************/
/*           Colour Picker Messages                    */
/*******************************************************/

#define Message_ColourPickerChoice               0x47700
#define Message_ColourPickerColourChanged        0x47701
#define Message_ColourPickerCloseDialogueRequest 0x47702

/*******************************************************/
/*         DragDrop & Clipboard Events                 */
/*******************************************************/

#ifdef DRAGDROP
#define Message_ClaimEntity   15
#define Message_DataRequest   16
#define Message_Dragging      17
#define Message_DragClaim     18
#endif
#define Message_ReleaseEntity 19

/*******************************************************/
/*              Printer Messages                       */
/*******************************************************/

#define Message_PrintSave  0x80142
#define Message_PrintError 0x80144

/*******************************************************/
/*              Thesaurus Events                       */
/*******************************************************/

#ifdef THESAURUS
#define Message_ThesaurusStarting 0x0821c0
#define Message_ThesaurusDying 0x0821c1
#define Message_ThesaurusQuery 0x0821c2
#define Message_ThesaurusReply 0x0821c3
#define Message_ThesaurusSend 0x0821c4
#endif

/*******************************************************/
/*                 Methods                             */
/*******************************************************/

typedef class _THandler *THandler;
typedef class _TApplication *TApplication;
typedef class _TDocument *TDocument;
typedef class _TView     *TView;
typedef class _TWindow *TWindow;
typedef class _TScroller *TScroller;
typedef class _TCommand  *TCommand;
typedef class _TControl  *TControl;
typedef class _TControlTracker *TControlTracker;
typedef class _TPrintHandler *TPrintHandler;
typedef class _TMenu *TMenu;

typedef enum
{
   kForDisplay,
   kForPrinting,
   kForMerge,
} TWhyMaking;

typedef enum
{
   eInches,
   eDecInches,
   eCentimetres,
   eMillimetres,
   ePoints,
   ePicas,
   eDidots,
   eCiceros,
   eCustom,
   ePoint16,
} TScale;

typedef enum TrackPhase {
   trackPress, trackMove, trackRelease}
TrackPhase;


typedef struct EventInfo {
   wr_wimp_eventstr *event;     /* the original event */
   char       theClickCount;
   char       affectsMenus;
   char       menuClickedOn; /* a submenu has been clicked on/dragged over */
   char       fDeleteWindow; /* TRUE if window needs to be deleted */
   char       eventHandled;  /* for dbox handling */
   char       rightButton;
   char       theShiftKey;
   // TrackPhase
   char       theTrackPhase; /* for mouse tracker routines */
   int        trackingKey;   /* identifies drag/drop 'clicks' */
   int        delayDrag;
   TDocument  document;
   IDType     windowID;
}
EventInfo;

typedef enum IdlePhase {
   idleBegin, idleContinue, idleEnd}
IdlePhase;

typedef enum SizeDeterminer {
   sizeSuperView, sizeRelSuperView, sizeVariable, sizeFixed, sizePage, sizeFillPages}
SizeDeterminer;

typedef char HLState;

typedef enum SIPChoice {
   sipNever, sipAlways, sipAskUser}
SIPChoice;

typedef struct             // ??? set up the AppFile struct ???
{
OSType fType;
char  *fName;
int    fEstSize;
int    fFileIsSafe;
} AppFile;

typedef enum
   {
      kValidValue,
      kNoFilenameDot,
      kValueTooSmall,
      kValueTooLarge,
      kInvalidValue,
      kNonNumericCharacters,
      kEmptyValue,
      kFractionTooBig
} TValidationResults;

typedef void (*DoToDoc)(TObject, TDocument, ...);
typedef void (*DoToWindow)(TObject, TWindow, ...);
typedef void (*DoToHandler)(TObject, THandler, ...);
typedef void (*DoToView)(TObject, TView, ...);
typedef bool (*TestSubView)(TObject, TView, ...);
typedef void (*DoToSubView)(TObject, TView, ...);
typedef void (*DrawProc)(TView, ...);

const kNoIdentifier = '0' << 24;              // 11/05/91

#include "UHandler.h"
#include "UApplicat.h"
#include "UDocument.h"
#include "UView.h"
#include "UWindow.h"
#include "UScroller.h"
#include "UCommand.h"
#include "UControls.h"
#include "UPrintHan.h"
#include "UMenu.h"

#define gNoChanges TCommand(-1)

extern bool gAppDone;
extern TApplication gApplication;
extern TView gClipUndoView;
extern TView gClipView;
extern TPrintHandler gCurrPrintHandler;
extern int gCustomPoints;
extern char *gDirName;
extern TList gDocList;
extern TList gEnabledControls;
extern EventInfo gEventInfo;
extern int gFileType[];
extern bool gFinderPrinting;
extern char *gFinderFilename;   // name of file/pad passed from Filer
extern TList gFreeWindowList;
extern TMenu gIconbarMenu;
extern IDType gIDCncl;
extern IDType gIDOKbn;
extern bool gInRedraw;
extern bool gInitialized;
#ifndef DRAGDROP
extern TCommand gLastCommand;
#endif
extern StringHandle gLastFile;
extern unsigned long gLastPrintChange;
extern int gLastUpTime;
extern OSType gMainFileType;
extern IDType gNoIdentifier;
extern TPrintHandler gNullPrintHandler;
extern VHSelect gOrthogonal[2];
extern THPrint gPrinterDetails;
extern TPrintHandler gPrintHandler;
extern char gProgName[];
extern TDocument gSavingDoc;  // temp for repairing styles
extern TWindow gSetUpWindow;
#ifdef TABLES
extern char *gSmartQuote;
extern char gSmartQuoteStr[4];
extern int gSmartQuoteDelay;
extern char gSmartChars[8];
extern char *gSmartSubs[7];
extern int gKeyTick;
#endif
#ifdef DRAGDROP
extern TCommand gStartDragger;
#endif
#ifdef THESAURUS
extern int gThesaurus;
#endif
extern TCommand gTracker;
#ifndef DRAGDROP
extern bool gUndoState;
extern CmdNumber gUndoCmd;
#endif
extern TScale gUnits;
extern TWindow gWindowWithPointer;
extern Rect gZeroRect;
#define gZeroVRect gZeroRect
#define gZeroPt (*(Point *)&gZeroRect)
#define gZeroVPt (*(Point *)&gZeroRect)

#ifdef TRACE
void NotYetImplemented(char *where);
#else
#define NotYetImplemented(a) {}
#endif
void GetDeviceRes(Point &resolution);

TView CreateRsrcViews(int rsrcNum, int type, TDocument itsDocument, TView parentView);
TWindow NewTemplateWindow(int viewRsrcID, TDocument itsDocument);
TWindow NewTemplateWindow1(int viewRsrcID);

/* Alert: second param: -1 => use dboxQuery;
                    else as wr_wimp_reporterror's wr_wimp_errflags */
int  Alert(int alertID, int , ...);
void InitSupport(void);
bool SendHelpReply(wr_wimp_msgstr *msg);
void TidyFiles();     // atexit procedure in Support
bool RectIsVisible(Rect &r);
void RenameDocument();
wr_wimp_i CreateBaricon(char *spritename);
int DragButton(int);
void SetLastPrintChange();

#define I_(a, b, c, d) (((a)<<24)|((b)<<16)|((c)<<8)|(d))
#define DECLARE(x) (x) = (x)
#endif
