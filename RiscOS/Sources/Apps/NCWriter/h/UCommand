/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __Command_h
#define __Command_h

#ifndef __Support_h
#include "Support.h"
#endif

class _TCommand : public _TObject
{
public:

// fields
TDocument  fChangedDocument;
TScroller  fScroller;
TView      fView;
VRect      fConstrainingRect;
CmdNumber  fCmdNumber;
bool       fCmdDone;
bool       fCanUndo;
bool       fCausesChange;
bool       fChangesClipboard;
bool       fConstrainsMouse;
bool       fViewConstrain;
bool       fTrackNonMovement;
int        fFeedbackBox;
bool       fSolidDragState;
bool       fSolidDrag;
VRect      fInitialRect;
TObject    fPasteSelection;
int        fDragSelectionFlags;
int        fAutoScrollStart;
int        fTrackedIcon;
int        fMouseX;
int        fMouseY;

// methods
_TCommand(CmdNumber, TDocument, TView, TScroller);
void Free();

virtual void Commit();  // these 4 methods are always overridden
virtual void DoIt();
virtual void RedoIt();
virtual void UndoIt();

virtual void     AutoScroll(VCoordinate deltaH, VCoordinate deltaV);

virtual TCommand TrackMouse(TrackPhase, VPoint &,
                 VPoint &, VPoint &, bool, EventInfo &);

virtual void     TrackFeedback(VPoint &anchorPoint, VPoint &nextPoint,
                 bool turnItOn, bool mouseDidMove);
              
virtual void     TrackConstrain(VPoint &anchorPoint, VPoint &previousPoint,
                 VPoint &nextPoint);

virtual void     SetBandBox(wr_wimp_box *box, wr_wimp_icon *icon, wr_wimp_wstate *wstate);
virtual TDocument CreateTextDocument(int dragShift);
        void     StartDrag(VPoint &anchorPoint, Point &globalMouse);
        void     StopDrag(void);
};

#endif
