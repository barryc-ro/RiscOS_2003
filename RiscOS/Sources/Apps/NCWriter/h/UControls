/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __Controls_h
#define __Controls_h

#ifndef __Support_h
#include "Support.h"
#endif

class _TControlTracker : public _TCommand
{
public:

// fields
  TControl fControl;
  int      fDragCursorPos;

// methods
         _TControlTracker(TControl theControl);
TCommand TrackMouse(TrackPhase, VPoint&, VPoint&, VPoint&,bool,EventInfo &);
void     SetBandBox(wr_wimp_box *box, wr_wimp_icon *icon, wr_wimp_wstate *wstate);
TDocument CreateTextDocument(int dragShift);
};

typedef void (*DoToIcon)(wr_wimp_icreate *, int);

class _TControl : public _TView
{
public:

// fields
  wr_wimp_w fWMgrWindow;
  wr_wimp_i fIconNum;
  char   fDefChoice;
  char   fHilite;
  char   fDimmed;
  char   fDismissesDialog;  // if TRUE, clicking on the icon removes dbox
  char   fIconsShown;
  char   fBorder;
  char   fTruncateMode;     // TruncType
  char   fDragType;         // allow different drag types in the tracker
  int    fMaximum;
  int    fMinimum;
  int    fCurrentValue;
  int    fFont;

// methods
                 _TControl(TDocument itsDoc, TView itsSuperView, char* &itsParams);
        void     Free();
        void    *GetDboxHandle();
virtual void     SetIconFlags(wr_wimp_iconflags value, wr_wimp_iconflags mask);
        void     GetIconInfo(wr_wimp_icon *result);
virtual void     SetValue(int newValue, bool redraw);
virtual int      GetValue();
        void     SetFont(char *fontName, int sizeX, int sizeY);
virtual TValidationResults Validate(bool);
        TView    ViewFromWimpIcon(wr_wimp_i theIcon);
virtual void     ReflectMenuState(int);
        void     StartEdit();
        bool     IsWriteable();
        void     Open();
        void     ProdIcon();
        void     SetButtonType(int type);
#ifdef NETWP
virtual
#endif
        void     SetText(char *theText, bool redraw);
#ifdef NETWP
virtual
#endif
        void     GetText(char *theText);
        void     SetJustification(int justification, bool redraw);
virtual void     RealHiliteState(bool state);
inline  void     HiliteState(bool state, bool redraw) { RealHiliteState(state); };
        void     RealDimState(bool state);
virtual void     MakeDim(bool state);
inline  void     DimState(bool state, bool redraw) { RealDimState(state); };
virtual TCommand TrackMouse(TrackPhase, VPoint&, VPoint&, VPoint&,bool,EventInfo &);
virtual TCommand DoClick(EventInfo &info);
inline  bool     IsOn() { return fHilite; };
inline  bool     IsDimmed() { return fDimmed; };
        void     RealToggle();
inline  void     Toggle(bool redraw) { RealToggle(); };
        void     RealSetState(bool state);
inline  void     SetState(bool state, bool redraw) { RealSetState(state); };
        bool     FakeMenuEvent(EventInfo &info);
        bool     HandleControlClick(EventInfo &info, TCommand &aCmd);
        TCommand DoMouseCommand(Point &theMouse, EventInfo &info);
        TCommand DoKeyCommand(int ch, EventInfo &info);
        void     DoChoice(TView origView, int itsChoice);
        void     ChangeDeletedIcon(int &icNum, int param, DoToIcon editProc);
        void     LocateIcon(int &icNum, int hDiff);
        void     Locate(VCoordinate hCoord, VCoordinate vCoord, bool invalidate);
        void     ShowIcon(int &icNum, bool state);
        void     ViewShown(bool state);
        void     DrawFileIcon(int fileType);
        void     PreOpen();
        void     ProdIt(int button);
        void     SetControlBorder(int newBorder, int iconNumber);
#ifdef TABLES
virtual int      PopupAction(wr_wimp_eventstr *e);  // 16/01/94 generic popups
#endif
};

#endif

