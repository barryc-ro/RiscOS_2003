/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __RulerInterface_h
#define __RulerInterface_h

#ifndef __Support_h
#include "Support.h"
#endif

#ifndef __Dialog_h
#include "UDialog.h"
#endif

#ifndef __Common_h
#include "UCommon.h"
#endif

#ifndef __Array_h
#include "UArray.h"
#endif

#define kFillerLen 4
typedef char TabFiller[5];

typedef enum TSelType
{ kLMOnly, kRMOnly, kIndOnly, kTabOnly, kColOnly, kMultiSel } TSelType;

typedef struct TFTabInfo
{
   Fixed fStop;
   TCurrency fOwner;
   unsigned /* TTabKind */ fKind:8;
   unsigned /* char */     fMark:8;
   unsigned /* bool */     fDeleted:1;
   char fFiller[kFillerLen];
//   int fRuleDefined;
//   TRuleType fRuleStyle;
} TFTabInfo;   
typedef struct TFTabInfo *PFTabInfo;

typedef class _TRulerDef *TRulerDef;

class _TRulerDef : public _TArray  // was _TSortedArray
{
public:

Attributes fDefined;
Fixed fLeftMargin;
Fixed fRightMargin;
Fixed fIndentation;
Fixed fOwnLeftMargin;  // 26/07/90
Fixed fOwnRightMargin; // 26/07/90
Fixed fOwnIndentation; // 26/07/90
Fixed fGutterWidth;
int fTotalColumns;

Fixed ConstrainTab(Fixed offset, int idx, TSelType tabType,
                  Fixed rulerWidth, TRulerDef selection, int direction);
void GetSelTotals(TRulerDef rulerDef, int &total, int &user);
TSelType GetSelCmdIndex();
TSelType GetSelMargins(int &selMargins);
void OffsetSelection(Fixed amount, int moveMargins, int direction);
void MoveSelection(TRulerDef selection, Fixed amount, int direction);
void DelFromRulerDef(TRulerDef deletions);
int  IsPresent(TFTabInfo &info);     // 16/09/91 &
void ClearDeletes();
void SetDelState(int newDelState);
virtual void ApplyOverride(TRulerDef derivative, TCurrency currency, bool ruler);
virtual void Copy(TRulerDef newStyle);
virtual int  CanAddTabs();
int  CanUpdate(TRulerDef changes);
Fixed GetGutterWidth() { return fGutterWidth; };
int  GetTotalColumns() { return fTotalColumns; };
Fixed GetIndentation();
Fixed GetRightMargin();
Fixed GetLeftMargin();
void GetTabInfo(TTabKind kind, Fixed position, TFTabInfo &tabInfo);
void SetGutterWidth(Fixed width) { fGutterWidth = width; };
void SetTotalColumns(int columns) { fTotalColumns = columns; };
void SetIndentation(Fixed inset);
void SetRightMargin(Fixed inset);
void SetLeftMargin(Fixed inset);
void InstallTab(TFTabInfo &newTabInfo);    // 16/09/91 &
void DeleteTab(TFTabInfo &tabInfo);        // 16/09/91 &
int  Compare(Ptr item1, Ptr item2);
virtual bool IsStyleMember(int);

_TRulerDef(Fixed itsLeftMargin, Fixed itsRightMargin, Fixed itsIndentation);

// new methods as a result of local procedures etc.
int CompareTab(Ptr anItem, TFTabInfo* info);
};

const TRulerDefType = 1;

void ITabInfo(TFTabInfo &tabInfo);

#endif
