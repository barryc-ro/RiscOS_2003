/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __Scroller_h
#define __Scroller_h

class _TScroller : public _TView
{
  void _TScroller::ComputeBottomRight(TView theView, VPoint *aVPoint);
public:

  WindowPtr fWindowPtr;
  VRect fScrollLimit;
  Point fScrollUnit;
  bool fConstrain[2];
// 23/11/91  bool fRespondsToFunctionKeys;

               _TScroller(TDocument, TView, char * &);
        VCoordinate GetMaxTranslation(VHSelect vhs);
        VCoordinate GetTranslation(VHSelect vhs);
        void   GetTranslations(Point &translation);
        void   Translate(Point &translation);
//        void   GetQDExtent(Rect &qdExtent);
        bool   Focus();
        TScroller GetScroller(int immediateSuperView);
        void   BeInPort(GrafPtr itsPort);
        TCommand DoCommandKey(int ch, EventInfo &info);
        void   Resize(VCoordinate, VCoordinate, bool);
        void   GetExtent(VRect &itsExtent);
        void   RevealRect(VRect &rectToReveal, VRect &minToSee);
        void   AutoScroll(VPoint &viewPt, VPoint &delta);
virtual void   SetScrollLimits(VRect &scrollLimit);
        void   ScrollTo(VCoordinate h, VCoordinate v);
        void   ScrollBy(VCoordinate deltaH, VCoordinate deltaV);
        void ScrollStep(int partCodeH, int partCodeV);
//        void   HandleScroll(int xScroll, int yScroll);
virtual void   DoScroll(VCoordinate deltaH, VCoordinate deltaV);
        void   SetScrollParameters(VCoordinate horzUnits, VCoordinate
                       vertUnits, bool horzConstraint, bool vertConstraint);
        void   SubViewChangedSize(TView theSubview, VPoint &delta);
        void   SuperToLocal(VPoint &thePoint);
        void   LocalToSuper(VPoint &thePoint);
        void   AddSubView(TView theSubview);
};

#endif
