/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

// Draw bottleneck header

#ifndef __USaveDraw_h
#define __USaveDraw_h

# ifndef __wr_os_h
# include "os.h"
# endif

#ifndef __wr_drawmod_h
#include "drawmod.h"
#endif

#ifndef __Toolbox_h
#include "Toolbox.h"
#endif

#ifndef __Array_h
#include "UArray.h"
#endif

extern wr_os_error *PaintText_bn(char *s, int options, int x, int y);

extern wr_os_error *DrawStroke_bn(wr_drawmod_pathelemptr path_seq, 
                         wr_drawmod_filltype fill_style,
                         wr_drawmod_transmat *matrix,
                         wr_drawmod_line *line_style);

extern wr_os_error *DrawFill_bn(wr_drawmod_pathelemptr path_seq,
                       wr_drawmod_filltype fill_style,
                       wr_drawmod_transmat *matrix,
                       int flatness);

extern void DrawText_bn(char* textBuf, int numChars, Rect &extent, Rect &rubOut,
                                             int ascent, bool justify);

bool RenderDiag_bn(wr_draw_diag *diag, int orgx, int orgy, wr_draw_box *clipBox);

extern int StartGroup_bn(int groupSize);

typedef class _TDeclaredFontList       *TDeclaredFontList;

extern TDeclaredFontList gMasterList;

class _TDeclaredFontList : public _TArray
{
void _TDeclaredFontList::FreeItemName(char **fontName);
#ifdef DRAWSAVE
void _TDeclaredFontList::SumItemLength(char **item, int *tot, int *index);
void _TDeclaredFontList::SendItemName(char **item, int *index);
#endif

public:

        _TDeclaredFontList() : (sizeof(char *)) {};
void    Free();
int     AddToMasterList(char *fontName);
int     Compare(Ptr item1, Ptr item2);
#ifdef DRAWSAVE
void    SendMasterList();
#endif
};

#endif
