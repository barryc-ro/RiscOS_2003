/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __TTextCommands_h
#define __TTextCommands_h

#ifndef __TextDocument_h
#include "UTextDoc.h"
#endif

typedef class  _TTextEvent         *TTextEvent;
typedef class  _TStyleCommand      *TStyleCommand;
#ifdef TABLES
typedef class  _TSelStyleCommand   *TSelStyleCommand;
#endif
typedef class  _TTypingCommand     *TTypingCommand;

typedef class _TTextEvent: public _TTextHandler
{
// 04/04/93 TCommand _TTextEvent::DoCutCopy(CmdNumber cmd);
// 04/04/93 TCommand _TTextEvent::DoThePaste();
TCommand _TTextEvent::DoSetDateFormat();
//TCommand _TTextEvent::DoFindReplace();
//TCommand _TTextEvent::DoFindReplaceAction(bool find);
//TCommand _TTextEvent::DoFindSame();
//TCommand _TTextEvent::DoReplace();
//TCommand _TTextEvent::DoFindSelection();
void     _TTextEvent::ResetFields(TDialogView dialogue, bool redraw); //  [20815] colour dlog
void     _TTextEvent::SetColPatch(TDialogView dialogue, bool redraw); //  [20815] colour dlog
//TCommand _TTextEvent::DoDialogue(CmdNumber cmd, int dlgId, int ignoreFlags);

// 04/04/93 TCommand _TTextEvent::RemoveEmphasis();
// 04/04/93 TCommand _TTextEvent::DoAlignChange(TAlignment newAlign);
// 04/04/93 TCommand _TTextEvent::DoCaseChange(TTextCaps newCase);
// 04/04/93 TCommand _TTextEvent::DoSizeChange(int newSizeX, int newSizeY);
// 04/04/93 TCommand _TTextEvent::DoHyphenate();
// 04/04/93 TCommand _TTextEvent::DoLanguageChange(int language);
// 04/04/93 TCommand _TTextEvent::DoFontChange(int aMenu, int anItem);
// 04/04/93 TCommand _TTextEvent::DoStyleChange(int menuNumber, int item);
// 04/04/93 TCommand _TTextEvent::DoOtherSizeChange(CmdNumber aCmd);

#ifndef TABLES
// 04/04/93 TCommand _TTextEvent::DoLineSpacing(CmdNumber aCmdNumber);
// 04/04/93 TCommand _TTextEvent::DoUnderline();
#endif

public:
  TCommand fTypingCommand;
  int fTextSizeX;
  int fTextSizeY;
  char fLastCh;
  int fColour;         //  [20815] colour dialogue

bool    SetupDynamicMenu(CmdNumber aCmdNumber, int menuNum, bool create);
void    DoChoice(TView origView, int itsChoice);  //  [20815] colour dialogue
// 04/04/93 TCommand NewStyleCommand(CmdNumber cmd, TStyleFormat theStyle);
// 04/04/93 TStyleFormat GetChanges();
#ifdef MATHS
virtual   // 12/01/92
#endif
TCommand DoMakeTypingCommand(int ch, EventInfo &info);
TCommand DoKeyCommand(int aKeyCode, EventInfo &info);
TCommand DoCommandKey(int chcode, EventInfo &info);
TCommand DoMenuCommand(EventInfo &info, CmdNumber aCmdNumber);
void     DoneTyping(void);
void     DoSetupMenus(void);
// 01/04/92 void     ResetTarget(TSelection selection);
TCommand ReadFromDialog(TView aDialogView, CmdNumber aCmd, IDType itsID);
void     WriteToDialog(TView aDialogView, CmdNumber aCmd);

_TTextEvent(TTextDocument itsDocument);
};


// following from inc1.UTextCommands...


typedef class _TStyleCommand: public _TCommand
{
public:

  TTextDocument fDocument;
  TStyleFormat fStyle;

// void _TStyleCommand::  Fields(DoToField);
void UndoIt(void);
void RedoIt(void);
void DoIt(void);
void Free(void);
_TStyleCommand(TTextDocument itsDocument, CmdNumber cmd, TStyleFormat newStyle);
};

#ifdef TABLES
typedef class _TSelStyleCommand: public _TCommand
{
public:

  TTextDocument fDocument;
  TCurrency fStyle;

// void _TSelStyleCommand::  Fields(DoToField);
  void UndoIt(void);
  void RedoIt(void);
  void DoIt(void);
  void Free(void);
  _TSelStyleCommand(TTextDocument itsDocument, TCurrency style);
};
#endif

typedef class _TTypingCommand: public _TStructureCmd
{
public:

  TTextEvent fTextHandler;
  TTypingCommand fUndoCommand;
  TCursor fCursor;
  int fChar;
  bool fDoneTyping;
  bool fSelectionReset;  // 25/11/92

// methods of _TTypingCommand:
#ifdef MATHS
virtual   // 12/01/92
#endif
bool DoType(int ch);
void UndoIt(void);
void DoIt(void);
void DoneTyping(void);
void Free(void);
void UpdateChangeScope(void);
_TTypingCommand(TTextDocument itsDocument, TTextEvent itsTextHandler, int itsFirstCh);
};

extern void CountRecords(TRecordHandler recHandler, int *totalRecs);
extern void ClosePicker(TDocument doc);

#endif
