/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __Index_h
#define __Index_h

#ifndef __TextDocument_h
#include "UTextDoc.h"
#endif

#define kKeyMaxLen 60
#define kQualifierMaxLen 120

typedef struct TIndexRef *PIndexRef;
typedef struct TIndexRef
{
  TCurrency fHomeCurrency;
  unsigned int fIndexInText:20;
  unsigned int fNumberFormat:2;
  unsigned int fPageNumber:10;
} TIndexRef;

typedef enum TIndexKind {
  kIndexEntry, kBookmark, kHiddenText
} TIndexKind;

typedef class _TIndexCommand *TIndexCommand;
// typedef class _TIndexStructure *TIndexStructure;

class _TIndexStructure : public _TArray
{
public:
  TIndexKind fKind;
  TTextDocument fDocument;

         _TIndexStructure(TTextDocument itsDocument, TIndexKind kind);
  long    DoNeedDiskSpace(long dataForkBytes);
  void    DoRead(int aRefNum, long remainder, int version);
  void    DoWrite(int aRefNum, long remainder);
  void    DoReadArrayPart(int aRefNum, int version);
  void    DoWriteArrayPart(int aRefNum);
  int     Compare(Ptr item1, Ptr item2);
  char   *GetTextOffset(int n);
  void    SetKey(int textlen, char *text);
  char   *GetKey();
  void    RemoveEntry(TCurrency currency, PIndexRef indexRef);
  void    ResetBackRef(int myRecNum, TCurrency homeCurrency, int textIdx);
  void    DeleteIt(int idx);
  void    DeleteEntry(TCurrency currency);
  int     InsertEntry(int myRecNum, TCurrency currency, char *text);
  void    SetQualifier(TCurrency currency, char *text);
  char   *GetQualifier(TCurrency currency);
  bool    IsShown(PIndexRef iref);
};

#ifndef NETWP
// =========================================================================
class _TIndexCommand : public _TStructureCmd
{
public:
  TCurrency fSourceCurrency;
  int fUpdateIdx;
  TCurrency fOldCurrency;
  char fKey[kKeyMaxLen];
  char fQualifier[kQualifierMaxLen];
  int fRemoveOnFree;
  char fSeeTextQual[kQualifierMaxLen];

     _TIndexCommand(CmdNumber cmd, TTextDocument itsDocument, char *key, char *qualifier,
                    TCurrency homeCurrency, int updateIdx, TCurrency oldCurr, char *seeQual);
void DoPostCommand(void);
void DoCommand(TSelection selection);
void Free();
void Commit();
void FindKey(TRecordIndex aRecord, TRecordHandler handler);
void SwitchQualifiers(int recIdx, bool first);
void DoUndoAction();
void UndoIt();
};

// =========================================================================
class _TIndexDlgHelper: public _THandler
{
public:
  TTextDocument fDocument;
  TCurrency fStartCurrency;
  int fUpdateIdx;
  TCurrency fOldCurrency;
  TView fCurrentPopup;
  int fCurrSubject;
  int fCurrQualifier;
  int fQualItem;
  int fSelectedRec;
  int fFirst;
  int fDlogDepth;
  int fKeepFields;
  char fSeeTextQual[kQualifierMaxLen];
  char fSelectedText[256];

         _TIndexDlgHelper(TTextDocument doc);
TCommand ReadFromDialog(TView aDialog, CmdNumber aCmd, IDType itsId);
void     WriteToDialog(TView aDialog, CmdNumber aCmd);
void     DoChoice(TView origView, int itsChoice);
bool     SetupDynamicMenu(CmdNumber aCmdNumber, int menuNum, bool create);
void     SetDialog(char *selectedText, CmdNumber aCmd);
TDialogView TheDlg() { return TDialogView(fNextHandler); };
};
#endif

extern TIndexStructure GetIndexStructureReadOnly(TTextDocument, int);
extern TIndexStructure GetIndexStructureReadWrite(TTextDocument, int);
extern CmdNumber NameToCmdLetter(char *key);
extern void GotoPhrase(TTextDocument doc, TCurrency oldCurrency);
#endif
