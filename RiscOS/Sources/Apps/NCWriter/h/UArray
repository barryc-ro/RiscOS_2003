/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __Array_h
#define __Array_h

#ifndef __Object_h
#include "UObject.h"
#endif

#define kALessThanB (-1)
#define kAEqualB 0
#define kAGreaterThanB 1

typedef void (*DoToItem)(TObject, Ptr, ...);
typedef bool (*TestItem)(TObject, Ptr, ...);
// 02/04/92 typedef int  (*TestPtr)(TObject, Ptr, ...);

typedef class _TArray       *TArray;

class _TArray : public _TDiscObject
{
public:
// object fields:

   Ptr fPtrToArray;
   int fSize;
   int fItemSize;

// TArray object methods:

                _TArray(int itemsize);
           void Free();
           TObject ShallowClone();
           int  GetSize() { return fSize; };
           void Get(int index, Ptr item);
           void GetFirst(Ptr item);
           void GetLast(Ptr item);
           void Each(TObject obj, DoToItem proc, ...);
           int  FirstThat(TObject obj, TestItem testFunc, ...);
           int  LastThat(TObject obj, TestItem testFunc, ...);
           void AtPut(int index, Ptr newItem);
   virtual int  InsertBefore(int index, Ptr item);
           void InsertFirst(Ptr item);
           void InsertLast(Ptr item);
   virtual void Delete(int index);
           void ReduceSize(int newSize);
           Ptr  At(int index);
   virtual int  GetFirstOffset(int);
           void InsertSlice(long pos, void *slice, int sliceLength);
           void DeleteSlice(long pos, int sliceLength);

   // Routines for handling array as a Sorted Array
   virtual int  Compare(Ptr item1, Ptr item2);
   /* virtual  24/07/92 */ int  GetItemNumber(Ptr item);
           int  Insert(Ptr item);
//   virtual int  Search(TObject obj, TestPtr testFunc, ...);
             int  Search(Ptr item);      // 02/04/92 new i/f

   // Routines for handling reading and writing to disc
           void DoRead(int aRefNum, long remainder, int version);
           void DoWrite(int aRefNum, long remainder);
           long DoNeedDiskSpace(long dataForkBytes);
           void DoReadArrayPart(int aRefNum, int version);
           void DoWriteArrayPart(int aRefNum);
};

TArray NewTextArray(int stringListID);

#endif
