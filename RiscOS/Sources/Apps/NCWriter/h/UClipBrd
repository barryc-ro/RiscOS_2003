/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __ClipBoard_h
#define __ClipBoard_h

#ifndef __BodyEditor_h
#include "UBodyEdit.h"
#endif

#ifndef __PagesView_h
#include "UPagesVew.h"
#endif


//#define kTWScrapType 'TWCB'
/*
typedef class  _TClipDocument *TClipDocument;
typedef class  _TClipView     *TClipView;
*/
typedef struct _TCutCopyCommand *TCutCopyCommand;
typedef struct _TPasteCommand *TPasteCommand;

/*
class _TClipDocument : public _TTextDocument
{
void _TClipDocument::NewStructureHandler(TStructure protoType, TStructTypes structType);
void _TClipDocument::AddToStyleSheet(TRecordIndex aRecord, TRecordHandler nextHandler, TStructTypes index);

public:
        void SetCurrentStyle(void);
        void BuildStyleSheet(void);
        void SetTextHandler(void);
        void LoadAllRecords(void);
        void DoMakeViews(bool forPrinting);
_TClipDocument();
};

class _TClipView : public _TPagesView
{
void _TClipView::NewFormatHandler(TDiscObject protoType, TStructTypes structType, TDocument itsDocument);

public:
bool HandleMouseDown(VPoint &theMouse, EventInfo &info, TCommand &theCommand);
void HighlightSelection(TCursorNode anchor, TCursorNode activeEnd, bool redraw);
void DoHighlightSelection(HLState fromHL, HLState toHL);
void Activate(bool entering);
void WriteToDeskScrap(void);
void LoadAllRecords(void);
bool ContainsClipType(ResType aType);
_TClipView(TDocument itsDocument, TView itsSuperView, char* &itsParams);
};
*/

struct _TCutCopyCommand : _TStructureCmd
{
  TSelection fCutSelection;

        void DoPostCommand(void);
        void DoCommand(TSelection selection);
_TCutCopyCommand(TTextDocument itsDocument, CmdNumber cmd);
};

/*
struct _TPasteCommand: _TStructureCmd
{
  TSelection fPasteSelection;
  TClipDocument fClipDocument;

        void DoPostCommand(void);
        void DoCommand(TSelection selection);
_TPasteCommand(TTextDocument itsDocument, TClipDocument clipDocument);
};
*/


// 26/06/90 make clip documents into TTextDocuments
struct _TPasteCommand: _TStructureCmd
{
  TSelection fPasteSelection;
  TTextDocument fClipDocument;
  TPasteCommandType fPasteType;


        void CompleteCommand();
        void DoPostCommand(void);
        void DoCommand(TSelection selection);
_TPasteCommand(TTextDocument itsDocument, TTextDocument clipDocument,
             TPasteCommandType type);
};

#ifdef DRAGDROP
struct _TMoveCopyCommand: _TStructureCmd
{
  TSelection fDragSelection;
  TSelection fDropSelection;
  TCurrency  fDropCurrency;
  TTextDocument fSourceDoc;
  bool       fMove;

        void Free(void);
        void DoIt(void);
        void UndoIt(void);
   TCurrency GetDropCurrency(void);
        void SetDropCurrency(TCurrency currency);
             _TMoveCopyCommand(TTextDocument itsDocument, TTextDocument sourceDoc,
                               TSelection dropSelection, bool move);
};
#endif

void IUClipboard(void);

#endif
