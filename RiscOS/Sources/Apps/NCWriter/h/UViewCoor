/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __ViewCoords_h
#define __ViewCoords_h

#ifndef __Utilities_h
#include "Utilities.h"
#endif

inline void PtToVPt(Point &thePt, VPoint &theVPt)
   { theVPt = thePt; };
inline void VPtToPt(VPoint &theVPt, Point &thePt)
   { thePt = theVPt; };
inline void RectToVRect(Rect &theRect, VRect &theVRect)
   { MoveRect(theVRect, theRect); };
inline void VRectToRect(VRect &theVRect, Rect &theRect)
   { MoveRect(theRect, theVRect); };
inline void AddVPt(VPoint &srcVPt, VPoint &dstVPt)
     { AddPt(srcVPt, dstVPt); }
inline void SubVPt(VPoint &srcVPt, VPoint &dstVPt)
     { SubPt(srcVPt, dstVPt); }
inline void SetVPt(VPoint &vPt, VCoordinate h, VCoordinate v)
     { SetPt(vPt, h, v); }
inline bool EqualVPt(VPoint &pt1, VPoint &pt2)
     { return(EqualPt(pt1, pt2)); }
inline void SetVRect(VRect &r, VCoordinate left, VCoordinate top,
                        VCoordinate right, VCoordinate bottom)
     { SetRect(r, left, top, right, bottom); }
inline void OffsetVRect(VRect &r, VCoordinate dh, VCoordinate dv)
     { OffsetRect(r, dh, dv); }
inline void InsetVRect(VRect &r, VCoordinate dh, VCoordinate dv)
     { InsetRect(r, dh, dv); }
inline bool PtInVRect(VPoint &pt, VRect &r)
     { return(PtInRect(pt, r)); }
inline bool SectVRect(VRect &src1, VRect &src2, VRect &dstRect)
     { return(SectRect(src1, src2, dstRect)); }
inline bool EmptyVRect(VRect &r)
     { return(EmptyRect(r)); }
inline bool EqualVRect(VRect &rectA, VRect &rectB)
     { return(EqualRect(rectA, rectB)); }
inline VCoordinate LengthVRect(VRect &r, VHSelect vhs)
     { return(LengthRect(r, vhs)); }
inline void PinVRect(VRect &r, VPoint &pt)
     { PinRect(r, pt); }
inline void UnionVRect(VRect &src1, VRect &src2, VRect &dstRect)
     { UnionRect(src1, src2, dstRect); }
inline void Pt2VRect(VPoint &pt1, VPoint &pt2, VRect &dstRect)
     { Pt2Rect(pt1, pt2, dstRect); }

#endif
