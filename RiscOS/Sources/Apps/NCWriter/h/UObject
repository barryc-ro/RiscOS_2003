/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __Object_h
#define __Object_h

#ifndef __Toolbox_h
#include "Toolbox.h"
#endif

typedef class _TObject *TObject;
typedef class _TDiscObject *TDiscObject;

typedef struct TStatistics *PStatistics;
typedef struct TStatistics
{
   int fWords;
   int fLines;
   int fCharacters;
} TStatistics;

typedef TObject *PObj;

class _TObject
{
public:

     // object methods
virtual void    Free();
        TObject Clone();
        TObject MakeClone(TObject *p);
virtual TObject ShallowClone();          // clone an object
        void    FreeFail();
#ifdef TRACE
#define CheckThis() Assert(this, 1)
#else
#define CheckThis() {}
#endif

};

// --------------------------- TDiscObject ---------------------------------
class _TDiscObject : public _TObject
{
public:
// object methods
virtual void DoRead(int aRefNum, long remainder, int version);
   // Read from disc, fields from GetDataOffset, length GetDataCopyLength

virtual void DoWrite(int aRefNum, long remainder);
   // Write to disc, fields from GetDataOffset, length GetDataCopyLength

virtual long DoNeedDiskSpace(long dataForkBytes);
   // Return number of bytes required for the object of size dataForkBytes

virtual void DoReadArrayPart(int aRefNum, int version);

virtual void DoWriteArrayPart(int aRefNum);

virtual void AboutToRewrite(void *buffer, int buffLen);

        long NeededDiskSpace();
        void ReadObject(int aRefNum, long position, int version);
        void WriteObject(int aRefNum, long position);

virtual bool UpdateStatistics(int increment, PStatistics stats);

#ifdef MATHS
// 24/03/92 two new
virtual void SetAssociations(int recNum);

virtual void DeleteAssociations(int recNum);
#endif
};

void FreeIfObject(TObject);      // call destructor if not NULL
void ReplaceObject(TObject &, TObject);
void ClearObject(TObject &);

#endif
