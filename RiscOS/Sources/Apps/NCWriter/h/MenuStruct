/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

// menu related toolbox stuff - defining of the menu structure etc...
// ------------------------------------------------------------------------
#ifndef __wr_wimp_h
#include "wimp.h"
#endif

typedef enum
{   
   writeable   = 1,
   tick        = 2,
   enable      = 4,
   separator   = 8,
   submenu     = 16,
   spriteMenu  = 32,
   numeric     = 64
} wr_menu_flags;

/* the format for the compressed menu header */
typedef struct
{
   wr_wimp_menuptr menuHandle;
   char theMenuNumber;    /* unique menu number  */
   char wr_menu_disabled;    /* so dynamically set up menus can be dimmed */
   char width;             /* menu width */
   char spare;             /* menu width */
   unsigned int num_of_items;    /* num of items in the list */
   Handle flex_TextBlock; /* a ptr to the temp text block in flex */
}  com_menuhdr;

/* the format for the compressed menu items */
typedef struct
{
   unsigned int length:8;           /* length of menu line text */
   unsigned int sub_num:6;          /* number of the submenu this points to */
   unsigned int item_flags:7;       /* see wr_menu_flags above */
   unsigned int key_flags:3;        /* 1=shift  2=ctrl 4=fn key */ 
   unsigned int ascii_key:8;        /* associated ascii key (0 = none) */
                                    /* if >= 128, it represents a desktop colour */
                                    /* and key_flags must be zero (ie. no cmd keys) */
}  com_menuitem;

/* the struct for the 'compressed menu' */
typedef struct MenuInfo
{
   com_menuhdr  hdr;
   com_menuitem wr_menu_details[255];
} MenuInfo;

typedef struct
{
   unsigned int theItemNumber : 8;  /* the item num related to the command */
   unsigned int theMenuNumber : 8;  /* the menu num related to the command */
   unsigned int theCmdNumber : 16;  /* the command number (0 - 65535) */
} MenuCmdRecord;

extern char     *GetMenuQualText(com_menuitem curr_entry, char *tempText);  // 16/01/94
extern int       GetMenuQualLen(com_menuitem item);

extern MenuHandle    *wr_menu_list;        // the menu list of ptrs
extern MenuCmdRecord *CmdArray;            // the array of cmd blocks
extern int            gSizeCmdTable;
extern char          *gMenuQual[4];        // 16/01/94 strings from the msgs resource
extern int            gMenuQualLen[4];     // 16/01/94 sizeof strings from the msgs resource

