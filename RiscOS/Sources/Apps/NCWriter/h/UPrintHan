/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __PrintHandler_h
#define __PrintHandler_h

#define NEWFEATURES (0x01010000)

class _TPrintHandler: public _THandler
{
public:

// object fields
TView fView;
// Point fDeviceRes;
VPoint fViewPerPage;
// int fFocusedPage;

// object methods
_TPrintHandler(TView itsView);

// virtual VCoordinate BreakFollowing(VHSelect vhs, VCoordinate prevBreak, bool &automatic);
// virtual void      DrawPageBreak(VHSelect vhs, int whichBreak, VCoordinate loc, bool automatic);
// virtual void      SetPageInterior(int pageNumber);
// virtual bool      SetupForFinder();
// virtual void      SetDefaultPrintInfo();
// virtual void      FocusOnInterior();
// virtual void      Reset();
// virtual void      LocatePageInterior(int pageNumber, Point &loc);
// virtual void      SetPageOffset(VPoint &coord);

virtual int       GetPrintFileType();
virtual void      GetInterior(int page, VRect &pageInterior);
virtual void      ScrollToInterior(TScroller, int);
virtual void      CheckPrinter(bool);
virtual void      CalcPageStrips(Point &pageStrips);
virtual void      CalcViewPerPage(VPoint &amtPerPage);
virtual void      DrawPrintFeedback(Rect &area);
virtual void      RedoPageBreaks();
virtual void      PrinterChanged();
virtual int       MinMaxPageNumber(int);
        int       MaxPageNumber();
virtual bool      Print(char *filename);
virtual THPrint   GetPrintRec();
};

extern char *GetPrinterDetails(THPrint hPrint, int *features);

#endif
