/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

/* header file for toolbox which can be used from C or C++ modules */

#ifndef __CToolbox_h
#define __CToolbox_h

#ifndef __sprite_h
#include "sprite.h"
#endif

/* *************************************************************************
// Fundamental declarations for mapping Pascal to C
// *********************************************************************** */

#ifndef TALK
#define TALK 0
#endif

#ifndef WORDBANK
#define WORDBANK 0
#endif

#ifndef SIDEBAR
#define SIDEBAR 0
#endif

#ifndef NULL
#define NULL  0
#endif

#ifndef TRUE
#define TRUE  1
#endif

#ifndef FALSE
#define FALSE 0
#endif

#ifndef NETWP
#define SPELL 1
#endif

#define CHR(x) x
#define MAXINT 32767
#define MAXLONGINT 2147483647
typedef unsigned char Byte;
typedef char SignedByte;
typedef int  Size;
typedef int  OSErr;
typedef char Str255[256];
typedef long Fixed;
typedef int ResType;
typedef int OSType;
typedef int  bool;
typedef void *Ptr;
typedef Ptr  Handle;
typedef Ptr  ProcPtr;
typedef char *StringPtr;
typedef StringPtr StringHandle;

int Max(int a, int b);

int Min(int a, int b);

int MinMax(int MinVal, int expression, int MaxVal);

/* ------ memory related stuff ---------------------------------------- */
#define noErr 0
#define memFullErr 1

Handle    NewHandle(Size logicalSize);
Handle    NewEmptyHandle(void);
Handle    NewCheckedHandle(Size logicalSize);
void      DisposHandle(Handle h);
Size      GetHandleSize(Handle h);
void      SetHandleSize(void ** h, Size newSize);
void      SetHandleEmpty(void **h);
void      ClearHandle(Handle *aHandle);
int       Munger (void** h, int offset, Handle target, int targetLen,
                                 Handle replacement, int replacementLen);
OSErr     MemError(void);
void      DisposIfHandle(Handle aHandle);
int       AvailMem(void);
bool      IsAvailBlock(int);
void      ReAllocHandle(Handle *h);
void      SetPermHandleSize(void** h, Size newSize);
void      InsertIntoHandle(void** hdl, int offset, void *insertString, int insertLength);
void      FinaliseMemory(void);

/* handler to be called when new cannot go on */
typedef void (*PFVV)();
PFVV set_new_handler(PFVV handler);

/* access to resources */
void rsrc_init(int argc, char *argv[]);
char *rsrc_lookup(int code, int type, int idx);
char *rsrc_next(int code, char *prev);
char *GetRsrc(int type, int code);
char *GetRsrcMisc(int code);
char *GetRsrcErr(int code);
char *GetRsrcOption(int code);
char *GetResourceName(int rsrcID);
void SetRsrcOption(int code, char **newOpt);

/* ======================================================================= */
/* actually in UFailure, but used by Toolbox */
extern void wr_werr(int fatal, char* format, ...);

/* for screen measurement */
extern void ResetModeVariables(void);
extern int ScreenWidth(void);
extern int ScreenHeight(void);

/* for InitHyph */
extern void DeObscureCursor(void);

extern char *strcpyn(char *s1, const char *s2, int n);
extern char *strcpy255(char * /*s1*/, const char * /*s2*/);
extern char *strcat255(char * /*s1*/, const char * /*s2*/);
extern char *GetHelpString(char *id, char *ws);
extern bool ReadCMOS3D(void);

/* Fixed &  Integer */
#define  kFix1 1000
#define  kFixHalf (kFix1 / 2)
#define  IntMultiply(a, b) ((a) * (b))
#define  FixPointVal(pointVal) ((pointVal) * kFix1)

extern int   RoundUp(int aNumber, int aModulus);
extern int   IntDivide(int a, int b);
extern Fixed FixMul(Fixed op, Fixed multiplier);
extern Fixed FixDiv(Fixed op, Fixed divisor);
extern int   FixRound(Fixed op);
extern Fixed FractPart(Fixed op);
extern Fixed ToFixed(int op);
extern int   FromFixed(Fixed op);

extern void RealSysBeep(void);
#define SysBeep(duration) RealSysBeep()

extern void wr_resspr_setarea(void *area);
extern sprite_area *wr_resspr_area(void);

extern char *gMsgFile;
extern int gMsgFirstLine;

#ifdef TABLES
extern char gSmartValString[32];
#endif

#ifdef NETWP
#define g3Dicons 1
#define gWimpVersion 322
#else
extern BOOL g3Dicons;
extern int gWimpVersion;
#endif

#endif
