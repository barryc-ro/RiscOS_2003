/************************************************************************/
/* Copyright © Icon Technology, Ltd, 1996.  All rights reserved.        */
/*                                                                      */
/* This file forms part of the source of NCWriter.                      */
/*                                                                      */
/* It may be used solely to create executable images of the Network     */
/* Computer (NC) Word processor. It cannot be used for any other        */
/* purpose without the prior written consent of Icon Technology Ltd.    */
/*                                                                      */
/* This file (even if modified) must retain this copyright notice.      */
/*                                                                      */
/************************************************************************/

#ifndef __MathEvent_h
#define __MathEvent_h

#ifndef __TTextCommands_h
#include "UTextComm.h"
#endif

#ifndef __MathEditor_h
#include "UMathEdit.h"
#endif

/*******************************************************/
/*              Command Numbers                        */
/*******************************************************/

#define cSymbolCmdBase  2500
#define cSymbolCmdEnd   2755
#define cAccentsCmdBase 3000
#define cAccentsCmdEnd  3255
#define cGreekBase      4000
#define cGreekEnd       4255
//#define cGreekKb        4500
//#define cGreekKbEnd     4755
#define cDoubleArrow    3300
#define cLeftArrow      3301
#define cRightArrow     3302
#define cBarFill        3303
#define cSpaceFill      3304
#define cTallIntegral   3600
#define cVertBar        3601
#define cUpArrow        3602
#define cDownArrow      3603

typedef class  _TMathEvent         *TMathEvent;
typedef class  _TMathTypingCommand *TMathTypingCommand;
typedef class _TIdleTracker   *TIdleTracker;
typedef class _TPalette    *TPalette;

typedef class _TMathEvent: public _TTextEvent
{
public:
  int fCurrentFont;
  int fLatchFont;
  TCharacteristics fLatchCharacteristic;
  int fLastFont;

// 23/04/92 2 new for ctrl-E handling
  TCommand DoCommandKey(int chcode, EventInfo &info);
  TCommand DoKeyCommand(int ch, EventInfo &info);
  void     DoSetupMenus();
  TCommand DoMakeTypingCommand(int ch, EventInfo &info);
  TCommand DoMenuCommand(EventInfo &info, CmdNumber aCmdNumber);
  void     SetTheTextMenus(TStyleFormat theStyle);
  void     SetMathFont(void);
  TCommand SendKey(int key, int fontCode, TCharacteristics characteristic, EventInfo &info);
           _TMathEvent(TTextDocument itsDocument);
};

typedef class _TMathTypingCommand: public _TTypingCommand
{
public:
  bool DoType(int ch);
  _TMathTypingCommand(TTextDocument itsDocument, TTextEvent itsTextHandler, int itsFirstCh):
            (itsDocument, itsTextHandler, itsFirstCh) {}
};

// =========================================================================
// A cohandler installed by controls which need to be informed of Idle events

class _TIdleTracker : public _THandler
{
public:
// fields
TView fTrackedView;

// methods
      _TIdleTracker(TView trackedView);
void  Free();
bool  DoIdle(IdlePhase phase);
};

// =========================================================================
class _TPalette : public _TRulePicture
{
public:
  TIdleTracker     fIdleTracker;
  CmdNumber        fStartCmd;      // the base command number
  CmdNumber        fCommandGap;    // the gap between each 'row' of commands
  TCharacteristics fCharacteristic;
//  VPoint       fHLInset;       // sprite inset
//  bool         fVertical;      // the direction the cmd numbers go in
//  VPoint       fTopLeft;       // 

// methods
          _TPalette(TDocument itsDoc, TView itsSuperV, char* &params);
void      Free();
void      Open();
CmdNumber GetCmdNumber();
void      GetCurrentItem(Point &returnedVal);
void      Draw(Rect &area);
bool      DoIdle(IdlePhase phase);
bool      HandleControlClick(EventInfo &info, TCommand &aCmd);
};

#endif
