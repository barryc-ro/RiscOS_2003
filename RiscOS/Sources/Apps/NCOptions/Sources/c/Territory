#include <stdlib.h>

#include "swis.h"

#include "Desk.Debug.h"
#include "Desk.Error2.h"
#include "Desk.KernelSWIs.h"
#include "Desk.Str.h"
#include "Desk.MsgTrans.h"

#include "AcornNC.NC.h"

#include "Territory.h"



#ifdef Desk_DEBUG

	#define	NCConfig_Territory_Debug_PrintSettingsLine( settings, name)	Desk_Debug3_Printf( Desk_error_PLACE #name " = %i\n", (settings)->name)

	static void	NCConfig_Territory_Debug_ShowSettings( NCConfig_territorysettings* settings)
		{
		NCConfig_Territory_Debug_PrintSettingsLine( settings, id);
		NCConfig_Territory_Debug_PrintSettingsLine( settings, dst);
		NCConfig_Territory_Debug_PrintSettingsLine( settings, timeoffset_actual);
		NCConfig_Territory_Debug_PrintSettingsLine( settings, timeoffset_nodst);
		NCConfig_Territory_Debug_PrintSettingsLine( settings, territory_timeoffsets.standard);
		NCConfig_Territory_Debug_PrintSettingsLine( settings, territory_timeoffsets.daylightsaving);
		}

#else
	#define	NCConfig_Territory_Debug_ShowSettings( name)
#endif



static int	NCConfig_Territory_Read_TerritoryOnly( void)
	{
	/*
	Because a territory change only takes affect after a reboot, we read from CMOS instead of the above call,
	so that any changes at least look like they have taken effect...

	Territory number is stored in a bizarre way. Territory = CMOS(24) EOR 1.
	 */
	return Desk_OS_Byte_ReadCMOS( 24) ^ 1;
	}


void	NCConfig_Territory_Read( NCConfig_territorysettings* settings)
	{
	Desk_Debug3_Printf( Desk_error_PLACE "NCConfig_Territory_Read called\n");

	settings->id = NCConfig_Territory_Read_TerritoryOnly();

	Desk_Error2_CheckOS( _swix( Territory_ReadCurrentTimeZone, _OUT(1), &settings->timeoffset_actual));

	Desk_Error2_CheckOS(
		_swix( Territory_ReadTimeZones, _IN(0)|_OUTR(2,3),
			-1,
			&settings->territory_timeoffsets.standard,
			&settings->territory_timeoffsets.daylightsaving
			)
		);

	settings->dst = ( Desk_OS_Byte_ReadCMOS( 220) & (1<<7)) ? Desk_bool_TRUE : Desk_bool_FALSE;
		{
		int	x = Desk_OS_Byte_ReadCMOS( 139);	/* x is signed char	*/
		if ( x>127)	x -= 256;	/* x is time offset in units of 15mins.	*/
		settings->timeoffset_nodst = 15*60*100*x;
		}

	Desk_Debug3_Printf( Desk_error_PLACE "territory_timeoffsets.standard = %i, territory_timeoffsets.daylightsaving = %i\n",
		settings->territory_timeoffsets.standard,
		settings->territory_timeoffsets.daylightsaving
		);
	Desk_Debug3_Printf( Desk_error_PLACE "Territory dst offset = %i, Actual timeoffset - CMOS139 timeoffset = %i\n",
		settings->territory_timeoffsets.daylightsaving - settings->territory_timeoffsets.standard,
		settings->timeoffset_actual - settings->timeoffset_nodst
		);

	Desk_Debug3_Printf( Desk_error_PLACE "Territory nodst time = %i\n", settings->timeoffset_nodst);

	NCConfig_Territory_Debug_ShowSettings( settings);
	}



//#ifdef NCConfig_ROMBUILD
	#define	NCConfig_CLI( command)								\
		do	{									\
			Desk_Debug3_Printf( Desk_error_PLACE "%s\n", command);			\
			Desk_Error2_TryCatch(							\
				Desk_Error2_CheckOS( _swix( OS_CLI, _IN(0), command));		\
				,								\
				)								\
			}									\
			while (0)

//#else
//	#define	NCConfig_CLI( command)	Desk_Debug3_Printf( Desk_error_PLACE "In ROM build, would do '%s'\n", command)
//
//#endif







void	NCConfig_Territory_Set2( NCConfig_territorysettings* settings)
/*
Called either when territory number is unchanged, or after user has
confirmed territory change and reboot.
 */
	{
	char	buffer[ 64];

	Desk_Debug3_Printf( Desk_error_PLACE "NCConfig_Territory_SetTerritory. Settings are id=%i, timeoffset_nodst=%i, dst=%i\n",
		settings->id,
		settings->timeoffset_nodst,
		settings->dst
		);

	/* Check territory exists - should always be ok, but setting to not-present territory will hang on next reboot...	*/
		{
		int	flags;
		Desk_Error2_CheckOS( _swix( Territory_Exists, _IN(0)|_OUT(_FLAGS), settings->id, &flags));
		if ( 0 == (flags & (1<<30)))	{
			Desk_Debug3_Printf( Desk_error_PLACE "Unrecognised territory number %i\n", settings->id);
			//Desk_Error2_HandleTextf( "Can't set territory - unknown territory");
			Desk_Error2_MsgTransHandlef( "BadTerr", settings->id);
			}
		}

	sprintf( buffer, "Configure Territory %i", settings->id);
	NCConfig_CLI( buffer);

		{
		/*
		***************************************************************************
		* This is a hack - there is no guarantee that a territory name will be an *
		* acceptable country name.                                                *
		***************************************************************************
		 */
		char	terrname[ 256];
		Desk_Error2_CheckOS( _swix( Territory_NumberToName, _INR(0,2), settings->id, terrname, 256));
		sprintf( buffer, "Configure Country %s", terrname);
		NCConfig_CLI( buffer);
		}

	sprintf( buffer, "Configure Timezone %i:%i",
		settings->timeoffset_nodst/NCConfig_TIMEZONES_FIXEDPOINT_OS,
		abs( ( settings->timeoffset_nodst/(NCConfig_TIMEZONES_FIXEDPOINT_OS/60)) % 60)
		);
	NCConfig_CLI( buffer);

	sprintf( buffer, "Configure %sDST", (settings->dst) ? "" : "No");
	NCConfig_CLI( buffer);


	#ifdef Desk_DEBUG
		{
		NCConfig_territorysettings readsettings;

		Desk_Debug3_Printf( Desk_error_PLACE "Just set values:\n");
		NCConfig_Territory_Debug_ShowSettings( settings);

		NCConfig_Territory_Read( &readsettings);
		Desk_Debug3_Printf( Desk_error_PLACE "Read values are:\n");
		NCConfig_Territory_Debug_ShowSettings( &readsettings);
		}
	#endif
	}


#if 0
static NCConfig_territorysettings	NCConfig_Territory__global_newpossibleterritory;
/*
Stores intended new settings while 'confirm reboot' page is displayed.
 */


void	NCConfig_Territory_Set(
			NCConfig_territorysettings*	settings,
			Desk_bool			reboot_confirmed
			)
	{
	Desk_bool	needto_reboot = (settings->id == NCConfig_Territory_Read_TerritoryOnly()) ? Desk_bool_FALSE : Desk_bool_TRUE;

	if ( !reboot_confirmed && needto_reboot)	{
		/* Need to confirm reboot	*/
		Desk_deskmem_buffer	buffer;
		Desk_DeskMem_BufferInit( &buffer, 256);
		Desk_MessageTrans_LookupIntoBuffer(
			&buffer, &NCConfig_global.messages, "TerritoryConfirmReboot",
			NULL, NULL, NULL, NULL
			);
		NCConfig_Territory__global_newpossibleterritory = *settings;
		AcornNC_InformSTBWebOfNewPage( &buffer, "Config_Bottom");
		return;
		}

	else	{
		NCConfig_Territory_Set2( settings);
		NCConfig_BlankBottomPage2();
		if ( needto_reboot)	{
			/* reboot here...	*/
			#ifdef NCConfig_ROMBUILD
				Desk_Error2_CheckOS( _swix( OS_Reset, 0));
			#endif
			}
		return;
		}

	}

#endif




