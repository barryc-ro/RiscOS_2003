Notes about !Edit's sources
---------------------------

Author: William Stoye
History:
  22-May-89: 0.01: started.
  13-June-89: 0.02: move to 330 compiler.
  26-Sep-89: stuff added to make module form too.

The presence of adfs:$.RISC_OSLib is assumed (but only in MakeFile).

The presence of the following tools is assumed:
  cc
  link
  amu
(release 330 or later).

When developing, make !Edit your current directory.

The file MakeFile is an AMU file. for putting everything together.

When making releases, compile everything using -c -Ff. Release by going
  *RelObjTo $.releases.!Edit_xxx
(or wherever you want a normal "image" directory to appear).

When releasing, ensure that the Version file is true and correct, (which
will recompile c.editv). This ensures that the version string in the Info
box is correct. RelObjTo gets it right on the ReadMe file and the !Run file.

When playing with a newly released image, check that it can open several
(e.g. 8) text windows. Without this, it's lacking in malloc space and will
need a larger *WimpSlot in its !Run file.

For serious debugging,
  compile using -c (thus you'll get procedure names for backtraces),
  set TRACE in h.trace in cwimp to TRUE so that the tracef statements
    appear as something,
  recompile trace and wimpt in this form.
  call trace_on() somewhere near the start, e.g. in
    main in c.edit.
When c.txtedit is compiled with TRACE=TRUE, you get two extra menu entries
on the misc menu to turn tracing on and off. See c.wimpt for the
generation of stack backtrace info when a crash occurs.

The program fbash is currently broken. It is used for bashing the innards of
txt1 (the main text buffer handling).

These sources can also make the !Edit module, for inclusion in the RISC OS+
ROM. In order to do this, all parts of the program need to be recompiled
with different compiler flags. "amu EditModule" will do all of this, doing
the compilation as a once-off, deleting the o. files, and reinstating the
old ones.
