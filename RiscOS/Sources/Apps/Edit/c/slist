/* -> c.Slist
 * Title:       Slist - singly-linked lists
 * Author:      JGT (converted from MJJ)
 *              Copyright (C) 1988 Acorn Computers Limited
 */

#include <stdio.h>

typedef struct listrec * ListPtr;

typedef struct listrec
{
  ListPtr next;
};

#define next_(p) (((ListPtr)p)->next)

void * Slist_Add(listhead, newelement)
void * listhead;
void * newelement;

{
next_(newelement) = listhead;
return newelement;
} /* End procedure */

void * Slist_AddE(listhead, newelement)
void * listhead;
void * newelement;

{
void * t,
     * tf;

next_(newelement) = NULL;
if (!listhead) return newelement;
t = listhead;
do
{
  tf = next_(t);
  if (!tf) break;
  t = tf;
} while (1);
next_(t) = newelement;
return listhead;
} /* End procedure */

void * Slist_Remove(listhead, element)
void * listhead;
void * element;

{
void * t,
     * tf;

if (!listhead) return NULL;
if (listhead == element) return next_(listhead);
t = listhead;
do
{
  tf = next_(t);
  if (!tf) return listhead;
  if (tf == element)
  {
    /* match - remove it */
    next_(t) = next_(tf);
    return listhead;
  }; /* End if */
  t = tf; /* onto next */
} while (1);
} /* End procedure */

void * Slist_JoinE(listhead, newlist)
void * listhead;
void * newlist;

{
void * t,
     * tf;

if (!listhead) return newlist;
t = listhead;
do
{
  tf = next_(t);
  if (!tf) break;
  t = tf;
} while (1);
next_(t) = newlist;
return listhead;
} /* End procedure */

/* End Slist.c */
