 #include <stdlib.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"
#include "wimp.h"

#include "task.h"

GC_attributes *update_atts(GC *gc)
{
    if(gc->last_queued_op != -1)
    {
        GC_attributes *atts;
        Task *task = gc->task;
        Op *new_op, *op_pntr = &task->op_list[gc->last_queued_op];
        
        if(op_pntr->type == QUEUED_ATTRIBUTES)
            return &op_pntr->queued_op.atts;
        
        if(task->no_ops == MAX_QUEUED_OPS)
            flush_queue(task);
            
        new_op = &task->op_list[task->no_ops];
        atts = &new_op->queued_op.atts;
        
        new_op->gc = gc;
        new_op->type = QUEUED_ATTRIBUTES;
        
        memcpy(atts, gc->last_atts, sizeof(GC_attributes));
        atts->update_flags = 0;
        
        gc->last_queued_op = task->no_ops++; 
        return gc->last_atts = atts;    
    }
    else
        return &gc->atts;
}
