#include <stdlib.h>

#include "kernel.h"
#include "swis.h"
#include "wimp.h"

#include "GCManager.h"
#include "task.h"

/* MPEG colour selection is in s.utils */
unsigned int mpeg_colour = 0xf000;
unsigned int mpeg_rgb = 0xe0000000;

/* takes a 24bpp colour */
_kernel_oserror *set_mpeg_colour(unsigned int rgb)
{
    _kernel_oserror *e;

    mpeg_rgb = rgb;

    if (rgb == 0xffffffff)
    {
        return NULL;
    }

    if (screen_depth_log2bpp == 2) /* 4bpp - macrovision mode */
    {
        mpeg_colour = 8;
        return NULL;
    }

    e = _swix(ColourTrans_ReturnColourNumberForMode, _INR(0,2)|_OUT(0),
    		rgb, -1, -1, &mpeg_colour);

    if (e == NULL)
        mpeg_colour |= 0x8000;

    return e;
}

_kernel_oserror *set_mpeg_palette()
{
    if (screen_depth_log2bpp == 4) /* 16bpp */
    {
        int i, result;

        for (i = 8; i < 16; i++)
        {
            _swix(OS_ReadPalette, _INR(0,1)|_OUT(2), i, 16, &result);

            _swix(OS_CallAVector, _INR(0,4)|_IN(9), i, 16,
    			result | 0x10, 0, 2, 0x23);
        }
    }
}
