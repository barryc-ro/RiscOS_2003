#include <stdlib.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"
#include "wimp.h"
#include "wimplib.h"

#include "task.h"

_kernel_oserror *redraw_loop(GC *gc, int *xmin, int *ymin, int *xmax, int *ymax)
{
   int xorg, yorg, more;
   WimpRedrawWindowBlock block;
   WimpGetWindowStateBlock state;

    if(gc->magic != GC_MAGIC)
        return (_kernel_oserror *) "    Invalid GC handle";
        
    if(gc->task->handle != get_current_task())
        return (_kernel_oserror *) "    Not owner";
        
   state.window_handle = block.window_handle = gc->drawable.window.handle;
   
   wimp_get_window_state(&state);    
   xorg = state.visible_area.xmin - state.xscroll;
   yorg = state.visible_area.ymax - state.yscroll;
   
   wimp_redraw_window(&block, &more);
   
   if(!more)
   {
       *xmin = *xmax = *ymin = *ymax = 0;
       gc->drawable.window.null_redraw = 1;
   }
   else
   {
       *xmin = 0xffff;
       *ymin = *xmax = 0;
       *ymax = -0xffff;
       
       while(more)
       {
           if(gc->drawable.window.no_inv_rects < MAX_INVALID_RECTS)
           {
               BBox *new_rect = &gc->drawable.window.invalid_rects
                                  [gc->drawable.window.no_inv_rects++];
               new_rect->xmin = block.redraw_area.xmin - xorg;
               new_rect->xmax = block.redraw_area.xmax - xorg;
               new_rect->ymin = block.redraw_area.ymin - yorg;
               new_rect->ymax = block.redraw_area.ymax - yorg;
               
               if(new_rect->xmin < *xmin) *xmin = new_rect->xmin;
               if(new_rect->xmax > *xmax) *xmax = new_rect->xmax;
               if(new_rect->ymin < *ymin) *ymin = new_rect->ymin;
               if(new_rect->ymax > *ymax) *ymax = new_rect->ymax;
           }
           wimp_get_rectangle(&block, &more);
       }
   }
   
   return NULL;
}
