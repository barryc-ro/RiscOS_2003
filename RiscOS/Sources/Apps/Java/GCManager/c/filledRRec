#include "kernel.h"
#include "swis.h"
#include "wimp.h"

#include "GCManager.h"
#include "task.h"
#include "utils.h"

extern plot_chopped_ellipse(int, int, int, int, int, int, int, int, int);
#define ABS(x) (x < 0 ? -x : x)

void plot_filled_round_rect(GC *gc, Graphics_op *op)
{
    int w = op->data.rrect.w;
    int h = op->data.rrect.h;
    int x = gc->ox + op->data.rrect.x;
    int y = gc->oy + op->data.rrect.y;
    int arcWidth = ABS(op->data.rrect.arcWidth) >> 1;
    int arcHeight = ABS(op->data.rrect.arcHeight) >> 1;
    int tx, txw, ty, ty1, ty2, tyh, tx1, tx2;
    int corrected_tx1, corrected_tx2, corrected_ty1, corrected_ty2;
    
    if (arcWidth > w) arcWidth = w;
    if (arcHeight > h) arcHeight = h;

    tx = x;
    txw = x+w;
    ty = y+h;
    tyh = y;

    ty1 = y + h - arcHeight;
    ty2 = y + arcHeight;
    tx1 = x + arcWidth;
    tx2 = x + w - arcWidth;
    corrected_tx1 = tx1+1;
    corrected_ty1 = ty1-1;
    corrected_tx2 = tx2-1;
    corrected_ty2 = ty2+1;

    set_gc_atts(gc, SET_FOREGROUND | SET_PLOT_TYPE);

    // Plot top left ellipse
    plot_chopped_ellipse(tx, ty, arcWidth, arcHeight, 90, 180, 1, 0, 0);

    // Plot bottom left ellipse
    plot_chopped_ellipse(tx, ty2 + arcHeight, arcWidth, arcHeight, 180, 270, 1, 0, 0);

    // Plot top right ellipse
    plot_chopped_ellipse(tx2 - arcWidth, ty, arcWidth, arcHeight, 0, 90, 1, 0, 0);

    // Plot bottom right ellipse
    plot_chopped_ellipse(tx2 - arcWidth, ty2 + arcHeight, arcWidth, arcHeight, 270, 360, 1, 0, 0);

    // Plot filling rectangles
    os_plot(VDU_PLOT_MOVE, tx, ty1);
    os_plot(VDU_PLOT_RECTANGLE_FILL | VDU_PLOT_DRAW, tx1, ty2);
    os_plot(VDU_PLOT_MOVE, tx1, ty2);
    os_plot(VDU_PLOT_RECTANGLE_FILL | VDU_PLOT_DRAW, tx2, tyh);
    os_plot(VDU_PLOT_MOVE, tx2, ty2);
    os_plot(VDU_PLOT_RECTANGLE_FILL | VDU_PLOT_DRAW, txw, ty1);
    os_plot(VDU_PLOT_MOVE, tx1, ty);
    os_plot(VDU_PLOT_RECTANGLE_FILL | VDU_PLOT_DRAW, tx2, ty1);
    os_plot(VDU_PLOT_MOVE, corrected_tx1, corrected_ty1);
    os_plot(VDU_PLOT_RECTANGLE_FILL | VDU_PLOT_DRAW, corrected_tx2, corrected_ty2);
}


