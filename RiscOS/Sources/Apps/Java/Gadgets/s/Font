; Font SWI veneers
; History: PW: 01-Jul-96: Created

	AREA    |C$$code|, CODE, READONLY

	GET	Hdr:SWINames

; APCS compliant
; SVC mode compatible (a4/r3 used as link register)

; Finds a font
; Prototype:	_kernel_oserror *font_find_font(const char *font,
;			unsigned int width, unsigned int height,
;			int x_res, int y_res,
;			unsigned int *font_handle)
; On entry:	a1 = pointer to font name
;		a2 = width
;		a3 = height
;		a4 = x_res
;		sp + 0 = y_res
;		sp + 4 = pointer to font handle buffer
font_find_font
	EXPORT	font_find_font

	MOV	ip, sp
	STMFD	sp!, {r4-r6, lr}

	MOV	r4, r3
	MOV	r3, r2
	MOV	r2, r1
	MOV	r1, r0

	LDMIA	ip, {r5, r6}
	SWI	XFont_FindFont

	LDMVSFD	sp!, {r4-r6, pc}^

	CMP	r6, #0
	STRNE	r0, [r6]

	MOV	r0, #0
	LDMFD	sp!, {r4-r6, pc}^

; font_lose_font -----------------------------------------------------------
; Loses a font
; Prototype:	_kernel_oserror *font_lose_font(unsigned int font_handle)
; On entry:	a1 = font_handle
; On exit:	v1-v6 preserved
font_lose_font
	EXPORT	font_lose_font

	MOV	ip, lr

	SWI	XFont_LoseFont
	MOVVC	r0, #0

	MOVS	pc, ip

; font_paint ---------------------------------------------------------------
; Paints some text in the current font
;
; Prototype:	_kernel_oserror *font_paint(unsigned int font_handle,
;			const char *text, unsigned int plot_type,
;			int x, int y, FontCoord *coord,
;			FontTransform *transform, unsigned int length)
;
; On entry:	r0 = font handle
;		r1 = pointer to text
;		r2 = plot type
;		r3 = int x
;		[sp, #0] = int y
;		[sp, #4] = pointer to coord block
;		[sp, #8] = pointer to transform block
;		[sp, #12] = string length
;
; On exit:	v1-v6 preserved
font_paint
	EXPORT	font_paint

	MOV	ip, sp
	STMFD	sp!, {r4-r7, lr}

	LDMIA	ip, {r4-r7}

	SWI	XFont_Paint

	MOVVC	r0, #0
	LDMFD	sp!, {r4-r7, pc}^

; font_convert_to_points ---------------------------------------------------
;
; Prototype:	_kernel_oserror *font_convert_to_points(int x, int y,
;				int *new_x, int *new_y)
;
; On entry:	r0 = x
;		r1 = y
;		r2 = new_x
;		r3 = new_y
;
; On exit:	v1-v6 preserved
font_convert_to_points
	EXPORT	font_convert_to_points

	STMFD	sp!, {r4, lr}

	MOV	r4, r3
	MOV	r3, r2

	MOV	r2, r1
	MOV	r1, r0

	SWI	XFont_Converttopoints
	LDMVSFD	sp!, {r4, pc}^

	TEQ	r3, #0
	STRNE	r1, [r3]

	TEQ	r4, #0
	STRNE	r2, [r4]

	MOV	r0, #0

	LDMFD	sp!, {r4, pc}^

; font_scan_string ---------------------------------------------------------
;
; Prototype:	_kernel_oserror *font_scan_string(unsigned int font_handle,
;		const char *text, unsigned int plot_type,
;		int x, int y, void *coords, FontTransform *transform,
;		unsigned int length, char **pos,
;		int *new_x, int *new_y, unsigned int *count);
;
; On entry:	r0 = font handle
;		r1 = pointer to text
;		r2 = plot type
;		r3 = int x
;		[sp, #0] = int y
;		[sp, #4] = pointer to coord block
;		[sp, #8] = pointer to transform block
;		[sp, #12] = string length
;		[sp, #16] = char **pos
;		[sp, #20] = int *new_x
;		[sp, #24] = int *new_y
;		[sp, #28] = unsigned int *count
;
; On exit:	v1-v6 preserved
font_scan_string
	EXPORT	font_scan_string

	mov	ip, sp
	stmfd	sp!, {r4-r7, lr}

	ldmia	ip!, {r4-r7}
	; ip now points to [orig_sp, #16]

	swi	XFont_ScanString
	ldmvsfd	sp!, {r4-r7, pc}^

	ldmia	ip, {r0, r2, r5, r6}	; Convenient spare regs

	teq	r0, #0
	strne	r1, [r0]

	teq	r2, #0
	strne	r3, [r2]

	teq	r5, #0
	strne	r4, [r5]

	teq	r6, #0
	strne	r7, [r6]

	mov	r0, #0
	ldmfd	sp!, {r4-r7, pc}^

	END
