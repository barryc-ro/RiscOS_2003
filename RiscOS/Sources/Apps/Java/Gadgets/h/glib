/* Title:   glib.h
 * Purpose: glib module of GTest module
 * Author:  NK
 *
 */


#ifndef __glib_h
#define __glib_h

#include "kernel.h"

#ifndef __wimp_h
#include "wimp.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif

#ifndef __window_h
#include "window.h"
#endif

/* Gadget extension service calls provided by the window module */

#define Service_WindowModuleStarting    (Window_SWIChunkBase + 1)
#define Service_WindowModuleDying       (Window_SWIChunkBase + 2)
#define Service_GadgetRegistered        (Window_SWIChunkBase + 3)
#define Service_GadgetDeregistered      (Window_SWIChunkBase + 4)

/* filter types */

typedef enum {GLib_ToolboxEvents = 0, GLib_WimpEvents = 1, GLib_WimpMessages =2} FilterTypes;

/* operations on extended gadgets */

#define GADGET_ADD      1
#define GADGET_REMOVE   2
#define GADGET_FADE     3
#define GADGET_METHOD   4
#define GADGET_MCLICK   6
#define GADGET_PLOT     9
#define GADGET_SETFOCUS 10
#define GADGET_MOVE     11
#define GADGET_POSTADD  12

/* handler types */

#define NO_HANDLER      0
#define DEFAULT_HANDLER 1
#define PRIVATE_HANDLER 2

typedef struct {
   int add:2,
   remove:2,
   postadd:2,
   method:2,
   reserved:2,
   mclick:2,
   reserved2:4,
   plot:2,
   setfocus:2,
   move:2,
   fade:2;
} FT;

typedef union {
   int mask;
   FT  bits;
} FeatureMask;

typedef struct {
  int type;
  int validflags;
  FeatureMask features;
} GadgetExtensionRecord;

/* support functions */

extern _kernel_oserror *register_gadget_types(unsigned int flags, GadgetExtensionRecord *rec,int SWIno);

extern _kernel_oserror *deregister_gadget_type(unsigned int flags, int type,int SWIno);

extern _kernel_oserror *register_gadget_type(unsigned int flags, int type,unsigned int valid, unsigned int mask,int SWIno);

void *mem_allocate(int amount);

void mem_free(void *tag);

int glib_create_icon(WimpCreateIconBlock *i);

int glib_create_gadget(ObjectId,Gadget *i,int f);

void glib_move_gadget(int type, ObjectId obj,ComponentId id,BBox *box);

void graphics_window(BBox *area);

BBox *intersection(BBox *a, BBox *b);

_kernel_oserror *add_task_interest(FilterTypes type, int *list, int SWI);

_kernel_oserror *remove_task_interest(FilterTypes type,int *list);

_kernel_oserror *glib_plot_gadget(int flags,Gadget *g);

#endif
