/* ScrollbarP.h
 */

#ifndef __SCROLLBARP_H
#define __SCROLLBARP_H

#include "modmem.h"
#include "Scrollbar.h"

typedef struct {
    ObjectId		object_id;
    ComponentId		component_id;
    int			parent_window;	// 8 bytes
    BBox		box;		// 12 bytes
    int			scrollbar_window;
    int			event;
    int			state;
    int			type;
    unsigned int	icon;
    unsigned int	min;
    unsigned int	max;
    unsigned int	value;
    unsigned int	visible;
    unsigned int	line_inc;
    unsigned int	page_inc;
} PrivateScrollbar;

_kernel_oserror *scrollbar_die(void);
_kernel_oserror *_scrollbar_redraw(const PrivateScrollbar *sdata);

_kernel_oserror *scrollbar_add(Scrollbar *template, int wimpw, ObjectId obj_id,
				int **icons, int **data);
_kernel_oserror *scrollbar_method(PrivateScrollbar *handle, _kernel_swi_regs *regs);
_kernel_oserror *scrollbar_remove(PrivateScrollbar *handle);
_kernel_oserror *scrollbar_fade(int *handle, int fade);

_kernel_oserror *scrollbar_plot(Scrollbar *template);

_kernel_oserror *scrollbar_filter(_kernel_swi_regs *regs);

_kernel_oserror *scrollbar_move(PrivateScrollbar *sdata, BBox *box);

#endif
