/* TextArea.h
 *
 * Implements a text area toolbox gadget
 */

#ifndef __TEXTAREA_H
#define __TEXTAREA_H

/* template definition */

typedef struct
{
    GadgetHeader	hdr;
    int			type;
    int			event;
    char		*text;
    unsigned int	foreground;
    unsigned int	background;
} TextArea;

#define TextAreaValidFlags	0xC0000007

#define TextArea_Scrollbar_Vertical	(1<<0)
#define TextArea_Scrollbar_Horizontal	(1<<1)
#define TextArea_WordWrap		(1<<2)

/* text area methods */

#define TextArea_Base		0x4018
#define TextArea_SWIBase	0x140180
#define TextArea_GetState	(TextArea_Base + 0)
#define TextArea_SetState	(TextArea_Base + 1)
#define TextArea_SetText	(TextArea_Base + 2)
#define TextArea_GetText	(TextArea_Base + 3)
#define TextArea_InsertText	(TextArea_Base + 4)
#define TextArea_ReplaceText	(TextArea_Base + 5)
#define TextArea_GetSelection	(TextArea_Base + 6)
#define TextArea_SetSelection	(TextArea_Base + 7)
#define TextArea_SetFont	(TextArea_Base + 8)
#define TextArea_SetColour	(TextArea_Base + 9)
#define TextArea_GetColour	(TextArea_Base + 10)
//#define TextArea_RedrawAll	(TextArea_Base + 15)

#define TextArea_Type		(sizeof(TextArea)) << 16 | TextArea_Base

// OS unit indent around edge of gadget for text
#define TextArea_DefaultIndent	5
#define TextArea_DefaultFont	"Corpus.Medium"
#define TextArea_DefaultHeight	(12 * 16)
#define TextArea_DefaultWidth	(12 * 16)

#define TextArea_DesktopColours	(1<<0)

/* text area events */

// Dunno yet.

extern _kernel_oserror *textarea_get_state(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int *state);

extern _kernel_oserror *textarea_set_state(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int state);

extern _kernel_oserror *textarea_set_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			const char *text);

extern _kernel_oserror *textarea_get_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			char *buffer, int buff_size, int *nbytes);

extern _kernel_oserror *textarea_insert_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int index, const char *text);

extern _kernel_oserror *textarea_replace_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int index_start, unsigned int index_end,
			const char *text);

extern _kernel_oserror *textarea_get_selection_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			char *buffer, int size, unsigned int *nbytes);

extern _kernel_oserror *textarea_get_selection_points(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int *index_start, unsigned int *index_end);

extern _kernel_oserror *textarea_set_selection(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int index_start, unsigned int index_end);

extern _kernel_oserror *textarea_set_font(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			const char *font, unsigned int width,
			unsigned int height);

extern _kernel_oserror *textarea_set_colour(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int foreground, unsigned int background);

extern _kernel_oserror *textarea_get_colour(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int *foreground, unsigned int *background);

extern _kernel_oserror *textgadgets_redraw_all(unsigned int flags,
			ObjectId object_id);

#endif
