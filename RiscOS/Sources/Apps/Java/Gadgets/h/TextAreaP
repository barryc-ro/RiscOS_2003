/* TextAreaP.h
 */

#ifndef __TEXTAREAP_H
#define __TEXTAREAP_H

#include "modmem.h"
#include "TextArea.h"
#include "TextMan.h"

typedef struct {
    ObjectId		parent_id;
    ComponentId		component_id;
    ObjectId		object_id;
    BBox		box;
    int			event;
    unsigned int	state;
    int			type;
    int			wimpw;
    int			foreground;
    int			background;
    unsigned int	indent;		// Border width around window
    Text		*text;
    unsigned int	font_handle;
} PrivateTextArea;

_kernel_oserror *textarea_init(void);
_kernel_oserror *textarea_die(void);
_kernel_oserror *textarea_add(TextArea *template, int wimpw, ObjectId obj_id,
				int **icons, int **data);
_kernel_oserror *textarea_method(PrivateTextArea *handle,
				_kernel_swi_regs *regs);
_kernel_oserror *textarea_remove(PrivateTextArea *handle);
_kernel_oserror *textarea_fade(PrivateTextArea *handle, int fade);

_kernel_oserror *textarea_plot(TextArea *template);
_kernel_oserror *textarea_move(int type, PrivateTextArea *tdata,
				BBox *box);

_kernel_oserror *textarea_redraw_all(unsigned int flags, ObjectId object_id);

_kernel_oserror *textarea_filter(_kernel_swi_regs *regs);

_kernel_oserror *textarea_window_appearing(PrivateTextArea *sdata);

#endif
