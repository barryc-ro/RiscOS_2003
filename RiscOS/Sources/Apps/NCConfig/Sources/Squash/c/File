#include <string.h>

#include "Desk.Debug.h"
#include "Desk.DeskMem.h"
#include "Desk.Error2.h"
#include "Desk.File.h"

#include "Squash.h"
#include "Defs.h"


void	Desk_Squash_UnsquashFileToBuffer( Desk_deskmem_buffer* out, const char* filename)
	{
	volatile Desk_squash_fileheader*	in	= NULL;
	volatile int				insize;
	
	Desk_Error2_Try	{
		
		Desk_Debug2_Printf( Desk_error_PLACE "Just about to call Desk_File_AllocLoad, filename='%s'\n", filename);
		
		in	= (volatile Desk_squash_fileheader*) Desk_File_AllocLoad( filename, (int*) (&insize));
		
		Desk_Debug2_Printf( Desk_error_PLACE "Desk_Squash_UnsquashFileToBuffer2, in=%p\n", in);
		
		if ( !insize)	Desk_Error2_HandleTextf( "File '%s' has zero length.", filename);
		/*if ( *(int*) inbuffer != *(int*) "SQSH")	{*/	/* Breaks cc -zpc1	*/
		
		if ( in->id.value != Desk_squash_SQSH)	{
			Desk_Debug_Printf( Desk_error_PLACE "File '%s' doesn't start with 'SQSH'\n", filename);
			out->data	= (void*) in;
			out->datasize	= insize;
			out->size	= insize;
			}
		
		else	{
			Desk_Squash_UnsquashToBuffer( out, (void*) (in+1), insize-sizeof(Desk_squash_fileheader), in->length);
			Desk_DeskMem_Free( (void*) in);
			in = NULL;
			}
		}
	Desk_Error2_Catch	{
		Desk_Debug_Printf( Desk_error_PLACE "Desk_Squash_UnsquashFileToBuffer2 caught error, in=%p\n", in);
		Desk_DeskMem_Free( (void*) in);
		Desk_Error2_ReThrow();
		}
	Desk_Error2_EndCatch
	
	Desk_Debug_Printf( Desk_error_PLACE "in=%p\n", in);
	
	}
