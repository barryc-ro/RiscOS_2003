#ifndef __Territory_h
#define __Territory_h

#ifndef __Desk_deskmem_h
	#include "Desk.DeskMem.h"
#endif

#ifndef __Args_h
	#include "HTML.Args.h"
#endif



#define	NCConfig_TIMEZONES_FIXEDPOINT	100
/* Timezones in messages file are stored as (fp value)*TIME_FIXEDPOINT	*/

#define	NCConfig_TIMEZONES_FIXEDPOINT_OS	360000


typedef struct	{
	int		id;
	Desk_bool	dst;
	int		timeoffset_actual;	/* Offset relative to GMT, after correction from any DST (=utc or dst)	*/
	int		timeoffset_nodst;	/* What offset would be with no dst (from CMOS location 139).		*/
	struct	{
		int	standard;		/* Offset from UTC to standard time	*/
		int	daylightsaving;		/* Offset from UTC to daylight-saving time	*/
		}
		territory_timeoffsets;
	}
	NCConfig_territorysettings;

/*
typedef struct	{
	int	id;
	char*	name;
	}
	NCConfig_territory;



extern NCConfig_territory	NCConfig_knownterritories[];
|* Terminated by territory with .name=NULL	*|
*/

typedef struct	{
	struct	{
		int	value;
		char*	string;
		}
		time;
	char*	name;
	}
	NCConfig_timezone;


extern NCConfig_timezone	NCConfig_knowntimezones[];
/* Terminated by zone with .name=NULL	*/



void	NCConfig_CreateAppPage_Territory( Desk_deskmem_buffer* buffer);
/*
Creates HTML page for configuration of territory, and then opens it.

Will need to have extra param for specifying the frame-parent or
something.
 */

void	NCConfig_Territory_Read( NCConfig_territorysettings* settings);
void	NCConfig_Territory_ArgsSet( HTML_Args_variablelist* vars);

#endif
