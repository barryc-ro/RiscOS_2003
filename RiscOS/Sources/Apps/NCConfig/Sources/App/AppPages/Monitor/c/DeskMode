#include <string.h>

#include "swis.h"

#include "Desk.DeskMem.h"
#include "Desk.Error2.h"
#include "Desk.Debug.h"

#include "DeskMode.h"

#ifdef MemCheck_MEMCHECK
	#include "MemCheck:MemCheck.h"
#endif




Desk_screen_modeselector*	Desk_Screen_CurrentModeAllocCopy( void)
	{
	Desk_screen_modeselector	*osmode;
	Desk_screen_modeselector	*osmodecopy;
	
	Desk_Error2_CheckOS(
		_swix( OS_ScreenMode, _IN(0)|_OUT(1), 1, &osmode)
		);
		
	if ( (int) osmode < 256)	return osmode;
	
	else	{
		int				size;
		Desk_screen_modevariable*	var;
		
		#ifdef MemCheck_MEMCHECK
			MemCheck_RegisterMiscBlock( osmode, sizeof( Desk_screen_modeselector));
		#endif
		
		for	(
			var = &osmode->vars[0], size=sizeof( Desk_screen_modeselector); 
			var->variable!=-1; 
			var++
			)
			{
			size += sizeof( Desk_screen_modevariable);
			
			#ifdef MemCheck_MEMCHECK
				MemCheck_ResizeMiscBlock( osmode, size);
			#endif
			}
		
		
		Desk_Debug_Printf( Desk_error_PLACE "Desk_Screen_AllocCopyOfCurrentMode( size=%i, ((int*) osmode)[size/sizeof(int)-2] = %i (should be -1)\n",
			size,
			((int*) osmode)[size/sizeof(int)-2]
			);
		
		osmodecopy = (Desk_screen_modeselector*) Desk_DeskMem_Malloc( size);
		memcpy( osmodecopy, osmode, size);
		
		#ifdef MemCheck_MEMCHECK
			MemCheck_UnRegisterMiscBlock( osmode);
		#endif
		
		return osmodecopy;
		}
	
	}



void	Desk_Screen_SetMode( Desk_screen_modeselector* mode)
	{
	if ( mode)	{
		/* Have to change mode using *WimpMode, not OS_ScreenMode - otherwise the screen behaves as though F12 has been pressed	*/
		char	modestring[ 32];
		char*	col[] = { "2", "4", "16", "256", "32K", "16M"};
		sprintf( modestring, "WimpMode X%i Y%i C%s", 
			mode->resolution.x, 
			mode->resolution.y,
			col[ mode->pixeldepth]
			);
		Desk_Debug_Printf( Desk_error_PLACE "modes string is '%s'\n", modestring);
		Desk_Error2_CheckOS(
			_swix( OS_CLI, _IN(0), modestring)
			);
		}
	
	}


void	Desk_Screen_CurrentModeFreeCopy( Desk_screen_modeselector* mode)
	{
	if ( mode > (Desk_screen_modeselector*) 256)	Desk_DeskMem_Free( mode);
	}



void*	Desk_Screen_AllModesGet( void)
/*
Returns buffer (allocated with Desk_DeskMem_Malloc) containing info (in
the form of NCConfig_Monitor_modeblock's) on all available screen modes.
List of modes is terminated with a NCConfig_Monitor_modeblock with
size=0.
 */
	{
	int		buffersize;
	char* volatile	buffer	= NULL;
	
	Desk_Error2_Try	{
		int	unusedspace;
		
		Desk_Error2_CheckOS(
			_swix(
				OS_ScreenMode, _IN(0)|_IN(2)|_INR(6,7) | _OUT(7),
				2, 0, 0, 0,
				&buffersize
				)
			);
		buffersize = -buffersize;
		Desk_Debug_Printf( Desk_error_PLACE "buffersize = %i\n", buffersize);
		
		buffer = (char*) Desk_DeskMem_Malloc( buffersize + sizeof( int) );
		((int*) (buffer + buffersize))[ 0] = 0;	/* Teminate with 0	*/
		
		Desk_Error2_CheckOS(
			_swix(
				OS_ScreenMode, _IN(0)|_IN(2)|_INR(6,7) | _OUT(7),
				2, 0, buffer, buffersize,
				&unusedspace
				)
			);
		
		Desk_Debug_Printf( Desk_error_PLACE "unused space = %i\n", unusedspace);
		}
	Desk_Error2_Catch	{
		Desk_DeskMem_Free( buffer);
		Desk_Error2_ReThrow();
		}
	Desk_Error2_EndCatch
	
	return buffer;
	}


