#include <stdarg.h>
#include <string.h>
#include <ctype.h>

#include "Desk.Debug.h"
#include "Desk.Str.h"
#include "Desk.Wimp.h"
#include "Desk.Error2.h"
#include "Desk.JumpRaw.h"
#include "Desk.File.h"

#include "swis.h"

#include "HTML.Args.h"
#include "AcornNC.HTMLParams.h"

#include "MemCheck.MemCheck.h"

#include "Command.h"
#include "HTML.Args.h"
#include "AppPages.AppPages.h"
#include "AppPages.Territory.h"
#include "AppPages.Printer.h"
#include "AppPages.Modem.h"
#include "AppPages.Monitor.h"
#include "AppPages.Blank.h"




static void	NCConfig_CommandHandler2( HTML_Args_variablelist* vars, void *pw)
	{
	Desk_Debug_Printf( Desk_error_PLACE "\n");
	
	HTML_Args_CheckArgs( 0, vars, "context", NULL);
		
	Desk_Debug_Printf( Desk_error_PLACE "\n");
	
		{
		/* Short-cut to find whether 'cancel' button is pressed...	*/
		HTML_Args_variable*	cancel = HTML_Args_FindPossibleVar( vars, "Cancel", Desk_bool_TRUE);
		if ( cancel)	{
			NCConfig_BlankBottomPage2();
			return;
			}
		}
	
	if (0)	;
	else if ( 0 == Desk_stricmp( vars->vars[0].value, "FirstPage"))		NCConfig_CreateMasterPage( vars);
	else if ( 0 == Desk_stricmp( vars->vars[0].value, "ConfigApp"))		NCConfig_CreateAppPageFromArgs( vars);
	else if ( 0 == Desk_stricmp( vars->vars[0].value, "SetPrinter"))	NCConfig_Printer_ArgsSet( vars);
	else if ( 0 == Desk_stricmp( vars->vars[0].value, "SetTerritory"))	NCConfig_Territory_ArgsSet( vars);
	else if ( 0 == Desk_stricmp( vars->vars[0].value, "SetModem"))		NCConfig_Modem_ArgsSet( vars);
	else if ( 0 == Desk_stricmp( vars->vars[0].value, "TryMode"))		NCConfig_Monitor_ArgsTry( vars, pw);
	else if ( 0 == Desk_stricmp( vars->vars[0].value, "SetMode"))		NCConfig_Monitor_ArgsSet( vars, pw);
	else Desk_Error2_HandleTextf( "Unrecognise context value '%s'", vars->vars[0].value);
	
	Desk_Debug_Printf( Desk_error_PLACE "\n");
	
	Desk_UNUSED( pw );
	}


Desk_os_error*	NCConfig_CommandHandler( char *arg_string, int argc, int cmd_no, void *pw )
	{
	/*MemCheck_RegisterMiscBlock( arg_string, strlen( arg_string) + 1);*/
	
	Desk_Debug_Printf( Desk_error_PLACE "NCConfig_CommandHandler: args_string='%s'\n", arg_string);
	
	Desk_Error2_Try	{
		if ( cmd_no==NCConfig_command_NCCONFIG_CONFIGURE)	{
			AcornNC_args_variablelist	list;
			AcornNC_FindHTMLVariables( &list, arg_string, argc);
			Desk_Debug_Printf( Desk_error_PLACE "html args are '%s'\n", list.args_string);
			Desk_Debug_Printf( Desk_error_PLACE "NCConfig_CommandHandler: args_string='%s'\n", arg_string);
			Desk_Error2_TryCatch(
				Desk_Debug_Printf( Desk_error_PLACE "\n");
				NCConfig_CommandHandler2( &list.list, pw);
				Desk_Debug_Printf( Desk_error_PLACE "\n");
				,
				AcornNC_FreeHTMLVariables( &list);
				Desk_Error2_ReThrow();
				)
			AcornNC_FreeHTMLVariables( &list);
			}
		else	Desk_Error2_HandleTextf( "Unrecognise command number %i", cmd_no);
		}
	Desk_Error2_Catch	{
		Desk_Error2_ConvertToOS( &Desk_error_global, &Desk_Error2_globalblock);
		return &Desk_error_global;
		}
	Desk_Error2_EndCatch
	
	return NULL;
	}
	
