# Makefile for NCConfig
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 31 May 1996	JS	Created.
# 01 Jul 1996	JS	Now built with Makatic3
# 15 Jul 1996	JS	Copies whole Resources.UK
#			directory, instead of
#			just 'Messages' file.
# 16 Jul 1996	JS	Put in Makatic3 things so
#			that Resources is only
#			copied if it exists.
# 17 Jul 1996	JS	Compiles with 
#			Desk__MODULE_CLIENT 
#			predefined - stops
#			Desk_Event_ calling 
#			exit().
#			Includes CMHG header in
#			auto-generated .o lists.
# 19 Jul 1996	JS	Swapped Desk and NotDesk
#			in ROM Link command.


# This makefile makes intermediate libraries which are
# then linked into the final target. Reasons for doing
# this are:
#
# 	It means that link will omit unused library
#	AOF files, which removes a lot of hastle with
#	copying just those library sources which are
#	needed (Eg one can use LinkFS directory links
#	to whole sub-libraries of a large library such
#	as Desk). 
#
# 	Overcomes limitations of AMU - macros seem to
#	be limited to 4k maximum, and command lines for
#	calls to cc and link seem to be restricted to 2k.
#
#	I like libraries.
#


#
# Paths
#
RESDIR = <resource$dir>.Resources.${COMPONENT}

#
# Generic options:
#
MKDIR   = cdir
AS      = objasm
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link
RM      = remove
WIPE    = -wipe

AFLAGS = -depend !Depend -Stamp -quit -i@.Sources.Libs
CFLAGS  = -c -depend !Depend -zM -zps1 -ff ${INCLUDES} ${DFLAGS} -DNCConfig_ROMBUILD -DDesk__MODULE_CLIENT
CPFLAGS = ~cfr~v
WFLAGS  = ~c~v
DEFINES =
CMHGFLAGS = -b

#
# Libraries
#
CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
RSTUBS    = RISCOSLIB:o.rstubs
ROMSTUBS  = RISCOSLIB:o.romstubs
ROMCSTUBS = RISCOSLIB:o.romcstubs
ABSSYM    = RISC_OSLib:o.AbsSym

#CLIB      = C:o.stubs

#
# Filenames of intermediate libraries
#
LOCALLIB_DESK		= TempLibs.Desk
LOCALLIB_NOTDESK	= TempLibs.NotDesk

#
# Include files
#
INCLUDES = -I,@,@.Sources,@.Sources.Libs.,C:

DFLAGS   =



#
# Program specific options:
#
COMPONENT = NCConfig
TARGET    = aof.NCConfig
OBJS      = 	        \
#Makatic{
-F
-f "Sources...c.* -x *...Libs...*"	*2.o.#0\
-f "Sources...s.* -x *...Libs...*"	*2.o.#0\
-f "Sources...cmhg.* -x *...Libs...*"	*2.o.#0\
#Makatic}


LOCALLIB_OBJS_DESK	=	\
#Makatic{ -V ObjLists.Desk
-F
-f Sources.Libs.Desk...c.*	*2.o.#0\
-f Sources.Libs.Desk...s.*	*2.o.#0\
#Makatic}

LOCALLIB_OBJS_NOTDESK	=	\
#Makatic{ -V ObjLists.NotDesk
-F
-f "Sources.Libs...c.* -x *...Desk...*"	*2.o.#0\
-f "Sources.Libs...s.* -x *...Desk...*"	*2.o.#0\
#Makatic}


EXPORTS   = 

#
# Rule patterns
#
.SUFFIXES:  .o .s .c

.c.o:;      ${CC} ${CFLAGS} ${DEFINES} -o $@ $<
.cmhg.o:;   ${CMHG} ${CMHGFLAGS} -o $@ $<
.s.o:;      ${AS} ${AFLAGS} $< $@

#
# build a relocatable module:
#
all: rm.NCConfig

#
# RISC OS ROM build rules:
#
rom: ${TARGET}
        @echo ${COMPONENT}: rom module built

export: ${EXPORTS}
        @echo ${COMPONENT}: export complete

install_rom: ${TARGET}
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @echo ${COMPONENT}: rom module installed

clean:
#Makatic{
-F
-f "Sources...c.*"	"$(Wipe) *2.o.#0 ${WFLAGS}"
-f "Sources...s.*"	"$(Wipe) *2.o.#0 ${WFLAGS}"
-f "Sources...cmhg.*"	"$(Wipe) *2.o.#0 ${WFLAGS}"
#Makatic}
        @echo ${COMPONENT}: cleaned

resources:
#Makatic{
-F
-f Resources	"${MKDIR} ${RESDIR}"
-f Resources	"${CP} Resources.${LOCALE}  ${RESDIR} ${CPFLAGS}"
#Makatic}
        @echo ${COMPONENT}: resource files copied



#
# ROM target (re-linked at ROM Image build time)
#
${TARGET}: ${OBJS} $(LOCALLIB_NOTDESK) $(LOCALLIB_DESK) ${ROMCSTUBS}
        ${LD} -o $@ -aof ${OBJS} $(LOCALLIB_NOTDESK) $(LOCALLIB_DESK) ${ROMCSTUBS}

#
# Final link for the ROM Image (using given base address)
#
rom_link:
        ${LD} -o linked.${COMPONENT} -map -bin -base ${ADDRESS} ${TARGET} ${ABSSYM} > map.${COMPONENT}
        truncate map.${COMPONENT} linked.${COMPONENT}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @echo ${COMPONENT}: rom_link complete

rm.NCConfig: ${OBJS} $(LOCALLIB_NOTDESK) $(LOCALLIB_DESK) ${CLIB}
        ${LD} -o $@ -module ${OBJS} $(LOCALLIB_NOTDESK) $(LOCALLIB_DESK) ${CLIB}

#
# Local library build-rules (JS)
#
$(LOCALLIB_DESK):	$(LOCALLIB_OBJS_DESK)
	LibFile -c -o $@ -v ObjLists.Desk

$(LOCALLIB_NOTDESK):	$(LOCALLIB_OBJS_NOTDESK)
	LibFile -c -o $@ -v ObjLists.NotDesk

# Dynamic dependencies:
