/*
 *  CTS (statetable.c)
 *
 * Copyright (C) Element 14 Ltd. 1999
 *
 */

#include <stdio.h>
#include "ctstypes.h"
#include "ctsbrowser.h"
#include "ctsintern.h"
#include "ctsui.h"

#include "DebugLib/DebugLib.h"


browser_dispatch_result cts_statetable_dispatch_browser_message(
	cts_browser_message *m)
{
	cts_browser_parameter *p;

	(void) m;

	dprintf(("statetable_1", "\ncts_statetable_dispatch_browser_message:\n"));
	dprintf(("statetable_1", "  command is %s\n", m->command));
	for (p = m->param_list; p; p=p->next) {
		dprintf(("statetable_1", "    Parameter: `%s' = `%s'\n", p->name, p->value));
	}

	dprintf(("statetable_1", "end of message\n\n"));
	/* Returning bdr_FREE makes the caller free the message structure */
	return bdr_FREE;
}

browser_dispatch_result cts_statetable_dispatch_server_message(
	cts_server_message *m)
{
	cts_command_parameter *p = &m->params[0];
	size_t index;

	(void) m;

	dprintf(("statetable_1", "\ncts_statetable_dispatch_server_message:\n"));
	for (index = 0; index < m->param_count; ++index) {
		dprintf(("statetable_1", "    Parameter: `%s' = `%s'\n",
			p[index].name, p[index].value));
	}
	dprintf(("statetable_1", "end of message\n\n"));
	dprintf(("statetable_1", "The command is `%s'\n",
		ctscmd_strings[m->command]));

	/* Returning bdr_FREE makes the caller free the message structure */
	return bdr_FREE;
}

