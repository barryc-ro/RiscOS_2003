/*
 *  CTS (statetable.h)
 *
 * Copyright (C) Element 14 Ltd. 1999
 *
 */

#ifndef __cts_statetable_h
#define __cts_statetable_h

typedef enum
{
  Password_OK,
  Password_Different,
  Password_TypeFail_Digits,
  Password_TypeFail_LettersDigits,
  Password_TypeFail_LettersDigitsSymbols,
  Password_LenFail_EqualLen,
  Password_LenFail_RangeLen
}cts_statetable_password_check_result;

typedef enum
{
  AC_Start,
  AC_Cancel,
  AC_Continue,
  AC_BrowserMessage,
  AC_ServerMessage
}cts_statetable_action;

/* Base state machine */

typedef enum
{
  RC_Base_Pending,
  RC_Base_Error
}cts_statetable_result_base;

typedef enum
{
  S_Base_Idle,
  S_Base_Started,
  S_Base_ErrorDialogue,
  S_Base_CancelDialogue,
  S_Base_CancelledDialogue
}cts_statetable_states_base;

/* Started state machine */

typedef enum
{
  RC_Started_Pending,
  RC_Started_Stopped,
  RC_Started_Cancelled,
  RC_Started_ErrorDialogue,
  RC_Started_CancelDialogue,
  RC_Started_Error
}cts_statetable_result_started;

typedef enum
{
  S_Started_Idle,
  S_Started_OpeningCard,
  S_Started_RequestCardDialogue,
  S_Started_Open
}cts_statetable_states_started;

/* Open state machine */

typedef enum
{
  RC_Open_Closed,
  RC_Open_Pending,
  RC_Open_Cancelled,
  RC_Open_ErrorDialogue,
  RC_Open_CancelDialogue,
  RC_Open_Terminated,
  RC_Open_Error
}cts_statetable_result_open;

typedef enum
{
  S_Open_Idle,
  S_Open_Text,
  S_Open_APDU,
  S_Open_Verify,
  S_Open_ErrorClose,
  S_Open_Change,
  S_Open_Basic
}cts_statetable_states_open;

/* Text state machine */

typedef enum
{
  RC_Text_Finished,
  RC_Text_Pending,
  RC_Text_Cancelled,
  RC_Text_ErrorDialogue,
  RC_Text_CancelDialogue,
  RC_Text_Error
}cts_statetable_result_text;

typedef enum
{
  S_Text_Idle,
  S_Text_Working
}cts_statetable_states_text;

/* APDU state machine */

typedef enum
{
  RC_APDU_Finished,
  RC_APDU_Pending,
  RC_APDU_Cancelled,
  RC_APDU_ErrorDialogue,
  RC_APDU_CancelDialogue,
  RC_APDU_Error
}cts_statetable_result_apdu;

typedef enum
{
  S_APDU_Idle,
  S_APDU_ReceiveResponse
}cts_statetable_states_apdu;

/* Verify state machine */

typedef enum
{
  RC_Verify_Finished,
  RC_Verify_Pending,
  RC_Verify_Cancelled,
  RC_Verify_ErrorDialogue,
  RC_Verify_CancelDialogue,
  RC_Verify_Terminated,
  RC_Verify_Error
}cts_statetable_result_verify;

typedef enum
{
  S_Verify_Idle,
  S_Verify_WaitingOKCancel,
  S_Verify_ReceiveResponse,
  S_Verify_SpecialErrorDialogue,
  S_Verify_RetryPasswordDialogue
}cts_statetable_states_verify;

/* ErrorClose state machine */

typedef enum
{
  RC_ErrorClose_Finished,
  RC_ErrorClose_Pending,
  RC_ErrorClose_Cancelled,
  RC_ErrorClose_ErrorDialogue,
  RC_ErrorClose_CancelDialogue,
  RC_ErrorClose_Error
}cts_statetable_result_errorclose;

typedef enum
{
  S_ErrorClose_Idle,
  S_ErrorClose_Closing
}cts_statetable_states_errorclose;

/* Change state machine */

typedef enum
{
  RC_Change_Finished,
  RC_Change_Pending,
  RC_Change_Cancelled,
  RC_Change_ErrorDialogue,
  RC_Change_CancelDialogue,
  RC_Change_Terminated,
  RC_Change_Error
}cts_statetable_result_change;

typedef enum
{
  S_Change_Idle,
  S_Change_WaitingOKCancel,
  S_Change_ReceiveVerifyResponse,
  S_Change_ReceiveChangeResponse,
  S_Change_SpecialErrorDialogue,
  S_Change_RetryPasswordDialogue
}cts_statetable_states_change;

/* Basic state machine */

typedef enum
{
  RC_Basic_Finished,
  RC_Basic_Pending,
  RC_Basic_Cancelled,
  RC_Basic_ErrorDialogue,
  RC_Basic_CancelDialogue,
  RC_Basic_Error
}cts_statetable_result_basic;

typedef enum
{
  S_Basic_Idle,
  S_Basic_Closing
}cts_statetable_states_basic;

#endif
