/*
 *  CTS (ctsutils.h)
 *
 * Copyright (C) Element 14 Ltd. 1999
 *
 */
#ifndef ctsutils_h_included
#define ctsutils_h_included

#ifdef __cplusplus
extern "C" {
#endif

/* This header declares various utility functions for the CTS plugin
 */

/* Hex encode the character ch into buf.  Three characters will be
 * written: '%' and two hex digits.  Return value is the length of
 * the string generated (it is not terminated) and is always 3.
 * If buf is NULL, no data is written to it(!) and the result is still 3
 * (used for calculating required buffer lengths)
 */
extern size_t cts_utils_hex_encode(const char ch, char *buf);

/* Removes any hex-encoding from a string, returning its new length.
 * Also translates + symbols back to spaces.
 * Call with ctr=0 and the return value will be size of the decoded data.
 * d may be NULL, in which case no output is written, but the length is
 * still returned.
 * Extra parameter is used to avoid requiring an auxiliary.
 */
extern size_t cts_utils_remove_hex_encoding(char *d, const char *c, size_t ctr);

/* Encode binary data using the bizarre two digit encoding scheme.
 * Return value is the length of the string generated (it is not terminated)
 */
extern size_t cts_utils_binary_encode(char *dest, const char *buf, size_t length);

/* Decode binary data using the bizarre two digit encoding scheme.
 * Return value is the length of the data generated (it is not terminated)
 */
extern size_t cts_utils_binary_decode(char *dest, const char *buf, size_t length);

#ifdef __cplusplus
}
#endif

#endif
