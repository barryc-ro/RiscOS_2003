#ifndef jpeg_H
#define jpeg_H

/* C header file for JPEG
 * Copyright © Acorn Computers Ltd, 1994
 */

/**********************************
 * SWI names and SWI reason codes *
 **********************************/
#undef  JPEG_Info
#define JPEG_Info                               0x49980
#undef  XJPEG_Info
#define XJPEG_Info                              0x69980
#undef  JPEGInfo_Dimensions
#define JPEGInfo_Dimensions                     0x1
#undef  JPEG_FileInfo
#define JPEG_FileInfo                           0x49981
#undef  XJPEG_FileInfo
#define XJPEG_FileInfo                          0x69981
#undef  JPEGFileInfo_Dimensions
#define JPEGFileInfo_Dimensions                 0x1
#undef  JPEG_PlotScaled
#define JPEG_PlotScaled                         0x49982
#undef  XJPEG_PlotScaled
#define XJPEG_PlotScaled                        0x69982
#undef  JPEG_PlotFileScaled
#define JPEG_PlotFileScaled                     0x49983
#undef  XJPEG_PlotFileScaled
#define XJPEG_PlotFileScaled                    0x69983
#undef  JPEG_PlotTransformed
#define JPEG_PlotTransformed                    0x49984
#undef  XJPEG_PlotTransformed
#define XJPEG_PlotTransformed                   0x69984
#undef  JPEG_PlotFileTransformed
#define JPEG_PlotFileTransformed                0x49985
#undef  XJPEG_PlotFileTransformed
#define XJPEG_PlotFileTransformed               0x69985
#undef  JPEG_PDriverIntercept
#define JPEG_PDriverIntercept                   0x49986
#undef  XJPEG_PDriverIntercept
#define XJPEG_PDriverIntercept                  0x69986

/************************************
 * Structure and union declarations *
 ************************************/
typedef struct jpeg_image                       jpeg_image;

/********************
 * Type definitions *
 ********************/
struct jpeg_image
   {  int i [1];
   };

#define jpeg_IMAGE(N) \
   struct \
      {  int i [N]; \
      }

#define jpeg_SIZEOF_IMAGE(N) \
   ((N)*sizeof ((jpeg_image *) NULL)->i)

/************************
 * Constant definitions *
 ************************/
#define jpeg_INFO_MONOCHROME                    0x1u
#define jpeg_INFO_NO_TRFM                       0x2u
#define jpeg_INFO_DPI_UNKNOWN                   0x4u
#define jpeg_PLOT_SCALE_DITHERED                0x1u
#define jpeg_PLOT_SCALE_ERROR_DIFFUSED          0x2u
#define jpeg_PLOT_GIVEN_RECTANGLE               0x1u
#define jpeg_PLOT_TRANSFORM_DITHERED            0x2u
#define jpeg_PLOT_TRANSFORM_ERROR_DIFFUSED      0x4u
#define jpeg_FILE_TYPE                          3205

/*************************
 * Function declarations *
 *************************/

/* ------------------------------------------------------------------------
 * Function:      jpeginfo_dimensions()
 *
 * Description:   Returns the dimensions of a JPEG image in memory
 *
 * Input:         image - value of R1 on entry
 *                size - value of R2 on entry
 *
 * Output:        info_flags - value of R0 on exit (X version only)
 *                width - value of R2 on exit
 *                height - value of R3 on exit
 *                xdpi - value of R4 on exit
 *                ydpi - value of R5 on exit
 *
 * Returns:       R0 (non-X version only)
 *
 * Other notes:   Calls SWI 0x49980 with R0 = 0x1.
 */

extern os_error *xjpeginfo_dimensions (jpeg_image *image,
      int size,
      unsigned int *info_flags,
      int *width,
      int *height,
      int *xdpi,
      int *ydpi);

/* ------------------------------------------------------------------------
 * Function:      jpeg_plot_scaled()
 *
 * Description:   Plots a JPEG image from memory
 *
 * Input:         image - value of R0 on entry
 *                x - value of R1 on entry
 *                y - value of R2 on entry
 *                factors - value of R3 on entry
 *                size - value of R4 on entry
 *                flags - value of R5 on entry
 *
 * Other notes:   Calls SWI 0x49982.
 */

extern os_error *xjpeg_plot_scaled (jpeg_image *image,
      int x,
      int y,
      sprite_factors *factors,
      int size,
      unsigned int flags);

/* ------------------------------------------------------------------------
 * Function:      jpeg_plot_transformed()
 *
 * Description:   Plots a JPEG image from memory using a transformation
 *                matrix
 *
 * Input:         image - value of R0 on entry
 *                flags - value of R1 on entry
 *                trfm_or_rect - value of R2 on entry
 *                size - value of R3 on entry
 *
 * Other notes:   Calls SWI 0x49984.
 */

extern os_error *xjpeg_plot_transformed (jpeg_image *image,
      unsigned int flags,
      drawmod_transmat trfm_or_rect,
      int size);

#endif
