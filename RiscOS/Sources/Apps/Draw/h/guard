/*guard*/

/* Copyright (C) Acorn Computers Limited 1991
   Confidential - Do not distribute outside Acorn Computers Limited.
   Neither the whole nor any part of the information contained here
   may be adapted or reproduced in any material form except with the
   prior written approval of Acorn Computers Limited (Acorn).
*/

/* If this header is included in a file, malloc(), free() and realloc() are
   redefined to (a) trace their action with ftracef and (b) do lots of
   consistency checks.
*/

/* History:
 *   Jonathan Coxhead 10 July 1991 Written, based on nova_.
 */

#include <stdlib.h>

#ifndef TRACE
  #include "ftrace.h"
#endif

#if TRACE
   extern void guard_summary (void);

   extern void guard_check (void);

   extern void *guard_alloc (char *file, int line, size_t);

   extern void *guard_realloc (char *file, int line, void *, size_t);

   extern void guard_free (char *file, int line, void *, size_t);

   #define malloc(size) guard_alloc (__FILE__, __LINE__, size)

   #define realloc(ptr, size) guard_realloc (__FILE__, __LINE__, ptr, size)

   #define free(ptr) guard_free (__FILE__, __LINE__, ptr, 0)

   #define free_size(ptr, size) guard_free (__FILE__, __LINE__, ptr, size)
#else
   #define guard_summary()

   #define guard_check()

   #define free_size(ptr, size) free (ptr)
#endif
