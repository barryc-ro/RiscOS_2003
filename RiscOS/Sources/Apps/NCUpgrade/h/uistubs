/************************************************************************************/
/*                                                                                  */
/*  File: uistubs.h (until the ui header file is available)                         */
/*                                                                                  */
/*  Copyright © 1998 Acorn Computers Ltd., Cambridge, England                       */
/*                                                                                  */
/*  Modification History:                                                           */
/*  Date         Engineer  Change                                                   */
/*  ----         --------  ------                                                   */
/*  xx-Jul-1998  SR        Created                                                  */
/*                                                                                  */
/************************************************************************************/

#ifndef __uistubs_h
#define __uistubs_h

#include "kernel.h"

typedef struct setup_details_t
{
  struct
  {
    char *phone_number;
    char *username;
    char *password;
    char *modem_string;
  } isp;

  struct
  {
    char *url;
    char *username;
    char *password;
  } ftp;
} setup_details_t;

typedef enum
{
  ISP_Dial_Stage,
  ISP_Connect_Stage,
  FTP_Connect_Stage,
  FTP_Fetch_Stage,
  FTP_Disconnect_Stage,
  ISP_Disconnect_Stage
} progress_stage_t;


typedef enum                 /* An enumerated type to hold all possible error */
{                            /* conditions reported to the UI component.      */
  Connection_Failure,
  Username_Failure,
  Password_Failure,
  Download_Failure,
  Programming_Failure
} error_t;

typedef struct engine_callbacks_t
{
  _kernel_oserror * (*start_upgrade) (unsigned int, setup_details_t *);
  _kernel_oserror * (*user_abort) (unsigned int);
  _kernel_oserror * (*return_to_main_os) (unsigned int);
  _kernel_oserror * (*encountered_error) (unsigned int,
                                          _kernel_oserror *);
  _kernel_oserror * (*pause) (unsigned int flags);
  _kernel_oserror * (*setup_started) (unsigned int flags);
}engine_callbacks_t;

_kernel_oserror *ui_initialise(unsigned int flags,engine_callbacks_t *callbacks);
_kernel_oserror *ui_read_setup(unsigned int flags,setup_details_t *setup_details);
_kernel_oserror *ui_set_estimated_download_time(unsigned int flags,int mins,int secs);
_kernel_oserror *ui_set_progress_message(unsigned int flags,progress_stage_t stage);
_kernel_oserror *ui_set_progress_percent(unsigned int flags,int percent);
_kernel_oserror *ui_show_error(unsigned int flags,error_t error);

#endif
