/* 
 Database.h
 Database functions for Mercury
 (c)1995 STNC Enterprises
*/
         
typedef struct attrval
{
 char           *value;
 struct attrval *next;
}AttributeValue;

typedef struct attr
{
 int               type;        /* Attribute type */
 AttributeValue    *value;      /* Attribute value */
 struct attr       *next;
} Attribute;
         
typedef struct obj
{
 int        type;        /* Object type */
 int        flags;       /* Object flags */
 char       *name;       /* Object name */
 Attribute  *attributes; /* Objext attributes */
 struct obj *next;       /* Next object in list */
 struct obj *prev;       /* Previous object in list */
} Object;

#define OBJECT_FLAG_EXPANDED (1<<0)

extern Object *database;

extern Object *database_add(char *type_name,char *name);
extern Object *database_find(char *type_name,char *name);
extern int database_add_attribute(Object *o,char *name,char *value,int dup,int err);
extern AttributeValue *database_get_attribute(Object *o,char *name,int error);
extern void database_load(char *file);
extern void database_save(char *file);
extern Object *database_find_by_attribute(
        char *object_type,char *attribute_type,char *attribute_value,
        int (*f)(char *,char *));
extern void database_find_all_by_attribute(char *object_type,char *attribute_type,char *attribute_value,int f(char *,char *),void (*f1)(Object *));
extern void database_remove(Object *old);
extern void database_remove_attribute_value(Object *o,char *name,char *value);
extern int database_attribute_num(char *attribute_name);
