/* 
 users.h
 manage users for mercury server
 (c)1994 STNC Enterprises
*/

typedef struct ngrp 
{
 char name[256];
 struct ngrp *next;
} newsgroup;

typedef struct addr
{
 char name[256];
 struct addr *next;
} address;


typedef struct grp
{
 char name[20];
 struct grp *next;
 struct grp *subgroups;
 struct grp *parent;
 newsgroup *allowed;
 newsgroup *disallowed;
 address *mallowed;
 address *mdisallowed;
 address *uallowed;
 address *udisallowed;
} group;


extern void load_groups(char *name);
extern void save_groups(char *name);
extern void users_open(int h);
extern void users_click(int x,int y,int b,int w,int i);
extern int user_find(char *user,char *pass,char *group,char *name,char *file,char *www,char *key);
extern void users_cr(int w);
extern Object *find_group(char *name);
extern int users_create_menu(char *ingroup);
extern int check_allowed(char *n,char *gr);
extern int check_allowed_address(int url,char *a,char *gr);
extern void users_add_local_group(void);
extern int find_dl(char *name,char *b);
extern int check_allowed_any(char *n);
extern int user_add(char *user,char *pass,char *group,char *name,char *file,int www,int lock,int syst,char *key);
extern int user_delete(char *user,int del_files,int b);
extern int subgroup(char *child,char *parent);
extern group groups;
extern int create_newsgroup_file(char *group,char *file);
extern int add_group(char *parent,char *name,int b);
extern int get_expire(int url,char *ng);
extern int users_group_empty(char *group);
extern void database_apply(void (*f)(Object *o));
