
#include "stdio.h"
#include "string.h"
#include "time.h"
#define __time_t
#include "socket.h"
#include "in.h"
#include "if.h"
#include "ioctl.h"

#include "script.h"
#include "log.h"
#include "token.h"

#define TRUE 1
#define FALSE 0

extern char connect_ip[];


/*  Words to go in script file. If they are using the ppp then the script needs to read something
    like getip ppp0. If the old conditions are true then it will do it's thing and return into
    connect_ip the ip address of the interface !

     Copyright (c) 1988 Acorn Computers Ltd., Cambridge, England
                    David N. Walker, Kevin Bracey.

    Modified by STNC to integrate into InterTalk server

      Copyright (c) 1995 STNC Enterprises, Cambridge, England


  */

int command_getifaddr(char *ifname)
{
    struct ifreq ifr;
    int s, flag=TRUE;
    unsigned addr=0;
    char *test = NULL;
    clock_t  timeout;

timeout = clock();

 while(flag)
    {
    s=socket(AF_INET, SOCK_DGRAM, 0);
    if (s==0)
        return 0;
    strncpy(ifr.ifr_name, ifname, sizeof ifr.ifr_name);
    if (socketioctl(s, SIOCGIFFLAGS, &ifr) >= 0)
        if (ifr.ifr_flags & IFF_UP)
            if (socketioctl(s, SIOCGIFADDR, &ifr)>=0)
                {
                addr=(unsigned)((struct sockaddr_in *) &ifr.ifr_addr)->sin_addr.s_addr;
                test = (char *) inet_ntoa( ((struct sockaddr_in *) &ifr.ifr_addr)->sin_addr);
                }

    socketclose(s);

    if (addr != 0 )   /* for the mo !  */
        {
         char buf[256];
         sprintf(buf,token_get("I03"), ifname, test);
         log_report(LOG_INFO,buf);
         strcpy(connect_ip, test);
         return SCRIPT_OK;
        }

    if (((clock() - timeout) / CLOCKS_PER_SEC) > 20)
        {
         log_report(LOG_ERROR,token_get("E74"));
         flag = FALSE;
         return SCRIPT_ABORT;
        }

    }
return SCRIPT_OK;

}

