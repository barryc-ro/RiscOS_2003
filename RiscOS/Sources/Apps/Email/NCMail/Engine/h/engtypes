/*
** Email Engine header
** Types
*/

#ifndef __engtypes_h
#define __engtypes_h

#include "stdio.h"
#include "time.h"


#include "Email/Common/bool.h"
#include "Email/Common/types.h"

#ifdef ENGINE
 #include "Email/Mailbox/Message.h"
 #include "Email/EmailLib/MIMEentity.h"
 #include "Email/EmailLib/rfc822msg.h"
#else
 typedef void* entity;
 typedef void* Message;
 typedef void* rfc822msg;
#endif

typedef struct EntityDescriptor
{
  uint32 ID;                       /* message ID */
  char   *typestr;                 /* type string */
  char   *charset;                 /* character set string */
  entity *ent;                     /* pointer to ELib object */
  struct EntityDescriptor *next;   /* next attachment in list */
} EntityDescriptor;


typedef struct MessageDescriptor
{
  uint32           ID;            /* message ID */
  uint32           flags;         /* flag word */
  uint32           type;          /* message type */
  uint32           entity_num;    /* number of attachments */
  char             *to;           /* contents of 'To' field */
  char             *cc;           /* contents of 'Cc' field */
  char             *from;         /* 'From' field */
  char             *subject;      /* 'Subject' field */
  char             *charset;      /* character set string */
  char             *datestr;      /* pointer to date string */
  struct tm        *datestruct;   /* pointer to date structure */
  Message          *mboxobj;      /* pointer to Mailbox object */
  rfc822msg        *elibobj;      /* pointer to EmailLib object */
  EntityDescriptor *entity_list;  /* pointer to first attachment in list */
  uint32           *forward_list; /* list of message IDs to be
                                      forwarded as attachments */
  struct MessageDescriptor *next; /* next descriptor in list */
  struct MessageDescriptor *last; /* previous descriptor in list */

} MessageDescriptor;


/*
** eng_rcode numbers.
** Numbers between -1 and -43 are EmailLib or Mailbox codes and will
** probably not be passed to the UI.
** Numbers below -500 are Engine codes and are likely to be
** seen by the UI.
*/

typedef enum
{
  ENG_EDELETEFAILED         = -528,
  ENG_EDOWNLOADFAILED       = -527, /* failed to download message */
  ENG_EMBOXINCOMPLETE       = -526, /* mailbox may not be complete */
  ENG_ECANTFETCHENT         = -525, /* failed to fetch attachment */
  ENG_EUNKNOWNENT           = -524, /* attachment ID not known */
  ENG_ENOMEMORY             = -523, /* out of memory */
  ENG_EUNKNOWNID            = -522, /* message ID not known */
  ENG_ENOPOPACCOUNT         = -521, /* failed to create POP account */
  ENG_ENOSMTPACCOUNT        = -520, /* failed to create SMTP account */
  ENG_EPOPCONNECTFAIL       = -519, /* failed to connect to POP server */
  ENG_ESMTPCONNECTFAIL      = -518, /* failed to connect to SMTP server */
  ENG_ECANTPROCESSSMTP      = -517, /* failed to process SMTP mailbox */
  ENG_ECANTPROCESSPOP       = -516, /* failed to process POP mailbox */
  ENG_ECONNECTCANCELLED     = -515, /* user did not confirm connection */
  ENG_ENOSPACEFORMSG        = -514, /* not enough memory for message */
  ENG_ECONFIRMCONNECT       = -513, /* confirmation of connection needed */
  ENG_EALREADYDISCONNECTING = -512, /* already in disconnection process */
  ENG_EALREADYCONNECTING    = -511, /* already in process of connecting */
  ENG_ECONNECTIONFAILED     = -510, /* connection failed, reason unknown */
  ENG_EBADSMTPDETAILS       = -509, /* SMTP account details are missing */
  ENG_EBADPOPDETAILS        = -508, /* POP account details are missing */
  ENG_EBADUSERDETAILS       = -507,
  ENG_ENEEDTOCONNECT        = -506, /* need to confirm connection */
  ENG_EFETCHINGMAIL         = -505, /* currently fetching message */
  ENG_ESENDINGMAIL          = -504, /* currently sending message */
  ENG_EALREADYDISCONNECTED  = -503, /* already disconnected */
  ENG_EALREADYCONNECTED     = -502, /* already connected */
  ENG_EBUSY                 = -501, /* Engine is not currently idle */
  ENG_EUNPROCESSED          = -500, /* mailbox has not been processed */
  ENG_EMUSTBEONLINE         = -43,  /* Need to be online to do this */
  ENG_EALREADYDOINGOP       = -42,  /* Already doing an operation */
  ENG_EINTERNETERR          = -41,  /* Error occured at socket API */
  ENG_EALREADYLOGGEDIN      = -40,  /* Already logged in/connected */
  ENG_EINVALIDUSERNAME      = -39,  /* username rejected by server */
  ENG_EINVALIDPASSWORD      = -38,  /* password/and or username invalid */
  ENG_ECONTIMEDOUT          = -37,  /* server connection timedout */
  ENG_ECONRESPTIMEDOUT      = -36,  /* timedout waiting for response */
  ENG_ECONFAILED            = -35,  /* connection to server failed */
  ENG_ECONREFUSED           = -34,  /* server refused connection */
  ENG_ENOTCONNECTED         = -33,  /* not connected to server */
  ENG_ENOTLOGGEDIN          = -32,  /* not logged in to server */
  ENG_ENOSUCHMSG            = -31,  /* no such message */
  ENG_ERESOLVERFAILED       = -30,  /* error from resolver */
  ENG_ENOSPACEFORHDRS       = -29,  /* no space for headers */
  ENG_ENOSPACEFORBODY       = -28,  /* no space for body */
  ENG_ECONBROKEN            = -27,  /* connection to server broken */
  ENG_EFAILEDTOSEND         = -26,  /* failed to send data/message */
  ENG_EQUEUED               = -25,  /* failed to send data so queued it */
  ENG_EFAILEDTOQUEUE        = -24,  /* failed to queue data/message */
  ENG_ENOSENDER             = -23,  /* no sender */
  ENG_ENORECIPIENT          = -22,  /* no recipient/destination given */
  ENG_EINVALIDMULTIPART     = -21,  /* invalid MIME multipart */
  ENG_ENOTVALIDENTITY       = -20,  /* invalid Email message entity */
  ENG_ENOTSUPPORTED         = -19,  /* operation not supported */
  ENG_ECANTDOUNKNOWN        = -18,  /* unknown/unsupported data */
  ENG_EMUSTBE7BIT           = -17,  /* data must be in 7bit encoding */
  ENG_EALREADYDECODED       = -16,  /* data already decoded */
  ENG_EALREADYENCODED       = -15,  /* data already encoded */
  ENG_EDATAMUSTBEPARSED     = -14,  /* data must be parsed first */
  ENG_EINVALIDDATA          = -13,  /* invalid data */
  ENG_ENODATAPRESENT        = -12,  /* no data present */
  ENG_EINVALIDCONTEXT       = -11,  /* invalid context given */
  ENG_ENOTENOUGHTIME        = -10,  /* not enough timeslice given */
  ENG_ENOMOREPROCESSES      = -9,   /* too many processes running */
  ENG_EMALLOCFAILED         = -8,   /* failed to allocate memory */
  ENG_EINTERNALERR          = -7,   /* FATAL Internal error */
  ENG_EFAILED               = -6,   /* general operation failure */
  ENG_EWRITEFAIL            = -4,   /* failed to write out data */
  ENG_EINVALTYPE            = -3,   /* ???????? not used anywhere! */
  ENG_ENULLADDR             = -2,   /* NULL pointer not valid here */
  ENG_ENOSPACE              = -1,   /* No space to complete operation */
  ENG_RUNNING               = 0,
  ENG_COMPLETED             = 1,
  ENG_TRUNCATEDMULTI        = 2     /* truncated multipart MIME entity */
} eng_rcode;


/* callback typedefs */

typedef void (*eng_cbf_getmsg) (eng_rcode rc, MessageDescriptor *msg, void *handle);
typedef void (*eng_cbf_getentity) (eng_rcode rc, EntityDescriptor *ent, void *handle);
typedef void (*eng_cbf_getID) (eng_rcode rc, uint32 msg_ID, void *handle);
typedef void (*eng_cbf_prompt) (eng_rcode rc, MessageDescriptor *msg, bool online, void *handle);
typedef void (*eng_cbf_confirm) (bool conf);
typedef void (*eng_cbf_status) (eng_rcode rc, void *handle, eng_cbf_confirm func);

#endif
