/*
** Email Engine
** File routines
*/

#include "kernel.h"
#include "swis.h"
#include "string.h"

#include "DebugLib/DebugLib.h"

#include "engtypes.h"
#include "enginit.h"
#include "engfile.h"

char msgfilename[] = "NCMailStore:M         ";

/*
** SetFilename() sets the filename to be used to store a message.
** The name is "NCMailStore:M" plus the message ID.
** If the boolean t is set, a "t" is appended to the name
** as this is a temporary file (e.g. to store headers).
*/

char *SetFilename(uint32 id, bool t)
{

  char *s = msgfilename + 13;
  sprintf(s, "%d", id);
  s += strlen(s);
  if (t)
    *s++ = 116;
  *s = 0;

  return msgfilename;

}


uint32 GetFileLength(char *p)
{

  regs.r[0] = 17;
  regs.r[1] = (int) p;
  _kernel_swi(OS_File,&regs,&regs);

  return regs.r[4];

}


bool FileExists(char *f)
{

  regs.r[0] = 17;
  regs.r[1] = (int) f;
  _kernel_swi(OS_File, &regs, &regs);

  return (bool) (regs.r[0] != 0);

}


void SetAttribs(char *f, char *attr)
{

  if (FileExists(f))
  {
    regs.r[0] = 24;
    regs.r[1] = (int) f;
    regs.r[2] = (int) attr;
    _kernel_swi(OS_FSControl,&regs,&regs);
  }

}


void UnlockFile(char *f)
{
  
/*   dprintf(("Eng", "Unlocking file %s\n",f)); */
  SetAttribs(f, "WR");

}


void LockFile(char *f)
{
  
/*   dprintf(("Eng", "Locking file %s\n",f)); */
  SetAttribs(f, "LWR");

}



void CreateDirectory(char *s)
{
  
  regs.r[0] = 8;
  regs.r[1] = (int) s;
  _kernel_swi(OS_File,&regs,&regs);

}
