/************************************************************************/
/* File:    ForwardMsg.c                                                */
/* Purpose: Code relating to handling forwarding.                       */
/*                                                                      */
/* Author:  Neil Bingham <mailto:nbingham@acorn.com>                    */
/* History: 0.01  Wed 04th November 1998                                */
/*                Created.                                              */
/************************************************************************/


#include "../Build/Env.h"		/* Include Build Environment file.  This MUST be 1st before
					   any other preprocessor command */

/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */
#include "ForwardMsg.h"
#include "SendMsg.h"
#include "States.h"
#include "ReadMsg.h"

/* ---------------------------------- PRE-PROCESSOR DIRECTIVES ---------------------------------- */

forwardmsg_return_cbf	 fcbf_ptr;
void			*fcbf_hdl;

/* -------------------------------------- GLOBAL VARIABLES -------------------------------------- */


/* ----------------------------------------- FUNCTIONS ------------------------------------------ */

/************************************************************************/
/* forwardmsg_forward_request                                           */
/*                                                                      */
/* Function is called when either the ReadMsg or Advanced Inbox screens */
/* want a forward operation to be carried out.                          */
/*                                                                      */
/* Parameters: msgids   - pointer to list of MessageIds                 */
/*             num_msgs - number of message ids in list.                */
/*                                                                      */
/* Returns:    true (success), false (failure).                         */
/*                                                                      */
/************************************************************************/
bool forwardmsg_forward_request(uint32 *msgs, uint32 num_msgs,
                                forwardmsg_return_cbf func, void *handle)
{
  eng_rcode		 rc;

  dprintf(("UI", "forwardmsg_forward_request entered\n"));

  /* Store the callback and void * data for later use.  We must first check to see if there is
   * some callback data from an earlier forward.  This shouldn't happen
   */
  if ( (fcbf_ptr != NULL) || (func == NULL) )
  {
    fcbf_ptr = NULL;
    fcbf_hdl = NULL;
    return(false);
  }
  else
  {
    fcbf_ptr = func;
    fcbf_hdl = handle;

    /* Set the state */
    status.state = State_Forward;

    /* Setup the list of messages */
    if (num_msgs < 1)
    {
      /* Something stupid has happened! */
      dprintf(("UI", "NO MESSAGES WERE PASSED IN THE NUM_MSGS FIELD (%d)\n", num_msgs));
      return(false);
    }

    rc = eng_create_message(0, num_msgs, msgs, NULL, forwardmsg_create_message_cbf);

    /* Check the return code */
    switch(rc)
    {
      case(ENG_RUNNING):
      {
        dprintf(("UI", "Engine create message RUNNING\n"));
        break;
      }
      case(ENG_NOMEMORY):
      {
        fcbf_ptr = NULL;
        fcbf_hdl = NULL;
        ncmui_error_display(1);
        status.ui_locked = false;
        error_parser_failed();
      }
      default:		ncmui_error_display(29);				break;
    }
    return(true);
  }
}


/************************************************************************/
/* forwardmsg_create_message_cbf                                        */
/*                                                                      */
/* Function is called by the email engine when it has created a new     */
/* MessageDescriptor for me to use for the Send.                        */
/*                                                                      */
/* Parameters: rc      - error code.                                    */
/*             msg     - MessageDescriptor allocated.                   */
/*             handle  - not used.                                      */
/*                                                                      */
/* Returns:                                                             */
/*                                                                      */
/************************************************************************/
void forwardmsg_create_message_cbf(eng_return *codes, MessageDescriptor *msg, void *handle)
{
  NB_UNUSED(handle);

  dprintf(("UI", "forwardmsg_msg_cbf entered with msg id: %d and rc: %d\n", msg->ID, codes->code));

  if (codes->code == ENG_COMPLETED)
  {
    if (sendmsg_build_screen(msg) == false)
    {
      ncmui_error_display(32);
      status.ui_locked = false;
      error_parser_failed();
    }
  }
  else
  {
    ncmui_error_display(31);
    status.ui_locked = false;
    error_parser_failed();
  }
}


/************************************************************************/
/* forwardmsg_exit                                                      */
/*                                                                      */
/* Function will take the user back to wherever they came from, i.e. to */
/* the read screen, or advanced inbox etc. based on the callback.       */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void forwardmsg_exit(void)
{
  /* Must go to wherever it came from */
  fcbf_ptr(fcbf_hdl);

  fcbf_ptr = NULL;
  fcbf_hdl = NULL;

}

