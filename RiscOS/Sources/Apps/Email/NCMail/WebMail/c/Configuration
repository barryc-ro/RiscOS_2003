/************************************************************************/
/* File:    Configuration.c                                             */
/* Purpose: This file contains code that deals loading the config file. */
/*                                                                      */
/* Author:  Neil Bingham <mailto:nbingham@acorn.com>                    */
/* History: 0.01  Sat 24th April 1999                                   */
/*                Created.                                              */
/************************************************************************/


#include "../Build/Env.h"		/* Include Build Environment file.  This MUST be 1st before
					   any other preprocessor command */

/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */

#include "Configuration.h"
#include "States.h"

/* ---------------------------------- PRE-PROCESSOR DIRECTIVES ---------------------------------- */


/* -------------------------------------- GLOBAL VARIABLES -------------------------------------- */

char	*config_buffer = NULL;

/* ----------------------------------------- FUNCTIONS ------------------------------------------ */

/************************************************************************/
/* config_initialise                                                    */
/*                                                                      */
/* Function is called on startup to open the configuration file.        */
/*                                                                      */
/* Parameters: void                                                     */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
bool config_initialise(void)
{
  _kernel_oserror	*er = NULL;

  /* Mappings file (via MessageTrans) */
  er = nb_messagetrans_open_file(0, Config_Filename, &config_block, &config_buffer);

  if (er != NULL)
  {
    /* Free up the buffer */
    if (config_buffer != NULL)
      free(config_buffer);

    config_buffer = NULL;

    return(false);
  }
  return(true);
}


/************************************************************************/
/* config_atexit                                                        */
/*                                                                      */
/* Function is called on termination to shut the messages file etc.     */
/*                                                                      */
/* Parameters: void                                                     */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void config_atexit(void)
{
  if (config_buffer != NULL)
    nb_messagetrans_close_file(0, config_block, config_buffer);
}
