# Main Makefile for NCMail WebMail
# ================================
#

# -----------------------------------------------------------------------------
# Change List
#

# Date          Name    Description
# ====          ====    ===========
# 1998-09-16    AW      Created
# 1998-09-22	RDW	Modified to fit into build structure
# 1998-10-20	RDW	RAM module target added
# 1998-11-02	RDW	Change over to Ben's cunning 2 level makefile
# 1998-11-04	RDW	NCMailUIVersion added to OBJS and Version.h exported
#			as UIVersion.h
# 1999-01-15	RDW	Fixed resources phase not to use wildcard (*) to copy
#			pics directory as it'll just match to one directory on
#			the path and only copy that directory's contents and
#			not the other dirs.
# 1999-05-23	SNB	Added translate: target for dynamically building the
#                       UI resources using the Translate tool.  Also, sorted
#                       the objs into alphabetical order.

# ------------------------------------------------------------------------------
# Paths
#

EXP_HDR		= ^.Build
EXP_DIR		= ^.Build

# -----------------------------------------------------------------------------
# Export Paths for Messages module
#

RESDIR          = $(RESDIR).$(RES_COMPONENT)
RESAPP          = <Resource$Dir>.Apps.$(APP)


# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= cdir
AS		= objasm
CP		= copy
CC		= $(MemCheckCC) cc
C++		= $(MemCheckCC) c++
#C++		= g++
CM		= cmhg
RM		= remove
LD		= link
LB		= libfile
WIPE		= -wipe
TOUCH		= create
TRANSLATE 	= translate 

CCFLAGS		= -c -depend !Depend -ffah -wP\
		  -I$(INCLUDES) $(DFLAGS) $(THROWBACK) $(CCEXTRA)
C++FLAGS	= -c -depend !Depend -ffa -wP\
		  -I$(INCLUDES) $(DFLAGS) $(THROWBACK) $(C++EXTRA)
ASFLAGS		= -depend !Depend -Stamp -quit
CPFLAGS		= ~clfnr~v
LDFLAGS		= -c++ -aof
LBFLAGS		= -c
WFLAGS		= ~CFR~V
# Translate Tool
TRANSFLAGS	= $(THROWBACK) -marko "´´" -markc "ªª" -htmlo "êê" -htmlc "ëë"
TRANSMAPPINGS	= TranslateRes:Mappings
TRANSRES	= TranslateRes:
TRANSOUT	= ^.Build.$(INSTDIR).NCMail

# ------------------------------------------------------------------------------
# Include files
#

INCLUDES	= tbox:,C:,<Lib$Dir>


# ------------------------------------------------------------------------------
# Program specific options
#

RES_COMPONENT   = NCMail
COMPONENT	= $(RES_COMPONENT)UI
LPATH           = LocalUserIFRes:
APP             = !$(RES_COMPONENT)
MODULE		= rm.!$(RES_COMPONENT)
ROM_MODULE	= aof.$(RES_COMPONENT)

OBJS =			\
 $(EXT).Advanced	\
 $(EXT).BrowserIF	\
 $(EXT).Command		\
 $(EXT).Compose		\
 $(EXT).Configuration	\
 $(EXT).Entry		\
 $(EXT).Errors		\
 $(EXT).EscapeHTML	\
 $(EXT).Exit		\
 $(EXT).Feedback	\
 $(EXT).ForwardMsg	\
 $(EXT).InBox		\
 $(EXT).Info		\
 $(EXT).MailTo		\
 $(EXT).NCMailUIVersion	\
 $(EXT).Parser		\
 $(EXT).PopUp		\
 $(EXT).ReadMsg		\
 $(EXT).Reply		\
 $(EXT).ScreenMode	\
 $(EXT).SendMsg		\
 $(EXT).UserSel		\
 $(EXT).WebMail		\

FILES =			\
 $(LPATH)Config		\
 $(TARGET)		\


# ------------------------------------------------------------------------------
# Rule patterns
#

# The ROM variant of this library needs is principally intended for use with
# module-wrapped applications, so stack limit checking is not disabled in the
# ROM build rules below (it's fine for use with SVC mode module code as well).

.SUFFIXES: .o .od .oMC .oHP .oz .i .s .h .c .c++
.c.i:;		$(CC)  $(CCFLAGS)  -c -C -E $< >> $@
.c.o:;		$(CC)  $(CCFLAGS)  -o $@ $<
.c.oMC:;	$(CC)  $(CCFLAGS)  -fn -o $@ $<
.c.oHP:;	$(CC)  $(CCFLAGS)  -fn -o $@ $<
.c.od:;		$(CC)  $(CCFLAGS)  -g -o $@ $<
.c.oz:;		$(CC)  $(CCFLAGS)  -zM -o $@ $<
.c++.i:;	$(C++) $(C++FLAGS) -c -C -E $< >> $@
.c++.o:;	$(C++) $(C++FLAGS) -o $@ $<
.c++.oMC:;	$(C++) $(C++FLAGS) -fn -o $@ $<
.c++.oHP:;	$(C++) $(C++FLAGS) -fn -o $@ $<
.c++.od:;	$(C++) $(C++FLAGS) +g -o $@ $<
.c++.oz:;	$(C++) $(C++FLAGS) -zM -o $@ $<
.s.o:;		$(AS)  $(ASFLAGS)  -o $@ $<


# ------------------------------------------------------------------------------
# Build all the component
#

all:	$(TARGET) $(EXT).local_dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(TARGET)	$(CPFLAGS)

debug:	$(TARGET) $(EXT).local_dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(TARGET)	$(CPFLAGS)

preprocess:	$(OBJS) $(EXT).local_dirs

export_libsMC: export_libs
	@echo Finished MainMake: $(COMPONENT) export_libsMC

export_libsHP: export_libs
	@echo Finished MainMake: $(COMPONENT) export_libsHP

clean_all: clean
	@$(RM)   $(EXP_HDR).h.NCMailUI
	@$(RM)   $(EXP_HDR).h.UIVersion
	@$(RM)   $(EXP_HDR).h.ui_dirs
	@$(RM)   $(EXP_HDR).$(EXT).ui_dirs
	@$(RM)   $(EXP_DIR).$(EXT).$(TARGET)

# ------------------------------------------------------------------------------
# RISC OS ROM build rules
#

translate:
        @echo ** Translating...
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Messages -o $(TRANSOUT).Messages
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Advanced_H -o $(TRANSOUT).Advanced_H
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Advanced_L -o $(TRANSOUT).Advanced_L
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Compose -o $(TRANSOUT).Compose
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)ERROR -o $(TRANSOUT).ERROR
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Exit -o $(TRANSOUT).Exit
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Inbox_Hc -o $(TRANSOUT).Inbox_Hc
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Inbox_Hd -o $(TRANSOUT).Inbox_Hd
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Inbox_L -o $(TRANSOUT).Inbox_L
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Info -o $(TRANSOUT).Info
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Read_B -o $(TRANSOUT).Read_B
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Read_H -o $(TRANSOUT).Read_H
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)UserSel -o $(TRANSOUT).UserSel

export: export_$(PHASE)

clean:
	@$(WIPE) $(EXT)			$(WFLAGS)

export_hdrs: h.NCMailUI h.Version $(EXP_HDR).h.ui_dirs
	@$(CP)	h.NCMailUI	^.Build.h.NCMailUI			$(CPFLAGS)
	@$(CP)	h.Version	^.Build.h.UIVersion			$(CPFLAGS)

export_libs: $(TARGET) $(EXP_DIR).$(EXT).ui_dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

ram: $(TARGET) $(EXP_DIR).$(EXT).ui_dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)
	@echo $(COMPONENT): Module built (RAM)

rom: $(TARGET) $(EXP_DIR).$(EXT).ui_dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

install_common: $(TARGET) $(EXP_DIR).$(EXT).ui_dirs $(FILES)
	@$(MKDIR) ^.Build.$(INSTDIR)
	@$(MKDIR) ^.Build.$(INSTDIR).NCMail
        @$(CP) $(LPATH)*                  ^.Build.$(INSTDIR).NCMail.*	$(CPFLAGS)
	@$(RM) ^.Build.$(INSTDIR).NCMail.!BootDUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!BootROMUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!BootUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!RunDUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!RunROMUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!RunUI
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

install: translate install_common
        @$(CP) $(LPATH)!BootUI           ^.Build.$(INSTDIR).!BootUI      $(CPFLAGS)
        @$(CP) $(LPATH)!RunUI            ^.Build.$(INSTDIR).!RunUI       $(CPFLAGS)
        @echo
        @echo $(COMPONENT): Application installed to ^.Build.$(INSTDIR)

installd_common: install_common $(TARGET) $(EXP_DIR).$(EXT).ui_dirs $(FILES)
        @$(CP) $(LPATH)!BootDUI          ^.Build.$(INSTDIR).!BootUI      $(CPFLAGS)
        @$(CP) $(LPATH)!RunDUI           ^.Build.$(INSTDIR).!RunUI       $(CPFLAGS)
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

install_rom: $(TARGET)
	@$(CP) $(TARGET) $(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

installd: installd_common translate
        @echo $(COMPONENT): Debug application installed ^.Build.$(INSTDIR)

installMC: installd_common translate
        @echo $(COMPONENT): MemCheck application installed ^.Build.$(INSTDIR)

installHP: installd translate
        @echo $(COMPONENT): HierProf application installed ^.Build.$(INSTDIR)

resources:
	@echo    $(RESDIR)
        @$(MKDIR) $(RESDIR)
        @$(MKDIR) $(RESAPP)
        @$(CP) $(LPATH)!BootROMUI  $(RESAPP).!BootUI       $(CPFLAGS)
        @$(CP) $(LPATH)!RunROMUI   $(RESAPP).!RunUI        $(CPFLAGS)
        @$(CP) $(LPATH)Inbox       $(RESDIR).Inbox         $(CPFLAGS)
        @$(CP) $(LPATH)Advanced    $(RESDIR).Advanced      $(CPFLAGS)
        @$(CP) $(LPATH)Config      $(RESDIR).Config        $(CPFLAGS)
        @$(CP) $(LPATH)Read        $(RESDIR).Read          $(CPFLAGS)
        @$(CP) $(LPATH)Res         $(RESDIR).Res           $(CPFLAGS)
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Messages -o $(RESDIR).Messages
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Advanced_H -o $(RESDIR).Advanced_H
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Advanced_L -o $(RESDIR).Advanced_L
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Compose -o $(RESDIR).Compose
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)ERROR -o $(RESDIR).ERROR
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Exit -o $(RESDIR).Exit
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Inbox_Hc -o $(RESDIR).Inbox_Hc
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Inbox_Hd -o $(RESDIR).Inbox_Hd
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Inbox_L -o $(RESDIR).Inbox_L
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Info -o $(RESDIR).Info
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Read_B -o $(RESDIR).Read_B
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)Read_H -o $(RESDIR).Read_H
	$(TRANSLATE) $(TRANSFLAGS) -m $(TRANSMAPPINGS) -i $(TRANSRES)UserSel -o $(RESDIR).UserSel
        @$(MKDIR) $(RESDIR).pics
        @$(CP) $(LPATH)pics.Advanced  $(RESDIR).pics.Advanced  $(CPFLAGS)
        @$(CP) $(LPATH)pics.Compose   $(RESDIR).pics.Compose   $(CPFLAGS)
        @$(CP) $(LPATH)pics.Email     $(RESDIR).pics.Email     $(CPFLAGS)
        @$(CP) $(LPATH)pics.Forward   $(RESDIR).pics.Forward   $(CPFLAGS)
        @$(CP) $(LPATH)pics.General   $(RESDIR).pics.General   $(CPFLAGS)
        @$(CP) $(LPATH)pics.NewMail_L $(RESDIR).pics.NewMail_L $(CPFLAGS)
        @$(CP) $(LPATH)pics.NewMail_S $(RESDIR).pics.NewMail_S $(CPFLAGS)
        @$(CP) $(LPATH)pics.OldMail_L $(RESDIR).pics.OldMail_L $(CPFLAGS)
        @$(CP) $(LPATH)pics.OldMail_S $(RESDIR).pics.OldMail_S $(CPFLAGS)
        @$(CP) $(LPATH)pics.Read      $(RESDIR).pics.Read      $(CPFLAGS)
        @$(CP) $(LPATH)pics.Reply     $(RESDIR).pics.Reply     $(CPFLAGS)
        @echo
        @echo $(COMPONENT): Resource files copied to Messages module

$(EXT).local_dirs:
	@$(MKDIR) $(EXT)
	@$(TOUCH) $@

$(EXP_HDR).h.ui_dirs:
	@$(MKDIR) $(EXP_HDR).h
	@$(TOUCH) $@
	
$(EXP_DIR).$(EXT).ui_dirs:
	@$(MKDIR) $(EXP_DIR)
	@$(MKDIR) $(EXP_DIR).$(EXT)
	@$(TOUCH) $@


# ------------------------------------------------------------------------------
# Final link
#

$(TARGET): $(OBJS) $(EXT).local_dirs
	@$(LB) $(LBFLAGS) -o $@ $(OBJS)


# ------------------------------------------------------------------------------
# Dynamic dependencies:
