# Main Makefile for NCMail TestUI
# ===============================
#

# -----------------------------------------------------------------------------
# Change List
#

# Date          Name    Description
# ====          ====    ===========
# 1998-09-16    AW      Created
# 1998-09-22	RDW	Modified to fit into build structure
# 1998-11-02	RDW	Change over to Ben's cunning 2 level makefile
# 1998-11-04	RDW	NCMailUIVersion added to OBJS and Version.h exported
#			as UIVersion.h


# ------------------------------------------------------------------------------
# Paths
#

EXP_HDR		= ^.Build
EXP_DIR		= ^.Build

# -----------------------------------------------------------------------------
# Export Paths for Messages module
#

RESDIR          = $(RESDIR).$(RES_COMPONENT)
RESAPP          = <Resource$Dir>.Apps.$(APP)


# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= cdir
AS		= objasm
CP		= copy
CC		= $(MemCheckCC) cc
C++		= $(MemCheckCC) c++
#C++		= g++
CM		= cmhg
RM		= remove
LD		= link
LB		= libfile
WIPE		= -wipe
TOUCH		= create

CCFLAGS		= -c -depend !Depend -ffah -wP\
		  -I$(INCLUDES) $(DFLAGS) $(THROWBACK) $(CCEXTRA)
C++FLAGS	= -c -depend !Depend -ffa -wP\
		  -I$(INCLUDES) $(DFLAGS) $(THROWBACK) $(C++EXTRA)
ASFLAGS		= -depend !Depend -Stamp -quit
CPFLAGS		= ~clfnr~v
LDFLAGS		= -c++ -aof
LBFLAGS		= -c
WFLAGS		= ~CFR~V


# ------------------------------------------------------------------------------
# Include files
#

INCLUDES	= tbox:,C:,<Lib$Dir>


# ------------------------------------------------------------------------------
# Program specific options
#

COMPONENT	= NCMailUI
LPATH           = LocalUserIFRes:
RES_COMPONENT   = NCMail
APP             = !NCMail
MODULE		= rm.!NCMail
ROM_MODULE	= aof.NCMail

OBJS =\
 $(EXT).engtempui\
 $(EXT).NCMailUIVersion\

FILES =\
 $(LPATH)Messages \
 $(TARGET) \


# ------------------------------------------------------------------------------
# Rule patterns
#

# The ROM variant of this library needs is principally intended for use with
# module-wrapped applications, so stack limit checking is not disabled in the
# ROM build rules below (it's fine for use with SVC mode module code as well).

.SUFFIXES: .o .od .oMC .oHP .oz .i .s .h .c .c++
.c.i:;		$(CC)  $(CCFLAGS)  -c -C -E $< >> $@
.c.o:;		$(CC)  $(CCFLAGS)  -o $@ $<
.c.oMC:;	$(CC)  $(CCFLAGS)  -fn -o $@ $<
.c.oHP:;	$(CC)  $(CCFLAGS)  -fn -o $@ $<
.c.od:;		$(CC)  $(CCFLAGS)  -g -o $@ $<
.c.oz:;		$(CC)  $(CCFLAGS)  -zM -o $@ $<
.c++.i:;	$(C++) $(C++FLAGS) -c -C -E $< >> $@
.c++.o:;	$(C++) $(C++FLAGS) -o $@ $<
.c++.oMC:;	$(C++) $(C++FLAGS) -fn -o $@ $<
.c++.oHP:;	$(C++) $(C++FLAGS) -fn -o $@ $<
.c++.od:;	$(C++) $(C++FLAGS) +g -o $@ $<
.c++.oz:;	$(C++) $(C++FLAGS) -zM -o $@ $<
.s.o:;		$(AS)  $(ASFLAGS)  -o $@ $<


# ------------------------------------------------------------------------------
# Build all the component
#

all:	$(TARGET) $(EXT).local_dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(TARGET)	$(CPFLAGS)

debug:	$(TARGET) $(EXT).local_dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(TARGET)	$(CPFLAGS)

preprocess:	$(OBJS) $(EXT).local_dirs

export_libsMC: export_libs
	@echo Finished MainMake: $(COMPONENT) export_libsMC

export_libsHP: export_libs
	@echo Finished MainMake: $(COMPONENT) export_libsHP

clean_all: clean
	@$(RM)   $(EXP_HDR).h.NCMailUI
	@$(RM)   $(EXP_HDR).h.UIVersion
	@$(RM)   $(EXP_HDR).$(EXT).ui_dirs
	@$(RM)   $(EXP_DIR).$(EXT).$(TARGET)

# ------------------------------------------------------------------------------
# RISC OS ROM build rules
#

export: export_$(PHASE)

clean:
	@$(WIPE) $(EXT)			$(WFLAGS)

export_hdrs: h.NCMailUI h.Version $(EXP_HDR).h.ui_dirs
	@$(CP)	h.NCMailUI	^.Build.h.NCMailUI			$(CPFLAGS)
	@$(CP)	h.Version	^.Build.h.UIVersion			$(CPFLAGS)

export_libs: $(TARGET) $(EXP_DIR).$(EXT).ui_dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

ram: $(TARGET) $(EXP_DIR).$(EXT).ui_dirs
	@echo $(COMPONENT): Module built (RAM)

rom: $(TARGET) $(EXP_DIR).$(EXT).ui_dirs
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

install_common: $(TARGET) $(EXP_DIR).$(EXT).ui_dirs $(FILES)
	@$(MKDIR) ^.Build.$(INSTDIR)
	@$(MKDIR) ^.Build.$(INSTDIR).NCMail
        @$(CP) $(LPATH)*                  ^.Build.$(INSTDIR).NCMail.*	$(CPFLAGS)
	@$(RM) ^.Build.$(INSTDIR).NCMail.!BootDUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!BootROMUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!BootUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!RunDUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!RunROMUI
	@$(RM) ^.Build.$(INSTDIR).NCMail.!RunUI
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

install: install_common
        @$(CP) $(LPATH)!BootUI           ^.Build.$(INSTDIR).!BootUI      $(CPFLAGS)
        @$(CP) $(LPATH)!RunUI            ^.Build.$(INSTDIR).!RunUI       $(CPFLAGS)
        @echo
        @echo $(COMPONENT): Application installed to ^.Build.$(INSTDIR)

installd_common: $(TARGET) $(EXP_DIR).$(EXT).ui_dirs $(FILES)
        @$(CP) $(LPATH)!BootDUI          ^.Build.$(INSTDIR).!BootUI      $(CPFLAGS)
        @$(CP) $(LPATH)!RunDUI           ^.Build.$(INSTDIR).!RunUI       $(CPFLAGS)
	@$(CP)	$(TARGET)	$(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

install_rom: $(TARGET)
	@$(CP) $(TARGET) $(EXP_DIR).$(EXT).$(COMPONENT)		$(CPFLAGS)

installd: installd_common
        @echo $(COMPONENT): Debug application installed ^.Build.$(INSTDIR)

installMC: installd_common
        @echo $(COMPONENT): MemCheck application installed ^.Build.$(INSTDIR)

installHP: installd
        @echo $(COMPONENT): HierProf application installed ^.Build.$(INSTDIR)

resources:
	@echo    $(RESDIR)
        @$(MKDIR) $(RESDIR)
        @$(MKDIR) $(RESAPP)
        $(CP) $(LPATH)!BootROMUI        $(RESAPP).!BootUI        $(CPFLAGS)
        $(CP) $(LPATH)!RunROMUI         $(RESAPP).!RunUI         $(CPFLAGS)
        $(CP) $(LPATH)Messages          $(RESDIR).Messages      $(CPFLAGS)
        $(CP) $(LPATH)Res               $(RESDIR).Res           $(CPFLAGS)
        @echo
        @echo $(COMPONENT): Resource files copied to Messages module

$(EXT).local_dirs:
	@$(MKDIR) $(EXT)
	@$(TOUCH) $@

$(EXP_HDR).h.ui_dirs:
	@$(MKDIR) $(EXP_HDR).h
	@$(TOUCH) $@
	
$(EXP_DIR).$(EXT).ui_dirs:
	@$(MKDIR) $(EXP_DIR)
	@$(MKDIR) $(EXP_DIR).$(EXT)
	@$(TOUCH) $@


# ------------------------------------------------------------------------------
# Final link
#

$(TARGET): $(OBJS) $(EXT).local_dirs
	@$(LB) $(LBFLAGS) -o $@ $(OBJS)


# ------------------------------------------------------------------------------
# Dynamic dependencies:
o.engtempui:	c.engtempui
o.engtempui:	C:h.string
o.engtempui:	C:h.kernel
o.engtempui:	C:h.swis
o.engtempui:	C:h.stdlib
o.engtempui:	C:h.string
o.engtempui:	C:tboxlibs.h.event
o.engtempui:	C:tboxlibs.h.wimp
o.engtempui:	C:tboxlibs.h.toolbox
o.engtempui:	C:tboxlibs.h.toolbox
o.engtempui:	C:tboxlibs.h.wimplib
o.engtempui:	C:tboxlibs.h.gadgets
o.engtempui:	C:tboxlibs.h.window
o.engtempui:	C:DebugLib.h.DebugLib
o.engtempui:	C:Email.Common.h.bool
o.engtempui:	C:Email.Common.h.types
o.engtempui:	^.Build.h.engtypes
o.engtempui:	C:h.stdio
o.engtempui:	C:h.time
o.engtempui:	C:Email.Common.h.bool
o.engtempui:	C:Email.Common.h.types
o.engtempui:	^.Engine.h.enginit
o.engtempui:	C:h.kernel
o.engtempui:	C:tboxlibs.h.wimp
o.engtempui:	C:tboxlibs.h.toolbox
o.engtempui:	^.Engine.h.engtypes
o.engtempui:	^.Build.h.enguiapi
o.engtempui:	C:h.kernel
o.engtempui:	^.Build.h.engtypes
o.NCMailUIVersion:	c++.NCMailUIVersion
o.NCMailUIVersion:	h.Version
o.NCMailUIVersion:	C:Email.Common.h.VersionDef
o.NCMailUIVersion:	C:Email.Common.h.types
o.NCMailUIVersion:	VersionNum
od.engtempui:	c.engtempui
od.engtempui:	C:h.string
od.engtempui:	C:h.kernel
od.engtempui:	C:h.swis
od.engtempui:	C:h.stdlib
od.engtempui:	C:h.string
od.engtempui:	C:tboxlibs.h.event
od.engtempui:	C:tboxlibs.h.wimp
od.engtempui:	C:tboxlibs.h.toolbox
od.engtempui:	C:tboxlibs.h.toolbox
od.engtempui:	C:tboxlibs.h.wimplib
od.engtempui:	C:tboxlibs.h.gadgets
od.engtempui:	C:tboxlibs.h.window
od.engtempui:	C:DebugLib.h.DebugLib
od.engtempui:	C:Email.Common.h.bool
od.engtempui:	C:Email.Common.h.types
od.engtempui:	^.Build.h.engtypes
od.engtempui:	C:h.stdio
od.engtempui:	C:h.time
od.engtempui:	C:Email.Common.h.bool
od.engtempui:	C:Email.Common.h.types
od.engtempui:	^.Engine.h.enginit
od.engtempui:	C:h.kernel
od.engtempui:	C:tboxlibs.h.wimp
od.engtempui:	C:tboxlibs.h.toolbox
od.engtempui:	^.Engine.h.engtypes
od.engtempui:	^.Build.h.enguiapi
od.engtempui:	C:h.kernel
od.engtempui:	^.Build.h.engtypes
od.NCMailUIVersion:	c++.NCMailUIVersion
od.NCMailUIVersion:	h.Version
od.NCMailUIVersion:	C:Email.Common.h.VersionDef
od.NCMailUIVersion:	C:Email.Common.h.types
od.NCMailUIVersion:	VersionNum
