# Makefile fragment for C and C++ modules targetted at ROMming.
#
# $Id$
#
#
# This fragment relies on srcbuild to set FORCEROMLINK if it really wants the
# relink of the ROM target to occur.  This is used to generate correct commands
# in the BBE phase.
#
#
# This fragment requires the following macros to be set
# by the component master makefile:
#
#
#
# ROM_MODULE       (local filename - defaults to aof.${COMPONENT})
# ROM_OBJS         (component's object files for romming - defaults to ${OBJS})
# ROM_LIBS         (libraries to link again ROM_OBJS to generate ROM_MODULE
#                   defaults to ${LIBS})
#
# ROMCSTUBS        (the C library stubs for ROMming)
# ABSSYM           (the C library absolute symbols for rom_link phase)
#
# DIRS             (magic target to ensure object directories are present)
#
# LNK_MODULE       (the name of the rom_link phase output -
#                   defaults to linked.${COMPONENT}
#
#
# It relies on the following from the build system:
#
#
# COMPONENT        (the name of the component)
# INSTDIR          (installation directory for ROM_MODULE)
# TARGET           (the name of LNK_MODULE when copied to INSTDIR)
# ADDRESS          (base address for ROM link)
# LINKDIR          (installation directory for linked ROM modules)
#
# It relies on the following generic tool macros from the Tools makefile
#
# CP               (copy, cp etc.)
# CPFLAGS          (flags after the dest arg - for RISC OS builds)
# ECHO
#
# LD               (linker)
# LDFLAGS          (generic linker flags)
# LDROMFLAGS       (flags for the rom phase)
# LDLINKFLAGS      (flags for the rom_link phase)
#
# MKDIR            (cdir/mkdir -p)
#
#
#
#

# Conditional macros - only define if macro is not yet set

ROM_MODULE .= aof.${TARGET}
LNK_MODULE .= linked.${TARGET}

ROM_OBJS .= ${OBJS}
ROM_LIBS .= ${LIBS}

#
# RISC OS ROM build rules:
#
rom: ${ROM_MODULE}
        @${ECHO} ${COMPONENT}: rom module built

install_rom: ${ROM_MODULE}
        ${CP} ${ROM_MODULE} ${INSTDIR}.${TARGET} ${CPFLAGS}
        @${ECHO} ${COMPONENT}: rom module installed

#
# Actually make the partially linked ROM target 
#
${ROM_MODULE}: ${ROM_OBJS} ${ROM_LIBS} ${ROMCSTUBS} ${DIRS}
        ${MKDIR} aof
        ${LD} -o $@ -aof ${ROM_OBJS} ${ROM_LIBS} ${ROMCSTUBS}

#
# Final link for the ROM Image (using given base address)
#
rom_link: ${LNK_MODULE}
        ${CP} ${LNK_MODULE} ${LINKDIR}.${TARGET} ${CPFLAGS}
        @${ECHO} ${COMPONENT}: rom_link complete

${LNK_MODULE}: ${ROM_MODULE} ${ABSSYM} ${FORCEROMLINK}
        ${MKDIR} linked
        ${LD} ${LDFLAGS} ${LDLINKFLAGS} -o $@ -rmf -base ${ADDRESS} ${ROM_MODULE} ${ABSSYM}


EOFSTDMKFILE=$Id$
# EOF
