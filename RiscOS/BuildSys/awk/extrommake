# extrommake: generate a Makefile to control the final extension ROM Image
#             construction stage
# Notes:
#   Modified for automatic release numbering.
#
BEGIN {
    i = 0
}

{
    if (index($0, "#") == 0)                    # Only process non-comment lines
    {
        if (index($0, "Description") == 1)	# Description line
        {
            split($3,Rel,".")                   # split 0.01 etc
            Desc = $4
            for (j=4; j<=NF; j++)		# each word of description
                Desc = Desc " " $j
	}
        else if  (index($1, "ROMImage") == 1)
        {
            ROMInst = $4
            ROMname = $5
        }
        else if (index($1, "SharedCLibrary") == 1)
        {
            AbsSym = $3
            CLibDir = $4
        }
        else if (NF >= 5)                       # only lines with "ROM modules" entries are listed
        {
            for (j=5; j<=NF; j++)
            {
                Name[i]    = $1
                Type[i]    = $2
                Source[i]  = $3
                Install[i] = $4
                Module[i]  = $j
                i++
             }
        }
    }
}

END {
    printf("# Makefile for ROMImage\n\n")

    printf("CD      = dir\n")
    printf("LD      = link\n")
    printf("MKDIR   = cdir\n")
    printf("MKIMAGE = Make8Bit\n\n")

    printf("SRCDIR  = <src$dir>\n")
    printf("INSTDIR = <install$dir>\n")
    printf("CLIBDIR = <install$dir>.%s\n", CLibDir)
    printf("ABSSYM  = <src$dir>.%s\n", AbsSym)
    printf("\n")

    printf("MODULES =")

    ncomp = i-1
    for (i=ncomp; i>=0; i--)
        printf(" \\\n %s", Module[i])
    printf("\n\n")

    printf("#\n")
    printf("# Build rules:\n")
    printf("#\n")

    if (length(CLibDir))
      printf("install_rom: ${MODULES} dirs\n")
    else
      printf("install_rom: ${MODULES}\n")
          
    printf("        ${MKIMAGE} { < ForBigSplt }\n")
    printf("        settype <install$dir>.%s.%.6s/%s%s FE5\n\n",ROMInst,ROMname,Rel[1],Rel[2])

    if (length(CLibDir))
    {
      printf("dirs:\n")
      printf("        ${MKDIR} ${CLIBDIR}.linked\n")
      printf("        ${MKDIR} ${CLIBDIR}.map\n\n")
    }      
    
    for (i=0; i<=ncomp; i++)
    {
        printf("%s:\n", Module[i])

        if (i==0)
            printf("        @seteval PositionInRom &03f0003c+(%d*8)+(%d*4)\n", ncomp+1, length(Desc)/4)

        if (index(Type[i], "C") == 1)
        {
            printf("        @${CD} ${SRCDIR}.%s\n", Source[i])
            printf("        @set alias$amu_rom_link amu MACHINE=<Machine> LOCALE=<Locale> ADDRESS=<PositionInRom> rom_link %%*0\n")
            printf("        amu_rom_link LINKDIR=${CLIBDIR}.linked ABSSYM=${ABSSYM}\n")
            printf("        @unset alias$amu_rom_link\n")
            printf("        @back\n")
            printf("        setolength File$Length ${CLIBDIR}.linked.%s\n", Module[i])
            printf("        @echo %-25s  <PositionInRom>  <File$Length>\n", Module[i])
            printf("        @seteval PositionInRom PositionInRom + ((File$Length + 3) AND NOT 3) + 4\n\n")
        }
        else
        {
            printf("        @setolength File$Length ${INSTDIR}.%s.%s\n", Install[i], Module[i])
            printf("        @echo %-25s  <PositionInRom>  <File$Length>\n", Module[i])
            printf("        @seteval PositionInRom PositionInRom + ((File$Length + 3) AND NOT 3) + 4\n\n")
        }
    }
}
