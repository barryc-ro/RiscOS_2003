/* extract.h */
/* --------- */

#define NO 0
#define YES 1

struct source_info
{
   char *source_file;
   int track_no;
};

struct video
{
   int isp;
   int vds;
   struct video *vlink;
};

struct sound_chunk_sizes
{
   int track;
   int size;
   struct sound_chunk_sizes *slink;
};

struct cat_info
{
   struct video *v;
   struct sound_chunk_sizes *scs;
};        


int main(int argc, char *argv[]);
void ProcessCommandLineArgs(int argc,char *argv[],int *sound_files,
                            int *extract_header,int *extract_keys,
                            int *extract_sprite,int *extract_images,
                            int *extract_sound);
int OpenSourceFile(int *keys_offset, int *sprite_offset, int *spritesize,
                    int *cat_offset, int *chunks, int extract_header,
                    int *no_image_data, int extract_images, 
                    int extract_sprite, int extract_keys,int *sound_files);
void CheckAllTracksExist(int tracks, int sound_files);
void ExtractSprite(int sprite_offset,int spritesize);
int CheckValidKeysOffset(int keys_offset,int sprite_offset,int spritesize);
void ExtractKeys(int keys_offset,int cat_offset,int chunks);
struct cat_info * BuildList(struct cat_info *,
                             struct cat_info *,int i,int chunks);                              
void CreateSoundFile(struct cat_info *head,int i,int chunks,
                     int *numbering_of_sound_files,int *numbering_of_sample_files,
                     int *numbering_of_adpcm_files);
void FreeList(struct cat_info *head);
struct video * BuildImageList(struct video *,
                                struct video *,int chunks);
void CreateImageFiles(struct video *);                                
void Help(void); 
void close_files(void);

/*----------------------------------------------------------------------*/

#define PROG_ID printf("Program: EXTRACT\n")

/*----------------------------------------------------------------------*/
