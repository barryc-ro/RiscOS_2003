#ifndef osfind_H
#define osfind_H

/* C header file for OSFind
 * written by DefMod (Oct 12 1993) on Tue Oct 12 11:00:02 1993
 * Copyright © Acorn Computers Ltd, 1993
 */

#ifndef types_H
   #include "types.h"
#endif

#ifndef os_H
   #include "os.h"
#endif

/*SWI names and SWI reason codes*/
#define OSFind_Close 0x0
#define OSFind_Openin 0x40
#define OSFind_OpeninPath 0x41
#define OSFind_OpeninPathVar 0x42
#define OSFind_OpeninNoPath 0x43
#define OSFind_Openout 0x80
#define OSFind_OpenoutPath 0x81
#define OSFind_OpenoutPathVar 0x82
#define OSFind_OpenoutNoPath 0x83
#define OSFind_Openup 0xC0
#define OSFind_OpenupPath 0xC1
#define OSFind_OpenupPathVar 0xC2
#define OSFind_OpenupNoPath 0xC3

/*Structure and union declarations*/

/*Type definitions*/
/*Constant definitions*/
#define osfind_ERROR_IF_ABSENT ((bits) 0x8u)
#define osfind_ERROR_IF_DIR ((bits) 0x4u)

#ifdef __cplusplus
   extern "C" {
#endif

/* -------------------------------------------------------------------------
 * Function:      osfind_close()
 *
 * Description:   Calls reason code 0 of SWI &D
 *
 * Input:         file - value of R1 on entry
 */

extern os_error *xosfind_close (os_f file);
extern void osfind_close (os_f file);

/* -------------------------------------------------------------------------
 * Function:      osfind_openin()
 *
 * Description:   Calls reason code 64 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openin (bits flags,
      char *(file_name),
      os_f *(file));
extern os_f osfind_openin (bits flags,
      char *(file_name),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openin_path()
 *
 * Description:   Calls reason code 65 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *                path - value of R2 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openin_path (bits flags,
      char *(file_name),
      char *(path),
      os_f *(file));
extern os_f osfind_openin_path (bits flags,
      char *(file_name),
      char *(path),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openin_path_var()
 *
 * Description:   Calls reason code 66 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *                var - value of R2 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openin_path_var (bits flags,
      char *(file_name),
      char *(var),
      os_f *(file));
extern os_f osfind_openin_path_var (bits flags,
      char *(file_name),
      char *(var),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openin_no_path()
 *
 * Description:   Calls reason code 67 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openin_no_path (bits flags,
      char *(file_name),
      os_f *(file));
extern os_f osfind_openin_no_path (bits flags,
      char *(file_name),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openout()
 *
 * Description:   Calls reason code 128 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openout (bits flags,
      char *(file_name),
      os_f *(file));
extern os_f osfind_openout (bits flags,
      char *(file_name),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openout_path()
 *
 * Description:   Calls reason code 129 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *                path - value of R2 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openout_path (bits flags,
      char *(file_name),
      char *(path),
      os_f *(file));
extern os_f osfind_openout_path (bits flags,
      char *(file_name),
      char *(path),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openout_path_var()
 *
 * Description:   Calls reason code 130 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *                var - value of R2 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openout_path_var (bits flags,
      char *(file_name),
      char *(var),
      os_f *(file));
extern os_f osfind_openout_path_var (bits flags,
      char *(file_name),
      char *(var),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openout_no_path()
 *
 * Description:   Calls reason code 131 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openout_no_path (bits flags,
      char *(file_name),
      os_f *(file));
extern os_f osfind_openout_no_path (bits flags,
      char *(file_name),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openup()
 *
 * Description:   Calls reason code 192 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openup (bits flags,
      char *(file_name),
      os_f *(file));
extern os_f osfind_openup (bits flags,
      char *(file_name),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openup_path()
 *
 * Description:   Calls reason code 193 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *                path - value of R2 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openup_path (bits flags,
      char *(file_name),
      char *(path),
      os_f *(file));
extern os_f osfind_openup_path (bits flags,
      char *(file_name),
      char *(path),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openup_path_var()
 *
 * Description:   Calls reason code 194 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *                var - value of R2 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openup_path_var (bits flags,
      char *(file_name),
      char *(var),
      os_f *(file));
extern os_f osfind_openup_path_var (bits flags,
      char *(file_name),
      char *(var),
      os_f *(file));

/* -------------------------------------------------------------------------
 * Function:      osfind_openup_no_path()
 *
 * Description:   Calls reason code 195 of SWI &D
 *
 * Input:         flags - value of R0 on entry
 *                file_name - value of R1 on entry
 *
 * Output:        file - value of R0 on exit
 *
 * Returns:       file (non-X version only)
 */

extern os_error *xosfind_openup_no_path (bits flags,
      char *(file_name),
      os_f *(file));
extern os_f osfind_openup_no_path (bits flags,
      char *(file_name),
      os_f *(file));

#ifdef __cplusplus
   }
#endif

#endif
