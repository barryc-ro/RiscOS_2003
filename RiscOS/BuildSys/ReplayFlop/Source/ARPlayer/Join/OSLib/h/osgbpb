#ifndef osgbpb_H
#define osgbpb_H

/* C header file for OSGBPB
 * written by DefMod (Oct 12 1993) on Mon Jan 24 14:45:21 1994
 * Copyright © Acorn Computers Ltd, 1993
 */

#ifndef types_H
   #include "types.h"
#endif

#ifndef os_H
   #include "os.h"
#endif

/*SWI names and SWI reason codes*/
#define OSGBPB_WriteAt 0x1
#define OSGBPB_Write 0x2
#define OSGBPB_ReadAt 0x3
#define OSGBPB_Read 0x4
#define OSGBPB_ReadDiscName 0x5
#define OSGBPB_ReadCSDName 0x6
#define OSGBPB_ReadLibName 0x7
#define OSGBPB_CSDEntries 0x8
#define OSGBPB_DirEntries 0x9
#define OSGBPB_DirEntriesBriefInfo 0xA
#define OSGBPB_DirEntriesInternalInfo 0xB
#define OSGBPB_DirEntriesFullInfo 0xC

/*Structure and union declarations*/
typedef struct osgbpb_name osgbpb_name;
typedef struct osgbpb_disc_name osgbpb_disc_name;
typedef struct osgbpb_dir_name osgbpb_dir_name;
typedef struct osgbpb_name_list osgbpb_name_list;
typedef struct osgbpb_brief_info osgbpb_brief_info;
typedef struct osgbpb_internal_info osgbpb_internal_info;
typedef struct osgbpb_full_info osgbpb_full_info;
typedef struct osgbpb_string_list osgbpb_string_list;
typedef struct osgbpb_brief_info_list osgbpb_brief_info_list;
typedef struct osgbpb_internal_info_list osgbpb_internal_info_list;
typedef struct osgbpb_full_info_list osgbpb_full_info_list;

/*Type definitions*/
struct osgbpb_name
   {  byte count;
      char (c) [UNKNOWN];
   };

#define osgbpb_NAME(N) \
      struct \
         {  byte count; \
            char (c) [N]; \
         }

#define osgbpb_SIZEOF_NAME(N) \
      (offsetof (osgbpb_name, c) + (N)*sizeof ((osgbpb_name *) NULL)->c)

struct osgbpb_disc_name
   {  osgbpb_name name;
      byte boot_option;
   };

struct osgbpb_dir_name
   {  byte reserved;
      osgbpb_name name;
      byte privilege;
   };

struct osgbpb_name_list
   {  osgbpb_name (names) [UNKNOWN];
   };

struct osgbpb_brief_info
   {  int load_addr;
      int exec_addr;
      int size;
      int attr;
      int obj_type;
      char (name) [UNKNOWN];
   };

#define osgbpb_BRIEF_INFO(N) \
      struct \
         {  int load_addr; \
            int exec_addr; \
            int size; \
            int attr; \
            int obj_type; \
            char (name) [N]; \
         }

#define osgbpb_SIZEOF_BRIEF_INFO(N) \
      (offsetof (osgbpb_brief_info, name) + (N)*sizeof ((osgbpb_brief_info *) NULL)->name)

struct osgbpb_internal_info
   {  int load_addr;
      int exec_addr;
      int size;
      int attr;
      int obj_type;
      int sin;
      os_t stamp;
      char (name) [UNKNOWN];
   };

#define osgbpb_INTERNAL_INFO(N) \
      struct \
         {  int load_addr; \
            int exec_addr; \
            int size; \
            int attr; \
            int obj_type; \
            int sin; \
            os_t stamp; \
            char (name) [N]; \
         }

#define osgbpb_SIZEOF_INTERNAL_INFO(N) \
      (offsetof (osgbpb_internal_info, name) + (N)*sizeof ((osgbpb_internal_info *) NULL)->name)

struct osgbpb_full_info
   {  int load_addr;
      int exec_addr;
      int size;
      int attr;
      int obj_type;
      int file_type;
      char (name) [UNKNOWN];
   };

#define osgbpb_FULL_INFO(N) \
      struct \
         {  int load_addr; \
            int exec_addr; \
            int size; \
            int attr; \
            int obj_type; \
            int file_type; \
            char (name) [N]; \
         }

#define osgbpb_SIZEOF_FULL_INFO(N) \
      (offsetof (osgbpb_full_info, name) + (N)*sizeof ((osgbpb_full_info *) NULL)->name)

struct osgbpb_string_list
   {  char (names) [UNKNOWN];
   };

struct osgbpb_brief_info_list
   {  osgbpb_brief_info (info) [UNKNOWN];
   };

struct osgbpb_internal_info_list
   {  osgbpb_internal_info (info) [UNKNOWN];
   };

struct osgbpb_full_info_list
   {  osgbpb_full_info (info) [UNKNOWN];
   };

/*Constant definitions*/
#define osgbpb_PRIVILEGE_OWNER ((byte) 0)
#define osgbpb_PRIVILEGE_PUBLIC ((byte) 255)
#define osgbpb_NO_MORE (-1)

#ifdef __cplusplus
   extern "C" {
#endif

/* -------------------------------------------------------------------------
 * Function:      osgbpb_write_at()
 *
 * Description:   Calls reason code 1 of SWI &C
 *
 * Input:         file - value of R1 on entry
 *                data - value of R2 on entry
 *                size - value of R3 on entry
 *                ptr - value of R4 on entry
 *
 * Output:        unwritten - value of R3 on exit
 */

extern os_error *xosgbpb_write_at (os_f file,
      byte *(data),
      int size,
      int ptr,
      int *(unwritten));
extern void osgbpb_write_at (os_f file,
      byte *(data),
      int size,
      int ptr,
      int *(unwritten));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_write()
 *
 * Description:   Calls reason code 2 of SWI &C
 *
 * Input:         file - value of R1 on entry
 *                data - value of R2 on entry
 *                size - value of R3 on entry
 *
 * Output:        unwritten - value of R3 on exit
 */

extern os_error *xosgbpb_write (os_f file,
      byte *(data),
      int size,
      int *(unwritten));
extern void osgbpb_write (os_f file,
      byte *(data),
      int size,
      int *(unwritten));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_read_at()
 *
 * Description:   Calls reason code 3 of SWI &C
 *
 * Input:         file - value of R1 on entry
 *                buffer - value of R2 on entry
 *                size - value of R3 on entry
 *                ptr - value of R4 on entry
 *
 * Output:        unread - value of R3 on exit
 */

extern os_error *xosgbpb_read_at (os_f file,
      byte *(buffer),
      int size,
      int ptr,
      int *(unread));
extern void osgbpb_read_at (os_f file,
      byte *(buffer),
      int size,
      int ptr,
      int *(unread));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_read()
 *
 * Description:   Calls reason code 4 of SWI &C
 *
 * Input:         file - value of R1 on entry
 *                buffer - value of R2 on entry
 *                size - value of R3 on entry
 *
 * Output:        unread - value of R3 on exit
 */

extern os_error *xosgbpb_read (os_f file,
      byte *(buffer),
      int size,
      int *(unread));
extern void osgbpb_read (os_f file,
      byte *(buffer),
      int size,
      int *(unread));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_read_disc_name()
 *
 * Description:   Calls reason code 5 of SWI &C
 *
 * Input:         disc_name - value of R2 on entry
 */

extern os_error *xosgbpb_read_disc_name (osgbpb_disc_name *(disc_name));
extern void osgbpb_read_disc_name (osgbpb_disc_name *(disc_name));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_read_csd_name()
 *
 * Description:   Calls reason code 6 of SWI &C
 *
 * Input:         csd_name - value of R2 on entry
 */

extern os_error *xosgbpb_read_csd_name (osgbpb_dir_name *(csd_name));
extern void osgbpb_read_csd_name (osgbpb_dir_name *(csd_name));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_read_lib_name()
 *
 * Description:   Calls reason code 7 of SWI &C
 *
 * Input:         lib_name - value of R2 on entry
 */

extern os_error *xosgbpb_read_lib_name (osgbpb_dir_name *(lib_name));
extern void osgbpb_read_lib_name (osgbpb_dir_name *(lib_name));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_csd_entries()
 *
 * Description:   Calls reason code 8 of SWI &C
 *
 * Input:         name_list - value of R2 on entry
 *                count - value of R3 on entry
 *                context - value of R4 on entry
 *
 * Output:        unread_count - value of R3 on exit
 *                context_out - value of R4 on exit
 */

extern os_error *xosgbpb_csd_entries (osgbpb_name_list *(name_list),
      int count,
      int context,
      int *(unread_count),
      int *(context_out));
extern void osgbpb_csd_entries (osgbpb_name_list *(name_list),
      int count,
      int context,
      int *(unread_count),
      int *(context_out));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_dir_entries()
 *
 * Description:   Calls reason code 9 of SWI &C
 *
 * Input:         dir_name - value of R1 on entry
 *                name_list - value of R2 on entry
 *                count - value of R3 on entry
 *                context - value of R4 on entry
 *                size - value of R5 on entry
 *                entries - value of R6 on entry
 *
 * Output:        read_count - value of R3 on exit
 *                context_out - value of R4 on exit
 */

extern os_error *xosgbpb_dir_entries (char *(dir_name),
      osgbpb_string_list *(name_list),
      int count,
      int context,
      int size,
      char *(entries),
      int *(read_count),
      int *(context_out));
extern void osgbpb_dir_entries (char *(dir_name),
      osgbpb_string_list *(name_list),
      int count,
      int context,
      int size,
      char *(entries),
      int *(read_count),
      int *(context_out));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_dir_entries_brief_info()
 *
 * Description:   Calls reason code 10 of SWI &C
 *
 * Input:         dir_name - value of R1 on entry
 *                info_list - value of R2 on entry
 *                count - value of R3 on entry
 *                context - value of R4 on entry
 *                size - value of R5 on entry
 *                entries - value of R6 on entry
 *
 * Output:        read_count - value of R3 on exit
 *                context_out - value of R4 on exit
 */

extern os_error *xosgbpb_dir_entries_brief_info (char *(dir_name),
      osgbpb_brief_info_list *(info_list),
      int count,
      int context,
      int size,
      char *(entries),
      int *(read_count),
      int *(context_out));
extern void osgbpb_dir_entries_brief_info (char *(dir_name),
      osgbpb_brief_info_list *(info_list),
      int count,
      int context,
      int size,
      char *(entries),
      int *(read_count),
      int *(context_out));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_dir_entries_internal_info()
 *
 * Description:   Calls reason code 11 of SWI &C
 *
 * Input:         dir_name - value of R1 on entry
 *                info_list - value of R2 on entry
 *                count - value of R3 on entry
 *                context - value of R4 on entry
 *                size - value of R5 on entry
 *                entries - value of R6 on entry
 *
 * Output:        read_count - value of R3 on exit
 *                context_out - value of R4 on exit
 */

extern os_error *xosgbpb_dir_entries_internal_info (char *(dir_name),
      osgbpb_internal_info_list *(info_list),
      int count,
      int context,
      int size,
      char *(entries),
      int *(read_count),
      int *(context_out));
extern void osgbpb_dir_entries_internal_info (char *(dir_name),
      osgbpb_internal_info_list *(info_list),
      int count,
      int context,
      int size,
      char *(entries),
      int *(read_count),
      int *(context_out));

/* -------------------------------------------------------------------------
 * Function:      osgbpb_dir_entries_full_info()
 *
 * Description:   Calls reason code 12 of SWI &C
 *
 * Input:         dir_name - value of R1 on entry
 *                info_list - value of R2 on entry
 *                count - value of R3 on entry
 *                context - value of R4 on entry
 *                size - value of R5 on entry
 *                entries - value of R6 on entry
 *
 * Output:        read_count - value of R3 on exit
 *                context_out - value of R4 on exit
 */

extern os_error *xosgbpb_dir_entries_full_info (char *(dir_name),
      osgbpb_full_info_list *(info_list),
      int count,
      int context,
      int size,
      char *(entries),
      int *(read_count),
      int *(context_out));
extern void osgbpb_dir_entries_full_info (char *(dir_name),
      osgbpb_full_info_list *(info_list),
      int count,
      int context,
      int size,
      char *(entries),
      int *(read_count),
      int *(context_out));

#ifdef __cplusplus
   }
#endif

#endif
