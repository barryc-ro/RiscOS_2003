/* > h.redraw

 * Simple redraw wrappers. Do not use if interface module is used. Use interface.h instead.
 * © SJ Middleton, 1990
 *

 */

#ifndef __redraw_h
# define __redraw_h

#ifndef __wimp_h
# include "wimp.h"
#endif

typedef void (*redrawfn_t)(void *handle, wimp_redrawstr *rp, BOOL local);

/* ---------------------------- redraw_window --------------------------------------------
 *
 * Description:     Handles a redraw event for a window.
 *
 * Parameters:      wimp_w w -- window that needs redrawing
 *                  redrawfn_t fn1 -- function called once after redraw is initialised
 *                  redrawfn_t fn2 -- function called for each rectangle
 *                  void *handle -- context passed into each function call
 *
 * Other info:      BOOL local passed in function is FALSE.
 */

extern void redraw_window(wimp_w w, redrawfn_t fn1, redrawfn_t fn2, void *handle);


/* ---------------------------- redraw_local ---------------------------------------------
 *
 * Description:     Call when a window needs to be updated immediately
 *
 * Parameters:      wimp_redrawstr *rp -- Only handle and box to be redrawn needed.
 *                  Others as above.
 *
 * Other info:      BOOL local passed in function is FALSE.
 */

extern void redraw_local(wimp_redrawstr *rp, redrawfn_t fn1, redrawfn_t fn2, void *handle);


#endif

/* eof h.redraw */

