/* > plotsprite.c

 * © SJ Middleton, 1993

 */

#include "coords.h"
#include "res_spr.h"
#include "screenmode.h"
#include "swis.h"
#include "werr.h"
#include "wimpx.h"

#include <stdlib.h>

#include "macros.h"

#include "plotsprite.h"

static void plot_select(wimp_icon *ip)
{
    ip->data.indirectsprite.name = "select";
    ip->data.indirectsprite.spritearea = resspr_Area();
    ip->data.indirectsprite.nameisname = TRUE;
    no_err(wimp_ploticon(ip));
}

static BOOL plot__icon(wimp_icon *ip, coords_cvtstr *cvt, BOOL def_palette)
{
    sprite_info     info, scr_info;
    sprite_factors  factors;
    spr_coord       offset;
    sprite_ptr      sptr;

    if (ip->data.indirectsprite.spritearea == (sprite_area *)1)
        return FALSE;

    if (ip->data.indirectsprite.nameisname)
        no_err(_swix(OS_SpriteOp, _IN(0)|_IN(1)|_IN(2)|_OUT(2),
            0x118, ip->data.indirectsprite.spritearea, ip->data.indirectsprite.name,
            &sptr));
    else
        sptr = (sprite_ptr) ip->data.indirectsprite.name;

/* get info on input sprite */
    no_err(spr_ReturnInfo(sptr, &info));

/* fake up info on icon to pretend it is a sprite */
    scr_info.width = (ip->box.x1 - ip->box.x0) >> screen_Vars.xeig;
    scr_info.height = (ip->box.y1 - ip->box.y0) >> screen_Vars.yeig;
    scr_info.mode = screen_Vars.spritemode;
    scr_info.mask = FALSE;

/* get scaling and pixtrans table */
    if (spr_GetScaling_info(&info, &scr_info, &factors, &offset))
    {
        void        *table = NULL;
        wimp_box    box = ip->box;

        no_err(spr_GenerateTableForModePal(sptr, def_palette, -1, (void *)-1, &table));

        coords_box_toscreen(&box, cvt);
        no_err(spr_PutSpriteScaled(sptr, box.x0 + offset.x, box.y0 + offset.y, 0, &factors, table));

        free(table);
        return TRUE;
    }

    return FALSE;
}

void ploticon_spritescaled_selectsprite(wimp_icon *ip, void *cvt, BOOL def_palette)
{
    BOOL        selected = (ip->flags & wimp_ISELECTED) != 0;
    wimp_icon   icon = *ip;
    icon.flags &= ~wimp_ISELECTED;
    icon.flags |= wimp_INDIRECT;
    if (!plot__icon(&icon, cvt, def_palette))
        no_err(wimp_ploticon(&icon));
    if (selected)
        plot_select(&icon);
}

void ploticon_spritescaled(wimp_icon *ip, void *cvt, BOOL def_palette)
{
    wimp_icon   icon = *ip;
    icon.flags |= wimp_INDIRECT;
    if (!plot__icon(&icon, cvt, def_palette))
        no_err(wimp_ploticon(&icon));
}

/* eof plotsprite.c */
