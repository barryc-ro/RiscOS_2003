/* > dboxquery.h

 * © SJ Middleton, 1992

 */

#ifndef __dboxquery_h
# define __dboxquery_h

/* ------------------------------------------------------------------------------
 * 
 * All of the routines work from the same dialogue box.
 *
 * Requires:                                              CLOSE     QUIT      QUERY
 *              Icon 0 - DEFAULT action         (RHS)   - Save      Cancel    No
 *              Icon 1 - 256 char text buffer
 *              Icon 2 - 2nd action             (LHS)   - Discard   Discard   Yes
 *              Icon 3 - 3rd action             (MID)   - Cancel
 *
 * The icon texts should be indirected if anything other than dboxclosef() is to be used.
 */

/*
 * Uses msgs_lookup("save:Save") and "discard:Discard" and "cancel:Cancel"
 */

typedef enum
{
    dboxclose_CancelEscape,         /* escape */
    dboxclose_Save,
    dboxclose_Discard,
    dboxclose_Cancel
} dboxclose_Reply;

extern dboxclose_Reply dboxclosef(const char *question, ...);

extern dboxclose_Reply dboxquitf(const char *question, ...);

/*
 * Uses msgs_lookup("yes:Yes") and "no:No"
 */

typedef enum
{
    dboxquery_YES = 1,
    dboxquery_NO,
    dboxquery_CANCEL                /* escape */
} dboxquery_REPLY;

extern dboxquery_REPLY dboxqueryf(const char *question, ...);
extern dboxquery_REPLY dboxquery(const char *question);

typedef enum
{                
    dbox3way_CancelEscape = 0,      /* escape */
    dbox3way_Answer1,
    dbox3way_Answer2,
    dbox3way_Answer3
} dbox3way_Reply;

extern dbox3way_Reply dbox3wayf(const char *msg1, const char *msg2, const char *msg3, const char *question, ...);

extern void dboxquery_init(void);
                                                        
#endif

/* eof dboxquery.c */
