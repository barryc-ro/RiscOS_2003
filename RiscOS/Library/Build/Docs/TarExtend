Readme


General
	This program is designed to overcome the 100-character limitaton of
the Tar port that we currently use. The basic premise is that it reduces any
pths that are longer than the limit to under the limit. It was written to
allow builds to be archived more easilly whilst at the same time preventing
the limitation; as such it also CRC's the sources and archive. However, it
could also be used for other purposes, for instance backing up someone's hard
disc. It has the advantage that the CRC procrss also means that you can
verify the archive to a high degree of certainty.


Dependencies
	There must be a version of tar and FileCRC present in the library
path of the machine on which this utility is run. The preferred versions of
these tools are:
	tar 1.1o (7-Nov-91)
	FileCRC 2.21
	Perl (V1.151)


Usage.
	The program is called from within the directory that contains the
'root' of whatever you wish to archive.

	archiver -r <root_filename> -a <archivename> [-maxlen length] [-v]
	flags:
	-r root.
	This mandatory flag contains the root filename of the object to be
archived.

	-a archivename
	This mandatory flag contains the filename that the resultatn archive
should be called.

	-maxlen length
	This number gives the maximum length any filepath inside the archive
can be. It has a default value of 100, which is the value that overcomes
tar's limitation. It has a minimum value of 50.

	-v 
	This switches on verbose operation, which displays the name and
length of every file in the archive.

	Example:
	TarExtend -r 03-08 -a 0308atar -maxlen 100 -v


Output
	The program produces three obey files into the same directory as the
tarextend utility:
	arc. This is the main archiver program.
	dearc. This is the main dearchiver program.
	manual. This describes the changes done to the build in the archival
process.


Using the scripts
	To archive a build, drag the 'arc' script to the directory you wish
to archive and then double-click on it. It will then produce two directories,
a 'CRC' directory and a 'DR' dirctory. The archive, along with it's
associated contents file list will go into the 'DR' directory, whilst the
CRC's of the individual sources and of the archive will go into the 'CRC'
directory.

	To dearchive a build, copy the 'dearc' obey file to the place you
wish it to be deachived to. then open th 'dearc' file and alter the
cdname$dir to point to the device (most probably CD) on which the archive is
held. (this may already have bee done manually during the earlier stages).
	Next you simply run the 'dearc' script. It should then check the
archive contents using FileCRC, extract the contents, rename the altered
paths and finally check the individual extracted files using FileCRC. If
there are no errors reprted during this process then you should have a
faithful replica of the original thing that you archived.


