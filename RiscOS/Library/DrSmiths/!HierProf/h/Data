/*
    #   # #             ####                ##
    #   #               #   #              #  #
    #   # #  ###  # ##  #   # # ##   ###   #
    ##### # #   # ##  # ####  ##  # #   # ###  
    #   # # ##### #     #     #     #   #  #
    #   # # #     #     #     #     #   #  #   
    #   # #  ###  #     #     #      ###   #   
    ___________________________________________


Author:		Copyright © 1995, 1996 Julian Smith, Warm Silence Software.
Purpose:	Reading data from HierProf output file.
*/

/*
$Id$
*/

#ifndef __HierProf_Data_h
#define __HierProf_Data_h

#ifndef __HierProf_HierProf_h
	#include "HierProf:HierProf.h"
#endif


typedef struct	{
	unsigned int	lo;
	unsigned int	hi;
	}
	HierProf_lluint;
/*
For 64-bit time^2.
 */

#define HierProf_MAXNESTING	63


typedef struct	{
	int			n;				/* Number of calls	*/
	int			t;				/* Total time		*/
	int			tmin;				/* Min time		*/
	int			tmax;				/* Max time		*/
	HierProf_lluint		tt;				/* Total time^2		*/
	HierProf_ref_type	string[ 1+HierProf_MAXNESTING];	/* Function nesting	*/
	}
	HierProf_nestingblock;
/*
This structure holds all timing information for a particular 'nesting'
of function-calls.

'string' is a zero-terminated array. Each element identifies a
particular function.
 */



typedef struct	{
	const char	*name;
	}
	HierProf_functionblock;



typedef struct	{
	
	int			num_nestingstrings;	/* Number of nestings.	*/
	HierProf_nestingblock*	nestings;		/* Array of nestings,	*/
	
	int			numfns;			/* Number of functions.	*/
	HierProf_functionblock*	functions;		/* Array of functions.	*/
	
	/*
	Note that the first array elements of 'nestings' and 'functions' is unused
	- use nestings[ 1]...nestings[ num_nestingstrings] etc
	*/
	
	unsigned int		tickfreq;
	}
	HierProf_info;
/*
This structure holds all HierProf data.
 */



const char*	HierProf_LoadData( HierProf_info* hpinfo, const char* filename);
/*
Loads data from HierProf output file 'filename' into 'hpinfo'.
Returns NULL if succesfull, or crude error message.
 */


#endif
