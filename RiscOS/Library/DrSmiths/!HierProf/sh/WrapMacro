;
;	#   # #             ####                ##
;	#   #               #   #              #  #
;	#   # #  ###  # ##  #   # # ##   ###   #
;	##### # #   # ##  # ####  ##  # #   # ###
;	#   # # ##### #     #     #     #   #  #
;	#   # # #     #     #     #     #   #  #
;	#   # #  ###  #     #     #      ###   #
;	___________________________________________
;
;
;	Author:		Copyright © 1995 Julian Smith
;	Purpose:	Assembler macro for simple
;			stack-preserving wrapper
;			function.
;
;	Note:		This macro is intended only for
;			use by HierProfOb.
;
;	This wrapper stores r14 in a static local variable - the stack
;	has to be completely unchanged when 'Foo' is called, so we can't
; 	simply push r14 onto the stack.
;
;	To cope with recursive calls of Foo, we detect whether we are
;	alreay threaded. If so, we simply branch directly to Foo.


	MACRO
	HierProfWrapper	$name

	EXPORT	$name
	IMPORT	HierProf__Function_$name

	IMPORT	HierProf__StartClock2
		; extern void	HierProf__StartClock2( const char* functionname);

	IMPORT	HierProf__StopClock2
		; extern void	HierProf__StopClock2( const char* functionname);

$name

	; This is a little convoluted because we need to call $name without
	; changing the stack at all.

	; Check whether local_r14 != 0 - if so, we are already threaded, so
	; we branch straight to original function - $name is being recursive.
	LDR	ip, HierProf_local_r14_$name
	CMP	ip, #0
	BNE	HierProf__Function_$name


	STR	lr, HierProf_local_r14_$name


	; Tell HierProf we are just about to start function $name.
	STMFD	sp!, { a1-a4}
	ADR	a1, HierProf__Name_$name	; HierProf__Name_$name is the string '$name'.
	BL	HierProf__StartClock2
	LDMFD	sp!, { a1-a4}

	; Call $name
	BL	HierProf__Function_$name


	; Tell HierProf we have just finished function $name
	STMFD	sp!, { a1-a4}
	ADR	a1, HierProf__Name_$name
	BL	HierProf__StopClock2

	; Recover stored lr.
	LDR	lr, HierProf_local_r14_$name
	MOV	ip, #0
	STR	ip, HierProf_local_r14_$name

	LDMFD	sp!, { a1-a4}
	MOVS	pc, lr	; Now restores flags... 19 Aug 1996


HierProf__Name_$name = "$name", 0	; This should be readonly data
	ALIGN

HierProf_local_r14_$name
	DCD	0			; This should be read-write data.

	MEND

	END
