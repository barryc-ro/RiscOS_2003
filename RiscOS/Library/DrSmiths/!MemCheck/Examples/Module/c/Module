#include <stdlib.h>
#include <stdio.h>

#include "kernel.h"

#include "Module.h"

#include "MemCheck:MemCheck.h"


#define Desk_UNUSED( x)	x=x

_kernel_oserror*	MCTest_ModuleInitialise( char *cmd_tail, int podule_base, void *pw)
	{
	volatile unsigned int*	i;
	
	printf( "sl = 0x%x, current stack chunk=0x%p\n", Desk_BackTrace_GetSL(), _kernel_current_stack_chunk());
	
	MemCheck_Init();
	MemCheck_RedirectToFilename( tmpnam( NULL));
	
	//return NULL;
	
	if ( * (int*) 0x8000)	printf( "****");
	
	for ( i = (unsigned int*) 0x1C00000; i< (unsigned int*) (0x1c00000+48); i++)	{
		printf( "Address 0x%p, value 0x%x\n", i, *i);
		}
	
	MemCheck_OutputBlocksInfo();
	
	return NULL;
	Desk_UNUSED( cmd_tail);
	Desk_UNUSED( podule_base);
	Desk_UNUSED( pw);
	}



_kernel_oserror*	MCTest_ModuleFinalise( int fatal, int podule, void* pw)
	{
	return NULL;
	
	Desk_UNUSED( fatal);
	Desk_UNUSED( podule);
	Desk_UNUSED( pw);
	}
