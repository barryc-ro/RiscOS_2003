Here is a very simple example program to show MemCheck in operation with
a module written in C.

!Module
~~~~~~~

This is a simple build done with no MemChecking, that deliberately
accesses out of reach areas, and basically does naughty things with the
memory as it initialises. 

Run !Module.RunProg and a small module 'MCTest' will start up. This
module will not actually do anything, except read part of the supervisor
stack. This involves reading memory not actually allocated by the
program, and as such is usually something you would like MemCheck to
catch; in this instance it is perfectly safe however, which is why we
chose it as a demo.

!Mod_MC
~~~~~~~

This is the same module compiled with C version 5, and linked
with the 'MemCheck:o.MC_M' library. When !Mod_MC.RunProg is run,
MemCheck sends information about each illegal access to a file in
<Wimp$ScrapDir> (the filename is set by calling
MemCheck_RedirectToFilename( tmpnam( NULL))) in c.Module.

Note that the diagnostics include source information - this is done by
linking using MemCheck.DDTModLink.

There is no C version 4 version of these utilities.

The two builds be rebuilt by double clicking them. We assume that:

1	Makatic is on Run$Path somewhere.
2	!MemCheck has been seen by the Filer.

If you don't wish to use Makatic, run the makefiles directly with AMU.
