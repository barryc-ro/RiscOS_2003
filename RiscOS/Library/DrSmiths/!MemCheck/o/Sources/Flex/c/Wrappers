#define MemCheck_MEMCHECK
#define __MemCheck_Flex_c

#include "MemCheck:MemCheck.h"

#include "flexlib.flex.h"
#include "MemCheck:Flex.h"


int	MemCheck_Flex__Alloc( flex_ptr anchor, int n)
	{
	MemCheck_checking	oldchecking = MemCheck_SetChecking( 0, 0);
	int			r = flex_alloc( anchor, n);
	if (1==r)	MemCheck_RegisterFlexBlock(anchor, n);
	MemCheck_RestoreChecking( oldchecking);
	return r;
	}

void	MemCheck_Flex__Free( flex_ptr anchor)
	{ 
	MemCheck_checking	oldchecking = MemCheck_SetChecking( 0, 0);
	flex_free( anchor);
	MemCheck_UnRegisterFlexBlock( anchor);
	MemCheck_RestoreChecking( oldchecking);
	}

void	MemCheck_Flex__Init( char* name, int* error_fd)
	{ 
	MemCheck_checking	oldchecking = MemCheck_SetChecking( 0, 0);
	flex_init( name, error_fd);
	MemCheck_RestoreChecking( oldchecking);
	}

int	MemCheck_Flex__Extend( flex_ptr anchor, int newsize)
	{
	MemCheck_checking	oldchecking = MemCheck_SetChecking( 0, 0);
	int			r = flex_extend( anchor, newsize);
	if ( 1==r)	MemCheck_ResizeFlexBlock( anchor, newsize);
	MemCheck_RestoreChecking( oldchecking);
	return r;
	}


int	MemCheck_Flex__MidExtend( flex_ptr anchor, int at, int by)
	{
	MemCheck_checking	oldchecking = MemCheck_SetChecking( 0, 0);
	int			newsize = flex_size( anchor) + by;
	int			r = flex_midextend( anchor, at, by);
	if ( 1==r)	MemCheck_ResizeFlexBlock( anchor, newsize);
	MemCheck_RestoreChecking( oldchecking);
	return r;
	}
