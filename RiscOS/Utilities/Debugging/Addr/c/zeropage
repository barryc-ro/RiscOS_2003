/*******************************************************************
 * File:     zeropage
 * Purpose:  Describe zero page
 * Author:   Justin Fletcher
 * Date:     10 Oct 1999
 ******************************************************************/

#include <stdlib.h>
#include "area.h"

/*********************************************** <c> Gerph *********
 Function:     zp_hwv_describe
 Description:  Describe the hardware vectors
 Parameters:   parent-> the zero page sub-area
               private_data-> the private word
 Returns:      none
 ******************************************************************/
static void zp_hwv_describe(area_t *parent,int private_data)
{
  area_add(parent, 0x0, 0x4,NULL,NULL,0,"Branch Through Zero handler");
  area_add(parent, 0x4, 0x4,NULL,NULL,0,"Undefined Instruction handler");
  area_add(parent, 0x8, 0x4,NULL,NULL,0,"Software Interrupt handler");
  area_add(parent, 0xC, 0x4,NULL,NULL,0,"Prefetch Abort handler");
  area_add(parent,0x10, 0x4,NULL,NULL,0,"Data Abort handler");
  area_add(parent,0x14, 0x4,NULL,NULL,0,"Address Exception handler");
  area_add(parent,0x18, 0x4,NULL,NULL,0,"IRQ handler");
  area_add(parent,0x1C,0xe4,NULL,NULL,0,"FIQ routine");
}

/*********************************************** <c> Gerph *********
 Function:     zp_vdu_describe
 Description:  Describe the vdu workspace
 Parameters:   parent-> the zero page sub-area
               private_data-> the private word
 Returns:      none
 ******************************************************************/
static void zp_vdu_describe(area_t *parent,int private_data)
{
  area_add(parent, 0x1000,0x20   ,NULL,NULL,0,"Foreground ECF pattern or repeated colour");
  area_add(parent, 0x1020,0x20   ,NULL,NULL,0,"Background ECF pattern or repeated colour");
  area_add(parent, 0x1040,0x4    ,NULL,NULL,0,"GCOL action for foreground colour (VDUVar 151)");
  area_add(parent, 0x1044,0x4    ,NULL,NULL,0,"GCOL action for background colour (VDUVar 152)");
  area_add(parent, 0x1048,0x4    ,NULL,NULL,0,"Graphics foreground colour (VDUVar 153)");
  area_add(parent, 0x104C,0x4    ,NULL,NULL,0,"Graphics background colour (VDUVar 154)");
  area_add(parent, 0x1050,0x4    ,NULL,NULL,0,"Left-hand column of the graphics window (VDUVar 128)");
  area_add(parent, 0x1054,0x4    ,NULL,NULL,0,"Bottom row of the graphics window (VDUVar 129)");
  area_add(parent, 0x1058,0x4    ,NULL,NULL,0,"Right-hand column of the graphics window (VDUVar 130)");
  area_add(parent, 0x105C,0x4    ,NULL,NULL,0,"Top row of the graphics window (VDUVar 131)");
  area_add(parent, 0x1063,0x1    ,NULL,NULL,0,"Base of VDU queue");
  area_add(parent, 0x1064,0xC    ,NULL,NULL,0,"Rest of VDU queue");
  area_add(parent, 0x1074,0x4    ,NULL,NULL,0,"Offset of top of VDU queue");
  area_add(parent, 0x1078,0x4    ,NULL,NULL,0,"Address to call when VDU queue full");
  area_add(parent, 0x107C,0x4    ,NULL,NULL,0,"Amount of RAM required by current screen mode");
  area_add(parent, 0x1080,0x4    ,NULL,NULL,0,"X window limit");
  area_add(parent, 0x1084,0x4    ,NULL,NULL,0,"Y window limit");
  area_add(parent, 0x1088,0x4    ,NULL,NULL,0,"Length of a row in pixels");
  area_add(parent, 0x1090,0x4    ,NULL,NULL,0,"Log2 of (LineLength/5)");
  area_add(parent, 0x1094,0x4    ,NULL,NULL,0,"Mode flags");
  area_add(parent, 0x1098,0x4    ,NULL,NULL,0,"X Eigenvalue of pixels");
  area_add(parent, 0x109C,0x4    ,NULL,NULL,0,"Y Eigenvalue of pixels");
  area_add(parent, 0x10A0,0x4    ,NULL,NULL,0,"Log2 of number of bytes per character");
  area_add(parent, 0x10A4,0x4    ,NULL,NULL,0,"Log2 of number of bits per pixel");
  area_add(parent, 0x10A8,0x4    ,NULL,NULL,0,"Default ECF, dependent on bits per pixel.");
  area_add(parent, 0x10AC,0x4    ,NULL,NULL,0,"Maximum text column value");
  area_add(parent, 0x10B0,0x4    ,NULL,NULL,0,"Maximum text row value");
  area_add(parent, 0x10B8,0x4    ,NULL,NULL,0,"Log2 of number of pixels per word");
  area_add(parent, 0x10BC,0x4    ,NULL,NULL,0,"Pointer to current GCOL/PLOT colour codes");
  area_add(parent, 0x10C0,0x4    ,NULL,NULL,0,"Address of the start of screen used by VDU drivers (VDUVar 148)");
  area_add(parent, 0x10C4,0x4    ,NULL,NULL,0,"Number of pixels per word - 1.");
  area_add(parent, 0x10CC,0x4    ,NULL,NULL,0,"Log2 of the number of colours");
  area_add(parent, 0x10D0,0x4    ,NULL,NULL,0,"Log2 of the number of bits by which colours are shifted");
  area_add(parent, 0x10E0,0x4    ,NULL,NULL,0,"Left-hand column of the text window (VDUVar 132)");
  area_add(parent, 0x10E4,0x4    ,NULL,NULL,0,"Bottom row of the text window (VDUVar 133)");
  area_add(parent, 0x10E8,0x4    ,NULL,NULL,0,"Right-hand column of the text window (VDUVar 134)");
  area_add(parent, 0x10EC,0x4    ,NULL,NULL,0,"Top row of the text window (VDUVar 135)");
  area_add(parent, 0x10F0,0x4    ,NULL,NULL,0,"x coordinate of the graphics origin (ec) (VDUVar 136)");
  area_add(parent, 0x10F4,0x4    ,NULL,NULL,0,"y coordinate of the graphics origin (ec) (VDUVar 137)");
  area_add(parent, 0x10F8,0x4    ,NULL,NULL,0,"x coordinate of the graphics cursor (ec) (VDUVar 138)");
  area_add(parent, 0x10FC,0x4    ,NULL,NULL,0,"y coordinate of the graphics cursor (ec) (VDUVar 139)");
  area_add(parent, 0x1100,0x4    ,NULL,NULL,0,"x coordinate of oldest graphics cursor (ic) (VDUVar 140)");
  area_add(parent, 0x1104,0x4    ,NULL,NULL,0,"y coordinate of oldest graphics cursor (ic) (VDUVar 141)");
  area_add(parent, 0x1108,0x4    ,NULL,NULL,0,"x coordinate of previous graphics cursor (ic) (VDUVar 142)");
  area_add(parent, 0x110C,0x4    ,NULL,NULL,0,"y coordinate of previous graphics cursor (ic) (VDUVar 143)");
  area_add(parent, 0x1110,0x4    ,NULL,NULL,0,"x coordinate of the graphics cursor (ic) (VDUVar 144)");
  area_add(parent, 0x1114,0x4    ,NULL,NULL,0,"y coordinate of the graphics cursor (ic) (VDUVar 145)");
  area_add(parent, 0x1118,0x4    ,NULL,NULL,0,"x coordinate of new point (ic) (VDUVar 146)");
  area_add(parent, 0x111C,0x4    ,NULL,NULL,0,"y coordinate of new point (ic) (VDUVar 147)");
  area_add(parent, 0x1120,0x4    ,NULL,NULL,0,"Text foreground colour (VDUVar 155)");
  area_add(parent, 0x1124,0x4    ,NULL,NULL,0,"Text background colour (VDUVar 156)");
  area_add(parent, 0x1128,0x4    ,NULL,NULL,0,"Output text cursor X coordinates");
  area_add(parent, 0x112C,0x4    ,NULL,NULL,0,"Output text cursor Y coordinates");
  area_add(parent, 0x1130,0x4    ,NULL,NULL,0,"Absolute address on the screen of output cursor");
  area_add(parent, 0x1134,0x4    ,NULL,NULL,0,"Input text cursor X coordinates");
  area_add(parent, 0x1138,0x4    ,NULL,NULL,0,"Input text cursor Y coordinates");
  area_add(parent, 0x113C,0x4    ,NULL,NULL,0,"Absolute address on the screen of input cursor");
  area_add(parent, 0x1140,0x4    ,NULL,NULL,0,"[referred to by VDU 23,8]");
  area_add(parent, 0x1144,0x4    ,NULL,NULL,0,"Number of lines left to clear in the text block");
  area_add(parent, 0x114C,0x1    ,NULL,NULL,0,"X Offset of the near corner for VDU 23,8");
  area_add(parent, 0x114D,0x1    ,NULL,NULL,0,"Y Offset of the near corner for VDU 23,8");
  area_add(parent, 0x114E,0x1    ,NULL,NULL,0,"X Offset of the text cursor in the current text window");
  area_add(parent, 0x114F,0x1    ,NULL,NULL,0,"Y Offset of the text cursor in the current text window");
  area_add(parent, 0x1150,0x1    ,NULL,NULL,0,"X Offset of the far corner for VDU 23,8");
  area_add(parent, 0x1151,0x1    ,NULL,NULL,0,"Y Offset of the far corner for VDU 23,8");
  area_add(parent, 0x1154,0x1    ,NULL,NULL,0,"X start coordinate for the VDU 23,8 block");
  area_add(parent, 0x1155,0x1    ,NULL,NULL,0,"Y start coordinate for the VDU 23,8 block");
  area_add(parent, 0x1156,0x1    ,NULL,NULL,0,"X end coordinate for the VDU 23,8 block");
  area_add(parent, 0x1157,0x1    ,NULL,NULL,0,"Y end coordinate for the VDU 23,8 block");
  area_add(parent, 0x1158,0x4    ,NULL,NULL,0,"Cursor mask");
  area_add(parent, 0x115C,0x4    ,NULL,NULL,0,"Relative address of the top line of the copy cursor");
  area_add(parent, 0x1160,0x4    ,NULL,NULL,0,"Relative address of the bottom line of the copy cursor");
  area_add(parent, 0x1164,0x4    ,NULL,NULL,0,"Cursor counter");
  area_add(parent, 0x1168,0x4    ,NULL,NULL,0,"Delay on cursor toggling (in Vsyncs)");
  area_add(parent, 0x116C,0x4    ,NULL,NULL,0,"Actual value given on last VDU 23,0,10");
  area_add(parent, 0x1170,0x4    ,NULL,NULL,0,"EOR mask to invert pixels on screen for current mode");
  area_add(parent, 0x1174,0x4    ,NULL,NULL,0,"Address of routine to display either cursor in this mode");
  area_add(parent, 0x1178,0x4    ,NULL,NULL,0,"Address of the start of screen used by display hardware (VDUVar 149)");
  area_add(parent, 0x1184,0x4    ,NULL,NULL,0,"Highest logical colour number available in this mode");
  area_add(parent, 0x118C,0x4    ,NULL,NULL,0,"Current screen mode or pointer to mode s}");
}

/*********************************************** <c> Gerph *********
 Function:     zp_describe
 Description:  Describe the parts of zero page
 Parameters:   parent-> the zero page area
               private_data-> the private word
 Returns:      none
 ******************************************************************/
void zp_describe(area_t *parent,int private_data)
{
  area_add(parent,      0x0,     0x100,zp_hwv_describe,NULL,0,"Hardware vectors");
  area_add(parent,   0x1000,    0x10D0,zp_vdu_describe,NULL,0,"VDU workspace");
  area_add(parent,   0x4000,    0x4000,NULL,NULL,0,"Scratch space");
}
