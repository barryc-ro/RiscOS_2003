/* debug.c */


#include <stdio.h>
#include <stdarg.h>
#include <string.h>

#include "const.h"
#include "swis.h"
#include "toolbox.h"
#include "debug.h"
#include "error.h"


#if DEBUG

static FILE *f = NULL;


void debug_file (char *filename)
{
    if (f)
        fclose (f);
    if (filename)
        f = fopen (filename, "w");
}


int dprintf (char *format, ...)
{
    int ret = 0;
    va_list list;

    if (f)
    {
        va_start (list, format);
        ret = vfprintf (f, format, list);
        va_end (list);

        fflush(f);
    }

    if (!_swix (OS_Module, I0|I1, 18, "DebugIt"))
    {
        char s[300];
        char *t = s;

        va_start (list, format);
        ret = vsprintf (s, format, list);
        va_end (list);

        while (*t)
        {
            _swix (DebugIt_WriteC, I0, *t);
            t++;
        }
    }

    return ret;
}


void display (char *format, ...)

  /* like printf, but displays the result in a wimp "error" box */

{
    char s[300];  /* allows a little licence */
    va_list ap;
    error e;

    va_start (ap, format);
    vsprintf (s, format, ap);
    va_end (ap);

    e.errnum = 0;
    e.errmess[251] = 0;
    strncpy (e.errmess, s, 251);

    _swi ( Wimp_ReportError, I0|I1|I2,
              (int)&e,
              1+16,          /* just an OK button, omit "Error from" */
              "Debug" );

    return;
}


#endif
