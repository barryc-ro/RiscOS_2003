#include "armdefs.h"
#include "armemu.h"
#include "kernel.h"
#include "string.h"
#include "stdarg.h"
#include <stdio.h>
#include "swis.h"

ARMul_State *state;

int main(int argc,char **argv)
{
  int glue;

  ARMul_EmulateInit();
  state = ARMul_NewState() ;
  ARMul_SelectProcessor(state, ARM700) ;
  state->prog32Sig = 1;
  state->data32Sig = 1;

  ARMul_Reset(state) ;
  copro(state);

  ARMMODE = SVC32MODE;
  ARMul_SetPC(state,0);
  glue = emul_init(argc,argv,state);

  if (initialise_memory_management(state)) exit(1);

  //glue_reset_cpu();
  if (glue & 1) wimp_armul8(glue & 2);

  while (state->Emulate != STOP) {
    state->Emulate = RUN ;
    if (ARMul_MODE32BIT)
       ARMul_Emulate32(state) ;
    else
       ARMul_Emulate26(state) ;
  }

}
