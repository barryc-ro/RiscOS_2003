# Project:   RPEMarmu


# Toolflags:
CCflags = -c -depend !Depend -ff -Itbox:,C: -DDEBUG -throwback -Wa -Otime
C++flags = -c -depend !Depend -IC: -throwback
Linkflags = -aif -c++ -o $@ 
ObjAsmflags = -throwback -NoCache -depend !Depend
CMHGflags = -depend !Depend -throwback -IC:
LibFileflags = -c -o $@
Squeezeflags = -o $@


# Final targets:
@.rpcemf:   @.o.armcopro @.o.armemu26 @.o.armemu32 @.o.armsupp @.o.COMBO \
        @.o.main @.o.armulator @.o.iic @.o.IOMD @.o.keyboard @.o.memory @.o.Video c:o.stubs \
        tbox:o.toolboxlib tbox:o.wimplib @.o.utils @.o.asm @.o.gui tbox:o.eventlib @.o.init @.o.EASI \
        @.o.IDE @.o.floppy @.o.MMUv3 @.o.printer @.o.TestAdap @.o.FPA 
        Link $(Linkflags) @.o.armcopro @.o.armemu26 @.o.armemu32 @.o.armsupp \
        @.o.COMBO @.o.main @.o.armulator @.o.iic @.o.IOMD @.o.keyboard @.o.memory @.o.Video \
        c:o.stubs tbox:o.toolboxlib tbox:o.wimplib @.o.utils @.o.asm @.o.gui tbox:o.eventlib \
        @.o.init @.o.EASI @.o.IDE @.o.floppy @.o.MMUv3 @.o.printer @.o.TestAdap @.o.FPA 


# User-editable dependencies:


# Static dependencies:
@.o.armcopro:   @.Armulator.c.armcopro
        cc $(ccflags) -o @.o.armcopro @.Armulator.c.armcopro 
@.o.armemu26:   @.Armulator.c.armemu26
        cc $(ccflags) -o @.o.armemu26 @.Armulator.c.armemu26 
@.o.armemu32:   @.Armulator.c.armemu32
        cc $(ccflags) -o @.o.armemu32 @.Armulator.c.armemu32 
@.o.armsupp:   @.Armulator.c.armsupp
        cc $(ccflags) -o @.o.armsupp @.Armulator.c.armsupp 
@.o.main:   @.Armulator.c.main
        cc $(ccflags) -o @.o.main @.Armulator.c.main 
@.o.armulator:   @.GLUE.c.armulator
        cc $(ccflags) -o @.o.armulator @.GLUE.c.armulator 
@.o.iic:   @.HW.c.iic
        cc $(ccflags) -o @.o.iic @.HW.c.iic 
@.o.IOMD:   @.HW.c.IOMD
        cc $(ccflags) -o @.o.IOMD @.HW.c.IOMD 
@.o.keyboard:   @.HW.c.keyboard
        cc $(ccflags) -o @.o.keyboard @.HW.c.keyboard 
@.o.memory:   @.HW.c.memory
        cc $(ccflags) -o @.o.memory @.HW.c.memory 
@.o.Video:   @.HW.c.Video
        cc $(ccflags) -o @.o.Video @.HW.c.Video 
@.o.utils:   @.c.utils
        cc $(ccflags) -o @.o.utils @.c.utils 
@.o.asm:   @.s.asm
        objasm $(objasmflags) -from @.s.asm -to @.o.asm
@.o.gui:   @.GUI.c.gui
        cc $(ccflags) -o @.o.gui @.GUI.c.gui 
@.o.init:   @.c.init
        cc $(ccflags) -o @.o.init @.c.init 
@.o.COMBO:   @.HW.c.COMBO
        cc $(ccflags) -o @.o.COMBO @.HW.c.COMBO 
@.o.EASI:   @.HW.c.EASI
        cc $(ccflags) -o @.o.EASI @.HW.c.EASI 
@.o.IDE:   @.HW.c.IDE
        cc $(ccflags) -o @.o.IDE @.HW.c.IDE 
@.o.floppy:   @.HW.c.floppy
        cc $(ccflags) -o @.o.floppy @.HW.c.floppy 
@.o.MMUv3:   @.GLUE.c.MMUv3
        cc $(ccflags) -o @.o.MMUv3 @.GLUE.c.MMUv3 
@.o.printer:   @.HW.c.printer
        cc $(ccflags) -o @.o.printer @.HW.c.printer 
@.o.TestAdap:   @.HW.c.TestAdap
        cc $(ccflags) -o @.o.TestAdap @.HW.c.TestAdap 
@.o.FPA:   @.GLUE.c.FPA
        cc $(ccflags) -o @.o.FPA @.GLUE.c.FPA 


# Dynamic dependencies:
o.asm: s.asm
o.init:	c.init
o.init:	C:h.stdio
o.init:	C:h.string
o.MMUv3:	GLUE.c.MMUv3
o.MMUv3:	GLUE.h.MMUv3
o.MMUv3:	GLUE.^.HW.h.memory
o.TestAdap:	HW.c.TestAdap
o.TestAdap:	C:h.stdio
o.COMBO: HW.c.COMBO C:h.stdio C:h.stdlib HW.h.hwstate C:h.stdio
o.iic: HW.c.iic HW.h.hwstate C:h.stdio C:h.stdio C:h.stdlib h.utils C:h.swis C:h.kernel
o.IOMD: HW.c.IOMD C:h.stdio C:h.stdlib tbox:h.window C:h.kernel tbox:h.toolbox tbox:h.wimp tbox:h.gadgets HW.h.hwstate C:h.stdio h.utils
o.keyboard: HW.c.keyboard C:h.stdlib HW.h.hwstate C:h.stdio h.utils
o.memory: HW.c.memory C:h.stdio h.utils C:h.kernel C:h.swis C:h.string C:h.stdlib C:h.stdarg tbox:h.wimp tbox:h.wimplib HW.h.memory
o.Video: HW.c.Video C:h.stdio C:h.stdlib C:h.string C:h.kernel C:h.swis tbox:h.wimp tbox:h.saveas tbox:h.toolbox tbox:h.window tbox:h.gadgets h.utils HW.h.memory
o.utils: c.utils C:h.stdio C:h.kernel C:h.swis C:h.string C:h.stdlib C:h.stdarg
o.gui: GUI.c.gui tbox:h.toolbox C:h.kernel tbox:h.wimp tbox:h.window tbox:h.gadgets tbox:h.saveas tbox:h.iconbar tbox:h.wimplib tbox:h.event C:h.swis GUI.^.HW.h.hwstate C:h.stdio
o.EASI: HW.c.EASI C:h.stdio HW.h.hwstate C:h.stdio
o.IDE: HW.c.IDE C:h.stdio C:h.stdlib C:h.string HW.h.hwstate C:h.stdio h.utils
o.floppy: HW.c.floppy C:h.stdio C:h.stdlib HW.h.hwstate C:h.stdio C:h.swis C:h.kernel h.utils
o.printer: HW.c.printer C:h.stdio HW.h.hwstate C:h.stdio
o.armsupp: Armulator.c.armsupp Armulator.h.armdefs Armulator.h.armemu
o.main: Armulator.c.main Armulator.h.armdefs Armulator.h.armemu C:h.kernel C:h.string C:h.stdarg C:h.swis
o.FPA: GLUE.c.FPA GLUE.^.Armulator.h.armdefs GLUE.^.Armulator.h.armemu GLUE.h.FPA
o.armemu32: Armulator.c.armemu32 Armulator.h.armdefs Armulator.h.armemu
o.armcopro: Armulator.c.armcopro Armulator.h.armdefs
o.armemu26: Armulator.c.armemu26 Armulator.h.armdefs Armulator.h.armemu
o.armulator: GLUE.c.armulator GLUE.^.Armulator.h.armdefs GLUE.^.Armulator.h.armemu GLUE.h.FPA C:h.kernel C:h.string C:h.stdarg C:h.swis
