/**************************************************************************\
*                                                                          *
* ARMUL8 - an ARM8 emulator                                                *
* =========================                                                *
*                                                                          *
* Author:              D.J.Seal                                            *
* Development started: 12 January 1994                                     *
* Version:             Pre-release                                         *
*                                                                          *
* Copyright (C) Advanced RISC Machines Limited, 1994. All rights reserved. *
*                                                                          *
\**************************************************************************/
/*
* Revising $Author$  
* RCS $Revision$  
* Checkin $Date$
*/
#ifndef WBUF
#define WBUF
/* general type definitions                                                */
#include "ram.h"

#ifdef __WBUF__

/* system include files                                                    */

/* local include files                                                     */
#include "defs.h"

/* local definitions of write buffer parameters                            */
#define WBUF_A_FIFO_DEPTH    4 /* default depth of the address FIFO        */
#define WBUF_D_FIFO_DEPTH    8 /* default depth of the data FIFO           */
#define WBUF_NSEQ_MEM_ACCESS 8 /* default #phases to r/w non-seq data      */
#define WBUF_SEQ_MEM_ACCESS  4 /* default #phases to r/w sequential data   */
#define WBUD_ADDRESS_COMPARE 1 /* default do address comparison in A-FIFO  */
#define WBUF_WRITE_THROUGH   0 /* don't act as a "write-through" buffer    */
#define WBUF_USE_COMPARISON  1 /* use address comparison as default        */
#define WBUF_SLOT_EMPTY      2 /* indicates empty slot in FIFO             */

typedef struct _wbuf {
#if ((WBUF_A_FIFO_DEPTH == 0) || (WBUF_D_FIFO_DEPTH == 0)) /* No WB at all!*/
  unsigned32 aFifo;
  unsigned32 dFifo;
  unsigned int seq;
#else
  unsigned32 aFifo[WBUF_A_FIFO_DEPTH]; /* the write buffer's address FIFO  */
  unsigned32 dFifo[WBUF_D_FIFO_DEPTH]; /* the write buffer's data FIFO     */
  unsigned int seq[WBUF_D_FIFO_DEPTH]; /* indicator of sequential data     */
#endif
} WBuf;

typedef struct _wbuf_stats {
  double averageNumOfPhasesForNonSeq; /* average #phases for non-seq write */
  double averageNumOfSeqWordsToBuf;   /* average #sequential words/phase   */
} WBufStatistics;

#else  /* __WBUF__ not defined                                             */

#ifdef LINT

extern void wb_init_buffer();      /* initialises the WB data structure    */
extern int wb_compare_addresses(); /* compares a addr with the A-FIFO      */
extern int wb_store_in_fifo();     /* stores the data+addr in the WB       */
extern int wb_write_data();        /* writes the first entry & updates FIFO*/
extern int wb_read_data();         /* reads data from memory & perform chks*/
extern int wb_access_time();       /* returns #phases to wait for mem r/w  */
extern unsigned32 wb_read_word();  /* returns last loaded word read from M */
extern MemoryByte wb_read_byte();  /* returns last loaded byte read from M */
extern int db_writebuf();          /* general purpose debugging function   */

#else  /* LINT not defined                                                 */

extern void wb_init_buffer(void); 
extern int wb_compare_addresses(unsigned32);
extern int wb_store_in_fifo(unsigned32, unsigned32);
extern int wb_write_data(void);
extern int wb_read_data(unsigned32, int); 
extern int wb_access_time(void);
extern unsigned32 wb_read_word(void); 
extern MemoryByte wb_read_byte(void); 
extern int db_writebuf(int);

#endif /* LINT                                                             */

#endif /* __WBUF__                                                         */

#endif
