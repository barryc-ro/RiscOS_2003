/**************************************************************************\
*                                                                          *
* ARMUL8 - an ARM8 emulator                                                *
* =========================                                                *
*                                                                          *
* Author:              D.J.Seal                                            *
* Development started: 12 January 1994                                     *
* Version:             Pre-release                                         *
* Revising $Author$  
* RCS $Revision$  
* Checkin $Date$
*                                                                          *
* Copyright (C) Advanced RISC Machines Limited, 1994. All rights reserved. *
*                                                                          *
\**************************************************************************/

/**************************************************************************\
*                                                                          *
* coproc_i.h: definition of the coprocessors' internal "state" data        *
*   structure.                                                             *
*                                                                          *
\**************************************************************************/

#ifndef COPROC_I
#define COPROC_I

/* Variables representing the coprocessors' internal state.               */

typedef struct CoprocInternalState {

    /* DECODE stage pipeline variables */
    unsigned32 cinstruct_D;    /* Decode stage instruction                */ 
    unsigned   citype_D;       /* Type of Decode stage instruction        */
    unsigned   wait_D;         /* How many cycles to wait in Execute      */

    /* EXECUTE stage pipeline variables */
    unsigned32 cinstruct_E;    /* Execute stage instruction               */ 
    unsigned   citype_E;       /* Type of Execute stage instruction       */
    unsigned   wait_E;         /* How many more cycles to wait in Execute */
    unsigned32 cdata_E;        /* Holds CData for possible use next cycle */
    unsigned   ready_E;        /* Whether instruction will look at        */
                               /*  CExecute next cycle to see whether it  */
                               /*  should be executed                     */

    /* Other variables */
    unsigned32 regs[16][16];   /* The Coprocessor register bank           */
    unsigned   interlocked;    /* Phase-delayed ARM8_Coproc.Interlocked   */
    unsigned   realcycle;      /* TRUE if this is a genuine cycle; FALSE  */
                               /*  if it just an extension of the last    */
                               /*  cycle's ph2 because of NConfirm.       */
    unsigned   cexecute;       /* Latch for CExecute value, which now     */
                               /*  occurs one phase earlier than it did   */
                               /*  originally.                            */
 
  } CoprocInternalState;

/* Possible values for the citype_X "type of instruction" variables.      */
/* citype_X = CITYPE_NONE indicates either that the instruction is not a  */
/* valid coprocessor instruction, or that it is one, but it requires no   */
/* further processing.                                                    */ 

#define CITYPE_NONE 0
#define CITYPE_MRC  1
#define CITYPE_MCR  2
#define CITYPE_STC  3
#define CITYPE_LDC  4
#define CITYPE_CDP  5

#endif
