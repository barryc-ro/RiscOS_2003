/* LinkUp L7205 memory map
 * DR Ellis Mon 24th July 2000
 *
 *  0x00000000 ...0x0fffffff  Static Memory Interface CS0 (or on-chip ROM)
 *  0x10000000 ...0x3fffffff  Static memory and PC Card Interface
 *  0x40000000 ...0x4000ffff  On-chip ROM
 *  0x40010000 ...0x5fffffff  Reserved
 *  0x60000000 ...0x7fffffff  On-chip RAM
 *  0x80000000 ...0x8fffffff  Peripherals
 *  0x90000000 ...0x9fffffff  APB Peripherals
 *  0xa0000000 ...0xcfffffff  Reserved
 *  0xd0000000 ...0xdfffffff  SDRAM Interface Registers
 *  0xe0000000 ...0xefffffff  SDRAM Mode Register (in SDRAM)
 *  0xf0000000 ...0xffffffff  SDRAM Memory
 */

#include "Bus.h"

/* These define the top nybble for various areas of memory */
#define L7205_MEM_SEL                         (0xf0000000)
#define L7205_SRAM_ROM                        (0x00000000)
#define L7205_SRAM_PCCARD1                    (0x10000000)
#define L7205_SRAM_PCCARD2                    (0x20000000)
#define L7205_SRAM_PCCARD3                    (0x30000000)
#define L7205_ROM                             (0x40000000)
#define L7205_ON_CHIP_SRAM1                   (0x60000000)
#define L7205_ON_CHIP_SRAM2                   (0x70000000)

#define L7205_COMMS_ASB_BRIDGE                (0x80000000)

/* The Comms APB bridge is on the Comms ASB */

#define L7205_SYSTEM_APB_BRIDGE               (0x90000000)

#define L7205_RESERVED2                       (0xa0000000)
#define L7205_RESERVED3                       (0xb0000000)
#define L7205_RESERVED4                       (0xc0000000)
#define L7205_SDRAM_INT_REGISTERS             (0xd0000000)
#define L7205_SDRAM_MODE_REG                  (0xe0000000)

/* The memory is centred around 0x0fffffff so during accesses we need to
   identify whether we're accessing an odd or even bank */
#define L7205_SDRAM_SELECT                    (0x01000000)
#define L7205_SDRAM                           (0xf0000000)

// SDRAM Controller Register Map
typedef struct {
  int  SDRAMCFG;    // Configuration register
  int  SDRAMRFSH;   // Refresh timer register
  int  SDRAMWBFT;   // Write buffer flush timer
} SDRAM_controller_registers;

extern unsigned int *RAM,*ROM,RAMSIZE,ROMSIZE;
extern Bus systemASB;

int initialise_memory_management(void *state);
int memory_store_byte (unsigned int, unsigned int);
int memory_store_word (unsigned int, unsigned int);
int memory_load_byte (unsigned char*, unsigned int);
int memory_load_word (unsigned int*, unsigned int);
