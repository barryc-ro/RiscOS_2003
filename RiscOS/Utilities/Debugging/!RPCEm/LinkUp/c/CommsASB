/* Interface to the CommsASB of the L7205
 * Tue 25th July 2000 DR Ellis
 */
#include "CommsASB.h"
#include "CommsAPB.h"
#include "utils.h"

int PMU[0xff];

int CommsASB_init (void) {
    fout ("Initialising CommsASB\n");
    return CommsAPB_init ();
}

AbortOrNot
CommsASB_clock (
    BusState*   state
) {
    switch (state->address & L7205_COMMS_ASB_MASK) {
    case L7205_GPIODMA_BASE: break;
    case L7205_SMCARD_BASE:  break;
    case L7205_M2M_BASE:     break;

    case L7205_COMMS_APB_BRIDGE:
        return CommsAPB_clock (state);
        break;

    case L7205_SYSTEM_BASE:

        // At the moment we're only simulating the clock.
        if (state->write) switch (state->address & 0xff) {
        case SYS_CLOCK_ENABLE:
            PMU[SYS_CLOCK_ENABLE/4] = state->data;
            PMU[SYS_CLOCK_ESYNC/4] = state->data;
            break;
        case SYS_CLOCK_ESYNC:
            break;
        case SYS_CLOCK_SELECT:
            break;
        } else {
            state->data = PMU[(state->address & 0xff) / 4];
        }
        return DataSuccess;
        break;

    default:
        fout ("Unmapped ComsmASB access\n");
        replay_regs ();
        return DataAbort;
        break;
    }

    fout ("CommsASB access %x\n", state->address);
    replay_regs ();
    return DataSuccess;
}
