# Project:   RPEMarmu


# Toolflags:
CC = cc
CCflags = -c -depend !Depend -ff -Itbox:,C: -DDEBUG -throwback -Wa -Otime $(CCEXTRA) -g
C++flags = -c -depend !Depend -IC: -throwback
Linkflags = -aif $(LinkExtra) -c++ -o $@ 
ObjAsmflags = -throwback -NoCache -depend !Depend
CMHGflags = -depend !Depend -throwback -IC:
LibFileflags = -c -o $@
Squeezeflags = -o $@

LIBS = \
c:o.stubs \
tbox:o.toolboxlib \
tbox:o.wimplib \
tbox:o.eventlib	

CPU = \
Armulator.o.armcopro \
Armulator.o.armemu26 \
Armulator.o.armemu32 \
Armulator.o.armsupp \
GLUE.o.armulator \
GLUE.o.FPA \
GLUE.o.MMUv3

BUSES =	\
LinkUp.o.memory	\
LinkUp.o.CommsASB \
LinkUp.o.SystemAPB \
LinkUp.o.CommsAPB

FUNCTIONS = \
LinkUp.o.MLCD \
LinkUp.o.UART

MISC = \
utils.o	\
Armulator.o.main \
init.o \
LinkUp.GUI.gui.o \
HW.Video.o

OBJS = $(CPU) $(BUSES) $(MISC) $(FUNCTIONS)

#@.o.COMBO
#@.o.iic
#@.o.IOMD
#@.o.keyboard
#@.o.Video
#@.o.asm
#@.o.EASI
#@.o.IDE
#@.o.floppy
#@.o.printer
#@.o.TestAdap

# Final targets:
@.!runimage: $(OBJS)
        Link $(Linkflags) $(LIBS) $(OBJS) 

.SUFFIXES: .c .o .s

# User-editable dependencies:


# Static dependencies:
.c.o:; $(CC) $(CCflags) -o $@ $<


#@.o.armcopro:   @.Armulator.c.armcopro
#        cc $(ccflags) -o @.o.armcopro @.Armulator.c.armcopro 
#@.o.armemu26:   @.Armulator.c.armemu26
#        cc $(ccflags) -o @.o.armemu26 @.Armulator.c.armemu26 
#@.o.armemu32:   @.Armulator.c.armemu32
#        cc $(ccflags) -o @.o.armemu32 @.Armulator.c.armemu32 
#@.o.armsupp:   @.Armulator.c.armsupp
#        cc $(ccflags) -o @.o.armsupp @.Armulator.c.armsupp 
#@.o.main:   @.Armulator.c.main
#        cc $(ccflags) -o @.o.main @.Armulator.c.main 
@.o.armulator:   @.GLUE.c.armulator
        cc $(ccflags) -o @.o.armulator @.GLUE.c.armulator 
#@.o.iic:   @.HW.c.iic
#        cc $(ccflags) -o @.o.iic @.HW.c.iic 
#@.o.IOMD:   @.HW.c.IOMD
#        cc $(ccflags) -o @.o.IOMD @.HW.c.IOMD 
#@.o.keyboard:   @.HW.c.keyboard
#        cc $(ccflags) -o @.o.keyboard @.HW.c.keyboard 
#@.LinkUp.o.memory:   @.LinkUp.c.memory
#        cc $(ccflags) -o @.o.memory @.HW.c.memory 
#@.o.Video:   @.HW.c.Video
#        cc $(ccflags) -o @.o.Video @.HW.c.Video 
#@.o.utils:   @.c.utils
#        cc $(ccflags) -o @.o.utils @.c.utils 
#@.o.asm:   @.s.asm
#        objasm $(objasmflags) -from @.s.asm -to @.o.asm
#@.o.gui:   @.GUI.c.gui
#        cc $(ccflags) -o @.o.gui @.GUI.c.gui 
#@.o.init:   @.c.init
#        cc $(ccflags) -o @.o.init @.c.init 
#@.o.COMBO:   @.HW.c.COMBO
#        cc $(ccflags) -o @.o.COMBO @.HW.c.COMBO 
#@.o.EASI:   @.HW.c.EASI
#        cc $(ccflags) -o @.o.EASI @.HW.c.EASI 
#@.o.IDE:   @.HW.c.IDE
#        cc $(ccflags) -o @.o.IDE @.HW.c.IDE 
#@.o.floppy:   @.HW.c.floppy
#        cc $(ccflags) -o @.o.floppy @.HW.c.floppy 
@.o.MMUv3:   @.GLUE.c.MMUv3
        cc $(ccflags) -o @.o.MMUv3 @.GLUE.c.MMUv3 
#@.o.printer:   @.HW.c.printer
#        cc $(ccflags) -o @.o.printer @.HW.c.printer 
#@.o.TestAdap:   @.HW.c.TestAdap
#        cc $(ccflags) -o @.o.TestAdap @.HW.c.TestAdap 
#@.o.FPA:   @.GLUE.c.FPA
#        cc $(ccflags) -o @.o.FPA @.GLUE.c.FPA 
#@.LinkUp.o.FPA:   @.LinkUp.c.
#        cc $(ccflags) -o @.o.FPA @.GLUE.c.FPA 
#@.LinkUp.o.FPA:   @.GLUE.c.FPA
#        cc $(ccflags) -o @.o.FPA @.GLUE.c.FPA 




# Dynamic dependencies:
o.TestAdap:	HW.c.TestAdap
o.TestAdap:	C:h.stdio
o.armcopro: Armulator.c.armcopro Armulator.h.armdefs
o.armemu26: Armulator.c.armemu26 Armulator.h.armdefs Armulator.h.armemu
o.armemu32: Armulator.c.armemu32 Armulator.h.armdefs Armulator.h.armemu
o.armsupp: Armulator.c.armsupp Armulator.h.armdefs Armulator.h.armemu
o.COMBO: HW.c.COMBO C:h.stdio C:h.stdlib HW.h.hwstate C:h.stdio
o.main: Armulator.c.main Armulator.h.armdefs Armulator.h.armemu C:h.kernel C:h.string C:h.stdarg C:h.swis
o.iic: HW.c.iic HW.h.hwstate C:h.stdio C:h.stdio C:h.stdlib h.utils C:h.swis C:h.kernel
o.IOMD: HW.c.IOMD C:h.stdio C:h.stdlib tbox:h.window C:h.kernel tbox:h.toolbox tbox:h.wimp tbox:h.gadgets HW.h.hwstate C:h.stdio h.utils
o.keyboard: HW.c.keyboard C:h.stdlib HW.h.hwstate C:h.stdio h.utils
o.memory: HW.c.memory C:h.stdio h.utils C:h.kernel C:h.swis C:h.string C:h.stdlib C:h.stdarg tbox:h.wimp tbox:h.wimplib HW.h.memory
o.asm: s.asm
o.gui: GUI.c.gui tbox:h.toolbox C:h.kernel tbox:h.wimp tbox:h.window tbox:h.gadgets tbox:h.saveas tbox:h.iconbar tbox:h.wimplib tbox:h.event C:h.swis GUI.^.HW.h.hwstate C:h.stdio
o.EASI: HW.c.EASI C:h.stdio HW.h.hwstate C:h.stdio
o.IDE: HW.c.IDE C:h.stdio C:h.stdlib C:h.string HW.h.hwstate C:h.stdio h.utils
o.floppy: HW.c.floppy C:h.stdio C:h.stdlib HW.h.hwstate C:h.stdio C:h.swis C:h.kernel h.utils
o.MMUv3: GLUE.c.MMUv3 GLUE.h.MMUv3 GLUE.^.HW.h.memory
o.printer: HW.c.printer C:h.stdio HW.h.hwstate C:h.stdio
o.FPA: GLUE.c.FPA GLUE.^.Armulator.h.armdefs GLUE.^.Armulator.h.armemu GLUE.h.FPA
o.Video: HW.c.Video C:h.stdio C:h.stdlib C:h.string C:h.kernel C:h.swis tbox:h.wimp tbox:h.saveas tbox:h.toolbox tbox:h.window tbox:h.gadgets h.utils HW.h.memory
o.armulator: GLUE.c.armulator GLUE.^.Armulator.h.armdefs GLUE.^.Armulator.h.armemu GLUE.h.FPA C:h.kernel C:h.string C:h.stdarg C:h.swis
Armulator.o.armemu26: Armulator.c.armemu26 Armulator.h.armdefs Armulator.h.armemu
Armulator.o.armemu32: Armulator.c.armemu32 Armulator.h.armdefs Armulator.h.armemu
GLUE.o.FPA: GLUE.c.FPA GLUE.^.Armulator.h.armdefs GLUE.^.Armulator.h.armemu GLUE.h.FPA
o.init: c.init C:h.stdio C:h.string
GLUE.o.MMUv3: GLUE.c.MMUv3 GLUE.h.MMUv3 GLUE.^.HW.h.memory
o.utils: c.utils C:h.stdio C:h.kernel C:h.swis C:h.string C:h.stdlib C:h.stdarg
LinkUp.o.CommsASB: LinkUp.c.CommsASB LinkUp.h.CommsASB LinkUp.h.Bus LinkUp.h.CommsAPB LinkUp.h.Bus h.utils
LinkUp.o.CommsAPB: LinkUp.c.CommsAPB LinkUp.h.CommsAPB LinkUp.h.Bus LinkUp.h.MLCD LinkUp.h.Bus h.utils LinkUp.h.memory LinkUp.h.Bus
LinkUp.o.UART: LinkUp.c.UART LinkUp.h.UART LinkUp.h.Bus h.utils
LinkUp.o.SystemAPB: LinkUp.c.SystemAPB LinkUp.h.SystemAPB LinkUp.h.Bus h.utils LinkUp.h.memory LinkUp.h.Bus
LinkUp.GUI.o.gui: LinkUp.GUI.c.gui tbox:h.toolbox C:h.kernel tbox:h.wimp tbox:h.window tbox:h.gadgets tbox:h.saveas tbox:h.iconbar tbox:h.wimplib tbox:h.event C:h.swis LinkUp.GUI.^.h.mlcd LinkUp.GUI.^.h.Bus h.utils LinkUp.GUI.^.h.CommsAPB LinkUp.GUI.^.h.Bus LinkUp.GUI.^.h.CommsASB LinkUp.GUI.^.h.Bus LinkUp.GUI.^.h.memory LinkUp.GUI.^.h.Bus LinkUp.GUI.^.h.SystemAPB LinkUp.GUI.^.h.Bus
GLUE.o.armulator: GLUE.c.armulator GLUE.^.Armulator.h.armdefs GLUE.^.Armulator.h.armemu GLUE.h.FPA C:h.kernel C:h.string C:h.stdarg C:h.swis
LinkUp.o.memory: LinkUp.c.memory LinkUp.h.memory LinkUp.h.Bus LinkUp.h.Bus LinkUp.h.CommsASB LinkUp.h.Bus LinkUp.h.SystemAPB LinkUp.h.Bus HW.h.Video tbox:h.wimp h.utils C:h.swis C:h.kernel tbox:h.wimp C:h.stdlib LinkUp.h.MLCD LinkUp.h.Bus
HW.o.Video: HW.c.Video C:h.stdio C:h.stdlib C:h.string C:h.kernel C:h.swis tbox:h.wimp tbox:h.saveas tbox:h.toolbox tbox:h.window tbox:h.gadgets h.utils HW.h.memory
LinkUp.o.MLCD: LinkUp.c.MLCD LinkUp.h.MLCD LinkUp.h.Bus tbox:h.wimp h.utils HW.h.video tbox:h.wimp
