;; ARMulator configuration file
;; Copyright (c) 1996 Advanced RISC Machines Limited. All Rights Reserved.

;; RCS $Revision$
;; Checkin $Date$
;; Revising $Author$

;;
;; This is the configuration file for ARMulator 2.0
;;

;; Comment this out for benchmarking
; For the moment we assume that if no clock speed has been set on the
; command-line, the user wishes to use a wall-clock for timing
#if !MCLK
Clock=Real
#endif


;; This line controls whether (some) models give more useful descriptions
;; of what they are on startup, and during running.
Verbose=False

;; Controls whether there's a trace on memory accesses.
;TraceMemory

;; To get the full validation environment, we set Validate
;Validate

;; To enable watchpoints, set "WatchPoints"
;WatchPoints


#if Validate

OS=Validate

#else

;; The default operating-system is Angel - this can be changed to Demon
;; if desired
#if OSMODEL_Angel
OS=Angel
#else
OS=Demon
#endif

#endif

;; Operating system (Demon or Angel) configuration

#if OS==Angel || OS==Demon

;; Using Angel disables the FPE
{ OS

;; Configure the locations of stacks, etc.
AddrSuperStack=0xa00
AddrAbortStack=0x800
AddrUndefStack=0x700
AddrIRQStack=0x500
AddrFIQStack=0x400

;; The default location of the user mode stack
AddrUserStack=0x80000

;; Start of the "soft vector" code
AddrSoftVectors=0xa40

;; Where to place a copy of the command line
AddrCmdLine=0xf00

;; Address and workspace for installed handlers
AddrsOfHandlers=0xad0

;; Default handlers
SoftVectorCode=0xb80

#if OS==Angel
;; SWIs to use for Angel
;AngelSWIARM=0x12345678
;AngelSWIThumb=0xdfab

#if PIE
HeapBase=0x00050000
HeapLimit=0x00060000
StackBase=0x00080000
StackLimit=0x0078000
#else
HeapBase=0x02069000
HeapLimit=0x02079000
StackBase=0x02080000
StackLimit=0x02079000
#endif

;; If you don't want to be able to run demon programs (for backwards
;; compatability) set this to "No"
Demon=Yes

#if !FPE || Demon==No
FPE=No
#endif
#endif

}
#endif

;;
;; This is the list of all processors supported by ARMulator.
;;

{ Processors

Default=ARM810

;; Entries are of the form:
;
; { <processor-name>
; ... features ...
; ... variants ...
; }
;
;; or
;
; <processor-variant>=<processor-name>
;
;; In the latter case, the "variant" must appear in the variants list
;; for the named processor.


;; The "BASIC" RDI model provides models of the ARM2/ARM6/ARM7 and ARM8
;; families.
#if RDI_BASIC

;; ARM2 family

{ ARM2
;; Features:
Processor=ARM2
Core=ARM2
ARMulator=BASIC
Architecture=2

;; Variants:
{ ARM2aS
Processor=ARM2aS
}
{ ARM61
Processor=ARM61
}
{ ARM3
Processor=ARM3
#if TraceMemory
Memory=TARM3
#endif
#if WatchPoints
Memory=WARM3
#endif
Memory=ARM3
Architecture=2a
}
#if TraceMemory
Memory=Tracer
#endif
#if WatchPoints
Memory=WatchPoints
#endif
}
ARM2aS=ARM2
ARM61=ARM2
#if MEMORY_MMUlator
ARM3=ARM2
#endif

;; ARM6 family

{ ARM6
;; Features:
Processor=ARM6
Core=ARM6
ARMulator=BASIC
Architecture=3

;; Variants:
{ ARM60
Processor=ARM60
}
;; Cached variants
{ ARM600
Processor=ARM600
#if TraceMemory
Memory=TARM600
#endif
#if WatchPoints
Memory=WARM600
#endif
Memory=ARM600
}
{ ARM610
Processor=ARM610
#if TraceMemory
Memory=TARM610
#endif
#if WatchPoints
Memory=WARM610
#endif
Memory=ARM610
}
{ ARM620
Processor=ARM620
#if TraceMemory
Memory=TARM620
#endif
#if WatchPoints
Memory=WARM620
#endif
Memory=ARM620
}
#if TraceMemory
Memory=Tracer
#endif
#if WatchPoints
Memory=WatchPoints
#endif
}
ARM60=ARM6
#if MEMORY_MMUlator
ARM600=ARM6
ARM610=ARM6
ARM620=ARM6
#endif

;; ARM7 family

{ ARM7
;; Features:
Processor=ARM7
Core=ARM7
ARMulator=BASIC
Architecture=3
Nexec
LateAborts
SubPage

;; Variants:
{ ARM70
Processor=ARM70
}
;; Cached variants
{ ARM700
Processor=ARM700
#if TraceMemory
Memory=TARM700
#endif
#if WatchPoints
Memory=WARM700
#endif
Memory=ARM700
}
{ ARM710
Processor=ARM710
#if TraceMemory
Memory=TARM710
#endif
#if WatchPoints
Memory=WARM710
#endif
Memory=ARM710
}
{ ARM704
Processor=ARM704
#if TraceMemory
Memory=TARM704
#endif
#if WatchPoints
Memory=WARM704
#endif
Memory=ARM704
}
{ ARM710a
Processor=ARM710a
#if TraceMemory
Memory=TARM710a
#endif
#if WatchPoints
Memory=WARM710a
#endif
Memory=ARM710a
}
#if TraceMemory
Memory=Tracer
#endif
#if WatchPoints
Memory=WatchPoints
#endif
}
ARM70=ARM7
#if MEMORY_MMUlator
ARM700=ARM7
ARM704=ARM7
ARM710=ARM7
ARM710a=ARM7
#endif

;; ARM7D family - ARM7D and ARM70D

{ ARM7D
;; Features
Processor=ARM7D
Core=ARM7
ARMulator=BASIC
Architecture=3
Nexec
LateAborts
Debug

{ ARM70D
Processor=ARM70D
Debug
}
;; ARM7DM and Thumb families
{ ARM7DM
Processor=ARM7DM
Architecture=3M
}
{ ARM70DM
Processor=ARM70DM
Architecture=3M
}
{ ARM7TDM
Processor=ARM7TDM
Architecture=4T
}
{ ARM7TDMI
Processor=ARM7TDMI
Architecture=4T
}
#if TraceMemory
Memory=Tracer
#endif
#if WatchPoints
Memory=WatchPoints
#endif
}
ARM70D=ARM7D
ARM7DM=ARM7D
ARM70DM=ARM7D
ARM7TDM=ARM7D
ARM7TDMI=ARM7D

;; ARM8 family

{ ARM8
;; Features:
Processor=ARM8
Core=ARM8
ARMulator=BASIC
Architecture=4
Nexec
MultipleEarlyAborts
AbortsStopMultiple
Prefetch
HasBranchPrediction
NoLDCSTC

;; Variants:
{ ARM810
Processor=ARM810
#if TraceMemory
Memory=TARM810
#endif
#if WatchPoints
Memory=WARM810
#endif
Memory=ARM810
}
#if TraceMemory
Memory=Tracer
#endif
#if WatchPoints
Memory=WatchPoints
#endif
}
#if MEMORY_MMUlator
ARM810=ARM8
#endif
#endif


;; The "STRONG" RDI interface provides models of the StrongARM1 family.
#if RDI_STRONG

;; StrongARM family

{ StrongARM
;; Features:
Processor=StrongARM
Core=StrongARM
ARMulator=STRONG
Architecture=4
Nexec
MultipleEarlyAborts
AbortsStopMultiple
StrongARMAware
NoLDCSTC
NoCDP

;; Variants:
{ SA-110
Processor=SA-110
#if TraceMemory
Memory=TSA-110
#endif
#if WatchPoints
Memory=WSA-110
#endif
Memory=SA-110
}
#if TraceMemory
Memory=Tracer
#endif
#if WatchPoints
Memory=WatchPoints
#endif
}
#if MEMORY_StrongMMU
SA-110=StrongARM
#endif
#endif

;; New processors/variants can be added here.
}

;;
;; List of memory models
;;

{ Memories

;; Default memory model is the "Flat" model, or the "MapFile" model if there
;; is an armsd.map file to load.

;; Validation suite uses the trickbox
#if Validate
Default=TrickBox
#endif

;; If there's a memory mapfile, use that.
#if MemConfigToLoad && MEMORY_MapFile
Default=MapFile
#endif

;; If you want to run with watchpoints enabled (which causes a performance hit)
;; use the model "WatchPoints"
;Default=WatchPoints

;; Default default is the Risc PC emulator
Default=RPCEm


;; The "MMUlator" provides emulation of the caches and MMU's on the
;; ARM6/ARM7 and ARM8 processor families.

#if MEMORY_MMUlator
;; Plumbing for cached models - leave alone
TARM600=Tracer
TARM610=Tracer
TARM620=Tracer

TARM700=Tracer
TARM704=Tracer
TARM710=Tracer
TARM710a=Tracer

TARM810=Tracer

WARM600=WatchPoints
WARM610=WatchPoints
WARM620=WatchPoints

WARM700=WatchPoints
WARM704=WatchPoints
WARM710=WatchPoints
WARM710a=WatchPoints

WARM810=WatchPoints

ARM600=MMUlator
ARM610=MMUlator
ARM620=MMUlator

ARM700=MMUlator
ARM704=MMUlator
ARM710=MMUlator
ARM710a=MMUlator

ARM810=MMUlator

{ MMUlator

IdleCycles
;; Uncomment this to have a byte-lane memory interface
;;Bytelanes
#if Bytelanes
Memory=BytelaneVeneer
#else
Memory=Default
#endif

{ ARM600
CacheWords=4
CacheAssociativity=64
CacheBlocks=4
TLBSize=32
RNG=6
WriteBufferAddrs=2
WriteBufferWords=8
CacheReplaceTicks=1
CacheWrite=WriteThrough
HasUpdateable=TRUE
BufferedSwap=TRUE
Architecture=3
CacheWriteBackInterlock
sNa=Yes
ChipNumber=0x60
Has26BitConfig
Replacement=Random
HasWriteBuffer

{ ARM610
NoCoprocessorInterface
ChipNumber=0x61
}
{ ARM620
NoCoprocessorInterface
ChipNumber=0x62
}

#if !FCLK
FCLK=30MHz
#endif
; Set core/memory clock ratio (2)
MCCFG=0
}

ARM610=ARM600
ARM620=ARM600

{ ARM700

CacheWords=8
CacheAssociativity=4
CacheBlocks=64
TLBSize=64
RNG=7
WriteBufferAddrs=4
WriteBufferWords=8
CacheReplaceTicks=1
CacheWrite=WriteThrough
HasRFlag
HasUpdateable=FALSE
BufferedSwap=FALSE
Architecture=3
CacheWriteBackInterlock
sNa=Yes
Replacement=Random
Has26BitConfig
HasWriteBuffer

ChipNumber=0x700

{ ARM710
NoCoprocessorInterface
ChipNumber=0x710
}
{ ARM704
NoCoprocessorInterface
CacheWords=4
CacheBlocks=64
ChipNumber=0x704
}
{ ARM710a
NoCoprocessorInterface
CacheWords=4
CacheBlocks=128
ChipNumber=0x711
}

#if !FCLK
FCLK=40MHz
#endif
; Set core/memory clock ratio (4)
MCCFG=2
}

ARM710=ARM700
ARM710a=ARM700
ARM704=ARM700

{ ARM810

CacheWords=4
CacheAssociativity=64
CacheBlocks=8
TLBSize=64
RNG=6
WriteBufferAddrs=4
WriteBufferWords=8
CacheReplaceTicks=3
CacheWrite=WriteBack
HasRFlag
NoUpdateable
NoBufferedSwap
Architecture=4
CacheBlockInterlock
;; If using the PLLs
;PLLClock
;RefClkCfg=0
;PLLCfg=15
;PLLRange=0
HasBranchPrediction
Replacement=Random
HasWriteBuffer

ChipNumber=0x810

#if !FCLK
FCLK=80MHz
#endif
;Set core/memory clock speed ratio (4)
MCCFG=2

}

Replacement=rng
WriteBufferWords=8
Revision=0xff

LRURead
LRUWrite

}
#endif


;; The "StrongMMU" model provides the cache model for the SA-110

#if MEMORY_StrongMMU
SA-110=StrongMMU
TSA-110=Tracer

{ StrongMMU

#if Validate
Config=Standard
#endif
Config=Enhanced
ChipNumber=0x110

;; Clock speed controlled by a pair of values:
CCCFG=0
MCCFG=0

Memory=Default
}
#endif

#if MEMORY_BytelaneVeneer
{ BytelaneVeneer
Memory=Default
}
#endif

#if MEMORY_Tracer
{ Tracer

;; Tracer options
File=armultrc
TraceInstructions
TraceMemory
;TraceIdle
;TraceEvents

;; Under-tracer plumbing
{ TARM600
Memory=ARM600
}
{ TARM610
Memory=ARM610
}
{ TARM620
Memory=ARM620
}
{ TARM700
Memory=ARM700
}
{ TARM704
Memory=ARM704
}
{ TARM710
Memory=ARM710
}
{ TARM710a
Memory=ARM710a
}
{ TARM810
Memory=ARM810
}

{ TSA-110
Memory=SA-110
}

Memory=Default
}
#endif

#if MEMORY_WatchPoints
{ WatchPoints

;; Under-watcher plumbing
{ WARM600
Memory=ARM600
}
{ WARM610
Memory=ARM610
}
{ WARM620
Memory=ARM620
}
{ WARM700
Memory=ARM700
}
{ WARM704
Memory=ARM704
}
{ WARM710
Memory=ARM710
}
{ WARM710a
Memory=ARM710a
}
{ WARM810
Memory=ARM810
}

{ WSA-110
Memory=SA-110
}

Memory=Default
}
#endif

}

;; Default clock speeds.
MCLK=15MHz
FCLK=15MHz

;; Co-processor bus
CoprocessorBus=ARMCoprocessorBus

;; Coprocessor configurations
{ Coprocessors

; Here is the list of co-processors, in the form:
; Coprocessor[<n>]=Name

#if COPROCESSOR_DummyMMU
;; By default, we install a dummy MMU on co-processor 15.
CoProcessor[15]=DummyMMU

; Here is the configuration for the co-processors.

{ DummyMMU
;; The Dummy MMU can be configured to return a given Chip ID
;ChipID=
}
#endif

}

;;
;; Basic models (ARMulator extensions)
;;

{ Models
#if MODEL_Profiler
{ Profiler
;; For example - to profile the PC value when cache misses happen, set:
;Type=Event
;Event=0x00010001
;EventWord=pc
}
#endif

#if MODEL_WindowsHourglass
{ WindowsHourglass
;; We can control how regularly we callback the frontend
;; More often (lower value) means a slower emulator, but
;; faster response. The default is 8192.
Rate=8192
}
#endif

#if MODEL_Tracer && !TraceMemory
{ Tracer
;; Tracer options
File=armultrc
TraceInstructions
;TraceEvents
}
#endif
}
