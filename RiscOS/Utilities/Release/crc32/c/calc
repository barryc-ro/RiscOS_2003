#include "crc.h"

#define TABLE_SIZE  256

static U32 crc32tab[TABLE_SIZE];
static U16 crc16tab[TABLE_SIZE];

void make_tables(void)
{
  int i, inx;
  U32 carry32, entry32;
  U16 carry16, entry16;

  for (inx = 0; inx < TABLE_SIZE; ++inx) {
    entry32 = inx;

    for (i = 0; i < 8; ++i) {
      carry32 = entry32 & 1;
      entry32 >>= 1;
      if (carry32)
        entry32 ^= 0xedb88320;
    }

    crc32tab[inx] = entry32;
  }
  
  for (inx = 0; inx < TABLE_SIZE; ++inx) {
    entry16 = inx;

    for (i = 0; i < 8; ++i) {
      carry16 = entry16 & 1;
      entry16 >>= 1;
      if (carry16)
        entry16 ^= 0xA001;
    }

    crc16tab[inx] = entry16;
  }  
}

void update_crc(U8 *buf, int count, U32 *crc32, U16 *crc16, U32 *chk8)
{
  int i;
  U8 inx32;
  U8 inx16;

  if (count == 0)
    return;

  for (i = 0; i < count; ++i) {
    *chk8 += buf[i];
    
    inx32 = buf[i] ^ *crc32;
    *crc32 >>= 8;
    *crc32 ^= crc32tab[inx32];

    inx16 = buf[i] ^ *crc16;
    *crc16 >>= 8;
    *crc16 ^= crc16tab[inx16];

  }
}
