#include "crc.h"

#define BUF_SIZ 8192

int main(int argc, char *argv[])
{
  FILE *fptr;
  U32 crc32, chk8=0, clen=0;
  int read;
  U8 buf[BUF_SIZ];
  static char id[] = "CRC and checksum generator. V1.00, JHarris, 1995.";
  
  if (argc!=2)
  {
    fprintf(stderr, "%s\n\nGenerates a 32bit CRC with -1 as the pre- and post-condition,\nand reports a 16bit checksum generated over byte quantities.\n\nSyntax:\tcrc <file>\n\n", id);
    exit(EXIT_FAILURE);
  }

  if ((fptr = fopen(argv[1], "rb")) == NULL)
  {
    fprintf(stderr, "Can't open %s\n", argv[1]);
    exit(EXIT_FAILURE);
  }

  make_table();
  
  crc32 = 0xffffffff;   /* pre-condition - bits all ones */

  do
  {
    clen += (read = fread(buf, 1, BUF_SIZ, fptr));
    update_crc(buf, read, &crc32, &chk8);
  } while (read == BUF_SIZ);

  crc32 ^= 0xffffffff;  /* post-condition - one's complement */

  printf("File: \t%s\nsize: \t%d bytes\nchk8: \t%04x\ncrc32:\t%08x\n\n", argv[1], clen, (chk8 & 0xffff), crc32);

  return EXIT_SUCCESS;
}
