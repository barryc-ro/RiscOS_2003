/*
 * ROM Linker
 *
 * Copyright (C) Pace Micro Technology plc. 2001
 *
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>

/* CLX headers */
#include "prgname.h"
#include "err.h"
#include "wholefls.h"

/* Local headers */
#include "memory.h"
#include "romlinker.h"
#include "filereader.h"

char *readline(FILE *f)
{
  char *ptr, buffer[BUFSIZ];

  ptr = fgets(buffer, sizeof(buffer), f);
  if (ptr) {
    if (*ptr == '\r') ++ptr;
    ptr[strcspn(ptr, "\r\n#")] = '\0';
  }

  return Strdup(ptr);
}

char *readlinenonull(FILE *f)
{
  return fault_null(readline(f), "Unable to read data from input file");
}

void *readfile(FILE *f, filereader_consumer consumer, void *consumer_data)
{
  const char *data;

  while ((data = readline(f)) != NULL) {
    if (consumer(data, consumer_data)) break;
  }

  return consumer_data;
}

unsigned long filereader_filesize(const char *name)
{
  unsigned long size = (unsigned long) wf_filesize((char *) name);
  return (size == -1UL) ? unknown_size : size;
}

void *filereader_load_file(const char *name, unsigned long size, void *at)
{
  return wf_load((char *)name, at, size) ? NULL : at;
}

chunk_entry_types filereader_file_type(const char *name)
{
  (void) name;
#ifdef __riscos
  return riscos_module;
#else
  return riscos_module;
#endif
}
