The command:

  *mkresource  <modname>  <filename-1> <filename-2> ... <filename-n>

will create a file "c.resources" containing the contents of the specified
files defined as a static array ready to be registered with ResourceFS.

All filenames are taken relative to the current directory, so this command
should only be run after making the directory conatining the module's source
and other resource files current.


In response to, say:

        *mkresource ATProbe Messages !Sprites

the "c.resources" file looks like this:

        /* resources.c for ATProbe module */

        #include "resources.h"


        unsigned int resources [] = {

        /* resource file block for Messages */
        0x00000050,
        0xffffff46,
        0x98b63f6e,
           ....

        /* resource file block for !Sprites */
        0x00000640,
        0xfffff946,
        0x49e10080,
           ....

        /* terminator */
        0
        };

and so a header file "resources.h" is required as follows:

        /* resources.h for ATProbe module */

        extern unsigned int resources[];


The resources can now be registered with ResourceFS (during module
initialisation) as follows:

        _swix (ResourceFS_RegisterFiles, I0, resources);

and deregistered (during module finalisation) as follows:

        _swix (ResourceFS_DeregisterFiles, I0, resources);


After registration, the resource files will be available as, eg:

        Resources:$.Resources.ATProbe.Messages
        Resources:$.Resources.ATProbe.!Sprites


Mike Challis
01-Feb-96

