#include <stdio.h>
#include <string.h>
#include <ctype.h>

#include "kernel.h"

#define PROTOTYPES_INTERNAL
#include "ncma_ncma.h"
#include "ncma_url.h"
#include "dynalloc.h"
#include "module.h"
#include "DBUG.h"

#include "kernel.h"
#include "swis.h"

#include "machine.h"
#include "vectors.h"

int read_os_var(char *varname, char *buff, int n)
{
  _kernel_swi_regs r;

  r.r[0] = (int)varname;
  r.r[1] = (int)buff;
  r.r[2] = (buff==NULL)?0x80000000:n;
  r.r[3] = 0;
  r.r[4] = 0;
  if(_kernel_swi(OS_ReadVarVal, &r, &r) != NULL) return(-1);
  if(buff) {
      *(buff + r.r[2]) = 0;
      return(r.r[2]);
  }
  return(-(r.r[2]));

}

int write_os_var(char *varname, char *buff, int n) /* set an OS string variable */
{
    _kernel_swi_regs r;

    r.r[0] = (int)varname;
    r.r[1] = (int)buff;
    r.r[2] = n;
    r.r[3] = 0;
    r.r[4] = 0; /* type string GSTrans once */
  if(_kernel_swi(OS_SetVarVal, &r, &r) != NULL) return(-1);
  return(0);
}


int ncma_ncma_init(void)
{

  DBUG_PRINTF(DBUG_LVL_DIAG, "ncma_ncma_init: setting up URL interface\n");
  if(ncma_url_init()<0) {
      DBUG_PRINTF(DBUG_LVL_DIAG, "ncma_mcna_init: URL init failed\n");
      return(-1);
  }
  return(0);
}

