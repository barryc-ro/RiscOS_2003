// header file for DBUG.H

/* Begin-Prologue */
#ifndef DBUG_H
#define DBUG_H
#undef DECLARE
#undef INIT
#ifdef PROTOTYPES_INTERNAL
#define DECLARE
#define INIT(x) =(x)
#else
#define DECLARE extern
#define INIT(x)
#endif
/* End-Prologue */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>

#ifdef DEBUGLIB
#include "debuglib/debuglib.h"
#endif /* DEBUGLIB */

#define DBUG_LVL_PANIC    1  // fatal unrecoverable panic conditions
#define DBUG_LVL_ERROR    2  // serious but recoverable errors
#define DBUG_LVL_DIAG     3  // diagnostics for following main execution paths
#define DBUG_LVL_DEBUG    4  // debug messages for non-critical paths or utility fns
#define DBUG_LVL_LOOP     5  // iterative debugging, likely to cause lots of output


#ifdef DEBUGLIB
void DBUG_PRINTF(int level, char *fmt, ...);
#else
//#define DBUG_PRINTF(int, char *, ...);
#define DBUG_PRINTF if(0) NO_DEBUG_PRINTF
DECLARE void NO_DEBUG_PRINTF(int, char *, ...);
#endif /* DEBUGLIB */


#ifdef DEBUGLIB
  /* Whilst debugging we use a slightly altered version of malloc() and
free() which allow us to output debugging information which can help with
!MemCheck. If we are not debugging, remap these to the normal versions. */
  char* dbg_malloc(unsigned int amount);
  void dbg_free(char* area);
#else
  #define dbg_malloc(x) malloc(x)
  #define dbg_free(x) free(x)
#endif /* DEBUGLIB */




/* Begin-Epilogue */
#undef PROTOTYPES_INTERNAL
#undef INIT
#undef DECLARE
#endif
/* End_Epilogue */

