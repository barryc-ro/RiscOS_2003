# Function tests - these are roughly grouped according to the functions
# they test.

# Tests set A - word, words, wordlist, firstword

FIRST=3
LAST=5
LETTERS=a b c d e f g h

A1VAR = left $(word 2,${A2VAR}) right
A2VAR = left $(firstword FOO BAR) right
A3VAR = $(strip  a b c  )
A4VAR = $(wordlist ${FIRST},${LAST},${LETTERS})
A5VAR = $(words ${LETTERS})
A6VAR = $(words ${A4VAR})
A7VAR = $(word 4,${strip ${LETTERS}})
A8VAR = ${word 9,${LETTERS}}
A9VAR = $(wordlist ${LAST},${FIRST},${LETTERS})


# Tests set B - sorting/duplicate removal
BVAR = one two three four  one two three four
B1VAR = $(sort ${BVAR})

# Tests set C - substring searching
C1VAR = $(findstring e, ${LETTERS})
C2VAR = $(findstring j, ${LETTERS})

# Tests set D - subst
D1VAR = ${subst ee,EE,feet on the street}
D2VAR = ${subst ee,e,feet on the street}
D3VAR = ${subst et,ets,feet on the street}
D4VAR = ${subst ee,ee,feet on the street}
D5VAR = ${subst ee,eee,feet on the street}
D6VAR = ${subst ee,,feet on the street}
D7VAR = ${subst ,ee,hello}

# Tests set E - empty variable tests


# Tests set F - filtering
F1VAR = $(filter z,foo  bar  baz)
F2VAR = $(filter-out a,foo  bar baz  )
F3VAR = $(filter boo, foo bar  baz)
F4VAR = $(filter-out a, fao   bar baz)
F5VAR = $(filter .o .c, foo.c foo.h foo.s bar.s bar.h baz.c)
F6VAR = $(filter %.o %.c, foo.c foo.h foo.s bar.s bar.h baz.c)

# Tests set G - patsubst
G1VAR = ${patsubst .c,.o,foo.c bar.c baz.c}

# Tests set H - addprefix/addsuffix
H1VAR = $(addprefix src/,foo bar baz)
H2VAR = $(addprefix ,foo bar baz)
H3VAR = $(addprefix foo,)
H4VAR = $(addsuffix .c,foo bar baz)
H5VAR = $(addsuffix ,foo bar baz)
H6VAR = $(addsuffix .o,)

# Tests set I - if tests
I1VAR = $(if yes,yes,no)
I2VAR = $(if ,yes,no)
I3VAR = $(if yes,yes)
I4VAR = $(if ,yes)
I5VAR = $(if ${E1VAR},yes,no)
I6VAR = $(if ${E1VAR},yes)

# Tests set J - join
J1VAR = $(join a b,.c .o)
J2VAR = $(join a b,.c)
J3VAR = $(join a,.c .o)
J4VAR = $(join ,)

# Tests set K - call tests - the example reverse macro
K1VAR = $(2) $(1)
K2VAR = $(call K1VAR,a,b)

# Tests set L - foreach
L1VAR = $(foreach i,a b c,${i}.o)
L2VAR = $(i)

# Tests set M - combinatorials
COMMA := ,
map = $(foreach a,$(2),$(call $(1),$(a))
pathsearch = $(firstword $(wildcard $(addsuffix $(1),$(subst ${COMMA}, ,${$(2)}))))
cclocation := ${call pathsearch,cc,Run$Path}
M1VAR := ${if ${findstring :,${cclocation}},${call pathsearch,cc,${patsubst %:cc,%$Path,${cclocation}}},${cclocation}}
M2VAR = ${call map,origin,o map MAKE}

all:
  @if "${A1VAR}" <> "left FOO right"             Then Error "Test A1 failed"
  @if "${A2VAR}" <> "left FOO right"             Then Error "Test A2 failed"
  @if "${A3VAR}" <> "a b c"                      Then Error "Test A3 failed"
  @if "${A4VAR}" <> "c d e"                      Then Error "Test A4 failed"
  @if "${A5VAR}" <> "8"                          Then Error "Test A5 failed"
  @if "${A6VAR}" <> "3"                          Then Error "Test A6 failed"
  @if "${A7VAR}" <> "d"                          Then Error "Test A7 failed"
  @if "${A8VAR}" <> ""                           Then Error "Test A8 failed"
  @if "${A9VAR}" <> "c d e"                      Then Error "Test A9 failed"
  @|
  @if "${B1VAR}" <> "four one three two"         Then Error "Test B1 failed"
  @|
  @if "${C1VAR}" <> "e"                          Then Error "Test C1 failed"
  @if "${C2VAR}" <> ""                           Then Error "Test C2 failed"
  @|
  @if "${D1VAR}" <> "fEEt on the strEEt"         Then Error "Test D1 failed"
  @if "${D2VAR}" <> "fet on the stret"           Then Error "Test D2 failed"
  @if "${D3VAR}" <> "feets on the streets"       Then Error "Test D3 failed"
  @if "${D4VAR}" <> "feet on the street"         Then Error "Test D4 failed"
  @if "${D5VAR}" <> "feeet on the streeet"       Then Error "Test D5 failed"
  @if "${D6VAR}" <> "ft on the strt"             Then Error "Test D6 failed"
  @if "${D7VAR}" <> "helloee"                    Then Error "Test D7 failed"
  @|
  @if "${E1VAR}" <> ""                           Then Error "Test E1 failed"
  @|
  @if "${F1VAR}" <> "baz"                        Then Error "Test F1 failed"
  @if "${F2VAR}" <> "foo bar baz"                Then Error "Test F2 failed"
  @if "${F3VAR}" <> ""                           Then Error "Test F3 failed"
  @if "${F4VAR}" <> "fao bar baz"                Then Error "Test F4 failed"
  @if "${F5VAR}" <> "foo.c baz.c"                Then Error "Test F5 failed"
  @if "${F6VAR}" <> "foo.c baz.c"                Then Error "Test F6 failed"
  @|
  @if "${G1VAR}" <> "foo.o bar.o baz.o"          Then Error "Test G1 failed"
  @|
  @if "${H1VAR}" <> "src/foo src/bar src/baz"    Then Error "Test H1 failed"
  @if "${H2VAR}" <> "foo bar baz"                Then Error "Test H2 failed"
  @if "${H3VAR}" <> ""                           Then Error "Test H3 failed"
  @if "${H4VAR}" <> "foo.c bar.c baz.c"          Then Error "Test H4 failed"
  @if "${H5VAR}" <> "foo bar baz"                Then Error "Test H5 failed"
  @if "${H6VAR}" <> ""                           Then Error "Test H6 failed"
  @|
  @if "${I1VAR}" <> "yes"                        Then Error "Test I1 failed"
  @if "${I2VAR}" <> "no"                         Then Error "Test I2 failed"
  @if "${I3VAR}" <> "yes"                        Then Error "Test I3 failed"
  @if "${I4VAR}" <> ""                           Then Error "Test I4 failed"
  @if "${I5VAR}" <> "no"                         Then Error "Test I5 failed"
  @if "${I6VAR}" <> ""                           Then Error "Test I6 failed"
  @|
  @if "${J1VAR}" <> "a.c b.o"                    Then Error "Test J1 failed"
  @if "${J2VAR}" <> "a.c b"                      Then Error "Test J2 failed"
  @if "${J3VAR}" <> "a.c .o"                     Then Error "Test J3 failed"
  @if "${J4VAR}" <> ""                           Then Error "Test J4 failed"
  @|
  @if "${K1VAR}" <> "$(2) $(1)"                  Then Error "Test K1 failed"
  @if "${K2VAR}" <> "b a"                        Then Error "Test K2 failed"
  @|
  @if "${L1VAR}" <> "a.o b.o c.o"                Then Error "Test L1 failed"
  @if "${L2VAR}" <> ""                           Then Error "Test L2 failed"
  @|
  @echo Your C compiler is at: ${M1VAR}
  @if "${M1VAR}" = ""                            Then Error "Test M1 failed"
  @if "${M2VAR}" <> "undefined file default"     Then Error "Test M2 failed"
  @|
  @echo All tests passed
