/*
 * AMU (dirsearch.c)
 *
 * Copyright (C) Pace Micro Technology plc. 2001
 *
 */

/* Originally ripped off from armlib/libfile */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdbool.h>

#include "kernel.h"
#include "swis.h"

/* CLX */
#include "err.h"
#include "filestamp.h"
#include "wholefls.h"

/* Local */
#include "amu.h"
#include "parse.h"
#include "dirsearch.h"

#define __riscos_osgbpb_block _kernel_osgbpb_block
#define __riscos_osgbpb(a,b,c) _kernel_osgbpb(a,b,c)

#define WILDCH  '?'

#if 0
static int match(char *pat, char *str)
{   /* return 0 if matched, non-0 otherwise */
    for (;;)
    {   if (*pat=='*')
        {   int t;
            while (*++pat == '*');
            for (; *str != 0;  ++str)
                if ((t = match(pat, str)) == 0) return 0;
        }
        if (*str == '\0') return *pat;
        if (*pat != WILDCH && (*pat | 0x20) != (*str | 0x20)) return 1;
        pat++;
        str++;
    }
}
#endif

static void munge_filename(char *s)
{
    char *extn, *root, c;

    extn = root = s;
    while ((c = *s++)!= 0)
    {   if (c == ':')  extn = root = s;
        if (c == '.')
        {   root = extn;
            extn = s;
        }
    }
    if (root != extn && (*extn | 0x20) == 'o' && !*(extn + 1))
    {   extn--; s--;
        do {*--s = *--extn;} while (extn > root);
        *root = 'o';
        *(root + 1) = '.';
    }
}

void dirsearch_expand_file_list(LinePart *alp, Line *result)
{
#define MAXFNAMELEN 128
#define DIR_SEARCH 9

    char searchbuff[MAXFNAMELEN], name[MAXFNAMELEN], pattern[MAXFNAMELEN];
    char *s, *root, *extn, c;
    int gotfile;
    __riscos_osgbpb_block sr;
    LinePart *lp;

    (void) result;

    for (lp = alp; lp; lp = lp->next) {
        munge_filename(lp->data);
        root = extn = s = lp->data;
        while ((c = *s++) != 0)
        {   if (c == ':') extn = root = s;
            if (c == '.')
            {   root = extn;
                extn = s;
            }
        }
        strcpy(sr.wild_fld = pattern, extn);
        if (root == extn)
            *extn = 0;
        else
            extn[-1] = 0;
        sr.dataptr = searchbuff;
        sr.fileptr = 0;
        sr.buf_len = MAXFNAMELEN;
        gotfile = 0;
        do {
            s = sr.wild_fld;
            while (*s) {
                if (*s == '*' || *s == '#')
                    break;
                s++;
            }
            if (*s)
                do {
                    sr.nbytes = 1;
                    __riscos_osgbpb(DIR_SEARCH, (int)lp->data, &sr);
                    if (sr.fileptr < 0) break;
                }
                while (sr.nbytes == 0);
            else
                if (gotfile)
                    sr.fileptr = -1;
                else
                    strcpy((char *)sr.dataptr, sr.wild_fld);
            if (sr.fileptr >= 0) {
                strcpy(name, lp->data);
                if (name[0] && name[strlen(name) - 1] != ':')
                    strcat(name, ".");
                strcat(name, (char *)sr.dataptr);
            }
        }
        while (sr.fileptr >= 0);
    }
}
