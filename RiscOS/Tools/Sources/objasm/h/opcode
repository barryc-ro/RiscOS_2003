/* -> opcode.h
 * Title: The opcode detection routine
 * Copyright (C) 1991 Advanced RISC Machines Limited. All rights reserved.
 */

#ifndef opcode_h
#define opcode_h

#include "nametyp.h"

#define SUBCode 0x00400000
#define ADDCode 0x00800000
#define MOVCode 0x01A00000
#define MVNCode 0x01E00000
#define LDRCode 0x04100000
#define MRSCode 0x01000000
#define MSRCode 0x01200000
#define MCRCode 0x0E000010

typedef enum {
  DataProcessing,
  DataTransfer,
  SWI,
  BlockData,
  Branch,
  Adr,
/* Now the floating point ones */
  FPDataTransfer,
  FPDyadic,
  FPMonadic,
  FPCompare,
  FPFloat,
  FPFix,
  FPStatus,
/* Now the extended floating point ones: FP3 and later... */
  FPBlock,
  FPStack,
  FPNorm,
/* Now the generic coprocessor ones */
  CPDT,
  CPDO,
  CPRT,
/* Now MUL and MLA */
  MUL,
  MLA,
/* Now ADRL */
  ADRL,
/* Now SWP */
  SWP,
  MVP,
/* Now 64 bit multiply instructions */
  UMULL,
  SMULL,
  UMLAL,
  SMLAL
  } OpcodeType;

BOOLEAN Opcode(Name name, OpcodeType *opcodeType, CARDINAL *opcodeValue);
/*The result is TRUE iff the name is an opcode*/

void InitOpcode(void);

#endif

/* End opcode.h */
