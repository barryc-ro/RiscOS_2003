/* -> code.h
 * Title: Code output
 * Copyright (C) 1991 Advanced RISC Machines Limited. All rights reserved.
 */

#ifndef code_h
#define code_h

#include "constant.h"

#ifndef AAsm

#include "aof.h"
#include "aofvars.h"
#include "nametyp.h"
#include "tables.h"

typedef struct AreaDeclarationRecord *AreaDeclarationPointer;

typedef struct AreaDeclarationRecord {
  aof_area               dec;
  Name                   name;
  AreaDeclarationPointer next;
} AreaDeclarationRecord; /* record */

void RelocInit(void);

void RelocEnd(void);

void PutReloc(Relocation reloc);

#endif /* not AAsm */

void CodeBuffer(char *frombuffer, int32 size);   /* added by NRaine */

void CodeByte(char byte);

void CodeWord(CARDINAL word);

void CodeDataWord(CARDINAL word);

void CodeInit(void);

void CodeEnd(void);

#ifndef AAsm

void AddSymbol(SymbolPointer symbolPointer);

void AddSymbolToTable(SymbolPointer symbolPointer,
  Name name,
  BOOLEAN external,
  BOOLEAN weak);

void AddAreaDeclaration(SymbolPointer ptr, CARDINAL alignment, CARDINAL attr);

BOOLEAN FakeFirstAreaDeclaration(void);

void P1InitAreas(void);

void P2InitAreas(void);

void DumpSymbolTable(void);

void DumpStringTable(void);

void DumpHeader(void);

void DumpAreaDecs(void);

CARDINAL AreaStartValue(CARDINAL area, Name *name);

aof_area *GetArea(CARDINAL areaNumber);

#define GetAreaName(areaNumber) GetArea(areaNumber)->area_name

extern AreaDeclarationPointer currArea;
extern CARDINAL               totalAreas;

#endif /* not AAsm */

#endif

/* End code.h */
