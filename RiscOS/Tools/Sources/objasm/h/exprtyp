/* -> exprtyp.h
 * Title: Types for expressions
 * Copyright (C) 1991 Advanced RISC Machines Limited. All rights reserved.
 */

#ifndef exprtypes_h
#define exprtypes_h

#include "nametyp.h"

typedef enum Operator {
  STBot,
  STTop,
  Bra,
  Ket,
  LAnd,
  LOr,
  LEor,
  Less,
  OpEquals,
  LessEquals,
  Greater,
  NotEquals,
  GreaterEquals,
  Plus,
  Minus,
  Ror,
  Rol,
  Shr,
  Shl,
  BAnd,
  BOr,
  BEor,
  Left,
  Right,
  Cc,
  Star,
  Slash,
  Mod,
  UPlus,
  UMinus,
  LNot,
  BNot,
  Len,
  FLoad,            /* BINARY_INCLUDES added by NRaine */
  FExec,            /* BINARY_INCLUDES added by NRaine */
  FSize,            /* BINARY_INCLUDES added by NRaine */
  FAttr,            /* BINARY_INCLUDES added by NRaine */
  Chr,
  Str,
  Base,
  Index,
  Defined,
  ODummy
  } Operator;

typedef enum EStackType { OperatorEST, OperandEST } EStackType;

typedef enum OperandType {
  UnDefOT,
  ConstantOT,
  StringOT,
  PCRelOT,
  RegRelOT,
  LogicalOT
  } OperandType;

typedef CARDINAL PCRelOperand;

typedef struct RegRelOperand {
  unsigned char registers[16];
  CARDINAL offset;
  BOOLEAN  based;
} RegRelOperand;

typedef struct Operand {
  OperandType operandType;
  union {
    /* case ConstantOT, UnDefOT */
    CARDINAL      constant;
    Name          string;
    PCRelOperand  pLabel;
    RegRelOperand regRel;
    BOOLEAN       bool;
  } u; /* case */
} Operand; /* record */

typedef struct EStackEntry {
  EStackType type;
  union {
    /* case OperatorEST */
    Operator operater;        /* avoid C++ keyword */
    Operand  operand;
  } u;
} EStackEntry;

#define EStackLimit 256 /* Max items on the expression stack (was 512) */

#define MaxStringSize 512 /* Max size a string may become internally */

#endif

/* End exprtyp.h */
