/* -> condasm.h
 * Title: The IF, WHILE and structure stack handler
 * Copyright (C) 1991 Advanced RISC Machines Limited. All rights reserved.
 */

#ifndef conditionals_h
#define conditionals_h

#include "getline.h"
#include "globvars.h"
#include "nametyp.h"

extern BOOLEAN notSkipping;

typedef enum StructureStackElementType {
   ConditionalSSET,
   WhileSSET,
   GetSSET,
   MacroSSET
   } StructureStackElementType;

typedef struct {
  BOOLEAN notSkipping;    /* previous value */
  ListStatus state;
} CondElement;

typedef struct {
  CARDINAL   lineNumber;
  char      *pointer;
  BOOLEAN notSkipping;    /* previous value */
  ListStatus state;
} WhileElement;

typedef struct {
  FileReadMode inputMode; /* Only relevant at top level macro call */
  union {
    /* case WholeFileLoad */
    char *storePointer;
    /* case ByteStream */
    CARDINAL fileOffset;
  } u;
  CARDINAL   lineNumber;
  Name       name; /* This holds the current file or macro name */
  ListStatus state;
} MacroElement;

typedef struct {
  FileReadMode inputMode; /* Only relevant at top level macro call */
  union {
    /* case WholeFileLoad */
    char *storePointer;
    /* case ByteStream */
    CARDINAL fileOffset;
  } u;
  CARDINAL   lineNumber;
  Name       fileName; /* This holds the current file or macro name */
  char      *fileStart;
  CARDINAL   fileLen;  /* For the benefit of caching GET files */
} GetElement;

typedef struct {
  StructureStackElementType type;
  union {
    /* case ConditionalSSET */
    CondElement  condEl;

    /* case WhileSSET */
    WhileElement whileEl;

    /* case GetSSET */
    GetElement   file;

    /* case MacroSSET */
    MacroElement macro;
  } u;
} StructureStackElement;

BOOLEAN Stack(StructureStackElement s);

BOOLEAN Unstack(StructureStackElement *s);

BOOLEAN GetTopOfStack(StructureStackElement *s);

void InitStructureStack(void);

void InitErrorAccess(void);

BOOLEAN NextMacroElement(StructureStackElement *s);

void UnwindToGet(void);

void ReportAllGetLines(void);

#endif

/* End condasm.h */
