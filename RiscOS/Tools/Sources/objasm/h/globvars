/* -> globvars.h
 * Title: The global variables
 * Copyright (C) 1991 Advanced RISC Machines Limited. All rights reserved.
 * RCS $Revision$
 */

#ifndef globalvars_h
#define globalvars_h

#include "constant.h"

typedef enum EXCEPTION {
  None,
  EndOfInput,
  StackOverflow,
  StackUnderflow,
  StackErr,
  FileNotFound
  } EXCEPTION;

typedef enum {
   ListPC,
   ListCondPC,
   ListSETPC,
   ListMacExpPC,
   ListMacCallPC,
   ListMendPC,
   ListOptsPC
   } PrintControl;

typedef int ListStatus; /* SET OF PrintControl */

typedef enum {
   AbsoluteAM,
   RelocatableAM
   } AsmMode;

typedef enum {
   FixedVCT,
   RelativeVCT
   } VCType;

typedef struct {
  CARDINAL offset,
           reg;
} RelativeVC;

typedef struct {
  VCType   type;
  union {
    /* Case FixedVCT */
    CARDINAL offset;
    /* Case RelativeVCT */
    RelativeVC relativeVC;
   } u;
} VariableCounter;

extern CARDINAL programCounter,
                fileSize,
                maxCache,
                loadAddress;

extern VariableCounter variableCounter;

typedef enum {
   APCS_None,
   APCS_A,
   APCS_U,
   APCS_3
   } CallingStandard;

extern CallingStandard callingStandard;

extern AsmMode asmMode;

extern int     pass;        /* 1, 2 */

extern int     macroLevel;  /* [0..255] */

extern BOOLEAN printState,
               asmModeSet,
               quitFlag,
               abortFlag,
               inMacroDef,
               terseState,
               allowFP,
               hadFP,
               xrefOn,
               stamp,
               caching,
               c_escapes,
               target_is_big_endian,
               sw_stack_check,
               reentrant,
               pc_is_32bit,
               module;

#ifdef HOST_IS_RISCOS
extern BOOLEAN absolute_flag,
               uppercase_flag;
#endif

extern ListStatus listStatus,
                  nextListState;

extern EXCEPTION exception;

extern CARDINAL cpu_version, nofp;

#endif

/* End globvars.h */
