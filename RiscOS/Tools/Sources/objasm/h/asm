/* -> asm.h
 * Title: Top level assembly routine
 * Copyright (C) 1991 Advanced RISC Machines Limited. All rights reserved.
 */

#ifndef asm_h
#define asm_h

#ifndef AAsm
#  include "aof.h"
#endif

#include "constant.h"
#include "getline.h"

#include <stdio.h>

extern char currentFileName[MaxLineLength+1],
            codeFileName[MaxLineLength+1];

#ifndef AAsm
extern aof_symbol *extern_symbolTable;
extern struct nlist *aout_symbolTable;
extern char       *stringTable;
#endif

extern BOOLEAN inFile;
extern char   *fileStore;
extern FILE   *codeStream,
              *inputStream;
extern BOOLEAN inputStreamExists;

extern void AddIncludePath(const char *path);
/* Add the comma-separated list of places to the BSD-like search path */

extern void AddPreDefine(const char *path);
/* Add a pre-definition directive to the pre-define list */

extern void Asm(char *fileName);
/* Run an assembly starting at file fileName*/

extern BOOLEAN P1File(BOOLEAN stream);
/* Do the first pass, returning TRUE if END directive encountered */

extern BOOLEAN P2File(BOOLEAN stream);
/* Do the second pass, returning TRUE if END directive encountered */
                                                                   
extern void CopyFileName(char *pointer);
/* Get the new file name to be linked to and put it in currentFileName */

extern char *error_filename(void);

extern void set_error_filename(char *filename);

extern void Init_Asm(void);

#endif

/* End asm.h */
