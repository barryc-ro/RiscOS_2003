/* -> nametyp.c
 * Title: Name handling
 * Copyright (C) 1991 Advanced RISC Machines Limited. All rights reserved.
 */

#include "nametyp.h"
#include "store.h"
#include <ctype.h>
#include <stdlib.h>
#include <string.h>

BOOLEAN NameLookup(Name *nameTable, Name name, 
  BOOLEAN abbreviate, CARDINAL *index, CARDINAL length)
/*
  abbreviate indicates whether abbreviations are allowed,
  If so they are treated as case-insensitive.
  length is the number of elements in the table.
*/
{
  CARDINAL i;
  for (*index = 0; *index < length; (*index)++) {
    if ((nameTable[*index].length == name.length) ||
      ((nameTable[*index].length >= name.length) && abbreviate)) {
      i = 0;
      if (abbreviate) {
        while ((i < name.length) &&
          (toupper(nameTable[*index].key[i]) == toupper(name.key[i]))) i++;
      } else {
        while ((i < nameTable[*index].length) &&
          (nameTable[*index].key[i] == name.key[i])) i++;
      };
      if (i == name.length) return TRUE;
    };
  };
  return FALSE;
} /* End NameLookup */

void CopyName(CARDINAL number, char *value, Name *table)
/*Set up a command name table element*/
{
  table[number].length = strlen(value);
  table[number].key = (char *)mymalloc((size_t)(table[number].length));
  memcpy(table[number].key, value, (size_t)(table[number].length));
} /* End CopyName */

/* End nametyp.c */
