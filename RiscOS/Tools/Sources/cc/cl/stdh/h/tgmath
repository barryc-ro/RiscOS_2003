#pragma force_top_level
#pragma include_only_once

/* tgmath.h: ISO 'C' (9899:1999) library header, section 7.22 */
/* Copyright (C) Acorn Computers Ltd. 2002 */
/* version 1.00 */

#ifndef __tgmath_h
#define __tgmath_h

/* limited type-generic support - only for reals at the moment */

/* <math.h> isn't yet complete. Fill in all the missing prototypes */
/* to prevent compile-time errors when accessing existing functions. */

float acosf(float); long double acosl(long double);
float asinf(float); long double asinl(long double);
float atanf(float); long double atanl(long double);
float atan2f(float, float); long double atan2l(long double, long double);
float cosf(float); long double cosl(long double);
float sinf(float); long double sinl(long double);
float tanf(float); long double tanl(long double);
double acosh(double); float acoshf(float); long double acoshl(long double);
double asinh(double); float asinhf(float); long double asinhl(long double);
double atanh(double); float atanhf(float); long double atanhl(long double);
float coshf(float); long double coshl(long double);
float sinhf(float); long double sinhl(long double);
float tanhf(float); long double tanhl(long double);
float expf(float); long double expl(long double);
double exp2(double); float exp2f(float); long double exp2l(long double);
double expml(double); float expmlf(float); long double expmll(long double);
float frexpf(float, int *); long double frexpl(long double, int *);
int ilogb(double); int ilogbf(float); int ilogbl(long double);
float ldexpf(float, int); long double ldexpl(long double, int);
float logf(float); long double logl(long double);
float log10f(float); long double log10l(long double);
double log1p(double); float log1pf(float); long double log1pl(long double);
double log2(double); float log2f(float); long double log2l(long double);
double logb(double); float logbf(float); long double logbl(long double);
float modff(float, float *); long double modfl(long double, long double *);
double scalbn(double, int); float scalbnf(float, int);
long double scalbnl(long double, int);
double scalbln(double, long int); float scalblnf(float, long int);
long double scalblnl(long double, long int);
double cbrt(double); float cbrtf(float); long double cbrtl(long double);
long double fabsl(long double);
long double hypotl(long double, long double);
float powf(float, float); long double powl(long double, long double);
float sqrtf(float); long double sqrtl(long double);
double erf(double); float erff(double); long double erfl(long double);
double erfc(double); float erfcf(double); long double erfcl(long double);
double lgamma(double); float lgammaf(double); long double lgammal(long double);
double tgamma(double); float tgammaf(double); long double tgammal(long double);
long double ceill(long double);
long double floorl(long double);
long double nearbyintl(long double);
long double rintl(long double);
long int lrintl(long double);
/* long long int llrint(double); long long int llrintf(float); */
/* long long int llrintl(long double); */
long double roundl(long double);
long int lroundl(long double);
/* long long int llround(double); long long int llroundf(float); */
/* long long int llroundl(long double); */
long double truncl(long double);
float fmodf(float, float); long double fmodl(long double, long double);
long double remainderl(long double, long double);
double remquo(double, double, int *); float remquof(float, float, int *);
long double remquol(long double, long double, int *);
long double copysignl(long double, long double);
long double nanl(const char *);
long double nextafterl(long double, long double);
double nexttoward(double, long double); float nexttowardf(float, long double);
long double nexttowardl(long double, long double);
long double fdiml(long double, long double);
long double fmaxl(long double, long double);
long double fminl(long double, long double);
double fma(double, double, double); float fmaf(float, float, float);
long double fmal(long double, long double, long double);

#include <math.h>

#define __isld(x) (___typeof(x) == 0x202)
#define __isd(x) (___typeof(x) == 0x002)
#define __isi(x) ((___typeof(x) & 0xEA) == 0)
#define __isdi(x) (__isd(x)||__isi(x))

#define __tg_func1(g, x) \
    (__isld(x) ? g##l : \
     __isdi(x) ? g : g##f)

#define __tg_func2(g, x, y) \
    (__isld(x) || __isld(y) ? g##l : \
     __isdi(x) || __isdi(y) ? g : g##f)

#define __tg_func3(g, x, y, z) \
    (__isld(x) || __isld(y) || __isld(z) ? g##l : \
     __isdi(x) || __isdi(y) || __isdi(z) ? g : g##f)

#define __tg_g(f,x)       __tg_func1(f,x) (x)
#define __tg_gx(f,x,a)    __tg_func1(f,x) (x, a)
#define __tg_gg(f,x,y)    __tg_func2(f,x,y) (x, y)
#define __tg_ggx(f,x,y,a) __tg_func2(f,x,y) (x, y, a)
#define __tg_ggg(f,x,y,z) __tg_func3(f,x,y,z) (x, y, z)

#undef acos
#undef asin
#undef atan
#undef acosh
#undef asinh
#undef atanh
#undef cos
#undef sin
#undef tan
#undef cosh
#undef sinh
#undef tanh
#undef exp
#undef log
#undef pow
#undef sqrt
#undef fabs

#define acos(x)  ___tg(acos,(x))

#define acos(x)  __tg_g(acos, (x))
#define asin(x)  __tg_g(asin, (x))
#define atan(x)  __tg_g(atan, (x))
#define acosh(x) __tg_g(acosh, (x))
#define asinh(x) __tg_g(asinh, (x))
#define atanh(x) __tg_g(atanh, (x))
#define cos(x)   __tg_g(cos, (x))
#define sin(x)   __tg_g(sin, (x))
#define tan(x)   __tg_g(tan, (x))
#define cosh(x)  __tg_g(cosh, (x))
#define sinh(x)  __tg_g(sinh, (x))
#define tanh(x)  __tg_g(tanh, (x))
#define exp(x)   __tg_g(exp, (x))
#define log(x)   __tg_g(log, (x))
#define pow(x,y) __tg_gg(pow, (x), (y))
#define sqrt(x)  __tg_g(sqrtx, (x))
#define fabs(x)  __tg_g(fabs, (x))

#undef atan2
#undef cbrt
#undef ceil
#undef copysign
#undef erf
#undef erfc
#undef exp2
#undef expml
#undef fdim
#undef floor
#undef fma
#undef fmax
#undef fmin
#undef fmod
#undef frexp
#undef hypot
#undef ilogb
#undef ldexp
#undef lgamma
#undef llrint
#undef llround
#undef log10
#undef log1p
#undef log2
#undef logb
#undef lrint
#undef lround
#undef nearbyint
#undef nextafter
#undef nexttoward
#undef remainder
#undef remquo
#undef rint
#undef round
#undef scalbn
#undef scalbln
#undef tgamma
#undef trunc

#define atan2(x,y) __tg_gg(atan2, (x), (y))
#define cbrt(x)    __tg_g(cbrt, (x))
#define ceil(x)    __tg_g(ceil, (x))
#define copysign(x,y) __tg_gg(copysign, (x), (y))
#define erf(x)     __tg_g(erf, (x))
#define erfc(x)    __tg_g(erfc, (x))
#define exp2(x)    __tg_g(exp2, (x))
#define expml(x)   __tg_g(expml, (x))
#define fdim(x,y)  __tg_gg(fdim, (x), (y))
#define floor(x)   __tg_g(floor, (x))
#define fma(x,y,z) __tg_ggg(fma, (x), (y), (z))
#define fmax(x,y)  __tg_gg(fmax, (x), (y))
#define fmin(x,y)  __tg_gg(fmin, (x), (y))
#define fmod(x,y)  __tg_gg(fmod, (x), (y))
#define frexp(x)   __tg_g(frexp, (x))
#define hypot(x,y) __tg_gg(hypot, (x), (y))
#define ilogb(x)   __tg_g(ilogb, (x))
#define ldexp(x,i) __tg_gx(ldexp, (x), (i))
#define lgamma(x)  __tg_g(lgamma, (x))
#define llrint(x)  __tg_g(llrint, (x))
#define llround(x) __tg_g(llround, (x))
#define log10(x)   __tg_g(log10, (x))
#define log1p(x)   __tg_g(log1p, (x))
#define log2(x)    __tg_g(log2, (x))
#define logb(x)    __tg_g(logb, (x))
#define lrint(x)   __tg_g(lrint, (x))
#define lround(x)  __tg_g(lround, (x))
#define nearbyint(x) __tg_g(nearbyint, (x))
#define nextafter(x,y) __tg_gg(nextafter, (x), (y))
#define nexttoward(x,y) __tg_gx(nexttoward, (x), (y))
#define remainder(x,y) __tg_gg(remainder, (x), (y))
#define remquo(x,y,i) __tg_ggx(remquo, (x), (y), (i))
#define rint(x)    __tg_g(rint, (x))
#define round(x)   __tg_g(round, (x))
#define scalbn(x,i) __tg_gx(scalbn, (x), (i))
#define scalbln(x,i) __tg_gx(scalbln, (x), (i))
#define tgamma(x)  __tg_g(tgamma, (x))
#define trunc(x)   __tg_g(trunc, (x))

#endif

/* end of tgmath.h */
