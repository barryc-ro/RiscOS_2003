#include "globals.h"

#include <stdlib.h>
#include <string.h>

#include "kernel.h"

#include "lex.h"     /* for curlex */
#include "errors.h"
#include "dde.h"

#define dde_fatal_percent_s "%s"
#define dde_fatal_atexit "Can't register atexit handler for throwback"

#define Throwback_Register      0x42585
#define Throwback_UnRegister    0x42586
#define Throwback_Start         0x42587
#define Throwback_Send          0x42588
#define Throwback_End           0x42589

#define Throwback_ReasonProcessing   0
#define Throwback_ReasonErrorDetails 1

#define DDEUtils_Prefix         0x42580

int32 dde_throwback_flag;
char *dde_desktop_prefix = 0;

static int throwback_id = -1;
static int exit_handler = 0;
static int prefix_set = 0;
static int sent_procfile_msg = 0;

/* IDJ hack: 14-Mar-91: remember (for each file processed) whether 
 * we have sent a processing file throwback msg
*/

static void dde_exit(void)
{
    _kernel_swi_regs r;
    _kernel_oserror *err;

    if (throwback_id >= 0) {
        r.r[0] = throwback_id;
        err = _kernel_swi(Throwback_End, &r, &r);
        if (err)
            cc_fatalerr(dde_fatal_percent_s, err->errmess);
    }
#if 0
    if (prefix_set) {
        r.r[0] = 0;
        _kernel_swi(DDEUtils_Prefix, &r, &r);
    }
#endif
}

static void throwback_start(void)
{
    _kernel_swi_regs r;

    if (!exit_handler && atexit(dde_exit))
        cc_fatalerr(dde_fatal_atexit);
    exit_handler = 1;
    if (!_kernel_swi(Throwback_Start, &r, &r))
        throwback_id = 1;
}


void dde_sourcefile_init(void)
{
   sent_procfile_msg = 0; 
}


void dde_throwback_send(int severity, int32 line, char *msg)
{
    _kernel_swi_regs r;
    _kernel_oserror *err;

    if (!sent_procfile_msg) {
        throwback_start();        /* this is naughty but editor sorts it out */
        if (throwback_id >= 0) {
            r.r[0] = Throwback_ReasonProcessing;
            r.r[1] = throwback_id;
            r.r[2] = (int)sourcefile;
            err = _kernel_swi(Throwback_Send, &r, &r);
            if (err) cc_fatalerr(dde_fatal_percent_s, err->errmess);
            sent_procfile_msg = 1;
        }
    }
    if (throwback_id >= 0) {
        r.r[0] = Throwback_ReasonErrorDetails;
        r.r[1] = throwback_id;
        r.r[2] = (int)curlex.fl.f;      /* used to be pp_cisname, but retired now */
        r.r[3] = (int)line;
        r.r[4] = severity;
        r.r[5] = (int)msg;
        err = _kernel_swi(Throwback_Send, &r, &r);
        if (err) cc_fatalerr(dde_fatal_percent_s, err->errmess);
    }
}

void dde_prefix_init(char *fname)
{
    char *s, *p, *t;
    char c;
    char prefix[256];
    _kernel_swi_regs r;

    if (dde_desktop_prefix) {
        if (!exit_handler && atexit(dde_exit))
            cc_fatalerr(dde_fatal_atexit);
        exit_handler = 1;
        prefix_set = 1;
        s = fname;
        p = t = prefix;
        while ((c = *t++ = *s++) > ' ')
            if (c == ':' || c == '.')
                p = t;
        strcpy(p, dde_desktop_prefix);
        r.r[0] = (int)prefix;
        _kernel_swi(DDEUtils_Prefix, &r, &r);
    }
}

