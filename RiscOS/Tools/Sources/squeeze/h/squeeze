typedef unsigned int word;
typedef enum { NO, YES } bool;

typedef struct aifhdr {
    word  bl_decompress;
    word  bl_selfreloc;
    word  bl_zeroinit;
    word  bl_imageentry;
    word  swi_exit;
    int   codesize;
    int   datasize;
    int   debugsize;
    int   zerosize;
    int   debugtype;
    int   imagebase;
    int   reserved[5];
    word  zeroinit[16];
} aifhdr;

#define AIFBYTES   sizeof(aifhdr)  /* size in bytes of an AIF header */
#define AIFWORDS   (AIFBYTES / sizeof(int))
#define AIFPRELUDE 3 /* no of extra instructions in AIF decompression */
#define PREFETCH   2 /* words of ARM prefetch */

typedef struct datahdr {
    word  bl_decompress;
    word  datamagic;
    word  load;
    word  exec;
    word  size;
} datahdr;

#define DATABYTES sizeof(datahdr)
#define DATAWORDS (DATABYTES / sizeof(int))
#define DATAMAGIC 0x213542
#define SQUEEZED 0xffffea00

typedef struct SqueezeHeader {
  int decodedsize;
  int encodedsize;
  int encodedtabs;
  int nshorts;
  int nlongs;
  int bytestomove;
} SqueezeHeader;

#define SQUEEZEBYTES sizeof(SqueezeHeader)
#define SQUEEZEWORDS (SQUEEZEBYTES / sizeof(int))

#define B 0xea000000
#define BL 0xeb000000
#define B_OFFSET 0x00ffffff
#define MOV_PC_R8 0xe1a0f008
#define ADD_R8_R8_0 0xe2888000
#define SUB_R8_R8_0 0xe2488000
#define MOV_R0_R0 0xe1a00000
#define LDR_PC_R8_MINUS4 0xe518f004
#define NV (0xf0000000 - 0xe0000000)
