/**************************************************************/
/* File:    ServMenu.c                                        */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Handle the Service menu.                          */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 16-Nov-2000 (ADH): Created from EventMenu.c.      */
/**************************************************************/

#include <stdio.h>
#include <string.h>
#include <stdbool.h>

#include <kernel.h>
#include <swis.h>

#include <tboxlibs/toolbox.h>
#include <tboxlibs/gadgets.h>
#include <tboxlibs/menu.h>

#include "Breakpoint.h"
#include "DynaMenu.h"
#include "Errors.h"
#include "File.h"
#include "Global.h"
#include "Limit.h"
#include "Menus.h"
#include "Utils.h"

#include "ServMenu.h"

/* Local definitions */

#define ServicesFileToken "ServicesFile"

/* Local variables */

static ComponentId    final  = NULL_ComponentId; /* Last component ID in the menu.                         */
static ComponentId    ticked = NULL_ComponentId; /* Only one menu can be open at a time, and we only allow */
                                                 /* one ticked entry.                                      */

static unsigned int   dload  = 0;                /* Default and User description file load and exec dates, */
static unsigned int   dexec  = 0;                /* used to work out whether or not the menu needs to be   */
static unsigned int   uload  = 0;                /* rebuilt.                                               */
static unsigned int   uexec  = 0;

static config       * dhead  = NULL;             /* Cached config file data.                               */

/**************************************************************/
/* servmenu_to_be_shown()                                     */
/*                                                            */
/* Called before the Service menu is displayed.               */
/*                                                            */
/* Parameters are as standard for a Toolbox event handler.    */
/**************************************************************/

int servmenu_to_be_shown(int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle)
{
  unsigned int lload, lexec;

  dprintf(("SvMe", "servmenu_to_be_shown: Called\n"));

  /* Does the menu need (re)building? */

  ChkError(_swix(OS_File,
                 _INR(0,1) | _OUTR(2,3),

                 17,
                 lookup_token(ServicesFileToken, 0),

                 &lload,
                 &lexec));

  lload &= 0xff;

  if (lload != dload || lexec != dexec)
  {
    if (dload != 0 && dexec != 0)
    {
      file_free_configuration(dhead);
      dhead = NULL;
    }

    ChkError(dynamenu_build(idb->self_id,
                            ServMenu_CID_First,
                            &final,
                            ServicesFileToken,
                            &dhead));

    dload = lload;
    dexec = lexec;
  }

  /* Work out what, if anything, should be ticked */

  ChkError(menus_common_set_tick(idb,
                                 &ticked,
                                 Breakpoint_CID_ServiceCallWriteable,
                                 NULL_ComponentId,
                                 Limits_Breakpoint_SCWriteable,
                                 ServMenu_CID_First,
                                 final));

  dprintf(("SvMe", "servmenu_to_be_shown: Successful\n"));

  return 0;
}

/**************************************************************/
/* servmenu_selection()                                       */
/*                                                            */
/* Handle selection of a Service menu item.                   */
/*                                                            */
/* Parameters are as standard for a Toolbox event handler.    */
/**************************************************************/

int servmenu_selection(int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle)
{
  dprintf(("SvMe", "servmenu_selection: Called\n"));

  ChkError(menus_common_selection(idb,
                                  &ticked,
                                  Breakpoint_CID_ServiceCallWriteable,
                                  NULL_ComponentId,
                                  Breakpoint_CID_ServiceCallRadio));

  dprintf(("SvMe", "servmenu_selection: Successful\n"));

  return 0;
}

/**************************************************************/
/* servmenu_deleted()                                         */
/*                                                            */
/* If the Service menu is deleted for any reason, we'll have  */
/* to rebuild it next time it's shown.                        */
/*                                                            */
/* Parameters are as standard for a Toolbox event handler.    */
/* 'handle' should old the Object ID of this item for a       */
/* sanity check.                                              */
/**************************************************************/

int servmenu_deleted(int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle)
{
  dprintf(("SvMe", "servmenu_deleted: Called for &%08X\n", (int) idb->self_id));

  ticked = NULL_ComponentId;
  final  = NULL_ComponentId;

  dload  = 0;
  dexec  = 0;
  uload  = 0;
  uexec  = 0;

  dprintf(("SvMe", "servmenu_deleted: Successful\n"));

  return 0;
}
