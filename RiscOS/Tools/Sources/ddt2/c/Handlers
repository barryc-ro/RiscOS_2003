/**************************************************************/
/* File:    Handlers.c                                        */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Event handlers.                                   */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 07-Feb-1997 (ADH): Created.                       */
/*          10-Apr-2000 (ADH): 64-wide comments adopted.      */
/*          17-Apr-2000 (ADH): Fragment imported to PlugPlay. */
/*          16-Oct-2000 (ADH): Fragments imported to DDT2     */
/*                             from PlugPlay and Browse.      */
/**************************************************************/

#include <Global/RISCOS.h>
#include <Global/Services.h>
#include <kernel.h>

#include <tboxlibs/wimp.h>
#include <tboxlibs/wimplib.h>
#include <tboxlibs/event.h>
#include <tboxlibs/toolbox.h>
#include <tboxlibs/proginfo.h>

#include <URI.h>
#include <VideoCtrl.h>

#include "Errors.h"
#include "FromROSLib.h"
#include "Global.h"
#include "MiscDefs.h"
#include "Utils.h"

#include "Handlers.h"

/**************************************************************/
/* handle_messages()                                          */
/*                                                            */
/* Deal with Wimp messages for reason codes 17 and 18 (type   */
/* 19, acknowledges, are handled in handle_ack below).        */
/* Parameters are as standard for a Wimp message handler.     */
/*                                                            */
/* This function farms off a lot of its responsibilities to   */
/* functions in Protocols.c.                                  */
/**************************************************************/

int handle_messages(WimpMessage * m, void * handle)
{
  switch (m->hdr.action_code)
  {
    case Wimp_MQuit: quit = 1;
    break;

    case Wimp_MModeChange:
    {
      if (!printing) wimpt_read();
      read_os_to_points();
    }
    break;
  }

  return 1;
}

/**************************************************************/
/* handle_show_info()                                         */
/*                                                            */
/* Put version number in program info window; called on a     */
/* ProgInfo_AboutToBeShown event. Parameters are as standard  */
/* for a Toolbox event handler.                               */
/**************************************************************/

int handle_show_info(int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle)
{
  lookup_token("Version",0);

  ChkError(proginfo_set_version(0,
                                idb->self_id,
                                tokens));

  return 1;
}
