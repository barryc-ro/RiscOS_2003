/**************************************************************/
/* File:    Limit.h                                           */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Definitions relating to fundamental limits of the */
/*          application.                                      */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 04-Apr-2000 (ADH): Adapted from Browse source.    */
/*          16-Oct-2000 (ADH): Imported from PlugPlay.        */
/**************************************************************/

#ifndef DDT2_Limit__
  #define DDT2_Limit__

  /***************************************************************************************/
  /*                                                                                     */
  /* Hard coded application limits                                                       */
  /* =============================                                                       */
  /*                                                                                     */
  /* Many of these are hard coded limits required since C won't let you do things like:  */
  /*                                                                                     */
  /* {                                                                                   */
  /*   char buffer[strlen(struct->path) + extralen];                                     */
  /*                                                                                     */
  /*   ...                                                                               */
  /* }                                                                                   */
  /*                                                                                     */
  /* Others are OS limits, or derived from OS limits; they may be related to the scope   */
  /* of values in related URLs; and so-on.                                               */
  /*                                                                                     */
  /* In the lists below, a description of what the limit represents is given. Where      */
  /* these are used can be worked out by loading all source / header files and doing a   */
  /* global List Of Found. The description is followed by a single digit code:           */
  /*                                                                                     */
  /* D  The size is arbitrary, though changing the value may have unpredictable effects  */
  /*    and so every case must be considered in light of the code relevant to the limit  */
  /*    in question.                                                                     */
  /*                                                                                     */
  /*    The next three are generally relevant to string buffers:                         */
  /*                                                                                     */
  /* S  The buffer is 'safe', i.e. it can be reduced in size and should not be overrun   */
  /*    if something too big to fit in it is generated. Errors may be raised in this     */
  /*    case though (e.g. Buffer Too Short complaints from the Toolbox). Correct         */
  /*    behaviour is not guaranteed at sizes of 2 bytes or less.                         */
  /*                                                                                     */
  /* U  The buffer is 'unsafe', i.e. code assumes that whatever is to fit in the buffer  */
  /*    will always do so. The sizes defined here must thus be chosen with careful       */
  /*    consideration of the code involved. Some of these may have guards on them for    */
  /*    TRACE builds.                                                                    */
  /*                                                                                     */
  /* P  Some buffers may be unsafe to an extent in one place but safe elsewhere, in      */
  /*    which case they generally have to be treated as unsafe. It may be possible to    */
  /*    modify code at some future time and make all usages safe though, so the          */
  /*    distinction is made.                                                             */
  /*                                                                                     */
  /* Where buffers are related to string lengths, any relevant terminators are included  */
  /* in the length.                                                                      */
  /*                                                                                     */
  /***************************************************************************************/

  /* First, Messages file related limits. */

  #define Limits_Token                    32   /* Length of any given Messages file token       S */
  #define Limits_Message                  512  /* Length of any given Messages file message     S */
  #define Limits_TaskName                 64   /* Length of the _TaskName message (U) - used    P */
                                               /* also for enumerating task names from the        */
                                               /* Task Manager and for the flex library (S)       */
  #define Limits_StatusFormat             50   /* Length of the Page, Fetch, Process, Format,   S */
                                               /* and LinkTo messages                             */

  /* Resource (Res) file determined limits (Res files must be kept in  */
  /* sync with these - that is, any Res file buffer which has an entry */
  /* here should be exactly the size that the entry defines).          */

  #define Limits_Help                     256  /* Maximum length of help text for any gadget    S */
  #define Limits_Writeable_General        999  /* Maximum length of general writeable fields    S */

  /* OS defined limits (these may not necessarily be actual OS limits,   */
  /* but OS related limits which the browser has to enforce internally). */

  #define Limits_OS_SpriteName            13   /* Sprite name (plus terminator)                 U */
  #define Limits_OS_Pathname              8192 /* Maximum length of any given pathname, e.g.    P */
                                               /* the Choices file (U) or save dialogue           */
                                               /* pathnames (S).                                  */

  /* Source file or function local limits for any build... */

  #define Limits_URL                      6144 /* Length of a URL (or URI) string               S */
  #define Limits_Leafname                 64   /* Length of a leaf name for app to app saves    S */

#endif /* DDT2_Limit__ */
