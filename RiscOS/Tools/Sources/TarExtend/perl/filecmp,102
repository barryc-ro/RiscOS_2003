###########################################################################
# File:        filecmp (implemented from the attached pseudo version)
# Description: Compares two files, reporting entries which exist in
#              one file, but not in the other.  The check works both ways, 
#              on both files.  
# Assumptions: a) Typical file format as follows:
#                 a 03-08.!Builder.!Boot, 55 bytes, 1 block
#                 a 03-08.!Builder.!Help, 2080 bytes, 5 blocks
#                 x 03-08.!Builder.!Boot, 55 bytes, 1 block
#              b) Single file does not contain duplicate entries.
#              c) Files do not contain blank lines.
#              d) Files are extracted in the same order that they were
#                 archived, although of course, files may be missing.
#              e) Filenames with files do not contain the '#' character.
# ToDo:        a) If the files being compared are radically different from
#                 each other, we'll eventually run out of memory.  Handle
#                 this cleanly.  
# History:     11-Feb-1999  SRose  Created.
#              12-Feb-1999  SRose  Few bug fixes (Perl mistakes).
###########################################################################

die ("Usage: $0 file1 file2\n") if (@ARGV != 2);
open (F1,$ARGV[0]) || die ("Can't open input file $ARGV[0]\n");
open (F2,$ARGV[1]) || die ("Can't open input file $ARGV[1]\n");
@listA = (""); @listB = ("");

do
{ 
  $line_f1 = <F1>;  $line_f2 = <F2>;
  chomp $line_f1;   chomp $line_f2; 
  chop $line_f1 if ($line_f1 =~ /(.*)\r$/);
  chop $line_f2 if ($line_f2 =~ /(.*)\r$/);
  $flag = 1;
  
  $line = $line_f1;
  if ($line =~ /(a|x)\s(.+)/)
  {
      $line_f1 = $2;
  }
  elsif ($line ne "")
  {
      die ("Unexpected line format: $line_f1");
  }
  
  $line = $line_f2;
  if ($line =~ /(a|x)\s(.+)/)
  {
      $line_f2 = $2;
  }
  elsif ($line ne "")
  {
      die ("Unexpected line format: $line_f2");
  }
 
  if ($line_f1 ne $line_f2)
  {
      $listcontents = join("#", "", @listB,"");
      while (($listcontents =~ /#$line_f1#/) && ($line_f1 ne ""))
      {
             $i = 0;
             while ($i < @listB)
             {
                if ($listB[$i] eq $line_f1)
                {
                    splice (@listB,$i,1);
                }
                $i++;
             }
             $line_f1 = <F1>; 
             chomp $line_f1;
             chop $line_f1 if ($line_f1 =~ /(.*)\r$/);
             $line = $line_f1;
             
             if ($line =~ /(a|x)\s(.+)/)
             {
                 $line_f1 = $2;
             }
             elsif ($line ne "")
             {
                    die ("Unexpected line format: $line_f1");
             }
             
             $flag = 0;
      }
      
      if (($flag == 0) && ($line_f1 ne $line_f2))
      {
           push @listA, $line_f1;
      }
      
      $listcontents = join("#", "", @listA,"");
      while (($listcontents =~ /#$line_f2#/) && ($line_f2 ne ""))
      {
             $i = 0;
             while ($i < @listA)
             {
                if ($listA[$i] eq $line_f2)
                {
                    splice (@listA, $i, 1);
                }
                $i++;
             }
             
             $line_f2 = <F2>;  
             chomp $line_f2;
             chop $line_f2 if ($line_f2 =~ /(.*)\r$/);
             $line = $line_f2;
             
             if ($line =~ /(a|x)\s(.+)/)
             {
                 $line_f2 = $2;
             }
             elsif ($line ne "")
             {
                 die ("Unexpected line format: $line_f2");
             }
             
             $flag = 0;
      }
      
      if (($flag == 0) && ($line_f2 ne $line_f1))
      {
           push @listB, $line_f2;
      }
      
      if ($flag)
      {
          push @listA, $line_f1;
          push @listB, $line_f2;
      }
   }
}  until (($line_f1 eq "") && ($line_f2 eq ""));

$identical = 1;

for ($i = 0; $i < @listA; $i++)
{
     if ($listA[$i] ne "")
     {
         print("$listA[$i] is missing from $ARGV[1]\n");
         $identical = 0;
     }
}

for ($i = 0; $i < @listB; $i++)
{
     if ($listB[$i] ne "")
     {
         print("$listB[$i] is missing from $ARGV[0]\n");
         $identical = 0;
     }
}

if ($identical)
{
    print("$ARGV[0] and $ARGV[1] are identical.\n");
}
