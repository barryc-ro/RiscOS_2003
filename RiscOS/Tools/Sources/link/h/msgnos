/*
  Title:     Messages and Message Numbers
  Status:    AOF Linker Source
  Copyright: (C) 1991 Advanced RISC Machines Limited. All rights reserved.
*/

/*
 * RCS $Revision$
 * Checkin $Date$
 * Revising $Author$
 */

#ifndef __msgnos_h
#define __msgnos_h

#define msgtext(a) (a)
typedef char *Message_t;

/* HELP_TEXT_FORMAT is:
   <SELF><IDFNSTR> [DATE]

   Command format: <invoked-name> ...
 */
#define HELP_TEXT_FORMAT  "%s%s [%s]\n\
\n\
Command format: %s [options] object_file1, object_file2 ...\n\n"

#define HELP_TEXT_GENERAL_1  "\
General options (abbreviations shown capitalised):\n\
-Output file       Put final output in 'file'\n\
-Debug             Include debugging information in image\n\
-ERRORS file       Put diagnostics to 'file', not stderr\n\
-LIST file         Put Map and Xref listing to 'file', not stdout\n"

#define HELP_TEXT_GENERAL_2  "\
-VIA file          Take more object file names from 'file'\n\
-Verbose           Give informational message while linking\n\
-MAP               Print an area map to the standard output\n\
-Xref              Print an area cross-reference list\n\
-Symbols file      List symbol definitions to 'file'\n"

#ifdef TARGET_HAS_SYMDEFS
#define HELP_TEXT_GENERAL_3  "\
-Symdefs file      Update/create SYMDEFS definition file 'file'\n\n"
#else
#define HELP_TEXT_GENERAL_3  "\n"
#endif


#define HELP_TEXT_OPTS_1  "\
Output options:\n\
-AIF               Absolute AIF (the default)\n\
-AIF -Relocatable  Relocatable AIF\n\
-AIF -R -Workspace nnn     Self-moving AIF\n\
-AOF               Partially linked AOF\n\
-BIN               Plain binary\n\
-BIN -AIF          Plain binary described by a prepended AIF header\n"

#define HELP_TEXT_OPTS_2  "\
-IHF               Intellec Hex Format (readable text)\n\
-SPLIT             Output RO and RW sections to separate files (-BIN, -IHF)\n\
-SHL file          Shared-library + stub, as described in 'file'\n\
-SHL file -REENTrant   Shared-library + reentrant stub\n\
-RMF               RISC OS Module\n\
-OVerlay file      Overlaid image as described in 'file'\n"

#ifdef TARGET_HAS_ELF
#define HELP_TEXT_OPTS_3 "\
-ELF               Executable and Linking Format\n\n"
#else
#define HELP_TEXT_OPTS_3 "\n"
#endif

#define HELP_TEXT_SPECIAL_1  "\
Special options:\n\
-RO-base n\n\
-Base    n         Specify base of image\n\
-RW-base n\n\
-DATA    n         Specify separate base for image's data\n\
-Entry   n         Specify entry address\n\
-Entry n+obj(area) Specify entry as offset within area\n\
(prefix 'n' with & or 0x for hex; postfix witk K for *2^10, M for *2^20)\n\
-Case              Ignore case when symbol matching\n\
-MATCH n           Set last-gasp symbol matching options\n"

#define HELP_TEXT_SPECIAL_2  "\
-FIRST obj(area)   Place 'area' from object 'obj' first in the output image\n\
-LAST  obj(area)   Place 'area' from object 'obj' last...\n\
-NOUNUSEDareas     Don't eliminate AREAs unreachable from the AREA \n\
                       containing the entry point (AIF images only).\n\
-Unresolved sym    Make all unresolved references refer to 'sym'.\n\
-rescan            Rescan libraries to fix up unresolved references.\n"

#define HELP_TEXT_SPECIAL_3  "\
-C++               Support C++ external naming conventions.\n"


#define MSG_FORMAT          "%s: %s"
                            /* SELF, followed by msglevel_<level> */

#define msglevel_fatal      "(Fatal) "
#define msglevel_error      "(Error) "
#define msglevel_warning    "(Warning) "
#define msglevel_info       ""


#define fatal_truncated(ss) "3Name %s has been truncated.",ss
#define fatal_outmem        "3Out of memory."
#define fatal_toobig(n)     "3Memory request (%lu bytes) too big.", n
#define fatal_tabtoobig(n)  "3Internal table (%lu entries) too big.",n
#define fatal_readerr(ss)   "3Error reading file %s.", ss
#define fatal_openerr(ss)   "3Can't open %s.", ss
#define fatal_badobj(ss)    "3Input file %s corrupt.", ss
#define fatal_byteslost(nn, addr) \
    "3%lu bytes of part-word lost after word 0x%.lx of IHF output.\n", nn, addr
#define fatal_writeerr(ss)   "3Error writing %s.", ss
#define fatal_noentry       "3No entry point for image."
#define fatal_optype(nn)    "3Unknown output type[%d].", nn
#define fatal_badelf_file(ss) "3ELF file %s does not contain any valid sections",ss
#define fatal_badelf_badsh(ss) "3ELF file %s does not contain a valid section header table",ss
#define fatal_badelf_badsymt(ss,nn) "3ELF file %s contains an invalid symbol table in section %ld",ss,nn
#define fatal_badelf_class(ss,cc) "3ELF class of %s not supported (%s).",ss,cc
#define fatal_badelf_class_x(ss,cc) "3ELF class of %s unknown (EI_CLASS %#x).",ss,cc
#define fatal_badelf_encoding(ss,cc) "3ELF %s encoding in %s not supported.",ss,cc
#define fatal_badelf_encoding_x(ss,cc) "3Unknown ELF encoding in %s (EI_DATA %#x).",ss,cc
#define fatal_badelf_version(ss,vv) "3ELF version %#x in file %s not supported",vv,ss
#define fatal_badelf_type(ss,tt) "3%s is not a%s ELF object file",ss,tt
#define fatal_badelf_reloc(ss,aa) "3ELF relocation refers to out-of-range offset in area %s in file %s",aa,ss
#define fatal_badelf_norsupp(ss,dd) "3Unsupported ARM ELF relocation type %d in file %s",dd,ss
#define fatal_badelf_ovun "3ELF relocation caused overflow/underflow"
#define fatal_notobj(ss)    "3%s is not an object or library file.", ss
#define fatal_byteorder(ss) \
    "3%s has the opposite byte order to the preceding objects.", ss
#define fatal_misslevel(cc) \
    "3Can't create segment level %c until previous levels declared.", cc
#define fatal_missseg(ss)\
    "3Can't create segment %s until previous segments declared.", ss
#define fatal_badovname(f,l,ss) \
    "3%s, line %lu: bad overlay segment name %s.", f, l, ss
#define fatal_badspace(f,l) "3%s, line %lu: whitespace following '('.", f, l
#define fatal_badspace2(f,l) \
    "3%s, line %lu: whitespace following area name.", f, l
#define fatal_badnl(f,l) \
    "3%s, line %lu: newline in area list - use '\' to continue line.", f, l
#define fatal_badcont(f,l)  "3%s, line %lu: misplaced '\'.", f, l
#define fatal_missegbase(ff,ll,ss) \
    "3%s, line %lu: missing base address for segment %s.",ff,ll,ss
#define fatal_misbra(f,l)   "3%s, line %lu: misplaced '('.", f, l
#define fatal_misterm(f,l)  "3%s, line %lu: misplaced ')' or ','.", f, l
#define fatal_badchar(f,l,v) \
    "3%s, line %lu: innvalid character, code %d.", f, l, v
#define fatal_eftmap(a,b)    "3EFT map botch: len = %lu, should be %lu.", a, b
#define fatal_noshlimage(ss) "3No shared library image file named in %s.", ss
#define fatal_baseclash(a,b,c) \
    "3Absolute AREA %s based at %x has been placed at %x.", a, b, c
#define fatal_notfound(ss)   "3File %s not found.", ss
#define fatal_badqual(ss) \
    "3/a or /l qualifier on AOF, a.out or .ar file %s.", ss
#define fatal_badbase       "3Badly formed or missing -RO-base/-Base value."
#define fatal_baddatabase   "3Badly formed or missing -RW-base/-DATAbase value."
#define fatal_multout \
    "3Multiple output types, use one of -aif, -aof, -rmf, -bin or -ihf."
#define fatal_reopen_stderr(ff) \
    "3Can't reopen stderr to file %s.", ff
#define fatal_badentry      "3Badly formed constant on -Entry qualifier."
#define fatal_badmatchopts  "3Badly formed constant on -Match qualifier."
#define fatal_badwork       "3Badly formed constant on -Workspace qualifier."
#define fatal_too_many_objs(nn)\
    "3Can't link more than %d object files.",nn
#define fatal_nosymtab(ss)  "3Library %s has no symbol table.", ss
#define fatal_ood(ss)       "3Out of date symbol table in library %s.", ss
#define fatal_dirread(ss)   "3Error reading directory '%s'.", ss
#define fatal_multbases     "3Multiple base addresses specified."
#define fatal_noarg(ss)     "3No argument to -%s.", ss
#define fatal_multunresolved "3Multiple -Unresolved options given."
#define fatal_multflag(ss)  "3Multiple -%s options."
#define fatal_toomany(f,l)  "3%s, line %u: Too many argument words.", f, l
#define fatal_badflag(ss)   "3Unrecognised option -%s.", ss
#define fatal_basedplink \
    "3Can't set a base address for partially linked output."
#define fatal_nofiles(ss)   "3No files to link, use %s -help for help.", ss
#define fatal_nover(op)     "3Missing/invalid value for %s option",op
#define fatal_needver(im,maj,min) \
    "3This is version %s, code requires version %d.%02d or later",im,maj,min
#define fatal_nosymdefs_open(f) "3Unable to open symbol defintion output file %s",f
#define fatal_bad_alignment(ss,aa,rr) "3Area %s in file %s requires unacceptable alignment (%d bytes)",aa,ss,rr
#define fatal_

#define err_badentry1(ep,lo,hi) \
    "2Entry point 0x%lx not in image [0x%lx, 0x%lx).", ep,lo,hi
#define err_badentry2(ep,lo,hi) \
    "2Entry offset +0x%lx not in image range [+0x%lx, +0x%lx).", ep,lo,hi
#define err_glob_muldef(ss,obj1,obj2) \
    "2Global %s multiply defined (in %s and %s).", ss,obj1,obj2
#define err_mulsharedlibs   "2Multiple shared libraries."
#define err_extref(ss)      "2External ref to %s from shared library.", ss
#define err_mulentries      "2Multiple entry points."
#define err_badspecial(ss)  "2Special AOF file %s out of specification.", ss
#define err_ovobj(ss)       "2Overlay module %s not found.", ss
#define err_ovarea(a,b)     "2Overlay AREA %s(%s) not found.", a, b
#define err_truncated(f,l)  "2%s, line %u: line truncated", f, l
#define err_extnotfound(ss) "2External symbol %s not found.", ss
#define err_eftnoncode(a,b) "2EFT name %s(%s) is non-code symbol.", a, b
#define err_eftbadnum(ss)   "2EFT parameter '%s' is not a number.", ss
#define err_relocdata(oo,aa) \
    "2Data in AREA %s(%s) need relocating - impossible in shared library.",oo,aa
#define err_shlrefstub(a,b,c,d) \
    "2Sharable AREA %s(%s) directly addresses\n\
              relocatable stub AREA %s(%s).", a, b, c, d
#define err_stubrefshl(a,b,c,d) \
    "2Stub AREA %s(%s) directly addresses\n\
              sharable library AREA %s(%s).", a, b, c, d
#define err_shlname(ss)     "2shared library name %s too long.", ss
#define err_base_overlap(dd, bb) \
    "2Data based at %lx overlaps code based at %lx.", dd, bb
#define err_incompat_attrib(oo,aa,ss) \
    "2Attributes of -FIRST/LAST AREA incompatible with neighbouring %s(%s)\n\
    (missing/extra attributes are {%s}).",oo,aa,ss
#define err_notroot         "2Entry point is not in root segment."
#define err_undefsyms       "2Undefined symbol(s)."
#define err_pcrelabs(ss)    "2PC relative reference to absolute symbol %s.", ss
#define err_reloc(a,b,c,v,r) \
    "2Reloc at 0x%lx in %s(%s): value %ld exceeds range %u.", a, b, c, v, r
#define err_instreloc(a,b,c,d) \
    "2can't relocate instr [%.8lx] at offset 0x%lx in %s(%s).", a, b, c, d
#define err_lost_reloc(ss,dd,oo, aa) \
    "2Relocation w.r.t. undefined %s lost at offset 0x%lx in %s(%s).",ss,dd,oo,aa
#define err_noncores(a,b)   "2%s(%s) refers to non-coresident data.", a, b
#define err_relocB          "2B or BL to unaligned destination."
#define err_relocseq \
    "2Relocated value too big for instruction sequence."
#define err_entryconflict(area) \
    "2Conflict between -entry option and ENTRY in AREA %s", area
#define err_bad_areaname(who,oo,aa) \
    "2(%s) bad object(area) name %s(%s) ignored.",who,oo,aa
#define err_mult_area(who,oo) \
    "2(%s) object %s contains more than one AREA.",who,oo
#define err_area_notfound(who,aa,oo) \
    "2(%s) AREA %s not found in object %s.",who,aa,oo
#define err_object_notfound(who, oo) \
    "2(%s) object %s not found.",who,oo
#define err_badsymbolforexportfromsharedlib(ss) \
    "2Symbol %s cannot be exported from shared-library.",ss
#define err_positiondependentreloc(dd,oo,aa) \
    "2Position-dependent reloc at 0x%lx in %s(%s)",dd,oo,aa
#define err_unlinked_sets \
    "2Incomplete linker sets (matching __head symbols not found)."


#define warn_diffattr0(aa,oo) \
    "1AREA %s(%s) has conflicting attributes COMMON,SHLDATA;\
    (COMMON ignored).",oo,aa
#define warn_symbol_match(rr,dd) \
    "1Reference to symbol %s matched to definition of %s.",rr,dd
#define warn_com_toobig(aa,o1,o2) \
    "1COMMON %s(%s) is larger than its definition %s(%s).",o1,aa,o2,aa
#define warn_com_muldef(ss,a,b) \
    "1Common AREA %s multiply defined by objects %s and %s.",ss,a,b
#define warn_glob_muldef(ss,obj1,obj2) \
    "1Global %s multiply defined (in %s and %s).", ss,obj1,obj2
#define warn_deprecated(a,b) "1Symbol %s referenced, %s used.",a,b
#define warn_diffattr1(aa,oo) \
    "1Attribute conflict between AREA %s(%s) and image code.",oo,aa
#define warn_diffattr2(aa,oo) \
    "1Attribute conflict within AREA %s\n\
    (conflict first found with %s(%s)).",aa,oo,aa
#define warn_diffattr3(aa,o1,o2) \
    "1Attribute conflict between AREAS %s(%s) and %s(%s).",o1,aa,o1,aa
#define warn_fp3(aa,oo) \
    "1AREA %s(%s) uses revision-3 FP instructions.",oo,aa
#define warn_diffarea(a,b,c) \
    "1AREA %s differs between object %s and object %s.", a, b, c
#define warn_comsym_toobig(a,b) \
    "1COMMON symbol %s is larger than COMMON AREA %s (in object %s).",a,a,b
#define warn_oversegname(ss,nn) \
    "1Overlay segment name %s too long - truncated to %d characters.",ss,nn
#define warn_eftname(a,b)   "1Missing ')' in EFT entry name %s(%s).", a, b
#define warn_eftdup1(a)     "1Duplicate EFT entry %s ignored.", a
#define warn_eftdup2(a,b)   "1Duplicate EFT entry %s(%s) ignored.", a, b
#define warn_dupopline(f,l) "1%s, line %u: duplicate output line ignored.", f, l
#define warn_missket(f,l)   "1%s, line %u: missing ')'.", f, l
#define warn_notreent(a,b,c) \
    "1AREA %s from object %s(%s) is not REENTRANT.", a, b, c
#define warn_noncores(a,b)  "1%s(%s) refers to non-coresident data.", a, b
#define warn_dupfname(ss)   "1Duplicate file %s ignored.", ss
#define warn_libqual(ss)    "1Old style /a or /l qualifier on library %s.", ss
#define warn_nosymtab(ss)   "1Library %s has no symbol table.", ss
#define warn_ood(ss)        "1Out of date symbol table in library %s.", ss
#define warn_commasep(ss)   "1Old style ',' separator after %s, use ' '.", ss
#define warn_nearoutmem     "1Memory shortage, increase memory allocation."
#define warn_dbgignored_1 \
    "1Debug data incompatible with plain binary format (-d ignored)."
#define warn_rwbaseignored \
    "1-RW-base/-DATA incompatible with -IHF without -SPLIT\n\
    (-RW-base/-DATA ignored)."
#define warn_multentry(oo,aa,ss) \
    "1Implicit entry point in %s(%s) redefined to %s."
#define warn_constmigrationtostub(ss) \
    "1Constant symbol %s has migrated to the stub.", ss
#define warn_cppignored_nocpp "1C++ static objects were found but ignored, since no -c++"
#define warn_badsymdef_input(ss) "1Unknown symbol type of symbol %s in SYMDEFS file",ss

#define info_uncache(ss)    "0Memory shortage: uncaching %s.",ss
#define info_unused_AREA_1(aa) \
    "0Unreferenced AREA (%s) omitted from output.",aa
#define info_unused_AREA_3(aa,oo,ff) \
    "0Unreferenced AREA %s(%s) (file %s) omitted from output.",oo,aa,ff
#define info_diffattrs(ss)  "0(attribute difference = {%s}).", ss
#define info_badref(a,b,c) \
    "0        (ref to |%s|+0x%lx at offset 0x%lx)", a, b, c
/* misc_areabase is a possible value of 'a' to info_badref() */
#define misc_areabase       "AREA-base"
#define info_undefsym1(a)   "0    %s.", a
#define info_undefsym2(a,b) "0    %s, referred to from %s.", a, b
#define info_undefsym3(a,b,c) \
    "0    %s, referred to from %s(%s).", a, b, c
#define info_ireloc(a,b,c,d) \
    "0(at 0x%lx in %s(%s): offset/value = 0x%lx bytes)", a, b, c, d
#define info_EFTPBlock(ss)  "0Size of EFT parameter block = %u bytes",ss
#define info_EFTSize(ss)    "0The EFT has %lu entries",ss
#define info_EFTEntry(idx,offset,name) \
    "0    eft[%3lu] = 0x%6lx %s",idx,offset,name
#define info_def(ss)        "0              def:  %s", ss
#define info_ref(ss)        "0              ref:  %s", ss
#define info_weakref(ss)    "0              ref:  %s (weak)", ss
#define info_scanlib(ss)    "0  Scanning library %s for referenced modules.", ss
#define info_rescanlib(ss) \
    "0  Re-scanning library %s for referenced modules.", ss
#define info_rescanall      "0  Re-scanning previous libraries for referenced modules."
#define info_loadlib(ss)    "0  Loading whole library %s.", ss
#define info_loadmemb(a,b)  "0    Loading %s to resolve %s.", a, b
#define info_loadobj(ss)    "0  Loading object file %s.", ss
#define info_openout(ss)    "0Opening output file %s.", ss
#define info_errors         "0Errors in link, no output generated."
#define info_mem_use(hh,ss,cc) \
    "0Memory usage: heap=%d, temp=%d, cache=%d.",hh,ss,cc
#define info_dbgignored_nod "0Debug areas were found but removed, since no -d"

#define misc_removeoutput   "%s: garbage output file %s removed\n"
#define misc_internalerror  "%s: Internal error.\n"
#define misc_interrupted    "%s: Interrupted by user.\n"
#define misc_finished \
    "%s: finished,  %d informational, %d warning and %d error messages.\n"
#define misc_refto          "%s(%s) refers to %s(%s)\n"
#define misc_reloc1         "    Relocating AREA %s"
#define misc_reloc2         " from %s"
#define misc_anon           "<anon>"
#define misc_map_hdr\
    "AREA map of %s:\nBase     Size     Type     Name\n"
/* NB                 12345678 12345678 12345678 ....      */
/* NB 8-char fields with 1 space between then a name field */
#define misc_map_fromfile   " from object file %s"
#define misc_sym_hdr        "\nSymbol Table\n\n"
#define misc_sym_undefref   " ?????? Undefined, Reference"
#define misc_sym_undefweak  " ?????? Undefined, WEAK Reference"
#define misc_xref_hdr       "\nInter-AREA References\n\n"

#endif
