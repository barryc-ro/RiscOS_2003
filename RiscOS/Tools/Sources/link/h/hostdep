/*
 * hostdep.h - Host-system-dependent bits of the ARM cross-linker.
 *
 * Copyright (C) Advanced RISC Machines 1991. All rights reserved.
 */

/*
 * RCS $Revision$
 * Checkin $Date$
 * Revising $Author$
 */

#ifndef __hostdep_h
#define __hostdep_h

#include "options.h"

#ifdef TIME
extern int32 cs_wall_clock(/* void */);
#endif

#ifdef LINKING_ON_UNIX
#  include <sys/time.h>
#  include <sys/resource.h>
#  include <sys/types.h>
#  include <sys/stat.h>
#  include <sys/fcntl.h>
#  include <sys/file.h>
extern int32 filesize();
#  define UNUSED(x)
#  ifndef TARGET_HAS_AOUT
#    define DEFOUTPUT_TYPE AIF
#  else
#    define DEFOUTPUT_TYPE AOUT
#  endif
#  define BINARY_OPEN_MODE  O_RDONLY
#  define AOUTFNAME "a.out"
#  define OVRFNAME  "."
#  define ROOTNAME  "root"
#  define PATHSEP   "/"
#  define AIFFNAME  "aif"
#  define AOFFNAME  "aof"
#  define HOURGLASS()
#endif

#ifdef LINKING_ON_MSDOS
#  ifdef __ZTC__
#    include <dos.h>
#    include <io.h>
#    define BINARY_OPEN_MODE  O_RDONLY
#  endif
#  ifdef __WATCOMC__
#    include <dos.h>
#    include <io.h>
#    include <fcntl.h>
#    include <direct.h>
#    define BINARY_OPEN_MODE  (O_RDONLY|O_BINARY)
#  endif
#  ifdef _MSC_VER
#    include <dos.h>
#    include <fcntl.h>
#    include <sys\types.h>
#    include <sys\stat.h>
#    include <io.h>
#    define BINARY_OPEN_MODE  (_O_RDONLY|_O_BINARY)
#  endif
#  define L_SET    SEEK_SET
#  define UNUSED(x)  x = x;
#  ifndef TARGET_HAS_AOF
#    define DEFOUTPUT_TYPE AOUT
#  else
#    define DEFOUTPUT_TYPE AIF
#  endif
#  define AOUTFNAME "a.out"
#  define OVRFNAME  "."
#  define ROOTNAME  "root"
#  define PATHSEP   "\\"
#  define AIFFNAME  "aif"
#  define AOFFNAME  "aof"
#  define HOURGLASS()
#endif


#ifdef LINKING_ON_RISCOS

#  define BINARY_OPEN_MODE 0
#  define L_SET     0

#define IDFNSTR " Version 5.08 (Acorn Computers Ltd)"

extern int32 filesize(char *fname);
extern int close(int fd);
extern int open(char *file, int flags);
extern int mkdir(char *name, int mode);
extern int32 lseek(int fd, int32 offset, int whence);
extern int32 read(int fd, char *buff, int32 n);
extern void startdirsearch(char *arg);
extern char *getwildcard(int *err);
extern void settype(char *name, int type);
#  define UNUSED(x) x = x;
#  ifndef TARGET_HAS_AOF
#    define DEFOUTPUT_TYPE AOUT
#  else
#    define DEFOUTPUT_TYPE AIF
#  endif
#  define AOUTFNAME "aout"
#  define OVRFNAME  "@"
#  define ROOTNAME  "!RunImage"
#  define PATHSEP   "."
#  define AIFFNAME  "!RunImage"
#  define AOFFNAME  "aof"
#  define HOURGLASS()
#endif

#ifdef LINKING_ON_MAC
#  define SELF      "### ARM Linker"    /* really #ifdef LINKING_ON_MPW... */
#  include <CursorCtl.h>
#  define HOURGLASS()     SpinCursor(1)
#  include <fcntl.h>
#  define BINARY_OPEN_MODE  O_RDONLY
#  define L_SET    SEEK_SET
extern int32 filesize(char *fname);
extern void* Tracked_malloc(size_t);
extern void Tracked_init(void);
extern int mkdir(char *name, int mode);
#  define UNUSED(x)
#  define DEFOUTPUT_TYPE AIF
#  define AOUTFNAME "a.out"
#  define OVRFNAME  "."
#  define ROOTNAME  "root"
#  define PATHSEP   ":"
#  define AIFFNAME  "Link.aif"
#  define AOFFNAME  "Link.aof"
#endif


#ifndef __STDC__
#  ifdef HOST_HAS_NO_MEMCPY
extern void memcpy();
#  endif
#endif

#ifdef __CC_NORCROFT
/* Avoid dragging in un-needed floating-point printng stuff... */
/* (vfprintf() is used in only one place )                     */
#include <stdarg.h>
extern int _vfprintf(FILE *, char *, va_list);
#  define vfprintf(file, fmt, args) _vfprintf(file, fmt, args)
#endif

#endif /* __hostdep_h */
