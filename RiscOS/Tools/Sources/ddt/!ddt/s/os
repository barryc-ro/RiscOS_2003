r0              RN      0
r1              RN      1
r2              RN      2
r3              RN      3
r4              RN      4
r5              RN      5
r6              RN      6
r7              RN      7
sl              RN      10
fp              RN      11
ip              RN      12
sp              RN      13
lr              RN      14
pc              RN      15

                IMPORT  |cstart|
                IMPORT  |Image$$ZI$$Limit|

                EXPORT  |__main|
                EXPORT  os_file
                EXPORT  xos_file
                EXPORT  os_generateerror
                EXPORT  os_exit
                EXPORT  os_readmonotonictime
                EXPORT  os_delete
                EXPORT  os_gstrans
                EXPORT  xos_cli
                EXPORT  xos_module
                EXPORT  xwimp_starttask
                EXPORT  wimp_initialise
                EXPORT  wimp_closedown
                EXPORT  wimp_currentslot
                EXPORT  wimp_mergesprites
                EXPORT  wimp_createicon
                EXPORT  wimp_seticonstate
                EXPORT  wimp_pollidle
                EXPORT  wimp_poll
                EXPORT  wimp_reporterror
                EXPORT  wimp_sendmessage
                EXPORT  wimp_createmenu
                EXPORT  wimp_createwindow
                EXPORT  wimp_openwindow
                EXPORT  wimp_closewindow
                EXPORT  wimp_getpointerinfo
                EXPORT  wimp_seticonposition
                EXPORT  wimp_processkey
                EXPORT  wimp_readsysinfo

                EXPORT  |x$stack_overflow|
                EXPORT  |x$stack_overflow_1|
                EXPORT  |__rt_stkovf_split_small|
                EXPORT  |__rt_stkovf_split_big|

                AREA    |C$$code|, CODE, READONLY

n_osfile_delete      EQU 6

OS_GetEnv            EQU &10
OS_File              EQU &08
XOS_File             EQU &20008
OS_GenerateError     EQU &2b
OS_Exit              EQU &11
OS_ReadMonotonicTime EQU &42
OS_GSTrans           EQU &27
XOS_CLI              EQU &20005
XOS_Module           EQU &2001e

XWimp_StartTask   EQU   &600de
Wimp_Initialise   EQU   &400c0
Wimp_CloseDown    EQU   &400dd
Wimp_SlotSize     EQU   &400ec
Wimp_SpriteOp     EQU   &400e9
Wimp_CreateIcon   EQU   &400c2
Wimp_SetIconState EQU   &400cd
Wimp_PollIdle     EQU   &400e1
Wimp_Poll         EQU   &400c7
Wimp_ReportError  EQU   &400df
Wimp_SendMessage  EQU   &400e7
Wimp_CreateWindow EQU   &400c1
Wimp_CreateMenu   EQU   &400d4
Wimp_OpenWindow   EQU   &400c5
Wimp_CloseWindow  EQU   &400c6
Wimp_GetPointerInfo EQU &400cf
Wimp_SetCaretPosition EQU &400d2
Wimp_ProcessKey   EQU   &400dc
Wimp_ReadSysInfo  EQU   &400f2

                ENTRY
|__main|
                LDR     sl,imageend
                ADD     sp,sl,#4096
                ADD     sl,sl,#256
                MOV     fp, #0
                SWI     OS_GetEnv
                MOV     r1, sp
                B       cstart

imageend        DCD     |Image$$ZI$$Limit|

os_file         STMDB   sp!, {r4, r5, lr}
                MOV     ip, r2
                LDMIA   ip, {r2, r3, r4, r5}
                SWI     OS_File
                STMIA   ip, {r2, r3, r4, r5}
                LDMIA   sp!, {r4, r5, pc}^

xos_file        STMDB   sp!, {r4, r5, lr}
                MOV     ip, r2
                LDMIA   ip, {r2, r3, r4, r5}
                SWI     XOS_File
                STMIA   ip, {r2, r3, r4, r5}
                MVNVS   r0, #0
                LDMIA   sp!, {r4, r5, pc}^

os_delete       STMDB   sp!, {r4, r5, lr}
                MOV     r1, r0
                MOV     r0, #n_osfile_delete
                SWI     XOS_File
                MOVVC   r0, #0
                LDMIA   sp!, {r4, r5, pc}^

os_generateerror
                SWI     OS_GenerateError

os_exit         SWI     OS_Exit

os_readmonotonictime
                SWI     OS_ReadMonotonicTime
                MOVS    pc, lr

xos_cli         SWI     XOS_CLI
                MOVVC   r0, #0
                MOVS    pc, lr

xwimp_starttask SWI     XWimp_StartTask
                MOVVC   r0, #0
                MOVS    pc, lr

wimp_initialise MOV     r2, r0
                LDR     r1, =&4b534154
                MOV     r0, #200
                SWI     Wimp_Initialise
                MOV     r0, r1
                MOVS    pc, lr

wimp_closedown  LDR     r1, =&4b534154
                SWI     Wimp_CloseDown
                MOVS    pc, lr

wimp_currentslot
                MVN     r1, #0
                SWI     Wimp_SlotSize
                MOVS    pc, lr

n_spriteop_merge EQU    11

wimp_mergesprites
                MOV     r2, r0
                MOV     r0, #n_spriteop_merge
                SWI     Wimp_SpriteOp
                MOVS    pc, lr

wimp_createicon STMDB   sp!, {r4 - r7, lr}
                LDMIA   r1, {r1, r2, r3, r4, r5, r6, r7, ip}
                STMDB   sp!, {r0 - r7, ip}
                MOV     r1, sp
                SWI     Wimp_CreateIcon
                ADD     sp, sp, #9 * 4
                LDMIA   sp!, {r4 - r7, pc}^

wimp_seticonstate
                STMDB   sp!, {r0, r1, r2, r3, lr}
                MOV     r1, sp
                SWI     Wimp_SetIconState
                LDMIA   sp!, {r0, r1, r2, r3, pc}^

wimp_pollidle   SWI     Wimp_PollIdle
                MOVS    pc, lr

wimp_poll       SWI     Wimp_Poll
                MOVS    pc, lr

wimp_reporterror
                SWI     Wimp_ReportError
                MOVS    pc, lr

wimp_sendmessage
                SWI     Wimp_SendMessage
                MOV     r0, r2
                MOVS    pc, lr

wimp_createmenu MOV     r3, r2
                MOV     r2, r1
                MOV     r1, r0
                SWI     Wimp_CreateMenu
                MOVS    pc, lr

wimp_createwindow
                MOV     r1, r0
                SWI     Wimp_CreateWindow
                MOVS    pc, lr

wimp_openwindow MOV     r1, r0
                SWI     Wimp_OpenWindow
                MOVS    pc, lr

wimp_closewindow
                STMDB   sp!, {r0, lr}
                MOV     r1, sp
                SWI     Wimp_CloseWindow
                LDMIA   sp!, {r0, pc}^

wimp_getpointerinfo
                MOV     r1, r0
                SWI     Wimp_GetPointerInfo
                MOVS    pc, lr

wimp_seticonposition
                STMDB   sp!, {r4, r5, lr}
                MOV     r5, r2
                MVN     r4, #0
                SWI     Wimp_SetCaretPosition
                LDMIA   sp!, {r4, r5, pc}^

xos_module      STMDB   sp!, {r4, r5, lr}
                SWI     XOS_Module
                MOVVC   r0, #0
                LDMIA   sp!, {r4, r5, pc}^

wimp_processkey SWI     Wimp_ProcessKey
                MOVS    pc, lr

wimp_readsysinfo
                SWI     Wimp_ReadSysInfo
                MOVS    pc, lr

os_gstrans      SWI     OS_GSTrans
                MOVS    pc, lr

|__rt_stkovf_split_small|
|__rt_stkovf_split_big|
|x$stack_overflow|
|x$stack_overflow_1|
                ADR     r0, stack_overflow_msg
                SWI     OS_GenerateError

stack_overflow_msg
                DCD     &1000
                DCB     "Stack overflow in Debugger", 0
                ALIGN

                END
