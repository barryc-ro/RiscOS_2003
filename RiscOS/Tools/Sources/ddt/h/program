#define HASHSIZE        128             /* Must be power of 2 */
#define ROOTNAME        "$root"

typedef struct HashEntry {
    struct HashEntry *nextname;
    struct NameDef *deflist;
    char name[1];
} HashEntry;

typedef struct UpdateItem {
    struct UpdateItem *next;
    int object;
    char name[1];
} UpdateItem;

extern UpdateItem *updatelist;

extern ProcDef *root;
extern HashEntry **proctable;
extern HashEntry **vartable;

extern Context home_context;
extern Context current_context;

extern ProcDef *codeinproc(int address, ProcDef *proc);
extern ProcDef *codetoproc(int address);
extern Context *getsourceinfo(Context *context);
extern void initname(char *name, HashEntry **table, NameDef *def);
extern void getcontext(int pc);
extern int lookup(char *name, HashEntry **table,
                  ProcDef *parent, NameDef **res);
extern int lookupvar(char *name, Context *c, VarDef **res);
extern int stringtopath(char **ps, Context *c,
                        ProcDef *curproc, int terminate);
extern int stringtocode(char **ps, Context *c, Context *current);
extern Context *filepostocode(Context *c, char *fname, int line);
extern int stringtovardef(char **ps, Context *s, VarDef **res, Context *cur);
extern int progregister(int n, int *stackframe);
extern double progfpregister(int n, int *stackframe);
extern int outerstack(Context *old, Context *old);
extern int checkact(Context *c, Context *current);
extern int makepblist(ProcDef *parent);
extern void clearpblist(void);
extern int stopped(int status);
extern FPorInt *savedregvar(int n, int *stackframe);
extern void alterregvar(int n, int *stackframe, FPExtended *fp, int word);
extern void setupcontextregs(void);
