#define isdigit(c) ((c) >= '0' && (c) <= '9')
#define isalpha(c) ((c) >= 'A' && (c) <= 'Z' || (c) >= 'a' && (c) <= 'z')
#define isalnum(c) (isalpha(c) || isdigit(c))

extern char digits[36];

#ifdef SELF_CHECKS
extern void *page_alloc(int size);
extern void prot_mem(void *p, int n);
extern void unprot_mem(void *p, int n);
#endif

extern int isstring(char *s);
extern char *write_hex(char *s, int w, int n);
extern void wrhex(int w);
extern char *write_hex0(char *s, int w);
extern void cvt_str(char *cs);
extern void cvt_packed(unsigned *packed, void *fp);
extern void cvt_fp(void *fp, unsigned *packed);
extern void cvt_fpinternal(void *fp, const void *fpinternal);
extern FPExtended *cvt_fpextended(double *d, FPExtended *fp);
extern double loadfpextended(FPExtended *fp);
extern char *strcpy(char *cs, char *ct);
extern int strlen(char *cs);
extern char *strcat(char *s, char *t);
extern void memmove(void *s1, const void *s2, int n);
extern int cistrcmp(char *s, char *t);
extern int strcmp(char *s, char *t);
extern int strncmp(const char *a, const char * b, int n);
extern int match(char *pat, char *str);
extern int rotate_right(int word, int rotate);
extern void *memcpy(void *s, void *t, int n);
extern void free(void *p);
extern void rma_free(void *p);
#ifdef HEAP_TAG
extern void *malloc(int size, char *purpose);
extern void *rma_malloc(int size, char *purpose);
#else
extern void *malloc(int size);
extern void *rma_malloc(int size);
#define malloc(size, purpose) malloc(size)
#define rma_malloc(size, purpose) rma_malloc(size)
#endif
#ifdef USE_DAS
extern int da_no;
extern void *da_addr;
#endif
extern void *salloc(int size);
extern void munge_filename(char *s);
extern char *zero_terminate(char *s);
extern void fatal(int errno, char *errmsg);
extern int atoi(char **ps, int base, int *res, int flags);
extern unsigned extract_digit(unsigned *words, int d);
extern void set_digit(unsigned *words, int d, int v);
extern char *write_uns(char *s, unsigned w, int n, int base);
extern char *write_uns_lj(char *s, unsigned w, int base);
extern int quotechar(int c);
extern char *add_str(char *s, char *add);
extern void error(char *errmsg);
extern int *find_word(int *low, int *high, int word);
extern void msg(char *s);
extern unsigned char munge256(unsigned char gcol);
extern void wordset(int addr, int value, int n);
extern int is_abs_fname(char *name);
/* This should be somewhere else */
extern int *find_vector(int vector);
extern char *write_int(char *s, int w, int base);
