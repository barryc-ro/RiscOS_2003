#define TITLE_H        44
#define MENU_H         36

#define X_OS           2
#define Y_OS           4

#define X_CHAR         (X_OS * 8)
#define Y_CHAR         (Y_OS * 8)

#define WF_NOBOUNDS    (1 << 6)
#define WF_CLOSE       (1 << 25)
#define WF_TITLE       (1 << 26)
#define WF_VSCROLL     (1 << 28)
#define WF_ADJUST      (1 << 29)
#define WF_HSCROLL     (1 << 30)
#define WF_NEWFORMAT   (0x80000000)

#define IF_TEXT          (1 << 0)
#define IF_SPRITE        (1 << 1)
#define IF_BORDER        (1 << 2)
#define IF_HCENTRED      (1 << 3)
#define IF_VCENTRED      (1 << 4)
#define IF_FILLED        (1 << 5)
#define IF_INDIRECTED    (1 << 8)
#define IF_RJUSTIFY      (1 << 9)
#define IF_HALFSIZE      (1 << 11)
#define IF_INVERTED      (1 << 21)
#define IF_SHADED        (1 << 22)
#define IF_DELETED       (1 << 23)
#define IF_BUTTON(f)     (((f) >> 12) & 0x0f)
#define IF_ESG(f)        (((f) >> 16) & 0x0f)
#define IF_BACKGROUND(f) (((f) >> 28) & 0x0f)
#define IF_FOREGROUND(f) (((f) >> 24) & 0x0f)

#define IF_SHADECOLS     0x22ffffff

#define B_ALWAYS         1
#define B_CLICKONCE      3
#define B_MENU           9
#define B_RADIO          11
#define B_WRITEABLE      15

#define SHIFT_FN        0x10
#define CTRL_FN         0x20
#define CTRL_SHIFT_FN   0x30

#define COPY            0x8b
#define LEFT_ARROW      0x8c
#define RIGHT_ARROW     0x8d
#define DOWN_ARROW      0x8e
#define UP_ARROW        0x8f

#define DDT_ARROW_CHAR  140
#define DDT_BREAK_CHAR  141

#define EVENT_NULL        0
#define EVENT_SUSPEND     1

typedef struct WindowHandle WindowHandle;

typedef char *(*Get_Line_Fn)(int line);
typedef int (*Mouse_Click_Fn)(WindowHandle *we, int x, int y, int b);
typedef void (*Icon_Click_Fn)(WindowHandle *we, int i, int b);
typedef void (*Scroll_Request_Fn)(WindowHandle *we,
                                  int scx, int scy, int dirx, int diry);
typedef int (*Key_Press_Fn)(int key);

typedef struct Icon {
    Rect r;
    int flags;
    char *buffer;
    char *validstring;
    int bufflen;
} Icon;

typedef struct Window {
    Rect r;
    int scx, scy;
    int behind;
    int flags;
    char frame;
    char title_bgrnd;
    char work_fgrnd;
    char work_bgrnd;
    char scroll_bgrnd;
    char scroll_fgrnd;
    char title_input_bgrnd;
    char unused;
    Rect ex;
    int title_flags;
    int work_flags;
    int sprite_area;
    short min_width;
    short min_height;
    char *buffer;
    char *validstring;
    int bufflen;
    int nicons;
    Icon icons[1];
} Window;

typedef struct MenuStr {
    char *item;
    Icon_Click_Fn fn;
    WindowHandle **window;
} MenuStr;

typedef struct IconProcList {
    int icon;
    Icon_Click_Fn fn;
} IconProcList;

extern int window_initialised;

extern char *get_output_line(int line);

extern int window_click(WindowHandle *we, int x, int y, int b);

extern void close_window(WindowHandle *we);
extern void open_window(WindowHandle *we, Rect *r, int update);
extern void open_menu(WindowHandle *we, Rect *r, int update, int level);
extern void set_scroll_offsets(WindowHandle *we, int scx, int scy);
extern WindowHandle *create_window(Window *w);
extern void set_window_fns(WindowHandle *we,
                           Get_Line_Fn getline,
                           Mouse_Click_Fn mouse_click,
                           Scroll_Request_Fn scroll_request);
extern WindowHandle *create_menu(char *title, MenuStr *menus);
extern void delete_window(WindowHandle *we);
extern void window_init(void);
extern void window_resume(void);
extern void window_cleanup(void);
extern void window_closedown(void);
extern void window_startup(void);
extern Rect *visible_rect(Rect *r, WindowHandle *we);
extern Rect *icon_rect(Rect *r, WindowHandle *we, int i);
extern char *get_icon_buffer(WindowHandle *we, int i);
extern int get_icon_state(WindowHandle *we, int i);
extern void set_icon_state(WindowHandle *we, int i, int state);
extern Window *get_window_info(WindowHandle *we);
extern WindowHandle *window_is_open(WindowHandle *we);
extern void set_icon_proc(WindowHandle *we, int icon, Icon_Click_Fn fn);
extern void set_icon_procs(WindowHandle *we, IconProcList *iconprocs);
extern void set_icon_flags(WindowHandle *we, int icon, int mask, int value);
extern int window_poll(void);
extern void invalid_rect(WindowHandle *we, Rect r);
extern void close_menus(WindowHandle *we);
extern void register_key_handler(Key_Press_Fn key_handler);
extern void window_alert(void);
extern void flush_buffers(void);
