#define BREAK_INST 0xef000017
#define BLNV_INST  0xfb000000
#define AIF_NOOP   0xe1a00000
#define RET_INST   0xe1b0f00e /* MOVS pc, lr */
#define BL_INST    0xeb000000

#define ARG_GUARD  0x41524753

#define WIMPDOMAIN *((int *)0xff8)

typedef struct MediaChangeInfo {
    int  reason;
    int  fsno;
    char *media_name;
    int  devno;
    int  count;
    int  timeout;
    char *media_type;
} MediaChangeInfo;

typedef struct FPExtended {
    int word[3];
} FPExtended;

typedef struct FPStatus {
    int ivo : 1;
    int dvz : 1;
    int ofl : 1;
    int ufl : 1;
    int inx : 1;
    int unused_1 : 10;
    int mask_ivo : 1;
    int mask_dvz : 1;
    int mask_ofl : 1;
    int mask_ufl : 1;
    int mask_inx : 1;
    int unused_2 : 10;
} FPStatus;

typedef struct RegSet {
    int r[15];
    struct R15Parts {
        int pc      : 26;
        int fiq_dis : 1;
        int irq_dis : 1;
        int v : 1;
        int c : 1;
        int z : 1;
        int n : 1;
    } r15;
    FPExtended f[8];
    FPStatus fpstatus;
} RegSet;

typedef union FPorInt {
    FPExtended f;
    int i;
} FPorInt;

extern MemInfo *prot_list, *unprot_list;
extern int memory_protection;

extern OS_Error_Buffer error_buffer;

extern int exit_swi;
extern int changeenv_intercept;

extern RegSet *contextregs;
extern RegSet registers;

extern volatile int dataaccessflag;

extern int image_base;
extern int image_rosize;
extern char *code_table;

extern int irq_abort;
extern int abort_flag;
extern int poll_intercept_flag;

extern int fpavailable;

extern WatchPoint *last_watch;

extern int step_count;

extern int retfromcall;

#define FINISHED(f) ((f) == N_Undef_Inst || \
                     (f) == N_Prefetch_Abort || \
                     (f) == N_Data_Abort || \
                     (f) == N_Address_Ex || \
                     (f) == N_Error || \
                     (f) == N_Exit || \
                     (f) == N_Exit_ABEX)

#define N_Undef_Inst     1
#define N_Prefetch_Abort 2
#define N_Data_Abort     3
#define N_Address_Ex     4
#define N_Error          5
#define N_Exit           6
#define N_Exit_ABEX      7
#define N_Hit_Break      8
#define N_Watch_Changed  9
#define N_Step_Count     10
#define N_Resume         11
#define N_ShiftF12       12
#define N_RetFromCall    13
#define N_LostWatch      14
#define N_EndDebug       15
#define N_Break_Event    16
#define N_SWI_Break      17

#define STEP_SOURCE    8
#define STEP_INTO      4
#define EXEC_SUSPEND   2
#define SINGLE_STEP    1

extern int user_sp, user_lr;

extern int event_break_mask;

extern int svc_break_handler;

extern int upcall_intercept_media;

extern int cont(int flags, int n);

extern void swap_handlers(void);

extern void debugger_exit(void);

extern void claim_swiv(void);

extern void release_swiv(void);

extern OS_Error_Block *cmd_cli(char *s);

extern void restore_mouse(void);

extern void claim_dbgr_vectors(void);

extern void swap_in_handlers(void);

extern void swap_out_handlers(void);

extern void release_dbgr_vectors(void);
