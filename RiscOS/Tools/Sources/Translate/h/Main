/************************************************************************/
/* File:    Main.h                                                      */
/* Purpose: Main header for Translator.                                 */
/*                                                                      */
/* Author:  Neil Bingham <mailto:nbingham@acorn.com>                    */
/* History: 0.01  Wed 17th February 1999                                */
/*                Created.                                              */
/************************************************************************/

#ifndef __main_h
#define __main_h

/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */

#include "VersionNum"

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <stdarg.h>
#include "string.h"
#include "kernel.h"

/* Acorn Libraries */
#include "swis.h"
#include "tboxlibs/wimplib.h"

/* EmailLib Type Headers */
#include "Email/Common/bool.h"
#include "Email/Common/types.h"

#include "NBLib/NBLib.h"
#include "NBLib/NBDefs.h"
#include "NBLib/NBSWIs.h"
#include "DebugLib/DebugLib.h"

/* ---------------------------------------- GENERAL STUFF --------------------------------------- */

#define Arg_Throwback	"-throwback"
#define Arg_Verbose	"-v"
#define Arg_Open	"-marko"
#define Arg_Close	"-markc"
#define Arg_HTMLOpen	"-htmlo"
#define Arg_HTMLClose	"-htmlc"
#define Arg_Mappings	"-m"
#define Arg_Input	"-i"
#define Arg_Output	"-o"

typedef struct
{
  bool		 throwback;
  bool		 verbose;
  char		*open;
  char		*close;
  char		*html_open;
  char		*html_close;
  char		*mappings;
  char		*input;
  char		*output;
  MessagesFD	 mappings_fd;
  FILE		*input_fd;
  FILE		*output_fd;
  char		*msgtrans_buffer;
  int		 line_counter;
  int		 good_trans;
  int		 good_normal;
  int		 good_html;
  int		 bad_trans;
  bool		 clean_exit;
} Status_Info;

extern Status_Info	status;

/* -------------------------------------- GLOBAL VARIABLES -------------------------------------- */

/* ------------------------------------ FUNCTION PROTOTYPES ------------------------------------- */

void print_help(void);

#pragma -v1 /* hint to compiler to check f/s/printf format */
void report_error (int line_num, char *file, const char * /*format*/, ...);

void reset_status(void);
void free_status(void);
#ifdef DEBUGLIB
  void debug_show_status(void);
#endif
void parameter_store_filename(char **filename, char *arg);
void parameter_store_marker(char **marker, char *arg);
bool valid_parameters(void);
bool parse_parameters(int argc, char *argv[]);

#endif
/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ END +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */


