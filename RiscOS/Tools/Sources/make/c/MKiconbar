/* Title:    MKiconbar.c
 * Purpose:  Icon bar events
 * Author:   IDJ
 * History:  10-Jul-90: IDJ: created
 *
 *           Re-release
 *           16-Dec-91: IDJ: pass project pointer to MKtask_request_taskwindow
 *
 */

#include <string.h>

#include "xferrecv.h"
#include "werr.h"
#include "visdelay.h"
#include "msgs.h"

#include "global.h"
#include "types.h"
#include "utils.h"
#include "MKproject.h"
#include "MKmakefile.h"
#include "MKcmdline.h"
#include "MKtask.h"
#include "MKoptions.h"

#include "DDEswis.h"

#include "MKiconbar.h"


extern void MKiconbar_dataload(void)
{
   char *filename = 0;
   int type;
   char cmd[MAXCMDLINE], safe_filename[MAXFILENAME];
   MKproject *p = 0;

   /* NOTE: if it's of type makefile, then make a project out of it,
      else do an amu on it (assuming it is a text makefile)
      ALSO: we need to take copy of filename, since it gets splatted
            when we poll the wimp in MKproject_open
    */

   type = xferrecv_checkinsert(&filename);
   strcpy(safe_filename, filename);

   if (type == FileType_Makefile)
   {                   
      /* --- acknowledge --- */
      xferrecv_insertfileok();

      /* --- check if project already there --- */
      p = MKproject_find(filename);

      /* --- maybe create a new project --- */
      if (p == 0)
      {
         if ((p = MKproject_create_project(filename)) == 0) return;
      }

      /* --- open the project (inc. possibly parsing makefile) --- */
      p = MKproject_open(p);
      /* assert: if p wasn't really a project, p == 0 now */
   }

   /* --- ... and do it --- */
   if (MKoptions_getoptions() & MKoptions_AutoRun || p == 0)
   {
      if (p != 0)
      {
         if (p->current_target->members != 0)
         {
            if (p->flags & PF_Modified) MKmakefile_write(p, TRUE);
            MKcmdline_build(cmd, p->makefile, p->current_target->name, p->make_flags, p->current_target->type == TT_User);
            MKtask_request_taskwindow(cmd, p);
         }
         else
            werr(FALSE, msgs_lookup("MKprj2:Current target has no members to make"));
      }
      else
      {
         MKcmdline_build(cmd, filename, 0, 0, FALSE);
         MKtask_request_taskwindow(cmd, p);
      }
   }
}


extern void MKiconbar_leftclick(wimp_i i)
{
   IGNORE(i);

   MKproject_new();
}
