#include <stdio.h>
#include <stdlib.h>

#include "kernel.h"

int main(int argc, char **argv)
{
    int *infile_buffer;
    char *infile, *outfile;
    int size, i;
    FILE *f;
    _kernel_osfile_block b;

    if (argc != 3) {
        fprintf(stderr, "Usage: BinASM <Binary infile> <ASM outfile>\n");
        exit(1);
    }
    infile = argv[1];
    outfile = argv[2];
    if (_kernel_osfile(17, infile, &b) != 1) {
        fprintf(stderr, "Error opening %s\n", infile);
        exit(1);
    }
    size = (b.start + 3) & ~3;
    if (!size) {
        fprintf(stderr, "Cant't BinAOF null file\n");
        exit(1);
    }
    infile_buffer = malloc(size);
    size = size / 4;
    *((int *)(infile_buffer + size - 1)) = 0;
    b.load = (int)infile_buffer;
    b.exec = 0;
    if (_kernel_osfile(16, infile, &b) != 1) {
        fprintf(stderr, "Error reading %s\n", infile);
        exit(1);
    }
    if ((f = fopen(outfile, "w")) == 0) {
        fprintf(stderr, "Error opening %s\n", outfile);
        exit(1);
    }
    i = 0;
    while (1) {
        if ((i & 7) == 0)
            fprintf(f, " DCD ");
        else
            fputc(',', f);
        fprintf(f, "&%x", infile_buffer[i]);
        i++;
        if (i >= size)
            break;
        if ((i & 7) == 0)
            fputc('\n', f);
    }
    fprintf(f, "\n END\n");
    if (fclose(f) == EOF) {
        fprintf(stderr, "Error writing %s\n", outfile);
        exit(1);
    }
    return 0;
}
