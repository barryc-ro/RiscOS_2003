import java.awt.*;

/**
  * DisappearingGraphic.java
  * --
  * @author Robert Dyke
  * @version Tue Apr 06 11:42:36 1999
  *
  */
public class DisappearingGraphic extends Canvas
  implements Runnable
{
  private Image graphic;  // the graphic to display
  private Thread timer;   // the thread to do the counting
  private int seconds;    // the number of seconds to display the graphic
  
  public boolean debug;  // set this field to true to display debugging info

  /**
    * Constructor
    * @param graphic the graphic to use
    * @param seconds the number of seconds to display the graphic
    */
  public DisappearingGraphic(Image graphic, int seconds)
  {
    this.graphic = graphic;
    this.seconds = seconds;
  }

  /**
    * Draws the graphic
    * @param g the graphics context to use
    */
  public void paint(Graphics g)
  {
    g.drawImage(graphic, 0, 0, size().width, size().height, this);
  }

  /**
    * The graphics will fill the component so just
    * call paint on repaints
    * @param g the graphics context to use
    */
  public void update(Graphics g)
  {
    paint(g);
  }

  /**
    * This method overides the show method from
    * component. The super method is first called
    * then a new thread is created.
    */
  public void show()
  {
    super.show();
    timer = new Thread(this);
    timer.start();
  }

  /**
    * This method overides the hide method from
    * component. The super method is first called
    * then the thread is stopped.
    */
  public void hide()
  {
    super.hide();
    // if a thread exists stop it
    if(timer != null)
    {
      timer.stop();
      timer = null;
    }
  }

  /**
    * This method implements the Runnable interface
    * this method is called when a thread is started.
    * The thread goes to sleep for the period of time
    * specified by the field seconds, then calls the
    * hide method of the component.
    */
  public void run()
  {
    Thread me = Thread.currentThread();

    while(me == timer)
    {
      try
      {
        if(debug)
        {
          System.out.println("Thread sleeping for " + seconds + "seconds");
        }
        Thread.sleep(1000 * seconds);
      }
      catch(InterruptedException e) {}
      synchronized(this)
      {
        hide();
      }
    }
  }
} // end of class DisappearingGraphic
