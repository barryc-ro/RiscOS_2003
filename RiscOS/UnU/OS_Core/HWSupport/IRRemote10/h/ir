/*
 * ir.h		- Public interface of ir.c
 */

/*
 * 		Copyright 1996 Acorn Network Computing
 *
 * This material is the confidential trade secret and proprietary
 * information of Acorn Network Computing. It may not be reproduced,
 * used, sold, or transferred to any third party without the prior
 * written consent of Acorn Network Computing. All rights reserved.
 *
 */


#ifndef __kernel_h
#  include "kernel.h"
#endif

#ifdef DEBUG
#  include <stdio.h>
#  define DEBUGFN(x, y)	if (DEBUG>=(x)) y
#  pragma continue_after_hash_error
#  error  Building debug version !
#else
#  define DEBUG	0
#  define DEBUGFN(x, y)
#endif

#ifdef FAKEINPUT
#  include <stdarg.h>
#  include "socklib/socklib.h"
#  include "inetlib/inetlib.h"
#  include "sys/ioctl.h"
#  include "sys/errno.h"
#  pragma continue_after_hash_error
#  error  Building remote simulation version !
  int db_printf(const char *, ...);
#else
#  define db_printf	printf
#endif


/*
 * Types
 */
typedef union
{
  int word;

  typedef struct
  {
    unsigned int fnlock	:1;	/* FnLock (labelled NumLock) */
  } keyboard;

} state_t;


/*
 * Constants
 */

/* Modifier keys (in packet_t.keyboard.mods) */
#define KEY_MOD_MOD2	1
#define KEY_MOD_FN	2
#define KEY_MOD_ALT	4
#define KEY_MOD_SHIFT	8
#define KEY_MOD_CTRL	16

/* Bits in Flags */
#define ENABLED		(1<<0)
#define STANDBY		(1<<1)


/*
 * Public functions
 */
void Disable( void );
int ir_DeviceRxDataPresent( void );
void ir_finalise( void *pw );
_kernel_oserror *ir_initialise( void *pw );
void ir_timeout(int tag_number);
void ir_cancel_timeout(int tag_number);
int ir_getfamily(void);
void ir_setfamily(int);
void reset(int family);
void halt(void);
int ir_pointer_status(int *relx, int *rely);


/*
 * Public globals
 */
extern int in_handle, out_handle;		/* DeviceFS serial: handles */
extern int Flags;
