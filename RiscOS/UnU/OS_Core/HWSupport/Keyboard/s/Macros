; > Sources.Macros

;-----------------------------------------------------------------------------
; IRQOff  $reg
;
;       Turn IRQs off and save the PSR in $reg.
;
        MACRO
$label  IRQOff  $reg

$label  MOV     $reg, pc
        TST     $reg, #I_bit
        TEQEQP  $reg, #I_bit
        MEND

;-----------------------------------------------------------------------------
; SetPSR  $reg
;
;       Set the PSR from bits in $reg (normally saved by IRQOff or FIQOff).
;
        MACRO
$label  SetPSR  $reg

$label  TEQP      $reg, #0
        MEND

;-----------------------------------------------------------------------------
; SVCMode $reg
;
;       Set SVC mode with IRQs disabled saving PSR in $reg.
;
        MACRO
$label  SVCMode $reg

$label  MOV     $reg, pc
        TEQP    pc, #SVC_mode + I_bit
        MEND

;-----------------------------------------------------------------------------
; IOMDBase $reg
;
;       Set $reg to IOMD base address.
;
        MACRO
$label  IOMDBase $reg,$cc
 [ IO_Type = "IOMD"
$label  MOV$cc  $reg, #IOMD_Base
 |
$label  MOV$cc  $reg, #&03000000
        ADD$cc  $reg, $reg, #&8000
        SUB$cc  $reg, $reg, #4
 ]
        MEND

;-----------------------------------------------------------------------------
; KbdEnable
;
;       Enable keyboard state machine.
;
        MACRO
$label  KbdEnable $ra,$rb,$cc

$label  IOMDBase $ra,$cc
        MOV$cc   $rb, #IOMD_KBDCR_Enable
        STR$cc.B $rb, [$ra, #IOMD_KBDCR]
        MEND

;-----------------------------------------------------------------------------
; KbdDisable
;
;       Disable keyboard state machine.
;
        MACRO
$label  KbdDisable $ra,$rb,$cc

$label  IOMDBase $ra,$cc
        MOV$cc   $rb, #0
        STR$cc.B $rb, [$ra, #IOMD_KBDCR]
        MEND

;-----------------------------------------------------------------------------
; RxOffTxOff
;
;       Disable RX irqs, disable TX irqs.
;
        MACRO
$label  RxOffTxOff $ra,$rb,$cc

$label  IOMDBase $ra,$cc
 [ IO_Type = "IOMD"
        LDR$cc.B $rb, [$ra, #IOCIRQMSKB]
        BIC$cc   $rb, $rb, #serial_Rx_bit + serial_Tx_bit
        STR$cc.B $rb, [$ra, #IOCIRQMSKB]
 |
        MOV$cc   $rb, #IOMD_KBDCR_Enable
        STR$cc.B $rb, [$ra, #IOMD_KBDCR]
 ]
        MEND

;-----------------------------------------------------------------------------
; RxOnTxOff
;
;       Enable RX irqs, disable TX irqs.
;
        MACRO
$label  RxOnTxOff $ra,$rb,$cc

$label  IOMDBase $ra,$cc
 [ IO_Type = "IOMD"
        LDR$cc.B $rb, [$ra, #IOCIRQMSKB]
        ORR$cc   $rb, $rb, #serial_Rx_bit
        BIC$cc   $rb, $rb, #serial_Tx_bit
        STR$cc.B $rb, [$ra, #IOCIRQMSKB]
 |
        MOV$cc   $rb, #IOMD_KBDCR_Enable + &80
        STR$cc.B $rb, [$ra, #IOMD_KBDCR]
 ]
        MEND

;-----------------------------------------------------------------------------
; RxOffTxOn
;
;       Enable TX irqs, disable RX irqs.
;
        MACRO
$label  RxOffTxOn $ra,$rb,$cc

$label  IOMDBase $ra,$cc
 [ IO_Type = "IOMD"
        LDR$cc.B $rb, [$ra, #IOCIRQMSKB]
        ORR$cc   $rb, $rb, #serial_Tx_bit
        BIC$cc   $rb, $rb, #serial_Rx_bit
        STR$cc.B $rb, [$ra, #IOCIRQMSKB]
 |
        Push    "r0-r3,r11",$cc
        BL$cc   TXIRQHandler
        Pull    "r0-r3,r11",$cc
 ]
        MEND

;-----------------------------------------------------------------------------

        MACRO
$label  DebugTabInit $nil,$wk1,$wk2
$label
 [ debugtable
        ADR     $wk1, DebugTable
        STR     $wk1, DebugPtr
        ADR     $wk2, DebugTableEnd
$label.clr
        CMP     $wk1, $wk2
        STRCC   $nil, [$wk2, #-4]!
        BCC     $label.clr
 ]
        MEND

        MACRO
$label  DebugTab $wk1,$wk2,$v1,$v2,$v3
$label
 [ debugtable
        LDR     $wk1, DebugPtr
  [ "$v1" <> ""
        ADR     $wk2, DebugTableEnd
        TEQ     $wk1, $wk2
        ADREQ   $wk1, DebugTable
        MOV     $wk2, $v1
        STRB    $wk2, [$wk1], #1
  ]
  [ "$v2" <> ""
        ADR     $wk2, DebugTableEnd
        TEQ     $wk1, $wk2
        ADREQ   $wk1, DebugTable
        MOV     $wk2, $v2
        STRB    $wk2, [$wk1], #1
  ]
  [ "$v3" <> ""
        ADR     $wk2, DebugTableEnd
        TEQ     $wk1, $wk2
        ADREQ   $wk1, DebugTable
        MOV     $wk2, $v3
        STRB    $wk2, [$wk1], #1
  ]
        STR     $wk1, DebugPtr
 ]
        MEND


        END
