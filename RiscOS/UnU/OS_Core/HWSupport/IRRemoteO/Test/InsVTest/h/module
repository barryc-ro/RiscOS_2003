/* > module.h
 *
 *      Header file for module.
 */

#define FALSE   0
#define TRUE    ~FALSE

/* Misc RiscOS things */
#define Service_ModeChange	0x46
#define Service_ShutDownComplete	0x80
#define OSArgs_Extent		2
#define OSArgs_IOCtl		9
#define OSGBPB_Read		4
#define EventV			0x10
#define KeyV			0x13
#define Key_KeyboardPresent	0
#define Key_KeyUp		1
#define Key_KeyDown		2
#define Key_Notify		3
#define Key_Enable		4
#define UpcallV			0x1d
#define UpCall_Online		0x0d
#define UpCall_DeviceRxDataPresent	0x0f
#define UpCall_DeviceThresAbove	0x10
#define TinySupport_Init	0x82c40
#define TinySupport_Die		0x82c41
#define TinySupport_Init2	0x82c42
#define TinySupport_Share	0x82c43
#define Standby_State		0x4c7c0
#define Standby_Standby		0x4c7c1
#define Standby_Online		0x4c7c2
#define Standby_InStandby	1

#define NOT_USED(v) ((v)=(v))

/*
 * Public functions
 */
extern _kernel_oserror *module_initialise(char *cmd_tail, int podule_base, void *pw);
extern void module_service(int service_no, _kernel_swi_regs *r, void *pw);
extern int module_upcall_entry(_kernel_swi_regs *r, void *pw);
extern int module_keyup_entry(_kernel_swi_regs *r, void *pw);
extern int module_keyv_entry(_kernel_swi_regs *r, void *pw);
