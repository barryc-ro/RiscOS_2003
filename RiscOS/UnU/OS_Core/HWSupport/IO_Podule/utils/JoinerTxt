REM > &.Arthur.BBCIO.Joiner
PRINT"Joiner for Podule ROMs"
PRINT"Version 1.05 02-Nov-87."'"For Midi and BBC I/O podule."
DIM Buffer% 300, Block% 20
INPUTLINE'"Enter name of output file : "OutName$
H%=OPENOUT(OutName$):IF H%=0 THEN PRINT"'";OutName$;"' not found.":END
ONERRORONERROROFF:CLOSE#H%:REPORT:PRINT" at line ";ERL;" (&";~ERR;").":END
Device%=0:L%=TRUE:REPEAT
INPUT"Enter device size (16k/32k/64k) : "Device$
IF Device$="16K" OR Device$="16k" THEN Device%=&4000
IF Device$="32K" OR Device$="32k" THEN Device%=&8000
IF Device$="64K" OR Device$="64k" THEN Device%=&10000
UNTIL Device% <> 0
:
IF Device%<>&4000 PRINT"What ??":CLOSE#H%:END
PRINT"Fill with FFs (Y/N) : ";:G%=GETAND&5F:BPUT#H%,0
IFG%<>89PRINT"No"ELSEPRINT"Yes":FORI%=2TODevice%:BPUT#H%,-1:NEXTI%
Base%=&3800:Low%=&100:Cur%=Low%
Bot%=Base%+16:Top%=Device%:PTR#H%=Base%
:
PROCByte(0):PROCHalf(3):PROCHalf(6):PROCHalf(0):PROCByte(0)
PROCByte(4):PROC3Byte(&3000):PROCByte(1):PROC3Byte(&3000)
REM Masks updated to ABienek values
:
INPUTLINE'"Enter serial number : "Dat$
IF Dat$ <> "" THEN PROCAddString( &F1, Dat$ )
INPUTLINE"Enter modification status : "Dat$
Date$=TIME$
Date$=MID$( Date$, 5, 2 )+"-"+MID$( Date$, 8, 3 )+"-"+MID$(Date$, 14, 2 )
PROCAddString( &F2, Date$ )
IF Dat$ <> "" THEN PROCAddString( &F3, Dat$ )
INPUTLINE"Enter place of manufacture : "Dat$
IF Dat$ <> "" THEN PROCAddString( &F4, Dat$ )
INPUTLINE"Enter product description : "Dat$
IF Dat$ <> "" THEN PROCAddString( &F5, Dat$ )
INPUTLINE"Enter part number : "Dat$
IF Dat$ <> "" THEN PROCAddString( &F6, Dat$ )
:
INPUTLINE"Enter filename of loader : "Loader$
IF Loader$ <> "" THEN K%=FNAddFile( &80, Loader$ ) ELSE K%=TRUE
IF K% ELSE PRINT"No room for loader.":CLOSE#H%:END
:
REPEAT
INPUTLINE"Enter name of file to add : "File$
IF File$ <> "" THEN T%=FNType( File$ ) ELSE T%=0
IF T%=0 ELSE K%=FNAddFile( T%, File$ )
IF K% ELSE PRINT"No more room."
UNTIL (File$ = "") OR (K%=FALSE)
PTR#H%=Bot%:PROCByte(0)
CLOSE#H%:END
:
DEF PROCByte(D%):BPUT#H%,D%:ENDPROC
:
DEF PROCHalf(D%):BPUT#H%,D%:BPUT#H%,D%DIV&100:ENDPROC
:
DEF PROC3Byte(D%)
BPUT#H%,D%:BPUT#H%,D%DIV&100:BPUT#H%,D%DIV&10000:ENDPROC
:
DEF PROCWord(D%)
BPUT#H%,D%:BPUT#H%,D%DIV&100:BPUT#H%,D%DIV&10000
BPUT#H%,D%DIV&1000000:ENDPROC
:
DEF PROCAddString( T%, S$ )
S$=S$+CHR$0
IF Top%-Bot% < 10+LEN(S$) THEN STOP
PROCHeader( T%, Top%-LEN(S$)-Base%, LEN(S$) )
Top%=Top%-LEN(S$):PTR#H%=Top%:FOR I%=1 TO LEN(S$)
BPUT#H%,ASC(MID$(S$,I%,1)):NEXTI%:ENDPROC
:
DEF PROCHeader( Type%, Address%, Size% )
PTR#H%=Bot%
PROCByte( Type% )
PROC3Byte( Size% )
PROCWord( Address% )
Bot%=Bot%+8:ENDPROC
:
DEF FNAddFile( T%, N$ )
F%=OPENIN( N$ )
IF F%=0 THEN PRINT"File '";N$;"' not found.":=FALSE
S%=EXT#F%
IF L% THEN =FNAddNormalFile ELSE =FNAddPsuedoFile
:
DEF FNAddNormalFile
IF Top%-Bot% < 10+S% THEN PROCChange:=FNAddPsuedoFile
PROCHeader( T%, Top%-S%-Base%, S% )
Top%=Top%-S%:PTR#H%=Top%:FOR I%=1 TO S%
BPUT#H%,BGET#F%:NEXTI%:CLOSE#F%:=TRUE
:
DEF FNAddPsuedoFile
IF (Top%-Cur% < S%) OR (Low%-Bot% < 10) THEN =FALSE
PROCHeader( T%, Cur%-Base%, S% )
PTR#H%=Cur%
FOR I%=1 TO S%:BPUT#H%,BGET#F%:NEXTI%
Cur%=PTR#H%:CLOSE#F%:=TRUE
:
DEF PROCChange
PRINT"Changing down.  Wasting ";Top%-Bot%;" bytes."
PTR#H%=Bot%:PROCByte(0):Bot%=0:Top%=Base%:Base%=0:L%=FALSE
ENDPROC
:
DEF FNType( N$ )
$Buffer%=N$:X%=Block%:Y%=X%/256:A%=5:X%!0=Buffer%
R%=USR&FFDD:IF (R%AND255) <> 1 THEN PRINT"Not a file":=0
V%=(Block%!3)AND&FFFFFF
IFV%=&FFFFFA THEN =&81
IF (((Block%!2)AND&FFFF)=&8000)AND(((Block%!6)AND&FFFF)=&8000) THEN =&82
IFV%=&FFFFF9 THEN =&83
=0
