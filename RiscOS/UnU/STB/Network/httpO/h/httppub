/* -*-c-*- */

/* httppub.h */

#include "pads.h"

#define HTTP_SWI_Base		0x4AF80

#define HTTP_Open		(HTTP_SWI_Base + 0)
#define HTTP_Status		(HTTP_SWI_Base + 1)
#define HTTP_Close		(HTTP_SWI_Base + 2)
#define HTTP_MapToRISCOS	(HTTP_SWI_Base + 3)
#define HTTP_MapFromRISCOS	(HTTP_SWI_Base + 4)
#define HTTP_SetFileType	(HTTP_SWI_Base + 5)

typedef struct http_header_item {
    struct http_header_item *next;
    char *key;
    char *value;
} http_header_item;

/* HTTP_Open */

#define http_open_flags_SECURE	0x01 /* Use an SSL connection */
#define http_open_flags_VERIFY  0x02 /* Fail the connect if peer not verified */
#define http_open_flags_HEAD    0x04 /* send a HEAD request, not a GET */

typedef struct {
    struct sockaddr_in      *addr;
    char *object;
    struct http_header_item *headers;
    char *fname;
    char *bname;
    int flags;			/* Options for the connection */
    args_PAD6;
} http_open_in;

typedef struct {
    struct httpconn *handle;
    args_PAD1;
} http_open_out;

typedef union {
    http_open_in in;
    http_open_out out;
} http_open_args;


/* HTTP_Status */

typedef struct {
    struct httpconn *handle;
    args_PAD1;
} http_status_in;

typedef struct {
    int status;
    int ro_fh;
    char *fname;
    int data_size;
    int data_so_far;
    struct http_header_item *headers;
    int rc;
    char *message;
    args_PAD8;
} http_status_out;

typedef union {
    http_status_in in;
    http_status_out out;
} http_status_args;


/* HTTP_Close */

typedef int http_close_flags;
#define http_close_DELETE_FILE	0x01	/* Delete the file when the conneciton is closed */
#define http_close_SET_TYPE	0x02	/* Set the file type according to Content-type: header line */
#define http_close_DELETE_BODY	0x04	/* Delete the body when the conneciton is closed */

typedef struct {
    struct httpconn *handle;
    int flags;
    args_PAD2;
} http_close_in;

typedef struct {
    int status;
    args_PAD1;
} http_close_out;

typedef union {
    http_close_in in;
    http_close_out out;
} http_close_args;


/* HTTP_MapToRISCOS */

typedef struct {
    char *extn;
    args_PAD1;
} http_maptoriscos_in;

typedef struct {
    int ft;
    args_PAD1;
} http_maptoriscos_out;

typedef union {
    http_maptoriscos_in in;
    http_maptoriscos_out out;
} http_maptoriscos_args;


/* HTTP_MapFromRISCOS */

typedef struct {
    int ft;
    args_PAD1;
} http_mapfromriscos_in;

typedef struct {
    char *extn;
    args_PAD1;
} http_mapfromriscos_out;

typedef union {
    http_mapfromriscos_in in;
    http_mapfromriscos_out out;
} http_mapfromriscos_args;


/* HTTP_SetFileType */

typedef struct {
    struct httpconn *handle;
    args_PAD1;
} http_setfiletype_in;

typedef struct {
    int ftype;
    args_PAD1;
} http_setfiletype_out;

typedef union {
    http_setfiletype_in in;
    http_setfiletype_out out;
} http_setfiletype_args;

