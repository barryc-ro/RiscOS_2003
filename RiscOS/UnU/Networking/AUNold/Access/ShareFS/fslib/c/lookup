/* -*-C-*-
 *
 * $Header$
 * $Source$
 *
 * Copyright (c) 1995 ANT Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.2  95/01/09  13:37:02  kwelton
 * The header file _swis.h no longer exists, it has been adsorbed into the
 * (new) system version of swis.h.
 * 
 * Revision 1.1  95/01/04  17:57:32  kwelton
 * Initial revision
 * 
 */
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

#include "kernel.h"
#include "swis.h"

#define __lookup_c
#include "lookup.h"

static int lookup_block[4];

#define DEBUGf if (0) printf

_kernel_oserror *lookup_init(char *file)
{
    _kernel_oserror *err;
    DEBUGf("lookup_init\n");
    err = _swix(MessageTrans_OpenFile, _INR(0, 2), lookup_block, file, 0);
#ifdef DEBUG
    if (err)
	DEBUGf("Error: %s\n", err->errmess);
#endif
    return err;
}

char *lookup(char *tag, char *result, int maxlength,
	      char *p0, char *p1, char *p2, char *p3)
{
    char *p;
    _kernel_oserror *err;
    DEBUGf("lookup(%s)=", tag);
    err = _swix(MessageTrans_Lookup, _INR(0, 7) | _OUT(2),
	  lookup_block, tag, result, maxlength, p0, p1, p2, p3, &p);
    DEBUGf("%s\n", err ? err->errmess : p);
    if (err && result)
    {
	strncpy(result, err->errmess, maxlength);
	result[maxlength - 1] = 0;
    }
    return err ? err->errmess : p;
}

void lookup_clear(void)
{
     DEBUGf("lookup_clear\n");
    _swix(MessageTrans_CloseFile, _IN(0), lookup_block);
}

_kernel_oserror *lookupmenu(char *desc, char *result, int maxlength)
{
    _kernel_oserror *err;
    DEBUGf("lookup_menu=");
    err = _swix(MessageTrans_MakeMenus, _INR(0, 3), lookup_block,
		desc, result, maxlength);
    DEBUGf("%p\n", err);
    return err;
}

_kernel_oserror *lookuperr(int errnum, char *t, char *p0,
			    char *p1, char *p2, char *p3)
{
    _kernel_oserror err, *e;
    err.errnum = errnum;
    strcpy(err.errmess, t);
    DEBUGf("lookuperr(%x,%s)=", errnum, t);
    e = _swix(MessageTrans_ErrorLookup, _INR(0, 7), &err,
	      lookup_block, 0, 0, p0, p1, p2, p3);
    DEBUGf("%s\n", e->errmess);
    return e;
}

_kernel_oserror *lookuperrno(int errno, char *p0, char *p1)
{
    _kernel_oserror err, *e;
    char er[20];
    err.errnum = errno;
    sprintf(er, "(%d)", errno);
    sprintf(err.errmess, "errno%d", err.errnum);
    DEBUGf("lookuperrno(%s)=", err.errmess);
    e = _swix(MessageTrans_ErrorLookup, _INR(0, 7), &err, lookup_block,
	      0, 0, p0, p1, er, _kernel_last_oserror()->errmess);
    DEBUGf("%s\n", e->errmess);
    return e;
}

/* EOF lookup.c */
