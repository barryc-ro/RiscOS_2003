/* -*-C-*-
 *
 * $Header$
 * $Source$
 *
 * Copyright (c) 1995 ANT Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.1  95/01/09  15:13:32  kwelton
 * Initial revision
 * 
 */

/* $Id$ */

#include "msgproc.h"

/********** The sliding window module provides: **********/

void window_done(void);
_kernel_oserror *window_init(void);

void gotpacket(int c,int *buf,int len);
/* 		called asynchronously (but not reentrant) when a packet is
                received, queues incoming requests
                Does not send any data itself, so may be called in bg.
*/

msgproc domsg; /* client - called by Msg swi */

extern _kernel_oserror *lasterror;

void showqueue(void);

/*********** It makes use of: **********/

void poll(void);
/* called inside loops so may call gotpacket
   (but the transport may do this asynchronously anyway)
*/

void sendpacket(int c,void *p, int n);
/* Don't block long - if buffers stay full, set lasterror and return */

void sendsplitpacket(int c,void *p, int n, void *q, int m, int evil);
/* possibly optimised transmit of 2 parts */
                        /* if evil is set, may temp munge q-m */
#define EVIL 1
#define NICE 0

extern int CHUNKSIZE;	/* Set this to max packet size */
extern int WINDOWSIZE;	/* Set this to max number of packets in transit */

/********** Used to call Msg swi **********/

moreproc winmore;

/* EOF window.h */
