/*
 * $Header$
 * $Source$
 *
 * Copyright (c) 1988 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.1  95/01/11  10:19:38  kwelton
 * Initial revision
 * 
 * Revision 1.4  88/11/17  02:09:11  keith
 * New definitions for our RISC-OS/RISC-iX world, also it #includes cmos.h
 * since there are relevant definitions in  there as well.
 * 
 * Revision 1.3  88/06/17  20:20:40  beta
 * Acorn Unix initial beta version
 * 
 */
/* @(#)reboot.h	1.2 87/05/15 3.2/4.3NFSSRC */
/*
 * Copyright (c) 1982, 1986 Regents of the University of California.
 * All rights reserved.  The Berkeley software License Agreement
 * specifies the terms and conditions for redistribution.
 *
 *	@(#)reboot.h	7.1 (Berkeley) 6/4/86
 */

#ifdef KERNEL
# include "../arm/cmos.h"
#else
# include <dev/cmos.h>
#endif KERNEL

/*
 * Arguments to reboot system call.
 * These are used to set up a byte of CMOS ram for the boot program
 * and eventually get returned on next boot for the kernel to give to
 * /etc/init on startup.
 */
#define	RB_AUTOBOOT	0	/* flags for system auto-booting itself */

#define	RB_ASKNAME	0x01	/* ask for file name to reboot from */
#define	RB_SINGLE	0x02	/* reboot to single user only */
#define	RB_NOSYNC	0x04	/* dont sync before reboot */
#define	RB_HALT		0x08	/* don't reboot, just halt */
#define	RB_INITNAME	0x10	/* name given for /etc/init */
#define	RB_DFLTROOT	0x20	/* use compiled-in rootdev */

#define	RB_PANIC	0	/* reboot due to panic */
#define	RB_BOOT		1	/* reboot due to boot() */


/*
 * These are the bits defined in the CMOS ram boot control byte which are
 * used by RISC-iX to pass information back to RISC-OS.
 * Also are bits used by RISC-OS to control its prompting behaviour under user
 * request (*fx 162,... ) and to check that RISC-iX boot did actually complete
 * sucessfully.
 * The interpretation of these has changed in RISC-iX Beta 2.3, and is different
 * in A680 kernels. These differences are needed beacaues of interpretation of
 * CMOS ram on a uninitialised machine.
 */
#define RISCiXFailedBoot (1<<6)	/* RISC-iX did not successfully boot. This bit is set by
				 * the RISC-OS boot program each time RISC-iX is booted.
				 * It needs to be cleared before RISC-OS is re-entered.
				 */
#define noRISCOS	(1<<5)	/* RISC-OS does not stop, entry is always to RISCix
				 * If set, the /etc/halt will cause RISC-iX kernel to loop
				 * This is user-configuarable. 
				 */
#define	rebootMULTI	(1<<4)	/* RISC-iX wants RISC-OS to reboot multiuser immediately */
#define	rebootSINGLE	(1<<3)	/* RISC-iX wants RISC-OS to reboot single user immediately */

/* EOF reboot.h */
