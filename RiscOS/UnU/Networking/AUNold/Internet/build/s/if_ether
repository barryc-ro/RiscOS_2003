; generated by Norcroft RISC OS ARM C vsn 5.06 (Acorn Computers Ltd) [Feb 16 1995]

        AREA |C$$code|, CODE, READONLY
|x$codeseg|

        IMPORT  timeout
        EXPORT  arptfree
        EXPORT  arptimer
arptimer
        MOV      ip,sp
        STMDB    sp!,{v1-v4,fp,ip,lr,pc}
        SUB      fp,ip,#4
        LDR      a1,[pc, #L000088-.-8]
        MOV      a3,#&770
        ADD      a3,a3,#&1000
        MOV      a2,#0
        BL       timeout
        LDR      v1,[pc, #L00008c-.-8]
        LDR      ip,[sl,#-0]
        ADD      v1,ip,v1
        MOV      v2,#0
        MOV      v4,#&14
        MOV      v3,#3
|L000038.J4.arptimer|
        LDRB     a1,[v1,#&b]
        TEQ      a1,#0
        BEQ      |L000074.J9.arptimer|
        TST      a1,#4
        BNE      |L000074.J9.arptimer|
        LDRB     a2,[v1,#&a]
        ADD      a2,a2,#1
        AND      a2,a2,#&ff
        STRB     a2,[v1,#&a]
        TST      a1,#2
        MOVEQ    a1,v3
        MOVNE    a1,v4
        CMP      a2,a1
        MOVCS    a1,v1
        BLCS     arptfree
|L000074.J9.arptimer|
        ADD      v2,v2,#1
        ADD      v1,v1,#&10
        CMP      v2,#&c8
        BLT      |L000038.J4.arptimer|
        LDMDB    fp,{v1-v4,fp,sp,pc}^
L000088
        DCD     arptimer
L00008c
        DCD     arptab

        IMPORT  bzero
        IMPORT  bcopy
        IMPORT  htons
        EXPORT  arpwhohas
arpwhohas
        MOV      ip,sp
        STMDB    sp!,{v1-v5,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        MOV      v2,a2
        SUB      sp,sp,#&10
        LDR      a4,[pc, #L0000d4-.-8]
        LDR      ip,[sl,#-0]
        ADD      a4,ip,a4
        MOV      a1,a4
        MOV      a3,#0
        MOV      a2,#&70
        MOV      lr,pc
        LDR      pc,[a4,#&3c]
        MOVS     v4,a1
        BNE      |L0000d8.J4.arpwhohas|
|L0000d0.J8.arpwhohas|
        LDMDB    fp,{v1-v5,fp,sp,pc}^
L0000d4
        IMPORT  mbctl
        DCD     mbctl
|L0000d8.J4.arpwhohas|
        MOV      a1,#1
        STRB     a1,[v4,#&18]
        MOV      a1,#&1c
        STR      a1,[v4,#&c]
        ADD      a2,v4,#&10
        LDMIA    a2,{a1,a2}
        ADD      a1,a1,a2
        SUB      a1,a1,#&1c
        STR      a1,[v4,#8]
        ADD      v3,v4,a1
        ADD      v5,sp,#2
        MOV      a1,v3
        MOV      a2,#&1c
        BL       bzero
        MOV      a2,v5
        LDR      a1,[pc, #L0001d8-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        MOV      a3,#6
        BL       bcopy
        MOV      a1,#6
        STRB     a1,[sp,#&e]
        MOV      a1,#8
        STRB     a1,[sp,#&f]
        MOV      a1,#1
        BL       htons
        STRB     a1,[v3,#0]
        MOV      a1,a1,LSR #8
        STRB     a1,[v3,#1]
        MOV      a1,#&800
        BL       htons
        STRB     a1,[v3,#2]
        MOV      a1,a1,LSR #8
        STRB     a1,[v3,#3]
        MOV      a1,#6
        STRB     a1,[v3,#4]
        MOV      a1,#4
        STRB     a1,[v3,#5]
        MOV      a1,#1
        BL       htons
        STRB     a1,[v3,#6]
        MOV      a1,a1,LSR #8
        STRB     a1,[v3,#7]
        ADD      a2,v3,#8
        ADD      a1,v1,#&5c
        MOV      a3,#6
        BL       bcopy
        ADD      a2,v3,#&e
        ADD      a1,v1,#&64
        MOV      a3,#4
        BL       bcopy
        ADD      a2,v3,#&18
        MOV      a1,v2
        MOV      a3,#4
        BL       bcopy
        MOV      a1,#0
        STRB     a1,[sp,#0]
        STRB     a1,[sp,#1]
        MOV      a1,v1
        MOV      a3,sp
        MOV      a2,v4
        MOV      lr,pc
        LDR      pc,[v1,#&34]
        B        |L0000d0.J8.arpwhohas|
L0001d8
        DCD     etherbroadcastaddr

        IMPORT  in_broadcast
        IMPORT  looutput
        IMPORT  in_lnaof
        IMPORT  splimp
        IMPORT  __rt_udiv
        EXPORT  arptnew
        IMPORT  panic
        IMPORT  splx
        EXPORT  arpresolve
arpresolve
        MOV      ip,sp
        STMDB    sp!,{a1-a4}
        STMDB    sp!,{v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#&14
        MOV      v3,a1
        MOV      v4,a2
        MOV      v1,a3
        MOV      v2,a4
        SUB      sp,sp,#&1c
        MOV      a2,#0
        LDR      a1,[fp,#&14]
        STR      a2,[a1,#0]
        LDR      a1,[a3,#0]
        BL       in_broadcast
        MOV      v6,#2
        LDR      v5,[pc, #L0002bc-.-8]
        LDR      ip,[sl,#-0]
        ADD      v5,ip,v5
        TEQ      a1,#0
        BEQ      |L0002c4.J4.arpresolve|
        LDR      a1,[pc, #L0002c0-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a1,[a1,#&c8c]
        TEQ      a1,#0
        BEQ      |L0002a8.J6.arpresolve|
        LDR      a1,[v3,#&10]
        TST      a1,#&400
        BNE      |L0002a8.J6.arpresolve|
        MOV      a2,v4
        LDR      lr,[pc, #L0000d4-.-8]
        LDR      ip,[sl,#-0]
        ADD      lr,ip,lr
        MOV      a1,lr
        MOV      a4,#&7f000000
        MOV      a3,#0
        LDR      ip,[lr,#&78]!
        MOV      lr,pc
        MOV      pc,ip
        TEQ      a1,#0
        BEQ      |L0002a8.J6.arpresolve|
        MOV      a2,v6
        STRB     a2,[sp,#0]
        MOV      a2,#0
        STRB     a2,[sp,#1]
        LDR      a2,[v1,#0]
        STR      a2,[sp,#4]
        MOV      a3,sp
        MOV      a2,a1
        MOV      a1,v5
        BL       looutput
|L0002a8.J6.arpresolve|
        MOV      a2,v2
        LDR      a1,[pc, #L0001d8-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        B        |L000334.J40.arpresolve|
L0002bc
        IMPORT  loif
        DCD     loif
L0002c0
        DCD     |x$dataseg|
|L0002c4.J4.arpresolve|
        LDR      a1,[v1,#0]
        BL       in_lnaof
        STR      a1,[sp,#&10]
        LDR      a2,[v1,#0]
        LDR      a1,[v3,#&64]
        ADD      a3,v3,#&5c
        TEQ      a2,a1
        STR      a3,[sp,#&18]
        BNE      |L000344.J11.arpresolve|
        LDR      a1,[pc, #L0002c0-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a1,[a1,#&c8c]
        TEQ      a1,#0
        BEQ      |L00032c.J13.arpresolve|
        MOV      a1,v6
        STRB     a1,[sp,#0]
        MOV      a1,#0
        STRB     a1,[sp,#1]
        LDR      a1,[v1,#0]
        STR      a1,[sp,#4]
        MOV      a3,sp
        MOV      a2,v4
        MOV      a1,v5
        BL       looutput
        B        |L0004e0.J42.arpresolve|
|L00032c.J13.arpresolve|
        MOV      a2,v2
        LDR      a1,[sp,#&18]
|L000334.J40.arpresolve|
        MOV      a3,#6
        BL       bcopy
|L00033c.J41.arpresolve|
        MOV      a1,#1
        B        |L0004e4.J45.arpresolve|
|L000344.J11.arpresolve|
        BL       splimp
        MOV      v6,a1
        LDR      a2,[v1,#0]
        MOV      a1,#&14
        STR      a2,[sp,#&14]
        BL       __rt_udiv
        ADD      a2,a2,a2,LSL #2
        LDR      a1,[pc, #L00008c-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        ADD      v5,a1,a2,LSL #5
        MOV      a1,#0
|L000374.J16.arpresolve|
        LDR      a2,[v5,#0]
        LDR      a3,[sp,#&14]
        TEQ      a2,a3
        BEQ      |L000394.J19.arpresolve|
        ADD      a1,a1,#1
        ADD      v5,v5,#&10
        CMP      a1,#&a
        BLT      |L000374.J16.arpresolve|
|L000394.J19.arpresolve|
        CMP      a1,#&a
        MOVGE    v5,#0
        TEQ      v5,#0
        BNE      |L000444.J23.arpresolve|
        LDR      a1,[v3,#&10]
        TST      a1,#&80
        BEQ      |L0003ec.J25.arpresolve|
        MOV      a2,v2
        MOV      a3,#3
        LDR      a1,[sp,#&18]
        BL       bcopy
        MOV      a1,#&7f
        LDR      a2,[sp,#&10]
        AND      a1,a1,a2,LSR #16
        STRB     a1,[v2,#3]
        MOV      a1,#&ff
        LDR      a2,[sp,#&10]
        AND      a1,a1,a2,LSR #8
        STRB     a1,[v2,#4]
        LDR      a1,[sp,#&10]
        STRB     a1,[v2,#5]
        B        |L00047c.J32.arpresolve|
|L0003ec.J25.arpresolve|
        MOV      a1,v1
        BL       arptnew
        MOVS     v2,a1
        ADDEQ    a1,pc,#L000428-.-8
        BLEQ     panic
        BEQ      |L0004d8.J44.arpresolve|
        MOV      a2,v4
        LDR      a3,[pc, #L0000d4-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a1,a3
        MOV      lr,pc
        LDR      pc,[a3,#&44]
        STR      a1,[v2,#&c]!
        B        |L0004cc.J43.arpresolve|
L000428
        DCB     &61,&72,&70,&72
        DCB     &65,&73,&6f,&6c
        DCB     &76,&65,&3a,&20
        DCB     &6e,&6f,&20,&66
        DCB     &72,&65,&65,&20
        DCB     &65,&6e,&74,&72
        DCB     &79,&00,&00,&00
|L000444.J23.arpresolve|
        MOV      a1,#0
        STRB     a1,[v5,#&a]
        LDRB     a1,[v5,#&b]
        TST      a1,#2
        BEQ      |L000488.J30.arpresolve|
        ADD      a1,v5,#4
        MOV      a2,v2
        MOV      a3,#6
        BL       bcopy
        LDRB     a1,[v5,#&b]
        TST      a1,#&10
        MOVNE    a1,#1
        LDRNE    a2,[fp,#&14]
        STRNE    a1,[a2,#0]
|L00047c.J32.arpresolve|
        MOV      a1,v6
        BL       splx
        B        |L00033c.J41.arpresolve|
|L000488.J30.arpresolve|
        LDR      a2,[v5,#&c]
        TEQ      a2,#0
        BEQ      |L0004ac.J34.arpresolve|
        LDR      a3,[pc, #L0000d4-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a1,a3
        MOV      lr,pc
        LDR      pc,[a3,#&50]
|L0004ac.J34.arpresolve|
        MOV      a2,v4
        LDR      a3,[pc, #L0000d4-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a1,a3
        MOV      lr,pc
        LDR      pc,[a3,#&44]
        STR      a1,[v5,#&c]!
|L0004cc.J43.arpresolve|
        MOV      a2,v1
        MOV      a1,v3
        BL       arpwhohas
|L0004d8.J44.arpresolve|
        MOV      a1,v6
        BL       splx
|L0004e0.J42.arpresolve|
        MOV      a1,#0
|L0004e4.J45.arpresolve|
        LDMDB    fp,{v1-v6,fp,sp,pc}^

        IMPORT  ntohs
        EXPORT  in_arpinput
        EXPORT  arpinput
arpinput
        MOV      ip,sp
        STMDB    sp!,{v1-v4,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v2,a1
        MOV      v1,a2
        LDR      a1,[a1,#&10]
        TST      a1,#&80
        LDR      v4,[pc, #L0000d4-.-8]
        LDR      ip,[sl,#-0]
        ADD      v4,ip,v4
        BNE      |L0005b4.J6.arpinput|
        LDR      a1,[v1,#8]
        ADD      a1,a1,#4
        STR      a1,[v1,#8]
        LDR      a1,[v1,#&c]
        SUBS     a1,a1,#4
        STR      a1,[v1,#&c]
        BNE      |L000540.J7.arpinput|
        LDR      v1,[v1,#0]
        MOV      a1,v4
        MOV      lr,pc
        LDR      pc,[v4,#&4c]
|L000540.J7.arpinput|
        LDR      a1,[v1,#&c]
        CMP      a1,#8
        BCC      |L0005b4.J6.arpinput|
        LDR      a1,[v1,#8]
        ADD      v3,v1,a1
        LDR      a1,[v3,#0]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,LSR #16
        BL       ntohs
        TEQ      a1,#1
        BNE      |L0005b4.J6.arpinput|
        LDRB     a1,[v3,#4]
        MOV      a2,a1,LSL #1
        LDRB     a1,[v3,#5]
        ADD      a1,a2,a1,LSL #1
        ADD      a2,a1,#8
        LDR      a1,[v1,#&c]
        CMP      a2,a1
        BHI      |L0005b4.J6.arpinput|
        LDR      a1,[v3,#2]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,LSR #16
        BL       ntohs
        TEQ      a1,#&800
        TEQNE    a1,#&1000
        MOVEQ    a2,v1
        MOVEQ    a1,v2
        LDMEQDB  fp,{v1-v4,fp,sp,lr}
        BEQ      in_arpinput
|L0005b4.J6.arpinput|
        MOV      a2,v1
        MOV      a1,v4
        LDR      ip,[v4,#&50]
        LDMDB    fp,{v1-v4,fp,sp,lr}
        MOV      pc,ip

        IMPORT  bcmp
in_arpinput
        MOV      ip,sp
        STMDB    sp!,{v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        MOV      v2,a2
        MOV      v6,#0
        STR      v6,[sp,#-&50]!
        LDR      a1,[a1,#&64]
        STR      a1,[sp,#&10]
        LDR      a1,[a2,#8]
        ADD      v4,a2,a1
        LDR      a1,[v4,#2]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,LSR #16
        BL       ntohs
        STR      a1,[sp,#&c]
        LDR      a1,[v4,#6]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,LSR #16
        BL       ntohs
        STR      a1,[sp,#8]
        ADD      a1,v4,#&e
        STR      a1,[sp,#&4c]
        ADD      a2,sp,#&18
        MOV      a3,#4
        BL       bcopy
        ADD      a1,v4,#&18
        STR      a1,[sp,#&48]
        ADD      a2,sp,#&14
        MOV      a3,#4
        BL       bcopy
        ADD      a2,v1,#&5c
        ADD      a1,v4,#8
        MOV      v5,a1
        MOV      a3,#6
        STR      a2,[sp,#&44]
        BL       bcmp
        TEQ      a1,#0
        BEQ      |L0009f4.J6.in_arpinput|
        MOV      a1,v5
        LDR      a2,[pc, #L0001d8-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        MOV      a3,#6
        BL       bcmp
        TEQ      a1,#0
        BEQ      |L0009f4.J6.in_arpinput|
        LDR      a1,[sp,#&18]
        LDR      a2,[sp,#&10]
        TEQ      a1,a2
        BNE      |L0006ac.J9.in_arpinput|
        LDR      a1,[sp,#&10]
        STR      a1,[sp,#&14]
        LDR      a1,[sp,#8]
        TEQ      a1,#1
        BNE      |L0009f4.J6.in_arpinput|
        B        |L0007c8.J13.in_arpinput|
|L0006ac.J9.in_arpinput|
        BL       splimp
        STR      a1,[sp,#4]
        LDR      a2,[sp,#&18]
        MOV      a1,#&14
        STR      a2,[sp,#&40]
        BL       __rt_udiv
        ADD      a1,a2,a2,LSL #2
        LDR      a2,[pc, #L00008c-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        ADD      v3,a2,a1,LSL #5
        MOV      a1,#0
|L0006dc.J14.in_arpinput|
        LDR      a2,[v3,#0]
        LDR      a3,[sp,#&40]
        TEQ      a2,a3
        BEQ      |L0006fc.J17.in_arpinput|
        ADD      a1,a1,#1
        ADD      v3,v3,#&10
        CMP      a1,#&a
        BLT      |L0006dc.J14.in_arpinput|
|L0006fc.J17.in_arpinput|
        CMP      a1,#&a
        MOVGE    v3,#0
        TEQ      v3,#0
        BEQ      |L00077c.J28.in_arpinput|
        ADD      a2,v3,#4
        MOV      a1,v5
        MOV      a3,#6
        BL       bcopy
        LDRB     a1,[v3,#&b]
        TST      a1,#2
        MOVEQ    a2,#1
        STREQ    a2,[sp,#0]
        ORR      a1,a1,#2
        STRB     a1,[v3,#&b]
        LDR      a1,[v3,#&c]
        TEQ      a1,#0
        BEQ      |L000774.J21.in_arpinput|
        MOV      a1,#2
        STRB     a1,[sp,#&2c]
        MOV      a1,#0
        STRB     a1,[sp,#&2d]
        LDR      a1,[sp,#&18]
        STR      a1,[sp,#&30]
        MOV      a1,v1
        ADD      a3,sp,#&2c
        LDR      a2,[v3,#&c]
        MOV      lr,pc
        LDR      pc,[v1,#&34]
        MOV      a1,#0
        STR      a1,[v3,#&c]
|L000774.J21.in_arpinput|
        TEQ      v3,#0
        BNE      |L0007c0.J27.in_arpinput|
|L00077c.J28.in_arpinput|
        LDR      a1,[sp,#&14]
        LDR      a2,[sp,#&10]
        TEQ      a1,a2
        BNE      |L0007c0.J27.in_arpinput|
        ADD      a1,sp,#&18
        BL       arptnew
        MOVS     v3,a1
        BEQ      |L0007c0.J27.in_arpinput|
        ADD      a2,v3,#4
        MOV      a1,v5
        MOV      a3,#6
        BL       bcopy
        MOV      a1,#1
        STR      a1,[sp,#0]
        LDRB     a1,[v3,#&b]
        ORR      a1,a1,#2
        STRB     a1,[v3,#&b]
|L0007c0.J27.in_arpinput|
        LDR      a1,[sp,#4]
        BL       splx
|L0007c8.J13.in_arpinput|
        LDR      a1,[sp,#&c]
        TEQ      a1,#&800
        BEQ      |L000808.J34.in_arpinput|
        TEQ      a1,#&1000
        BNE      |L00082c.J32.in_arpinput|
        TEQ      v3,#0
        LDRNEB   a1,[v3,#&b]
        ORRNE    a1,a1,#&10
        STRNEB   a1,[v3,#&b]
        LDR      a1,[sp,#8]
        TEQ      a1,#1
        LDREQ    a1,[v1,#&10]
        ANDEQ    a1,a1,#&20
        TEQEQ    a1,#0
        BNE      |L0009f4.J6.in_arpinput|
        B        |L00082c.J32.in_arpinput|
|L000808.J34.in_arpinput|
        LDR      a1,[sp,#8]
        TEQ      a1,#1
        BEQ      |L00082c.J32.in_arpinput|
        LDR      a1,[sp,#0]
        TEQ      a1,#0
        BEQ      |L0009f4.J6.in_arpinput|
        LDR      a1,[v1,#&10]
        TST      a1,#&20
        BNE      |L0009f4.J6.in_arpinput|
|L00082c.J32.in_arpinput|
        LDR      a1,[sp,#&14]
        STR      a1,[sp,#&3c]
        LDR      a2,[sp,#&10]
        TEQ      a1,a2
        BNE      |L00085c.J48.in_arpinput|
        ADD      a2,v4,#&12
        MOV      a1,v5
        MOV      a3,#6
        BL       bcopy
        MOV      a2,v5
        LDR      a1,[sp,#&44]
        B        |L0008d4.J74.in_arpinput|
|L00085c.J48.in_arpinput|
        MOV      a1,#&14
        LDR      a2,[sp,#&3c]
        BL       __rt_udiv
        ADD      a1,a2,a2,LSL #2
        LDR      a2,[pc, #L00008c-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        ADD      v3,a2,a1,LSL #5
        MOV      a1,#0
|L000880.J51.in_arpinput|
        LDR      a2,[v3,#0]
        LDR      a3,[sp,#&3c]
        TEQ      a2,a3
        BEQ      |L0008a0.J54.in_arpinput|
        ADD      a1,a1,#1
        ADD      v3,v3,#&10
        CMP      a1,#&a
        BLT      |L000880.J51.in_arpinput|
|L0008a0.J54.in_arpinput|
        CMP      a1,#&a
        MOVGE    v3,#0
        TEQ      v3,#0
        LDRNEB   a1,[v3,#&b]
        ANDNE    a1,a1,#8
        TEQNE    a1,#0
        BEQ      |L0009f4.J6.in_arpinput|
        ADD      a2,v4,#&12
        MOV      a1,v5
        MOV      a3,#6
        BL       bcopy
        MOV      a2,v5
        ADD      a1,v3,#4
|L0008d4.J74.in_arpinput|
        MOV      a3,#6
        BL       bcopy
        MOV      a3,#4
        LDR      a1,[sp,#&4c]
        LDR      a2,[sp,#&48]
        BL       bcopy
        LDR      a2,[sp,#&4c]
        ADD      a1,sp,#&14
        MOV      a3,#4
        BL       bcopy
        MOV      a1,#2
        BL       htons
        STRB     a1,[v4,#6]
        MOV      a1,a1,LSR #8
        STRB     a1,[v4,#7]
        LDR      a1,[sp,#8]
        TEQ      a1,#2
        BNE      |L000934.J62.in_arpinput|
        MOV      a1,#&1000
        BL       htons
        STRB     a1,[v4,#2]
        MOV      a1,a1,LSR #8
        STRB     a1,[v4,#3]
        B        |L000978.J64.in_arpinput|
|L000934.J62.in_arpinput|
        LDR      a1,[sp,#&c]
        TEQ      a1,#&800
        LDREQ    a1,[v1,#&10]
        ANDEQ    a1,a1,#&20
        TEQEQ    a1,#0
        BNE      |L000978.J64.in_arpinput|
        MOV      a2,v2
        LDR      lr,[pc, #L0000d4-.-8]
        LDR      ip,[sl,#-0]
        ADD      lr,ip,lr
        MOV      a1,lr
        MOV      a4,#&7f000000
        MOV      a3,#0
        LDR      ip,[lr,#&78]!
        MOV      lr,pc
        MOV      pc,ip
        MOV      v6,a1
|L000978.J64.in_arpinput|
        ADD      a2,sp,#&1e
        ADD      a1,v4,#&12
        MOV      a3,#6
        BL       bcopy
        MOV      a1,#6
        STRB     a1,[sp,#&2a]
        MOV      a1,#8
        STRB     a1,[sp,#&2b]
        MOV      a1,#0
        STRB     a1,[sp,#&1c]
        STRB     a1,[sp,#&1d]
        MOV      a1,v1
        ADD      a3,sp,#&1c
        MOV      a2,v2
        MOV      lr,pc
        LDR      pc,[v1,#&34]
        TEQ      v6,#0
        BEQ      |L0009f0.J75.in_arpinput|
        LDR      a1,[v6,#8]
        ADD      v2,v6,a1
        MOV      a1,#&1000
        BL       htons
        STRB     a1,[v2,#2]
        MOV      a1,a1,LSR #8
        STRB     a1,[v2,#3]
        MOV      a1,v1
        ADD      a3,sp,#&1c
        MOV      a2,v6
        MOV      lr,pc
        LDR      pc,[v1,#&34]
|L0009f0.J75.in_arpinput|
        LDMDB    fp,{v1-v6,fp,sp,pc}^
|L0009f4.J6.in_arpinput|
        MOV      a2,v2
        LDR      a3,[pc, #L0000d4-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a1,a3
        MOV      lr,pc
        LDR      pc,[a3,#&50]
        B        |L0009f0.J75.in_arpinput|

arptfree
        MOV      ip,sp
        STMDB    sp!,{v1,v2,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        BL       splimp
        MOV      v2,a1
        LDR      a2,[v1,#&c]
        TEQ      a2,#0
        BEQ      |L000a50.J4.arptfree|
        LDR      a3,[pc, #L0000d4-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      a1,a3
        MOV      lr,pc
        LDR      pc,[a3,#&50]
|L000a50.J4.arptfree|
        MOV      a1,#0
        STR      a1,[v1,#&c]
        STRB     a1,[v1,#&b]
        STRB     a1,[v1,#&a]
        STR      a1,[v1,#0]
        MOV      a1,v2
        LDMDB    fp,{v1,v2,fp,sp,lr}
        B        splx

arptnew
        MOV      ip,sp
        STMDB    sp!,{v1-v4,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        MVN      v4,#0
        MOV      v3,#0
        LDR      a1,[pc, #L0002c0-.-8]
        LDR      ip,[sl,#-0]
        ADD      a1,ip,a1
        LDR      a2,[a1,#&c90]
        TEQ      a2,#0
        BEQ      |L000ab4.J4.arptnew|
        MOV      a2,#0
        STR      a2,[a1,#&c90]!
        LDR      a1,[pc, #L000088-.-8]
        MOV      a3,#&64
        BL       timeout
|L000ab4.J4.arptnew|
        MOV      a1,#&14
        LDR      a2,[v1,#0]
        BL       __rt_udiv
        ADD      a1,a2,a2,LSL #2
        LDR      a2,[pc, #L00008c-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        ADD      v2,a2,a1,LSL #5
        MOV      a1,#0
|L000ad8.J6.arptnew|
        LDRB     a2,[v2,#&b]
        TEQ      a2,#0
        BEQ      |L000b24.J9.arptnew|
        TST      a2,#4
        BNE      |L000afc.J12.arptnew|
        LDRB     a2,[v2,#&a]
        CMP      a2,v4
        MOVGT    v4,a2
        MOVGT    v3,v2
|L000afc.J12.arptnew|
        ADD      a1,a1,#1
        ADD      v2,v2,#&10
        CMP      a1,#&a
        BLT      |L000ad8.J6.arptnew|
        TEQ      v3,#0
        MOVEQ    a1,#0
        LDMEQDB  fp,{v1-v4,fp,sp,pc}^
        MOV      a1,v3
        MOV      v2,v3
        BL       arptfree
|L000b24.J9.arptnew|
        LDR      a1,[v1,#0]
        STR      a1,[v2,#0]
        MOV      a1,#1
        STRB     a1,[v2,#&b]
        MOV      a1,v2
        LDMDB    fp,{v1-v4,fp,sp,pc}^

        IMPORT  ifa_ifwithnet
        EXPORT  arpioctl
arpioctl
        MOV      ip,sp
        STMDB    sp!,{v1-v6,fp,ip,lr,pc}
        SUB      fp,ip,#4
        MOV      v1,a1
        MOV      v3,a2
        LDR      v2,[pc, #L00008c-.-8]
        LDR      ip,[sl,#-0]
        ADD      v2,ip,v2
        LDR      ip,[pc, #L000b84-.-8]
        TEQ      a1,ip
        BNE      |L000b88.J4.arpioctl|
        MOV      a1,a2
        LDR      a2,[pc, #L0002c0-.-8]
        LDR      ip,[sl,#-0]
        ADD      a2,ip,a2
        LDR      a2,[a2,#&c80]
        STMIA    a1,{a2,v2}
        B        |L000c80.J41.arpioctl|
L000b84
        DCD     &40086921
|L000b88.J4.arpioctl|
        LDR      a1,[v3,#0]
        MOV      a1,a1,LSL #16
        MOV      a1,a1,LSR #16
        TEQ      a1,#2
        LDREQ    a1,[v3,#&10]
        MOVEQ    a1,a1,LSL #16
        MOVEQ    a1,a1,LSR #16
        TEQEQ    a1,#0
        MOVNE    a1,#&2f
        LDMNEDB  fp,{v1-v6,fp,sp,pc}^
        MOV      v5,v3
        BL       splimp
        MOV      v4,a1
        LDR      a2,[v5,#4]
        MOV      v6,a2
        MOV      a1,#&14
        BL       __rt_udiv
        ADD      a1,a2,a2,LSL #2
        ADD      v2,v2,a1,LSL #5
        MOV      a1,#0
|L000bd8.J10.arpioctl|
        LDR      a2,[v2,#0]
        TEQ      a2,v6
        BEQ      |L000bf4.J13.arpioctl|
        ADD      a1,a1,#1
        ADD      v2,v2,#&10
        CMP      a1,#&a
        BLT      |L000bd8.J10.arpioctl|
|L000bf4.J13.arpioctl|
        CMP      a1,#&a
        MOVGE    v2,#0
        LDR      v6,[pc, #L000c88-.-8]
        TEQ      v2,#0
        BNE      |L000c38.J17.arpioctl|
        TEQ      v1,v6
        MOVNE    a1,v4
        BLNE     splx
        MOVNE    a1,#6
        LDMNEDB  fp,{v1-v6,fp,sp,pc}^
        MOV      a1,v3
        BL       ifa_ifwithnet
        TEQ      a1,#0
        MOVEQ    a1,v4
        BLEQ     splx
        MOVEQ    a1,#&33
        LDMEQDB  fp,{v1-v6,fp,sp,pc}^
|L000c38.J17.arpioctl|
        TEQ      v1,v6
        BEQ      |L000c94.J26.arpioctl|
        LDR      ip,[pc, #L000c8c-.-8]
        TEQ      v1,ip
        MOVEQ    a1,v2
        BLEQ     arptfree
        BEQ      |L000c78.J23.arpioctl|
        LDR      ip,[pc, #L000c90-.-8]
        TEQ      v1,ip
        BNE      |L000c78.J23.arpioctl|
        ADD      a2,v3,#&12
        ADD      a1,v2,#4
        MOV      a3,#6
        BL       bcopy
        LDRB     a1,[v2,#&b]
        STR      a1,[v3,#&20]!
|L000c78.J23.arpioctl|
        MOV      a1,v4
        BL       splx
|L000c80.J41.arpioctl|
        MOV      a1,#0
        LDMDB    fp,{v1-v6,fp,sp,pc}^
L000c88
        DCD     &8024691e
L000c8c
        DCD     &80246920
L000c90
        DCD     &c024691f
|L000c94.J26.arpioctl|
        TEQ      v2,#0
        BNE      |L000ce8.J30.arpioctl|
        ADD      a1,v5,#4
        MOV      v1,a1
        BL       arptnew
        MOVS     v2,a1
        BNE      |L000cc0.J32.arpioctl|
|L000cb0.J33.arpioctl|
        MOV      a1,v4
        BL       splx
        MOV      a1,#&31
        LDMDB    fp,{v1-v6,fp,sp,pc}^
|L000cc0.J32.arpioctl|
        LDR      a1,[v3,#&20]
        TST      a1,#4
        BEQ      |L000ce8.J30.arpioctl|
        MOV      a1,v1
        BL       arptnew
        TEQ      a1,#0
        MOVEQ    a1,v2
        BLEQ     arptfree
        BEQ      |L000cb0.J33.arpioctl|
        BL       arptfree
|L000ce8.J30.arpioctl|
        ADD      a2,v2,#4
        ADD      a1,v3,#&12
        MOV      a3,#6
        BL       bcopy
        LDR      a1,[v3,#&20]!
        AND      a1,a1,#&1c
        ORR      a1,a1,#3
        STRB     a1,[v2,#&b]
        MOV      a1,#0
        STRB     a1,[v2,#&a]
        B        |L000c78.J23.arpioctl|

        EXPORT  ether_sprintf
ether_sprintf
        STMDB    sp!,{v1,v2,lr}
        LDR      lr,[pc, #L000d7c-.-8]
        LDR      ip,[sl,#-0]
        ADD      lr,ip,lr
        MOV      a4,lr
        MOV      a2,#0
        LDR      a3,[pc, #L000d80-.-8]
        LDR      ip,[sl,#-0]
        ADD      a3,ip,a3
        MOV      v1,#&3a
|L000d3c.J4.ether_sprintf|
        LDRB     ip,[a1,#0]
        LDRB     ip,[a3,ip,LSR #4]
        STRB     ip,[a4],#1
        LDRB     ip,[a1],#1
        AND      v2,ip,#&f
        LDRB     ip,[a3,v2]
        STRB     ip,[a4],#1
        STRB     v1,[a4],#1
        ADD      a2,a2,#1
        CMP      a2,#6
        BLT      |L000d3c.J4.ether_sprintf|
        MOV      a1,#0
        SUB      a2,a4,#1
        STRB     a1,[a2,#0]
        MOV      a1,lr
        LDMIA    sp!,{v1,v2,pc}^
L000d7c
        DCD     |x$dataseg|+&c94
L000d80
        DCD     |x$dataseg|+&ca8

        AREA |C$$data|,DATA

|x$dataseg|

        EXPORT  arptab
arptab
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        DCD     &00000000
        %       3184

        EXPORT  arptab_size
arptab_size
        DCD     &000000c8

        EXPORT  etherbroadcastaddr
etherbroadcastaddr
        DCD     &ffffffff
        DCD     &0000ffff

useloopback
        DCD     &00000001
        DCD     &00000001
        %       16
        DCD     &00000000
        DCD     &33323130
        DCD     &37363534
        DCD     &62613938
        DCD     &66656463
        DCD     &00000000

        EXPORT  selwait
        AREA selwait,COMMON,NOINIT
        % 4

        EXPORT  boothowto
        AREA boothowto,COMMON,NOINIT
        % 4

        EXPORT  wantin
        AREA wantin,COMMON,NOINIT
        % 4

        EXPORT  panicstr
        AREA panicstr,COMMON,NOINIT
        % 4

        EXPORT  noproc
        AREA noproc,COMMON,NOINIT
        % 4

        EXPORT  swapdev_vp
        AREA swapdev_vp,COMMON,NOINIT
        % 4

        EXPORT  vm_sw_dev
        AREA vm_sw_dev,COMMON,NOINIT
        % 2

        EXPORT  dumplo
        AREA dumplo,COMMON,NOINIT
        % 4

        EXPORT  dumpdev
        AREA dumpdev,COMMON,NOINIT
        % 2

        EXPORT  rootvp
        AREA rootvp,COMMON,NOINIT
        % 4

        EXPORT  rootdev
        AREA rootdev,COMMON,NOINIT
        % 2

        EXPORT  rasize
        AREA rasize,COMMON,NOINIT
        % 4

        EXPORT  rablock
        AREA rablock,COMMON,NOINIT
        % 4

        EXPORT  updlock
        AREA updlock,COMMON,NOINIT
        % 4

        EXPORT  nswap
        AREA nswap,COMMON,NOINIT
        % 4

        EXPORT  physmem
        AREA physmem,COMMON,NOINIT
        % 4

        EXPORT  maxmem
        AREA maxmem,COMMON,NOINIT
        % 4

        EXPORT  curpri
        AREA curpri,COMMON,NOINIT
        % 1

        EXPORT  kmapwnt
        AREA kmapwnt,COMMON,NOINIT
        % 1

        EXPORT  runrun
        AREA runrun,COMMON,NOINIT
        % 4

        EXPORT  runout
        AREA runout,COMMON,NOINIT
        % 1

        EXPORT  runin
        AREA runin,COMMON,NOINIT
        % 1

        EXPORT  mpid
        AREA mpid,COMMON,NOINIT
        % 4

        EXPORT  nswdev
        AREA nswdev,COMMON,NOINIT
        % 4

        EXPORT  nchrdev
        AREA nchrdev,COMMON,NOINIT
        % 4

        EXPORT  nblkdev
        AREA nblkdev,COMMON,NOINIT
        % 4

        EXPORT  cpuspeed
        AREA cpuspeed,COMMON,NOINIT
        % 4

        END
