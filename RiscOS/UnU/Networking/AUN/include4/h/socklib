/* -*-C-*-
 *
 * $Header$
 * $Source$
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * $Log$
 * Revision 1.5  96/03/21  17:13:53  kbracey
 * Changed to use "__errno" from the C library stubs. _inet_err() and
 * _copyerror() added.
 *
 * Revision 1.4  95/08/15  16:24:48  kwelton
 * Include of "sys/types.h" is now where it should be, i.e. before
 * include of "sys/socket.h".
 *
 * Revision 1.3  95/05/02  17:23:22  kwelton
 * makecall() has been renamed to _makecall(), which is what it should have
 * been called in the first place.
 *
 * Revision 1.2  95/04/20  17:43:26  kwelton
 * Function prototypes altered to match the genuine functionality, not
 * whatever random argument types were used in the original library.
 *
 * Revision 1.1  95/04/20  13:40:58  kwelton
 * Initial revision
 *
 */
#include "sys/types.h"
#include "sys/socket.h"
#include "sys/stat.h"
#include "sys/time.h"
#include "sys/uio.h"

#include "kernel.h"

/*
 * variable declarations
 */
#ifndef errno
#define errno __errno
extern int errno;
#endif
extern _kernel_oserror _inet_error;

struct sockaddr_in;

/*
 * function prototypes
 */
extern int accept(int s, struct sockaddr *addr, int *addrlen);

extern int bind(int s, const struct sockaddr *name, int namelen);

extern int connect(int s, const struct sockaddr *name, int namelen);

extern int getpeername(int s, struct sockaddr *name, int *namelen);
extern int getsockname(int s, struct sockaddr *name, int *namelen);
extern int getsockopt(int s, int level, int optname,
		      void *optval, int *optlen);
extern int getstablesize(void);

extern int listen(int s, int backlog);

extern int recv(int s, void *buf, size_t len, int flags);
extern int recvfrom(int s, void *buf, size_t len, int flags,
		    struct sockaddr *from, int *fromlenaddr);
extern int recvmsg(int s, struct msghdr *msg, int flags);

extern int select(int nfds, fd_set *rfds, fd_set *wfds, fd_set *efds,
		  struct timeval *tv);
extern int send(int s, const void *msg, size_t len, int flags);
extern int sendmsg(int s, const struct msghdr *msg, int flags);
extern int sendto(int s, const void *msg, size_t len, int flags,
		  const struct sockaddr *to, int tolen);
extern int sendtosm(int s, const void *buf, size_t len,
                    const void *buf1, size_t len1, struct sockaddr_in *to);
extern int setsockopt(int s, int level, int optname, const void *optval, int optlen);
extern int shutdown(int s, int how);
extern int socketclose(int d);
extern int socket(int domain, int type, int protocol);
extern int socketstat(int s, struct stat *buf);
extern int socketioctl(int s, unsigned long cmd, ...);
extern int socketread(int s, void *buf, unsigned int len);
extern int socketreadv(int s, const struct iovec *iov, int iovcnt);
extern int socketwrite(int s, const void *buf, unsigned int len);
extern int socketwritev(int s, const struct iovec *iov, int iovcnt);

/*
 * auxiliary functions
 */
extern int _copyerror(_kernel_oserror *e);
extern char *_inet_err(void);
extern int _makecall(int swinum, _kernel_swi_regs *in, _kernel_swi_regs *out);

/* EOF socklib.h */
