
A few plug in comments finally...

1) Add a Parent handle field to PLUGIN_OPEN, PLUGIN_OPENED, PLUGIN_CLOSED.
Plugins should save this value and return it in messages to the parent.

2) PLUGIN_OPENED should have the 4 position fields from PLUGIN_OPEN defined.
The plug in can alter these if it wishes (if it can't scale to the size
given). The parent may follow the reception of an altered size block
by sending a PLUGIN_RESHAPE message to reposition the plugin in the 
window.

3) There is a bunch of data to be sent when a plugin is opened. This consists
of a list of NAME=VALUE or NAME=<filename> pairs of indeterminate size and
number. This information is probably best passed in multiple messages 
as with the RAM xfer or FilerAction protocols. Perhaps, once a PLUGIN_OPENED
has been received by the parent it should respond with one or more PLUGIN_DATA
messages. These have the form

  +20 flags (reserved)
  +24 Plugin instance handle
  +28 to +255 data

Data is passed as in the following manner. Each data pair is encoded as
  +0: type word
      0 = value follows
      1 = filename follows
  +4: name, null-terminated
  +n: value/filename, null-terminated and padded to word boundary.

These pairs are stuck together and then chopped into 228 byte packets.
As long as the size of the message <= 256 then there is more data to send.

Each PLUGIN_DATA message should be acknowledged by a PLUGIN_DATA_ACK message
or else the communication is assumed broken and the plugin launch failed.

4) There is a message OPEN_URL which is already part of the Fresco spec.
I have sent suggetions to ANT for upgrading this to add features that
we will need, as soon as this is agreed we should add it these specs
somewhere. It's not a browser specific thing really as anyone can respond
to it.

5) Should plugins handle there own errors or should they pass them back 
to the browser to report (particularly errors on startup)?

6) Java apears to have a resize method defined. The browser can support 
this so we could allow it. eg plugin send PLUGIN_RESHAPE (quoting the
parent handle somewhere), the browser reformats and sends back a 
PLUGIN_RESHAPE so that the plugin can reposition its window.

7) Most wimp messages can be handled by the plug in however it would 
probably be a good idea for it to pass on key presses and maybe button 
presses to the browser. It can do this by resending the events as messages
using the browser task and window handle it was given on opening.

8) It might be necessary to have a method for transferring the input
focus from the browser to the plugin and back again. I'm not sure about
this at the moment.

9) The browser currently does a window deletion and recreation 
when it needs to add or remove scroll bars. Either the new wimp should
allow me to do this without deleting the window or it needs to be
understood that the RESHAPE message may contain a different parent window 
handle which means 'reattach yourself to this window - the previous one
is now invalid'. This implies that the wimp does nothing to child windows
if the parent window is closed/deleted, they are just orphaned until
reattached to another window.


Simon.
