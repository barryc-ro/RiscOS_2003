#include "NHWidget.h"
#include "swis.h"

#define vdu_move(x, y) os_plot(4, x, y)
#define vdu_line(x, y) os_plot(5, x, y)
#define vdu_elin(x, y) os_plot(6, x, y)
#define vdu_fill(x, y) os_plot(103, x, y)

#ifndef JPEG_PlotTransformed
#define JPEG_PlotTransformed  0x49984
#endif

#ifndef JPEG_PlotScaled
#define JPEG_PlotScaled       0x49982
#endif

__swi(0x107) void bleep(void);
__swi(0x100 + 12) void vdu_cls(void);
__swi(0x100 + 16) void vdu_clg(void);

__swi(NH_AntiTwitter) void screen_filter_area(int, int, int, int);

__swi(ColourTrans_SetGCOL) void setcolour(int);
__swi(Font_LoseFont) void font_losefont (int font);
__swi(Font_SetFont) void font_setfont (int font);

__swi(Hourglass_On)  void hourglass_on(void);
__swi(Hourglass_Off) void hourglass_off(void);
__swi(Hourglass_Smash) void hourglass_smash(void);
__swi(Hourglass_Percentage) void hourglass_percentage(int);

__swi(JPEG_PlotTransformed) void jpeg_plottransformed(char *, int, int *, int); 

__swi(OS_Byte) void os_byte(int, int, int);
__swi(OS_ChangeDynamicArea) void change_dynamic(int, int);
__swi(OS_CLI + XOS_Bit) void oscli(char *);
__swi(OS_Plot) void os_plot(int, int, int);
__swi(OS_ReadMonotonicTime) int monotonic_time(void);
__swi(OS_ReadVduVariables) void os_readvduvariables(int *, int *);
__swi(OS_RemoveCursors) void os_removecursors(void);
__swi(OS_RestoreCursors) void os_restorecursors(void);
__swi(OS_ScreenMode) void os_screenmode(int, int);

__swi(Wimp_CloseDown) void wimp_closedown(int, unsigned int);
__swi(Wimp_CreateWindow) int wimp_createwindow(int, int *);
__swi(Wimp_DeleteWindow) void wimp_deletewindow(int, int *);
__swi(Wimp_DragBox) void wimp_dragbox(int, int *);
__swi(Wimp_OpenWindow) void wimp_openwindow(int, int *);
__swi(Wimp_CloseWindow) void wimp_closewindow(int, int *);
__swi(Wimp_PollIdle) int wimp_pollidle (int, int *, int);
__swi(Wimp_ProcessKey) void wimp_processkey (int);
__swi(Wimp_SendMessage) void wimp_sendmessage (int, int *, int);
__swi(Wimp_SetColour) void wimp_setcolour (int colour);
__swi(Wimp_SetExtent) void wimp_setextent (int, int *);
__swi(Wimp_SetMode)   void wimp_setmode (int mode);
__swi(Wimp_StartTask) void wimp_starttask(char *);
