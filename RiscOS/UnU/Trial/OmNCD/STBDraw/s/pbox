a1 RN 0
a2 RN 1
a3 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lr RN 14
pc RN 15

r0 RN 0
r1 RN 1
r2 RN 2
r3 RN 3
r4 RN 4
r5 RN 5
r6 RN 6
r7 RN 7
r8 RN 8
r9 RN 9
r10 RN 10
r11 RN 11
r12 RN 12
r13 RN 13
r14 RN 14
r15 RN 15


f0 FN 0
f1 FN 1
f2 FN 2
f3 FN 3
f4 FN 4
f5 FN 5
f6 FN 6
f7 FN 7

        AREA |C$$code|, CODE, READONLY

        IMPORT  |__main|
|x$codeseg|
        B       |__main|

        IMPORT  |x$stack_overflow|
        EXPORT  paintbox
	EXPORT	get_addrs

paintbox
	MOV 	ip, sp
        STMFD   sp!, {r4-r10,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|

; r0 = addr of top left of box
; r1 = width
; r2 = height
; r3 = line length

	LDR	r4, rt
	LDR	r5, gt
	LDR     r6, bt




; main routine starts here

        SUB     r3, r3, r1, LSL #1 ; Turns r3 into increment from end of
				   ; one line to start of next (linediff)

paintrow
        ADD     r7, r0, r1, LSL #1 ; Add linediff to the start address (why?)
        LDR     r9, [r0]           ; Get 1st word of box

paintpixel
        AND     r10, r9, #31       ; copy just the red component into r10
        LDRB    r10, [r4, r10]     ; Load a table entry (r10 is index)
                                   ; into r10

        AND     r8, r9, #31<<5     ; Extract blue component into r8 to use
                                   ; as index
        LDRB    r8, [r5, r8, LSR #5] ; Get table entry
        ORR     r10, r10, r8, LSL #5 ; Store it in r10, next to the last one

        AND     r8, r9, #31<<10    ; extract red
        LDRB    r8, [r6, r8, LSR #10] ; Get table entry
        ORR     r10, r10, r8, LSL #10 ; Stuff it in r10

        ; r10 now contains a colour extracted from the tables, using screen
        ; colour as the indices

        LDR     r9, [r0, #2]       ; Get next pixel value into r9, update r0
        STRB    r10, [r0], #1      ; Store our constructed pixel back...
        MOV     r10, r10, LSR #8   ; ...in
        STRB    r10, [r0], #1      ; ...stages
        TEQ     r0, r7             ; Have we hit the end of a line?
        BNE     paintpixel

        ADD     r0, r0, r3         ; Next!
        SUBS    r2, r2, #1         ; Decrement rows...
        BNE     paintrow

        LDMEA   fp, {r4-r10,fp,sp,pc}^

; get_addrs (char **r, char **g, char **b)
get_addrs ROUT

	TEQ	r0, #0
	LDRNE	ip, rt
	STRNE	ip, [r0]

	TEQ	r1, #0
	LDRNE	ip, gt
	STRNE	ip, [r1]

	TEQ	r2, #0
	LDRNE	ip, bt
	STRNE	ip, [r2]

	MOV	pc, lr

rt	DCD	red_table
gt	DCD	green_table
bt	DCD	blue_table

        AREA |C$$data|

|x$dataseg|

red_table	% 32
green_table	% 32
blue_table	% 32


        END
