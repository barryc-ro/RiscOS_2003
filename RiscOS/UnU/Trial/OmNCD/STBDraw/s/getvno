        GET     h.regdefs
        GET     h.swinos
        GET     h.macros
;
        PREAMBLE

        STARTCODE  getvno
        STMFD   sp!, {r1-r3, lr}
        MOV     r1, r0                          ; name pointer
        MOV     r0, #18
        SWI     XOS_Bit + SWI_OS_Module
        MOVVS   r0, #0                         ; module handler will build a nice error
        LDMVSFD r13!, {r1-r3, pc}
        LDR     r0, [r13]                     ; now find version number
01
        LDRB    r2, [r0], #1
        CMP     r2, #" "
        BNE     %BT01
;        B      RMEGetVerNo
; *************************************************************************
;
;       RMEGetVerNo - Read version number from a string
;
; in:   R0 -> string
;
; out:  R0, R4, R3, R2 corrupted
;       R0 = version number in BCD with the decimal point between bits 15 and 16
;            eg "2.34" => &00023400, "5.6789" => &00056789, "17" => &00170000
;            only the last 4 digits of the integer part, and the first 4 decimal places are stored
;

RMEGetVerNo
        MOV     r1, #0
10
        LDRB    r2, [r0], #1
        CMP     r2, #" "
        BEQ     %BT10
11
        SUB     r2, r2, #"0"
        CMP     r2, #9
        ORRLS   r1, r2, r1, LSL #4             ; just keep nibbles - we only need the
        LDRLSB  r2, [r0], #1                   ; result to be ordered, not continous
        BLS     %BT11
        MOV     r3, #0
        CMP     r2, #"."-"0"
        BNE     %FT13
        MOV     r4, #16
12
        SUBS    r4, r4, #4
        BMI     %FT13
        LDRB    r2, [r0], #1
        SUB     r2, r2, #"0"
        CMP     r2, #9
        ORRLS   r3, r3, r2, LSL r4
        BLS     %BT12
13
        ORR     r0, r3, r1, LSL #16
        LDMFD   sp!, {r1-r3, pc}

        END
