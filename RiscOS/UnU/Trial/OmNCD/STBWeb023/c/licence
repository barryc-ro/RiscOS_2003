/* -*-c-*- */

#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#include "os.h"
#include "licence.h"
#include "Serial.h"
#include "version.h"

#ifndef BORRIS
#define BORRIS 0
#endif

#if BORRIS
#ifdef STBWEB_ROM
#undef STBWEB_ROM
#endif
#define STBWEB_ROM 1
#endif

#ifndef STBWEB_ROM
#define STBWEB_ROM 0
#endif

#if STBWEB_ROM
static char *key_string = "jhNvvXM&tHf7bxzv:Acorn Network Computer ROM"; /* This is OK */
#elif DEVELOPMENT
/*                         0123456789012345678901234567 89012345678901234567 89 */
static char *key_string = "ANT Ltd. Internal use only.\0   jcW7Hs7hpIMbq&pB\0"; /* This is OK */
#else /* installable */
static char *key_string = "MARK twain STNG c   0   4   8   c   0   4   8   ";
#endif

typedef struct {
    unsigned char day;
    unsigned char month;
    unsigned char year;
    unsigned char munge;
} timeout_block;

#if TIMEOUT
static timeout_block tob = { (TIMEOUT_DAY ^ TIMEOUT_MUNGE),
			     ((TIMEOUT_MONTH - 1) ^ TIMEOUT_MUNGE),
			     ((TIMEOUT_YEAR - 1900) ^ TIMEOUT_MUNGE),
			     TIMEOUT_MUNGE };
#endif

char *licensee_name;
char *licensee_string;

extern os_error *licence_init(void)
{
    char buffer[48];
#if TIMEOUT
    time_t tt;
    struct tm *tmp;

    tt = time(NULL);
    tmp = localtime(&tt);

    tob.day ^= tob.munge;
    tob.month ^= tob.munge;
    tob.year ^= tob.munge;

#if 0
    fprintf(stderr, "Time out date is %d-%d-%d, date now is %d-%d-%d\n",
	    tob.day, tob.month, tob.year,
	    tmp->tm_mday, tmp->tm_mon, tmp->tm_year );
#endif

    if ( (tob.year <  tmp->tm_year) ||
	((tob.year == tmp->tm_year) && ( (tob.month <  tmp->tm_mon) ||
					((tob.month == tmp->tm_mon) && (tob.day < tmp->tm_mday)) )) )
    {
	os_error *ep = (os_error *) &key_string;
	strcpy(ep->errmess, "This version has timed out.");
	ep->errnum = 0;
	return ep;
    }
#endif /* TIMEOUT */

#if !DEVELOPMENT && !STBWEB_ROM
    if (VerifySerial(key_string) == 0)
    {
	os_error *ep = (os_error *) &key_string;
	strcpy(ep->errmess, "Licence error.  Please contact your supplier.");
	ep->errnum = 0;
	return ep;
    }
#endif
    /* Initally we have up to 30 chars, a NULL chars and another NULL.
       We turn this into 16 chars, a colon, up to 30 chars and a NULL. */
#if !STBWEB_ROM
    memcpy(buffer, key_string, 48);
    strcpy(key_string, buffer + 31);
    strcat(key_string, ":");
    strcat(key_string, buffer);
#endif
    licensee_name = key_string + 17;
    licensee_string = key_string;

    return NULL;
}
