%!PS-Adobe-2.0 EPSF-1.2
%%Creator: Adobe Illustrator 88(TM) 1.8.3
%%For: (The Boys) (Studio AB)
%%Title: (Fashion\251)
%%CreationDate: (9/3/90) (4:50 PM)
%%DocumentProcSets: Adobe_packedarray 0 0
%%DocumentSuppliedProcSets: Adobe_packedarray 0 0
%%DocumentProcSets: Adobe_cmykcolor 0 0
%%DocumentSuppliedProcSets: Adobe_cmykcolor 0 0
%%DocumentProcSets: Adobe_cshow 0 0
%%DocumentSuppliedProcSets: Adobe_cshow 0 0
%%DocumentProcSets: Adobe_customcolor 0 0
%%DocumentSuppliedProcSets: Adobe_customcolor 0 0
%%DocumentProcSets: Adobe_pattern 0 0
%%DocumentSuppliedProcSets: Adobe_pattern 0 0
%%DocumentProcSets: Adobe_Illustrator88 0 0
%%DocumentSuppliedProcSets: Adobe_Illustrator88 0 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: StoneSans
%%+ Helvetica
%%BoundingBox:60 92 518 673
%%BoundingBox:6 92 518 673
%%TemplateBox:288 360 288 360
%%TileBox:-552 698 0 1428
%%EndComments
%%BeginProcSet: Adobe_packedarray 0 0
% packedarray Operators
% Version 1.0 5/9/1988
% Copyright (C) 1987, 1988
% Adobe Systems Incorporated
% All Rights Reserved
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndProcSet
Adobe_packedarray /initialize get exec

%%BeginProcSet: Adobe_cmykcolor 0 0
% cmykcolor Operators
% Version 1.1 1/23/1989
% Copyright (C) 1987, 1988, 1989
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndProcSet

%%BeginProcSet: Adobe_cshow 0 0
% cshow Operator
% Version 1.1 1/23/1989
% Copyright (C) 1987, 1988, 1989
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndProcSet

%%BeginProcSet: Adobe_customcolor 0 0
% Custom Color Operators
% Version 1.0 5/9/1988
% Copyright (C) 1987, 1988
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndProcSet

%%BeginProcSet: Adobe_pattern 0 0
% Pattern Operators
% Version 1.9 1/23/1989
% Copyright (C) 1987, 1988, 1989
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_pattern 14 dict dup begin put
/initialize			% - initialize -
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern begin
	Adobe_pattern
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_pattern eq
	{
	end
	} if
} def
errordict
/nocurrentpoint		% operator nocurrentpoint -
{
pop
stop
} put
errordict
/invalidaccess		% operator invalidaccess -
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern		% width height matrix procarray key cache uniform definepattern font
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar		% dict char BuildChar -
	{
	exch
	begin
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
	end
	end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize	% - patterncachesize bits
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit	% - patterncachelimit bits
{
cachestatus 7 1 roll pop pop pop pop pop pop 8 mul
} def
/patternpath		% index font matrix patternpath -
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	pop pop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{pop pop}
			{pop pop pop true}
			{pop pop pop pop pop pop pop true}
			{pop true}
			pathforall
			} stopped
			{
			pop pop pop pop pop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		pop pop
		}
		{
		pop pop pop pop
		} ifelse
	} if
end
} def
/patternclip		% - patternclip -
{
clip
} def
/patternstrokepath	% - patternstrokepath -
{
strokepath
} def
/patternmatrix		% - patternmatrix matrix
matrix def
/patternfill		% index font patternfill -
					% index font matrix patternfill -
{
dup type /dicttype eq
	{
	Adobe_pattern /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern /patternpath get exec
grestore
newpath
} def
/patternstroke		% index font patternstroke -
					% index font matrix patternstroke -
{
dup type /dicttype eq
	{
	Adobe_pattern /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern /patternfill get exec
			} pathforall
		pop pop	pop
		} stopped
			{
			pop pop pop pop pop
			patternclip
			Adobe_pattern /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow		% index font ax ay string patternashow -
					% index font matrix ax ay string patternashow -
{
3 index type /dicttype eq
	{
	Adobe_pattern /patternmatrix get 4 1 roll
	} if
	{
	pop pop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	6 index 6 index 6 index
	Adobe_pattern /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
pop pop pop pop pop
} def
/patternashowstroke	% index font ax ay string matrix patternashowstroke
					% index font matrix ax ay string matrix patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	pop pop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
pop pop pop pop pop pop
} def
currentdict readonly pop end
setpacking
%%EndProcSet

%%BeginProcSet: Adobe_Illustrator88 0 0
% Adobe Illustrator (TM) Prolog
% Version 1.19 1/23/1989
% Copyright (C) 1987, 1988, 1989
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_Illustrator88 73 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_Illustrator88_vars 31 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
% text operands
/_a null def
/_as null def
/_tt 2 array def
/_tl 2 array def
/_tm matrix def
/t {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
% pattern operands
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator88 begin
Adobe_Illustrator88 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator88 begin
Adobe_Illustrator88_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_Illustrator88_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay length string sw x y
{
stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/ss					% ax ay length string matrix ss -
{
3 -1 roll pop
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
% path operators
/sp					% ax ay length string sp -
{
exch pop
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
% path construction operators
/pl					% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
{
pop true setstrokeadjust
/c				% x1 y1 x2 y2 x3 y3 c -
{
curveto
} def
/C
/c load def
/v				% x2 y2 x3 y3 v -
{
currentpoint 6 2 roll curveto
} def
/V
/v load def
/y				% x1 y1 x2 y2 y -
{
2 copy curveto
} def
/Y
/y load def
/l				% x y l -
{
lineto
} def
/L
/l load def
/m				% x y m -
{
moveto
} def
}
{
/c
{
pl curveto
} def
/C
/c load def
/v
{
currentpoint 6 2 roll pl curveto
} def
/V
/v load def
/y
{
pl 2 copy curveto
} def
/Y
/y load def
/l
{
pl lineto
} def
/L
/l load def
/m
{
pl moveto
} def
} ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf					% - cf flatness
currentflat def
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
newpath
} def
/n					% - n -
/N load def
/F					% - F -
{
_pf
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_ps
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
gsave F grestore
S
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
clip
} def
% text painting operators
/ta					% length string ta ax ay length string
{
_as moveto
_tt aload pop 4 -2 roll
} def
/tl					% - tl -
{
_tl aload pop translate
} def
/as					% - as array
{
{
0 0
}
{
2 copy _tt aload pop 4 -2 roll sw
exch neg 2 div exch neg 2 div
}
{
2 copy _tt aload pop 4 -2 roll sw
exch neg exch neg
}
{
0 0
}
} cvlit def
/z					% literal size leading tracking align z -
{
/_a exch ddef
/_as as _a get ddef
_a 2 le
	{
	0 _tt astore pop
	0 exch neg _tl astore pop
	}
	{
	0 exch neg _tt astore pop
	neg 0 _tl astore pop
	} ifelse
exch findfont exch scalefont setfont
} def
/tm					% matrix tm -
{
_tm currentmatrix pop
concat
} def
/I					% matrix I -
{
tm
/t
	{
	ta sp
	tl
	} ddef
} def
/o					% matrix o -
{
tm
/t
	{
	ta 4 npop
	tl
	newpath
	} ddef
} def
/e					% matrix e -
{
tm
/t
	{
	ta _psf
	tl
	newpath
	} ddef
} def
/r					% matrix r -
{
tm
/t
	{
	ta _tm _pss
	tl
	newpath
	} ddef
} def
/a					% matrix a -
{
tm
/t
	{
	2 copy
	ta _psf
	newpath
	ta _tm _pss
	tl
	newpath
	} ddef
} def
/T					% - T -
{
_tm setmatrix
} def
% font operators
/Z					% array literal literal direction Z -
{
pop
findfont begin
currentdict dup length 1 add dict begin
	{
	1 index /FID ne
		{
		def
		}
		{
		2 npop
		} ifelse
	} forall
/FontName exch def dup length 0 ne
	{
	/Encoding Encoding 256 array copy def
	0 exch
		{
		dup type /nametype eq
			{
			Encoding 2 index 2 index put pop
			1 add
			}
			{
			exch pop
			} ifelse
		} forall
	} if pop
currentdict dup end end
/FontName get exch definefont pop
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
gsave
} def
/Q					% - Q -
{
grestore
} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% pattern operators
/@					% - @ -
{} def
/&					% - & -
{} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
exch pop
ashow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
exch pop
ashow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
exch pop
ashow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_lp /none ddef
} def
% pattern operators
/dp					% width height matrix proc key cache uniform dp [index key]
					% null dp -
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E					% name llx lly urx ury desc E -
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p					% name px py sx sy a rf r k ka matrix p -
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne 
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			10 copy 6 npop exch pop patternashow
			}
			{
			pop
			7 copy 3 npop exch pop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
4 npop newpath
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P					% name px py sx sy a rf r k ka matrix P -
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			11 copy 6 npop 3 -1 roll pop patternashowstroke
			}
			{
			pop
			8 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
5 npop newpath
} ddef
/_lp /none ddef
} def
% locked object operators
/A					% value A -
{
pop
} def
% null color operators
/nc 3 dict def
nc begin
/setgray			% gray setgray -
{
pop
} bind def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
4 npop
} bind def
/setcustomcolor		% object tint setcustomcolor -
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
%%EndProcSet

%%EndProlog
%%BeginSetup

Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern /initialize get exec
Adobe_Illustrator88 /initialize get exec
%%BeginEncoding: _StoneSans StoneSans
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
]/_StoneSans/StoneSans 0 Z
%%EndEncoding
%%BeginEncoding: _Helvetica Helvetica
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
]/_Helvetica/Helvetica 0 Z
%%EndEncoding
%%BeginPattern: (checks with diamonds)
(checks with diamonds) 144.805 495.055 166.945 517.195 [
(0 O 0 R 0.15 0.7 0.7 0 k 0.15 0.7 0.7 0 K) @
_ &
(0 O 0 R 0.05 0.1 0.05 0 k 0.05 0.1 0.05 0 K) @
(
0 i 0 J 0 j 3.051 w 10 M []0 d
%%Note:
142.32 497.57 m
147.666 492.221 l
S
142.39 519.64 m
169.807 492.221 l
S
164.272 519.897 m
169.584 514.584 l
S
169.71 508.539 m
153.393 492.221 l
S
158.515 519.485 m
142.016 502.983 l
S
) &
(0 O 0 R 1 0.1 0.4 0 k 1 0.1 0.4 0 K) @
(
0 i 0 J 0 j 0.38 w 10 M []0 d
%%Note:
151.98 511.5 m
150.529 512.95 L
149.079 511.5 L
150.529 510.048 L
151.98 511.5 L
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.38 w 10 M []0 d
%%Note:
151.98 511.5 m
150.529 512.95 L
149.079 511.5 L
150.529 510.048 L
151.98 511.5 L
s
) &
(0 O 0 R 1 0.1 0.4 0 k 1 0.1 0.4 0 K) @
(
0 i 0 J 0 j 0.38 w 10 M []0 d
%%Note:
163.113 500.367 m
161.661 501.817 L
160.211 500.367 L
161.661 498.917 L
163.113 500.367 L
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.38 w 10 M []0 d
%%Note:
163.113 500.367 m
161.661 501.817 L
160.211 500.367 L
161.661 498.917 L
163.113 500.367 L
s
) &
] E
%%EndPattern
%%BeginPattern: (diamond with seeds)
(diamond with seeds) 131.431 537.032 165.851 571.452 [
(0 O 0 R 1 0.4 0.8 0 k 1 0.4 0.8 0 K) @
_ &
(0 O 0 R 0.4 0 0.3 0 k 0.4 0 0.3 0 K) @
(
0 i 1 J 0 j 2.431 w 6 M []0 d
%%Note:
165.844 554.239 m
148.638 571.444 L
131.431 554.239 L
148.638 537.032 L
165.844 554.239 L
f
) &
(0 O 0 R 0.7 0.03 0.5 0 k 0.7 0.03 0.5 0 K) @
(
0 i 1 J 0 j 2.431 w 6 M []0 d
%%Note:
165.844 554.239 m
148.638 571.444 L
131.431 554.239 L
148.638 537.032 L
165.844 554.239 L
s
) &
(0 O 0 R 0 0.5 0.6 0 k 0 0.5 0.6 0 K) @
(
0 i 1 J 0 j 2.431 w 6 M []0 d
%%Note:
148.557 556.387 m
149.112 556.387 149.561 557.286 149.561 558.396 c
149.561 559.503 149.112 560.402 148.557 560.402 c
148.002 560.402 147.553 559.503 147.553 558.396 c
147.553 557.286 148.002 556.387 148.557 556.387 c
f
146.609 554.239 m
146.609 554.792 145.711 555.241 144.604 555.241 c
143.493 555.241 142.595 554.792 142.595 554.239 c
142.595 553.684 143.493 553.233 144.604 553.233 c
145.711 553.233 146.609 553.684 146.609 554.239 c
f
148.76 552.291 m
148.205 552.291 147.757 551.392 147.757 550.284 c
147.757 549.176 148.205 548.277 148.76 548.277 c
149.314 548.277 149.764 549.176 149.764 550.284 c
149.764 551.392 149.314 552.291 148.76 552.291 c
f
150.706 554.441 m
150.706 553.887 151.606 553.437 152.713 553.437 c
153.823 553.437 154.721 553.887 154.721 554.441 c
154.721 554.995 153.823 555.445 152.713 555.445 c
151.606 555.445 150.706 554.995 150.706 554.441 c
f
) &
] E
%%EndPattern
%%BeginPattern: (purple houndstooth)
(purple houndstooth) 193.5 496 215.5 524 [
(0 O 0 R 0.6 0.5 0 0 k 0.6 0.5 0 0 K) @
_ &
(0 O 0 R 0.8 1 0 0 k 0.8 1 0 0 K) @
(
0 i 0 J 0 j 0.959 w 10 M []0 d
%%Note:
199.055 516.609 m
200.178 518.47 203.405 517.794 204.828 516.734 c
206.249 515.674 209.004 514.61 210.05 516.609 C
212.375 515.375 211.081 512.335 209.875 509.75 c
208.125 506 208 503.375 210.044 502.61 C
208.998 500.611 206.243 501.675 204.822 502.734 c
203.399 503.795 200.172 504.471 199.049 502.609 C
197.145 503.401 197.197 505.819 199 509.875 c
200.02 512.171 201.5 515.625 199.055 516.609 C
f
216.25 494.25 m
215.443 492.637 208.197 491.819 210 495.875 c
211.02 498.171 212.5 501.625 210.055 502.609 C
211.178 504.47 214.405 503.794 215.828 502.734 c
217.249 501.674 217 495.75 216.25 494.25 c
f
192.25 495.125 m
189 500.5 192.405 503.794 193.828 502.734 c
195.249 501.674 198.004 500.61 199.05 502.609 C
201.375 501.375 200.081 498.335 198.875 495.75 c
197.125 492 193.362 493.284 192.25 495.125 c
f
191.25 524.625 m
189.711 521.974 192.399 517.795 193.822 516.734 c
195.243 515.675 197.998 514.611 199.044 516.61 C
197 517.375 197.125 520 198.875 523.75 c
200.081 526.335 193.5 528.5 191.25 524.625 c
f
217.375 524.625 m
215.761 527.851 211.02 526.171 210 523.875 c
208.197 519.819 208.145 517.401 210.049 516.609 C
211.172 518.471 214.399 517.795 215.822 516.734 c
217.243 515.675 219.75 519.875 217.375 524.625 c
f
) &
] E
%%EndPattern
%%BeginPattern: (trefoil strip)
(trefoil strip) 191.925 537.576 231.075 563.536 [
(0 O 0 R 0.8 0.2 0.4 0.3 k 0.8 0.2 0.4 0.3 K) @
_ &
(0 O 0 R 0.05 0.05 0.05 0.3 k 0.05 0.05 0.05 0.3 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
198.274 536.699 m
198.274 564.301 l
195.03 564.301 l
195.03 536.699 l
198.274 536.699 l
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
198.274 536.699 m
198.274 564.301 l
195.03 564.301 l
195.03 536.699 l
198.274 536.699 l
s
) &
(0 O 0 R 0.05 0.05 0.05 0.3 k 0.05 0.05 0.05 0.3 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
227.475 536.699 m
227.475 564.301 l
224.231 564.301 l
224.231 536.699 l
227.475 536.699 l
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
227.475 536.699 m
227.475 564.301 l
224.231 564.301 l
224.231 536.699 l
227.475 536.699 l
s
) &
(0 O 0 R 0.2 0.75 0.4 0.3 k 0.2 0.75 0.4 0.3 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
224.231 536.699 m
224.231 564.301 L
198.274 564.301 L
198.274 536.699 L
224.231 536.699 L
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
224.231 536.699 m
224.231 564.301 L
198.274 564.301 L
198.274 536.699 L
224.231 536.699 L
s
) &
(0 O 0 R 0.05 0.05 0.05 0 k 0.05 0.05 0.05 0 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 538.218 m
218.315 538.218 223.839 543.742 223.839 550.556 c
223.839 557.371 218.315 562.894 211.5 562.894 c
204.688 562.894 199.162 557.371 199.162 550.556 c
199.162 543.742 204.688 538.218 211.5 538.218 c
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 538.218 m
218.315 538.218 223.839 543.742 223.839 550.556 c
223.839 557.371 218.315 562.894 211.5 562.894 c
204.688 562.894 199.162 557.371 199.162 550.556 c
199.162 543.742 204.688 538.218 211.5 538.218 c
s
) &
(0 O 0 R 0.8 0.2 0.4 0 k 0.8 0.2 0.4 0 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 539.429 m
217.646 539.429 222.627 544.41 222.627 550.556 c
222.627 556.702 217.646 561.684 211.5 561.684 c
205.355 561.684 200.373 556.702 200.373 550.556 c
200.373 544.41 205.355 539.429 211.5 539.429 c
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 539.429 m
217.646 539.429 222.627 544.41 222.627 550.556 c
222.627 556.702 217.646 561.684 211.5 561.684 c
205.355 561.684 200.373 556.702 200.373 550.556 c
200.373 544.41 205.355 539.429 211.5 539.429 c
s
) &
(0 O 0 R 0.05 0.05 0.05 0 k 0.05 0.05 0.05 0 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 561.686 m
211.498 561.692 L
214.91 561.692 217.675 558.927 217.675 555.515 c
217.675 555 217.612 554.499 217.494 554.022 C
217.491 554.021 L
217.966 553.884 218.432 553.689 218.878 553.432 c
221.834 551.726 222.847 547.947 221.141 544.992 C
221.146 544.992 L
219.442 542.035 215.662 541.023 212.708 542.729 c
212.261 542.986 211.859 543.291 211.506 543.633 C
211.506 543.634 L
211.15 543.293 210.748 542.987 210.302 542.729 c
207.347 541.023 203.567 542.035 201.861 544.992 C
201.857 544.984 L
200.153 547.94 201.165 551.719 204.119 553.425 c
204.564 553.681 205.029 553.877 205.502 554.013 C
205.504 554.012 L
205.385 554.491 205.323 554.991 205.323 555.508 c
205.323 558.92 208.087 561.686 211.5 561.686 C
F
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 561.686 m
211.498 561.692 L
214.91 561.692 217.675 558.927 217.675 555.515 c
217.675 555 217.612 554.499 217.494 554.022 C
217.491 554.021 L
217.966 553.884 218.432 553.689 218.878 553.432 c
221.834 551.726 222.847 547.947 221.141 544.992 C
221.146 544.992 L
219.442 542.035 215.662 541.023 212.708 542.729 c
212.261 542.986 211.859 543.291 211.506 543.633 C
211.506 543.634 L
211.15 543.293 210.748 542.987 210.302 542.729 c
207.347 541.023 203.567 542.035 201.861 544.992 C
201.857 544.984 L
200.153 547.94 201.165 551.719 204.119 553.425 c
204.564 553.681 205.029 553.877 205.502 554.013 C
205.504 554.012 L
205.385 554.491 205.323 554.991 205.323 555.508 c
205.323 558.92 208.087 561.686 211.5 561.686 C
S
) &
(0 O 0 R 0.8 0.2 0.4 0 k 0.8 0.2 0.4 0 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
220.175 545.547 m
221.711 548.207 220.209 551.31 217.551 552.846 c
217.148 553.078 216.728 553.254 216.302 553.377 C
216.303 553.378 L
216.411 553.809 216.467 554.258 216.467 554.721 c
216.467 557.792 214.567 560.579 211.498 560.579 C
211.5 560.573 L
211.5 560.572 L
208.429 560.572 206.493 557.721 206.493 554.65 c
206.493 554.186 206.549 553.735 206.657 553.305 C
206.655 553.306 L
206.229 553.182 205.811 553.007 205.41 552.775 c
202.75 551.241 201.286 548.201 202.821 545.541 C
202.825 545.547 l
204.362 542.888 207.8 542.636 210.46 544.172 c
210.861 544.404 211.223 544.678 211.542 544.987 C
211.542 544.985 L
211.861 544.677 212.224 544.403 212.625 544.172 c
215.285 542.636 218.648 542.887 220.183 545.547 C
220.175 545.547 l
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
220.175 545.547 m
221.711 548.207 220.209 551.31 217.551 552.846 c
217.148 553.078 216.728 553.254 216.302 553.377 C
216.303 553.378 L
216.411 553.809 216.467 554.258 216.467 554.721 c
216.467 557.792 214.567 560.579 211.498 560.579 C
211.5 560.573 L
211.5 560.572 L
208.429 560.572 206.493 557.721 206.493 554.65 c
206.493 554.186 206.549 553.735 206.657 553.305 C
206.655 553.306 L
206.229 553.182 205.811 553.007 205.41 552.775 c
202.75 551.241 201.286 548.201 202.821 545.541 C
202.825 545.547 l
204.362 542.888 207.8 542.636 210.46 544.172 c
210.861 544.404 211.223 544.678 211.542 544.987 C
211.542 544.985 L
211.861 544.677 212.224 544.403 212.625 544.172 c
215.285 542.636 218.648 542.887 220.183 545.547 C
220.175 545.547 l
s
) &
(0 O 0 R 0.05 0.05 0.05 0 k 0.05 0.05 0.05 0 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 555.561 m
212.16 555.561 212.694 556.097 212.694 556.756 c
212.694 557.415 212.16 557.951 211.5 557.951 c
210.841 557.951 210.307 557.415 210.307 556.756 c
210.307 556.097 210.841 555.561 211.5 555.561 c
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 555.561 m
212.16 555.561 212.694 556.097 212.694 556.756 c
212.694 557.415 212.16 557.951 211.5 557.951 c
210.841 557.951 210.307 557.415 210.307 556.756 c
210.307 556.097 210.841 555.561 211.5 555.561 c
s
) &
(0 O 0 R 0.05 0.05 0.05 0 k 0.05 0.05 0.05 0 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 548.726 m
212.511 548.726 213.331 549.545 213.331 550.556 c
213.331 551.567 212.511 552.387 211.5 552.387 c
210.489 552.387 209.67 551.567 209.67 550.556 c
209.67 549.545 210.489 548.726 211.5 548.726 c
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
211.5 548.726 m
212.511 548.726 213.331 549.545 213.331 550.556 c
213.331 551.567 212.511 552.387 211.5 552.387 c
210.489 552.387 209.67 551.567 209.67 550.556 c
209.67 549.545 210.489 548.726 211.5 548.726 c
s
) &
(0 O 0 R 0.05 0.05 0.05 0 k 0.05 0.05 0.05 0 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
207.166 548.053 m
206.836 548.625 206.105 548.822 205.534 548.49 c
204.964 548.161 204.767 547.43 205.098 546.859 c
205.428 546.288 206.157 546.092 206.729 546.422 c
207.3 546.752 207.496 547.481 207.166 548.053 c
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
207.166 548.053 m
206.836 548.625 206.105 548.822 205.534 548.49 c
204.964 548.161 204.767 547.43 205.098 546.859 c
205.428 546.288 206.157 546.092 206.729 546.422 c
207.3 546.752 207.496 547.481 207.166 548.053 c
s
) &
(0 O 0 R 0.05 0.05 0.05 0 k 0.05 0.05 0.05 0 K) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
215.835 548.052 m
215.506 547.481 215.701 546.752 216.273 546.422 c
216.844 546.092 217.574 546.288 217.904 546.859 c
218.234 547.43 218.038 548.161 217.465 548.49 c
216.895 548.822 216.165 548.625 215.835 548.052 c
f
) &
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 0.268 w 10 M []0 d
%%Note:
215.835 548.052 m
215.506 547.481 215.701 546.752 216.273 546.422 c
216.844 546.092 217.574 546.288 217.904 546.859 c
218.234 547.43 218.038 548.161 217.465 548.49 c
216.895 548.822 216.165 548.625 215.835 548.052 c
s
) &
] E
%%EndPattern
%%EndSetup
0 A
0 O
0 g
0 i 0 J 0 j 1 w 10 M []0 d
%%Note:
/_Helvetica 7.26 8.098 0 0 z
[1.074 0 0 1.074 69.82 103.029]e
118 (Copyright' 1987 Adobe Systems Incorporated, 1585 Charleston Road P. O. Box 7900, Mountain View, California 94039-7900.)t
87 (Adobe Illustrator 88 is a trademark of Adobe Systems Incorporated. All rights reserved.)t
T
0.99 w
/_StoneSans 6.298 5.998 0 0 z
[0 0.99 -0.99 0 508.678 113.349]e
34 (Jim Charles / Luanne Seymour Cohen)t
T
q
0 R
0 G
2.8 w
500.019 114.831 m
500.019 644.738 L
69.82 644.738 L
69.82 114.831 L
500.019 114.831 L
h
W
s
u
0 O
(diamond with seeds) 215.9943 -873.9998 1 1 0 0 0 0 0 [1 0 0 1 -216 864] p
3.843 w
42.43 431.264 m
500.019 431.264 L
500.019 644.677 L
42.43 644.677 L
42.43 431.264 L
f
U
0 R
0 G
1 J 1 j 3.84 w
442.338 104.736 m
408.692 172.51 L
S
269.781 96.805 m
282.759 172.51 L
S
218.352 172.51 m
181.34 96.805 L
S
65.021 108.341 m
143.369 172.51 L
S
0 O
(trefoil strip) 212.0041 -857.0679 1 1 0 0 0 0 0 [1 0 0 1 -216 864] p
3.843 w
501.019 190.239 m
501.019 415.359 L
45.39 415.359 L
45.352 190.239 L
501.019 190.239 L
f
0.5 g
0 R
0 G
501.94 410.918 m
501.94 437.834 L
44.352 437.834 L
44.352 410.918 L
501.94 410.918 L
b
501.94 172.51 m
501.94 199.426 L
44.352 199.426 L
44.352 172.51 L
501.94 172.51 L
b
(purple houndstooth) 208.1376 -867.2228 1 1 -31.4 0 0 0 0 [1 0 0 1 -216 864] p
3.84 w
335.821 206.948 m
356.614 156.45 382.36 100.011 Y
438.798 100.011 l
408.104 230.712 l
335.821 206.948 L
b
(purple houndstooth) 219.8355 -860.7828 1 1 -31.4 0 0 0 0 [1 0 0 1 -216 864] p
335.967 209.876 m
311.042 162.463 276.474 104.962 Y
351.726 101.001 L
400.243 168.333 420.045 215.861 v
446.887 280.282 455 311.921 416.086 362.404 C
411.136 368.344 L
399.253 350.523 328.457 324.778 306.674 322.797 C
298.752 291.111 335.967 209.876 Y
B
3.843 w
360.085 271.178 m
373.948 266.229 276.912 104.831 Y
S
u
q
0 O
0 g
0.5 G
0 J 0 j 11.533 w
155.568 510.708 m
155.568 613.743 L
65.443 613.743 L
65.443 510.708 L
155.568 510.708 L
h
W
b
u
u
1 0.8 0 0 k
0 G
0.19 w
98.858 551.34 m
100.395 546.494 101.933 527.438 98.471 520.763 C
91.743 521.623 93.473 521.193 89.628 520.117 C
87.705 522.377 86.169 545.525 89.244 551.77 C
95.204 550.262 93.089 550.154 98.858 551.34 C
b
160.883 569.056 m
156.039 567.516 136.98 565.979 130.305 569.44 C
131.167 576.169 130.737 574.439 129.659 578.285 C
131.92 580.206 155.07 581.744 161.312 578.669 C
159.806 572.708 159.698 574.824 160.883 569.056 C
b
102.559 506.356 m
101.02 511.201 99.482 530.257 102.944 536.933 C
109.671 536.072 107.942 536.503 111.786 537.58 C
113.709 535.318 115.247 512.17 112.172 505.924 C
106.211 507.434 108.327 507.539 102.559 506.356 C
b
100.32 510.415 m
95.475 508.876 76.417 507.338 69.743 510.799 C
70.604 517.529 70.172 515.798 69.096 519.642 C
71.358 521.566 94.506 523.104 100.752 520.028 C
99.243 514.068 99.136 516.182 100.32 510.415 C
b
75.882 565.279 m
74.344 560.433 72.806 541.378 76.266 534.7 C
82.994 535.564 81.265 535.132 85.11 534.055 C
87.032 536.317 88.571 559.464 85.494 565.708 C
79.535 564.202 81.649 564.093 75.882 565.279 C
b
87.534 533.824 m
82.689 535.36 63.633 536.899 56.957 533.44 C
57.819 526.708 57.388 528.44 56.311 524.594 C
58.572 522.671 81.72 521.134 87.966 524.21 C
86.458 530.17 86.35 528.054 87.534 533.824 C
b
132.841 535.676 m
131.302 540.521 129.764 559.578 133.224 566.253 C
139.953 565.393 138.223 565.824 142.068 566.9 C
143.991 564.638 145.528 541.491 142.453 535.247 C
136.493 536.753 138.606 536.861 132.841 535.676 C
b
130.6 539.734 m
125.756 538.197 106.699 536.659 100.023 540.119 C
100.885 546.85 100.455 545.119 99.378 548.964 C
101.639 550.887 124.786 552.424 131.032 549.347 C
129.526 543.388 129.417 545.503 130.6 539.734 C
b
144.972 525.313 m
140.128 523.775 121.072 522.24 114.396 525.699 C
115.257 532.428 114.827 530.698 113.751 534.543 C
116.01 536.467 139.16 538.003 145.403 534.927 C
143.897 528.967 143.788 531.082 144.972 525.313 C
b
129.14 580.66 m
130.676 575.814 132.214 556.758 128.754 550.082 C
122.024 550.944 123.755 550.513 119.91 549.437 C
117.986 551.698 116.45 574.844 119.525 581.09 C
125.486 579.583 123.371 579.475 129.14 580.66 C
b
106.164 594.599 m
104.626 589.754 103.087 570.698 106.548 564.023 C
113.276 564.883 111.547 564.453 115.392 563.376 C
117.314 565.637 118.853 588.785 115.776 595.028 C
109.816 593.521 111.931 593.415 106.164 594.599 C
b
117.815 563.144 m
112.971 564.681 93.914 566.218 87.239 562.759 C
88.1 556.029 87.669 557.76 86.592 553.914 C
88.853 551.991 112.002 550.454 118.245 553.529 C
116.739 559.49 116.631 557.376 117.815 563.144 C
b
163.121 564.996 m
161.583 569.841 160.045 588.897 163.506 595.575 C
170.236 594.713 168.505 595.144 172.349 596.22 C
174.272 593.96 175.811 570.81 172.734 564.566 C
166.774 566.073 168.889 566.182 163.121 564.996 C
b
175.253 554.636 m
170.41 553.098 151.353 551.559 144.678 555.021 C
145.538 561.748 145.108 560.019 144.032 563.864 C
146.292 565.786 169.442 567.324 175.685 564.248 C
174.177 558.288 174.07 560.403 175.253 554.636 C
b
159.42 609.98 m
160.958 605.135 162.496 586.078 159.036 579.403 C
152.306 580.263 154.037 579.834 150.191 578.757 C
148.27 581.017 146.731 604.166 149.806 610.411 C
155.767 608.902 153.653 608.796 159.42 609.98 C
b
136.445 623.919 m
134.906 619.074 133.368 600.018 136.829 593.342 C
143.558 594.204 141.828 593.772 145.673 592.696 C
147.595 594.958 149.135 618.104 146.058 624.351 C
140.098 622.842 142.212 622.735 136.445 623.919 C
b
148.097 592.464 m
143.253 594.001 124.196 595.541 117.521 592.079 C
118.381 585.349 117.951 587.08 116.874 583.234 C
119.135 581.313 142.284 579.774 148.529 582.851 C
147.019 588.811 146.913 586.695 148.097 592.464 C
b
U
u
0.959 w
94.243 550.585 m
86.362 540.787 100.588 535.728 102.125 541.757 c
103.663 547.786 92.512 548.862 91.166 544.341 c
89.82 539.818 101.741 530.238 98.665 528.299 c
95.589 526.361 88.858 526.361 88.474 531.421 c
88.09 536.481 105.394 539.818 96.742 529.053 c
93.722 525.294 93.281 525.285 91.936 521.086 c
S
130.951 573.67 m
140.75 581.552 143.872 570.977 137.843 569.44 c
131.813 567.901 130.09 575.977 134.612 577.323 c
139.135 578.669 150.547 569.247 152.486 572.324 c
154.423 575.401 155.176 579.054 150.116 579.438 c
145.055 579.823 145.736 559.154 155.285 571.554 c
156.468 573.093 156.791 573.67 160.452 575.977 c
S
107.173 507.11 m
115.055 516.908 100.829 521.967 99.29 515.939 c
97.751 509.91 108.904 508.832 110.248 513.355 c
111.594 517.877 99.675 527.459 102.75 529.397 c
105.827 531.335 112.556 531.335 112.94 526.275 c
113.325 521.214 96.022 517.877 104.674 528.643 c
107.693 532.402 108.135 532.411 109.48 536.611 c
S
70.389 515.029 m
80.187 522.912 83.309 512.337 77.279 510.799 c
71.249 509.261 69.526 517.336 74.049 518.683 c
78.57 520.028 89.984 510.606 91.921 513.684 c
93.859 516.76 94.613 520.412 89.554 520.796 c
84.492 521.182 85.171 500.513 94.721 512.914 c
95.907 514.452 96.229 515.029 99.889 517.336 c
S
80.495 564.525 m
88.379 554.728 74.152 549.667 72.614 555.696 c
71.075 561.726 82.226 562.802 83.571 558.28 c
84.917 553.759 72.998 544.176 76.075 542.239 c
79.15 540.3 85.878 540.3 86.264 545.361 c
86.648 550.42 69.344 553.759 77.997 542.992 c
81.017 539.233 81.458 539.223 82.803 535.024 c
S
87.105 526.901 m
85.596 528.632 83.246 532.027 81.829 532.669 c
74.184 536.13 74.83 522.479 79.89 522.863 c
84.95 523.248 84.197 526.901 82.258 529.978 c
80.321 533.054 75.368 524.978 70.846 526.324 c
66.324 527.67 69.02 536.003 74.291 530.555 c
82.474 522.095 59.54 521.278 60.725 530.17 c
61.802 538.245 73.827 530.567 63.201 527.478 c
58.572 526.132 57.279 527.862 y
S
137.454 536.43 m
145.337 546.227 131.11 551.288 129.571 545.259 c
128.035 539.229 139.183 538.152 140.529 542.674 c
141.876 547.196 129.956 556.779 133.033 558.716 c
136.109 560.655 142.837 560.655 143.221 555.594 c
143.607 550.535 126.303 547.196 134.955 557.963 c
137.975 561.722 138.416 561.733 139.76 565.931 c
S
100.67 544.349 m
110.467 552.232 113.591 541.658 107.56 540.119 c
101.531 538.581 99.808 546.657 104.331 548.003 c
108.852 549.347 120.266 539.927 122.205 543.003 c
124.141 546.08 124.895 549.734 119.835 550.117 c
114.774 550.501 115.455 529.833 125.003 542.235 c
126.187 543.772 126.51 544.349 130.17 546.657 c
S
144.541 532.236 m
143.036 530.506 140.686 527.111 139.267 526.467 c
131.623 523.008 132.27 536.658 137.33 536.273 c
142.389 535.89 141.635 532.236 139.697 529.16 c
137.759 526.083 132.807 534.159 128.284 532.813 c
123.763 531.467 126.459 523.134 131.73 528.583 c
139.914 537.042 116.978 537.861 118.165 528.967 c
119.24 520.893 131.267 528.571 120.641 531.659 c
116.01 533.005 114.72 531.275 y
S
124.525 579.905 m
116.641 570.108 130.869 565.047 132.407 571.077 c
133.945 577.107 122.794 578.184 121.448 573.662 c
120.102 569.139 132.022 559.557 128.947 557.619 c
125.87 555.681 119.14 555.681 118.756 560.741 c
118.371 565.8 135.675 569.139 127.024 558.373 c
124.005 554.614 123.562 554.605 122.217 550.406 c
S
110.778 593.845 m
118.66 584.047 104.433 578.987 102.895 585.016 c
101.357 591.045 112.507 592.122 113.853 587.6 c
115.199 583.078 103.28 573.497 106.356 571.559 c
109.431 569.621 116.16 569.621 116.546 574.681 c
116.93 579.741 99.627 583.078 108.278 572.313 c
111.298 568.553 111.738 568.543 113.084 564.345 c
S
117.384 556.221 m
115.878 557.953 113.527 561.347 112.11 561.991 c
104.464 565.45 105.111 551.798 110.171 552.185 c
115.233 552.568 114.479 556.221 112.54 559.298 c
110.603 562.375 105.65 554.299 101.128 555.645 c
96.605 556.991 99.302 565.324 104.573 559.874 c
112.756 551.415 89.82 550.598 91.007 559.49 c
92.083 567.565 104.108 559.887 93.483 556.798 c
88.853 555.452 87.561 557.183 y
S
167.735 565.75 m
175.619 575.547 161.392 580.607 159.853 574.58 c
158.316 568.55 169.466 567.473 170.813 571.995 c
172.158 576.516 160.24 586.1 163.313 588.038 c
166.39 589.975 173.119 589.975 173.503 584.915 c
173.888 579.854 156.586 576.516 165.237 587.285 c
168.257 591.041 168.696 591.052 170.042 595.251 c
S
174.823 561.556 m
173.317 559.826 170.967 556.431 169.548 555.788 c
161.903 552.328 162.55 565.979 167.611 565.594 c
172.671 565.209 171.919 561.556 169.98 558.479 c
168.042 555.406 163.088 563.478 158.567 562.133 c
154.045 560.787 156.741 552.454 162.012 557.902 c
170.195 566.363 147.259 567.18 148.446 558.288 c
149.522 550.214 161.548 557.891 150.922 560.98 c
146.292 562.325 145.001 560.595 y
S
154.806 609.226 m
146.923 599.427 161.149 594.368 162.689 600.397 c
164.227 606.426 153.076 607.504 151.729 602.981 c
150.383 598.458 162.303 588.878 159.229 586.939 c
156.151 585.002 149.422 585.002 149.038 590.062 c
148.654 595.123 165.957 598.458 157.305 587.694 c
154.286 583.934 153.844 583.925 152.498 579.726 c
S
141.06 623.165 m
148.942 613.368 134.715 608.309 133.176 614.337 c
131.638 620.365 142.789 621.443 144.135 616.92 c
145.481 612.399 133.561 602.816 136.636 600.879 c
139.714 598.94 146.442 598.94 146.827 604.001 c
147.211 609.061 129.909 612.399 138.56 601.633 c
141.58 597.874 142.019 597.865 143.366 593.665 c
S
147.665 585.542 m
146.159 587.272 143.811 590.668 142.391 591.31 c
134.747 594.771 135.393 581.121 140.453 581.505 c
145.514 581.89 144.76 585.542 142.821 588.618 c
140.884 591.694 135.932 583.619 131.409 584.964 c
126.886 586.311 129.584 594.644 134.854 589.195 c
143.038 580.736 120.102 579.919 121.288 588.811 c
122.366 596.885 134.39 589.207 123.765 586.119 c
119.135 584.773 117.843 586.504 y
S
U
U
Q
U
0 R
0.5 G
0 i 0 J 0 j 11.533 w 10 M []0 d
%%Note:
155.568 510.708 m
155.568 613.743 L
65.443 613.743 L
65.443 510.708 L
155.568 510.708 L
s
Q
0 O
0 g
0 R
1 G
0 i 1 J 1 j 0.5 w 10 M []0 d
%%Note:
237.796 215.725 m
236.763 224.966 L
136.583 224.966 L
135.551 215.725 L
237.796 215.725 L
b
133.652 244.994 m
134.281 166.553 l
141 166.553 l
147.719 244.994 l
133.652 244.994 l
b
146.732 241.132 m
146.732 237.143 l
137.495 220.975 l
119.912 220.975 l
116.973 237.143 l
119.754 241.132 l
146.732 241.132 l
f
0 R
1 G
239.695 244.994 m
239.064 166.553 l
232.346 166.553 l
225.627 244.994 l
239.695 244.994 l
b
186.672 241.132 m
253.593 241.132 L
253.593 260.449 L
186.672 260.449 l
119.754 260.449 L
119.754 241.132 L
186.672 241.132 l
f
0.762 w
226.613 241.132 m
226.613 237.143 l
235.851 220.975 l
253.435 220.975 l
256.375 237.143 l
253.593 241.132 l
226.613 241.132 l
f
0 R
0.1 G
0.5 w
116.973 237.143 m
146.732 237.143 l
S
256.375 237.143 m
226.613 237.143 l
S
1 G
253.593 260.449 m
253.593 241.132 L
256.375 237.143 L
253.435 220.975 l
S
0 O
0 g
186.671 444.624 m
155.574 444.054 130.508 412.104 130.508 372.776 c
130.508 351.009 130.467 302.669 130.436 271.994 C
242.911 271.994 L
242.88 302.669 242.838 351.009 242.838 372.776 c
242.838 412.104 217.768 444.054 186.672 444.624 C
B
(checks with diamonds) 222.1255 -869.1408 1 1 0 0 0 0 0 [1 0 0 1 -216 864] p
0 G
0 J 0 j 0.76 w
186.672 260.46 m
253.509 260.46 l
259.304 267.262 259.304 269.945 259.304 275.828 c
259.304 287.091 209.812 286.895 186.672 286.912 c
162.859 286.932 114.044 285.818 114.044 275.828 c
114.044 269.945 114.044 267.262 119.838 260.46 c
186.672 260.46 l
b
0 g
1 G
1 J 1 j 0.5 w
119.912 220.975 m
120.698 122.925 l
129.097 122.925 l
137.495 220.975 l
B
253.435 220.975 m
252.647 122.925 l
244.25 122.925 l
235.851 220.975 l
B
1 g
0 G
0 J 0 j 3 w
413 314 m
422.268 316.89 424.481 324.889 426.021 336.351 C
416.504 349.338 417.343 353.051 413.773 350.358 c
410.203 347.665 409.971 343.586 406.74 338.889 C
399.976 339.636 398.547 336.502 398.5 337 C
401.034 326.191 406.814 320.945 413 314 C
b
1 J 1 j 3.84 w
397.119 344.71 m
401.08 316.986 420.884 309.065 430.785 295.203 c
S
0 O
1 g
0 J 0 j 0.959 w
327.319 508.598 m
322.368 521.471 309.495 548.205 313.455 546.223 c
325.791 540.057 354.054 599.693 Y
359.003 587.809 359.499 535.826 357.27 522.212 C
327.319 508.598 L
f
0 R
0 G
1 J 1 j 3.84 w
315.325 551.324 m
314.335 553.359 313.234 556.044 311.97 559.591 c
304.296 581.126 309.741 587.067 304.05 606.623 C
314.447 612.069 340.19 637.319 357.518 606.623 C
357.518 593.255 353.063 562.561 343.162 554.145 c
333.26 545.729 325.746 544.986 322.614 544.986 C
320.267 544.986 318.295 545.222 315.325 551.324 c
B
3.843 w
309.495 600.682 m
314.198 599.693 322.981 599.917 324.349 592.266 c
325.585 585.335 323.357 580.632 322.368 575.68 c
321.377 570.729 321.625 572.214 322.863 571.225 c
S
330.041 594.246 m
334.497 596.968 340.475 597.5 345.141 596.722 c
S
0 O
0 0.8 0.5 0 k
318.407 560.333 m
321.129 562.065 l
322.863 560.828 l
324.843 561.818 l
330.536 559.837 331.527 558.848 V
329.795 556.373 323.606 554.641 321.873 555.63 c
320.139 556.621 319.397 558.352 318.407 560.333 C
f
0 A
q
0.6 0.5 0 0 k
0 R
0 G
3.84 w
422.847 319.15 m
452.553 334.992 458.019 397.699 463.961 421.462 c
469.902 445.227 452.078 540.283 424.354 542.263 c
396.629 544.244 275.83 494.736 254.046 480.871 C
254.046 433.345 296.623 338.044 304.545 322.201 C
326.328 324.18 390.689 344.229 402.571 362.054 C
422.847 319.15 L
h
W
b
u
0.7 0.9 1 0 k
0.05 0.5 1 0 K
0 J 0 j 2.554 w
371.655 455.606 m
368.734 474.58 371.044 480.945 384.042 491.938 C
387.62 475.33 384.545 467.139 371.655 455.606 C
b
1.15 w
379.724 474.292 m
380.041 475.165 379.59 476.128 378.717 476.444 c
377.845 476.762 376.882 476.311 376.566 475.438 c
376.249 474.567 376.699 473.602 377.57 473.285 c
378.444 472.968 379.409 473.419 379.724 474.292 c
b
U
u
2.554 w
352.721 405.417 m
363.579 421.246 369.624 424.305 386.62 423.423 C
377.859 408.865 370.013 404.999 352.721 405.417 C
b
1.152 w
371.393 413.514 m
372.221 413.934 372.553 414.945 372.136 415.772 c
371.716 416.6 370.706 416.932 369.876 416.514 c
369.049 416.093 368.718 415.083 369.136 414.253 c
369.557 413.427 370.566 413.097 371.393 413.514 c
b
U
2.554 w
309.351 487.359 m
311.961 506.376 315.99 511.819 331.581 518.654 C
330.277 501.71 324.996 494.736 309.351 487.359 C
b
236.468 449.397 m
253.306 458.615 260.078 458.615 274.847 450.15 C
260.454 441.119 251.707 441.214 236.468 449.397 C
b
u
349.696 437.744 m
332.341 445.947 328.358 451.425 326.527 468.348 C
342.293 462.016 347.357 454.882 349.696 437.744 C
b
1.152 w
338.731 454.893 m
338.186 455.643 337.134 455.809 336.385 455.264 c
335.635 454.718 335.468 453.667 336.013 452.919 c
336.557 452.167 337.61 452 338.359 452.546 c
339.109 453.089 339.276 454.143 338.731 454.893 c
b
U
u
2.554 w
436.393 405.807 m
421.841 393.287 415.214 391.88 399.008 397.091 C
411.208 408.915 419.784 410.641 436.393 405.807 C
b
1.152 w
416.268 402.764 m
415.359 402.572 414.78 401.68 414.973 400.772 c
415.165 399.863 416.058 399.285 416.966 399.477 c
417.873 399.671 418.453 400.565 418.259 401.47 c
418.068 402.378 417.174 402.956 416.268 402.764 c
b
U
u
2.554 w
315.347 394.65 m
300.794 382.132 294.171 380.725 277.964 385.934 C
290.164 397.759 298.74 399.488 315.347 394.65 C
b
1.152 w
295.221 391.609 m
294.313 391.416 293.735 390.524 293.928 389.617 c
294.121 388.708 295.014 388.128 295.921 388.32 c
296.829 388.514 297.407 389.406 297.215 390.315 c
297.021 391.223 296.129 391.802 295.221 391.609 c
b
U
u
2.554 w
307.847 445.65 m
307.476 426.458 304.11 420.581 289.422 411.975 C
288.741 428.951 293.171 436.496 307.847 445.65 C
b
1.152 w
296.697 428.621 m
296.235 427.815 296.515 426.79 297.32 426.328 c
298.125 425.867 299.152 426.145 299.613 426.951 c
300.074 427.757 299.796 428.783 298.989 429.244 c
298.185 429.705 297.159 429.427 296.697 428.621 c
b
U
u
2.554 w
399.681 457.15 m
413.858 470.093 420.438 471.695 436.789 466.968 C
424.946 454.787 416.424 452.805 399.681 457.15 C
b
1.152 w
419.706 460.785 m
420.608 461.005 421.16 461.912 420.943 462.815 c
420.722 463.716 419.814 464.27 418.911 464.05 c
418.01 463.831 417.458 462.921 417.678 462.018 c
417.898 461.119 418.806 460.565 419.706 460.785 c
b
U
2.554 w
450.347 483.15 m
445.475 501.718 447.114 508.29 458.901 520.572 C
464.469 503.542 460.35 494.169 450.347 483.15 C
b
u
397.847 518.15 m
416.009 524.359 422.681 523.203 435.788 512.341 C
420.067 505.9 411.462 507.485 397.847 518.15 C
b
1.152 w
417.658 513.49 m
418.573 513.332 419.442 513.945 419.6 514.858 c
419.759 515.774 419.146 516.643 418.231 516.8 c
417.318 516.958 416.448 516.346 416.29 515.432 c
416.13 514.52 416.745 513.647 417.658 513.49 c
b
U
u
2.554 w
353.139 361.651 m
369.976 370.869 376.75 370.869 391.518 362.402 C
377.126 353.371 368.379 353.466 353.139 361.651 C
b
1.152 w
373.457 360.438 m
374.386 360.438 375.138 361.192 375.138 362.119 c
375.138 363.048 374.386 363.8 373.457 363.8 c
372.531 363.8 371.776 363.048 371.776 362.119 c
371.776 361.192 372.531 360.438 373.457 360.438 c
b
U
u
2.554 w
437.872 442.596 m
455.981 448.964 462.665 447.867 475.866 437.119 C
460.201 430.54 451.584 432.05 437.872 442.596 C
b
1.152 w
457.726 438.108 m
458.641 437.958 459.507 438.58 459.658 439.494 c
459.808 440.41 459.186 441.275 458.271 441.425 c
457.354 441.576 456.49 440.956 456.34 440.039 c
456.19 439.124 456.81 438.257 457.726 438.108 c
b
U
u
2.554 w
317.484 356.029 m
320.643 374.962 324.83 380.289 340.615 386.667 C
338.817 369.768 333.338 362.951 317.484 356.029 C
b
1.152 w
330.994 371.255 m
331.568 371.984 331.442 373.04 330.711 373.613 c
329.982 374.188 328.926 374.063 328.352 373.331 c
327.779 372.602 327.904 371.546 328.634 370.972 c
329.363 370.397 330.421 370.526 330.994 371.255 c
b
U
u
2.554 w
351.814 497.914 m
358.787 515.798 363.974 520.152 380.73 523.16 C
375.51 506.99 368.747 501.44 351.814 497.914 C
b
1.15 w
368.157 510.048 m
368.869 510.641 368.96 511.703 368.363 512.415 c
367.766 513.124 366.707 513.218 365.997 512.621 c
365.285 512.026 365.191 510.966 365.789 510.253 c
366.385 509.544 367.447 509.449 368.157 510.048 c
b
U
u
2.554 w
444.689 362.412 m
439.817 380.979 441.456 387.552 453.243 399.833 C
458.523 383.686 456.316 375.218 444.689 362.412 C
b
1.152 w
450.777 381.833 m
451.001 382.735 450.453 383.647 449.553 383.871 c
448.653 384.096 447.741 383.548 447.515 382.647 c
447.293 381.748 447.84 380.835 448.741 380.611 c
449.641 380.387 450.553 380.932 450.777 381.833 c
b
U
2.554 w
294.615 488.527 m
280.064 476.009 273.438 474.602 257.232 479.811 C
269.433 491.637 278.009 493.363 294.615 488.527 C
b
308.968 335.897 m
328.163 335.768 334.082 332.477 342.874 317.9 C
325.906 317.005 318.308 321.337 308.968 335.897 C
b
Q
0 R
0 G
0 i 1 J 1 j 3.84 w 10 M []0 d
%%Note:
422.847 318.65 m
452.553 334.492 458.019 397.699 463.961 421.462 c
469.902 445.227 452.078 540.283 424.354 542.263 c
396.629 544.244 275.83 494.736 254.046 480.871 C
254.046 433.345 296.623 338.044 304.545 322.201 C
326.328 324.18 390.689 344.229 402.571 362.054 C
422.847 318.65 L
s
0 O
0 0.8 0.8 0 k
3.843 w
307.545 606.841 m
337.254 597.6 338.156 634.561 356.034 603.158 C
361.479 596.225 348.359 528.401 348.111 521.471 C
354.549 524.192 368.656 528.647 372.123 530.628 C
370.637 540.529 366.429 588.305 366.924 598.701 c
368.817 638.46 303.061 654.057 293.653 595.731 C
283.751 534.341 277.81 506.617 269.889 480.871 C
277.81 476.912 295.634 472.953 y
301.575 506.617 l
325.338 468.99 341.181 461.07 V
346.627 469.361 353.063 468.99 y
317.417 511.319 315.436 550.927 V
309.99 559.095 304.108 586.266 307.545 606.841 C
b
1 G
0.5 w
235.851 220.975 m
226.613 237.143 L
226.613 241.132 L
146.732 241.132 L
146.732 237.143 L
137.495 220.975 l
S
119.754 260.449 m
119.754 241.132 L
116.973 237.143 L
119.912 220.975 l
S
0 G
0 J 0 j 3.36 w
500.019 114.831 m
500.019 645.059 L
69.82 645.059 L
69.82 114.831 L
500.019 114.831 L
s
showpage
%%Trailer
Adobe_Illustrator88 /terminate get exec
Adobe_pattern /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
