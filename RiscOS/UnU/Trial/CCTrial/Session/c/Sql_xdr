/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#include "Sql.h"

bool_t
xdr_sqldata(xdrs, objp)
        register XDR *xdrs;
        sqldata *objp;
{

        register long *buf;

        if (!xdr_bytes(xdrs, (char **)&objp->sqldata_val, (u_int *) &objp->sqldata_len, MAXSQLDATA))
                return (FALSE);
        return (TRUE);
}

bool_t
xdr_s_auth_data(xdrs, objp)
        register XDR *xdrs;
        s_auth_data *objp;
{

        register long *buf;

        if (!xdr_u_int(xdrs, &objp->session_id))
                return (FALSE);
        if (!xdr_u_int(xdrs, &objp->user_id))
                return (FALSE);
        return (TRUE);
}

bool_t
xdr_sqlargs(xdrs, objp)
        register XDR *xdrs;
        sqlargs *objp;
{

        register long *buf;

        if (!xdr_s_auth_data(xdrs, &objp->authdata))
                return (FALSE);
        if (!xdr_sqldata(xdrs, &objp->statement))
                return (FALSE);
        return (TRUE);
}

bool_t
xdr_sqlres(xdrs, objp)
        register XDR *xdrs;
        sqlres *objp;
{

        register long *buf;

        if (!xdr_int(xdrs, &objp->errno))
                return (FALSE);
        switch (objp->errno) {
        case 0:
                if (!xdr_sqldata(xdrs, &objp->sqlres_u.results))
                        return (FALSE);
                break;
        }
        return (TRUE);
}
