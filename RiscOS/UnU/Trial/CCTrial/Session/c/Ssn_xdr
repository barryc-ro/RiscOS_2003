/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#include "Ssn.h"

bool_t
xdr_pin(xdrs, objp)
        register XDR *xdrs;
        pin *objp;
{

        register long *buf;

        if (!xdr_string(xdrs, objp, MAXPINLEN))
                return (FALSE);
        return (TRUE);
}

bool_t
xdr_ssndata(xdrs, objp)
        register XDR *xdrs;
        ssndata *objp;
{

        register long *buf;

        if (!xdr_bytes(xdrs, (char **)&objp->ssndata_val, (u_int *) &objp->ssndata_len, MAXSSNDATA))
                return (FALSE);
        return (TRUE);
}

bool_t
xdr_logonargs(xdrs, objp)
        register XDR *xdrs;
        logonargs *objp;
{

        register long *buf;

        if (!xdr_pin(xdrs, &objp->logon_pin))
                return (FALSE);
        if (!xdr_u_int(xdrs, &objp->logon_adr))
                return (FALSE);
        return (TRUE);
}

bool_t
xdr_a_auth_data(xdrs, objp)
        register XDR *xdrs;
        a_auth_data *objp;
{

        register long *buf;

        if (!xdr_u_int(xdrs, &objp->session_id))
                return (FALSE);
        if (!xdr_u_int(xdrs, &objp->user_id))
                return (FALSE);
        return (TRUE);
}

bool_t
xdr_logonres(xdrs, objp)
        register XDR *xdrs;
        logonres *objp;
{

        register long *buf;

        if (!xdr_int(xdrs, &objp->errno))
                return (FALSE);
        switch (objp->errno) {
        case 0:
                if (!xdr_a_auth_data(xdrs, &objp->logonres_u.logond))
                        return (FALSE);
                break;
        }
        return (TRUE);
}

bool_t
xdr_sdataargs(xdrs, objp)
        register XDR *xdrs;
        sdataargs *objp;
{

        register long *buf;

        if (!xdr_a_auth_data(xdrs, &objp->authdata))
                return (FALSE);
        if (!xdr_ssndata(xdrs, &objp->sdata))
                return (FALSE);
        return (TRUE);
}

bool_t
xdr_sdatares(xdrs, objp)
        register XDR *xdrs;
        sdatares *objp;
{

        register long *buf;

        if (!xdr_int(xdrs, &objp->errno))
                return (FALSE);
        switch (objp->errno) {
        case 0:
                if (!xdr_ssndata(xdrs, &objp->sdatares_u.sdata))
                        return (FALSE);
                break;
        }
        return (TRUE);
}
