
        ; Trace module swis

Trace_R0        * &BF00
Trace_R1        * &BF01
Trace_R2        * &BF02
Trace_R3        * &BF03
Trace_R4        * &BF04
Trace_R5        * &BF05
Trace_R6        * &BF06
Trace_R7        * &BF07
Trace_R8        * &BF08
Trace_R9        * &BF09
Trace_R10       * &BF0A
Trace_R11       * &BF0B
Trace_R12       * &BF0C
Trace_R13       * &BF0D
Trace_R14       * &BF0E
Trace_R15       * &BF0F
Trace_Regs      * &BF10
Trace_WriteC    * &BF11
Trace_NewLine   * &BF12
Trace_WriteS    * &BF13
Trace_Write0    * &BF14
XTrace_R0       * &2BF00
XTrace_R1       * &2BF01
XTrace_R2       * &2BF02
XTrace_R3       * &2BF03
XTrace_R4       * &2BF04
XTrace_R5       * &2BF05
XTrace_R6       * &2BF06
XTrace_R7       * &2BF07
XTrace_R8       * &2BF08
XTrace_R9       * &2BF09
XTrace_R10      * &2BF0A
XTrace_R11      * &2BF0B
XTrace_R12      * &2BF0C
XTrace_R13      * &2BF0D
XTrace_R14      * &2BF0E
XTrace_R15      * &2BF0F
XTrace_Regs     * &2BF10
XTrace_WriteC   * &2BF11
XTrace_NewLine  * &2BF12
XTrace_WriteS   * &2BF13
XTrace_Write0   * &2BF14


        ; trace macros


        MACRO
        SHOWREG $reg
        [       DEBUG
        SWI     Trace_$reg
        ]
        MEND


        MACRO
        SHOWNL
        [       DEBUG
        SWI     Trace_NewLine
        ]
        MEND


        MACRO
        SHOWS   $L
        [       DEBUG
        SWI     Trace_WriteS
        =       "$L",0
        ALIGN
        ]
        MEND



        END
