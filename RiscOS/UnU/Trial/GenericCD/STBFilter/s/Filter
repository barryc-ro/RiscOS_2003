; Twitter filter routines

r0              RN      0
r1              RN      1
r2              RN      2
r3              RN      3
r4              RN      4
r5              RN      5
r6              RN      6
r7              RN      7
r8              RN      8
r9              RN      9
r10             RN      10
r11             RN      11
r12             RN      12
r13             RN      13
r14             RN      14
r15             RN      15

        AREA    |C$$code|, CODE, READONLY

; Arguments:
;  R0 -> start of screen data
;  R1 = width in pixels (must be an even number)
;  R2 = height in pixels >= 3
;  R3 = line length
; Assumes 16bpp.

        EXPORT  filter_area

filter_area
        STMFD   r13!, {r4-r12, r14}

        SUB     r2, r2, #2              ; we don't do 1st and last lines
        CMP     r2, #0                  ; catch silly height
        BLE     exit
        LDR     r14, =&7C1F03E0
        MUL     r4, r2, r3              ; R4 = length of a 'column'
row
        MOV     r5, r2
col
        LDR     r6, [r0]
        ADD     r0, r0, r3              ; pixel at line under consideration
        LDR     r7, [r0]
        ADD     r0, r0, r3              ; pixel at line after
        LDR     r8, [r0]

        BIC     r9, r6, r14
        AND     r6, r6, r14             ; divide this lot by 4

        BIC     r10, r7, r14
        AND     r7, r7, r14

        BIC     r11, r8, r14
        AND     r8, r8, r14

        MOV     r6, r6, LSR #1
        ADD     r6, r6, r7
        ADD     r6, r6, r8, LSR #1
        MOV     r6, r6, LSR #1
        AND     r6, r6, r14

        MOV     r7, r9, LSR #1
        ADD     r7, r7, r10
        ADD     r7, r7, r11, LSR #1
        MOV     r7, r7, LSR #1
        BIC     r7, r7, r14

        CMP     r5, r2
        SUBNE   r0, r0, r3, LSL #1
        STRNE   r12, [r0]
        ADDNE   r0, r0, r3

        ORR     r12, r6, r7

        SUBS    r5, r5, #1
        BEQ     endofcol

        LDR     r6, [r0]
        ADD     r0, r0, r3              ; pixel at line under consideration
        LDR     r7, [r0]
        ADD     r0, r0, r3              ; pixel at line after
        LDR     r8, [r0]

        BIC     r9, r6, r14
        AND     r6, r6, r14             ; divide this lot by 4

        BIC     r10, r7, r14
        AND     r7, r7, r14

        BIC     r11, r8, r14
        AND     r8, r8, r14

        MOV     r6, r6, LSR #1
        ADD     r6, r6, r7
        ADD     r6, r6, r8, LSR #1
        MOV     r6, r6, LSR #1
        AND     r6, r6, r14

        MOV     r7, r9, LSR #1
        ADD     r7, r7, r10
        ADD     r7, r7, r11, LSR #1
        MOV     r7, r7, LSR #1
        BIC     r7, r7, r14

        SUB     r0, r0, r3, LSL #1
        STR     r12, [r0]
        ADD     r0, r0, r3

        ORR     r12, r6, r7

        SUBS    r5, r5, #1
        BNE     col

endofcol

        SUB   r0, r0, r4
        SUB   r0, r0, r3
        ADD   r0, r0, #4

        SUBS  r1, r1, #2              ; Done 2 pixels at a time
        BGT   row

exit
        LDMFD   r13!, {r4-r12, r15}

        LTORG

        END
