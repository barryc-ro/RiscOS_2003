                                      OVERALL CHANGES TO !cd
                                      ======================
                                      
Version 1.01, 24 August, 1995:
----------------------------- 

*  Mouse pointer now gets turned off.
*  Cd's of type !RunCD now get started up as wimp tasks.
*  !cd no longer executes a wimpmode 50.
*  Development flag turned off in "common.h".  Results in no error reporting.
*  This "Changes" file added.

Version 1.02, 25 August, 1995:
-----------------------------

*  A task launched by !cd no longer has to wait for !cd to acknowledge it's
   "I am about to die (TASK_DEAD)" message before actually dying because !cd
   no longer sends this acknowledgement (TASK_DEAD_ACK) message.  Hence message
   number TASK_DEAD_ACK no longer exists.
   
*  An alteration was made to the way in which !cd polls the wimp (previous method
   was incorrect.  See main.c for further details).
   
*  Description of the common directory added to !Boot (which sets Common$Path).

*  Tasks launched by !cd are no longer responsible for ejecting the cd as part of
   their closure sequence.  Instead, !cd will eject the cd upon receipt of an 'I
   am about to die' (TASK_DEAD) message from the other task, (although if the other
   task does perform a cd eject before closing down, this will not cause a problem).

*  Introduction of the window for the splash screen and therefore introduction of 
   windows code (window.c, wimp.h, window.h).  Alterations to the way in which 
   ShowPleaseInsertCdScreen() is invoked, namely ReadMessage() hides the splash
   screen window upon receipt of a TASK_ACTIVE message from the other task, and
   shows the splash screen window upon receipt of a TASK_DEAD message.  This 
   replaces the call to ShowPleaseInsertCdScreen() from Idle(), where 
   ShowPleaseInsertCdScreen() was then called depending upon whether 'screen_
   display' was HIDDEN or DISPLAYED, and depending upon whether 'other_task' was
   ACTIVE, or NOT_ACTIVE, and depending upon whether 'wait_for_ack' was TRUE
   or FALSE (waiting for other task to acknowledge die message e.g.).  The splash
   screen window is also shown in response to redraw events, and on initialisation.
   Introduction of the window code did not require any alteration to any of the 
   show screen display routines in "display.c", including ShowPleaseInsert
   CdScreen().
   
*  ReadMessage() implied the possibility of receiving TASK_DIE messages.  This 
   implication has now been removed as !cd can only receive TASK_DEAD messages.
   Refer to messages.h for a description of the TASK_DIE message if necessary.
   
*  Mouse pointer was previously turned off on initialisation only.  It now gets
   turned off as a routine part of the ShowPleaseInsertCdScreen() sequence, 
   allowing for the fact that other tasks may later restore the mouse pointer.
   
*  Error level in Eject() was changed from FATAL to WARNING to allow for the 
   possibility of a cd eject when the cd has just been ejected anyway.
   
*  Negative checks removed from DetectCdType() as a performance measure.  i.e.
   e.g. if (IsItAudioCd() == TRUE) type == TYPE_AUDIO; as opposed to 
   if (IsItAudioCd() == TRUE) && (IsItPhotoCd() == FALSE) and ... other checks also
   FALSE, then type == TYPE_AUDIO.
   
*  Altered description of JPEG splash screen requirement as it was incorrect.
   The supplied JPEG image can be of any size, preferably created in a 24bpp
   screen mode.  This is because whatever screen mode you're in when you save
   the JPEG, it will be saved at 24bpp.  When plotted in a 16bpp screen mode later
   on, the plotting swi's will automatically convert from 24bpp down to 16bpp.
   Creating the JPEG in a 24bpp screen mode avoids loss of quality.
   
*  Acknowledgment of David DeVorchik's window mechanism for the splash screen.

*  Documentation relating to all of the above adjusted accordingly.


Version 1.03, 09 September 1995:
-------------------------------

* Version 1.02 was handed over to Jonathan for modifications relating to !cd 
  living in ROM as opposed to on disk.  Version 1.03 includes these changes.
  Version 1.03 still runs from hard disk but it resembles the structure it needs
  to be in for living in ROM.  The makefile/s are also significantly different.
  There were minimal changes to the actual source code itself as a result of 
  Jonathan's work.  Specific changes (carried out by Jonathan) are documented 
  below.
  
  - #define Twitter_FilterArea 0x84000 was changed to 
    #define STBFilter_FilterArea 0x84000.
    
  - Jonathan has converted Tim's latest anti-twitter code into a module but
    currently it does not correctly apply the twitter and one particular call
    to the module results in a crash.  This latest version requires different 
    input parameters.  Calls to the new twitter module have been incorporated but 
    are currently commented out until the module (or calls) work properly.  
    
  - 'cd_app' passed into the launch() routine used to be of the form
    "WimpTask CD:^.!PhotoCD", similarly audio and video.  It is now of the form
    "WimpTask PhotoCD:!Run", similarly audio and video.  Hence changes to the
    ApplicationExists() function in launch.c were necessary.
    
  - #include pathnames in swicall.h were shortened.
  
* Not all errors were being trapped by !cd in earlier versions.  This was solved
  with the introduction of signal handling code (PRM p. 4-302, Horspool's 
  C programming book p. 173) into main.c and was successfully tested by 
  deliberately incorporating "int a = 3/0;" into display.c and then into window.c.  
  
* Message numbers have been officially allocated from Acorn.  There are 64
  message numbers available, starting from 0x4b680.
  
* Message type TASK_HANDLE_ACK no longer exists.

* Message type TASK_ACTIVE_ACK no longer exists.

* !cd's message handling protocol changed to reflect the above changes.

* David DeVorchik's UpCallV (CDSupport) code has been incorporated into !cd but 
  currently does not work.
  
* Program documentation updated accordingly.

* Creation of a "ToDo" file within the Doc directory.


Version 1.04, 12 September 1995:
-------------------------------

* Error found and fixed in SendMessage().

* Altered DriveStatus() in cdpresent?.c to allow for the conflict which 
  occurred when !cd got a look in to check for disc present when !AudioCD
  was in a state of play.  In previous versions, !cd never got a look in
  when !AudioCD was playing but with the introduction of the UpCallV code,
  this became necessary and caused a conflict if !AudioCD was playing.
  Symptom was no error reporting but counter display giving the impression
  that !AudioCD was continuously finding the start of the track and then
  promptly losing it and so never got going.
  
* Window mechanism had to be added.

* Went back to using the old twitter module because there is still a 
  problem with the new one.
  
* Dizzy's UpCallV code (CDSupport) now works.  The STB can now be put
  into standby mode and when recovering from this mode, the cd apps 
  return.  


Version 1.05, 13 September 1995:
-------------------------------

* new splash screen from Christina.  STB more centre screen, as Malcolm 
  suggested.
  
Version 1.06, 14 September 1995:
-------------------------------

* Some confusion about version numbers.  This release is purely to resolve
  that confusion.
  
Version 1.07, 14 September 1995:
-------------------------------

* Replaced the swi call, swi(OS_CLI,R0,"CDFS:EJECT",END), with swi(CD_OpenDrawer,
  R7,cd_blk,END).  This solved the problem of eject failing when a faulty disc was 
  inserted.  
  
* Added code so that if the CD_DriveStatus swi call failed in attempting to 
  determine the status of the cd drive (is there a cd present?), in addition to the
  error handler being called, Eject() is also called.  This ensures that faulty
  cd's don't remain in the drive with !cd in a continuous loop of:-
     - is there a cd present?
     - don't know because swi call resulted in error.
     - call error handler.
     - repeat the above.
  Calling Eject() breaks the above loop and spits out the faulty cd.   
  
* Added function tracing functionality.  This must always be turned off upon 
  release.  See common.h for further details.
  
  
Version 1.08, 15 September 1995:
-------------------------------  

* Depending upon the definitions of two new macros, LOW_MEM, and one of
  OLD_TWITTER, NEW_TWITTER, or no twitter definition, !AudioCD can now be
  built in different ways.
  
  Defining LOW_MEM:-
     Advantage:    the buffer used to hold the JPEG image before plotting to
                   the screen only needs to have the same dimensions as the 
                   JPEG image in it's non scaled form.  Scaling is done later
                   on as part of the plot to screen process.  Hence low 
                   memory usage depending upon the dimensions of the JPEG. 
     Disadvantage: twitter cannot be applied prior to the screen plot because
                   at that stage, the image is not necessarily of screen size.
                   The user will notice twitter being applied on screen.
                   
  Undefining LOW_MEM
     Advantage:    The user will not see twitter being applied on screen 
                   because it can be applied before the screen plot occurs.
     Disadvantage: You lose the flexibility of using less memory according to
                   the dimensions of the user supplied JPEG image.
  
  Defining OLD_TWITTER:  The old twitter module is used.  It works.
  
  Defining NEW_TWITTER:  The new twitter module is used.  It apparantly works,
                         but so far it doesn't work in !cd.  It seems to do
                         nothing.
                         
  Undefining OLD_TWITTER/NEW_TWITTER: No twitter is applied.
   
   LOW_MEM is defined in Initialise.c (as the LOW_MEM mechanism is specific
   to Initialise.c).
                                    

Version 1.09, 02 October 1995:
-----------------------------  

*  ErrorHandler() calls checked and fixed where necessary in all files.
   i.e. correct function name reported. 

* Tested a splash screen of 768 by 800 with !cd executing in a screen mode
  of 768 by 576.  OLD_TWITTER was defined and LOW_MEM was undefined.  The
  test was successful.  i.e. scaling down seems to work as well as scaling up.
  
* Error handling changed to include __LINE__ and __FILE__.

* Addition of hourglass usage.  Note that the hourglass module included with
  this code is specific to !cd.
  
* CD drawer no longer opens automatically on power up.

* Alterations made to detect faulty cd's in the proper manner.  This does
  not apply to situations where a faulty cd is present in the drive on power
  up.  In such cases CDFS becomes severely damaged and thinks that there is
  no cd present, meaning that !cd will not be aware that it has a faulty cd
  to eject.
  
* User feedback images for faulty and unknown cd's.  They remain as sprites
  because !ChangeFSI does not recognise transparency masks in converting to
  JPEG's.  The user feedback icons contain transparency masks.
  
* Old anti-twitter module is called because the new one has no effect.

* Updated program documentation and other documentation.

* Splash screen modifications, namely:-

   -There may no longer be a fault on the top left hand corner of the STB
    on the !cd splash screen.  This needs to be looked at on an NTSC monitor
    to verify as the fault never existed in the source image.

   -I've added holes to the centres of the cd's on the !cd splash screen.
    There weren't any previously.

   -There was some slight discolouration at the top left of the !cd splash
    screen (usually not noticeable because it would be off screen).  Fixed.
  
   -There used to be a small noticeable white line on the blue background of
    the !cd splash screen, obviously as a result of some error in !Paint or
    something similar.  Now removed.

   -Have attempted to smooth the image somewhat and after doing so resharpened
    the LED's.

   -Because Christina hasn't been here much of the week and I didn't have
    the original !cd drawfile I had to search for it on Christina's machine.
    I wasn't able to find the most recent version and so had to resquash the
    STB and re-center it.  Hopefully the newly squashed STB looks ok to 
    everyone else.

  -User feedback images have been added to !cd.  An hourglass appears after
   a certain amount of 'busy time' has elapsed.  "Unrecognised cd" and 
   "faulty cd" images appear on the screen when necessary.  If a cd is 
   inserted which is both of an unknown type *and* which is damaged, you
   will most likely see the "Unknown cd" feedback symbol as opposed to the
   damaged symbol.  Tim Holland-Smith has seen the "faulty cd" symbol and
   thinks it is ok.  He suggested also a red cross overlay but I haven't
   yet done this and he has said that what is currently there is ok.  


Version 1.10, 02 October 1995:
----------------------------- 

* Introduction of 'status' in main.c in Idle() along with separation of if's
  to improve performance with DriveStatus().
  
* Makefile adjusted to include new user feedback sprites (forgot to include them
  in 1.09).
  
  
Version 1.11, 03 October 1995:
-----------------------------   

* Conditional inclusion of SCREEN_DUMP code since three different people have
  recently asked for screen dumps.  Only used during development.
  
* Hourglass only gets used if the other task is not active so as not to give
  visual interference.

* Hourglass response now a third of a second instead of the previous one sec.

* Hourglass colours get set from within !cd instead of relying on default colours.

* User feedback icon screen positions changed after viewing on large NTSC
  monitor.
  
* Hourglass screen position modified to top right corner of the screen.

* It is now up to the launched task to turn the hourglass off when it 
  initialises.

* Hourglass now gets turned on immediately as part of !cd's initialisation 
  procedure (and turned off after initialisation).
  
* Hourglass added to Eject() (only operative if the other task is not
  active).
  

Version 1.12, 05 October 1995:
----------------------------- 

* Completion of MPEG hardware detection code.

* Error message correction.
  
* RunCD types:- input to launch() is still "CDFS:!RunCD" but launch() now 
  interprets this as meaning "CDFS:!RunCD" or "CDFS:RunCD".  
  
 
Version 1.13, 06 October 1995:
----------------------------- 

* launch() modification above didn't work because IsItRunCd() wasn't looking
  for "RunCD" as well as "!RunCD".  Fixed.  
  
* launch() wasn't checking that either of the RunCD files existed before 
  doing a Wimp_StartTask.  As Wimp_StartTask never returns errors this
  also needed correcting.
  
* Wimp_StartTask never returns errors.  Hence appropriate error handling code
  associated with Wimp_StartTask has been removed.  (Checks to ensure that
  Wimp_StartTask will not fail are done beforehand).
  
* !cd now turns off the hourglass immediately before doing a Wimp_StartTask.
    
Version 1.14, 06 October 1995:
-----------------------------    

* RunCD types:- these are now "CDFS:$.!RunCD" or CDFS:$.RunCD/*
  
Version 1.15, 01 December 1995:
------------------------------

* Altered identification of video cd types.  Now copes with NTSC video cd's
  (which have arbitrary filenames).  Please let me know if a video cd is ever 
  rejected as being an unrecognised type of cd.
  
* Memory tracing facility for viewing memory consumption at various stages
  of execution.

* "WimpTask PhotoCD:!Run" is now "WimpTask *RUN PhotoCD:!Run".  Similarly
   audio and video.  Reason:- doing a WimpTask PhotoCD:!Run does not work
   (even from the command line) if there is a module loaded which is 
   also called PhotoCD.  (Anthony Frost can confirm this!).  
   
* "DestroyWindow()" in window.c wrongly had R0 on entry instead of R1.  Now fixed.
   Since DestroyWindow() is part of !cd's shutdown procedure, and since shutdown
   only occurs as a result of a fatal error, this error existing in previous 
   versions of !cd is not serious and can safely be ignored.
   
* "Extend!CD" added to CD.Doc directory.  Useful for anyone wishing to add their
   own applications to the !cd suite.
   
Version 1.16, 12 December 1995:
------------------------------

* Updated "A Programmer's Guide To Interfacing With !CD" in the Docs directory,
  then created a "Developers" directory in Build.Sources.Trial.GenericCD and
  moved it there.

Version 1.17, 22 December 1995:
-------------------------------

* Renamed "Doc" directory to "Documents".

* Deleted "Spec" from "Documents".

* Copied Developers guide into Documents.

* Copied User Guide into Documents.

* Created Documents !ReadMe file.

* Updated "ToDo" list as a result of feedback from users.

* Incorporated AngliaCD type detection code.  This may or may not be needed
  in future, depending upon whether Anglia CD's behave exactly as RunCD's.

* Updated the font manager module.  Got rid of Fonts401 and copied
  over Sources.OS_Core.Video.Render.Fonts -> ITable and Manager.
  
* Updated user guide in Build.Sources.Trial.GenericCD.UserGuide.  (Copy
  made in this directory).
  
Version 1.18, 05 January 1996:
------------------------------

* Removed AngliaCD specific code since Anglia CD's are now RunCD's as far
  as !cd is concerned.  
  
* Updated ToDo list.

Version 1.19, 27 February 1996:
------------------------------
  
* Added keyboard input (via the wimp) to !cd enabling the tray to be opened and
  closed via remote control when no client application is active.  Because CDFS 
  does not provide a means of determining whether the tray is open or shut, !cd 
  assumes that the tray is initially shut on power up and updates a toggle 
  variable in response to handset initiated tray open/close requests.  !cd has
  to rely on this variable to tell whether the tray is currently open or closed
  and therefore whether to attempt to eject the tray or to close it.  If the
  user intermixes manual and remote tray operation, a second remote button press
  may sometimes be necessary because manually operated tray actions will not
  update the toggle variable.  Note that if CDFS attempts to do a tray close
  operation and fails (because the tray is already closed), it does not return
  an error.  Similarly tray open.  
  
* Added FORCE_FATAL_ERROR flag in common.h for use during development to test
  handling of fatal errors.  Corresponding code lies in main() in main.c
  
* Creates and sets a system variable called "err" with appropriate error 
  diagnostics on fatal error.  (Error$Message and Error$Number may also have been
  set.  Error$Message and Error$Number are nothing to do with !cd).  Useful for
  discovering why !cd shuts down in a ROM environment, particularly if error
  reporting is turned off.
  
* Updated the "Documents" !ReadMe file and copied in an updated Developers
  directory.  Also copied in an updated !CD User Guide.
  
* Overcame the problem of CDFS getting confused when both white and green book
  video cd's have been used.  This was achieved using CD_SetParameters to 
  explicitly set the data mode to 2 in IsItVideoCD().  Satisfied myself that 
  this did indeed solve the problem by first arranging the code so that 
  SetParameters was only called *after* such an error had occurred.  Diagnostic
  output proved that SetParameters was having the desired effect.  So far no
  side effects have been noticed.  !PhotoCD, !AudioCD, and both types of video
  cd continue to work.
  
* Updates from the source filer:
   - UARTDriver.
   - Build.Sources.STB.Display.MPEGVideo
   - Build.Sources.STB.Display.MPEGAudio
   - Build.Sources.STB.Display.Interlace
   - Build.OS_Core.FileSys.CDFS.CDFSRes
   - Build.OS_Core.Video.Render.Fonts.Manager
   - Build.OS_Core.Video.Render.Fonts.ITable
   