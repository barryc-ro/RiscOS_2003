                                  CHANGES (!AudioCD)
                                  =================
                                  
Version 1.01, 12 September 1995:
-------------------------------
Original version - no changes.


Version 1.02, 13 September 1995:
-------------------------------                                
   
* Got rid of system("*FX 15,1"); in ReadDigitSequence and replaced it with
  if ((err = swi(OS_Byte,R0,15,R1,1,END)) != NULL)
             ErrorHandler(__FILE__,"ReadDigitSequence()",err->errnum,
             err->errmess,WARNING);                              
  in an attempt to solve the problem of !AudioCD giving a data abort when
  the user enters a number when !AudioCD is in ROM.
  
  
Version 1.03, 13 September 1995:
------------------------------- 

* Keyboard input gets to !AudioCD as a result of polling the wimp.
  (Necessary because !AudioCD has a window which it uses to display the
  screen image.  Hence we need to claim the input focus and read
  keyboard input via the wimp).
    
  There is a second place for keyboard input and that is in ReadDigit
  Sequence() at the end of display.c.  ReadDigitSequence() was not
  polling the wimp for keyboard input, but was instead using the OS_Byte
  swi call with R0 129 and I believe that this is was the cause of the 
  error mentioned above in version 1.02.   Although it did work in a
  non ROM environment, it blew up in ROM.  
  
  At the time of writing, ReadDigitSequence() has been modified to poll
  the wimp for keyboard input, and this new version works correctly in
  a non-ROM environment.  It now needs to be tested in ROM.
  
  
Version 1.04, 13 September 1995:
------------------------------- 

* !AudioCD ensures that part of it's shut down sequence is to stop the
  cd playing.  (Otherwise going into standby or even doing a CTRL-Break
  will still leave it still playing).
  
* cd_blk made global since it is used in Finish() in order to issue the   
  stop swi call.  (Memory pointed to by cd_blk does not need free'ing, 
  since it was set up by !cd).
  
* Twitter width must be an even number.  If it wasn't I incremented the 
  twitter width by 1.  I've changed this to a decrement because an increment   
  could result in some illegal memory access.  This doesn't yet apply to
  the twitter in Initialise.c.
  
* When the cd reaches the end of the last track the stop button comes on 
  for a second or so and the counter display is reset to zero.


Version 1.05, 15 September 1995:
------------------------------- 

* Error handling tidied up in display.c.  

* In making !AudioCD stop upon reaching the end of a cd (stop as in stop
  button comes on and counter display resets to zero), this introduced a
  bug in that *whenever* pause was pressed, the stop button came on and
  the counter display got reset to zero.  Now fixed by attaching a condition
  to stopping and resetting counter to zero, the condition being if not in
  a paused state.  When pausing it seemed to think it had reached the end of
  the cd.  This could be due to the head doing something I don't know about
  or understand when in a paused state.   Regardless of my understanding,
  the problem now seems to be fixed.
  
  
Version 1.06, 14 September 1995:
------------------------------- 

* Added function tracing functionality (turned on by #define FN_TRACE in
  common.h).  This should read #undef FN_TRACE upon release.
  
* Added memory tracing functionality (turned on by #define MEMORY_TRACE in
  common.h).  This should read #undef MEMORY_TRACE upon release.  
  
* Altered makefile to include Memory.c in the build, but not in the ROM
  build.  Memory.c is only used during development if MEMORY_TRACE is
  defined.
  
  
Version 1.07, 15 September 1995:
-------------------------------   

* Depending upon the definitions of two new macros, LOW_MEM, and one of
  OLD_TWITTER, NEW_TWITTER, or no twitter definition, !AudioCD can now be
  built in different ways.
  
  Defining LOW_MEM:-
     Advantage:    the buffer used to hold the JPEG image before plotting to
                   the screen only needs to have the same dimensions as the 
                   JPEG image in it's non scaled form.  Scaling is done later
                   on as part of the plot to screen process.  Hence low 
                   memory usage depending upon the dimensions of the JPEG. 
     Disadvantage: twitter cannot be applied prior to the screen plot because
                   at that stage, the image is not necessarily of screen size.
                   The user will notice twitter being applied on screen.
                   
  Undefining LOW_MEM
     Advantage:    The user will not see twitter being applied on screen 
                   because it can be applied before the screen plot occurs.
     Disadvantage: You lose the flexibility of using less memory according to
                   the dimensions of the user supplied JPEG image.
  
  Defining OLD_TWITTER:  The old twitter module is used.  It works.
  
  Defining NEW_TWITTER:  The new twitter module is used.  It apparantly works,
                         but so far it doesn't work in !cd.  It seems to do
                         nothing.
                         
  Undefining OLD_TWITTER/NEW_TWITTER: No twitter is applied.
   
   LOW_MEM is defined in Initialise.c (as the LOW_MEM mechanism is specific
   to Initialise.c).
                                    
   Currently successfully tested in a non-ROM environment as follows:-
   
   Original JPEG 768 by 240.  Screen dimensions 768 by 576.
   OLD_TWITTER defined, LOW_MEM defined.
   
   Original JPEG 768 by 240.  Screen dimensions 768 by 576.
   OLD_TWITTER defined, LOW_MEM undefined. (OLD_TWITTER in this case will
   be ignored).
   
   Original JPEG 768 by 240.  Screen dimensions 768 by 576.
   OLD_TWITTER/NEW_TWITTER undefined, LOW_MEM undefined.
   
   Original JPEG 768 by 240.  Screen dimensions 768 by 576.
   OLD_TWITTER/NEW_TWITTER undefined, LOW_MEM defined.
   
   As above (all 4 of the above), but original JPEG of same dimensions as 
   the screen.
   
   Current setup:- 768 by 576 JPEG.  LOW_MEM undefined (i.e. twitter applied
                   before screen plot).  OLD_TWITTER defined.
                   
                   
Version 1.08, 18 September 1995:
-------------------------------                      

* Added keyboard flushing (see function main in main.c).

* Altered ReadDigitSequence() in display.c to ensure that the user receives
  immediate feedback.  In previous versions, the user received no feedback
  whilst !AudioCD was waiting for the possibility of a 2nd digit being
  entered.
  
  
Version 1.09, 02 October 1995:
-----------------------------         

* To eject using the handset the "Home" key is no longer used.  It has been
  replaced with the blue coloured button on the handset.  The screen display
  has been changed to reflect this, namely a blue coloured 'button' is 
  displayed above the eject button on the cd drawer itself (on screen).
  It was suggested that the eject button itself be coloured.  This would
  be inconsistant with all of the other buttons in that when a button is
  coloured, it means that something is happening.  The eject button 
  permanently being coloured would look odd.
  
* Help file updated to reflect replacement of the Home button on the handset
  with the blue button as described above.
  
* Addition of code within main() to ensure that when using the digit keys
  to change track, play of the current track stops almost immediately. 
  
* ErrorHandler() calls all checked and correct.  Addition of __LINE__
  usage.
  
* Keyboard auto-repeat turned off as part of !AudioCD's initialisation
  procedure.
  
* Troubleshooting section added to the help guide.

* FN_TRACE reporting corrected in window.c


Version 1.10, 03 October 1995:
----------------------------- 

* Conditional inclusion of SCREEN_DUMP code since three people have 
  recently asked for screen dumps. 
  
* Eject0 button now has a blue background and the previous blue button
  symbol directly above it has been removed.  When the button comes on
  the colours are reversed. 
  
* Invalid track numbers entered by the user are now fully displayed before 
  the player corrects the situation by returning to the previous valid 
  track.
  
* Removed toupper() conversion of incoming handset button presses.

* Conditional inclusion of KEYS code for use during development.
  Allows viewing of characters being fed into !AudioCD.
  
* Hourglass gets turned off as part of the initialisation procedure.

* Fixed the problem of play not resuming after an invalid track 
  selection (if it was in a state of play beforehand).
  
  
Version 1.11, 05 October 1995:
----------------------------- 

* Hourglass now gets turned off at the *end* of initialisation, i.e.
  after the !AudioCD screen has been plotted and all other initialisation
  is complete.
  
* Invalid track numbers disappear after a timeout period if the player is
  not in a state of play.  If it is in a state of play they disappear
  anyway.
  
* Response time for entering *valid* track numbers whilst in a state of
  play has been improved.
  
* !AudioCD no longer takes any notice of keys it doesn't recognise.  
  i.e. e.g. pressing an arrow key during play no longer results in play
  restarting from the beginning of the track again.  (This ignores any
  handset problems which are evident when firing button presses at the
  command line).
  
Version 1.12, 06 October 1995:
-----------------------------

* Hourglass gets turned on at the start of initialisation (and off 
  when initialisation is complete).  Previously, !cd left it on and it
  was up to the launched application to turn it off.
  
Version 1.13, 23 October 1995:
-----------------------------

* Keyboard buffer gets flushed as part of the initialisation process.

* The keyboard buffer is now flushed after each hand set key press.

* Fixed a piece of error checking code in InitButtonSprites().  
  
* Compact Disc Digital Audio logo removed, since it's use requires
  permission / licence from Philips.
  
* PlotButton("eject0") no longer necessary as part of the initialisation
  procedure, since the new "Player" JPEG now has a blue eject button.
  

Version 1.14,  25 October 1995:
------------------------------ 

* There was another cd logo on the drawer of the cd player.  Now removed.

Version 1.15,  25 October 1995:
------------------------------

* Player JPEG saved at a quality level of 90 to replace previous of 75.

* APART FROM THE JPEG JUST MENTIONED, THIS VERSION IS IDENTICAL TO VERSION
  1.12, 06-OCT-95.  Reason for doing this:- Versions 1.13 and 1.14 have not
  been as rigorously tested as version 1.12.  The files (apart from the
  JPEG) were taken from version 1.12 in the source filer.
  
* Version 1.15 of !AudioCD exists only in the source filer at the time of
  writing.  
  
Version 1.16, 01 December 1995:
------------------------------

* Note:- previously released version is 1.15.
       - previous version kept on my machine is 1.14, with the JPEG from
         1.15
       - this version really is the latest version.  
       - AudioCD.Doc.Help file removed, since this was only a crude user 
         guide and has been replaced with $.Build.Sources.GenericCD.
         UserGuide (which encompasses all the !cd apps).  Similarly,
         AudioCD.Doc.AudioUsrGd has been removed as it has now been 
         incorporated into the overall user guide. 
         
Version 1.17, 22 December 1995:
------------------------------

* Renamed "Doc" directory to "Documents".

* Updated "ToDo" list.

Version 1.18, 05 January 1996:
-----------------------------

* !AudioCD was exhibiting a problem which has seemingly been fixed by 
  moving the UARTDeviceDriver module from somewhere near the start of 
  the GenericCD components file, to the very end of the components file.
  The problem was that in a ROM environment (*only* in ROM), and *only*
  when not in a state of play, if you press a single digit track number,
  an 8 gets added, followed by a zero (sometimes in different builds it
  was a 2 instead of an 8).  Turning on error reporting and key tracing
  was no help because this got rid of the problem as well.  !PhotoCD did
  not seem to have this problem.  It wants looking at later on.  Version
  0.15 of the Generic CD ROM image (which I have on my "Released Software"
  MO disk) is faulty with this problem so can be used for later 
  investigation.  Building the GenericCD ROM image with the UART driver 
  excluded from the build also resulted in no errors.  There were no changes
  to !AudioCD itself in this release.  The only change was in the GenericCD
  components build file, and this file in describing the problem.
  
Version 1.19, 23 February 1996:
------------------------------  
  
* Help functionality added.

* Changed key variable definitions to macro definitions (e.g. PLAY, PAUSE ..).
  Also adopted naming convention whereby macros are of the form MACRONAME__
  if they're defined in common.h.
  
* Play() function now expects 'play_type', which is PLAY_TO_END_OF_CD__ or
  PLAY_TO_END_OF_TRACK__ as defined in common.h.
  
* Made SECONDS__ macro global in common.h since it is now used in more than
  one place.
  
* Can now press the RED handset key for random play.  Pressing STOP cancels
  randomness.  A new random table is created on each launch of !AudioCD.
  Random play mode was tested using the Morten Harkett "Wild Seed" cd.  All
  tracks on the cd were played once in random order and play finished 
  correctly on the last track with the stop button coming on for a split 
  second to indicate end of random play.
  
* Added fast forward but then removed it since it wasn't reliable 100% of the
  time.  This may or may not be due to cdfs.

* Altered the malloc() in GetLastTrackEndTime().  Only need to malloc 8 bytes.

* Altered the malloc() in GetLogicalBlockAddress().  Only need to malloc 5 
  bytes.
  
* Altered the malloc() in AudioData().  Only need 5 bytes.

* Added some code into GetLastTrackEndTime() to ensure that the last end time
  is indeed audio data.  In the past, the end time returned from cdfs has 
  been one frame (1/75th of a second) beyond the end of actual audio data.
  
* Updated the !AudioCD section of the User Manual. 

* Updated the ToDo list.

* Deleted the Handsets directory within Documents.  It was used to create
  the Help JPEG in the AudioCD.Resources directory.
  
* Prepared handover notes for whoever carries on with the cd apps (see
  Build.Sources.Trial.GenericCD.AudioCD.Documents.HandOver).
  
* Checked for memory leaks before release. 