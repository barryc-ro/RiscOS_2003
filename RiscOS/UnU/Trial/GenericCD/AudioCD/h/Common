/*=====================================================================================*/
/*                                                                                     */
/*  FILE:  !AudioCD.h.Common                                                           */
/*  DESCRIPTION:   Contains objects which are common to all or most of !cd.            */
/*  AUTHOR:  crose@omi.co.uk                                                           */
/*  MODIFICATION HISTORY:                                                              */
/*    Date         Name                Description                                     */
/*    ----         ----                -----------                                     */
/*                                                                                     */
/*=====================================================================================*/

#include "stdlib.h"

/*-------------------------------------------------------------------------------------*/
/*                                 MACRO DEFINITIONS                                   */
/*-------------------------------------------------------------------------------------*/

/* Minutes * 60 + seconds.                                                             */
#define SECONDS__(code)  ((code >> 16) & 0xFF) * 60 + ((code >> 8) & 0xFF)

/*  Handset controls.                                                                  */
#define PAUSE__ 0x86
#define BACK__ 0x85
#define PLAY__ 0x89
#define FORWARD__ 0x87
#define STOP__ 0xCB
#define EJECT__ 0x94
#define HELP__ 0x81
#define RANDOMIZE__ 0x91

#define PLOT_TO_SHADOW__ 1
#define PLOT_TO_SCREEN__ 2
#define FATAL__ 1
#define WARNING__ 0
#define LOGICAL_BLOCK_ADDRESSING__ 0
#define RED_BOOK_ADDRESSING__ 1
#define PHYSICAL_BLOCK_ADDRESSING__ 2
#define PLAY_TO_END_OF_CD__ 255
#define PLAY_TO_END_OF_TRACK__ 254
#define BROADCAST__ 0
#define TRUE__ 1
#define FALSE__ 0
#define OFF__ 0
#define ON__ 1

/* The definitions below should all be undefined upon final release.                   */
#undef DEVELOPMENT__       /* Defining DEVELOPMENT__ turns on error reporting.         */
#undef MEMORY_TRACE__      /* Defining MEMORY_TRACE__ turns on memory diagnostics.     */
#undef FN_TRACE__          /* Defining FN_TRACE__ turns on function tracing.           */
#undef SCREEN_DUMP__       /* Defining SCREEN_DUMP__ turns on screen dumping at        */
                           /* various stages of execution.                             */
#undef RANDOM__            /* Defining RANDOM__ turns on the random diagnostics, for   */
                           /* example the contents of the randomised track table.      */
#undef KEYS__              /* Defining KEYS__ makes !AudioCD print out the keys /      */
                           /* button presses it has received.                          */


/*-------------------------------------------------------------------------------------*/
/*      External function prototypes common to most of !AudioCD's source files.        */
/*-------------------------------------------------------------------------------------*/

extern void SignalCatcher(int code);
extern void ErrorHandler(char *file,int ln,char *fn, int errnum, char *mess, int level);
extern void Finish(void);

/*-------------------------------------------------------------------------------------*/
/*                                  Global Variables                                   */
/*-------------------------------------------------------------------------------------*/

#ifdef GLOBALS__
   char *cd_blk = NULL;
   char cd_task_handle[100];
   int audio_task_handle;
   int button_start_posx,button_width,separation,eject_x1,eject_x2,stop_x1,stop_x2,
       pause_x1,
       pause_x2,back_x1,back_x2,play_x1,play_x2,forward_x1,forward_x2,button_low_y,
       button_high_y;
   int text_area_x1,text_area_y1,text_area_width,text_area_height,track_text_area_x1,
       track_text_area_y1,time_text_area_x1,time_text_area_y1;
   int buttons_sprsize;
   char *buttons_sprarea = NULL;
   char *shadow_screen_base;
   int shadow_first_sprite_offset;
   int current_left = -1;
   int current_right = -1;
   int playing = FALSE__;
   int current_track = -1;  /* keep this global. */
   int *phys_tracks = NULL;
   int *start_times = NULL;
   int *end_times = NULL;
   int *poll_blk;
   char *counter_display_shadowsprite = NULL;
   int hBackgroundWindow = NULL;

   #ifdef SCREEN_DUMP__
      int screen = 0;
      char dump_file[100];
   #endif

#endif

