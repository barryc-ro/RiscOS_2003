        GET     h.regdefs
        GET     h.swinos
        GET     h.macros
;
        PREAMBLE

stridelp DCD (200 * 256 * 2 - 40)
strideln DCD (200 * 213 * 2 - 40)
striderp DCD (200 * 256 * 2 + 40)
stridern DCD (200 * 213 * 2 + 40)
; start   DCD 0
; temp    DCD 0
; line    DCD 0
; screen  DCD 0

        STARTCODE  shift_block_right

        STMFD   r13!, {r2-r12, lr}
        MOV     r11, #(100 / 10)
;        MOV     r10, r2               ; Frig for half field?
        STMFD   r13!, {r3}             ; screen   [r13, #12]
        ADD     r0, r0, #(768 * 2)
        ADD     r10, r0, r2
        STMFD   r13!, {r0}             ; start    [r13, #8]
        STMFD   r13!, {r0}             ; line     [r13, #4]
        ADD     r1, r1, #(200 * 2)
        STMFD   r13!, {r1}             ; temp     [r13, #0]
andagainr        
        LDR     r2, [r13, #8]
        STR     r2, [r13, #4]
;        MOV     r2, r0
        LDR     r8, [r13, #12]
        CMP     r8, #0
;        MOVEQ   r8, #256              ; Frig for half field?
        MOVEQ   r8, #256
        MOVNE   r8, #213

nextrowr        
        SUB     r3, r2, #40
        MOV     r9, #((768 / 20))
bodyrowr
        LDMDB   r3!, {r0, r4-r7}
        STMDB   r2!, {r0, r4-r7}
        LDMDB   r3!, {r0, r4-r7}
        STMDB   r2!, {r0, r4-r7}
        SUBS    r9, r9, #1
        BGT     bodyrowr
        ADD     r2, r2, #24
        LDR     r1, [r13, #0]
        ADD     r4, r1, #(200 * 2 * 2)
        STR     r4, [r13, #0]
        LDMDB   r1!, {r0, r4-r7}
        STMDB   r2!, {r0, r4-r7}
        LDMDB   r1!, {r0, r4-r7}
        STMDB   r2!, {r0, r4-r7}

        SUB     r8, r8, #1
        CMP     r8, #128
        BEQ     nextfieldr
        CMP     r8, #0
        LDRNE   r2, [r13, #4]
;        ADDNE   r2, r2, r10          ; Frig for half field?
        ADDNE   r2, r2, #(768 * 2)
        STRNE   r2, [r13, #4]
        BNE     nextrowr

        LDR     r0, [r13, #12]
        LDR     r1, [r13, #0]
        CMP     r0, #0
        LDREQ   r4, striderp
        LDRNE   r4, stridern
        SUB     r1, r1, r4
        SUB     r1, r1, #(200 * 2)
        STR     r1, [r13, #0]
        SUBS    r11, r11, #1
        BNE     andagainr

        LDMFD   r13!, {r2-r5}
        LDMFD   r13!, {r2-r12, pc}

nextfieldr
        LDR     r0, [r13, #12]
        LDR     r1, [r13, #0]
        LDREQ   r4, striderp
        LDRNE   r4, stridern
        SUB     r4, r4, #40
        SUB     r1, r1, r4
        ADD     r4, r1, #(200 * 2)
        STR     r4, [r13, #0]
        MOV     r2, r10
        STR     r2, [r13, #4]
        B       nextrowr


        STARTCODE  shift_block_left

        STMFD   r13!, {r2-r12, lr}
        MOV     r11, #(100 / 10)
        STMFD   r13!, {r3}             ; screen   [r13, #12]
        MOV     r10, r2
;        SUB     r10, r2, #(768 * 2)
        STMFD   r13!, {r0}             ; start    [r13, #8]
        STMFD   r13!, {r0}             ; line     [r13, #4]
        STMFD   r13!, {r1}             ; temp     [r13, #0]
andagainl        
;        MOV     r0, #19
;        SWI     SWI_OS_Byte
        LDR     r2, [r13, #8]
        STR     r2, [r13, #4]
;        MOV     r2, r0
        LDR     r8, [r13, #12]
        CMP     r8, #0
        MOVEQ   r8, #256
        MOVNE   r8, #213

nextrowl        
        ADD     r3, r2, #40
        MOV     r9, #((768 / 20))
bodyrowl
        LDMIA   r3!, {r0, r4-r7}
        STMIA   r2!, {r0, r4-r7}
        LDMIA   r3!, {r0, r4-r7}
        STMIA   r2!, {r0, r4-r7}
        SUBS    r9, r9, #1
        BGT     bodyrowl
        SUB     r2, r2, #24
        LDR     r1, [r13, #0]
        ADD     r4, r1, #(200 * 2)
        STR     r4, [r13, #0]
        LDMIA   r1!, {r0, r4-r7}
        STMIA   r2!, {r0, r4-r7}
        LDMIA   r1!, {r0, r4-r7}
        STMIA   r2!, {r0, r4-r7}

        SUBS    r8, r8, #1
        LDR     r2, [r13, #4]
        ADDNE   r2, r2, r10
        STR     r2, [r13, #4]
        BNE     nextrowl

        LDR     r0, [r13, #12]
        LDR     r1, [r13, #0]
        CMP     r0, #0
        LDREQ   r4, stridelp
        LDRNE   r4, strideln
        SUB     r1, r1, r4
        STR     r1, [r13, #0]
        SUBS    r11, r11, #1
        BNE     andagainl

        LDMFD   r13!, {r2-r5}
        LDMFD   r13!, {r2-r12, pc}
        
        END
