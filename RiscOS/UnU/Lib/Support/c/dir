#include "os.h"
#include "osgbpb.h"

#include "dir.h"

os_error *dir_iterate (int filec, char *filev [],
      dir_iterator *iterator, bits filter)

{  int context, file;
   os_error *error = NULL;
   osgbpb_INFO_STAMPED (os_FILE_NAME_LIMIT + 1) info;

   for (file = 0; file < filec && filev [file] != NULL; file++)
   {  context = 0;
      while (TRUE)
      {  if ((error = xosgbpb_dir_entries_info_stamped (argl.directory,
               (osgbpb_info_stamped_list *) &info, 1, context,
               sizeof info, "*", NULL, &context)) != NULL)
           goto finish;
         if (context == osgbpb_NO_MORE) break;

         if ((1 << info.obj_type & filter) != NONE)
            if ((error = (*iterator) (info.name, info.file_type)) !=
                  NULL)
               goto finish;
      }
   }

finish:
   return error;
}
