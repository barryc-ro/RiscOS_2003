/*
 * $Header$
 * $Source$
 *
 * Copyright (c) 1988 Acorn Computers Ltd., Cambridge, England
 *
 * $Log$
 * Revision 1.1  95/01/11  10:19:36  kwelton
 * Initial revision
 * 
 * Revision 1.4  88/08/10  18:35:24  brian
 * Definitions of BKPT_SWI and SSHOT_SWI brought into line with the new
 * layout of SWI numbers.
 * 
 * Revision 1.3  88/06/17  20:20:32  beta
 * Acorn Unix initial beta version
 * 
 */
/* @(#)ptrace.h	1.2 87/05/15 3.2/4.3NFSSRC */
/*
 * Copyright (c) 1980, 1986 Regents of the University of California.
 * All rights reserved.  The Berkeley software License Agreement
 * specifies the terms and conditions for redistribution.
 *
 *	@(#)ptrace.h	7.1 (Berkeley) 6/4/86
 */

#ifndef _PTRACE_
#define _PTRACE_

/*
 * Machine dependent constants
 */
#ifdef KERNEL
#include "../arm/trap.h"
#else
#include <arm/trap.h>
#endif

#define PT_TRACE_ME	0	/* child declares it's being traced */
#define PT_READ_I	1	/* read word in child's I space */
#define PT_READ_D	2	/* read word in child's D space */
#define PT_READ_U	3	/* read word in child's user structure */
#define PT_WRITE_I	4	/* write word in child's I space */
#define PT_WRITE_D	5	/* write word in child's D space */
#define PT_WRITE_U	6	/* write word in child's user structure */
#define PT_CONTINUE	7	/* continue the child */
#define PT_KILL		8	/* kill the child process */
#define PT_STEP		9	/* single step the child */

/*
 *	This file contains definitions of SWI instructions used in the
 *	ptrace system call.
 *
 *	The following SWI is the standard one which debuggers plant in the
 *	instruction stream to set a breakpoint.
 */

#define	BKPT_SWI	(0xEF000000 | SWI_OS_UNIX | SWI_PTRACE)

/*
 *	The following SWI is planted automatically by the kernel to simulate
 *	single-shotting.
 */

#define	SSHOT_SWI	(0xEF000001 | SWI_OS_UNIX | SWI_PTRACE)

#endif

/* EOF ptrace.h */
