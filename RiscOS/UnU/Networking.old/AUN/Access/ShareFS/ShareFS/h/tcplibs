/* -*-C-*-
 *
 * $Header$
 * $Source$
 *
 * Copyright (c) 1995 ANT Ltd., Cambridge, England
 *
 * $Log$
 * Revision 1.1  95/01/09  15:13:29  kwelton
 * Initial revision
 * 
 */

/* $Id$ */
#define __time_t 1
#define __clock_t 1
#include "sys/types.h"
#include "sys/time.h"

#include "netinet/in.h"
#include "sys/socket.h"
#include "sys/ioctl.h"
#include "netdb.h"
#include "sys/errno.h"
#include "net/if.h"
extern int errno;
int socket(int domain, int type, int protocol);
int bind(int socket, struct sockaddr *name, int namelen);
int connect(int socket, struct sockaddr *name, int namelen);
int listen(int socket, int maxwait);
int accept(int socket, struct sockaddr *name, int *namelen);
int socketwrite(int socket, void *buf, int buflen);
int socketread(int socket, void *buf, int buflen);
int send(int socket, void *buf, int buflen, int flags);
int secv(int socket, void *buf, int buflen, int flags);
int sendto(int socket, void *buf, int buflen, int flags, struct sockaddr *to, int tolen);
int recvfrom(int socket, void *buf, int buflen, int flags, struct sockaddr *from, int *fromlen);
int socketclose(int socket);
int shutdown(int socket, int how);
int select(int nfds, fd_set *readmask, fd_set *writemask, fd_set *exceptmask, struct timeval *timeout);
int socketioctl(int socket, int what, void *param);
int setsockopt(int socket, int level, int optname, void *optval, int optlen);
int getsockopt(int socket, int level, int optname, void *optval, int *optlen);
int gethostname(char *name,int namelen);
unsigned long inet_addr(char *cp);
unsigned long inet_network(char *cp);
char *inet_ntoa(struct in_addr in);
struct in_addr inet_makeaddr(int net, int lna);
int inet_lnaof(struct in_addr in);
int inet_netof(struct in_addr in);

/* Event routine is called with: */
/* r[0] */
#define Internet_Event 19
/* r[1] */
#define Socket_Async_Event 1    /* input/accept waiting - SIGIO */
#define Socket_Urgent_Event 2   /* Out of Band data - SIGURG */
#define Socket_Broken_Event 3   /* Broken connection - SIGPIPE */
/* r[2] - socket */

/* EOF tcplibs.h */
