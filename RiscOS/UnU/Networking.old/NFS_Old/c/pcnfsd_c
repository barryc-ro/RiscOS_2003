/*	PCNFSD

Purpose :

History :
Date	Who    Comments
-----------------------------------------------------------------------------

10/02/95  CP    Added code to increment network access counter
****************************************************************************/
#include <rpc/rpc.h>
#include <sys/time.h>
#include "h.pcnfsd"

#ifdef NETACCESSCOUNT
extern unsigned int NetAccessCountG;
#endif


static struct timeval TIMEOUT = { 25, 0 };

void *
pcnfsd_null_1(argp, clnt)
        void *argp;
        CLIENT *clnt;
{
        static char res;

        bzero(&res, sizeof(res));

#ifdef NETACCESSCOUNT
NetAccessCountG++;
#endif
        if (clnt_call(clnt, PCNFSD_NULL, xdr_void, argp, xdr_void, &res, TIMEOUT) != RPC_SUCCESS) {
                return (NULL);
        }
        return ((void *)&res);
}


auth_results *
pcnfsd_auth_1(argp, clnt)
        auth_args *argp;
        CLIENT *clnt;
{
        static auth_results res;

        bzero(&res, sizeof(res));

#ifdef NETACCESSCOUNT
NetAccessCountG++;
#endif
        if (clnt_call(clnt, PCNFSD_AUTH, xdr_auth_args, argp, xdr_auth_results, &res, TIMEOUT) != RPC_SUCCESS) {
                return (NULL);
        }
        return (&res);
}


pr_init_results *
pcnfsd_pr_init_1(argp, clnt)
        pr_init_args *argp;
        CLIENT *clnt;
{
        static pr_init_results res;

        bzero(&res, sizeof(res));

#ifdef NETACCESSCOUNT
NetAccessCountG++;
#endif
        if (clnt_call(clnt, PCNFSD_PR_INIT, xdr_pr_init_args, argp, xdr_pr_init_results, &res, TIMEOUT) != RPC_SUCCESS) {
                return (NULL);
        }
        return (&res);
}


pr_start_results *
pcnfsd_pr_start_1(argp, clnt)
        pr_start_args *argp;
        CLIENT *clnt;
{
        static pr_start_results res;

        bzero(&res, sizeof(res));

#ifdef NETACCESSCOUNT
NetAccessCountG++;
#endif
        if (clnt_call(clnt, PCNFSD_PR_START, xdr_pr_start_args, argp, xdr_pr_start_results, &res, TIMEOUT) != RPC_SUCCESS) {
                return (NULL);
        }
        return (&res);
}

