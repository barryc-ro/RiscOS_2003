                ;           ;
                AREA        FilingSystem, CODE, READONLY

                GET     Hdr:ListOpts
                GET     Hdr:Macros
                GET     Hdr:System
                GET     Hdr:ModHand
                GET     Hdr:HostFS
                GET     Hdr:NdrDebug
;                GET     Hdr:DDVMacros
;                GET     Hdr:UpCall
                GET     Hdr:MsgTrans
                GET     Hdr:ResourceFS
                GET     Hdr:DeviceFS
                GET     Hdr:Buffer

                GET         a.debuga
                GET         a.defs+ws
                GET         a.fs
                GET         a.swiextra
                GET         a.error

                IMPORT      txbuffer_process
                IMPORT      MakeError

                EXPORT      fs_entry

; Main DeviceFS entry point
; r8  =  private word (unused)
; r12 -> beginning of workspace

fs_entry
 [ debug
                debuga_outs  "SoundFS: Entered from DeviceFS, "
                debuga_outx2 r0
                debuga_outnl
 ]
                BIC         lr, lr, #V_bit
                CMP         r0, #(%20-%10)/4     ; validate reason code
                ADDCC       pc, pc, r0, LSL #2   ; despatch
                B           unsupported ; don't give an error
10
                B           initialise
                B           finalise
                B           wake_tx
                B           unsupported ; wake_rx
                B           unsupported ; sleep_rx
                B           unsupported ; enum_dir
                B           create_tx_buffer
                B           unsupported ; create_rx_buffer
                B           halt
                B           resume
                B           end_of_data
                B           stream_created
 [ CallbackHack
                B           monitor_tx
 |
                B           unsupported
 ]
                B           unsupported
                B           ioctl
wake_tx
                MOV         r0, #0
20
unsupported
                MOVS        pc, lr



initialise      ROUT
;
;Entry:
;  R0  =  0
;  R2  =  DeviceFS stream handle
;  R3  =  flags: bit 0 clear for RX, set for TX
;  R6  -> special field (currently unused)
;
;Exit:
;  R2  =  device _driver_ stream handle
;
; currently we indicate that we have no RX devices so we should never be
; called with bit 0 of R0 clear
;
                ;           ;
                STMFD       sp!, {r0-r1, r3-r4, lr}

 [ debug
                debuga_outs "SoundFS: stream handle "
                debuga_outx r2
 ]
                MOV         r4, r2
                MOV         r0, #OS_Module_Claim
                MOV         r3, #FS_StreamSize
                SWI         XOS_Module ; get new stream info block
                LDMVSFD     sp!, {r0-r1, r3-r4, pc}
 [ debug

                debuga_outs ", device info at "
                debuga_outx r2
                debuga_outnl
 ]
                STR         r12, [r2,  #FS_Workspace]

; insert stream info block at beginning of the list
                LDR         r1,  [r12, #TxStreamList]
                STR         r1,  [r2,  #FS_StreamNext]
                STR         r2,  [r12, #TxStreamList]
                MOV         r0, #0
                STR         r0,  [r2, #FS_SizeLastProcess]
                STR         r0,  [r2, #FS_LastSample]
                LDR         r0, =CDSampleRate
                STR         r0,  [r2, #FS_SampleRate] ; default rate
                LDMFD       sp!, {r0-r1, r3-r4, pc}^

finalise        ROUT
;
;Entry:
;  R0  =  1
;  R2  =  Device driver stream handle, or 0 for all streams

                STMFD       sp!, {r0-r5, lr}

 [ debug

                debuga_outs "SoundFS: finalising "
                debuga_outx r2
                debuga_outnl
 ]
                MOV         r3, r2 ; r3 = handle to finalise
                ADD         r4, r12, #TxStreamList
                LDR         r2, [r4]
                CMP         r3, #0
                BEQ         %FT50

                CMP         r2, #0
                BEQ         %FT90
20
                CMP         r3, r2 ; is this the one?
                LDR         r1, [r2, #FS_StreamNext] ; get next
                STREQ       r1, [r4] ; write next into last
                MOVEQ       r0, #OS_Module_Free ; free
                SWIEQ       XOS_Module          ; current
                CMPNE       r1, #0
                BEQ         %FT90
                ADD         r4, r2, #FS_StreamNext ; where was next stored in current?
                MOV         r2, r1 ; use next as current
                B           %BT20
50
                CMP         r2, #0
                BEQ         %FT90
70
                LDR         r1, [r2, #FS_StreamNext]
                MOV         r0, #OS_Module_Free ; free
                SWI         XOS_Module          ; current
                CMP         r1, #0
                MOV         r2, r1
                BNE         %BT70
90
                LDMFD       sp!, {r0-r5, pc}^

create_tx_buffer ROUT
;
;Entry:
;  R0  =  6
;  R2  =  device driver stream handle
;  R3  =  suggested BufferManager flags
;  R4  =  suggested size
;  R5  =  suggested buffer handle
;  R6  =  suggested threshold
;
; Exit:
;  R3 - R6 modified as per

                MOV         pc, lr

;create_rx_buffer ROUT
;
;Entry:
;  R0  =  6
;  R2  =  device driver stream handle
;  R3  =  suggested BufferManager flags
;  R4  =  suggested size
;  R5  =  suggested buffer handle
;  R6  =  suggested threshold
;
; Exit:
;  R3 - R6 modified as per

;                MOV         pc, lr

halt            ROUT

                MOV         pc, lr

resume          ROUT

                MOV         pc, lr

end_of_data     ROUT
;
;Entry:
;  R0  =  10
;  R2  =  device driver stream handle
;  R3  =  -1
;
;Exit:
;  R0  != 0

; deinstall sound handlers

                STMFD       sp!, {r0, lr}

                LDR         r0, [r2,  #FS_ProcessHandler]
 [ debug
                debuga_outs "SoundFS: end of data, remove shared sound handler"
                debuga_outchar 32
                debuga_outx r0
                debuga_outnl
 ]
                SWI         XSharedSound_RemoveHandler
 [ debug
                debuga_outs "SoundFS: end of data, removed shared sound handler"
                debuga_outnl
 ]

                LDMFD       sp!, {r0, pc}

stream_created  ROUT
;
;Entry:
;  R0  =  11
;  R2  =  device driver stream handle
;  R3  =  buffer handle (-1 if none)

;                 MOVS   pc, lr

                STMFD       sp!, {r0-r5, lr}
 [ debug
                debuga_outs  "SoundFS: buffer handle "
                debuga_outx  r3
 ]
                STR         r3, [r2, #FS_TxBufferHandle]
                MOV         r5, r2
; get info for buffer (in - tx)
                MOV         r0, r3
                SWI         XBuffer_InternalInfo
                LDMVSFD     sp!, {r0-r5, pc}
; r0 = buffer id
; r1 = buffer mgr entry point
; r2 = buffer mgr r12
 [ debug
                debuga_outs  ", buffer ID "
                debuga_outx  r0
                debuga_outnl
 ]
                STR         r0, [r5,  #FS_TxBufferID]
                STR         r1, [r12, #BufferEntry] ; keep storing it whatever: as fast a solution as any other
                STR         r2, [r12, #BufferR12]
                STMFD       lr, {r0-r2} ; store info in master data structure

; install a processing handler

                LDR         r0, =txbuffer_process
                MOV         r1, r5
                MOV         r2, #SharedSound_InstallHandler_UseTypeInR4Flag
                LDR         r3, =Module_Title
 [ UseInterrupts
                MOV         r4, #SharedSound_InstallHandler_Interrupt;SharedSound_InstallHandler_Callback;SharedSound_InstallHandler_Interrupt;
 |
                MOV         r4, #SharedSound_InstallHandler_Callback
 ]
 [ debug
                debuga_outs  "SoundFS: about to install handler with SharedSound "
                debuga_outx r0
                debuga_outchar 32
                debuga_outx r1
                debuga_outchar 32
                debuga_outx r2
                debuga_outchar 32
                debuga_outx r3
                debuga_outchar 32
                debuga_outx r4
                debuga_outchar 32
                debuga_outnl
 ]
                SWI         XSharedSound_InstallHandler
                STRVC       r0, [r5,  #FS_ProcessHandler]
 [ debug
                debuga_outs  "SoundFS: installed handler with SharedSound "
                debuga_outchar 32
                debuga_outx r0
                debuga_outnl
 ]
                LDMFD       sp!, {r0-r5, pc}^

ioctl           ROUT
;
; Entry
;   r0  =  14
;   r1  =  file handle
;   r2  =  stream handle
;   r3  -> ioctl parameter block:
;

                STMFD       sp!, {r0, r1, r3, lr}

                LDR         lr, [r3, #FS_IOCTL_Reason]
 [ debug
                debuga_outs  "SoundFS: there's an IOCTL, "
                debuga_outx lr
                debuga_outnl
 ]

                AND         r0, lr, #&00ff0000 ; get group
                TEQ         r0, #FS_IOCTL_Reason_SoundFSGroup :SHL: 16

                BICEQ       r0, lr, #&ff000000
                BICEQ       r0, r0, #&00ff0000
                TEQEQ       r0, #FS_IOCTL_Reason_AudioInfoRC
                LDMNEFD     sp!, {r0, r1, r3, pc}^

 [ debug
                debuga_outs  "SoundFS: it's our IOCTL"
                debuga_outnl
 ]
                LDR         r3, [r3, #FS_IOCTL_Data]

                TST         lr, #FS_IOCTL_Reason_ReadFlag

                LDRNE       r1, [r2, #FS_SampleRate]
                LDR         r0, [r3, #FS_IOCTL_Rate]
                STRNE       r1, [r3, #FS_IOCTL_Rate]

                TST         lr, #FS_IOCTL_Reason_WriteFlag
                LDMEQFD     sp!, {r0, r1, r3, pc}^

                LDR         r4, =CDSampleRate
                TEQ         r0, r4
                TEQNE       r0, r4, LSR #1

                LDMNEFD     sp!, {r0, r1, r3, lr}
                ADRNE       r0, ErrorBlock_SoundFS_UKRate     ; ERROR!
                BNE         MakeError


                STR         r0, [r2, #FS_SampleRate]
 [ DoTranslation
                LDR         r0, [r3, #FS_IOCTL_Encoding]
                STR         r0, [r2, #FS_Encoding]
 ]
                LDMFD       sp!, {r0, r1, r3, pc}^

                MakeErrorBlock SoundFS_UKRate

; Horrible hack which pops us into user mode, calls a SWI to do nothing
; (well nothing important) which returns to user mode, allowing callbacks
; to go off before we return to SVC mode.


 [ CallbackHack
monitor_tx

                STMFD       sp!, {r0, r1, lr}
 [ {FALSE};debug
                debuga_outs  "SoundFS: monitor TX called, pc = "
                debuga_outx   pc
                debuga_outnl
 ]
                TEQP        pc, #0 ; enter user mode
                MOV         r0, r0
                MOV         r1, #1
                MOV         r0, #0
                SWI         OS_Byte
                SWI         OS_EnterOS

                LDMFD       sp!, {r0, r1, pc}
 ]
                END
