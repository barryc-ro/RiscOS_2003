
This file contains additional notes for Build-Masters on the changes
to the build structure introduced for RISC OS 3.71.

Contents:

  Background
  Rebuilding
  ROM
  Disc
  ARM810


Background
----------

The RISC OS 3.71 tree is an update of the RISC OS 3.70 tree from
CDROM.  The SrcFiler was not used; see Changes.371 directory
for change logs.

The purpose of the changes is:

  1) Support production StrongARM Risc PCs (POST now supported)

  2) Support A7000s fitted with 7500FE and EDO RAM.

  3) Incorporate ARM810 support into the source, but switched
     out (this was done to avoid source split as a result of
     the ARM810 work for ARM).


Rebuilding
----------

Rebuilding can proceed as in the main Readme, but see !ReadMe370
for important extra considerations since 3.70.


ROM
---

No extra structures were added. See Changes.371 for detailed info.


Disc
----

Unlike 370 (floppy based update required), the 371 work included
a full disc build. The disc build is designed to support StrongARM
Risc PCs fitted with either 3.70 or 3.71 ROMs, and A7000s fitted
with 7500FE. It should support some older configurations, but this
is not tested.

Additional structures:

  - Bookworm and HTML manual added to Apps.


ARM810
------

The ARM810 support is in the source but switched out; no audit has
taken place with ARM810 support switched in.

To enable ARM810 support, set "ARM810support" true in the following
modules (really must get round to globalising some flags):

  Kernel
  ARM
  ADFS
  SoundDMA (Sound0)

Because of various bugs with the 1st spin of ARM810 silicon, and
also some configuration details, there are additional flags in the
kernel:

  - ARM810bpbroken
    {TRUE} if branch prediction cannot be used. 1st spin has some
    problems if this is {FALSE}

  - ARM810cleanflushbroken
    {TRUE} if the single MCR to clean and flush a cache entry
    cannot be used. 1st spin cannot have this {FALSE}. What the
    code does with this {TRUE} (cleans+flushes with interupts on)
    should be fine when the silicon works, but obviously isn't
    tested.

  - ARM810fastclock
    Set {TRUE} to select fast clock. Needs to be {FALSE} if ROM
    cannot assume the type of clock fitted to ARM810 header card.

  - ARM810usePLL
    Set {TRUE} for fast clock to be PLL, else reference clock.

  - ARM810_POST
    Must be {FALSE} currently (the POST code has not been fixed
    to properly support 810).

Note that considerable FIB fixes must be made to 1st spin silicon
before RISC OS will work, even with the above workarounds.

mjs 12 Mar 97
