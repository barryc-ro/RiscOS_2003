; File:    circlist.s
; Purpose: Test circular lists in IOMD2
; Author:  Timothy Roddis
; History: 20-Feb-1998: TGR: created
;
                            ;
CIRCLIST_TESTSTART_MESS
    DCB     "TUBE:Circular list routing test beginning",&0
CIRCLIST_TESTEND_MESS
    DCB     "TUBE:Circular list routing test completed",&0
CIRCLIST_TESTPASS_MESS
    DCB     "TUBE:Circular list routing test PASSED",0
CIRCLIST_ROUTECLR_FAIL_MESS
   DCB      "TUBE:Circular list FAILED; interrupts reportes erroneously", 4, 0
CIRCLIST_ROUTESETEMPTY_FAIL_MESS
   DCB      "TUBE:Circular list FAILED to route 'empty' correctly", 4, 0
CIRCLIST_ROUTESETNOTEMPTY_FAIL_MESS
   DCB      "TUBE:Circular list FAILED to route 'notempty' correctly", 4, 0
CIRCLIST_ROUTESETFULL_FAIL_MESS
   DCB      "TUBE:Circular list FAILED to route 'full' correctly", 4, 0
CIRCLIST_ROUTESETLEVEL_FAIL_MESS
   DCB      "TUBE:Circular list FAILED to route 'level' correctly", 4, 0

;CIRCLIST_STATUSSTRING_PTRS
;    DCD


        ALIGN

list_dat      *        0
list_enbl     *        list00enbl-list00dat
list_level    *        list00level-list00dat
list_stat     *        list00stat-list00dat

int_empty     *        1
int_notempty  *        2
int_full      *        4
int_level     *        8

level1        *        5
level2        *        9

              GBLA     i

;; Start of the actual semaphore test code
CIRCLISTRT_TEST ROUT

        ;; Send test starting message
        LDR     R0,=CIRCLIST_TESTSTART_MESS
        LDR     R10,=fasttube
        STR     R0,[R10]

; Start testing sequence

;----------------------------------------------------------------------------
; test interrupt routing

; interrupt ids:
;
;  000 - irq 0  |  010 - irq 2  |  100 - irq 4  |  110 - irq 6
;  001 - irq 1  |  011 - irq 3  |  101 - irq 5  |  111 - irq 7
;

        MOV     r5, #0         ; r5 is current list _number_

        LDR     r6, =intstat
        STR     r5, [r6, #4]   ; write zero to request

        LDR     r6, =list00dat ; r6 is pointer to base list
        LDR     r7, =cliea     ; r7 -> clist interrupt routing tables
        LDR     r8, =intstatmon

50
; loop
        ADD     r0, r6, r5, LSL #4 ; r0 -> current list (r6 + r5 * 16)



        MOV     r4, #0 ; r4 is interrupt id

60

        AND     r2, r5, #&1        ; r2 := shift to be applied to list number
        ADD     r2, r2, r2, LSL #1 ; to get bit position in cliea .. clied
        MOV     r2, r2, LSL #2     ; essentially a multiply by 12 after masking

        MOV     r3, r4, LSL r2 ; r3 := routing info (all other lists zero) for
                               ;       relevant word of table

        ORR     r3, r3, r3, LSL #3 ; OR it into each of the positions
        ORR     r3, r3, r3, LSL #6 ; for that list

        MOV     r2, r5, LSR #1      ; get word number

        STR     r3, [r7, r2, LSL #2] ; write routing info into correct routing word

70
        MOV     r1, #&0              ; disable all interrupts:
        STR     r1, [r0, #list_enbl]

; check no interrupts set


        LDRB    r2, [r8] ; get dodgy model interrupt status monitor
        TEQ     r2, #&ff
        LDRNE   r12, =CIRCLIST_ROUTECLR_FAIL_MESS
        BNE     CIRCLIST_TESTEND

; test empty (0001) and level    (1000)
; then full  (0100) and notempty (0010)

        MOV     r1, #int_empty       ; enable 'empty' only
        STR     r1, [r0, #list_enbl]

        LDRB    r2, [r8] ; get dodgy model interrupt status monitor
        MOV     r3, #1
	MOV	r3, r3, LSL r4
	EOR	r3, r3, #&ff
        TEQ     r2, r3
        LDRNE   r12, =CIRCLIST_ROUTESETEMPTY_FAIL_MESS
        BNE     CIRCLIST_TESTEND

        LDR     r1, [r0] ; make list 'not empty' / 'full' : CHEAT

        MOV     r1, #int_notempty       ; enable 'not empty' only
        STR     r1, [r0, #list_enbl]

        LDRB    r2, [r8] ; get dodgy model interrupt status monitor
        MOV     r3, #1
	MOV	r3, r3, LSL r4
	EOR	r3, r3, #&ff
        TEQ     r2, r3
        LDRNE   r12, =CIRCLIST_ROUTESETNOTEMPTY_FAIL_MESS
        BNE     CIRCLIST_TESTEND

        MOV     r1, #int_full      ; enable 'full' only
        STR     r1, [r0, #list_enbl]

        LDRB    r2, [r8] ; get dodgy model interrupt status monitor
        MOV     r3, #1
	MOV	r3, r3, LSL r4
	EOR	r3, r3, #&ff
        TEQ     r2, r3
        LDRNE   r12, =CIRCLIST_ROUTESETFULL_FAIL_MESS
        BNE     CIRCLIST_TESTEND

        STR     r1,[r0]

        MOV     r1, #int_level      ; enable 'full' only
        STR     r1, [r0, #list_enbl]

        LDRB    r2, [r8] ; get dodgy model interrupt status monitor
        MOV     r3, #1
	MOV	r3, r3, LSL r4
	EOR	r3, r3, #&ff
        TEQ     r2, r3
        LDRNE   r12, =CIRCLIST_ROUTESETLEVEL_FAIL_MESS
        BNE     CIRCLIST_TESTEND

        ADD     r4, r4, #1
        CMP     r4, #7
        BLE     %BT60

        MOV     r1, #0               ; disable interrupts so as not to
        STR     r1, [r0, #list_enbl] ; interfere with other lists' tests

        ADD     r5, r5, #1
        CMP     r5,#7
        BLE     %BT50

        LDR     r12,=CIRCLIST_TESTPASS_MESS

CIRCLIST_TESTEND
        LDR     R10,=fasttube
        STR     R12,[R10]

        ;; Send test complete message
        LDR     R0,=CIRCLIST_TESTEND_MESS
        LDR     R10,=fasttube
        STR     R0,[R10]

        ; Unstack return address
        MOV     PC,LR

CIRCLIST_TEST_DATA

        DCD     &76543210
        DCD     &89abcdef

	LTORG

        END

