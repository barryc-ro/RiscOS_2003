;	--------------------------------------------
; 	© Acorn Computers Ltd. 1998
;
; 	IOMD2 Multiplex signals from IO cycle generator test
;	--------------------------------------------
;	Steve Taylor
;
;	0.0a	04.03.98	initial
;	0.0b	10.03.98	Change to fasttube output instead of tube,
;				implemented continue_after_error switching
;	0.0c	11.03.98	Spotted some out-of-date procedures, fixed
;				them. Moved data to end of code
;	0.0d	24.03.98	Implemented new &68xxxxxx error register addresses
;				Also a common initialisation code sequence will have been added
;				at the integration stage






;	------------------------------------------------
;	Writes a message to Tube
;	Requires that tube_defin has been Got beforehand
;	------------------------------------------------

	MACRO
$tubewrm	write_message	$message

$tubewrm
	LDR	r12, =$message		; Pointer to message
	LDR	r11, =fasttube		; Pointer to the FastTube address
	STR	r12,[r11]		; Send the message

	MEND


iomux_start_devsel0_300
	DCB	"TUBE:IOMUX About to start test from devsel(0) 300"
	DCB	0
iomux_start_devsel0_303
	DCB	"TUBE:IOMUX About to start test from devsel(0) 303"
	DCB	0
iomux_start_devsel1
	DCB	"TUBE:IOMUX About to start test from devsel(1)"
	DCB	0
iomux_start_devsel2
	DCB	"TUBE:IOMUX About to start test from devsel(2)"
	DCB	0
iomux_start_devsel2_tc
	DCB	"TUBE:IOMUX About to start test from devsel(2) tc"
	DCB	0
iomux_start_devsel3
	DCB	"TUBE:IOMUX About to start test from devsel(3)"
	DCB	0
iomux_start_devsel4
	DCB	"TUBE:IOMUX About to start test from devsel(4)"
	DCB	0
iomux_start_devsel5
	DCB	"TUBE:IOMUX About to start test from devsel(5)"
	DCB	0
iomux_start_devsel6
	DCB	"TUBE:IOMUX About to start test from devsel(6)"
	DCB	0
iomux_start_devsel7
	DCB	"TUBE:IOMUX About to start test from devsel(7)"
	DCB	0

iomux_verifyfailed
	DCB	"TUBE:IOMUX Data verify failed"
	DCB	CONTINUE_AFTER_ERROR,0
iomux_modelerror
	DCB	"TUBE:IOMUX Data verify failed"
	DCB	CONTINUE_AFTER_ERROR,0

	ALIGN

	MACRO
	iomux_testcase	$startmsg, $addr, $error, $width

	write_message	$startmsg		; write the message for the start of this test case

	ldr	r2, =$addr
	ldr	r5, =$error

	ldr	r1, =testpattern

	str	r1, [r2]
	ldr	r3, [r2]

 [ "$width"="halfword"
	mov	r1, r1, lsr #16
	orr	r1, r1, #&ff000000
	orr	r1, r1, #&00ff0000
 ]

	teqs	r1, r3

	beq	%FT10

	write_message	iomux_verifyfailed

10

	ldr	r3, [r5]
	tsts	r3, #iomux_errorbit
	beq	%FT20

	write_message	iomux_modelerror

	mov	r3, #0
	str	r3, [r5]

20

	MEND

	EXPORT	iomux_test
iomux_test
; Test begins

; Setup some registers
	MOV	R13,LR					; Save LR for return later
	write_message	iomux_testbegin_message

	LDR	R1,=testpattern

; Setup relevent registers for A,C,E,F tests
IOMUX_ACEF_SETUP
	LDR	R2,=iotcr			; Point to IOTCR
	MOV	R3,#0
	STR	R3,[R2]					; Clear IOTCR

	iomux_testcase	iomux_start_devsel0_300, &03000000, &88000004
	iomux_testcase	iomux_start_devsel0_303, &03030000, &88000004
	iomux_testcase	iomux_start_devsel1,     &03010000, &88000008
	iomux_testcase	iomux_start_devsel2,	 &03012000, &8800000C
	iomux_testcase	iomux_start_devsel2_tc,  &0302A000, &8800000C
	iomux_testcase	iomux_start_devsel3,	 &0302B000, &88000010
	iomux_testcase	iomux_start_devsel4,	 &0302C000, &88000014
	iomux_testcase	iomux_start_devsel5,	 &03240000, &88000018, halfword
	iomux_testcase	iomux_start_devsel6,	 &03800000, &8800001C
	iomux_testcase	iomux_start_devsel7,	 &03900000, &88000020


; Get out
IOMUX_END
	write_message	iomux_testend_message		; Test Ends

	MOV	PC,R13					; Return



iomux_testbegin_message
	DCB	"TUBE:IOMUX Tests BEGIN",&0

iomux_verifyfalse_message
	DCB	"TUBE:IOMUX Verify FAILED: Data was false"
	DCB	CONTINUE_AFTER_ERROR, 0
iomux_verifyinequality_message
	DCB	"TUBE:IOMUX Verify FAILED: But iomux_ErrorRegister flagged No Error!"
	DCB	CONTINUE_AFTER_ERROR, 0
iomux_failbitinequality_message
	DCB	"TUBE:IOMUX Verify SUCCESSFUL: But iomux_ErrorRegister flagged FAILURE!"
	DCB	CONTINUE_AFTER_ERROR, 0

iomux_testpass_message
	DCB	"TUBE:IOMUX Tests PASSED",&0

iomux_testend_message
	DCB	"TUBE:IOMUX Test END",&0

	ALIGN

testpattern	*	&12345678			; Arbitrary test pattern
iomux_errorbit	*	&80000000			; io_model error register fail flag

iomux_cyclea_addr	*	&08010000		; Cycletype A base - cycles C-F offset from here
iomux_cycled_addr	*	&03800030

iomux_cycleacef_error_register	*	&88000024	; Cycletypes A-F error report register base
iomux_cycledg_error_register	*	&8800001C	; Cycletype D,G error report register base


; ECTCR register contents for cycle types A,C,E,F

IOMUX_ECTCR_CYCACEF
	DCD	&0
	DCD	&01
	DCD	&0200
	DCD	&0300

; ECTCR register contents for cycle types D + G

IOMUX_ECTCR_CYCDG
	DCD	&3000
	DCD	&0000

; Access address table for devsel signals

IOMUX_DEVSEL_ACCESS
	DCD	&03000000
	DCD	&03030000
	DCD	&03010000
	DCD	&03012000
	DCD	&0301A000
	DCD	&0302B000
	DCD	&0302C000
	DCD	&03210000
	DCD	&03800000
	DCD	&03900000

; Error registers for devsel signals

IOMUX_DEVSEL_ERRORREG
	DCD	&0303C004
	DCD	&0303C004
	DCD	&0303C008
	DCD	&0303C00C
	DCD	&0303C00C
	DCD	&0303C010
	DCD	&0303C014
	DCD	&0303C018
	DCD	&0303C01C
	DCD	&0303C020



	END



