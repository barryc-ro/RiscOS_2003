; codec.s
;
; Code for initialising the sound codec


podule                   * &0302c000
pnp_addr_port            * ((4 * &279) :OR: podule)
pnp_write_port           * ((4 * &a79) :OR: podule)
pnp_read_port_isa        * &300
pnp_read_port            * ((4 * (pnp_read_port_isa + 3)) :OR: podule)
card_csn                 * &01

pnp_set_read_port        * &00
pnp_isolate              * &01
pnp_conf_cntrl           * &02
pnp_wake                 * &03
pnp_csn                  * &06
pnp_log_dev              * &07
pnp_activate             * &30

io_port_base_desc_0_high * &60
io_port_base_desc_0_low  * &61
io_port_base_desc_1_high * &62
io_port_base_desc_1_low  * &63
io_port_base_desc_2_high * &64
io_port_base_desc_2_low  * &65
irq_req_desc_0           * &70
irq_type_desc_0          * &71
dma_chan_desc_0          * &74
dma_chan_desc_1          * &75

SBPro_addr               * &220
Adlib_addr               * &388
Codec_addr               * &100
Codec_irq                * &05
Codec_irq_type           * &02
Codec_dma_play           * &01
Codec_dma_rec            * &04

ssbase                   * podule + &400


; *****************************************************************************
; Codec_Initialise
;
; Initialise CODEC chip:
;   - Go through plug 'n' play protocol (pnp)
;   - Setup various CODEC registers necessary to read button states
;
; In:  nothing
; Out: all registers preserved
;

Code_TESTCODEC ROUT        

        BL      UARTVString
        =       "  Trying to find codec...", CR, LF, 0

        LDR     r4, =pnp_addr_port        ; we'll use r4 for the address port
        LDR     r5, =pnp_write_port       ; and r5 for the write port

; See if card 1 exists and if so, reset it.

        ; Clear LFSR, send LFSR key and wake card 1 (if it exists)
        MOV     r6, #1
        BL      Codec_Wake
        
        ; Reset already configured card
        MOV     r0, #pnp_conf_cntrl
        STR     r0, [r4]
        MOV     r0, #&07
        STR     r0, [r5]

; Now do the plug and play stuff to locate the CODEC and call it card 1

        ; Clear LFSR, send LFSR key and wake card 0 (all non-configured)
        MOV     r6, #0
        BL      Codec_Wake
                
        ; Set read port
        LDR     r0, =pnp_set_read_port
        STR     r0, [r4]
        MOV     r0, #(pnp_read_port_isa / 4)
        STR     r0, [r5]
        
        ; Send isolate command
        MOV     r0, #pnp_isolate
        STR     r0, [r4]
        
        ; Read isolation sequence
        LDR     r6, =pnp_read_port
        MOV     r7, #0
        MOV     r3, #72                   ; 72 pairs

20      MOV     r0, #(250 * 2)            ; wait for 250us
        MOV     r2, #IOC
        BL      DoMicroDelay
        
        LDR     r0, [r6]                  ; read first byte
        AND     r0, r0, #&FF
        LDR     r1, [r6]                  ; read second byte
        AND     r1, r1, #&FF
        CMP     r0, #&55                  ; if first = &55
        CMPEQ   r1, #&AA                  ; ... and second = &AA, then... 
        MOVEQ   r7, #1                    ; set r7 to say we've got the card
        SUB     r3, r3, #1
        CMP     r3, #0
        BNE     %BT20
        
        ; Did we find the card?
        CMP     r7, #1
        BNE     %FT50
        
        ; Now write rest of setup registers
        ADRL    r1, pnpdata
        ADRL    r2, pnpdataend        
30      LDRB    r0, [r1], #1
        STR     r0, [r4]
        LDRB    r0, [r1], #1
        STR     r0, [r5]
        CMP     r1, r2
        BLT     %BT30
                
40      ; All complete - return
        BL      UARTVString
        =       "  Codec found...", CR, LF, 0
        B       %FT60

50      ; Couldn't find card
        BL      UARTVString
        =       "  *** WARNING: Couldn't find codec...", CR, LF, 0

        SetMode FIQ32_mode, r0
        ADD     r11, r11, #1
        SetMode SVC32_mode, r0
        
60      B       InteractiveDebug

        LTORG


; *****************************************************************************
; Codec_DoLFSR
;
; Clear LFSR, then send LFSR key, then wake specified card
;
; In:  r4 = pnp_address_port
;      r5 = pnp_write_port
;      r6 = card number to wake
;
; Out: All registers preserved.

Codec_Wake

        ; Clear LFSR, then send initiation key
        ADR     r1, keydata
        ADRL    r2, keydataend
10      LDRB    r0, [r1], #1
        STR     r0, [r4]
        CMP     r1, r2
        BLT     %BT10

        ; Wake
        MOV     r0, #pnp_wake
        STR     r0, [r4]
        STR     r6, [r5]

        MOV     pc, lr
        


; *****************************************************************************

keydata DCB     &00, &00                  ; Clear LFSR
        DCB     &6a, &b5, &da, &ed        ; LFSR key
        DCB     &f6, &fb, &7d, &be
        DCB     &df, &6f, &37, &1b
        DCB     &0d, &86, &c3, &61
        DCB     &b0, &58, &2c, &16
        DCB     &8b, &45, &a2, &d1
        DCB     &e8, &74, &3a, &9d
        DCB     &ce, &e7, &73, &39
keydataend

pnpdata DCB     pnp_csn                   ; Set CSN
        DCB     card_csn
        DCB     pnp_wake                  ; Put card into config mode
        DCB     card_csn
        DCB     pnp_log_dev               ; Set first logical device number
        DCB     0
        DCB     io_port_base_desc_0_high  ; SB Pro address
        DCB     SBPro_addr>>8
        DCB     io_port_base_desc_0_low
        DCB     SBPro_addr :AND: &ff
        DCB     io_port_base_desc_1_high  ; Adlib (FM) address
        DCB     Adlib_addr>>8
        DCB     io_port_base_desc_1_low
        DCB     Adlib_addr :AND: &ff
        DCB     io_port_base_desc_2_high  ; Codec addr
        DCB     Codec_addr>>8
        DCB     io_port_base_desc_2_low
        DCB     Codec_addr :AND: &ff
        DCB     irq_req_desc_0            ; Codec/SBPro IRQ
        DCB     Codec_irq
        DCB     irq_type_desc_0
        DCB     Codec_irq_type
        DCB     dma_chan_desc_0           ; DMA channel (playback)
        DCB     Codec_dma_play
        DCB     dma_chan_desc_1           ; DMA channel (record)
        DCB     Codec_dma_rec
        DCB     pnp_activate              ; Turn on the logical device
        DCB     01
pnpdataend        

        END
