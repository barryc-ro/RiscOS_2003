#!/usr/local/bin/perl
package perlfind;
$usage="Usage: $0 [-a] [-d <debug>] <dir> <expr> <args>\n";
while($ARGV[0]=~/^-/) {
  $arg=shift @ARGV;
  if ($arg eq '--') {
    last;
  } elsif ($arg eq '-a') {
    $after=1;
  } elsif ($arg eq '-d') {
    $debug=shift @ARGV;
  } else {
    die("$0: Unknown option '$arg'\n");
  };
};
sub failed {
  die "$0: Failed $_[0]: $!\n";
};
if($#ARGV<1) {
  die$usage;
};
$dir=shift @ARGV;
$expr=shift @ARGV;
# Create a subroutine for the expression, so we don't have to compile it
# for every file.
package main;
$perlfind::fun=eval "sub {$perlfind::expr}";
die("$0: expr: $@\n") if $@ ne '';
package perlfind;
@stack=('');
while(defined($name=pop @stack)) {
  # Call function for directory just before it's members
  $empty=1;
  if(!$after) {
    $_="$dir$name";
    &$fun(1);
  };
  print "Dealing with $dir$name\n" if $debug&1;
  opendir(DIR,"$dir$name")||
    failed("open($dir$name)");
  while(defined($entry=readdir(DIR))) {
    print "Got entry '$entry'\n" if $debug&4;
    if($entry!~/^\.{1,2}$/) {
      $empty=0;
      if(-d "$dir$name/$entry") {
	push @stack,"$name/$entry";
      } else {
	$_="$dir$name/$entry";
	&$fun(0); # Don't you think so?
      };
    };
  };
  closedir(DIR);
  if($after) {
    $_="$dir$name";
    &$fun(1);
  };
  print "Done with $dir$name\n" if $debug&2;
};
