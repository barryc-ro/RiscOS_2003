
CD 2503,115 Issue ${SysAutoBuildProject$DOIssNumber}


This CD contains the build tree and sources for the Release ${SysAutoBuild$ReleaseNumber} version
of the main OS software stack for the Martha Internet Access Card.

The build produces a ROM image in the Images directory.

	These sources must be built on a RISC PC using the instructions
below. It is advised that you read all the instructions before attempting a
build.

	Note that it is important !SparkFS has not been run before you
attempt to dearchive anything. !SparkFS interferes with the tar application
and can cause problems whilst dearchiving and verifying CRC's.

	Also note that the applcation !X-Files needs to be seen by the filer
before you attemot a build, as the build component CtrlsModem requires it.
!X-Files can be found in the archive XFile in the Tools directory.


Instructions for Building ROM image
-----------------------------------

1.
	The first step in building the ROM image is to copy the required
tools into the correct place on the build machine. More details of how to
achieve this can be found in the !ReadMe file that is in the 'Tools'
directory.
	You can check whether the tools are correct or not by pressing F12 to
bring up the command line and typing 'tar'. This should produce a screen
which states near the bottom 'RISC OS tar [1.2b] (Mar 31 1995). If nothing
appears, or the version is different, then the library path is incorrectly
set.
	Likewise the FileCRC file can be checked by typing 'Filecrc' at the
command line. This should state that it is V2.21. Anything different means
that  an older/incompatible version is present somewhere in the library path.
	The correct version of the TarExtend utility is 0.03.

2. 
	The build is stored on the CD as a tar archive called MarthaArc in the
DR directory. This archive comprises of a tarfile which has had several
filenames altered to allow the structure to fit within tar's 100-character
limitation. The details of these changes can be found in the file DR/manual

	Therefore you dearchive the MarthaArc archive and rename the
appropriate files to obtain a working build image.

	Double-click on the file 'SetSysV' in the 'Tools' directory on the
device which holds the archive. This sets a system variable which informs the
'dearc' script where the archive and the toold can be found.

	There is an obey file called 'DeArc' in the tools directory on the CD
which can be used to automate this process. Just move the DeArc file from the
Tools directory to the directory on a hard disc that you wish the build to be
dearchived to and double click on it. A logfile of the tar extraction will be
produced in a file 'unarclist' in the same directory as the 'Dearc' obey
file.

	Also note that in order to build the build then it would be best if
it were rooted as far down the disc structure as possible, preferably in the
root directory. This is because the mechanism !Builder uses to build a build
relies on the command line, and if the build is rooted too far down a disc
structure it can cause problems when building certain components (eg.
OSversion).

	It is necessary that the applications !X-Files and !Perl have been
seen by the filer before you run the script. If you do not, them the final
FileCRC check will give out an error for any directories which have been
created using !X-Files, and the part of the dearchival process that relies on
!Perl will fail.

	To decompress an archive use tar -xvf <archive>, e.g. tar -xvf Beta2

	If you wish to perform this manually, the process can be summed up as
follows:
	a. Copy the archive file from the CD onto a local hard disc.
	b. Copy the DeArc obey file from the Tools directory on the CD into
            the same directory as the archive.
        c. Double click on the 'DeArc' obey file. This will dearchive the
            sources into a directory called 'Martha'.

3.
	Open the decompressed build directory 'Martha' and carry out the
remaining instructions.

4.
	Double-click on the !Builder Application. When !Builder starts, you
may get an error appear stating that it cannot locate a file. Ignore this
error; it occurs because the !Builder has been copied straight off the build
machine and expects certain resources (eg. the build tree) to be present at
the location that they were in on the build machine.
	Menu-Click on the !Builder icon in the icon bar and select register
build tree. Drop your build tree directory ('Martha' in this case) into the
window as requested by !Builder.

5.
	Click on the !Builder icon on the icon bar.  Select your build
directory and Environment.
	A list of available builds is outlined below :
	 * Martha.  Build specifically tailored for the Alba 2 Internet
	   Access Card.

6.
	You can now tick the checkboxes as follows and build your ROM image:

	* List - List the files in the build.
	* Clean - Clean all source directories.  Note that the Export
          directory does not get cleaned; if in doubt delete its contents.
	* Export Headers - Exports shared header files to Export.Hdr.
	* Export Libraries - Exports Libraries to Export.Lib.
	* Export Resources - Resources are exported to several directories
          within Sources.Internat.
	* Make ROM - Builds the individual component files.
	* Install ROM - Gathers the individual Object files into the install
          directory.
	* Join - Build the final image.

	To create a new clean build tick all the checkboxes. Note that the
Export directory does NOT get cleaned automatically so it is advisable to
delete the contents of this directory (the C, Hdr and Lib directories will be
recreated by the export phase). The build will take up to three hours on a
StrongARM RiscPC. A task window will display details of the build progress.
	Completed build images appear in the Images directory with a unique
file name.

	It is best if a full clean build is performed at regular intervals.
However, this does take a great deal of time for a full 8MB build (up to 
three hours), and therefore should only be done when there is time.

---
${SysBuild$Date}
