Echo
Echo ======================================================
Echo Performing Release LazOUK specific things...
Echo ======================================================
Echo

Echo In project Lazarus, all we do is copy over the release note and ReadMe
Echo  files over the ones that come from the template.

Echo
Echo It searches through these two files and replaces tokens with ones set in
Echo  system variables. This allows files to be altered in simple ways
Echo  without buildmaster invention.

Echo
Echo Currently recognised tags are :
Echo ${Release} (the release number);
Echo ${BuildMaster} (the buildmaster's email address); 
Echo ${BuildDate} (The date that the build was performed).
Echo ${BuildImageName} (The name of the image that was produced from this source tree).
Echo ${CPUType} (The CPU type that was on the build machine)
Echo ${OSVersion} (The OS Version running on the build machine)
Echo ${DRAMSize} (The amount of DRAM in the build machine)
Echo ${VRAMSize} (The amount of VRAM in the build machine)


|
| Create the 'Altered' directory if not already there.
Set AutoBuild$TempAlterationsDir <obey$dir>.Altered
show <AutoBuild$TempAlterationsDir>
Ifthere <AutoBuild$TempAlterationsDir> Then Echo Else mkdir <AutoBuild$TempAlterationsDir>

|
| Get the system information...
do <AutoBuildBin$Dir>.CPU+Mem


|
| Now perform SED operations on the files...
| Replace the buildmaster tag.
*do sed -e "s/$\{BuildMaster\}/<AutoBuild$BuildMaster>" <AutoBuild$Dir>.Package.Projects.<AutoBuild$EnvName>.Originals.!README > <AutoBuild$TempAlterationsDir>.!ReadMe
*do sed -e "s/$\{BuildMaster\}/<AutoBuild$BuildMaster>" <AutoBuild$Dir>.Package.Projects.<AutoBuild$EnvName>.Originals.HowBuild > <AutoBuild$TempAlterationsDir>.HowBuild

| Replace the build date tag.
*do sed -e "s/$\{BuildDate\}/<Build$Date>" <AutoBuild$TempAlterationsDir>.!ReadMe > <AutoBuild$TempAlterationsDir>.!ReadMe2
*do sed -e "s/$\{BuildDate\}/<Build$Date>" <AutoBuild$TempAlterationsDir>.HowBuild > <AutoBuild$TempAlterationsDir>.HowBuild2

| Replace the issue number tag.
*do sed -e "s/$\{Release\}/<AutoBuild$ReleaseNumber>" <AutoBuild$TempAlterationsDir>.!ReadMe2 > <AutoBuild$TempAlterationsDir>.!ReadMe3
*do sed -e "s/$\{Release\}/<AutoBuild$ReleaseNumber>" <AutoBuild$TempAlterationsDir>.HowBuild2 > <AutoBuild$TempAlterationsDir>.HowBuild3

| Replace the image name tag.
do sed -e "s/$\{BuildImageName\}/<Build$ImageName>" <AutoBuild$TempAlterationsDir>.!ReadMe3 > <AutoBuild$TempAlterationsDir>.!ReadMe
do sed -e "s/$\{BuildImageName\}/<Build$ImageName>" <AutoBuild$TempAlterationsDir>.HowBuild3 > <AutoBuild$TempAlterationsDir>.HowBuild

| Replace the CPU-type tag.
do sed -e "s/$\{CPUType\}/<SystemInfo$CPUType>" <AutoBuild$TempAlterationsDir>.!ReadMe > <AutoBuild$TempAlterationsDir>.!ReadMe2
do sed -e "s/$\{CPUType\}/<SystemInfo$CPUType>" <AutoBuild$TempAlterationsDir>.HowBuild > <AutoBuild$TempAlterationsDir>.HowBuild2

| Replace the OS Version tag.
do sed -e "s/$\{OSVersion\}/<SystemInfo$OSVersion>" <AutoBuild$TempAlterationsDir>.!ReadMe2 > <AutoBuild$TempAlterationsDir>.!ReadMe3
do sed -e "s/$\{OSVersion\}/<SystemInfo$OSVersion>" <AutoBuild$TempAlterationsDir>.HowBuild2 > <AutoBuild$TempAlterationsDir>.HowBuild3

| Replace the VRAM size tag.
do sed -e "s/$\{DRAMSize\}/<SystemInfo$DRAMSize>" <AutoBuild$TempAlterationsDir>.!ReadMe3 > <AutoBuild$TempAlterationsDir>.!ReadMe2
do sed -e "s/$\{DRAMSize\}/<SystemInfo$DRAMSize>" <AutoBuild$TempAlterationsDir>.HowBuild3 > <AutoBuild$TempAlterationsDir>.HowBuild2

| Replace the VRAM size tag.
do sed -e "s/$\{VRAMSize\}/<SystemInfo$VRAMSize>" <AutoBuild$TempAlterationsDir>.!ReadMe2 > <AutoBuild$TempAlterationsDir>.!ReadMe
do sed -e "s/$\{VRAMSize\}/<SystemInfo$VRAMSize>" <AutoBuild$TempAlterationsDir>.HowBuild2 > <AutoBuild$TempAlterationsDir>.HowBuild


|
| Now copy the files over to their proper location in the CD structure.
do copy <AutoBuild$TempAlterationsDir>.HowBuild <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.ReadMe.HowBuild ~CF~V
do copy <AutoBuild$TempAlterationsDir>.!ReadMe <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.ReadMe.!ReadMe ~CF~V

| Open the altered files. Hopefully this will make people actually read them.
Filer_Run <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.ReadMe.HowBuild
Filer_Run <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.ReadMe.!ReadMe


|
| Tidy up.
remove <AutoBuild$TempAlterationsDir>.!ReadMe
remove <AutoBuild$TempAlterationsDir>.!ReadMe2
remove <AutoBuild$TempAlterationsDir>.!ReadMe3
remove <AutoBuild$TempAlterationsDir>.HowBuild
remove <AutoBuild$TempAlterationsDir>.HowBuild2
remove <AutoBuild$TempAlterationsDir>.HowBuild3


|
| Remove a few unnecessary template bits from the CD...
| Remove the 'stub' sources archive 
remove <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.DR.0307GTAR
| On Lazarus projects we are releasing the CD minus the SWIMAGE directory. Remove this.
IfThere <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.SWIMAGE Then wipe <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.SWIMAGE ~CFR~V Else Echo No SWIMAGE directory in the CD structure to delete.


|
| Now generate the ISOForm image (he he - this is getting *really* silly. I
|  wonder what else I could automatically do... ;*)
dir <AutoBuild$CDArchivePath>
do <AutoBuildBin$Dir>.ISOForm -root <AutoBuild$ReleaseName> -tofile Q2208673<AutoBuild$ReleaseNumber> -volid Q2208673<AutoBuild$ReleaseNumber>


Echo
Echo ======================================================
Echo Finished Release LazOUK specific things...
Echo ======================================================
Echo
