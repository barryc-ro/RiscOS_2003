Echo
Echo ======================================================
Echo Performing Release Fun5JP specific things...
Echo ======================================================
Echo

Echo In project Funai5, all we do is copy over the release note and ReadMe
Echo  files over the ones that come from the template.

Echo
Echo It searches through these two files and replaces tokens with ones set in
Echo  system variables. This allows files to be altered in simple ways
Echo  without buildmaster invention.

Echo
Echo Currently recognised tags are :
Echo ${Release} (the release number);
Echo ${BuildMaster} (the buildmaster's email address); 
Echo ${BuildDate} (The date that the build was performed).
Echo ${BuildImageName} (The name of the image that was produced from this source tree).
Echo ${CPUType} (The CPU type that was on the build machine)
Echo ${OSVersion} (The OS Version running on the build machine)
Echo ${DRAMSize} (The amount of DRAM in the build machine)
Echo ${VRAMSize} (The amount of VRAM in the build machine)


|
| Create the 'Altered' directory if not already there.
Set AutoBuild$TempAlterationsDir <obey$dir>.Altered
show <AutoBuild$TempAlterationsDir>
Ifthere <AutoBuild$TempAlterationsDir> Then Echo Else mkdir <AutoBuild$TempAlterationsDir>

|
| Get the system information...
do <AutoBuildBin$Dir>.CPU+Mem



|
| Now create the SIS for the Lazarus main OS image.
| Need to set some system variables...
set AutoBuildProject$DONumber 2205,302
set AutoBuildProject$DOTitle Funai (Ethernet) Prototype OS for Funai hardware.
<obey$dir>.^.GetECO
set AutoBuildProject$DOIssNumber $ENV{$Lazarus_env_ReleaseNum};
Perl <AutoBuildBin$Dir>.CreateSIS <Obey$Dir>.Originals.Fun5SIS <AutoBuild$TempAlterationsDir>.Fun5SIS




|
| Now perform SED operations on the !ReadMe and HowBuild files...
Perl <AutoBuildBin$Dir>.CreateSIS <Obey$Dir>.Originals.!ReadMe <AutoBuild$TempAlterationsDir>.!ReadMe
Perl <AutoBuildBin$Dir>.CreateSIS <Obey$Dir>.Originals.HowBuild <AutoBuild$TempAlterationsDir>.HowBuild



|
| Now copy the files over to their proper location in the CD structure.
do copy <AutoBuild$TempAlterationsDir>.HowBuild <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.ReadMe.HowBuild ~CF~V
do copy <AutoBuild$TempAlterationsDir>.!ReadMe <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.ReadMe.!ReadMe ~CF~V

| Copy the SIS's over into their own directory in the image repository directory.
mkdir <AutoBuild$ImageRepositoryDir>.<Build$ImageName>.SIS
settype <AutoBuild$TempAlterationsDir>.Fun5SIS FAF
do copy <AutoBuild$TempAlterationsDir>.Fun5SIS <AutoBuild$ImageRepositoryDir>.<Build$ImageName>.SIS.Fun5SIS ~CF~V

| Open the altered files. Hopefully this will make people actually read them.
Filer_Run <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.ReadMe.HowBuild
Filer_Run <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.ReadMe.!ReadMe


|
| Tidy up - remove temporary files.
remove <AutoBuild$TempAlterationsDir>.!ReadMe
remove <AutoBuild$TempAlterationsDir>.HowBuild
remove <AutoBuild$TempAlterationsDir>.Fun5SIS

|
| Remove a few unnecessary template bits from the CD...
| Remove the 'stub' sources archive 
ifthere <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.DR.0307GTAR then remove <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.DR.0307GTAR
| On Lazarus projects we are releasing the CD minus some of the items in the SWIMAGE directory. Remove the unwanted items.
ifthere <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.SWIMAGE.RelNote then wipe <AutoBuild$CDArchivePath>.<AutoBuild$ReleaseName>.SWIMAGE.RelNote ~CFR~V


|
| Now generate the ISOForm image (he he - this is getting *really* silly. I
|  wonder what else I could automatically do... ;*)
dir <AutoBuild$CDArchivePath>
do <AutoBuildBin$Dir>.ISOForm -root <AutoBuild$ReleaseName> -tofile Q2205302<AutoBuildProject$DOIssNumber> -volid Q2205302<AutoBuildProject$DOIssNumber>



Echo
Echo ======================================================
Echo Finished Release Fun5JP specific things...
Echo ======================================================
Echo
