
General
=======

CD 2208,673 Release ${Release}

	The CD contains an archive of a build produced for the Lazarus
project. This release corresponds to release ${Release}of the Lazarus software
stack for NC1 hardware.The image name produced from this source tree was
${BuildImageName}.
	It was built on a machine with the following specification:
	CPU:		${CPUType}	
	OS Version:	${OSVersion}
	DRAM size:	${DRAMSize}
	VRAM size:	${VRAMSize}


CD Contents
===========

	This CD is split into four main sections:

* CRCs
	This directory contains two textfiles, one of which contains the CRC
for the unarchived sources and one other for the archived sources. These are
used by the dearchival script to check the validity of the archive.
	Files:
	* arcCRC. The CRC for the archive
	* SourcCRC. The CRC for the unarchived sources.

* DR
	This directory contains the build archive.
	Files:
	* arclist. A list of all the files in the main (root) archive.
	* LazOarc. The main archive.
	* manual. A textfile explaining the changes done to the source tree
to fit it within tar's 100-character limitation.

* ReadMe
	This directory contains this file and the build instructions.
	Files:
	* !ReadMe. This file.
	* HowBuild. In depth build instructions.

* Tools
	This contains all the tools needed to dearchive the build and
associated items.
	Files:
	* !ReadMe. Instructions on how to dearchive the tools ready for use.
	* Arc. The file used to archive up the build tree.
	* DeArc. This obey file can be used to automatically dearchive the
build. Drag it onto a hard disc in the same directory as the build and double
click on it. For more extensive details, see the file ReadMe.HowBuild.
	* Extract. this file can be used to automatically extarct the 'PERL'
and 'XFILES' tarfiles.
	* Filecmp. A Perl script that can be used to compare two tar output
fils for differences.
	* FileCRC. This is the application required to generate the CRC's
which verify the archive and build. 
	* PerlArc. A tarfile that contains the !Perl application.
	* SetSysV. A script that informs the 'dearc' script where the archive
can be found.
	* tar. This is the main application used to archive and dearchive
this build. Please use this version of tar rather than any other you may
have floating about.
	* TarExt. The utility that was used to produce the archiver and
dearchiver scripts.
	* Xfiles. A tarfile that contains the application !X-Files, which is
needed by some build components. To dearchive it, move in the CLI to it's
directory and type tar -xfv Xfiles


---

${BuildMaster}  ${BuildDate}
